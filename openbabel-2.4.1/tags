!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	include/openbabel/kinetics.h	/^  enum rate_type {A, n, E};$/;"	e	enum:OpenBabel::OBRateData::rate_type
A	include/openbabel/residue.h	/^      A     = 24,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
A	src/charges/eem.cpp	/^    double A;$/;"	m	struct:OpenBabel::EEMParameter	file:
AATG_MARK_IN_PATH	include/inchi/ichi_bns.h	298;"	d
AATG_MARK_MAIN_TYPE	include/inchi/ichi_bns.h	301;"	d
AATG_MARK_OTHER_TYPE	include/inchi/ichi_bns.h	302;"	d
AATG_MARK_WAS_IN_PATH	include/inchi/ichi_bns.h	299;"	d
AAU	src/formats/turbomoleformat.cpp	/^const double AAU = 0.5291772108;  \/\/ Ångström per bohr (CODATA 2002)$/;"	v
AA_ALA	include/openbabel/residue.h	199;"	d
AA_ANY_O_Minus	src/formats/libinchi/ichi_bns.c	194;"	d	file:
AA_ARG	include/openbabel/residue.h	211;"	d
AA_ASN	include/openbabel/residue.h	208;"	d
AA_ASP	include/openbabel/residue.h	206;"	d
AA_CYS	include/openbabel/residue.h	216;"	d
AA_GLN	include/openbabel/residue.h	213;"	d
AA_GLU	include/openbabel/residue.h	209;"	d
AA_GLY	include/openbabel/residue.h	200;"	d
AA_HARD_MSK_CO	src/formats/libinchi/ichi_bns.c	248;"	d	file:
AA_HARD_MSK_H	src/formats/libinchi/ichi_bns.c	251;"	d	file:
AA_HARD_MSK_NEG	src/formats/libinchi/ichi_bns.c	245;"	d	file:
AA_HARD_MSK_POS	src/formats/libinchi/ichi_bns.c	242;"	d	file:
AA_HARD_TYP_CO	src/formats/libinchi/ichi_bns.c	249;"	d	file:
AA_HARD_TYP_H	src/formats/libinchi/ichi_bns.c	252;"	d	file:
AA_HARD_TYP_NEG	src/formats/libinchi/ichi_bns.c	246;"	d	file:
AA_HARD_TYP_POS	src/formats/libinchi/ichi_bns.c	243;"	d	file:
AA_HIS	include/openbabel/residue.h	215;"	d
AA_ILE	include/openbabel/residue.h	207;"	d
AA_LEU	include/openbabel/residue.h	201;"	d
AA_LYS	include/openbabel/residue.h	205;"	d
AA_MET	include/openbabel/residue.h	217;"	d
AA_PHE	include/openbabel/residue.h	212;"	d
AA_PRO	include/openbabel/residue.h	210;"	d
AA_SER	include/openbabel/residue.h	202;"	d
AA_SIMPLE_MSK1	src/formats/libinchi/ichi_bns.c	197;"	d	file:
AA_SIMPLE_MSK2	src/formats/libinchi/ichi_bns.c	200;"	d	file:
AA_SIMPLE_MSK3	src/formats/libinchi/ichi_bns.c	203;"	d	file:
AA_SIMPLE_MSK4	src/formats/libinchi/ichi_bns.c	210;"	d	file:
AA_SIMPLE_STEPS	src/formats/libinchi/ichi_bns.c	195;"	d	file:
AA_SIMPLE_STEPS	src/formats/libinchi/ichi_bns.c	208;"	d	file:
AA_SIMPLE_STEPS	src/formats/libinchi/ichi_bns.c	209;"	d	file:
AA_SIMPLE_TYP1	src/formats/libinchi/ichi_bns.c	198;"	d	file:
AA_SIMPLE_TYP2	src/formats/libinchi/ichi_bns.c	201;"	d	file:
AA_SIMPLE_TYP3	src/formats/libinchi/ichi_bns.c	204;"	d	file:
AA_SIMPLE_TYP4	src/formats/libinchi/ichi_bns.c	211;"	d	file:
AA_THR	include/openbabel/residue.h	204;"	d
AA_TRP	include/openbabel/residue.h	218;"	d
AA_TYR	include/openbabel/residue.h	214;"	d
AA_VAL	include/openbabel/residue.h	203;"	d
ABC_CT_NUM_CLOSURES	include/inchi/mode.h	495;"	d
ABINITFormat	src/formats/abinitformat.cpp	/^    ABINITFormat()$/;"	f	class:OpenBabel::ABINITFormat
ABINITFormat	src/formats/abinitformat.cpp	/^  class ABINITFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ABNORMAL_AT	src/formats/libinchi/strutil.c	3831;"	d	file:
ABNORMAL_CHG	src/formats/libinchi/strutil.c	3818;"	d	file:
ABNORMAL_ISO	src/formats/libinchi/strutil.c	3817;"	d	file:
ABNORMAL_RAD	src/formats/libinchi/strutil.c	3819;"	d	file:
AB_INV_PARITY_BITS	include/inchi/extr_ct.h	235;"	d
AB_MAX_ANY_PARITY	include/inchi/extr_ct.h	250;"	d
AB_MAX_ILL_DEFINED_PARITY	include/inchi/extr_ct.h	248;"	d
AB_MAX_KNOWN_PARITY	include/inchi/extr_ct.h	238;"	d
AB_MAX_PART_DEFINED_PARITY	include/inchi/extr_ct.h	241;"	d
AB_MAX_WELL_DEFINED_PARITY	include/inchi/aux2atom.h	2535;"	d
AB_MAX_WELL_DEFINED_PARITY	include/inchi/aux2atom.h	53;"	d
AB_MAX_WELL_DEFINED_PARITY	include/inchi/extr_ct.h	244;"	d
AB_MIN_ANY_PARITY	include/inchi/extr_ct.h	251;"	d
AB_MIN_ILL_DEFINED_PARITY	include/inchi/extr_ct.h	247;"	d
AB_MIN_KNOWN_PARITY	include/inchi/extr_ct.h	239;"	d
AB_MIN_PART_DEFINED_PARITY	include/inchi/extr_ct.h	242;"	d
AB_MIN_WELL_DEFINED_PARITY	include/inchi/aux2atom.h	2536;"	d
AB_MIN_WELL_DEFINED_PARITY	include/inchi/aux2atom.h	54;"	d
AB_MIN_WELL_DEFINED_PARITY	include/inchi/extr_ct.h	245;"	d
AB_NEGATIVE	src/formats/libinchi/ichister.c	2298;"	d	file:
AB_NEGATIVE	src/formats/libinchi/ichister.c	2375;"	d	file:
AB_PARITY_0D	include/inchi/extr_ct.h	233;"	d
AB_PARITY_CALC	include/inchi/extr_ct.h	232;"	d
AB_PARITY_EVEN	include/inchi/extr_ct.h	228;"	d
AB_PARITY_IISO	include/inchi/extr_ct.h	231;"	d
AB_PARITY_NONE	include/inchi/extr_ct.h	226;"	d
AB_PARITY_ODD	include/inchi/extr_ct.h	227;"	d
AB_PARITY_UNDF	include/inchi/extr_ct.h	230;"	d
AB_PARITY_UNKN	include/inchi/extr_ct.h	229;"	d
AB_UNKNOWN	src/formats/libinchi/ichister.c	2299;"	d	file:
AB_UNKNOWN	src/formats/libinchi/ichister.c	2376;"	d	file:
ACCEPTOR_PAIR	src/formats/libinchi/ichitaut.c	2079;"	d	file:
ACE	include/openbabel/residue.h	/^      ACE   = 44,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
ACIDIC	include/openbabel/residue.h	/^      ACIDIC      =  0,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
ACRFormat	src/formats/acrformat.cpp	/^    ACRFormat()$/;"	f	class:OpenBabel::ACRFormat
ACRFormat	src/formats/acrformat.cpp	/^  class ACRFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ACTUAL_ORDER	include/inchi/extr_ct.h	208;"	d
ACTUAL_ORDER	src/formats/libinchi/ichitaut.c	3241;"	d	file:
ACYCLIC	include/openbabel/residue.h	/^      ACYCLIC     =  1,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
ADD_6MEMB_AROM_BOND_PARITY	include/inchi/mode.h	742;"	d
ADD_6MEMB_AROM_BOND_PARITY	include/inchi/mode.h	746;"	d
ADD_6MEMB_AROM_BOND_PARITY	include/inchi/mode.h	770;"	d
ADD_6MEMB_AROM_BOND_PARITY	include/inchi/mode.h	771;"	d
ADD_CAPACITY_RADICAL	include/inchi/ichi_bns.h	147;"	d
ADD_CMLPP	include/inchi/mode.h	116;"	d
ADD_ChCh_STEREO_CANON_CHK	include/inchi/mode.h	281;"	d
ADD_EXPLICIT_HYDROGEN_NEIGH	src/formats/libinchi/ichister.c	3016;"	d	file:
ADD_EXPLICIT_HYDROGEN_NEIGH	src/formats/libinchi/ichister.c	3471;"	d	file:
ADD_EXPLICIT_LONE_PAIR_NEIGH	src/formats/libinchi/ichister.c	3017;"	d	file:
ADD_EXPLICIT_LONE_PAIR_NEIGH	src/formats/libinchi/ichister.c	3472;"	d	file:
ADD_LEN_STRUCT_FPTRS	include/inchi/inpdef.h	272;"	d
ADD_LINE_AT	src/formats/libinchi/strutil.c	3835;"	d	file:
ADD_MOVEABLE_O_PLUS	include/inchi/mode.h	418;"	d
ADFInputFormat	src/formats/adfformat.cpp	/^    ADFInputFormat()$/;"	f	class:OpenBabel::ADFInputFormat
ADFInputFormat	src/formats/adfformat.cpp	/^  class ADFInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ADFOutputFormat	src/formats/adfformat.cpp	/^    ADFOutputFormat()$/;"	f	class:OpenBabel::ADFOutputFormat
ADFOutputFormat	src/formats/adfformat.cpp	/^  class ADFOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
AE_ACYCLIC	src/parsmart.cpp	106;"	d	file:
AE_ALIPHATIC	src/parsmart.cpp	104;"	d	file:
AE_ALIPHELEM	src/parsmart.cpp	110;"	d	file:
AE_ANDHI	src/parsmart.cpp	96;"	d	file:
AE_ANDLO	src/parsmart.cpp	97;"	d	file:
AE_AROMATIC	src/parsmart.cpp	103;"	d	file:
AE_AROMELEM	src/parsmart.cpp	109;"	d	file:
AE_Acyclic	src/formats/smiley.h	/^    AE_Acyclic,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_Aliphatic	src/formats/smiley.h	/^    AE_Aliphatic,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_AliphaticElement	src/formats/smiley.h	/^    AE_AliphaticElement,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_Aromatic	src/formats/smiley.h	/^    AE_Aromatic,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_AromaticElement	src/formats/smiley.h	/^    AE_AromaticElement,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_AtomClass	src/formats/smiley.h	/^    AE_AtomClass$/;"	e	enum:Smiley::SmartsAtomExprType
AE_AtomicNumber	src/formats/smiley.h	/^    AE_AtomicNumber,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_CHARGE	src/parsmart.cpp	112;"	d	file:
AE_CHIRAL	src/parsmart.cpp	119;"	d	file:
AE_CONNECT	src/parsmart.cpp	113;"	d	file:
AE_CYCLIC	src/parsmart.cpp	105;"	d	file:
AE_Charge	src/formats/smiley.h	/^    AE_Charge,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_Chirality	src/formats/smiley.h	/^    AE_Chirality,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_Connectivity	src/formats/smiley.h	/^    AE_Connectivity,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_Cyclic	src/formats/smiley.h	/^    AE_Cyclic,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_DEGREE	src/parsmart.cpp	114;"	d	file:
AE_Degree	src/formats/smiley.h	/^    AE_Degree,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_ELEM	src/parsmart.cpp	108;"	d	file:
AE_FALSE	src/parsmart.cpp	102;"	d	file:
AE_False	src/formats/smiley.h	/^    AE_False,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_HCOUNT	src/parsmart.cpp	111;"	d	file:
AE_HYB	src/parsmart.cpp	120;"	d	file:
AE_IMPLICIT	src/parsmart.cpp	115;"	d	file:
AE_ImplicitH	src/formats/smiley.h	/^    AE_ImplicitH,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_Isotope	src/formats/smiley.h	/^    AE_Isotope,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_MASS	src/parsmart.cpp	107;"	d	file:
AE_NOT	src/parsmart.cpp	100;"	d	file:
AE_OR	src/parsmart.cpp	98;"	d	file:
AE_RECUR	src/parsmart.cpp	99;"	d	file:
AE_RINGCONNECT	src/parsmart.cpp	121;"	d	file:
AE_RINGS	src/parsmart.cpp	116;"	d	file:
AE_RingConnectivity	src/formats/smiley.h	/^    AE_RingConnectivity,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_RingMembership	src/formats/smiley.h	/^    AE_RingMembership,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_RingSize	src/formats/smiley.h	/^    AE_RingSize,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_SIZE	src/parsmart.cpp	117;"	d	file:
AE_TRUE	src/parsmart.cpp	101;"	d	file:
AE_TotalH	src/formats/smiley.h	/^    AE_TotalH,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_True	src/formats/smiley.h	/^    AE_True = 8,$/;"	e	enum:Smiley::SmartsAtomExprType
AE_VALENCE	src/parsmart.cpp	118;"	d	file:
AE_Valence	src/formats/smiley.h	/^    AE_Valence,$/;"	e	enum:Smiley::SmartsAtomExprType
AI_C	src/chains.cpp	72;"	d	file:
AI_C1	src/chains.cpp	87;"	d	file:
AI_C2	src/chains.cpp	85;"	d	file:
AI_C3	src/chains.cpp	83;"	d	file:
AI_C4	src/chains.cpp	81;"	d	file:
AI_C5	src/chains.cpp	80;"	d	file:
AI_CA	src/chains.cpp	71;"	d	file:
AI_N	src/chains.cpp	70;"	d	file:
AI_O	src/chains.cpp	73;"	d	file:
AI_O1P	src/chains.cpp	77;"	d	file:
AI_O2	src/chains.cpp	86;"	d	file:
AI_O2P	src/chains.cpp	78;"	d	file:
AI_O3	src/chains.cpp	84;"	d	file:
AI_O4	src/chains.cpp	82;"	d	file:
AI_O5	src/chains.cpp	79;"	d	file:
AI_OXT	src/chains.cpp	74;"	d	file:
AI_P	src/chains.cpp	76;"	d	file:
AL1	src/formats/smiley.h	/^    AL1, AL2,$/;"	e	enum:Smiley::Chirality
AL2	src/formats/smiley.h	/^    AL1, AL2,$/;"	e	enum:Smiley::Chirality
ALA	include/openbabel/residue.h	/^      ALA   =  0,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
ALIASED_AT	src/formats/libinchi/strutil.c	3838;"	d	file:
ALIPHATIC	include/openbabel/residue.h	/^      ALIPHATIC   =  2,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
ALL	include/openbabel/obconversion.h	/^      enum Option_type { INOPTIONS, OUTOPTIONS, GENOPTIONS, ALL };$/;"	e	enum:OpenBabel::OBConversion::Option_type
ALLOWED_EDGE	src/formats/libinchi/ichitaut.c	3240;"	d	file:
ALLOW_METAL_BOND_ZERO	include/inchi/ichirvrs.h	123;"	d
ALLOW_ONLY_SIMPLE_ALT_PATH	src/formats/libinchi/ichi_bns.c	60;"	d	file:
ALLOW_TAUT_ATTACHMENTS_TO_STEREO_BONDS	include/inchi/mode.h	611;"	d
ALLOW_TAUT_ATTACHMENTS_TO_STEREO_BONDS	include/inchi/mode.h	760;"	d
ALLOW_TAUT_ATTACHMENTS_TO_STEREO_BONDS	include/inchi/mode.h	761;"	d
ALL_ALT_AS_AROMATIC	include/inchi/mode.h	732;"	d
ALL_BUT_PARITY	include/inchi/extr_ct.h	278;"	d
ALL_NONMETAL_Z	src/formats/libinchi/ichi_bns.c	2266;"	d	file:
ALL_TC_GROUPS	include/inchi/ichirvrs.h	/^} ALL_TC_GROUPS;$/;"	t	typeref:struct:tagAllTCGroups
ALPHA_BASE	include/inchi/util.h	72;"	d
ALPHA_BASE	src/formats/libinchi/ichiprt2.c	1444;"	d	file:
ALPHA_BASE	src/formats/libinchi/ichiprt2.c	1550;"	d	file:
ALPHA_CARBON	include/openbabel/residue.h	/^      ALPHA_CARBON     = 0,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
ALPHA_MINUS	src/formats/libinchi/ichiprt2.c	1448;"	d	file:
ALPHA_MINUS	src/formats/libinchi/ichiprt2.c	1551;"	d	file:
ALPHA_ONE	src/formats/libinchi/ichiprt2.c	1450;"	d	file:
ALPHA_ONE	src/formats/libinchi/ichiprt2.c	1553;"	d	file:
ALPHA_ZERO	src/formats/libinchi/ichiprt2.c	1451;"	d	file:
ALPHA_ZERO	src/formats/libinchi/ichiprt2.c	1554;"	d	file:
ALPHA_ZERO_VAL	src/formats/libinchi/ichiprt2.c	1449;"	d	file:
ALPHA_ZERO_VAL	src/formats/libinchi/ichiprt2.c	1552;"	d	file:
ALTP_ALLOCATED_LEN	include/inchi/ichi_bns.h	137;"	d
ALTP_CUR_NEXT_ATOM_NEIGHBOR	include/inchi/ichi_bns.h	133;"	d
ALTP_CUR_THIS_ATOM_NEIGHBOR	include/inchi/ichi_bns.h	132;"	d
ALTP_DELTA	include/inchi/ichi_bns.h	138;"	d
ALTP_END_ATOM	include/inchi/ichi_bns.h	128;"	d
ALTP_MAY_ADD	include/inchi/ichi_bns.h	136;"	d
ALTP_NEXT	include/inchi/ichi_bns.h	134;"	d
ALTP_NEXT_ATOM_NEIGHBOR	include/inchi/ichi_bns.h	131;"	d
ALTP_OVERFLOW	include/inchi/ichi_bns.h	139;"	d
ALTP_PATH_LEN	include/inchi/ichi_bns.h	127;"	d
ALTP_PREV	include/inchi/ichi_bns.h	135;"	d
ALTP_START_ATOM	include/inchi/ichi_bns.h	129;"	d
ALTP_THIS_ATOM_NEIGHBOR	include/inchi/ichi_bns.h	130;"	d
ALT_CONST	include/inchi/ichi_bns.h	/^} ALT_CONST;$/;"	t	typeref:enum:tagAltPathConst
ALT_PATH_4_SALT	src/formats/libinchi/ichi_bns.c	6103;"	d	file:
ALT_PATH_CHANGES	src/formats/libinchi/ichi_bns.c	/^} ALT_PATH_CHANGES;$/;"	t	typeref:struct:tagAltPathChanges	file:
ALT_PATH_CHARGE	src/formats/libinchi/ichi_bns.c	6102;"	d	file:
ALT_PATH_FOUND	src/formats/libinchi/ichitaut.c	2075;"	d	file:
ALT_PATH_FOUND	src/formats/libinchi/ichitaut.c	2469;"	d	file:
ALT_PATH_MODE_4_SALT	include/inchi/ichi_bns.h	336;"	d
ALT_PATH_MODE_4_SALT2	include/inchi/ichi_bns.h	337;"	d
ALT_PATH_MODE_ADD2H_CHG	include/inchi/ichi_bns.h	339;"	d
ALT_PATH_MODE_ADD2H_TST	include/inchi/ichi_bns.h	341;"	d
ALT_PATH_MODE_CHARGE	include/inchi/ichi_bns.h	335;"	d
ALT_PATH_MODE_REM2H_CHG	include/inchi/ichi_bns.h	338;"	d
ALT_PATH_MODE_REM2H_TST	include/inchi/ichi_bns.h	340;"	d
ALT_PATH_MODE_REM_PROTON	include/inchi/ichi_bns.h	342;"	d
ALT_PATH_MODE_TAUTOM	include/inchi/ichi_bns.h	334;"	d
ALT_PATH_MODE_TAUTOM_KET	include/inchi/ichi_bns.h	344;"	d
ALT_PATH_TAUTOM	src/formats/libinchi/ichi_bns.c	6101;"	d	file:
ALT_TAUT	include/inchi/mode.h	446;"	d
ALWAYS_ADD_TG_ON_THE_FLY	include/inchi/mode.h	408;"	d
ALWAYS_SET_STEREO_PARITY	include/inchi/extr_ct.h	280;"	d
AL_AEQU	src/formats/libinchi/ichiprt1.c	/^    AL_AEQU = 1 << AL_AEQU_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_AEQU_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_AEQU_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_ANBR	src/formats/libinchi/ichiprt1.c	/^    AL_ANBR = 1 << AL_ANBR_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_ANBR_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_ANBR_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_ANTICLOCKWISE	src/parsmart.cpp	124;"	d	file:
AL_ATMR	src/formats/libinchi/ichiprt1.c	/^    AL_ATMR = 1 << AL_ATMR_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_ATMR_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_ATMR_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_BNDR	src/formats/libinchi/ichiprt1.c	/^    AL_BNDR = 1 << AL_BNDR_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_BNDR_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_BNDR_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_CLOCKWISE	src/parsmart.cpp	123;"	d	file:
AL_CRV_	src/formats/libinchi/ichiprt1.c	/^    AL_CRV_ = 1 << AL_CRV__ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_CRV__ORD	src/formats/libinchi/ichiprt1.c	/^    AL_CRV__ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_FIXH	src/formats/libinchi/ichiprt1.c	/^    AL_FIXH = 1 << AL_FIXH_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_FIXH_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_FIXH_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_FIXN	src/formats/libinchi/ichiprt1.c	/^    AL_FIXN = 1 << AL_FIXN_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_FIXN_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_FIXN_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_GEQU	src/formats/libinchi/ichiprt1.c	/^    AL_GEQU = 1 << AL_GEQU_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_GEQU_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_GEQU_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_ISON	src/formats/libinchi/ichiprt1.c	/^    AL_ISON = 1 << AL_ISON_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_ISON_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_ISON_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_ISOT	src/formats/libinchi/ichiprt1.c	/^    AL_ISOT = 1 << AL_ISOT_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_ISOT_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_ISOT_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_MAX_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_MAX_ORD   \/* max number of tags *\/$/;"	e	enum:tagAuxLblOrd	file:
AL_NORM	src/formats/libinchi/ichiprt1.c	/^    AL_NORM = 1 << AL_NORM_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_NORM_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_NORM_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_REC_	src/formats/libinchi/ichiprt1.c	/^    AL_REC_ = 1 << AL_REC__ORD$/;"	e	enum:tagAuxLblBit	file:
AL_REC__ORD	src/formats/libinchi/ichiprt1.c	/^    AL_REC__ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_REVR	src/formats/libinchi/ichiprt1.c	/^    AL_REVR = 1 << AL_REVR_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_REVR_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_REVR_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_SP3I	src/formats/libinchi/ichiprt1.c	/^    AL_SP3I = 1 << AL_SP3I_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_SP3I_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_SP3I_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_SP3N	src/formats/libinchi/ichiprt1.c	/^    AL_SP3N = 1 << AL_SP3N_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_SP3N_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_SP3N_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_STER	src/formats/libinchi/ichiprt1.c	/^    AL_STER = 1 << AL_STER_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_STER_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_STER_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_UNSPECIFIED	src/parsmart.cpp	125;"	d	file:
AL_VERS	src/formats/libinchi/ichiprt1.c	/^    AL_VERS = 1 << AL_VERS_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_VERS_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_VERS_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AL_XYZR	src/formats/libinchi/ichiprt1.c	/^    AL_XYZR = 1 << AL_XYZR_ORD,$/;"	e	enum:tagAuxLblBit	file:
AL_XYZR_ORD	src/formats/libinchi/ichiprt1.c	/^    AL_XYZR_ORD,$/;"	e	enum:tagAuxLblOrd	file:
AMBIGUOUS_STEREO	include/inchi/extr_ct.h	253;"	d
AMBIGUOUS_STEREO_ATOM	include/inchi/extr_ct.h	254;"	d
AMBIGUOUS_STEREO_ATOM_ISO	include/inchi/extr_ct.h	256;"	d
AMBIGUOUS_STEREO_BOND	include/inchi/extr_ct.h	255;"	d
AMBIGUOUS_STEREO_BOND_ISO	include/inchi/extr_ct.h	257;"	d
AMBIGUOUS_STEREO_ERROR	include/inchi/extr_ct.h	258;"	d
AMINO	include/openbabel/residue.h	/^      AMINO        = 0,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
AMINOMAX	src/chains.cpp	64;"	d	file:
AMINO_BACKBONE	include/openbabel/residue.h	/^      AMINO_BACKBONE   = 1,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
AMINO_NUCLEO	include/openbabel/residue.h	/^      AMINO_NUCLEO = 1,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
AMU2AU	src/formats/fchkformat.cpp	28;"	d	file:
ANGSTROM	include/openbabel/griddata.h	/^    typedef enum { BOHR, ANGSTROM, OTHER } Unit;$/;"	e	enum:OpenBabel::OBGridData::__anon44
ANGSTROM_TO_BOHR	src/formats/abinitformat.cpp	23;"	d	file:
ANGSTROM_TO_BOHR	src/formats/daltonformat.cpp	27;"	d	file:
ANGSTROM_TO_BOHR	src/formats/dmolformat.cpp	23;"	d	file:
ANGSTROM_TO_BOHR	src/formats/gamessformat.cpp	30;"	d	file:
ANGSTROM_TO_BOHR	src/formats/gamessukformat.cpp	30;"	d	file:
ANGSTROM_TO_BOHR	src/formats/gausscubeformat.cpp	/^static const double ANGSTROM_TO_BOHR = 1.0 \/ 0.529177249;$/;"	v	file:
ANGSTROM_TO_BOHR	src/formats/moldenformat.cpp	39;"	d	file:
ANY_ATOM	src/mcdlutil.cpp	150;"	d	file:
ANY_ATOM_IN_ALT_CYCLE	include/inchi/mode.h	734;"	d
ANY_BOND	src/mcdlutil.cpp	152;"	d	file:
ANY_CHG	src/formats/libinchi/strutil.c	3823;"	d	file:
ANY_ISO	src/formats/libinchi/strutil.c	3821;"	d	file:
ANY_RAD	src/formats/libinchi/strutil.c	3824;"	d	file:
ANY_VERT_TYPE	src/formats/libinchi/ichirvr1.c	3536;"	d	file:
APPLY_IMPLICIT_H_DOWN_RULE	include/inchi/mode.h	607;"	d
ARG	include/openbabel/residue.h	/^      ARG   = 12,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
AROMATIC	include/openbabel/residue.h	/^      AROMATIC    =  3,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
AROMATIC_MASK	src/mcdlutil.cpp	/^    static int const AROMATIC_MASK=NOOTHER_MASK << 1;$/;"	m	class:OpenBabel::TEditedMolecule	file:
AROM_BOND_EDGE_CAP	include/inchi/ichi_bns.h	150;"	d
ARRHENIUS	include/openbabel/kinetics.h	/^  enum reaction_type {ARRHENIUS=55555, LINDERMANN, TROE, SRI, THREEBODY};$/;"	e	enum:OpenBabel::OBRateData::reaction_type
ARSINE_STEREO	src/formats/libinchi/ichister.c	1234;"	d	file:
AR_ANY_OH	src/formats/libinchi/ichi_bns.c	181;"	d	file:
AR_HARD_MSK_HA	src/formats/libinchi/ichi_bns.c	234;"	d	file:
AR_HARD_MSK_HN	src/formats/libinchi/ichi_bns.c	237;"	d	file:
AR_HARD_MSK_NEG	src/formats/libinchi/ichi_bns.c	231;"	d	file:
AR_HARD_MSK_POS	src/formats/libinchi/ichi_bns.c	228;"	d	file:
AR_HARD_TYP_HA	src/formats/libinchi/ichi_bns.c	235;"	d	file:
AR_HARD_TYP_HN	src/formats/libinchi/ichi_bns.c	238;"	d	file:
AR_HARD_TYP_NEG	src/formats/libinchi/ichi_bns.c	232;"	d	file:
AR_HARD_TYP_POS	src/formats/libinchi/ichi_bns.c	229;"	d	file:
AR_SIMPLE_MSK1	src/formats/libinchi/ichi_bns.c	184;"	d	file:
AR_SIMPLE_MSK2	src/formats/libinchi/ichi_bns.c	187;"	d	file:
AR_SIMPLE_MSK3	src/formats/libinchi/ichi_bns.c	190;"	d	file:
AR_SIMPLE_STEPS	src/formats/libinchi/ichi_bns.c	182;"	d	file:
AR_SIMPLE_TYP1	src/formats/libinchi/ichi_bns.c	185;"	d	file:
AR_SIMPLE_TYP2	src/formats/libinchi/ichi_bns.c	188;"	d	file:
AR_SIMPLE_TYP3	src/formats/libinchi/ichi_bns.c	191;"	d	file:
ASCIIFormat	src/formats/asciiformat.cpp	/^  ASCIIFormat()$/;"	f	class:OpenBabel::ASCIIFormat
ASCIIFormat	src/formats/asciiformat.cpp	/^class ASCIIFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ASCIIPainter	include/openbabel/depict/asciipainter.h	/^  class ASCIIPainter : public OBPainter$/;"	c	namespace:OpenBabel
ASCIIPainter	src/depict/asciipainter.cpp	/^  ASCIIPainter::ASCIIPainter(int width, int height, double aspect): m_width(width), m_height(height), m_aspect(aspect), m_scale(1)$/;"	f	class:OpenBabel::ASCIIPainter
ASN	include/openbabel/residue.h	/^      ASN   =  9,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
ASP	include/openbabel/residue.h	/^      ASP   =  7,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
AST_FIXED_H_ATOM_EQ	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_ATOM_EQ,                 \/* 14 \/E:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_ISO_ATOM_EQ	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_ISO_ATOM_EQ,             \/* 19 \/E:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_ISO_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_ISO_LAYER_FORK,          \/* 17 *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_ISO_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_ISO_NUMBERS,             \/* 18 \/I:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_ISO_SP3_INV	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_ISO_SP3_INV,             \/* 20 \/it: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_ISO_SP3_INV_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_ISO_SP3_INV_NUMBERS,     \/* 21 \/iN: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_LAYER_FORK,              \/* 12 *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_NUMBERS,                 \/* 13 \/F:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_SP3_INV	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_SP3_INV,                 \/* 15 \/it: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_FIXED_H_SP3_INV_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_FIXED_H_SP3_INV_NUMBERS,         \/* 16 \/iN: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_ATOM_EQ	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_ATOM_EQ,                \/* 2 \/E:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_GROUP_EQ	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_GROUP_EQ,               \/* 3 \/gE: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_ISO_ATOM_EQ	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_ISO_ATOM_EQ,            \/* 8 \/E:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_ISO_GROUP_EQ	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_ISO_GROUP_EQ,           \/* 9 \/gE: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_ISO_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_ISO_LAYER_FORK,         \/* 6 *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_ISO_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_ISO_NUMBERS,            \/* 7 \/I:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_ISO_SP3_INV	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_ISO_SP3_INV,            \/* 10 \/it: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_ISO_SP3_INV_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_ISO_SP3_INV_NUMBERS,    \/* 11 \/iN: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_NUMBERS,                \/* 1 \/N:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_SP3_INV	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_SP3_INV,                \/* 4 \/it: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_MOBILE_H_SP3_INV_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_MOBILE_H_SP3_INV_NUMBERS,        \/* 5 \/iN: *\/    $/;"	e	enum:tagAuxInfoState	file:
AST_RECONNECTED_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    AST_RECONNECTED_LAYER_FORK,          \/* 26 \/R:   *\/$/;"	e	enum:tagAuxInfoState	file:
AST_RECONNECTED_LAYER_NUMBERS	src/formats/libinchi/ichiread.c	/^    AST_RECONNECTED_LAYER_NUMBERS        \/* 27 *\/$/;"	e	enum:tagAuxInfoState	file:
AST_REVERSE_INFO_ATOMS	src/formats/libinchi/ichiread.c	/^    AST_REVERSE_INFO_ATOMS,                    \/* 23 \/rA:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_REVERSE_INFO_BONDS	src/formats/libinchi/ichiread.c	/^    AST_REVERSE_INFO_BONDS,                    \/* 24 \/rB:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_REVERSE_INFO_CRV	src/formats/libinchi/ichiread.c	/^    AST_REVERSE_INFO_CRV,                      \/* 22 \/CRV: *\/$/;"	e	enum:tagAuxInfoState	file:
AST_REVERSE_INFO_XYZ	src/formats/libinchi/ichiread.c	/^    AST_REVERSE_INFO_XYZ,                      \/* 25 \/rC:  *\/$/;"	e	enum:tagAuxInfoState	file:
AST_VERSION	src/formats/libinchi/ichiread.c	/^    AST_VERSION,                         \/* 0    *\/$/;"	e	enum:tagAuxInfoState	file:
ASX	include/openbabel/residue.h	/^      ASX   = 20,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
ASYMMETRIC	include/openbabel/generic.h	/^   enum RType{UNKNOWN, ASYMMETRIC, SYMMETRIC, LINEAR};$/;"	e	enum:OpenBabel::OBRotationData::RType
ATBIT_CO	src/formats/libinchi/ichi_bns.c	132;"	d	file:
ATBIT_COH	src/formats/libinchi/ichi_bns.c	125;"	d	file:
ATBIT_CO_Minus	src/formats/libinchi/ichi_bns.c	136;"	d	file:
ATBIT_CSH	src/formats/libinchi/ichi_bns.c	126;"	d	file:
ATBIT_CS_Minus	src/formats/libinchi/ichi_bns.c	137;"	d	file:
ATBIT_Errors	src/formats/libinchi/ichi_bns.c	151;"	d	file:
ATBIT_HalAcid	src/formats/libinchi/ichi_bns.c	148;"	d	file:
ATBIT_HalAnion	src/formats/libinchi/ichi_bns.c	147;"	d	file:
ATBIT_MSK_H	src/formats/libinchi/ichi_bns.c	172;"	d	file:
ATBIT_MSK_NP	src/formats/libinchi/ichi_bns.c	166;"	d	file:
ATBIT_MSK_OS	src/formats/libinchi/ichi_bns.c	168;"	d	file:
ATBIT_NO	src/formats/libinchi/ichi_bns.c	134;"	d	file:
ATBIT_NOH	src/formats/libinchi/ichi_bns.c	130;"	d	file:
ATBIT_NO_Minus	src/formats/libinchi/ichi_bns.c	141;"	d	file:
ATBIT_NP	src/formats/libinchi/ichi_bns.c	123;"	d	file:
ATBIT_NP_H	src/formats/libinchi/ichi_bns.c	121;"	d	file:
ATBIT_NP_Plus	src/formats/libinchi/ichi_bns.c	119;"	d	file:
ATBIT_NP_Proton	src/formats/libinchi/ichi_bns.c	120;"	d	file:
ATBIT_N_Minus	src/formats/libinchi/ichi_bns.c	122;"	d	file:
ATBIT_N_O	src/formats/libinchi/ichi_bns.c	135;"	d	file:
ATBIT_N_OH	src/formats/libinchi/ichi_bns.c	131;"	d	file:
ATBIT_N_O_Minus	src/formats/libinchi/ichi_bns.c	142;"	d	file:
ATBIT_OH_Plus	src/formats/libinchi/ichi_bns.c	144;"	d	file:
ATBIT_ON	src/formats/libinchi/ichi_bns.c	124;"	d	file:
ATBIT_OOH	src/formats/libinchi/ichi_bns.c	128;"	d	file:
ATBIT_OO_Minus	src/formats/libinchi/ichi_bns.c	139;"	d	file:
ATBIT_O_Minus	src/formats/libinchi/ichi_bns.c	143;"	d	file:
ATBIT_O_Plus	src/formats/libinchi/ichi_bns.c	145;"	d	file:
ATBIT_Proton	src/formats/libinchi/ichi_bns.c	146;"	d	file:
ATBIT_ZO	src/formats/libinchi/ichi_bns.c	133;"	d	file:
ATBIT_ZOH	src/formats/libinchi/ichi_bns.c	127;"	d	file:
ATBIT_ZOOH	src/formats/libinchi/ichi_bns.c	129;"	d	file:
ATBIT_ZOO_Minus	src/formats/libinchi/ichi_bns.c	140;"	d	file:
ATBIT_ZO_Minus	src/formats/libinchi/ichi_bns.c	138;"	d	file:
ATOFM	src/formats/yasaraformat.cpp	43;"	d	file:
ATOMBASIS	src/formats/daltonformat.cpp	/^    enum BasisFormat_t {BASIS, ATOMBASIS, INTGRL};$/;"	e	enum:OpenBabel::DALTONInputFormat::BasisFormat_t	file:
ATOMMAX	src/chains.cpp	206;"	d	file:
ATOMMINAMINO	src/chains.cpp	57;"	d	file:
ATOMMINNUCLEIC	src/chains.cpp	58;"	d	file:
ATOMPOOL	src/parsmart.cpp	93;"	d	file:
ATOM_EL_LEN	include/inchi/ichicant.h	95;"	d
ATOM_EL_LEN	include/inchi/inchi_api.h	105;"	d
ATOM_EL_LEN	include/inchi/incomdef.h	56;"	d
ATOM_EL_LEN	include/inchi_api.h	106;"	d
ATOM_INFO_LEN	include/inchi/incomdef.h	57;"	d
ATOM_INVARIANT	include/inchi/ichicant.h	/^} ATOM_INVARIANT;$/;"	t	typeref:struct:tagAtomInvariant
ATOM_INVARIANT2	include/inchi/ichicant.h	/^} ATOM_INVARIANT2;$/;"	t	typeref:struct:tagAtomInvariant2
ATOM_INVARIANT_BYTES	include/inchi/ichicant.h	/^} ATOM_INVARIANT_BYTES;$/;"	t	typeref:struct:tagAtomInvariantBytes
ATOM_NUMBER	include/inchi/aux2atom.h	186;"	d
ATOM_NUMBER	include/inchi/aux2atom.h	199;"	d
ATOM_NUMBER	include/inchi/aux2atom.h	2347;"	d
ATOM_NUMBER	include/inchi/aux2atom.h	2357;"	d
ATOM_PARITY_ILL_DEF	include/inchi/extr_ct.h	265;"	d
ATOM_PARITY_KNOWN	include/inchi/extr_ct.h	266;"	d
ATOM_PARITY_NOT_UNKN	include/inchi/extr_ct.h	268;"	d
ATOM_PARITY_PART_DEF	include/inchi/extr_ct.h	264;"	d
ATOM_PARITY_VAL	include/inchi/extr_ct.h	263;"	d
ATOM_PARITY_WELL_DEF	include/inchi/aux2atom.h	55;"	d
ATOM_PARITY_WELL_DEF	include/inchi/extr_ct.h	267;"	d
ATOM_SIZES	include/inchi/ichitaut.h	/^} ATOM_SIZES;$/;"	t	typeref:struct:tagAtomSizes
ATTOT_ARRAY_LEN	src/formats/libinchi/ichi_bns.c	/^    ATTOT_ARRAY_LEN       \/* 33 array length *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_CHARGES	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_CHARGES,    \/* 32 number of positive and negative single charges, +1 and -1 *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_CO	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_CO,         \/* 13 -C=O, =C=O; O=O,S,Se,Te  *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_COH	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_COH,        \/*  6 =C-OH, #C-OH; O=O,S,Se,Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_CO_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_CO_Minus,   \/* 17 =C-O(-), #C-O(-); O=O,S,Se,Te  *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_CSH	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_CSH,        \/*  7 -C-SH, -C-SeH -C-TeH  *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_CS_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_CS_Minus,   \/* 18 -C-S(-); S = S, Se, Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_Errors	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_Errors,     \/* 30 for debugging *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_HalAcid	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_HalAcid,    \/* 29 Halogen acid *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_HalAnion	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_HalAnion,   \/* 28 Halogen anion *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_NO	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_NO,         \/* 15 -N=O, =N(+)=O *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_NOH	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_NOH,        \/* 11  =N-OH, -N(-)-OH *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_NO_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_NO_Minus,   \/* 22 >N-O(-), -NH-O(-) *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_NP	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_NP,         \/*  4 no H: >N- =N-, #N  *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_NP_H	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_NP_H,       \/*  2 H:    -NH2, =NH, >NH -NH(-) *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_NP_Plus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_NP_Plus,    \/*  0 no H: =N(+)=, #N(+)-, =N(+)<, does not include onium cations >P(+)<, >N(+)< *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_NP_Proton	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_NP_Proton,  \/*  1 H(+): -NH3(+), =NH2(+), >NH2(+), =NH(+)-, >NH(+)-, #NH(+), N=N,P *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_N_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_N_Minus,    \/*  3 (-):  -NH(-), >N(-), =N(-) *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_N_O	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_N_O,        \/* 16  >N(+)=O, =N(+)=O *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_N_OH	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_N_OH,       \/* 12 >N-OH, -NH-OH, >NH(+)-OH, -N(-)-OH *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_N_O_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_N_O_Minus,  \/* 23 -NH-O(-), >N-O(-); O = O, S, Se, Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_OH_Plus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_OH_Plus,    \/* 25 any OH(+) *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_ON	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_ON,         \/*  5 -N=O: do not allow -N=O => -NH-OH during H(+) add\/removal *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_OOH	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_OOH,        \/*  9  -O-OH, O=O,S,Se,Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_OO_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_OO_Minus,   \/* 20 -O-O(-), O=O,S,Se,Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_O_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_O_Minus,    \/* 24 -Z-O(-); O=O,S,Se,Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_O_Plus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_O_Plus,     \/* 26 any O(+) without H *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_Proton	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_Proton,     \/* 27 proton *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_ZO	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_ZO,         \/* 14 -Z=O, =Z=O; O=O,S,Se,Te; Z may have charge  *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_ZOH	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_ZOH,        \/*  8 =Z-OH, #Z-OH; O=O,S,Se,Te; Z may have charge, Z != C *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_ZOOH	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_ZOOH,       \/* 10  O=Z-OH, O=O,S,Se,Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_ZOO_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_ZOO_Minus,  \/* 21 O=Z-O(-), O=O,S,Se,Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_NUM_ZO_Minus	src/formats/libinchi/ichi_bns.c	/^    ATTOT_NUM_ZO_Minus,   \/* 19 =Z-O(-), #Z-O(-); O = O, S, Se, Te *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTOT_TOT_CHARGE	src/formats/libinchi/ichi_bns.c	/^    ATTOT_TOT_CHARGE,     \/* 31 total of positive and negative single charges, +1 and -1 *\/$/;"	e	enum:tagAtTypeTotals	file:
ATTRIBUTE_UNUSED	include/libxml/xmlversion.h	362;"	d
ATTRIBUTE_UNUSED	include/libxml/xmlversion.h	365;"	d
ATTRIBUTE_UNUSED	include/libxml/xmlwin32version.h	221;"	d
ATTRIBUTE_UNUSED	include/libxml/xmlwin32version.h	224;"	d
ATTYP_N	src/formats/libinchi/ichi_bns.c	177;"	d	file:
ATTYP_NP	src/formats/libinchi/ichi_bns.c	176;"	d	file:
ATTYP_OS	src/formats/libinchi/ichi_bns.c	175;"	d	file:
ATTYP_P	src/formats/libinchi/ichi_bns.c	178;"	d	file:
ATT_ACIDIC_CO	include/inchi/inpdef.h	55;"	d
ATT_ACIDIC_S	include/inchi/inpdef.h	56;"	d
ATT_ATOM_N	include/inchi/inpdef.h	61;"	d
ATT_ATOM_P	include/inchi/inpdef.h	62;"	d
ATT_HalAcid	include/inchi/inpdef.h	69;"	d
ATT_HalAnion	include/inchi/inpdef.h	68;"	d
ATT_NO	include/inchi/inpdef.h	59;"	d
ATT_NONE	include/inchi/inpdef.h	54;"	d
ATT_NP_MINUS_V23	include/inchi/inpdef.h	71;"	d
ATT_N_O	include/inchi/inpdef.h	60;"	d
ATT_OH_MINUS	include/inchi/inpdef.h	65;"	d
ATT_OO	include/inchi/inpdef.h	57;"	d
ATT_OTHER_NEG_O	include/inchi/inpdef.h	63;"	d
ATT_OTHER_ZO	include/inchi/inpdef.h	64;"	d
ATT_O_PLUS	include/inchi/inpdef.h	66;"	d
ATT_PROTON	include/inchi/inpdef.h	67;"	d
ATT_ZOO	include/inchi/inpdef.h	58;"	d
ATW_H	include/inchi/incomdef.h	61;"	d
ATYPE_B	include/inchi/ichirvrs.h	143;"	d
ATYPE_C	include/inchi/ichirvrs.h	144;"	d
ATYPE_Cl	include/inchi/ichirvrs.h	147;"	d
ATYPE_H	include/inchi/ichirvrs.h	140;"	d
ATYPE_Mg	include/inchi/ichirvrs.h	142;"	d
ATYPE_N	include/inchi/ichirvrs.h	145;"	d
ATYPE_Na	include/inchi/ichirvrs.h	141;"	d
ATYPE_O	include/inchi/ichirvrs.h	146;"	d
AT_BONDS_VAL	include/inchi/aux2atom.h	190;"	d
AT_BONDS_VAL	include/inchi/aux2atom.h	205;"	d
AT_BONDS_VAL	include/inchi/aux2atom.h	2364;"	d
AT_DATA	include/inchi/ichicant.h	/^   }AT_DATA;$/;"	t	typeref:struct:tagAtData_dch
AT_FLAG_ISO_H_POINT	include/inchi/inpdef.h	74;"	d
AT_INV_BREAK1	include/inchi/ichicant.h	/^    AT_INV_BREAK1,$/;"	e	enum:tagAtInvariantIndexes
AT_INV_HILL_ORDER	include/inchi/ichicant.h	/^    AT_INV_HILL_ORDER,$/;"	e	enum:tagAtInvariantIndexes
AT_INV_INDEXES	include/inchi/ichicant.h	/^} AT_INV_INDEXES;$/;"	t	typeref:enum:tagAtInvariantIndexes
AT_INV_LENGTH	include/inchi/ichicant.h	/^    AT_INV_LENGTH   = AT_INV_TAUT_ISO + T_NUM_ISOTOPIC$/;"	e	enum:tagAtInvariantIndexes
AT_INV_NUM_CONNECTIONS	include/inchi/ichicant.h	/^    AT_INV_NUM_CONNECTIONS,$/;"	e	enum:tagAtInvariantIndexes
AT_INV_NUM_H	include/inchi/ichicant.h	/^    AT_INV_NUM_H,$/;"	e	enum:tagAtInvariantIndexes
AT_INV_NUM_H_FIX	include/inchi/ichicant.h	/^    AT_INV_NUM_H_FIX = AT_INV_TG_NUMBERS+T_NUM_NO_ISOTOPIC,$/;"	e	enum:tagAtInvariantIndexes
AT_INV_NUM_TG_ENDPOINTS	include/inchi/ichicant.h	/^    AT_INV_NUM_TG_ENDPOINTS,$/;"	e	enum:tagAtInvariantIndexes
AT_INV_TAUT_ISO	include/inchi/ichicant.h	/^    AT_INV_TAUT_ISO = AT_INV_BREAK1,$/;"	e	enum:tagAtInvariantIndexes
AT_INV_TG_NUMBERS	include/inchi/ichicant.h	/^    AT_INV_TG_NUMBERS,       \/* num H, num (-) *\/$/;"	e	enum:tagAtInvariantIndexes
AT_ISOTOPIC	include/inchi/extr_ct.h	/^} AT_ISOTOPIC;$/;"	t	typeref:struct:tagIsotopicAtom
AT_ISO_SORT_KEY	include/inchi/extr_ct.h	/^typedef long          AT_ISO_SORT_KEY;          \/* signed, should hold up to 4096*max_iso_diff *\/$/;"	t
AT_ISO_SORT_KEY_MULT	include/inchi/extr_ct.h	56;"	d
AT_ISO_TGROUP	include/inchi/ichitaut.h	/^} AT_ISO_TGROUP;$/;"	t	typeref:struct:tagIsotopicTautomerGroup
AT_NUM	include/inchi/inchi_api.h	/^typedef  S_SHORT AT_NUM;            \/* atom number; starts from 0 *\/$/;"	t
AT_NUM	include/inchi_api.h	/^typedef  S_SHORT AT_NUM;            \/* atom number; starts from 0 *\/$/;"	t
AT_NUMB	include/inchi/ichisize.h	/^typedef unsigned short AT_NUMB;$/;"	t
AT_NUMBR	include/inchi/inchi_api.h	/^typedef unsigned short AT_NUMBR;    $/;"	t
AT_NUMBR	include/inchi_api.h	/^typedef unsigned short AT_NUMBR;    $/;"	t
AT_NUM_BONDS	include/inchi/aux2atom.h	185;"	d
AT_NUM_BONDS	include/inchi/aux2atom.h	198;"	d
AT_NUM_BONDS	include/inchi/aux2atom.h	2346;"	d
AT_NUM_BONDS	include/inchi/aux2atom.h	2356;"	d
AT_RANK	include/inchi/ichisize.h	/^typedef unsigned short AT_RANK;$/;"	t
AT_RANK_MASK	include/inchi/ichisize.h	45;"	d
AT_STEREO	include/inchi/extr_ct.h	/^typedef AT_NUMB AT_STEREO;$/;"	t
AT_STEREO_CARB	include/inchi/extr_ct.h	/^} AT_STEREO_CARB;$/;"	t	typeref:struct:tagStereoCarb
AT_STEREO_DBLE	include/inchi/extr_ct.h	/^} AT_STEREO_DBLE;$/;"	t	typeref:struct:tagStereoDble
AT_TAUTOMER	include/inchi/ichitaut.h	/^typedef AT_NUMB   AT_TAUTOMER;  \/* LinearCTTautomer *\/$/;"	t
AT_TYPE_TOTALS	src/formats/libinchi/ichi_bns.c	/^} AT_TYPE_TOTALS;$/;"	t	typeref:enum:tagAtTypeTotals	file:
AUX_INFO_STATE	src/formats/libinchi/ichiread.c	/^}AUX_INFO_STATE;$/;"	t	typeref:enum:tagAuxInfoState	file:
AUX_LBL_BIT	src/formats/libinchi/ichiprt1.c	/^} AUX_LBL_BIT;$/;"	t	typeref:enum:tagAuxLblBit	file:
AUX_LBL_ORD	src/formats/libinchi/ichiprt1.c	/^} AUX_LBL_ORD;$/;"	t	typeref:enum:tagAuxLblOrd	file:
AU_TO_ANGSTROM	src/formats/nwchemformat.cpp	24;"	d	file:
AUnitsFactor	src/formats/chemkinformat.cpp	/^  double AUnitsFactor, EUnitsFactor;$/;"	m	class:OpenBabel::ChemKinFormat	file:
Aa	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
AaTypMask	src/formats/libinchi/ichi_bns.c	/^int AaTypMask[] = { $/;"	v
Ab	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
Ac	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Acceptor	src/tautomer.cpp	/^      Acceptor,$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
AccuracyOption	include/openbabel/spectrophore.h	/^         enum AccuracyOption {AngStepSize1,$/;"	g	class:OpenBabel::OBSpectrophore
AcesInputFormat	src/formats/acesformat.cpp	/^    AcesInputFormat()$/;"	f	class:OpenBabel::AcesInputFormat
AcesInputFormat	src/formats/acesformat.cpp	/^  class AcesInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
AcesOutputFormat	src/formats/acesformat.cpp	/^    AcesOutputFormat()$/;"	f	class:OpenBabel::AcesOutputFormat
AcesOutputFormat	src/formats/acesformat.cpp	/^  class AcesOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ActiveFormats	src/GUI/selformats.h	/^class ActiveFormats$/;"	c
ActiveFormatsFlags	src/GUI/selformats.h	/^	wxArrayInt    ActiveFormatsFlags;$/;"	m	class:ActiveFormats
ActiveFormatsString	src/GUI/selformats.h	/^	wxString ActiveFormatsString;$/;"	m	class:ActiveFormats
Add	include/openbabel/atomclass.h	/^  void Add(int indx, int cl) { _map[indx] = cl;}$/;"	f	class:OpenBabel::OBAtomClassData
Add	src/GUI/selformats.h	/^	bool Add(wxString& format)\/\/Called in OBGUIFrame::GetAvailableFormats$/;"	f	class:ActiveFormats
Add	src/fingerprint.cpp	/^  bool FastSearchIndexer::Add(OBBase* pOb, std::streampos seekpos)$/;"	f	class:OpenBabel::FastSearchIndexer
AddAgent	include/openbabel/reaction.h	/^  void AddAgent(const obsharedptr<OBMol> sp)$/;"	f	class:OpenBabel::OBReaction
AddAliases	src/alias.cpp	/^bool AliasData::AddAliases(OBMol* pmol)$/;"	f	class:OpenBabel::AliasData
AddAngleConstraint	src/forcefield.cpp	/^  void OBFFConstraints::AddAngleConstraint(int a, int b, int c, double angle)$/;"	f	class:OpenBabel::OBFFConstraints
AddAtom	include/openbabel/query.h	/^      void AddAtom(OBQueryAtom *atom)$/;"	f	class:OpenBabel::OBQuery
AddAtom	src/mol.cpp	/^  bool OBMol::AddAtom(OBAtom &atom, bool forceNewId)$/;"	f	class:OpenBabel::OBMol
AddAtom	src/residue.cpp	/^  void OBResidue::AddAtom(OBAtom *atom)$/;"	f	class:OpenBabel::OBResidue
AddAtom2DA	src/formats/libinchi/ichitaut.c	/^void AddAtom2DA( AT_RANK num_DA[], inp_ATOM *atom, int at_no, int bSubtract )$/;"	f
AddAtom2num	src/formats/libinchi/ichitaut.c	/^int AddAtom2num(  AT_RANK num[], inp_ATOM *atom, int at_no, int bSubtract )$/;"	f
AddAtomConstraint	src/forcefield.cpp	/^  void OBFFConstraints::AddAtomConstraint(int a)$/;"	f	class:OpenBabel::OBFFConstraints
AddAtomLabels	src/depict/depict.cpp	/^  bool OBDepict::AddAtomLabels(AtomLabelType type)$/;"	f	class:OpenBabel::OBDepict
AddAtomRef	src/generic.cpp	/^  int OBChiralData::AddAtomRef(unsigned int atomref, atomreftype t)$/;"	f	class:OpenBabel::OBChiralData
AddAtomXConstraint	src/forcefield.cpp	/^  void OBFFConstraints::AddAtomXConstraint(int a)$/;"	f	class:OpenBabel::OBFFConstraints
AddAtomYConstraint	src/forcefield.cpp	/^  void OBFFConstraints::AddAtomYConstraint(int a)$/;"	f	class:OpenBabel::OBFFConstraints
AddAtomZConstraint	src/forcefield.cpp	/^  void OBFFConstraints::AddAtomZConstraint(int a)$/;"	f	class:OpenBabel::OBFFConstraints
AddAuxSegmentCoord	src/formats/libinchi/ichiread.c	/^int AddAuxSegmentCoord( int nRet, XYZ_COORD *pXYZ, int nLenXYZ, INChI *pInpInChI[INCHI_NUM][TAUT_NUM],$/;"	f
AddBond	include/openbabel/atom.h	/^      void AddBond(OBBond *bond) { _vbond.push_back(bond); }$/;"	f	class:OpenBabel::OBAtom
AddBond	include/openbabel/query.h	/^      void AddBond(OBQueryBond *bond)$/;"	f	class:OpenBabel::OBQuery
AddBond	src/mol.cpp	/^  bool OBMol::AddBond(OBBond &bond)$/;"	f	class:OpenBabel::OBMol
AddBond	src/mol.cpp	/^  bool OBMol::AddBond(int first,int second,int order,int flags,int insertpos)$/;"	f	class:OpenBabel::OBMol
AddBondsPos	src/formats/libinchi/ichiqueu.c	/^int AddBondsPos( inp_ATOM *atom, T_BONDPOS *BondPosTmp, int nNumBondPosTmp, T_BONDPOS *BondPos,$/;"	f
AddCGroups2BnStruct	src/formats/libinchi/ichi_bns.c	/^int AddCGroups2BnStruct( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, C_GROUP_INFO *cgi  )$/;"	f
AddCGroups2TCGBnStruct	src/formats/libinchi/ichirvr1.c	/^int AddCGroups2TCGBnStruct( BN_STRUCT *pBNS, StrFromINChI *pStruct, VAL_AT *pVA,$/;"	f
AddChangedAtHChargeBNS	src/formats/libinchi/ichi_bns.c	/^int AddChangedAtHChargeBNS( inp_ATOM *at, int num_atoms, int nAtTypeTotals[], S_CHAR *mark )$/;"	f
AddChemObject	src/obconversion.cpp	/^  int OBConversion::AddChemObject(OBBase* pOb)$/;"	f	class:OpenBabel::OBConversion
AddChildNode	src/formats/smilesformat.cpp	/^  void OBCanSmiNode::AddChildNode(OBCanSmiNode *node,OBBond *bond)$/;"	f	class:OpenBabel::OBCanSmiNode
AddConformer	include/openbabel/mol.h	/^    void    AddConformer(double *f)    {  _vconf.push_back(f);    }$/;"	f	class:OpenBabel::OBMol
AddConformer	src/distgeom.cpp	/^  void OBDistanceGeometry::AddConformer()$/;"	f	class:OpenBabel::OBDistanceGeometry
AddData	include/openbabel/generic.h	/^    void AddData(OBGenericData *d)$/;"	f	class:OpenBabel::OBSetData
AddDataToSubstruct	src/ops/ophighlight.cpp	/^bool OpHighlight::AddDataToSubstruct(OBMol* pmol,$/;"	f	class:OpenBabel::OpHighlight
AddDataToSubstruct	src/ops/opisomorph.cpp	/^bool AddDataToSubstruct(OBMol* pmol,$/;"	f	namespace:OpenBabel
AddDistanceConstraint	src/forcefield.cpp	/^  void OBFFConstraints::AddDistanceConstraint(int a, int b, double length)$/;"	f	class:OpenBabel::OBFFConstraints
AddEdgeFlow	src/formats/libinchi/ichirvr1.c	/^int AddEdgeFlow( int edge_cap, int edge_flow, BNS_EDGE *e01, BNS_VERTEX *pSrc \/*src*\/,$/;"	f
AddElementAndCount	src/formats/libinchi/ichimak2.c	/^int AddElementAndCount( const char *szElement, int mult, char *szLinearCT, int nLenLinearCT, int *bOverflow )$/;"	f
AddEndPoint	src/formats/libinchi/ichitaut.c	/^int AddEndPoint( T_ENDPOINT *pEndPoint, inp_ATOM *at, int iat )$/;"	f
AddEndPoints	src/formats/libinchi/ichiqueu.c	/^int AddEndPoints( T_ENDPOINT *EndPointTmp, int nNumNewEndPoint, T_ENDPOINT *EndPoint,$/;"	f
AddExpandedAtom	src/alias.cpp	/^void AliasData::AddExpandedAtom(int id) { _expandedatoms.push_back(id); };$/;"	f	class:OpenBabel::AliasData
AddExplicitDeletedH	src/formats/libinchi/ichirvr2.c	/^int AddExplicitDeletedH( inp_ATOM *at, int jv, int num_at, int *iDeletedH, int *iH, int nNumDeletedH, int bTwoStereo )$/;"	f
AddGradient	include/openbabel/forcefield.h	/^    void AddGradient(double *grad, int idx)$/;"	f	class:OpenBabel::OBForceField
AddHydrogens	src/mol.cpp	/^  bool OBMol::AddHydrogens(OBAtom *atom)$/;"	f	class:OpenBabel::OBMol
AddHydrogens	src/mol.cpp	/^  bool OBMol::AddHydrogens(bool polaronly, bool correctForPH, double pH)$/;"	f	class:OpenBabel::OBMol
AddIgnore	src/forcefield.cpp	/^  void OBFFConstraints::AddIgnore(int a)$/;"	f	class:OpenBabel::OBFFConstraints
AddInChIChar	src/formats/libinchi/ichiread.c	/^int AddInChIChar( INCHI_IOSTREAM *pInp, SEGM_LINE *Line, const char *pszToken )$/;"	f
AddInterGroup	src/forcefield.cpp	/^  void OBForceField::AddInterGroup(OBBitVec &group)$/;"	f	class:OpenBabel::OBForceField
AddInterGroups	src/forcefield.cpp	/^  void OBForceField::AddInterGroups(OBBitVec &group1, OBBitVec &group2)$/;"	f	class:OpenBabel::OBForceField
AddIntraGroup	src/forcefield.cpp	/^  void OBForceField::AddIntraGroup(OBBitVec &group)$/;"	f	class:OpenBabel::OBForceField
AddLinkedBond	src/formats/libinchi/ichiread.c	/^int AddLinkedBond( AT_NUMB at1, AT_NUMB at2, AT_NUMB num_at, LINKED_BONDS *pLB )$/;"	f
AddMOLfileError	include/inchi/lreadmol.h	/^int AddMOLfileError( char *pStrErr, const char *szMsg )$/;"	f
AddMOLfileError	src/formats/libinchi/inchi_dll.c	/^int AddMOLfileError( char *pStrErr, const char *szMsg )$/;"	f
AddMolToList	src/formats/xml/cmlreactformat.cpp	/^string CMLReactFormat::AddMolToList(obsharedptr<OBMol> spmol, MolMap& mmap)$/;"	f	class:OpenBabel::CMLReactFormat
AddNbrs	src/builder.cpp	/^  void OBBuilder::AddNbrs(OBBitVec &fragment, OBAtom *atom)$/;"	f	class:OpenBabel::OBBuilder
AddNewEdge	src/formats/libinchi/ichi_bns.c	/^int AddNewEdge( BNS_VERTEX *p1, BNS_VERTEX *p2, BN_STRUCT *pBNS, int nEdgeCap, int nEdgeFlow )$/;"	f
AddNewHydrogens	src/mol.cpp	/^  bool OBMol::AddNewHydrogens(HydrogenType whichHydrogen, bool correctForPH, double pH)$/;"	f	class:OpenBabel::OBMol
AddNodeSet2ToNodeSet1	src/formats/libinchi/ichican2.c	/^void AddNodeSet2ToNodeSet1( NodeSet *cur_nodes, int k1, int k2)$/;"	f
AddNodesToRadEndpoints	src/formats/libinchi/ichican2.c	/^int AddNodesToRadEndpoints( NodeSet *cur_nodes, int k, Vertex RadEndpoints[], Vertex vRad, int nStart, int nLen )$/;"	f
AddNonPolarHydrogens	src/mol.cpp	/^  bool OBMol::AddNonPolarHydrogens()$/;"	f	class:OpenBabel::OBMol
AddOneMsg	src/formats/libinchi/ichirvr7.c	/^int AddOneMsg( char *szMsg, int used_len, int tot_len, const char *szAddMsg, const char *szDelim )$/;"	f
AddOption	src/obconversion.cpp	/^  void OBConversion::AddOption(const char* opt, Option_type opttyp, const char* txt)$/;"	f	class:OpenBabel::OBConversion
AddOrRemoveExplOrImplH	src/formats/libinchi/ichi_bns.c	/^int AddOrRemoveExplOrImplH( int nDelta, inp_ATOM *at, int num_atoms, AT_NUMB at_no, T_GROUP_INFO *t_group_info )$/;"	f
AddPattern	src/formats/fastsearchformat.cpp	/^  void FastSearchFormat::AddPattern(vector<OBMol>& patternMols, OBMol patternMol, int idx)$/;"	f	class:OpenBabel::FastSearchFormat
AddPoint	include/openbabel/generic.h	/^    void AddPoint(double x,double y,double z, double V) $/;"	f	class:OpenBabel::OBFreeGrid
AddPolarHydrogens	src/mol.cpp	/^  bool OBMol::AddPolarHydrogens()$/;"	f	class:OpenBabel::OBMol
AddPose	src/confsearch.cpp	/^  bool OBDiversePoses::AddPose(double* coords, double energy) {$/;"	f	class:OpenBabel::OBDiversePoses
AddPose	src/confsearch.cpp	/^  bool OBDiversePoses::AddPose(vector<vector3> vcoords, double energy) {$/;"	f	class:OpenBabel::OBDiversePoses
AddProduct	include/openbabel/reaction.h	/^  void AddProduct(const obsharedptr<OBMol> sp)$/;"	f	class:OpenBabel::OBReaction
AddProperties	src/descriptor.cpp	/^void OBDescriptor::AddProperties(OBBase* pOb, const string& DescrList)$/;"	f	class:OpenBabel::OBDescriptor
AddProtonAndIsoHBalanceToMobHStruct	src/formats/libinchi/ichirvr7.c	/^int AddProtonAndIsoHBalanceToMobHStruct( ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd,$/;"	f
AddRadicalToMetal	src/formats/libinchi/ichirvr1.c	/^int AddRadicalToMetal( int *tot_st_cap, int *tot_st_flow, ICHICONST SRM *pSrm, BN_STRUCT *pBNS, ALL_TC_GROUPS *pTCGroups )$/;"	f
AddReactant	include/openbabel/reaction.h	/^  void AddReactant(const obsharedptr<OBMol> sp)$/;"	f	class:OpenBabel::OBReaction
AddRemIsoProtonsInRestrStruct	src/formats/libinchi/ichirvr4.c	/^int AddRemIsoProtonsInRestrStruct( ICHICONST INPUT_PARMS *ip_inp,  STRUCT_DATA *sd, long num_inp, int bHasSomeFixedH,$/;"	f
AddRemProtonsInRestrStruct	src/formats/libinchi/ichirvr4.c	/^int AddRemProtonsInRestrStruct( ICHICONST INPUT_PARMS *ip_inp,  STRUCT_DATA *sd, long num_inp,$/;"	f
AddRemoveIsoProtonsRestr	src/formats/libinchi/ichi_bns.c	/^int AddRemoveIsoProtonsRestr( inp_ATOM *at, int num_atoms, NUM_H num_protons_to_add[], int num_tg )$/;"	f
AddRemoveProtonsRestr	src/formats/libinchi/ichi_bns.c	/^int AddRemoveProtonsRestr( inp_ATOM *at, int num_atoms, int *num_protons_to_add,$/;"	f
AddResidue	include/openbabel/atom.h	/^      void AddResidue(OBResidue *res) { SetResidue(res); }$/;"	f	class:OpenBabel::OBAtom
AddResidue	src/mol.cpp	/^  bool OBMol::AddResidue(OBResidue &residue)$/;"	f	class:OpenBabel::OBMol
AddRingFromClosure	src/ring.cpp	/^  void OBRingSearch::AddRingFromClosure(OBMol &mol,OBBond *cbond)$/;"	f	class:OpenBabel::OBRingSearch
AddRingNbrs	src/builder.cpp	/^  void OBBuilder::AddRingNbrs(OBBitVec &fragment, OBAtom *atom, OBMol &mol)$/;"	f	class:OpenBabel::OBBuilder
AddRotamer	src/rotamer.cpp	/^  void OBRotamerList::AddRotamer(double *c)$/;"	f	class:OpenBabel::OBRotamerList
AddRotamer	src/rotamer.cpp	/^  void OBRotamerList::AddRotamer(int *arr)$/;"	f	class:OpenBabel::OBRotamerList
AddRotamer	src/rotamer.cpp	/^  void OBRotamerList::AddRotamer(std::vector<int> arr)$/;"	f	class:OpenBabel::OBRotamerList
AddRotamer	src/rotamer.cpp	/^  void OBRotamerList::AddRotamer(unsigned char *arr)$/;"	f	class:OpenBabel::OBRotamerList
AddRotamers	src/rotamer.cpp	/^  void OBRotamerList::AddRotamers(unsigned char *arr,int nrotamers)$/;"	f	class:OpenBabel::OBRotamerList
AddRotor	include/openbabel/rotor.h	/^      void AddRotor(unsigned int size)$/;"	f	class:OBRotorKeys
AddSCFGrids	src/formats/adfformat.cpp	/^    void AddSCFGrids( istream& is, OBGridData& t41 ) {}$/;"	f	class:OpenBabel::OBT41Format	file:
AddStCapFlow	src/formats/libinchi/ichirvr1.c	/^void AddStCapFlow( BNS_VERTEX *vert_ficpoint, int *tot_st_flow, int *tot_st_cap, int cap, int flow )$/;"	f
AddTGroups2BnStruct	src/formats/libinchi/ichi_bns.c	/^int AddTGroups2BnStruct( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, T_GROUP_INFO *tgi  )$/;"	f
AddTGroups2TCGBnStruct	src/formats/libinchi/ichirvr1.c	/^int AddTGroups2TCGBnStruct( BN_STRUCT *pBNS, StrFromINChI *pStruct, VAL_AT *pVA,$/;"	f
AddToEdgeList	src/formats/libinchi/ichirvr1.c	/^int AddToEdgeList( EDGE_LIST *pEdges, int iedge, int nAddLen )$/;"	f
AddTorsion	src/generic.cpp	/^  bool OBTorsion::AddTorsion(OBAtom *a,OBAtom *b, OBAtom *c,OBAtom *d)$/;"	f	class:OpenBabel::OBTorsion
AddTorsion	src/generic.cpp	/^  bool OBTorsion::AddTorsion(quad<OBAtom*,OBAtom*,OBAtom*,OBAtom*> &atoms)$/;"	f	class:OpenBabel::OBTorsion
AddTorsionConstraint	src/forcefield.cpp	/^  void OBFFConstraints::AddTorsionConstraint(int a, int b, int c, int d, double torsion)$/;"	f	class:OpenBabel::OBFFConstraints
AddTransform	src/math/spacegroup.cpp	/^  void SpaceGroup::AddTransform(const string &s)$/;"	f	class:OpenBabel::SpaceGroup
AddXmlEntityRefs	src/formats/libinchi/ichiprt1.c	/^int AddXmlEntityRefs( const char *p, char *d )$/;"	f
AdjustTgroupsToForbiddenEdges2	src/formats/libinchi/ichirvr2.c	/^int AdjustTgroupsToForbiddenEdges2( BN_STRUCT *pBNS, inp_ATOM *at, VAL_AT *pVA,$/;"	f
Ag	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Al	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
AlchemyFormat	src/formats/alchemyformat.cpp	/^    AlchemyFormat()$/;"	f	class:OpenBabel::AlchemyFormat
AlchemyFormat	src/formats/alchemyformat.cpp	/^  class AlchemyFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
AliasData	include/openbabel/alias.h	/^  AliasData(): OBGenericData("Alias", AliasDataType){ }$/;"	f	class:OpenBabel::AliasData
AliasData	include/openbabel/alias.h	/^class OBCOMMON AliasData : public OBGenericData$/;"	c	namespace:OpenBabel
AliasDataType	include/openbabel/alias.h	/^const unsigned int AliasDataType = 0x7883;$/;"	m	namespace:OpenBabel
AliasItem	include/openbabel/alias.h	/^  struct AliasItem$/;"	s	class:OpenBabel::AliasData
Align	src/math/align.cpp	/^  bool OBAlign::Align()$/;"	f	class:OpenBabel::OBAlign
Align	src/mol.cpp	/^  void OBMol::Align(OBAtom *a1,OBAtom *a2,vector3 &p1,vector3 &p2)$/;"	f	class:OpenBabel::OBMol
AlignMethod	include/openbabel/math/align.h	/^    enum AlignMethod {$/;"	g	class:OpenBabel::OBAlign
All	include/openbabel/parsmart.h	/^    enum MatchType {All, Single, AllUnique};$/;"	e	enum:OpenBabel::OBSmartsPattern::MatchType
AllFormatsArray	src/GUI/selformats.h	/^	wxArrayString AllFormatsArray;$/;"	m	class:ActiveFormats
AllHydrogen	include/openbabel/mol.h	/^enum HydrogenType { AllHydrogen, PolarHydrogen, NonPolarHydrogen };$/;"	e	enum:OpenBabel::HydrogenType
AllInchiToStructure	src/formats/libinchi/ichirvr7.c	/^int AllInchiToStructure( ICHICONST INPUT_PARMS *ip_inp, STRUCT_DATA *sd_inp, long num_inp, char *szCurHdr,$/;"	f
AllNodesAreInSet	src/formats/libinchi/ichican2.c	/^int AllNodesAreInSet(  NodeSet *cur_nodes, int lcur_nodes, NodeSet *set, int lset )$/;"	f
AllPluginsLoaded	include/openbabel/plugin.h	/^  static int AllPluginsLoaded;$/;"	m	class:OpenBabel::OBPlugin
AllPluginsLoaded	src/plugin.cpp	/^int OBPlugin::AllPluginsLoaded = 0;$/;"	m	class:OpenBabel::OBPlugin	file:
AllStereoSpecificProbes	include/openbabel/spectrophore.h	/^                            AllStereoSpecificProbes};$/;"	e	enum:OpenBabel::OBSpectrophore::StereoOption
AllUnique	include/openbabel/parsmart.h	/^    enum MatchType {All, Single, AllUnique};$/;"	e	enum:OpenBabel::OBSmartsPattern::MatchType
All_SB_Same	src/formats/libinchi/ichimap1.c	/^int All_SB_Same(  AT_RANK canon_rank1, AT_RANK canon_rank2, \/*  canonical numbers *\/$/;"	f
All_SC_Same	src/formats/libinchi/ichimap1.c	/^int All_SC_Same(  AT_RANK canon_rank1, \/*  canonical number *\/$/;"	f
AllocBfsQueue	src/formats/libinchi/ichirvr1.c	/^int AllocBfsQueue( BFS_Q *pQ, int num_at, int min_ring_size )$/;"	f
AllocEdgeList	src/formats/libinchi/ichirvr1.c	/^int AllocEdgeList( EDGE_LIST *pEdges, int nLen )$/;"	f
AllocPattern	src/parsmart.cpp	/^  static Pattern *AllocPattern( void )$/;"	f	namespace:OpenBabel
Alloc_INChI	src/formats/libinchi/strutil.c	/^INChI *Alloc_INChI( inp_ATOM *at, int num_at, int *found_num_bonds, int *found_num_isotopic, int nAllocMode )$/;"	f
Alloc_INChI_Aux	src/formats/libinchi/strutil.c	/^INChI_Aux *Alloc_INChI_Aux( int num_at, int num_isotopic_atoms, int nAllocMode, int bOrigCoord )$/;"	f
Alloc_INChI_Stereo	src/formats/libinchi/strutil.c	/^INChI_Stereo *Alloc_INChI_Stereo(int num_at, int num_bonds)$/;"	f
AllocateAndFillHillFormula	src/formats/libinchi/ichimak2.c	/^char *AllocateAndFillHillFormula( INChI *pINChI )$/;"	f
AllocateAndInitBnData	src/formats/libinchi/ichi_bns.c	/^BN_DATA *AllocateAndInitBnData( int max_num_vertices ) $/;"	f
AllocateAndInitBnStruct	src/formats/libinchi/ichi_bns.c	/^BN_STRUCT* AllocateAndInitBnStruct( inp_ATOM *at, int num_atoms, int nMaxAddAtoms, int nMaxAddEdges, int max_altp, int *pNum_changed_bonds )$/;"	f
AllocateAndInitTCGBnStruct	src/formats/libinchi/ichirvr1.c	/^BN_STRUCT* AllocateAndInitTCGBnStruct( StrFromINChI *pStruct, VAL_AT *pVA,$/;"	f
AllocateByteCode	src/chains.cpp	/^  static ByteCode *AllocateByteCode(int type)$/;"	f	namespace:OpenBabel
AllocateCS	src/formats/libinchi/ichicano.c	/^int AllocateCS( CANON_STAT *pCS, int num_at, int num_at_tg, int nLenCT, int nLenCTAtOnly,$/;"	f
AllocateForNonStereoRemoval	src/formats/libinchi/ichimap2.c	/^int AllocateForNonStereoRemoval( sp_ATOM *at, int num_atoms, const AT_RANK *nSymmRank, AT_RANK *nCanonRank,$/;"	f
Am	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
AmberPrepFormat	src/formats/amberformat.cpp	/^    AmberPrepFormat()$/;"	f	class:OpenBabel::AmberPrepFormat
AmberPrepFormat	src/formats/amberformat.cpp	/^class AmberPrepFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
AminoAcids	src/chains.cpp	/^  static ResidType AminoAcids[AMINOMAX] = {$/;"	m	namespace:OpenBabel	file:
AngStepSize1	include/openbabel/spectrophore.h	/^         enum AccuracyOption {AngStepSize1,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize10	include/openbabel/spectrophore.h	/^                              AngStepSize10,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize15	include/openbabel/spectrophore.h	/^                              AngStepSize15,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize2	include/openbabel/spectrophore.h	/^                              AngStepSize2,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize20	include/openbabel/spectrophore.h	/^                              AngStepSize20,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize30	include/openbabel/spectrophore.h	/^                              AngStepSize30,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize36	include/openbabel/spectrophore.h	/^                              AngStepSize36,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize45	include/openbabel/spectrophore.h	/^                              AngStepSize45,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize5	include/openbabel/spectrophore.h	/^                              AngStepSize5,$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngStepSize60	include/openbabel/spectrophore.h	/^                              AngStepSize60};$/;"	e	enum:OpenBabel::OBSpectrophore::AccuracyOption
AngleData	include/openbabel/base.h	/^      AngleData =         10,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
AngleOrder	src/stereo/perception.cpp	/^  bool AngleOrder(const vector3 &a, const vector3 &b, const vector3 &c, const vector3 &center)$/;"	f	namespace:OpenBabel
Angstrom	src/charges/qeq.h	/^const double Angstrom = 1.\/0.529177249;$/;"	v
Angstrom	src/charges/qtpie.h	/^const double Angstrom = 1.\/0.529177249;$/;"	v
AnnotationData	src/formats/json/pubchemjsonformat.cpp	/^typedef OBPairTemplate< vector<string> > AnnotationData;$/;"	t	namespace:OpenBabel	file:
AntiClockwise	include/openbabel/stereo/stereo.h	/^      AntiClockwise = 2, \/\/!< AntiClockwise winding (or CounterClockwise)$/;"	e	enum:OpenBabel::OBStereo::Winding
AntiClockwise	src/formats/mdlformat.cpp	/^        NotStereo, Clockwise, AntiClockwise, Unknown$/;"	e	enum:OpenBabel::MDLFormat::Parity	file:
AntiClockwise	src/formats/smiley.h	/^    AntiClockwise, Clockwise,$/;"	e	enum:Smiley::Chirality
AoforceFormat	src/formats/aoforceformat.cpp	/^    AoforceFormat() { OBConversion::RegisterFormat("aoforce", this); }$/;"	f	class:OpenBabel::AoforceFormat
AoforceFormat	src/formats/aoforceformat.cpp	/^class AoforceFormat : public OBMoleculeFormat {$/;"	c	namespace:OpenBabel	file:
Apply	src/phmodel.cpp	/^  bool OBChemTsfm::Apply(OBMol &mol)$/;"	f	class:OpenBabel::OBChemTsfm
ApplyRotMatToBond	src/atom.cpp	/^  static void ApplyRotMatToBond(OBMol &mol,matrix3x3 &m,OBAtom *a1,OBAtom *a2)$/;"	f	namespace:OpenBabel
ApplyRule1	src/stereo/perception.cpp	/^  bool ApplyRule1(const Type &currentPara, const std::vector<unsigned int> &symmetry_classes,$/;"	f	namespace:OpenBabel
ApproxZero	src/obutil.cpp	767;"	d	file:
Ar	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
ArTypMask	src/formats/libinchi/ichi_bns.c	/^int ArTypMask[] = { $/;"	v
AreInSameRing	src/distgeom.cpp	/^  int OBDistanceGeometry::AreInSameRing(OBAtom *a, OBAtom *b)$/;"	f	class:OpenBabel::OBDistanceGeometry
AreInSameRing	src/mol.cpp	/^  int OBMol::AreInSameRing(OBAtom *a, OBAtom *b)$/;"	f	class:OpenBabel::OBMol
Args	include/openbabel/json/json.h	/^      typedef std::vector<PathArgument> Args;$/;"	t	class:Json::Path
Aromatic	include/openbabel/bond.h	/^        Aromatic = (1<<1), \/\/!< An aromatic bond (regardless of bond order)$/;"	e	enum:OpenBabel::OBBond::Flag
ArrayIndex	include/openbabel/json/json-forwards.h	/^   typedef unsigned int ArrayIndex;$/;"	t	namespace:Json
ArrayIndex	include/openbabel/json/json.h	/^      typedef Json::ArrayIndex ArrayIndex;$/;"	t	class:Json::Value
ArrayIndex	include/openbabel/json/json.h	/^      typedef Value::ArrayIndex ArrayIndex;$/;"	t	class:Json::ValueInternalArray
ArrayIndex	include/openbabel/json/json.h	/^   typedef unsigned int ArrayIndex;$/;"	t	namespace:Json
ArrayList	src/formats/ArrayList.h	/^} ArrayList;$/;"	t	typeref:struct:_ArrayList
As	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
AsArray	include/openbabel/math/vector3.h	/^    const double *AsArray() const$/;"	f	class:OpenBabel::vector3
AssignAromaticFlags	src/typer.cpp	/^  void OBAromaticTyper::AssignAromaticFlags(OBMol &mol)$/;"	f	class:OpenBabel::OBAromaticTyper
AssignAtomTypes	src/tautomer.cpp	/^    void AssignAtomTypes(OBMol *mol, std::vector<Type> &types)$/;"	f	struct:OpenBabel::TautomerImpl
AssignBondTypes	src/tautomer.cpp	/^    void AssignBondTypes(OBMol *mol, const std::vector<Type> &atomTypes, std::vector<Type> &bondTypes)$/;"	f	struct:OpenBabel::TautomerImpl
AssignBonds	src/data.cpp	/^  bool OBResidueData::AssignBonds(OBMol &mol,OBBitVec &bv)$/;"	f	class:OpenBabel::OBResidueData
AssignFunctionalGroupBonds	src/bondtyper.cpp	/^  void OBBondTyper::AssignFunctionalGroupBonds(OBMol &mol)$/;"	f	class:OpenBabel::OBBondTyper
AssignHyb	src/typer.cpp	/^  void OBAtomTyper::AssignHyb(OBMol &mol)$/;"	f	class:OpenBabel::OBAtomTyper
AssignImplicitValence	src/typer.cpp	/^  void OBAtomTyper::AssignImplicitValence(OBMol &mol, bool CanBeLessThanActual)$/;"	f	class:OpenBabel::OBAtomTyper
AssignNbrAtoms	src/formats/smileyformat.cpp	/^  bool SmileyFormat::AssignNbrAtoms(const std::vector<OpenBabelCallback::UpDown> &upDown,$/;"	f	class:OpenBabel::SmileyFormat
AssignPartialCharges	src/molchrg.cpp	/^  bool OBGastChrg::AssignPartialCharges(OBMol &mol)$/;"	f	class:OpenBabel::OBGastChrg
AssignResidue	src/chains.cpp	/^  void OBChainsParser::AssignResidue(OBMol &mol, int r, int c, int i)$/;"	f	class:OpenBabel::OBChainsParser
AssignSeedPartialCharge	src/phmodel.cpp	/^  void OBPhModel::AssignSeedPartialCharge(OBMol &mol)$/;"	f	class:OpenBabel::OBPhModel
AssignSpinMultiplicity	src/mol.cpp	/^  bool OBMol::AssignSpinMultiplicity(bool NoImplicitH)$/;"	f	class:OpenBabel::OBMol
AssignStruct	src/chains.cpp	/^  } AssignStruct;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon72	file:
AssignTorVals	src/rotor.cpp	/^  bool OBRotorList::AssignTorVals(OBMol &mol)$/;"	f	class:OpenBabel::OBRotorList
AssignTotalChargeToAtoms	src/mol.cpp	/^  bool OBMol::AssignTotalChargeToAtoms(int charge)$/;"	f	class:OpenBabel::OBMol
AssignTypes	src/typer.cpp	/^  void OBAtomTyper::AssignTypes(OBMol &mol)$/;"	f	class:OpenBabel::OBAtomTyper
AssignTypes	src/typer.cpp	/^  void OBRingTyper::AssignTypes(OBMol &mol)$/;"	f	class:OpenBabel::OBRingTyper
Assigned	src/tautomer.cpp	/^      Assigned,$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
AssignmentPropagation	src/tautomer.cpp	/^    void AssignmentPropagation(OBMol *mol, std::vector<Type> &atomTypes, std::vector<Type> &bondTypes, const std::vector<OBAtom*> &canonAtoms,$/;"	f	struct:OpenBabel::TautomerImpl
At	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
AtData	include/inchi/extr_ct.h	/^struct AtData {$/;"	s
AtNum	src/formats/xml/pubchem.cpp	/^	vector<int> AtNum;$/;"	m	class:OpenBabel::PubChemFormat	file:
AtNumber	include/inchi/ichicant.h	/^    AT_NUMB *AtNumber;$/;"	m	struct:tagPartition
AtTypeBitmap	src/formats/libinchi/ichinorm.c	/^} AtTypeBitmap;$/;"	t	typeref:struct:tagAtTypeBitmap	file:
AtTypeUnion	src/formats/libinchi/ichinorm.c	/^} AtTypeUnion;$/;"	t	typeref:union:tagAtTypeUnion	file:
AtomArray	src/formats/xml/cmlformat.cpp	/^    cmlArray AtomArray;$/;"	m	class:OpenBabel::CMLFormat	file:
AtomData	src/formats/adfformat.cpp	/^        AtomData( int an ) : atomicNum( an ) {}$/;"	f	struct:OpenBabel::OBT41Format::AtomData
AtomData	src/formats/adfformat.cpp	/^        AtomData( int an, const double ac[ 3 ], double c ) : atomicNum( an ), charge( c )$/;"	f	struct:OpenBabel::OBT41Format::AtomData
AtomData	src/formats/adfformat.cpp	/^        AtomData() : atomicNum( 0 ), charge( 0. ) {}$/;"	f	struct:OpenBabel::OBT41Format::AtomData
AtomData	src/formats/adfformat.cpp	/^    struct AtomData$/;"	s	class:OpenBabel::OBT41Format	file:
AtomExpr	include/openbabel/parsmart.h	/^  } AtomExpr;$/;"	t	namespace:OpenBabel	typeref:union:OpenBabel::_AtomExpr
AtomId	include/openbabel/depict/depict.h	/^        AtomId = 1,$/;"	e	enum:OpenBabel::OBDepict::AtomLabelType
AtomIndex	include/openbabel/depict/depict.h	/^        AtomIndex,$/;"	e	enum:OpenBabel::OBDepict::AtomLabelType
AtomIndex	src/chains.cpp	/^  static int  AtomIndex;$/;"	m	namespace:OpenBabel	file:
AtomInfo	src/fingerprints/fingerecfp.cpp	/^struct AtomInfo {$/;"	s	namespace:OpenBabel	file:
AtomIsChiral	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::AtomIsChiral(OBAtom *atom)$/;"	f	class:OpenBabel::OBMol2Cansmi
AtomLabelType	include/openbabel/depict/depict.h	/^      enum AtomLabelType {$/;"	g	class:OpenBabel::OBDepict
AtomMap	src/formats/xml/cmlformat.cpp	/^    map<string,int> AtomMap; \/\/key=atom id, value= ob atom index$/;"	m	class:OpenBabel::CMLFormat	file:
AtomNumber	src/tautomer.cpp	/^    enum AtomNumber {$/;"	g	struct:OpenBabel::TautomerImpl	file:
AtomSpec	include/openbabel/parsmart.h	/^  AtomSpec;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon55
AtomStcapStflow	src/formats/libinchi/ichirvr1.c	/^int AtomStcapStflow( inp_ATOM *atom, VAL_AT *pVA, ICHICONST SRM *pSrm, int iat, int *pnStcap, int *pnStflow,$/;"	f
AtomSymbol	src/formats/mdlformat.cpp	/^  static const char* AtomSymbol(OBMol* pmol, OBAtom* atom)$/;"	f	namespace:OpenBabel
AtomSymmetryClass	include/openbabel/depict/depict.h	/^        AtomSymmetryClass,$/;"	e	enum:OpenBabel::OBDepict::AtomLabelType
AtomTetrahedralStereo	include/openbabel/depict/depict.h	/^        AtomTetrahedralStereo$/;"	e	enum:OpenBabel::OBDepict::AtomLabelType
AtomValence	include/openbabel/depict/depict.h	/^        AtomValence,$/;"	e	enum:OpenBabel::OBDepict::AtomLabelType
AtomsSoFar	src/formats/pdbqtformat.cpp	/^  unsigned int AtomsSoFar(const map <unsigned int, branch> & tree, unsigned int depth)$/;"	f	namespace:OpenBabel
Au	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
AugmentEdge	src/formats/libinchi/ichi_bns.c	/^int AugmentEdge( BN_STRUCT* pBNS, Vertex u, Vertex v, EdgeIndex iuv, int delta, S_CHAR bReverse, int bChangeFlow )$/;"	f
AutomaticFormalCharge	include/openbabel/mol.h	/^    bool AutomaticFormalCharge()   { return(_autoFormalCharge);  }$/;"	f	class:OpenBabel::OBMol
AutomaticPartialCharge	include/openbabel/mol.h	/^    bool AutomaticPartialCharge()  { return(_autoPartialCharge); }$/;"	f	class:OpenBabel::OBMol
Automorphism	include/openbabel/isomorphism.h	/^  typedef OBIsomorphismMapper::Mapping Automorphism;$/;"	t	namespace:OpenBabel
Automorphisms	include/openbabel/isomorphism.h	/^  typedef OBIsomorphismMapper::Mappings Automorphisms;$/;"	t	namespace:OpenBabel
AuxLbl	src/formats/libinchi/ichiprt1.c	/^const INCHI_TAG AuxLbl[] =$/;"	v
Average	include/openbabel/conformersearch.h	/^      enum Convergence { Highest, Lowest, Sum, Average };$/;"	e	enum:OpenBabel::OBConformerScore::Convergence
AverageBondAngle	src/atom.cpp	/^  double	  OBAtom::AverageBondAngle()$/;"	f	class:OpenBabel::OBAtom
B	src/charges/eem.cpp	/^    double B;$/;"	m	struct:OpenBabel::EEMParameter	file:
B	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
BACKBONE	include/openbabel/residue.h	/^      BACKBONE         = 2,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
BAD_CAST	include/libxml/xmlstring.h	36;"	d
BASE_BUFFER_SIZE	include/libxml/tree.h	55;"	d
BASE_H_NUMBER	src/formats/libinchi/ichican2.c	69;"	d	file:
BASIC	include/openbabel/residue.h	/^      BASIC       =  4,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
BASIS	src/formats/daltonformat.cpp	/^    enum BasisFormat_t {BASIS, ATOMBASIS, INTGRL};$/;"	e	enum:OpenBabel::DALTONInputFormat::BasisFormat_t	file:
BCN	include/inchi/ichicant.h	/^} BCN;$/;"	t	typeref:struct:tagBaseCanonNumbering
BC_ASSIGN	src/chains.cpp	127;"	d	file:
BC_COUNT	src/chains.cpp	128;"	d	file:
BC_ELEM	src/chains.cpp	129;"	d	file:
BC_EVAL	src/chains.cpp	130;"	d	file:
BC_IDENT	src/chains.cpp	131;"	d	file:
BC_LOCAL	src/chains.cpp	132;"	d	file:
BEST_PARITY	include/inchi/mode.h	704;"	d
BEST_PARITY	include/inchi/mode.h	709;"	d
BETA_ORBITAL_PATTERN	src/formats/nwchemformat.cpp	/^static const char* BETA_ORBITAL_PATTERN = "Beta";$/;"	m	namespace:OpenBabel	file:
BE_ANDHI	src/parsmart.cpp	133;"	d	file:
BE_ANDLO	src/parsmart.cpp	134;"	d	file:
BE_ANY	src/parsmart.cpp	137;"	d	file:
BE_AROM	src/parsmart.cpp	143;"	d	file:
BE_Any	src/formats/smiley.h	/^    BE_Any = BE_True$/;"	e	enum:Smiley::SmartsBondExprType
BE_Aromatic	src/formats/smiley.h	/^    BE_Aromatic,$/;"	e	enum:Smiley::SmartsBondExprType
BE_DEFAULT	src/parsmart.cpp	138;"	d	file:
BE_DOUBLE	src/parsmart.cpp	140;"	d	file:
BE_DOWN	src/parsmart.cpp	146;"	d	file:
BE_DOWNUNSPEC	src/parsmart.cpp	148;"	d	file:
BE_Double	src/formats/smiley.h	/^    BE_Double,$/;"	e	enum:Smiley::SmartsBondExprType
BE_Down	src/formats/smiley.h	/^    BE_Down,$/;"	e	enum:Smiley::SmartsBondExprType
BE_False	src/formats/smiley.h	/^    BE_False,$/;"	e	enum:Smiley::SmartsBondExprType
BE_NOT	src/parsmart.cpp	136;"	d	file:
BE_OR	src/parsmart.cpp	135;"	d	file:
BE_QUAD	src/parsmart.cpp	142;"	d	file:
BE_Quadriple	src/formats/smiley.h	/^    BE_Quadriple,$/;"	e	enum:Smiley::SmartsBondExprType
BE_RING	src/parsmart.cpp	144;"	d	file:
BE_Ring	src/formats/smiley.h	/^    BE_Ring,$/;"	e	enum:Smiley::SmartsBondExprType
BE_SINGLE	src/parsmart.cpp	139;"	d	file:
BE_Single	src/formats/smiley.h	/^    BE_Single,$/;"	e	enum:Smiley::SmartsBondExprType
BE_TRIPLE	src/parsmart.cpp	141;"	d	file:
BE_Triple	src/formats/smiley.h	/^    BE_Triple,$/;"	e	enum:Smiley::SmartsBondExprType
BE_True	src/formats/smiley.h	/^    BE_True = AE_AtomClass + 1,$/;"	e	enum:Smiley::SmartsBondExprType
BE_UP	src/parsmart.cpp	145;"	d	file:
BE_UPUNSPEC	src/parsmart.cpp	147;"	d	file:
BE_Up	src/formats/smiley.h	/^    BE_Up,$/;"	e	enum:Smiley::SmartsBondExprType
BFS_Q	include/inchi/ichirvrs.h	/^} BFS_Q;$/;"	t	typeref:struct:tagBfsQueue
BFS_Q_CLEAR	include/inchi/ichirvrs.h	89;"	d
BFS_Q_FREE	include/inchi/ichirvrs.h	90;"	d
BF_AROMATIC	src/chains.cpp	137;"	d	file:
BF_DOUBLE	src/chains.cpp	135;"	d	file:
BF_SINGLE	src/chains.cpp	134;"	d	file:
BF_TRIPLE	src/chains.cpp	136;"	d	file:
BGFFormat	src/formats/bgfformat.cpp	/^    BGFFormat()$/;"	f	class:OpenBabel::BGFFormat
BGFFormat	src/formats/bgfformat.cpp	/^  class BGFFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
BITS_PARITY	include/inchi/extr_ct.h	212;"	d
BIT_WORD_MASK	include/inchi/ichi_bns.h	348;"	d
BLOSSOM_BASE	include/inchi/ichi_bns.h	145;"	d
BNS_ADD_ATOMS	include/inchi/ichi_bns.h	114;"	d
BNS_ADD_EDGES	include/inchi/ichi_bns.h	115;"	d
BNS_ADD_SUPER_TGROUP	include/inchi/ichi_bns.h	111;"	d
BNS_ALTBOND_ERR	include/inchi/ichierr.h	94;"	d
BNS_ALTPATH_OVFL	include/inchi/ichierr.h	84;"	d
BNS_ALT_PATH	include/inchi/ichi_bns.h	/^} BNS_ALT_PATH;$/;"	t	typeref:union:BnsAltPath
BNS_BOND_ERR	include/inchi/ichierr.h	85;"	d
BNS_CANT_SET_BOND	include/inchi/ichierr.h	90;"	d
BNS_CAP_FLOW_ERR	include/inchi/ichierr.h	91;"	d
BNS_CHK_ALTP_NO_ALTPATH	src/formats/libinchi/ichi_bns.c	5462;"	d	file:
BNS_CHK_ALTP_SAME_TGROUP	src/formats/libinchi/ichi_bns.c	5463;"	d	file:
BNS_CHK_ALTP_SAME_VERTEX	src/formats/libinchi/ichi_bns.c	5464;"	d	file:
BNS_CHK_ALTP_SET_SUCCESS	src/formats/libinchi/ichi_bns.c	5465;"	d	file:
BNS_CPOINT_ERR	include/inchi/ichierr.h	89;"	d
BNS_EDGE	include/inchi/ichi_bns.h	/^} BNS_EDGE;$/;"	t	typeref:struct:BnsEdge
BNS_EDGE_FORBIDDEN_MASK	include/inchi/ichi_bns.h	65;"	d
BNS_EDGE_FORBIDDEN_TEMP	include/inchi/ichi_bns.h	66;"	d
BNS_EDGE_FORBIDDEN_TEST	include/inchi/ichi_bns.h	67;"	d
BNS_EF_ALTR_BONDS	include/inchi/ichi_bns.h	379;"	d
BNS_EF_ALTR_NS	include/inchi/ichi_bns.h	387;"	d
BNS_EF_CHNG_BONDS	include/inchi/ichi_bns.h	378;"	d
BNS_EF_CHNG_FLOW	include/inchi/ichi_bns.h	375;"	d
BNS_EF_CHNG_RSTR	include/inchi/ichi_bns.h	377;"	d
BNS_EF_RAD_SRCH	include/inchi/ichi_bns.h	389;"	d
BNS_EF_RSTR_FLOW	include/inchi/ichi_bns.h	376;"	d
BNS_EF_SAVE_ALL	include/inchi/ichi_bns.h	386;"	d
BNS_EF_SET_NOSTEREO	include/inchi/ichi_bns.h	382;"	d
BNS_EF_UPD_H_CHARGE	include/inchi/ichi_bns.h	384;"	d
BNS_EF_UPD_RAD_ORI	include/inchi/ichi_bns.h	380;"	d
BNS_ERR	include/inchi/ichierr.h	80;"	d
BNS_FLOW_CHANGES	include/inchi/ichi_bns.h	/^} BNS_FLOW_CHANGES;$/;"	t	typeref:struct:tagBNS_FLOW_CHANGES
BNS_IEDGE	include/inchi/ichi_bns.h	/^typedef S_SHORT BNS_IEDGE;$/;"	t
BNS_MARK_EDGE_2_DISCONNECT	include/inchi/mode.h	401;"	d
BNS_MARK_ONLY_BLOCKS	src/formats/libinchi/ichi_bns.c	59;"	d	file:
BNS_MAX_ERR_VALUE	include/inchi/ichierr.h	96;"	d
BNS_MAX_NUM_FLOW_CHANGES	src/formats/libinchi/ichi_bns.c	256;"	d	file:
BNS_OUT_OF_RAM	include/inchi/ichierr.h	82;"	d
BNS_PROGRAM_ERR	include/inchi/ichierr.h	83;"	d
BNS_PROTECT_FROM_TAUT	include/inchi/mode.h	400;"	d
BNS_RADICAL_ERR	include/inchi/ichierr.h	92;"	d
BNS_RAD_SEARCH	include/inchi/mode.h	289;"	d
BNS_REINIT_ERR	include/inchi/ichierr.h	93;"	d
BNS_SET_ALTP_ERR	include/inchi/ichierr.h	88;"	d
BNS_ST_EDGE	include/inchi/ichi_bns.h	/^} BNS_ST_EDGE;$/;"	t	typeref:struct:BnsStEdge
BNS_VERTEX	include/inchi/ichi_bns.h	/^}BNS_VERTEX;$/;"	t	typeref:struct:BnsVertex
BNS_VERT_EDGE_OVFL	include/inchi/ichierr.h	87;"	d
BNS_VERT_NUM_ERR	include/inchi/ichierr.h	86;"	d
BNS_VERT_TYPE_ACID	include/inchi/ichi_bns.h	81;"	d
BNS_VERT_TYPE_ANY_GROUP	include/inchi/ichi_bns.h	85;"	d
BNS_VERT_TYPE_ATOM	include/inchi/ichi_bns.h	71;"	d
BNS_VERT_TYPE_CARBON_GR	include/inchi/ichi_bns.h	82;"	d
BNS_VERT_TYPE_C_GROUP	include/inchi/ichi_bns.h	75;"	d
BNS_VERT_TYPE_C_NEGATIVE	include/inchi/ichi_bns.h	80;"	d
BNS_VERT_TYPE_C_POINT	include/inchi/ichi_bns.h	74;"	d
BNS_VERT_TYPE_ENDPOINT	include/inchi/ichi_bns.h	72;"	d
BNS_VERT_TYPE_METAL_GR	include/inchi/ichi_bns.h	83;"	d
BNS_VERT_TYPE_SUPER_TGROUP	include/inchi/ichi_bns.h	76;"	d
BNS_VERT_TYPE_TEMP	include/inchi/ichi_bns.h	77;"	d
BNS_VERT_TYPE_TGROUP	include/inchi/ichi_bns.h	73;"	d
BNS_VERT_TYPE__AUX	include/inchi/ichi_bns.h	79;"	d
BNS_VT_CHRG_STRUCT	include/inchi/ichi_bns.h	100;"	d
BNS_VT_C_NEG	include/inchi/ichi_bns.h	90;"	d
BNS_VT_C_NEG_ALL	include/inchi/ichi_bns.h	98;"	d
BNS_VT_C_NEG_C	include/inchi/ichi_bns.h	92;"	d
BNS_VT_C_NEG_M	include/inchi/ichi_bns.h	94;"	d
BNS_VT_C_POS	include/inchi/ichi_bns.h	89;"	d
BNS_VT_C_POS_ALL	include/inchi/ichi_bns.h	97;"	d
BNS_VT_C_POS_C	include/inchi/ichi_bns.h	91;"	d
BNS_VT_C_POS_M	include/inchi/ichi_bns.h	93;"	d
BNS_VT_M_GROUP	include/inchi/ichi_bns.h	95;"	d
BNS_VT_YVCONNECTOR	include/inchi/ichi_bns.h	101;"	d
BNS_WRONG_PARMS	include/inchi/ichierr.h	81;"	d
BN_AATG	include/inchi/ichi_bns.h	/^} BN_AATG;$/;"	t	typeref:struct:BN_AtomsAtTautGroup
BN_AtomsAtTautGroup	include/inchi/ichi_bns.h	/^typedef struct BN_AtomsAtTautGroup {$/;"	s
BN_DATA	include/inchi/ichi_bns.h	/^} BN_DATA;$/;"	t	typeref:struct:BalancedNetworkData
BN_MAX_ALTP	include/inchi/ichi_bns.h	43;"	d
BN_STRUCT	include/inchi/ichi_bns.h	/^} BN_STRUCT;$/;"	t	typeref:struct:BalancedNetworkStructure
BOHR	include/openbabel/griddata.h	/^    typedef enum { BOHR, ANGSTROM, OTHER } Unit;$/;"	e	enum:OpenBabel::OBGridData::__anon44
BOHR2ANGSTROM	src/formats/fchkformat.cpp	26;"	d	file:
BOHR_TO_ANGSTROM	src/formats/abinitformat.cpp	22;"	d	file:
BOHR_TO_ANGSTROM	src/formats/adfformat.cpp	/^static const double BOHR_TO_ANGSTROM = 0.529177249;$/;"	v	file:
BOHR_TO_ANGSTROM	src/formats/daltonformat.cpp	26;"	d	file:
BOHR_TO_ANGSTROM	src/formats/dmolformat.cpp	22;"	d	file:
BOHR_TO_ANGSTROM	src/formats/gamessformat.cpp	29;"	d	file:
BOHR_TO_ANGSTROM	src/formats/gamessukformat.cpp	29;"	d	file:
BOHR_TO_ANGSTROM	src/formats/gausscubeformat.cpp	/^static const double BOHR_TO_ANGSTROM = 0.529177249;$/;"	v	file:
BOHR_TO_ANGSTROM	src/formats/moldenformat.cpp	38;"	d	file:
BOHR_TO_ANGSTROM	src/formats/molproformat.cpp	25;"	d	file:
BOHR_TO_ANGSTROM	src/formats/mpqcformat.cpp	22;"	d	file:
BOHR_TO_ANGSTROM	src/formats/pwscfformat.cpp	20;"	d	file:
BONDPOOL	src/parsmart.cpp	94;"	d	file:
BOND_ADD	include/inchi/extr_ct.h	90;"	d
BOND_ALT12NS	include/inchi/extr_ct.h	194;"	d
BOND_ALTERN	include/inchi/extr_ct.h	188;"	d
BOND_ALT_123	include/inchi/extr_ct.h	190;"	d
BOND_ALT_13	include/inchi/extr_ct.h	191;"	d
BOND_ALT_23	include/inchi/extr_ct.h	192;"	d
BOND_BITS	include/inchi/extr_ct.h	89;"	d
BOND_CHAIN_LEN	include/inchi/extr_ct.h	222;"	d
BOND_DOUBLE	include/inchi/extr_ct.h	186;"	d
BOND_MARK_ALL	include/inchi/extr_ct.h	199;"	d
BOND_MARK_ALT12	include/inchi/extr_ct.h	201;"	d
BOND_MARK_ALT123	include/inchi/extr_ct.h	202;"	d
BOND_MARK_ALT12NS	include/inchi/extr_ct.h	205;"	d
BOND_MARK_ALT13	include/inchi/extr_ct.h	203;"	d
BOND_MARK_ALT23	include/inchi/extr_ct.h	204;"	d
BOND_MARK_ERR	include/inchi/incomdef.h	95;"	d
BOND_MARK_EVEN	include/inchi/incomdef.h	92;"	d
BOND_MARK_HIGHLIGHT	include/inchi/incomdef.h	89;"	d
BOND_MARK_MASK	include/inchi/extr_ct.h	206;"	d
BOND_MARK_ODD	include/inchi/incomdef.h	91;"	d
BOND_MARK_PARITY	include/inchi/incomdef.h	88;"	d
BOND_MARK_STEREO	include/inchi/ichirvrs.h	283;"	d
BOND_MARK_UNDF	include/inchi/incomdef.h	93;"	d
BOND_MARK_UNKN	include/inchi/incomdef.h	94;"	d
BOND_MASK	include/inchi/extr_ct.h	88;"	d
BOND_NUMDIF	include/inchi/extr_ct.h	195;"	d
BOND_PARITY_PART_DEFINED	include/inchi/extr_ct.h	276;"	d
BOND_PARITY_PART_KNOWN	include/inchi/extr_ct.h	277;"	d
BOND_PARITY_UNDEFINED	src/formats/libinchi/ichister.c	75;"	d	file:
BOND_SINGLE	include/inchi/extr_ct.h	185;"	d
BOND_TAUTOM	include/inchi/extr_ct.h	193;"	d
BOND_TRIPLE	include/inchi/extr_ct.h	187;"	d
BOND_TYPE_ALTERN	include/inchi/incomdef.h	70;"	d
BOND_TYPE_DOUBLE	include/inchi/incomdef.h	68;"	d
BOND_TYPE_MASK	include/inchi/extr_ct.h	197;"	d
BOND_TYPE_SINGLE	include/inchi/incomdef.h	67;"	d
BOND_TYPE_STEREO	include/inchi/ichirvrs.h	284;"	d
BOND_TYPE_TRIPLE	include/inchi/incomdef.h	69;"	d
BOND_WRONG	src/formats/libinchi/ichiqueu.c	152;"	d	file:
BOSum	src/atom.cpp	/^  unsigned int OBAtom::BOSum() const$/;"	f	class:OpenBabel::OBAtom
BREAK_ALSO_NEIGH_TIE	include/inchi/mode.h	483;"	d
BREAK_ALSO_NEIGH_TIE_ROTATE	include/inchi/mode.h	484;"	d
BREAK_ONE_MORE_SC_TIE	include/inchi/mode.h	482;"	d
BRS_MODE	include/inchi/ichi_bns.h	/^} BRS_MODE;$/;"	t	typeref:enum:tagBnsRadSrchMode
BT_ALTERN_BOND	src/formats/libinchi/ichi_bns.c	9226;"	d	file:
BT_ALTERN_NS_BOND	src/formats/libinchi/ichi_bns.c	9229;"	d	file:
BT_ALTERN_UNKN_BOND	src/formats/libinchi/ichi_bns.c	9233;"	d	file:
BT_ALT_BOND_MASK	src/formats/libinchi/ichi_bns.c	9239;"	d	file:
BT_IGNORE_BOND	src/formats/libinchi/ichi_bns.c	9235;"	d	file:
BT_NONSTEREO_MASK	src/formats/libinchi/ichi_bns.c	9237;"	d	file:
BT_NONTAUT_BOND_MASK	src/formats/libinchi/ichi_bns.c	9241;"	d	file:
BT_OTHER_ALTERN_BOND	src/formats/libinchi/ichi_bns.c	9227;"	d	file:
BT_TAUTOM_BOND	src/formats/libinchi/ichi_bns.c	9231;"	d	file:
BUFF_SIZE	include/openbabel/mol.h	790;"	d
BUFF_SIZE	src/dlhandler_unix.cpp	46;"	d	file:
BUFF_SIZE	src/dlhandler_win32.cpp	36;"	d	file:
BUFF_SIZE	src/obconversion.cpp	61;"	d	file:
BUILD_WITH_AMI	include/inchi/mode.h	108;"	d
BURIED	include/openbabel/residue.h	/^      BURIED      =  5,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
BYTE_BITS	include/inchi/extr_ct.h	86;"	d
Ba	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Backtrack	src/isomorphism.cpp	/^      void Backtrack(State &state)$/;"	f	class:OpenBabel::VF2Mapper
Backtrack	src/tautomer.cpp	/^    void Backtrack(std::vector<Type> &atomTypes, std::vector<Type> &bondTypes, std::vector<Level> &levels, int &numHydrogens)$/;"	f	struct:OpenBabel::TautomerImpl
BadOptimization	src/pointgroup.cpp	/^    int                    BadOptimization       ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
BalancedNetworkData	include/inchi/ichi_bns.h	/^typedef struct BalancedNetworkData {$/;"	s
BalancedNetworkSearch	src/formats/libinchi/ichi_bns.c	/^int BalancedNetworkSearch ( BN_STRUCT* pBNS, BN_DATA *pBD, int bChangeFlow )$/;"	f
BalancedNetworkStructure	include/inchi/ichi_bns.h	/^typedef struct BalancedNetworkStructure {$/;"	s
BallStickFormat	src/formats/balstformat.cpp	/^    BallStickFormat()$/;"	f	class:OpenBabel::BallStickFormat
BallStickFormat	src/formats/balstformat.cpp	/^  class BallStickFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
BaseFindType	src/plugin.cpp	/^OBPlugin* OBPlugin::BaseFindType(PluginMapType& Map, const char* ID)$/;"	f	class:OpenBabel::OBPlugin
BasePtr	include/inchi/ichi_bns.h	/^    Vertex          *BasePtr;    \/*[MAX_VERTEX];  pointer toward the base of C(v) *\/$/;"	m	struct:BalancedNetworkData
BasisFormat_t	src/formats/daltonformat.cpp	/^    enum BasisFormat_t {BASIS, ATOMBASIS, INTGRL};$/;"	g	class:OpenBabel::DALTONInputFormat	file:
BatchAllocator	src/formats/json/jsoncpp.cpp	/^   BatchAllocator( unsigned int objectsPerPage = 255 )$/;"	f	class:Json::BatchAllocator
BatchAllocator	src/formats/json/jsoncpp.cpp	/^class BatchAllocator$/;"	c	namespace:Json	file:
BatchFileName	src/obconversion.cpp	/^  string OBConversion::BatchFileName(string& BaseName, string& InFile)$/;"	f	class:OpenBabel::OBConversion
BatchInfo	src/formats/json/jsoncpp.cpp	/^   struct BatchInfo$/;"	s	class:Json::BatchAllocator	file:
Bcn	include/inchi/inchi_dll_a.h	/^    BCN Bcn;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
Be	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
Begin	include/openbabel/plugin.h	/^  static PluginIterator Begin(const char* PluginID)$/;"	f	class:OpenBabel::OBPlugin
Begin	src/formats/xml/cdxmlformat.cpp	/^  int Begin, End, Order, Flag; \/\/ Data for current bond$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
BeginAtom	src/mol.cpp	/^  OBAtom *OBMol::BeginAtom(OBAtomIterator &i)$/;"	f	class:OpenBabel::OBMol
BeginAtom	src/residue.cpp	/^  OBAtom *OBResidue::BeginAtom(vector<OBAtom*>::iterator &i)$/;"	f	class:OpenBabel::OBResidue
BeginAtoms	include/openbabel/mol.h	/^    OBAtomIterator BeginAtoms()   { return _vatom.begin(); }$/;"	f	class:OpenBabel::OBMol
BeginAtoms	include/openbabel/residue.h	/^    OBAtomIterator BeginAtoms()   { return _atoms.begin(); }$/;"	f	class:OpenBabel::OBResidue
BeginBond	src/atom.cpp	/^  OBBond *OBAtom::BeginBond(OBBondIterator &i)$/;"	f	class:OpenBabel::OBAtom
BeginBond	src/mol.cpp	/^  OBBond *OBMol::BeginBond(OBBondIterator &i)$/;"	f	class:OpenBabel::OBMol
BeginBonds	include/openbabel/atom.h	/^      OBBondIterator BeginBonds()$/;"	f	class:OpenBabel::OBAtom
BeginBonds	include/openbabel/mol.h	/^    OBBondIterator BeginBonds()   { return _vbond.begin(); }$/;"	f	class:OpenBabel::OBMol
BeginConformer	include/openbabel/mol.h	/^    double  *BeginConformer(std::vector<double*>::iterator&i)$/;"	f	class:OpenBabel::OBMol
BeginData	include/openbabel/base.h	/^      OBDataIterator  BeginData()$/;"	f	class:OpenBabel::OBBase
BeginInternalCoord	include/openbabel/mol.h	/^    OBInternalCoord *BeginInternalCoord(std::vector<OBInternalCoord*>::iterator &i)$/;"	f	class:OpenBabel::OBMol
BeginMList	include/openbabel/parsmart.h	/^    std::vector<std::vector<int> >::iterator BeginMList()$/;"	f	class:OpenBabel::OBSmartsPattern
BeginModify	src/mol.cpp	/^  void OBMol::BeginModify()$/;"	f	class:OpenBabel::OBMol
BeginNbrAtom	src/atom.cpp	/^  OBAtom *OBAtom::BeginNbrAtom(OBBondIterator &i)$/;"	f	class:OpenBabel::OBAtom
BeginPoint	include/openbabel/generic.h	/^    OBFreeGridPoint *BeginPoint(OBFreeGridPointIterator &i)$/;"	f	class:OpenBabel::OBFreeGrid
BeginPoints	include/openbabel/generic.h	/^    OBFreeGridPointIterator BeginPoints() $/;"	f	class:OpenBabel::OBFreeGrid
BeginResidue	include/openbabel/mol.h	/^    OBResidue *BeginResidue(OBResidueIterator &i)$/;"	f	class:OpenBabel::OBMol
BeginResidues	include/openbabel/mol.h	/^    OBResidueIterator BeginResidues() { return _residue.begin(); }$/;"	f	class:OpenBabel::OBMol
BeginRing	src/generic.cpp	/^  OBRing *OBRingData::BeginRing(std::vector<OBRing*>::iterator &i)$/;"	f	class:OpenBabel::OBRingData
BeginRings	include/openbabel/generic.h	/^    std::vector<OBRing*>::iterator BeginRings()$/;"	f	class:OpenBabel::OBRingData
BeginRings	include/openbabel/ring.h	/^    std::vector<OBRing*>::iterator BeginRings()$/;"	f	class:OpenBabel::OBRingSearch
BeginRotamer	include/openbabel/rotamer.h	/^    std::vector<unsigned char*>::iterator BeginRotamer()$/;"	f	class:OpenBabel::OBRotamerList
BeginRotor	include/openbabel/rotor.h	/^    OBRotor *BeginRotor(OBRotorIterator &i)$/;"	f	class:OpenBabel::OBRotorList
BeginRotors	include/openbabel/rotor.h	/^    OBRotorIterator BeginRotors()   { return(_rotor.begin()); }$/;"	f	class:OpenBabel::OBRotorList
BeginTorIncrement	include/openbabel/rotor.h	/^    std::vector<double>::iterator BeginTorIncrement()$/;"	f	class:OpenBabel::OBRotor
BeginTransform	src/math/spacegroup.cpp	/^  transform3d const * SpaceGroup::BeginTransform(transform3dIterator &i) const$/;"	f	class:OpenBabel::SpaceGroup
Bh	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Bi	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
BinOpStruct	src/chains.cpp	/^  } BinOpStruct;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon71	file:
BinaryOpWithoutLeftOperand	src/formats/smiley.h	/^    BinaryOpWithoutLeftOperand = 12,$/;"	e	enum:Smiley::ErrorCode
BinaryOpWithoutRightOperand	src/formats/smiley.h	/^    BinaryOpWithoutRightOperand = 13,$/;"	e	enum:Smiley::ErrorCode
Bit05All	src/chains.cpp	123;"	d	file:
BitC	src/chains.cpp	95;"	d	file:
BitC1	src/chains.cpp	120;"	d	file:
BitC2All	src/chains.cpp	125;"	d	file:
BitC2DNA	src/chains.cpp	118;"	d	file:
BitC2RNA	src/chains.cpp	117;"	d	file:
BitC3	src/chains.cpp	114;"	d	file:
BitC4	src/chains.cpp	112;"	d	file:
BitC5	src/chains.cpp	111;"	d	file:
BitCA	src/chains.cpp	93;"	d	file:
BitCAAll	src/chains.cpp	102;"	d	file:
BitCAGly	src/chains.cpp	94;"	d	file:
BitCAll	src/chains.cpp	103;"	d	file:
BitCOXT	src/chains.cpp	97;"	d	file:
BitCTer	src/chains.cpp	96;"	d	file:
BitIsOn	include/openbabel/bitvec.h	/^      bool BitIsOn(int bit_offset) const$/;"	f	class:OpenBabel::OBBitVec
BitIsSet	include/openbabel/bitvec.h	/^      bool BitIsSet(unsigned bit_offset) const$/;"	f	class:OpenBabel::OBBitVec
BitN	src/chains.cpp	89;"	d	file:
BitNAll	src/chains.cpp	101;"	d	file:
BitNPT	src/chains.cpp	92;"	d	file:
BitNPro	src/chains.cpp	91;"	d	file:
BitNTer	src/chains.cpp	90;"	d	file:
BitO	src/chains.cpp	98;"	d	file:
BitO2	src/chains.cpp	119;"	d	file:
BitO3	src/chains.cpp	115;"	d	file:
BitO3All	src/chains.cpp	124;"	d	file:
BitO3Ter	src/chains.cpp	116;"	d	file:
BitO4	src/chains.cpp	113;"	d	file:
BitO5	src/chains.cpp	109;"	d	file:
BitO5Ter	src/chains.cpp	110;"	d	file:
BitOAll	src/chains.cpp	104;"	d	file:
BitOP	src/chains.cpp	108;"	d	file:
BitOXT	src/chains.cpp	99;"	d	file:
BitP	src/chains.cpp	106;"	d	file:
BitPAll	src/chains.cpp	122;"	d	file:
BitPTer	src/chains.cpp	107;"	d	file:
Bk	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
BnsAdjustFlowBondsRad	src/formats/libinchi/ichi_bns.c	/^int BnsAdjustFlowBondsRad( BN_STRUCT *pBNS, BN_DATA *pBD, inp_ATOM *at, int num_atoms )$/;"	f
BnsAltPath	include/inchi/ichi_bns.h	/^typedef union BnsAltPath {$/;"	u
BnsEdge	include/inchi/ichi_bns.h	/^typedef struct BnsEdge {$/;"	s
BnsStEdge	include/inchi/ichi_bns.h	/^typedef struct BnsStEdge {$/;"	s
BnsTestAndMarkAltBonds	src/formats/libinchi/ichi_bns.c	/^int BnsTestAndMarkAltBonds(  BN_STRUCT *pBNS, BN_DATA *pBD, inp_ATOM *at, int num_atoms, BNS_FLOW_CHANGES *fcd, int bChangeFlow, int nBondTypeToTest )$/;"	f
BnsVertex	include/inchi/ichi_bns.h	/^typedef struct BnsVertex {$/;"	s
BondArray	src/formats/xml/cmlformat.cpp	/^    cmlArray BondArray;$/;"	m	class:OpenBabel::CMLFormat	file:
BondBeginAtIndx	src/formats/xml/pubchem.cpp	/^	vector<int> BondBeginAtIndx;$/;"	m	class:OpenBabel::PubChemFormat	file:
BondDirection	include/openbabel/stereo/stereo.h	/^    enum BondDirection { \/\/ Values taken from MDL format$/;"	g	struct:OpenBabel::OBStereo
BondDownChar	src/formats/smilesformat.cpp	/^  const char BondDownChar = '\/';$/;"	m	namespace:OpenBabel	file:
BondEndAtIndx	src/formats/xml/pubchem.cpp	/^	vector<int> BondEndAtIndx;$/;"	m	class:OpenBabel::PubChemFormat	file:
BondExpr	include/openbabel/parsmart.h	/^  } BondExpr;$/;"	t	namespace:OpenBabel	typeref:union:OpenBabel::_BondExpr
BondFlowMaxcapMinorder	src/formats/libinchi/ichirvr1.c	/^int BondFlowMaxcapMinorder( inp_ATOM *atom, VAL_AT *pVA, ICHICONST SRM *pSrm, int iat, int ineigh,$/;"	f
BondIndex	src/chains.cpp	/^  static int  BondIndex;$/;"	m	namespace:OpenBabel	file:
BondOrder	src/formats/xml/pubchem.cpp	/^	vector<int> BondOrder;$/;"	m	class:OpenBabel::PubChemFormat	file:
BondSpec	include/openbabel/parsmart.h	/^  BondSpec;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon54
BondUpChar	src/formats/smilesformat.cpp	/^  const char BondUpChar = '\\\\';$/;"	m	namespace:OpenBabel	file:
BothEven	src/rand.cpp	52;"	d	file:
BoxFormat	src/formats/boxformat.cpp	/^    BoxFormat()$/;"	f	class:OpenBabel::BoxFormat
BoxFormat	src/formats/boxformat.cpp	/^class BoxFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Br	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
BranchInfo	src/formats/smiley.h	/^        BranchInfo() : pos(std::string::npos), index(-1)$/;"	f	struct:Smiley::Parser::BranchInfo
BranchInfo	src/formats/smiley.h	/^        BranchInfo(int index_, std::size_t pos_) : pos(pos_), index(index_)$/;"	f	struct:Smiley::Parser::BranchInfo
BranchInfo	src/formats/smiley.h	/^      struct BranchInfo$/;"	s	class:Smiley::Parser
BreakAllTies	src/formats/libinchi/ichisort.c	/^int BreakAllTies( int num_atoms, int num_max, AT_RANK **pRankStack,$/;"	f
BreakNeighborsTie	src/formats/libinchi/ichimap2.c	/^int BreakNeighborsTie(  sp_ATOM *at, int num_atoms, int num_at_tg, int ib, int ia,$/;"	f
Bresenham	src/depict/asciipainter.cpp	/^  string ASCIIPainter::Bresenham(int x, int y, int x2, int y2, vector<pair<int, int> > &coords)$/;"	f	class:OpenBabel::ASCIIPainter
BucketIndex	include/openbabel/json/json.h	/^      typedef unsigned int BucketIndex;$/;"	t	class:Json::ValueInternalMap
Build	src/builder.cpp	/^  bool OBBuilder::Build(OBMol &mol, bool stereoWarnings)$/;"	f	class:OpenBabel::OBBuilder
BuildAtomBin	src/parsmart.cpp	/^  static AtomExpr *BuildAtomBin( int op, AtomExpr *lft, AtomExpr *rgt )$/;"	f	namespace:OpenBabel
BuildAtomLeaf	src/parsmart.cpp	/^  static AtomExpr *BuildAtomLeaf( int type, int val )$/;"	f	namespace:OpenBabel
BuildAtomNot	src/parsmart.cpp	/^  static AtomExpr *BuildAtomNot( AtomExpr *expr )$/;"	f	namespace:OpenBabel
BuildAtomPred	src/parsmart.cpp	/^  static AtomExpr *BuildAtomPred( int type )$/;"	f	namespace:OpenBabel
BuildAtomRecurs	src/parsmart.cpp	/^  static AtomExpr *BuildAtomRecurs( Pattern *pat )$/;"	f	namespace:OpenBabel
BuildBondBin	src/parsmart.cpp	/^  static BondExpr *BuildBondBin( int op, BondExpr *lft, BondExpr *rgt )$/;"	f	namespace:OpenBabel
BuildBondLeaf	src/parsmart.cpp	/^  static BondExpr *BuildBondLeaf( int type )$/;"	f	namespace:OpenBabel
BuildBondNot	src/parsmart.cpp	/^  static BondExpr *BuildBondNot( BondExpr *expr )$/;"	f	namespace:OpenBabel
BuildCanonTree	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::BuildCanonTree(OBMol &mol,$/;"	f	class:OpenBabel::OBMol2Cansmi
BuildOBRTreeVector	src/ring.cpp	/^  void BuildOBRTreeVector(OBAtom *atom,OBRTree *prv,vector<OBRTree*> &vt,OBBitVec &bv)$/;"	f	namespace:OpenBabel
Byte	include/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	include/zconf.h	50;"	d
ByteCode	src/chains.cpp	/^  } ByteCode;$/;"	t	namespace:OpenBabel	typeref:union:OpenBabel::_ByteCode	file:
Bytef	include/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	include/zconf.h	268;"	d
Bytef	include/zconf.h	53;"	d
C	include/openbabel/residue.h	/^      C     = 25,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
C	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
C1	include/openbabel/pointgroup.h	/^        C1 = 0, Cs, Ci, \/\/ 0 to 2$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C11	src/stereo/stereoutil.h	/^    C11 = 11 \/\/ the same symmetry class$/;"	e	enum:OpenBabel::NeighborSymmetryClasses
C12	src/stereo/stereoutil.h	/^    C12 = 12, \/\/ 2 different symmetry classes$/;"	e	enum:OpenBabel::NeighborSymmetryClasses
C2	include/openbabel/pointgroup.h	/^        C2, C3, C4, C5, C6, C7, C8, \/\/ 3 to 9$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C2h	include/openbabel/pointgroup.h	/^        C2h, C3h, C4h, C5h, C6h, C7h, C8h, \/\/ 24 to 30$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C2v	include/openbabel/pointgroup.h	/^        C2v, C3v, C4v, C5v, C6v, C7v, C8v, \/\/ 17 to 23$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C3	include/openbabel/pointgroup.h	/^        C2, C3, C4, C5, C6, C7, C8, \/\/ 3 to 9$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C3h	include/openbabel/pointgroup.h	/^        C2h, C3h, C4h, C5h, C6h, C7h, C8h, \/\/ 24 to 30$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C3v	include/openbabel/pointgroup.h	/^        C2v, C3v, C4v, C5v, C6v, C7v, C8v, \/\/ 17 to 23$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C4	include/openbabel/pointgroup.h	/^        C2, C3, C4, C5, C6, C7, C8, \/\/ 3 to 9$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C4h	include/openbabel/pointgroup.h	/^        C2h, C3h, C4h, C5h, C6h, C7h, C8h, \/\/ 24 to 30$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C4v	include/openbabel/pointgroup.h	/^        C2v, C3v, C4v, C5v, C6v, C7v, C8v, \/\/ 17 to 23$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C5	include/openbabel/pointgroup.h	/^        C2, C3, C4, C5, C6, C7, C8, \/\/ 3 to 9$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C5h	include/openbabel/pointgroup.h	/^        C2h, C3h, C4h, C5h, C6h, C7h, C8h, \/\/ 24 to 30$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C5v	include/openbabel/pointgroup.h	/^        C2v, C3v, C4v, C5v, C6v, C7v, C8v, \/\/ 17 to 23$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C6	include/openbabel/pointgroup.h	/^        C2, C3, C4, C5, C6, C7, C8, \/\/ 3 to 9$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C6h	include/openbabel/pointgroup.h	/^        C2h, C3h, C4h, C5h, C6h, C7h, C8h, \/\/ 24 to 30$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C6v	include/openbabel/pointgroup.h	/^        C2v, C3v, C4v, C5v, C6v, C7v, C8v, \/\/ 17 to 23$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C7	include/openbabel/pointgroup.h	/^        C2, C3, C4, C5, C6, C7, C8, \/\/ 3 to 9$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C7h	include/openbabel/pointgroup.h	/^        C2h, C3h, C4h, C5h, C6h, C7h, C8h, \/\/ 24 to 30$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C7v	include/openbabel/pointgroup.h	/^        C2v, C3v, C4v, C5v, C6v, C7v, C8v, \/\/ 17 to 23$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C8	include/openbabel/pointgroup.h	/^        C2, C3, C4, C5, C6, C7, C8, \/\/ 3 to 9$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C8h	include/openbabel/pointgroup.h	/^        C2h, C3h, C4h, C5h, C6h, C7h, C8h, \/\/ 24 to 30$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
C8v	include/openbabel/pointgroup.h	/^        C2v, C3v, C4v, C5v, C6v, C7v, C8v, \/\/ 17 to 23$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
CANON_COUNTS	include/inchi/ichicant.h	/^} CANON_COUNTS;$/;"	t	typeref:struct:tagCanonCounts
CANON_DATA	include/inchi/ichicant.h	/^} CANON_DATA;$/;"	t	typeref:struct:tagCanonData
CANON_FIXH_TRANS	include/inchi/mode.h	378;"	d
CANON_FLAG_ISO_FIXED_H_DIFF	include/inchi/ichitaut.h	243;"	d
CANON_FLAG_ISO_ONLY_NON_TAUT_DIFF	include/inchi/ichitaut.h	241;"	d
CANON_FLAG_ISO_TAUT_DIFF	include/inchi/ichitaut.h	242;"	d
CANON_FLAG_NO_H_RECANON	include/inchi/ichitaut.h	239;"	d
CANON_FLAG_NO_TAUT_H_DIFF	include/inchi/ichitaut.h	240;"	d
CANON_MODE_CT	include/inchi/mode.h	662;"	d
CANON_MODE_ISO	include/inchi/mode.h	664;"	d
CANON_MODE_ISO_STEREO	include/inchi/mode.h	666;"	d
CANON_MODE_MASK	include/inchi/mode.h	668;"	d
CANON_MODE_STEREO	include/inchi/mode.h	665;"	d
CANON_MODE_TAUT	include/inchi/mode.h	663;"	d
CANON_STAT	include/inchi/ichicant.h	/^} CANON_STAT;$/;"	t	typeref:struct:tagCanonStat
CANON_TAUTOMERS	include/inchi/mode.h	683;"	d
CANSMIFormat	src/formats/smilesformat.cpp	/^    CANSMIFormat()$/;"	f	class:OpenBabel::CANSMIFormat
CANSMIFormat	src/formats/smilesformat.cpp	/^  class CANSMIFormat : public SMIBaseFormat$/;"	c	namespace:OpenBabel	file:
CARFormat	src/formats/carformat.cpp	/^    CARFormat()$/;"	f	class:OpenBabel::CARFormat
CARFormat	src/formats/carformat.cpp	/^  class CARFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CARTESIAN	src/formats/gamessukformat.cpp	/^    enum ReadMode_t {CARTESIAN, ZMATRIX, VARIABLES, CONSTANTS, SKIP};$/;"	e	enum:OpenBabel::GAMESSUKFormat::ReadMode_t	file:
CASTEPFormat	src/formats/castepformat.cpp	/^    CASTEPFormat()$/;"	f	class:OpenBabel::CASTEPFormat
CASTEPFormat	src/formats/castepformat.cpp	/^  class CASTEPFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CAST_TO_BOOLEAN	include/libxml/xpathInternals.h	324;"	d
CAST_TO_NUMBER	include/libxml/xpathInternals.h	315;"	d
CAST_TO_STRING	include/libxml/xpathInternals.h	306;"	d
CCCFormat	src/formats/cccformat.cpp	/^    CCCFormat()$/;"	f	class:OpenBabel::CCCFormat
CCCFormat	src/formats/cccformat.cpp	/^class CCCFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CCHARGE1	src/formats/libinchi/ichister.c	1197;"	d	file:
CCHARGE2	src/formats/libinchi/ichister.c	1211;"	d	file:
CCHARGE3	src/formats/libinchi/ichister.c	1227;"	d	file:
CCHEMVALENCEH1	src/formats/libinchi/ichister.c	1199;"	d	file:
CCHEMVALENCEH2	src/formats/libinchi/ichister.c	1213;"	d	file:
CCHEMVALENCEH3	src/formats/libinchi/ichister.c	1229;"	d	file:
CC_CAND	include/inchi/ichirvrs.h	/^} CC_CAND;$/;"	t	typeref:struct:tagChargeChangeCandidate
CDXAbundance	include/chemdrawcdx.h	/^enum CDXAbundance {$/;"	g
CDXArrowType	include/chemdrawcdx.h	/^enum CDXArrowType$/;"	g
CDXAtomCIPType	include/chemdrawcdx.h	/^enum CDXAtomCIPType$/;"	g
CDXAtomGeometry	include/chemdrawcdx.h	/^enum CDXAtomGeometry {$/;"	g
CDXBondCIPType	include/chemdrawcdx.h	/^enum CDXBondCIPType$/;"	g
CDXBondDisplay	include/chemdrawcdx.h	/^enum CDXBondDisplay {$/;"	g
CDXBondDoublePosition	include/chemdrawcdx.h	/^enum CDXBondDoublePosition {$/;"	g
CDXBondOrder	include/chemdrawcdx.h	/^enum CDXBondOrder {$/;"	g
CDXBondReactionParticipation	include/chemdrawcdx.h	/^enum CDXBondReactionParticipation {$/;"	g
CDXBondTopology	include/chemdrawcdx.h	/^enum CDXBondTopology {$/;"	g
CDXBracketType	include/chemdrawcdx.h	/^enum CDXBracketType$/;"	g
CDXBracketUsage	include/chemdrawcdx.h	/^enum CDXBracketUsage$/;"	g
CDXCharSet	include/chemdrawcdx.h	/^enum CDXCharSet$/;"	g
CDXConstraintType	include/chemdrawcdx.h	/^enum CDXConstraintType$/;"	g
CDXDatumID	include/chemdrawcdx.h	/^enum CDXDatumID {$/;"	g
CDXDrawingSpaceType	include/chemdrawcdx.h	/^enum CDXDrawingSpaceType$/;"	g
CDXExternalConnectionType	include/chemdrawcdx.h	/^enum CDXExternalConnectionType {$/;"	g
CDXGeometricFeature	include/chemdrawcdx.h	/^enum CDXGeometricFeature$/;"	g
CDXGraphicType	include/chemdrawcdx.h	/^enum CDXGraphicType {$/;"	g
CDXIsotope	include/chemdrawcdx.h	/^enum CDXIsotope {$/;"	g
CDXLabelDisplay	include/chemdrawcdx.h	/^enum CDXLabelDisplay {$/;"	g
CDXLineType	include/chemdrawcdx.h	/^enum CDXLineType$/;"	g
CDXNodeType	include/chemdrawcdx.h	/^enum CDXNodeType {$/;"	g
CDXObjectID	include/chemdrawcdx.h	/^typedef INT32  CDXObjectID; \/\/ signed for now, due to mac compiler bug?$/;"	t
CDXObjectTagType	include/chemdrawcdx.h	/^enum CDXObjectTagType$/;"	g
CDXOrbitalType	include/chemdrawcdx.h	/^enum CDXOrbitalType$/;"	g
CDXOvalType	include/chemdrawcdx.h	/^enum CDXOvalType$/;"	g
CDXPageDefinition	include/chemdrawcdx.h	/^enum CDXPageDefinition {$/;"	g
CDXPolymerFlipType	include/chemdrawcdx.h	/^enum CDXPolymerFlipType$/;"	g
CDXPolymerRepeatPattern	include/chemdrawcdx.h	/^enum CDXPolymerRepeatPattern$/;"	g
CDXPositioningType	include/chemdrawcdx.h	/^enum CDXPositioningType {$/;"	g
CDXRadical	include/chemdrawcdx.h	/^enum CDXRadical {	\/\/ Same as MDL codes$/;"	g
CDXReactionStereo	include/chemdrawcdx.h	/^enum CDXReactionStereo {$/;"	g
CDXReader	src/formats/chemdrawcdx.cpp	/^CDXReader::CDXReader(std::istream& is) : ifs(is), depth(0)$/;"	f	class:OpenBabel::CDXReader
CDXReader	src/formats/chemdrawcdx.cpp	/^class CDXReader$/;"	c	namespace:OpenBabel	file:
CDXRectangleType	include/chemdrawcdx.h	/^enum CDXRectangleType$/;"	g
CDXRingBondCount	include/chemdrawcdx.h	/^enum CDXRingBondCount {$/;"	g
CDXSideType	include/chemdrawcdx.h	/^enum CDXSideType$/;"	g
CDXSpectrumClass	include/chemdrawcdx.h	/^enum CDXSpectrumClass$/;"	g
CDXSpectrumXType	include/chemdrawcdx.h	/^enum CDXSpectrumXType$/;"	g
CDXSpectrumYType	include/chemdrawcdx.h	/^enum CDXSpectrumYType$/;"	g
CDXSymbolType	include/chemdrawcdx.h	/^enum CDXSymbolType$/;"	g
CDXTag	include/chemdrawcdx.h	/^typedef UINT16 CDXTag;$/;"	t
CDXTextJustification	include/chemdrawcdx.h	/^enum CDXTextJustification {$/;"	g
CDXTranslation	include/chemdrawcdx.h	/^enum CDXTranslation {$/;"	g
CDXUnsaturation	include/chemdrawcdx.h	/^enum CDXUnsaturation {$/;"	g
CFLAG_MARK_BLOCK	src/formats/libinchi/ichinorm.c	1063;"	d	file:
CFLAG_MARK_BLOCK_INV	src/formats/libinchi/ichinorm.c	1064;"	d	file:
CFLAG_MARK_BRANCH	src/formats/libinchi/ichinorm.c	1062;"	d	file:
CFilenames	src/GUI/OBGUI.h	/^  CFilenames(wxWindow* parent, wxWindowID id, const wxString& value = _T(""),$/;"	f	class:CFilenames
CFilenames	src/GUI/OBGUI.h	/^class CFilenames : public wxTextCtrl$/;"	c
CHARGED	include/openbabel/residue.h	/^      CHARGED     =  6,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
CHARGED_CPOINT	include/inchi/ichitaut.h	286;"	d
CHARGED_SALTS_ONLY	include/inchi/mode.h	398;"	d
CHARGE_TYPE	src/formats/libinchi/ichitaut.c	/^} CHARGE_TYPE;$/;"	t	typeref:struct:tagChargeType	file:
CHARGE_VAL	include/inchi/ichirvrs.h	/^} CHARGE_VAL;$/;"	t	typeref:struct:tagChargeValence
CHAR_MASK	include/inchi/ichisize.h	51;"	d
CHAS3MEMBRING1	src/formats/libinchi/ichister.c	1200;"	d	file:
CHAS3MEMBRING2	src/formats/libinchi/ichister.c	1214;"	d	file:
CHAS3MEMBRING3	src/formats/libinchi/ichister.c	1230;"	d	file:
CHECKING_STEREOBOND	src/formats/libinchi/ichimap2.c	1783;"	d	file:
CHECKING_STEREOCENTER	src/formats/libinchi/ichimap2.c	1782;"	d	file:
CHECK_ARITY	include/libxml/xpathInternals.h	296;"	d
CHECK_AROMBOND2ALT	include/inchi/mode.h	351;"	d
CHECK_C2v_S4_SYMM	include/inchi/mode.h	492;"	d
CHECK_CENTERPOINT	src/formats/libinchi/ichiqueu.c	/^typedef int CHECK_CENTERPOINT ( inp_ATOM *atom, int iat );$/;"	t	file:
CHECK_DFS_CENTERPOINT	src/formats/libinchi/ichiqueu.c	/^typedef int CHECK_DFS_CENTERPOINT( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int jNxtNeigh,$/;"	t	file:
CHECK_DFS_PATH	src/formats/libinchi/ichiqueu.c	/^typedef int CHECK_DFS_PATH( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int jNxtNeigh, int nStartAtomNeighbor,$/;"	t	file:
CHECK_DFS_RING	src/formats/libinchi/ichiqueu.c	/^typedef int CHECK_DFS_RING( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int nStartAtomNeighbor,$/;"	t	file:
CHECK_ERROR	include/libxml/xpathInternals.h	239;"	d
CHECK_ERROR0	include/libxml/xpathInternals.h	247;"	d
CHECK_METAL_VALENCE	include/inchi/mode.h	424;"	d
CHECK_OVERFLOW	include/inchi/ichierr.h	76;"	d
CHECK_TACN	src/formats/libinchi/ichi_bns.c	8192;"	d	file:
CHECK_TG_ALT_PATH	src/formats/libinchi/ichi_bns.c	61;"	d	file:
CHECK_TYPE	include/libxml/xpathInternals.h	275;"	d
CHECK_TYPE0	include/libxml/xpathInternals.h	286;"	d
CHEM3D1Format	src/formats/chem3dformat.cpp	/^    CHEM3D1Format()$/;"	f	class:OpenBabel::CHEM3D1Format
CHEM3D1Format	src/formats/chem3dformat.cpp	/^  class CHEM3D1Format : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CHEM3D2Format	src/formats/chem3dformat.cpp	/^    CHEM3D2Format()$/;"	f	class:OpenBabel::CHEM3D2Format
CHEM3D2Format	src/formats/chem3dformat.cpp	/^  class CHEM3D2Format : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr3.c	4787;"	d	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr3.c	5046;"	d	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr3.c	5082;"	d	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr3.c	5292;"	d	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr3.c	5330;"	d	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr3.c	5513;"	d	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr5.c	1175;"	d	file:
CHG_LAST_SET	src/formats/libinchi/ichirvr5.c	999;"	d	file:
CHG_SET_AVOID	src/formats/libinchi/ichirvr3.c	5084;"	d	file:
CHG_SET_AVOID	src/formats/libinchi/ichirvr3.c	5293;"	d	file:
CHG_SET_AVOID	src/formats/libinchi/ichirvr3.c	5332;"	d	file:
CHG_SET_AVOID	src/formats/libinchi/ichirvr3.c	5514;"	d	file:
CHG_SET_MISSED_TAUT	src/formats/libinchi/ichirvr3.c	5079;"	d	file:
CHG_SET_MISSED_TAUT	src/formats/libinchi/ichirvr3.c	5289;"	d	file:
CHG_SET_MISSED_TAUT	src/formats/libinchi/ichirvr3.c	5510;"	d	file:
CHG_SET_MISSED_TAUT_1	src/formats/libinchi/ichirvr3.c	5326;"	d	file:
CHG_SET_MISSED_TAUT_ALL	src/formats/libinchi/ichirvr3.c	5327;"	d	file:
CHG_SET_NN	src/formats/libinchi/ichirvr3.c	5083;"	d	file:
CHG_SET_NN	src/formats/libinchi/ichirvr3.c	5288;"	d	file:
CHG_SET_NN	src/formats/libinchi/ichirvr3.c	5509;"	d	file:
CHG_SET_NOOH	src/formats/libinchi/ichirvr3.c	4784;"	d	file:
CHG_SET_NOOH	src/formats/libinchi/ichirvr3.c	5043;"	d	file:
CHG_SET_NOOH	src/formats/libinchi/ichirvr5.c	1172;"	d	file:
CHG_SET_NO_IN_NO2M2	src/formats/libinchi/ichirvr3.c	5331;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr3.c	4789;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr3.c	5048;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr3.c	5085;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr3.c	5294;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr3.c	5333;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr3.c	5515;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr5.c	1001;"	d	file:
CHG_SET_NUM	src/formats/libinchi/ichirvr5.c	1177;"	d	file:
CHG_SET_OTHER_TAUT_1	src/formats/libinchi/ichirvr3.c	5328;"	d	file:
CHG_SET_OTHER_TAUT_ALL	src/formats/libinchi/ichirvr3.c	5329;"	d	file:
CHG_SET_OTHER_TAUT_N	src/formats/libinchi/ichirvr3.c	5081;"	d	file:
CHG_SET_OTHER_TAUT_N	src/formats/libinchi/ichirvr3.c	5291;"	d	file:
CHG_SET_OTHER_TAUT_N	src/formats/libinchi/ichirvr3.c	5512;"	d	file:
CHG_SET_OTHER_TAUT_O	src/formats/libinchi/ichirvr3.c	5080;"	d	file:
CHG_SET_OTHER_TAUT_O	src/formats/libinchi/ichirvr3.c	5290;"	d	file:
CHG_SET_OTHER_TAUT_O	src/formats/libinchi/ichirvr3.c	5511;"	d	file:
CHG_SET_O_FIXED	src/formats/libinchi/ichirvr3.c	4788;"	d	file:
CHG_SET_O_FIXED	src/formats/libinchi/ichirvr3.c	5047;"	d	file:
CHG_SET_O_FIXED	src/formats/libinchi/ichirvr5.c	1000;"	d	file:
CHG_SET_O_FIXED	src/formats/libinchi/ichirvr5.c	1176;"	d	file:
CHG_SET_TAUT	src/formats/libinchi/ichirvr3.c	4786;"	d	file:
CHG_SET_TAUT	src/formats/libinchi/ichirvr3.c	5045;"	d	file:
CHG_SET_TAUT	src/formats/libinchi/ichirvr5.c	1174;"	d	file:
CHG_SET_WRONG_TAUT	src/formats/libinchi/ichirvr3.c	4785;"	d	file:
CHG_SET_WRONG_TAUT	src/formats/libinchi/ichirvr3.c	5044;"	d	file:
CHG_SET_WRONG_TAUT	src/formats/libinchi/ichirvr5.c	1173;"	d	file:
CHG_SET_WRONG_TAUT_ALL	src/formats/libinchi/ichirvr5.c	998;"	d	file:
CHG_SET_WRONG_TAUT_N	src/formats/libinchi/ichirvr5.c	996;"	d	file:
CHG_SET_WRONG_TAUT_O	src/formats/libinchi/ichirvr5.c	997;"	d	file:
CHTFormat	src/formats/chemtoolformat.cpp	/^    CHTFormat()$/;"	f	class:OpenBabel::CHTFormat
CHTFormat	src/formats/chemtoolformat.cpp	/^  class CHTFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CIF	src/formats/cifformat.cpp	/^  CIF::CIF(istream &is, const bool interpret)$/;"	f	class:OpenBabel::CIF
CIF	src/formats/cifformat.cpp	/^  class CIF$/;"	c	namespace:OpenBabel	file:
CIFAtom	src/formats/cifformat.cpp	/^    struct CIFAtom$/;"	s	class:OpenBabel::CIFData	file:
CIFAtom	src/formats/cifformat.cpp	/^  CIFData::CIFAtom::CIFAtom():$/;"	f	class:OpenBabel::CIFData::CIFAtom
CIFBond	src/formats/cifformat.cpp	/^    struct CIFBond$/;"	s	class:OpenBabel::CIFData	file:
CIFCatName	src/formats/mmcifformat.cpp	/^   enum CIFCatName$/;"	g	struct:OpenBabel::CIFTagID	file:
CIFColumnList	src/formats/mmcifformat.cpp	/^ typedef vector<CIFTagID::CIFDataName> CIFColumnList;$/;"	t	namespace:OpenBabel	file:
CIFData	src/formats/cifformat.cpp	/^  CIFData::CIFData()$/;"	f	class:OpenBabel::CIFData
CIFData	src/formats/cifformat.cpp	/^  class CIFData$/;"	c	namespace:OpenBabel	file:
CIFDataName	src/formats/mmcifformat.cpp	/^   enum CIFDataName$/;"	g	struct:OpenBabel::CIFTagID	file:
CIFFormat	src/formats/cifformat.cpp	/^    CIFFormat()$/;"	f	class:OpenBabel::CIFFormat
CIFFormat	src/formats/cifformat.cpp	/^  class CIFFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CIFLexer	src/formats/mmcifformat.cpp	/^   CIFLexer(std::istream * in)$/;"	f	class:OpenBabel::CIFLexer
CIFLexer	src/formats/mmcifformat.cpp	/^ class CIFLexer$/;"	c	namespace:OpenBabel	file:
CIFNumeric2Float	src/formats/cifformat.cpp	/^  float CIFNumeric2Float(const string &s)$/;"	f	namespace:OpenBabel
CIFNumeric2Int	src/formats/cifformat.cpp	/^  int CIFNumeric2Int(const string &s)$/;"	f	namespace:OpenBabel
CIFReadValue	src/formats/cifformat.cpp	/^  string CIFReadValue(istream &in,char &lastc)$/;"	f	namespace:OpenBabel
CIFResidueID	src/formats/mmcifformat.cpp	/^   CIFResidueID()$/;"	f	struct:OpenBabel::CIFResidueID
CIFResidueID	src/formats/mmcifformat.cpp	/^   CIFResidueID(const CIFResidueID & other)$/;"	f	struct:OpenBabel::CIFResidueID
CIFResidueID	src/formats/mmcifformat.cpp	/^   CIFResidueID(unsigned long c, unsigned long r)$/;"	f	struct:OpenBabel::CIFResidueID
CIFResidueID	src/formats/mmcifformat.cpp	/^ struct CIFResidueID$/;"	s	namespace:OpenBabel	file:
CIFResidueMap	src/formats/mmcifformat.cpp	/^ typedef map<CIFResidueID, int> CIFResidueMap;$/;"	t	namespace:OpenBabel	file:
CIFTagID	src/formats/mmcifformat.cpp	/^ struct CIFTagID$/;"	s	namespace:OpenBabel	file:
CIFTagsRead	src/formats/mmcifformat.cpp	/^ CIFTagID CIFTagsRead[] =$/;"	m	namespace:OpenBabel	file:
CIFisWaterOxygen	src/formats/cifformat.cpp	/^  bool CIFisWaterOxygen(OBAtom *atom)$/;"	f	namespace:OpenBabel
CIFtagLookupTable	src/formats/mmcifformat.cpp	/^ CIFtagmap CIFtagLookupTable;$/;"	m	namespace:OpenBabel	file:
CIFtagmap	src/formats/mmcifformat.cpp	/^ typedef map<string, CIFTagID::CIFDataName> CIFtagmap;$/;"	t	namespace:OpenBabel	file:
CML1NamespaceURI	src/formats/xml/cmlformat.cpp	/^    const char* CML1NamespaceURI()const$/;"	f	class:OpenBabel::CMLFormat	file:
CML2NamespaceURI	src/formats/xml/cmlformat.cpp	/^    const char* CML2NamespaceURI()const{return "http:\/\/www.xml-cml.org\/schema\/cml2\/core";}$/;"	f	class:OpenBabel::CMLFormat	file:
CMLFormat	src/formats/xml/cmlformat.cpp	/^    CMLFormat()$/;"	f	class:OpenBabel::CMLFormat
CMLFormat	src/formats/xml/cmlformat.cpp	/^  class CMLFormat : public XMLMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CMLReactFormat	src/formats/xml/cmlreactformat.cpp	/^  CMLReactFormat()$/;"	f	class:OpenBabel::CMLReactFormat
CMLReactFormat	src/formats/xml/cmlreactformat.cpp	/^class CMLReactFormat : XMLBaseFormat$/;"	c	namespace:OpenBabel	file:
CML_NUM_AT_IN_ATREF4	include/inchi/mode.h	749;"	d
CMODE_CT	include/inchi/mode.h	645;"	d
CMODE_ISO	include/inchi/mode.h	646;"	d
CMODE_ISO_OUT	include/inchi/mode.h	647;"	d
CMODE_ISO_STEREO	include/inchi/mode.h	649;"	d
CMODE_NOEQ_STEREO	include/inchi/mode.h	651;"	d
CMODE_NO_ALT_SBONDS	include/inchi/mode.h	653;"	d
CMODE_RACEMIC_STEREO	include/inchi/mode.h	656;"	d
CMODE_REDNDNT_STEREO	include/inchi/mode.h	652;"	d
CMODE_RELATIVE_STEREO	include/inchi/mode.h	655;"	d
CMODE_SB_IGN_ALL_UU	include/inchi/mode.h	658;"	d
CMODE_SC_IGN_ALL_UU	include/inchi/mode.h	657;"	d
CMODE_STEREO	include/inchi/mode.h	648;"	d
CMODE_TAUT	include/inchi/mode.h	650;"	d
CMP2FHATOMS	include/inchi/ichirvrs.h	/^} CMP2FHATOMS;$/;"	t	typeref:struct:tagAtomsCmpTwoFixedH
CMP2FHINCHI	include/inchi/ichirvrs.h	/^} CMP2FHINCHI;$/;"	t	typeref:struct:tagStructCmpTwoFixedH
CMP2MHATOMS	include/inchi/ichirvrs.h	/^} CMP2MHATOMS;$/;"	t	typeref:struct:tagAtomsCmpTwoMobileH
CMP2MHINCHI	include/inchi/ichirvrs.h	/^} CMP2MHINCHI;$/;"	t	typeref:struct:tagStructCmpTwoMobileH
CMP_COMPONENTS	include/inchi/ichi.h	76;"	d
CMP_COMPONENTS_NONISO	include/inchi/ichi.h	77;"	d
CMP_COMPONENTS_NONTAUT	include/inchi/ichi.h	78;"	d
CMP_INCHI_MSG	include/inchi/inchicmp.h	/^} CMP_INCHI_MSG;$/;"	t	typeref:struct:tagCompareInchiMsg
CMP_INCHI_MSG_GROUP	include/inchi/inchicmp.h	/^} CMP_INCHI_MSG_GROUP;$/;"	t	typeref:struct:tagCompareInchiMsgGroup
CMP_INCHI_MSG_GROUP_ID	include/inchi/inchicmp.h	/^} CMP_INCHI_MSG_GROUP_ID;$/;"	t	typeref:enum:tagtagCompareInchiMsgGroupID
CNUMBONDSANDH1	src/formats/libinchi/ichister.c	1198;"	d	file:
CNUMBONDSANDH2	src/formats/libinchi/ichister.c	1212;"	d	file:
CNUMBONDSANDH3	src/formats/libinchi/ichister.c	1228;"	d	file:
CN_LIST	include/inchi/ichirvrs.h	/^} CN_LIST;$/;"	t	typeref:struct:tagChargeNodeList
COA	include/openbabel/residue.h	/^      COA   = 51,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
COENZYME	include/openbabel/residue.h	/^      COENZYME     = 2,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
COL	src/formats/stlformat.cpp	163;"	d	file:
COMMA_EXTRA_SPACE	include/inchi/ichimake.h	47;"	d
COMPARE_WITH_CT	src/formats/libinchi/ichicano.c	623;"	d	file:
COMPARE_WITH_CT2	src/formats/libinchi/ichicano.c	640;"	d	file:
COMPARE_WITH_CTVAL	src/formats/libinchi/ichicano.c	632;"	d	file:
COMPILE_ANSI_ONLY	include/inchi/mode.h	160;"	d
COMPONENT_REM_PROTONS	include/inchi/ichirvrs.h	/^} COMPONENT_REM_PROTONS;$/;"	t	typeref:struct:tagOneComponentRemovedAndExchangeableH
COMPONENT_TREAT_INFO	include/inchi/inchi_dll_a.h	/^} COMPONENT_TREAT_INFO;$/;"	t	typeref:struct:tagCOMPONENT_TREAT_INFO
COMP_ATOM_DATA	include/inchi/inpdef.h	/^} COMP_ATOM_DATA;$/;"	t	typeref:struct:tagCompositeAtomData
COMP_ORIG_0_MAIN	src/formats/libinchi/inchi_dll_a2.c	90;"	d	file:
COMP_ORIG_0_MAIN	src/formats/libinchi/runichi.c	85;"	d	file:
COMP_ORIG_0_RECN	src/formats/libinchi/inchi_dll_a2.c	91;"	d	file:
COMP_ORIG_0_RECN	src/formats/libinchi/runichi.c	86;"	d	file:
COMP_ORIG_1_MAIN	src/formats/libinchi/inchi_dll_a2.c	94;"	d	file:
COMP_ORIG_1_MAIN	src/formats/libinchi/runichi.c	89;"	d	file:
COMP_ORIG_1_RECN	src/formats/libinchi/inchi_dll_a2.c	95;"	d	file:
COMP_ORIG_1_RECN	src/formats/libinchi/runichi.c	90;"	d	file:
COMP_PREP_0_MAIN	src/formats/libinchi/inchi_dll_a2.c	92;"	d	file:
COMP_PREP_0_MAIN	src/formats/libinchi/runichi.c	87;"	d	file:
COMP_PREP_0_RECN	src/formats/libinchi/inchi_dll_a2.c	93;"	d	file:
COMP_PREP_0_RECN	src/formats/libinchi/runichi.c	88;"	d	file:
COMP_STEREO_SUCCESS	src/formats/libinchi/ichimap2.c	1785;"	d	file:
CONFAB_VER	src/ops/opconfab.cpp	29;"	d	file:
CONNMAX	src/mcdlutil.cpp	40;"	d	file:
CONSOLE_LINE_LEN	src/formats/libinchi/ichi_io.c	661;"	d	file:
CONSOLE_LINE_LEN	src/formats/libinchi/ichi_io.c	675;"	d	file:
CONSTANTS	src/formats/gamessukformat.cpp	/^    enum ReadMode_t {CARTESIAN, ZMATRIX, VARIABLES, CONSTANTS, SKIP};$/;"	e	enum:OpenBabel::GAMESSUKFormat::ReadMode_t	file:
COORDINATES_PATTERN	src/formats/nwchemformat.cpp	/^static const char* COORDINATES_PATTERN = "Output coordinates";$/;"	m	namespace:OpenBabel	file:
COPY_SEG_TYPE	src/formats/libinchi/ichiread.c	/^} COPY_SEG_TYPE;$/;"	t	typeref:enum:tagCopySegmentType	file:
COUNT_ALL_NOT_DERIV	src/formats/libinchi/ichinorm.c	1065;"	d	file:
CPPTL_JSON_FEATURES_H_INCLUDED	include/openbabel/json/json.h	259;"	d
CPPTL_JSON_H_INCLUDED	include/openbabel/json/json.h	322;"	d
CPPTL_JSON_READER_H_INCLUDED	include/openbabel/json/json.h	1439;"	d
CPY_ISO_AT	src/formats/libinchi/ichiread.c	/^    CPY_ISO_AT$/;"	e	enum:tagCopySegmentType	file:
CPY_SP2	src/formats/libinchi/ichiread.c	/^    CPY_SP2,$/;"	e	enum:tagCopySegmentType	file:
CPY_SP3	src/formats/libinchi/ichiread.c	/^    CPY_SP3,$/;"	e	enum:tagCopySegmentType	file:
CPY_SP3_M	src/formats/libinchi/ichiread.c	/^    CPY_SP3_M,$/;"	e	enum:tagCopySegmentType	file:
CPY_SP3_S	src/formats/libinchi/ichiread.c	/^    CPY_SP3_S,$/;"	e	enum:tagCopySegmentType	file:
CREQUIRDNEIGH1	src/formats/libinchi/ichister.c	1201;"	d	file:
CREQUIRDNEIGH2	src/formats/libinchi/ichister.c	1215;"	d	file:
CREQUIRDNEIGH3	src/formats/libinchi/ichister.c	1231;"	d	file:
CRK2DFormat	src/formats/crkformat.cpp	/^    CRK2DFormat()$/;"	f	class:OpenBabel::CRK2DFormat
CRK2DFormat	src/formats/crkformat.cpp	/^  class CRK2DFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CRK3DFormat	src/formats/crkformat.cpp	/^    CRK3DFormat()$/;"	f	class:OpenBabel::CRK3DFormat
CRK3DFormat	src/formats/crkformat.cpp	/^  class CRK3DFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CSRFormat	src/formats/CSRformat.cpp	/^    CSRFormat()$/;"	f	class:OpenBabel::CSRFormat
CSRFormat	src/formats/CSRformat.cpp	/^  class CSRFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CSSRFormat	src/formats/cssrformat.cpp	/^    CSSRFormat()$/;"	f	class:OpenBabel::CSSRFormat
CSSRFormat	src/formats/cssrformat.cpp	/^  class CSSRFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CT_ATOMCOUNT_ERR	include/inchi/ichierr.h	63;"	d
CT_ATOMID	include/inchi/mode.h	693;"	d
CT_ATOMID_DONTINCLUDE	include/inchi/mode.h	675;"	d
CT_ATOMID_IS_CURRANK	include/inchi/mode.h	677;"	d
CT_ATOMID_IS_INITRANK	include/inchi/mode.h	676;"	d
CT_CALC_STEREO_ERR	include/inchi/ichierr.h	67;"	d
CT_CANON_ERR	include/inchi/ichierr.h	68;"	d
CT_ERR_FIRST	include/inchi/ichierr.h	51;"	d
CT_ERR_MAX	include/inchi/ichierr.h	74;"	d
CT_ERR_MIN	include/inchi/ichierr.h	73;"	d
CT_GREATER_THAN	include/inchi/mode.h	702;"	d
CT_GREATER_THAN	include/inchi/mode.h	707;"	d
CT_INITVALUE	include/inchi/mode.h	703;"	d
CT_INITVALUE	include/inchi/mode.h	708;"	d
CT_ISOCOUNT_ERR	include/inchi/ichierr.h	56;"	d
CT_ISOTAUCOUNT_ERR	include/inchi/ichierr.h	58;"	d
CT_ISO_H_ERR	include/inchi/ichierr.h	61;"	d
CT_LEN_MISMATCH	include/inchi/ichierr.h	53;"	d
CT_MAPCOUNT_ERR	include/inchi/ichierr.h	59;"	d
CT_MODE_ABC_NUMBERS	include/inchi/ichimake.h	54;"	d
CT_MODE_ABC_NUM_CLOSURES	include/inchi/ichimake.h	58;"	d
CT_MODE_ATOM_COUNTS	include/inchi/ichimake.h	55;"	d
CT_MODE_EQL_H_TOGETHER	include/inchi/ichimake.h	57;"	d
CT_MODE_NO_ORPHANS	include/inchi/ichimake.h	53;"	d
CT_MODE_PREDECESSORS	include/inchi/ichimake.h	56;"	d
CT_NEIGH_INCREASE	include/inchi/mode.h	695;"	d
CT_NEIGH_SMALLER	include/inchi/mode.h	691;"	d
CT_NEIGH_SMALLER_THAN	include/inchi/mode.h	714;"	d
CT_NEIGH_SMALLER_THAN	include/inchi/mode.h	716;"	d
CT_OUT_OF_RAM	include/inchi/ichierr.h	54;"	d
CT_OVERFLOW	include/inchi/ichierr.h	52;"	d
CT_RANKING_ERR	include/inchi/ichierr.h	55;"	d
CT_REMOVE_STEREO_ERR	include/inchi/ichierr.h	66;"	d
CT_SMALLEST	include/inchi/mode.h	689;"	d
CT_STEREOBOND_ERROR	include/inchi/ichierr.h	64;"	d
CT_STEREOCOUNT_ERR	include/inchi/ichierr.h	62;"	d
CT_STEREO_CANON_ERR	include/inchi/ichierr.h	69;"	d
CT_TAUCOUNT_ERR	include/inchi/ichierr.h	57;"	d
CT_TIMEOUT_ERR	include/inchi/ichierr.h	60;"	d
CT_UNKNOWN_ERR	include/inchi/ichierr.h	71;"	d
CT_USER_QUIT_ERR	include/inchi/ichierr.h	65;"	d
CT_WRONG_FORMULA	include/inchi/ichierr.h	70;"	d
CTableCreate	src/formats/libinchi/ichican2.c	/^int CTableCreate( ConTable *Ct, int n, CANON_DATA *pCD )$/;"	f
CTableFree	src/formats/libinchi/ichican2.c	/^void CTableFree( ConTable *Ct )$/;"	f
CType	src/formats/libinchi/ichitaut.c	/^CHARGE_TYPE CType[] = {$/;"	v
CUR_TREE	include/inchi/ichicant.h	/^} CUR_TREE;$/;"	t	typeref:struct:tagCurTree
CYCLIC	include/openbabel/residue.h	/^      CYCLIC      =  7,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
CYS	include/openbabel/residue.h	/^      CYS   = 17,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
CYSTEINE_SULPHUR	include/openbabel/residue.h	/^      CYSTEINE_SULPHUR = 3,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
CZString	include/openbabel/json/json.h	/^      class CZString $/;"	c	class:Json::Value
CZString	src/formats/json/jsoncpp.cpp	/^Value::CZString::CZString( ArrayIndex index )$/;"	f	class:Json::Value::CZString
CZString	src/formats/json/jsoncpp.cpp	/^Value::CZString::CZString( const CZString &other )$/;"	f	class:Json::Value::CZString
CZString	src/formats/json/jsoncpp.cpp	/^Value::CZString::CZString( const char *cstr, DuplicationPolicy allocate )$/;"	f	class:Json::Value::CZString
C_CANDIDATE	include/inchi/ichitaut.h	/^} C_CANDIDATE;$/;"	t	typeref:struct:tagChargeCandidate
C_GROUP	include/inchi/ichitaut.h	/^} C_GROUP;$/;"	t	typeref:struct:tagChargeGroup
C_GROUP_INFO	include/inchi/ichitaut.h	/^} C_GROUP_INFO;$/;"	t	typeref:struct:tagChargeGroupsInfo
C_NODE	include/inchi/ichirvrs.h	/^} C_NODE;$/;"	t	typeref:struct:tagChargeNodes
C_SUBTYPE_CHARGED	src/formats/libinchi/ichitaut.c	1267;"	d	file:
C_SUBTYPE_CHARGED	src/formats/libinchi/ichitaut.c	79;"	d	file:
C_SUBTYPE_CHARGED_H_ACCEPT	src/formats/libinchi/ichitaut.c	1278;"	d	file:
C_SUBTYPE_CHARGED_H_ACCEPT_p_DONOR	src/formats/libinchi/ichitaut.c	1279;"	d	file:
C_SUBTYPE_CHARGED_H_DONOR	src/formats/libinchi/ichitaut.c	1280;"	d	file:
C_SUBTYPE_CHARGED_NON_TAUT	src/formats/libinchi/ichitaut.c	1276;"	d	file:
C_SUBTYPE_CHARGED_p_DONOR	src/formats/libinchi/ichitaut.c	1277;"	d	file:
C_SUBTYPE_H_ACCEPT	src/formats/libinchi/ichitaut.c	1270;"	d	file:
C_SUBTYPE_H_ACCEPT	src/formats/libinchi/ichitaut.c	82;"	d	file:
C_SUBTYPE_H_DONOR	src/formats/libinchi/ichitaut.c	1271;"	d	file:
C_SUBTYPE_H_DONOR	src/formats/libinchi/ichitaut.c	83;"	d	file:
C_SUBTYPE_NEUTRAL	src/formats/libinchi/ichitaut.c	1272;"	d	file:
C_SUBTYPE_NEUTRAL	src/formats/libinchi/ichitaut.c	84;"	d	file:
C_SUBTYPE_NEUTRAL_H_ACCEPT	src/formats/libinchi/ichitaut.c	1283;"	d	file:
C_SUBTYPE_NEUTRAL_H_ACCEPT_p_ACCEPT	src/formats/libinchi/ichitaut.c	1284;"	d	file:
C_SUBTYPE_NEUTRAL_H_DONOR	src/formats/libinchi/ichitaut.c	1285;"	d	file:
C_SUBTYPE_NEUTRAL_NON_TAUT	src/formats/libinchi/ichitaut.c	1282;"	d	file:
C_SUBTYPE_p_ACCEPT	src/formats/libinchi/ichitaut.c	1269;"	d	file:
C_SUBTYPE_p_ACCEPT	src/formats/libinchi/ichitaut.c	81;"	d	file:
C_SUBTYPE_p_DONOR	src/formats/libinchi/ichitaut.c	1268;"	d	file:
C_SUBTYPE_p_DONOR	src/formats/libinchi/ichitaut.c	80;"	d	file:
Ca	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
CacaoFormat	src/formats/cacaoformat.cpp	/^    CacaoFormat()$/;"	f	class:OpenBabel::CacaoFormat
CacaoFormat	src/formats/cacaoformat.cpp	/^  class CacaoFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CacaoInternalFormat	src/formats/cacaoformat.cpp	/^    CacaoInternalFormat()$/;"	f	class:OpenBabel::CacaoInternalFormat
CacaoInternalFormat	src/formats/cacaoformat.cpp	/^  class CacaoInternalFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CacheFormat	src/formats/cacheformat.cpp	/^    CacheFormat()$/;"	f	class:OpenBabel::CacheFormat
CacheFormat	src/formats/cacheformat.cpp	/^  class CacheFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CairoPainter	include/openbabel/depict/cairopainter.h	/^  class CairoPainter : public OBPainter$/;"	c	namespace:OpenBabel
CairoPainter	src/depict/cairopainter.cpp	/^  CairoPainter::CairoPainter() : m_surface(0), m_cairo(0),$/;"	f	class:OpenBabel::CairoPainter
CalcBondLength	src/rotor.cpp	/^  double OBRotor::CalcBondLength(double *c)$/;"	f	class:OpenBabel::OBRotor
CalcBoundingBox	src/formats/povrayformat.cpp	/^  void CalcBoundingBox(OBMol &mol,$/;"	f	namespace:OpenBabel
CalcCanonicalLabels	src/canon.cpp	/^    static void CalcCanonicalLabels(OBMol *mol, const std::vector<unsigned int> &symmetry_classes,$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
CalcHash	src/fingerprints/finger2.cpp	/^unsigned int fingerprint2::CalcHash(const vector<int>& frag)$/;"	f	class:OpenBabel::fingerprint2
CalcMatrices	src/formats/cifformat.cpp	/^  void CIFData::CalcMatrices()$/;"	f	class:OpenBabel::CIFData
CalcQuarticCoeffs	src/math/align.cpp	/^  vector<double> CalcQuarticCoeffs(const Eigen::Matrix3d &M)$/;"	f	namespace:OpenBabel
CalcSignedVolume	src/chiral.cpp	/^  double CalcSignedVolume(OBMol &mol,OBAtom *atm, bool ReZeroZ)$/;"	f	namespace:OpenBabel
CalcTorsion	src/rotor.cpp	/^  double OBRotor::CalcTorsion(double *c)$/;"	f	class:OpenBabel::OBRotor
CalcTorsionAngle	src/math/vector3.cpp	/^  OBAPI double CalcTorsionAngle(const vector3 &a, const vector3 &b,$/;"	f	namespace:OpenBabel
Calculate13Angle	src/distgeom.cpp	/^  inline double Calculate13Angle(double a, double b, double c)$/;"	f	namespace:OpenBabel
Calculate13Distance	src/distgeom.cpp	/^  inline double Calculate13Distance(double ab, double bc, double angle)$/;"	f	namespace:OpenBabel
Calculate14DistCis	src/distgeom.cpp	/^  inline double Calculate14DistCis(double ab, double bc, double cd,$/;"	f	namespace:OpenBabel
Calculate14DistTrans	src/distgeom.cpp	/^  inline double Calculate14DistTrans(double ab, double bc, double cd,$/;"	f	namespace:OpenBabel
Calculate15DistAnyCis	src/distgeom.cpp	/^  inline double Calculate15DistAnyCis(double ab, double bc, double cd, double de,$/;"	f	namespace:OpenBabel
Calculate15DistAnyTrans	src/distgeom.cpp	/^  inline double Calculate15DistAnyTrans(double ab, double bc, double cd, double de,$/;"	f	namespace:OpenBabel
CalculateBondDistance	src/forcefields/forcefielduff.cpp	/^  double CalculateBondDistance(OBFFParameter *i, OBFFParameter *j, double bondorder)$/;"	f	namespace:OpenBabel
CalculateSymmetry	src/graphsym.cpp	/^  int OBGraphSymPrivate::CalculateSymmetry(std::vector<unsigned int> &atom_sym_classes)$/;"	f	class:OpenBabel::OBGraphSymPrivate
CalculatedPathsParitiesAreIdentical	src/formats/libinchi/ichimap2.c	/^int CalculatedPathsParitiesAreIdentical( sp_ATOM *at, int num_atoms, const AT_RANK *nSymmRank,$/;"	f
CallbackBase	src/formats/smiley.h	/^  struct CallbackBase$/;"	s	namespace:Smiley
CanBeNormalized	src/math/vector3.cpp	/^  bool vector3::CanBeNormalized () const$/;"	f	class:OpenBabel::vector3
CanBeSquared	src/obutil.cpp	/^  bool CanBeSquared(const double &a)$/;"	f	namespace:OpenBabel
CanSmiles	src/descriptors/cansmidescriptor.cpp	/^  CanSmiles(const char* ID, bool noStereo) : OBDescriptor(ID), _noStereo(noStereo){};$/;"	f	class:OpenBabel::CanSmiles
CanSmiles	src/descriptors/cansmidescriptor.cpp	/^class CanSmiles : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
Candidate	src/isomorphism.cpp	/^        Candidate() : queryAtom(0), queriedAtom(0) {}$/;"	f	struct:OpenBabel::VF2Mapper::Candidate
Candidate	src/isomorphism.cpp	/^        Candidate(OBQueryAtom *_queryAtom, OBAtom *_queriedAtom)$/;"	f	struct:OpenBabel::VF2Mapper::Candidate
Candidate	src/isomorphism.cpp	/^      struct Candidate {$/;"	s	class:OpenBabel::VF2Mapper	file:
CanonGraph	src/formats/libinchi/ichican2.c	/^int CanonGraph( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph01	src/formats/libinchi/ichican2.c	/^int CanonGraph01( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph01	src/formats/libinchi/ichican2.c	400;"	d	file:
CanonGraph02	src/formats/libinchi/ichican2.c	/^int CanonGraph02( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph02	src/formats/libinchi/ichican2.c	401;"	d	file:
CanonGraph03	src/formats/libinchi/ichican2.c	/^int CanonGraph03( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph03	src/formats/libinchi/ichican2.c	402;"	d	file:
CanonGraph04	src/formats/libinchi/ichican2.c	/^int CanonGraph04( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph04	src/formats/libinchi/ichican2.c	403;"	d	file:
CanonGraph05	src/formats/libinchi/ichican2.c	/^int CanonGraph05( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph05	src/formats/libinchi/ichican2.c	404;"	d	file:
CanonGraph06	src/formats/libinchi/ichican2.c	/^int CanonGraph06( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph06	src/formats/libinchi/ichican2.c	405;"	d	file:
CanonGraph07	src/formats/libinchi/ichican2.c	/^int CanonGraph07( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph07	src/formats/libinchi/ichican2.c	406;"	d	file:
CanonGraph08	src/formats/libinchi/ichican2.c	/^int CanonGraph08( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph08	src/formats/libinchi/ichican2.c	407;"	d	file:
CanonGraph09	src/formats/libinchi/ichican2.c	/^int CanonGraph09( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph09	src/formats/libinchi/ichican2.c	408;"	d	file:
CanonGraph10	src/formats/libinchi/ichican2.c	/^int CanonGraph10( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph10	src/formats/libinchi/ichican2.c	409;"	d	file:
CanonGraph11	src/formats/libinchi/ichican2.c	/^int CanonGraph11( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph11	src/formats/libinchi/ichican2.c	410;"	d	file:
CanonGraph12	src/formats/libinchi/ichican2.c	/^int CanonGraph12( int n, int n_tg, int n_max, int bDigraph, Graph *G, Partition pi[],$/;"	f
CanonGraph12	src/formats/libinchi/ichican2.c	411;"	d	file:
CanonOneComponentINChI	src/formats/libinchi/inchi_dll_a2.c	/^int CanonOneComponentINChI(INCHIGEN_CONTROL *genctl, int iINChI, int i)$/;"	f
CanonOneStructureINChI	src/formats/libinchi/inchi_dll_a2.c	/^int CanonOneStructureINChI(INCHIGEN_CONTROL *genctl, int iINChI, INCHI_IOSTREAM *inp_file)$/;"	f
Canon_INChI	src/formats/libinchi/ichicano.c	/^int Canon_INChI(int num_atoms, int num_at_tg, sp_ATOM* at, $/;"	f
Canon_INChI3	src/formats/libinchi/ichicano.c	/^int Canon_INChI3(int num_atoms, int num_at_tg, sp_ATOM* at, $/;"	f
CanonicalLabels	src/canon.cpp	/^  void CanonicalLabels(OBMol *mol, const std::vector<unsigned int> &symmetry_classes,$/;"	f	namespace:OpenBabel
CanonicalLabelsImpl	src/canon.cpp	/^  struct CanonicalLabelsImpl$/;"	s	namespace:OpenBabel	file:
CanonicalLabelsRecursive	src/canon.cpp	/^    static void CanonicalLabelsRecursive(OBAtom *current, unsigned int label, Timeout &timeout, FullCode &bestCode, State &state)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
CanonicalTautomer	src/tautomer.cpp	/^  void CanonicalTautomer(OBMol *mol)$/;"	f	namespace:OpenBabel
Canonicalization_step	src/formats/libinchi/inchi_dll_a2.c	/^int  Canonicalization_step( INChI **ppINChI, $/;"	f
CapExternalBonds	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::CapExternalBonds(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
Carbon	src/tautomer.cpp	/^      Carbon = 6,$/;"	e	enum:OpenBabel::TautomerImpl::AtomNumber	file:
Cartesian2FractionalCoord	src/formats/cifformat.cpp	/^  void CIFData::Cartesian2FractionalCoord()$/;"	f	class:OpenBabel::CIFData
CartesianToFractional	src/generic.cpp	/^  vector3 OBUnitCell::CartesianToFractional(vector3 cart) const$/;"	f	class:OpenBabel::OBUnitCell
CartesianToInternal	src/obutil.cpp	/^  void CartesianToInternal(std::vector<OBInternalCoord*> &vic,OBMol &mol)$/;"	f	namespace:OpenBabel
CastAndClear	include/openbabel/base.h	/^      T* CastAndClear(bool clear=true)$/;"	f	class:OpenBabel::OBBase
Cd	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Ce	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Cell	src/formats/libinchi/ichican2.c	/^} Cell;$/;"	t	typeref:struct:tagCell	file:
CellGetMinNode	src/formats/libinchi/ichican2.c	/^Node CellGetMinNode( Partition *p, Cell *W, Node v, CANON_DATA *pCD )$/;"	f
CellGetNumberOfNodes	src/formats/libinchi/ichican2.c	/^int CellGetNumberOfNodes( Partition *p, Cell *W )$/;"	f
CellIntersectWithSet	src/formats/libinchi/ichican2.c	/^int CellIntersectWithSet( Partition *p, Cell *W, NodeSet *Mcr, int l )$/;"	f
CellMakeEmpty	src/formats/libinchi/ichican2.c	/^void CellMakeEmpty( Cell *baseW, int k )$/;"	f
Center	include/openbabel/grid.h	/^    vector3 Center()$/;"	f	class:OpenBabel::OBFloatGrid
Center	include/openbabel/grid.h	/^    virtual vector3 Center()           {      return VZero;    }$/;"	f	class:OpenBabel::OBScoreGrid
Center	src/mol.cpp	/^  vector3 OBMol::Center(int nconf)$/;"	f	class:OpenBabel::OBMol
Center	src/mol.cpp	/^  void OBMol::Center()$/;"	f	class:OpenBabel::OBMol
Center	src/stereo/stereoutil.h	/^    typedef OBAtom Center; \/\/ the stereogenic center type$/;"	t	struct:OpenBabel::OBStereoTypeTraits
Center	src/stereo/stereoutil.h	/^    typedef OBBond Center;$/;"	t	struct:OpenBabel::OBStereoTypeTraits
CenterMol	include/openbabel/grid.h	/^    virtual vector3 CenterMol(OBMol &) {      return VZero;    }$/;"	f	class:OpenBabel::OBScoreGrid
CenterOfSomething	src/pointgroup.cpp	/^    double                 CenterOfSomething[ DIMENSION ];$/;"	m	class:OpenBabel::PointGroupPrivate	file:
CenterSizer	src/GUI/OBGUI.h	/^  wxBoxSizer* CenterSizer;$/;"	m	class:OBGUIFrame
CenterType	src/stereo/perception.cpp	/^      typedef OBAtom CenterType;$/;"	t	struct:OpenBabel::StereoRing::ParaAtom	file:
CenterType	src/stereo/perception.cpp	/^      typedef OBBond CenterType;$/;"	t	struct:OpenBabel::StereoRing::ParaBond	file:
Cf	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
ChainNum	src/formats/mmcifformat.cpp	/^   unsigned long ChainNum; \/\/ The number of the chain$/;"	m	struct:OpenBabel::CIFResidueID	file:
ChainsAtomName	src/chains.cpp	/^  static char ChainsAtomName[ATOMMAX][4] = {$/;"	m	namespace:OpenBabel	file:
ChainsResName	src/chains.cpp	/^static char ChainsResName[RESIDMAX][4] = {$/;"	v	file:
ChangeInputHere	src/GUI/OBGUI.cpp	/^void OBGUIFrame::ChangeInputHere(bool chk)$/;"	f	class:OBGUIFrame
ChangeView	include/openbabel/stereo/tetranonplanar.h	/^      static void ChangeView(ConfigType &cfg)$/;"	f	class:OpenBabel::OBTetraNonPlanarStereo
ChangeWinding	include/openbabel/stereo/tetranonplanar.h	/^      static void ChangeWinding(ConfigType &cfg)$/;"	f	class:OpenBabel::OBTetraNonPlanarStereo
Char	include/openbabel/json/json.h	/^      typedef char Char;$/;"	t	class:Json::Reader
CharPtrLess	include/openbabel/plugin.h	/^struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>$/;"	s	namespace:OpenBabel
Charge	include/openbabel/data.h	/^    int Charge()          { return _charge; }$/;"	f	class:OpenBabel::OBAtomHOF
Charge	src/charges/qeq.h	/^  VectorXd Electronegativity, Voltage, Charge;$/;"	m	class:OpenBabel::QEqCharges
Charge	src/charges/qtpie.h	/^  VectorXd Electronegativity, Voltage, Charge;$/;"	m	class:OpenBabel::QTPIECharges
ChargeData	include/openbabel/base.h	/^      ChargeData =        14,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Check15TautPath	src/formats/libinchi/ichiqueu.c	/^CHECK_DFS_PATH        Check15TautPath;$/;"	v
Check15TautPath	src/formats/libinchi/ichiqueu.c	/^int Check15TautPath( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int jNxtNeigh, int nStartAtomNeighbor,$/;"	f
Check15TautPathCenterpoint	src/formats/libinchi/ichiqueu.c	/^CHECK_DFS_CENTERPOINT Check15TautPathCenterpoint;$/;"	v
Check15TautPathCenterpoint	src/formats/libinchi/ichiqueu.c	/^int Check15TautPathCenterpoint( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int jNxtNeigh,$/;"	f
Check5MembTautRing	src/formats/libinchi/ichiqueu.c	/^CHECK_DFS_RING Check5MembTautRing;$/;"	v
Check5MembTautRing	src/formats/libinchi/ichiqueu.c	/^int Check5MembTautRing( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int nStartAtomNeighbor,$/;"	f
Check6MembTautRing	src/formats/libinchi/ichiqueu.c	/^CHECK_DFS_RING Check6MembTautRing;$/;"	v
Check6MembTautRing	src/formats/libinchi/ichiqueu.c	/^int Check6MembTautRing( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int nStartAtomNeighbor,$/;"	f
Check7MembTautRing	src/formats/libinchi/ichiqueu.c	/^CHECK_DFS_RING Check7MembTautRing;$/;"	v
Check7MembTautRing	src/formats/libinchi/ichiqueu.c	/^int Check7MembTautRing( inp_ATOM *atom, DFS_PATH *DfsPath, int nLenDfsPath, int nStartAtomNeighbor,$/;"	f
CheckAllMolsHaveThermo	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::CheckAllMolsHaveThermo()$/;"	f	class:OpenBabel::ChemKinFormat
CheckAndRefixStereobonds	src/formats/libinchi/ichirvr4.c	/^int CheckAndRefixStereobonds(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
CheckAromaticity	src/typer.cpp	/^  void OBAromaticTyper::CheckAromaticity(OBAtom *atom,int depth)$/;"	f	class:OpenBabel::OBAromaticTyper
CheckBnsConsistency	src/formats/libinchi/ichirvr2.c	/^int CheckBnsConsistency( StrFromINChI *pStruct, BN_STRUCT  *pBNS, VAL_AT *pVA, ALL_TC_GROUPS *pTCGroups, int bNoRad )$/;"	f
CheckBounds	src/distgeom.cpp	/^  bool OBDistanceGeometry::CheckBounds()$/;"	f	class:OpenBabel::OBDistanceGeometry
CheckCanonNumberingCorrectness	src/formats/libinchi/ichimake.c	/^int CheckCanonNumberingCorrectness(int num_atoms, int num_at_tg,$/;"	f
CheckFP	src/fingerprint.cpp	/^  OBFingerprint* FptIndex::CheckFP()$/;"	f	class:OpenBabel::FptIndex
CheckForUnintendedBatch	src/obconversion.cpp	/^  bool OBConversion::CheckForUnintendedBatch(const string& infile, const string& outfile)$/;"	f	class:OpenBabel::OBConversion
CheckINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL CheckINCHI(const char *szINCHI, const int strict)$/;"	f
CheckINCHIKey	src/formats/libinchi/ikey_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL CheckINCHIKey(const char *szINCHIKey)$/;"	f
CheckNextSymmNeighborsAndBonds	src/formats/libinchi/ichimap2.c	/^int CheckNextSymmNeighborsAndBonds( sp_ATOM *at, AT_RANK cur1, AT_RANK cur2, AT_RANK n1, AT_RANK n2,$/;"	f
CheckSpecies	src/formats/chemkinformat.cpp	/^obsharedptr<OBMol> ChemKinFormat::CheckSpecies(string& name, string& ln, bool MustBeKnown)$/;"	f	class:OpenBabel::ChemKinFormat
CheckStereoConstraints	src/distgeom.cpp	/^  bool OBDistanceGeometry::CheckStereoConstraints()$/;"	f	class:OpenBabel::OBDistanceGeometry
ChemDoodleJSONFormat	src/formats/json/chemdoodlejsonformat.cpp	/^    ChemDoodleJSONFormat()$/;"	f	class:OpenBabel::ChemDoodleJSONFormat
ChemDoodleJSONFormat	src/formats/json/chemdoodlejsonformat.cpp	/^class ChemDoodleJSONFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ChemDrawBinaryXFormat	src/formats/chemdrawcdx.cpp	/^  ChemDrawBinaryXFormat()$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
ChemDrawBinaryXFormat	src/formats/chemdrawcdx.cpp	/^class ChemDrawBinaryXFormat : OBFormat$/;"	c	namespace:OpenBabel	file:
ChemDrawFormat	src/formats/chemdrawct.cpp	/^    ChemDrawFormat()$/;"	f	class:OpenBabel::ChemDrawFormat
ChemDrawFormat	src/formats/chemdrawct.cpp	/^  class ChemDrawFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ChemDrawXMLFormat	src/formats/xml/cdxmlformat.cpp	/^	ChemDrawXMLFormat(): Order (-1)$/;"	f	class:OpenBabel::ChemDrawXMLFormat
ChemDrawXMLFormat	src/formats/xml/cdxmlformat.cpp	/^class ChemDrawXMLFormat : public XMLMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ChemKinFormat	src/formats/chemkinformat.cpp	/^  ChemKinFormat()$/;"	f	class:OpenBabel::ChemKinFormat
ChemKinFormat	src/formats/chemkinformat.cpp	/^class ChemKinFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
ChemScore	include/openbabel/grid.h	/^  typedef enum { Undefined = -1, PLP, ChemScore } score_t;$/;"	e	enum:OpenBabel::__anon43
ChemicalPotential	src/charges/qeq.h	/^  double ChemicalPotential;$/;"	m	class:OpenBabel::QEqCharges
ChemicalPotential	src/charges/qtpie.h	/^  double ChemicalPotential;$/;"	m	class:OpenBabel::QTPIECharges
ChildValues	include/openbabel/json/json.h	/^      typedef std::vector<std::string> ChildValues;$/;"	t	class:Json::StyledStreamWriter
ChildValues	include/openbabel/json/json.h	/^      typedef std::vector<std::string> ChildValues;$/;"	t	class:Json::StyledWriter
ChiralData	include/openbabel/base.h	/^      ChiralData =        16,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
ChiralInfo	src/formats/smiley.h	/^        ChiralInfo() : pos(std::string::npos), chiral(NotChiral)$/;"	f	struct:Smiley::Parser::ChiralInfo
ChiralInfo	src/formats/smiley.h	/^        ChiralInfo(Chirality chirality, std::size_t pos_) : pos(pos_), chiral(chirality)$/;"	f	struct:Smiley::Parser::ChiralInfo
ChiralInfo	src/formats/smiley.h	/^      struct ChiralInfo$/;"	s	class:Smiley::Parser
Chirality	src/formats/smiley.h	/^  enum Chirality {$/;"	g	namespace:Smiley
Ci	include/openbabel/pointgroup.h	/^        C1 = 0, Cs, Ci, \/\/ 0 to 2$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
Cinfv	include/openbabel/pointgroup.h	/^        Cinfv, Dinfh, \/\/ 53, 54$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
CisOrTrans	include/openbabel/bond.h	/^        CisOrTrans  = (1<<12)  \/\/!< Indicates the 2D\/3D coordinates are accidently cis\/trans.$/;"	e	enum:OpenBabel::OBBond::StereoFlag
CisTrans	include/openbabel/stereo/stereo.h	/^      CisTrans            = (1<<0), \/\/!< cis\/trans double bond$/;"	e	enum:OpenBabel::OBStereo::Type
CisTransFrom0D	src/stereo/perception.cpp	/^  std::vector<OBCisTransStereo*> CisTransFrom0D(OBMol *mol,$/;"	f	namespace:OpenBabel
CisTransFrom2D	src/stereo/perception.cpp	/^  std::vector<OBCisTransStereo*> CisTransFrom2D(OBMol *mol,$/;"	f	namespace:OpenBabel
CisTransFrom3D	src/stereo/perception.cpp	/^  std::vector<OBCisTransStereo*> CisTransFrom3D(OBMol *mol,$/;"	f	namespace:OpenBabel
CisTransFromUpDown	src/formats/mdlformat.cpp	/^  void MDLFormat::CisTransFromUpDown(OBMol *mol, std::map<OBBond*, OBStereo::BondDirection> *updown)$/;"	f	class:OpenBabel::MDLFormat
Cl	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
ClassCount	src/mol.cpp	/^  static void ClassCount(vector<pair<OBAtom*,unsigned int> > &vp,unsigned int &count)$/;"	f	namespace:OpenBabel
ClassDescription	include/openbabel/base.h	/^      static const char* ClassDescription()$/;"	f	class:OpenBabel::OBBase
ClassDescription	include/openbabel/reaction.h	/^  static const char* ClassDescription()$/;"	f	class:OpenBabel::OBReaction
ClassDescription	src/transform.cpp	/^  const char* OBMol::ClassDescription()$/;"	f	class:OpenBabel::OBMol
CleanAtomType	src/obutil.cpp	/^  void CleanAtomType(char *id)$/;"	f	namespace:OpenBabel
CleanCt	src/formats/libinchi/ichican2.c	/^int CleanCt( AT_RANK *Ct, int len )$/;"	f
CleanIsoSortKeys	src/formats/libinchi/ichican2.c	/^void CleanIsoSortKeys( AT_ISO_SORT_KEY * isk, int len )$/;"	f
CleanNumH	src/formats/libinchi/ichican2.c	/^void CleanNumH( NUM_H *NumH, int len )$/;"	f
CleanOrigCoord	src/formats/libinchi/ichiprt1.c	/^int CleanOrigCoord( MOL_COORD szCoord, int delim )$/;"	f
CleanupMol	src/chains.cpp	/^  void OBChainsParser::CleanupMol(void)$/;"	f	class:OpenBabel::OBChainsParser
Clear	include/openbabel/atomclass.h	/^  void Clear(){ _map.clear(); }$/;"	f	class:OpenBabel::OBAtomClassData
Clear	include/openbabel/grid.h	/^    virtual void   Clear(void)        { }$/;"	f	class:OpenBabel::OBScoreGrid
Clear	include/openbabel/reaction.h	/^  bool Clear()$/;"	f	class:OpenBabel::OBReaction
Clear	include/openbabel/rotor.h	/^      void Clear(){$/;"	f	class:OBRotorKeys
Clear	src/GUI/optswx.cpp	/^void DynOptionswx::Clear()$/;"	f	class:DynOptionswx
Clear	src/GUI/selformats.h	/^	void Clear() \/\/Called in OBGUIFrame::GetAvailableFormats$/;"	f	class:ActiveFormats
Clear	src/atom.cpp	/^  bool OBAtom::Clear()$/;"	f	class:OpenBabel::OBAtom
Clear	src/base.cpp	/^  bool OBBase::Clear()$/;"	f	class:OpenBabel::OBBase
Clear	src/bitvec.cpp	/^  void OBBitVec::Clear()$/;"	f	class:OpenBabel::OBBitVec
Clear	src/forcefield.cpp	/^  void OBFFConstraints::Clear()$/;"	f	class:OpenBabel::OBFFConstraints
Clear	src/generic.cpp	/^  void OBAngle::Clear()$/;"	f	class:OpenBabel::OBAngle
Clear	src/generic.cpp	/^  void OBAngleData::Clear()$/;"	f	class:OpenBabel::OBAngleData
Clear	src/generic.cpp	/^  void OBChiralData::Clear()$/;"	f	class:OpenBabel::OBChiralData
Clear	src/generic.cpp	/^  void OBTorsion::Clear()$/;"	f	class:OpenBabel::OBTorsion
Clear	src/generic.cpp	/^  void OBTorsionData::Clear()$/;"	f	class:OpenBabel::OBTorsionData
Clear	src/mol.cpp	/^  bool OBMol::Clear()$/;"	f	class:OpenBabel::OBMol
Clear	src/residue.cpp	/^  bool OBResidue::Clear(void)$/;"	f	class:OpenBabel::OBResidue
Clear	src/rotor.cpp	/^  void OBRotorList::Clear()$/;"	f	class:OpenBabel::OBRotorList
ClearAllBnDataEdges	src/formats/libinchi/ichi_bns.c	/^void ClearAllBnDataEdges( Edge *e, Vertex value, int size )$/;"	f
ClearAllBnDataVertices	src/formats/libinchi/ichi_bns.c	/^void ClearAllBnDataVertices( Vertex *v, Vertex value, int size )$/;"	f
ClearBond	include/openbabel/atom.h	/^      void ClearBond() {_vbond.clear();}$/;"	f	class:OpenBabel::OBAtom
ClearCoordPtr	include/openbabel/atom.h	/^      void ClearCoordPtr()     { _c = NULL; _cidx=0; }$/;"	f	class:OpenBabel::OBAtom
ClearEndpts	src/formats/libinchi/ichirvr1.c	/^void ClearEndpts(inp_ATOM *at, int num_at )$/;"	f
ClearGradients	include/openbabel/forcefield.h	/^    virtual void ClearGradients()$/;"	f	class:OpenBabel::OBForceField
ClearGroups	src/forcefield.cpp	/^  void OBForceField::ClearGroups()$/;"	f	class:OpenBabel::OBForceField
ClearLayer	src/formats/mpdformat.cpp	/^  void MPDFormat::ClearLayer(int layer_a[][LAYER_SIZE])$/;"	f	class:OpenBabel::MPDFormat
ClearLog	include/openbabel/oberror.h	/^      void ClearLog() { _messageList.clear(); }$/;"	f	class:OpenBabel::OBMessageHandler
ClearOptions	src/depict/depict.cpp	/^  void OBDepict::ClearOptions()$/;"	f	class:OpenBabel::OBDepict
ClearPreviousMappings	src/formats/libinchi/ichimap2.c	/^int ClearPreviousMappings( AT_RANK **pRankStack1 )$/;"	f
ClearResidueInformation	src/chains.cpp	/^  void OBChainsParser::ClearResidueInformation(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
ClearSymmetry	src/graphsym.cpp	/^  void OBGraphSym::ClearSymmetry()$/;"	f	class:OpenBabel::OBGraphSym
Clockwise	include/openbabel/stereo/stereo.h	/^      Clockwise = 1,     \/\/!< Clockwise winding$/;"	e	enum:OpenBabel::OBStereo::Winding
Clockwise	src/formats/mdlformat.cpp	/^        NotStereo, Clockwise, AntiClockwise, Unknown$/;"	e	enum:OpenBabel::MDLFormat::Parity	file:
Clockwise	src/formats/smiley.h	/^    AntiClockwise, Clockwise,$/;"	e	enum:Smiley::Chirality
Clone	include/openbabel/alias.h	/^  virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return new AliasData(*this);}$/;"	f	class:OpenBabel::AliasData
Clone	include/openbabel/atomclass.h	/^  virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return new OBAtomClassData(*this);}$/;"	f	class:OpenBabel::OBAtomClassData
Clone	include/openbabel/base.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBGenericData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBAngleData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBChiralData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBPairData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBPairTemplate
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBSerialNums
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBTorsionData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const$/;"	f	class:OpenBabel::OBUnitCell
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return NULL;}$/;"	f	class:OpenBabel::OBExternalBondData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return NULL;}$/;"	f	class:OpenBabel::OBRingData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return new OBCommentData(*this);}$/;"	f	class:OpenBabel::OBCommentData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return new OBConformerData(*this);}$/;"	f	class:OpenBabel::OBConformerData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return new OBSetData(*this);}$/;"	f	class:OpenBabel::OBSetData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return new OBSymmetryData(*this);}$/;"	f	class:OpenBabel::OBSymmetryData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase* \/*parent*\/) const{return new OBVirtualBond(*this);}$/;"	f	class:OpenBabel::OBVirtualBond
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase*) const$/;"	f	class:OpenBabel::OBDOSData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase*) const$/;"	f	class:OpenBabel::OBElectronicTransitionData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase*) const$/;"	f	class:OpenBabel::OBMatrixData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase*) const$/;"	f	class:OpenBabel::OBOrbitalData
Clone	include/openbabel/generic.h	/^    virtual OBGenericData* Clone(OBBase*) const$/;"	f	class:OpenBabel::OBVibrationData
Clone	include/openbabel/generic.h	/^   virtual OBGenericData* Clone(OBBase*) const$/;"	f	class:OpenBabel::OBRotationData
Clone	include/openbabel/generic.h	/^   virtual OBGenericData* Clone(OBBase*) const$/;"	f	class:OpenBabel::OBVectorData
Clone	include/openbabel/kinetics.h	/^  virtual OBGenericData* Clone(OBBase* parent) const{return new OBNasaThermoData(*this);}$/;"	f	class:OpenBabel::OBNasaThermoData
Clone	include/openbabel/kinetics.h	/^  virtual OBGenericData* Clone(OBBase* parent) const{return new OBRateData(*this);}$/;"	f	class:OpenBabel::OBRateData
Clone	src/rotamer.cpp	/^  OBGenericData* OBRotamerList::Clone(OBBase* newparent) const$/;"	f	class:OpenBabel::OBRotamerList
Clone	src/stereo/cistrans.cpp	/^  OBGenericData* OBCisTransStereo::Clone(OBBase *mol) const$/;"	f	class:OpenBabel::OBCisTransStereo
Clone	src/stereo/squareplanar.cpp	/^  OBGenericData* OBSquarePlanarStereo::Clone(OBBase *mol) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
Clone	src/stereo/tetrahedral.cpp	/^  OBGenericData* OBTetrahedralStereo::Clone(OBBase *mol) const$/;"	f	class:OpenBabel::OBTetrahedralStereo
CloneData	src/base.cpp	/^  void OBBase::CloneData(OBGenericData *d)$/;"	f	class:OpenBabel::OBBase
CloseOutFile	src/obconversion.cpp	/^  void OBConversion::CloseOutFile()$/;"	f	class:OpenBabel::OBConversion
Closure	include/openbabel/bond.h	/^        Closure  = (1<<10) \/\/!< A bond which "closes" a ring when walking the molecular graph$/;"	e	enum:OpenBabel::OBBond::Flag
Cm	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
CmpCCandidates	src/formats/libinchi/ichitaut.c	/^int CmpCCandidates( const void *a1, const void *a2 )$/;"	f
Cn	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Co	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
Coeffs	include/openbabel/kinetics.h	/^  double Coeffs[14];$/;"	m	class:OpenBabel::OBNasaThermoData
ColorGradient	include/openbabel/depict/svgpainter.h	/^  typedef std::pair<OBColor,OBColor> ColorGradient;$/;"	t	namespace:OpenBabel
CommandPainter	include/openbabel/depict/commandpainter.h	/^  class CommandPainter : public OBPainter$/;"	c	namespace:OpenBabel
CommandPainter	src/depict/commandpainter.cpp	/^  CommandPainter::CommandPainter(ostream& ofs): m_ofs(ofs)$/;"	f	class:OpenBabel::CommandPainter
CommentData	include/openbabel/base.h	/^      CommentData   =      3,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CommentInfo	include/openbabel/json/json.h	/^      struct CommentInfo$/;"	s	class:Json::Value
CommentInfo	src/formats/json/jsoncpp.cpp	/^Value::CommentInfo::CommentInfo()$/;"	f	class:Json::Value::CommentInfo
CommentPlacement	include/openbabel/json/json.h	/^   enum CommentPlacement$/;"	g	namespace:Json
CompAtomInvariants2	src/formats/libinchi/ichisort.c	/^int CompAtomInvariants2( const void* a1, const void* a2 )$/;"	f
CompAtomInvariants2Only	src/formats/libinchi/ichisort.c	/^int CompAtomInvariants2Only( const void* a1, const void* a2 )$/;"	f
CompCGroupNumber	src/formats/libinchi/ichi_bns.c	/^int CompCGroupNumber( const void *cg1, const void *cg2 )$/;"	f
CompChemElemLex	src/formats/libinchi/ichisort.c	/^int CompChemElemLex( const void *a1, const void *a2 )$/;"	f
CompDble	src/formats/libinchi/ichister.c	/^int CompDble( const void *a1, const void *a2 )$/;"	f
CompINChI2	src/formats/libinchi/ichimake.c	/^int CompINChI2(const INCHI_SORT *p1, const INCHI_SORT *p2, int bTaut, int bCompareIsotopic)$/;"	f
CompINChILayers	src/formats/libinchi/ichimake.c	/^int CompINChILayers(const INCHI_SORT *p1, const INCHI_SORT *p2, $/;"	f
CompINChINonTaut2	src/formats/libinchi/ichimake.c	/^int CompINChINonTaut2(const void *p1, const void *p2)$/;"	f
CompINChITaut2	src/formats/libinchi/ichimake.c	/^int CompINChITaut2(const void *p1, const void *p2)$/;"	f
CompINChITautVsNonTaut	src/formats/libinchi/ichimake.c	/^int CompINChITautVsNonTaut(const INCHI_SORT *p1, const INCHI_SORT *p2, int bCompareIsotopic)$/;"	f
CompNeighListRanks	src/formats/libinchi/ichisort.c	/^int CompNeighListRanks( const void* a1, const void* a2 )$/;"	f
CompNeighListRanksOrd	src/formats/libinchi/ichisort.c	/^int CompNeighListRanksOrd( const void* a1, const void* a2 )$/;"	f
CompNeighLists	src/formats/libinchi/ichisort.c	/^int CompNeighLists( const void* a1, const void* a2 )$/;"	f
CompNeighListsUpToMaxRank	src/formats/libinchi/ichisort.c	/^int CompNeighListsUpToMaxRank( const void* a1, const void* a2 )$/;"	f
CompNeighborsAT_NUMBER	src/formats/libinchi/ichisort.c	/^int CompNeighborsAT_NUMBER( const void* a1, const void* a2)$/;"	f
CompNeighborsRanksCountEql	src/formats/libinchi/ichisort.c	/^int CompNeighborsRanksCountEql( const void* a1, const void* a2 )$/;"	f
CompRank	src/formats/libinchi/ichisort.c	/^int CompRank(const void* a1, const void* a2 )$/;"	f
CompRankTautomer	src/formats/libinchi/ichitaut.c	/^int CompRankTautomer(const void* a1, const void* a2 )$/;"	f
CompRanksInvOrd	src/formats/libinchi/ichisort.c	/^int CompRanksInvOrd( const void* a1, const void* a2 )$/;"	f
CompRanksOrd	src/formats/libinchi/ichisort.c	/^int CompRanksOrd( const void* a1, const void* a2 )$/;"	f
CompTGroupNumber	src/formats/libinchi/ichi_bns.c	/^int CompTGroupNumber( const void *tg1, const void *tg2 )$/;"	f
Compare	src/descriptor.cpp	/^bool OBDescriptor::Compare(OBBase* pOb, istream& optionText, bool noEval, string* param)$/;"	f	class:OpenBabel::OBDescriptor
Compare	src/descriptors/cansmidescriptor.cpp	/^bool CanSmiles::Compare(OBBase* pOb, istream& optionText, bool noEval, string* param)$/;"	f	class:OpenBabel::CanSmiles
Compare	src/descriptors/cmpdfilter.cpp	/^  virtual bool Compare(OBBase* pOb, istream&, bool noEval, string* param)$/;"	f	class:OpenBabel::CompoundFilter
Compare	src/descriptors/filters.cpp	/^  virtual bool Compare(OBBase* pOb, istream& optionText, bool noEval, std::string*)$/;"	f	class:OpenBabel::FormulaDescriptor
Compare	src/descriptors/filters.cpp	/^bool SmartsFilter::Compare(OBBase* pOb, istream& optionText, bool noEval, std::string*)$/;"	f	class:OpenBabel::SmartsFilter
Compare	src/descriptors/filters.cpp	/^bool TitleFilter::Compare(OBBase* pOb, istream& optionText, bool noEval, std::string*)$/;"	f	class:OpenBabel::TitleFilter
Compare	src/descriptors/inchidescriptor.cpp	/^bool InChIFilter::Compare(OBBase* pOb, istream& optionText, bool noEval, std::string*)$/;"	f	class:OpenBabel::InChIFilter
CompareAllDisconnectedOrigInchiToRevInChI	src/formats/libinchi/ichirvr7.c	/^int CompareAllDisconnectedOrigInchiToRevInChI(StrFromINChI *pStruct[INCHI_NUM][TAUT_NUM],$/;"	f
CompareAllOrigInchiToRevInChI	src/formats/libinchi/ichirvr7.c	/^int CompareAllOrigInchiToRevInChI(StrFromINChI *pStruct[INCHI_NUM][TAUT_NUM], InpInChI *pOneInput, int bReqNonTaut,$/;"	f
CompareBondAtoms	src/formats/pdbqtformat.cpp	/^  int CompareBondAtoms(const void *a, const void *b)$/;"	f	namespace:OpenBabel
CompareBondPairSecond	src/canon.cpp	/^  inline bool CompareBondPairSecond(const std::pair<OBBond*,unsigned int> &a,const std::pair<OBBond*,unsigned int> &b)$/;"	f	namespace:OpenBabel
CompareBonds	src/formats/pdbqtformat.cpp	/^  int CompareBonds(const void *a, const void *b)$/;"	f	namespace:OpenBabel
CompareConformerHighScore	src/conformersearch.cpp	/^  struct CompareConformerHighScore {$/;"	s	namespace:OpenBabel	file:
CompareConformerLowScore	src/conformersearch.cpp	/^  struct CompareConformerLowScore {$/;"	s	namespace:OpenBabel	file:
CompareDfsDescendants4CT	src/formats/libinchi/ichimake.c	/^static int CompareDfsDescendants4CT( const void *a1, const void *a2 )$/;"	f	file:
CompareHillFormulas	src/formats/libinchi/ichimake.c	/^int CompareHillFormulas( const char *f1, const char *f2 )$/;"	f
CompareHillFormulasNoH	src/formats/libinchi/ichimake.c	/^int CompareHillFormulasNoH( const char *f1, const char *f2, int *num_H1, int *num_H2 )$/;"	f
CompareINChI	src/formats/libinchi/ichimake.c	/^int CompareINChI( INChI *i1, INChI *i2, INChI_Aux *a1, INChI_Aux *a2 )$/;"	f
CompareIcr	src/formats/libinchi/ichimake.c	/^int CompareIcr( ICR *picr1, ICR *picr2, INCHI_MODE *pin1, INCHI_MODE *pin2, INCHI_MODE mask )$/;"	f
CompareInchi	src/formats/inchiformat.cpp	/^char InChIFormat::CompareInchi(const string& Inchi1, const string& Inchi2)$/;"	f	class:OpenBabel::InChIFormat
CompareInchiFlags	include/inchi/ichirvrs.h	/^    INCHI_MODE  CompareInchiFlags[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagInputInChI
CompareInchiMsgs	src/formats/libinchi/ichirvr7.c	/^CMP_INCHI_MSG  CompareInchiMsgs[] = {$/;"	v
CompareInchiMsgsGroup	src/formats/libinchi/ichirvr7.c	/^CMP_INCHI_MSG_GROUP CompareInchiMsgsGroup[] = {$/;"	v
CompareInchiStereo	src/formats/libinchi/ichimake.c	/^int CompareInchiStereo( INChI_Stereo *Stereo1, INCHI_MODE nFlags1, INChI_Stereo *Stereo2, INCHI_MODE nFlags2 )$/;"	f
CompareLinCtStereo	src/formats/libinchi/ichimap1.c	/^int CompareLinCtStereo ( AT_STEREO_DBLE *LinearCTStereoDble1, int nLenLinearCTStereoDble1,$/;"	f
CompareLinCtStereoAtomToValues	src/formats/libinchi/ichimap1.c	/^int CompareLinCtStereoAtomToValues( AT_STEREO_CARB *LinearCTStereoCarb,$/;"	f
CompareLinCtStereoCarb	src/formats/libinchi/ichimap1.c	/^int CompareLinCtStereoCarb ( AT_STEREO_CARB *LinearCTStereoCarb1, int nLenLinearCTStereoCarb1,$/;"	f
CompareLinCtStereoDble	src/formats/libinchi/ichimap1.c	/^int CompareLinCtStereoDble ( AT_STEREO_DBLE *LinearCTStereoDble1, int nLenLinearCTStereoDble1,$/;"	f
CompareLinCtStereoDoubleToValues	src/formats/libinchi/ichimap1.c	/^int CompareLinCtStereoDoubleToValues( AT_STEREO_DBLE *LinearCTStereoDble,$/;"	f
CompareNeighListLex	src/formats/libinchi/ichisort.c	/^int CompareNeighListLex( NEIGH_LIST pp1, NEIGH_LIST pp2, const AT_RANK *nRank)$/;"	f
CompareNeighListLexUpToMaxRank	src/formats/libinchi/ichisort.c	/^int CompareNeighListLexUpToMaxRank( NEIGH_LIST pp1, NEIGH_LIST pp2, const AT_RANK *nRank, AT_RANK nMaxAtNeighRank )$/;"	f
CompareOneOrigInchiToRevInChI	src/formats/libinchi/ichirvr7.c	/^int CompareOneOrigInchiToRevInChI(StrFromINChI *pStruct, INChI *pInChI[TAUT_NUM], int bMobileH, int iComponent,$/;"	f
ComparePairFirst	src/graphsym.cpp	/^  inline bool ComparePairFirst(const std::pair<OBAtom*,unsigned int> &a,const std::pair<OBAtom*,unsigned int> &b)$/;"	f	namespace:OpenBabel
ComparePairSecond	src/graphsym.cpp	/^  inline bool ComparePairSecond(const std::pair<OBAtom*,unsigned int> &a,const std::pair<OBAtom*,unsigned int> &b)$/;"	f	namespace:OpenBabel
ComparePairSecond	src/stereo/perception.cpp	/^  inline bool ComparePairSecond(const std::pair<unsigned int, unsigned int> &a,$/;"	f	namespace:OpenBabel
CompareReversedINChI	src/formats/libinchi/ichimake.c	/^int CompareReversedINChI( INChI *i1 \/* InChI from reversed struct *\/, INChI *i2 \/* input InChI *\/, INChI_Aux *a1, INChI_Aux *a2 )$/;"	f
CompareReversedINChI2	src/formats/libinchi/ichimake.c	/^INCHI_MODE CompareReversedINChI2( INChI *i1 \/* InChI from reversed struct *\/, INChI *i2 \/* input InChI *\/,$/;"	f
CompareReversedINChI3	src/formats/libinchi/ichirvr7.c	/^INCHI_MODE CompareReversedINChI3( INChI *i1 \/* InChI from reversed struct *\/, INChI *i2 \/* input InChI *\/,$/;"	f
CompareReversedStereoINChI	src/formats/libinchi/ichimake.c	/^int CompareReversedStereoINChI( INChI_Stereo *s1\/* InChI from reversed struct *\/, INChI_Stereo *s2 \/* input InChI *\/)$/;"	f
CompareReversedStereoINChI2	src/formats/libinchi/ichimake.c	/^int CompareReversedStereoINChI2( INChI_Stereo *s1\/* InChI from reversed struct *\/, INChI_Stereo *s2 \/* input InChI *\/, ICR *picr)$/;"	f
CompareReversedStereoINChI3	src/formats/libinchi/ichirvr7.c	/^INCHI_MODE CompareReversedStereoINChI3( INChI_Stereo *s1\/* InChI from reversed struct *\/, INChI_Stereo *s2 \/* input InChI *\/, ICR *picr)$/;"	f
CompareRingSize	src/ring.cpp	/^  bool CompareRingSize(const OBRing *a,const OBRing *b)$/;"	f	namespace:OpenBabel
CompareRotor	src/mcdlutil.cpp	/^  bool CompareRotor(const pair<int, int> &a, const pair<int, int> &b)$/;"	f	namespace:OpenBabel
CompareRotor	src/rotor.cpp	/^  bool CompareRotor(const pair<OBBond*,int> &a,const pair<OBBond*,int> &b)$/;"	f	namespace:OpenBabel
CompareStereoINChI	src/formats/libinchi/ichimake.c	/^int CompareStereoINChI( INChI_Stereo *s1, INChI_Stereo *s2 )$/;"	f
CompareStringWithFilter	src/descriptor.cpp	/^bool OBDescriptor::CompareStringWithFilter(istream& optionText, string& sval, bool, bool NoCompOK)$/;"	f	class:OpenBabel::OBDescriptor
CompareTautNonIsoPartOfINChI	src/formats/libinchi/ichimake.c	/^int CompareTautNonIsoPartOfINChI( const INChI *i1, const INChI *i2 )$/;"	f
CompareTwoPairsOfInChI	src/formats/libinchi/ichirvr7.c	/^int CompareTwoPairsOfInChI( INChI *pInChI1[TAUT_NUM], INChI *pInChI2[TAUT_NUM],$/;"	f
CompareUnsigned	src/graphsym.cpp	/^  inline bool CompareUnsigned(const unsigned int &a,const unsigned int &b)$/;"	f	namespace:OpenBabel
CompileAutomorphismQuery	src/isomorphism.cpp	/^  OBQuery* CompileAutomorphismQuery(OBMol *mol, const OBBitVec &mask, const std::vector<unsigned int> &symClasses)$/;"	f	namespace:OpenBabel
CompileMoleculeQuery	src/query.cpp	/^  OBQuery* CompileMoleculeQuery(OBMol *mol, const OBBitVec &mask)$/;"	f	namespace:OpenBabel
CompileSmilesQuery	src/query.cpp	/^  OBQuery* CompileSmilesQuery(const std::string &smiles, const OBBitVec &mask)$/;"	f	namespace:OpenBabel
CompleteCode	src/canon.cpp	/^    static void CompleteCode(OBMol *mol, FullCode &fullcode, State &state)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
CompoundFilter	src/descriptors/cmpdfilter.cpp	/^  CompoundFilter(const char* ID, const char* macrotext, const char* descr)$/;"	f	class:OpenBabel::CompoundFilter
CompoundFilter	src/descriptors/cmpdfilter.cpp	/^class CompoundFilter : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
Compute	src/forcefields/forcefieldgaff.cpp	/^  void OBFFAngleCalculationGaff::Compute()$/;"	f	class:OpenBabel::OBFFAngleCalculationGaff
Compute	src/forcefields/forcefieldgaff.cpp	/^  void OBFFBondCalculationGaff::Compute()$/;"	f	class:OpenBabel::OBFFBondCalculationGaff
Compute	src/forcefields/forcefieldgaff.cpp	/^  void OBFFElectrostaticCalculationGaff::Compute()$/;"	f	class:OpenBabel::OBFFElectrostaticCalculationGaff
Compute	src/forcefields/forcefieldgaff.cpp	/^  void OBFFOOPCalculationGaff::Compute()$/;"	f	class:OpenBabel::OBFFOOPCalculationGaff
Compute	src/forcefields/forcefieldgaff.cpp	/^  void OBFFTorsionCalculationGaff::Compute()$/;"	f	class:OpenBabel::OBFFTorsionCalculationGaff
Compute	src/forcefields/forcefieldgaff.cpp	/^  void OBFFVDWCalculationGaff::Compute()$/;"	f	class:OpenBabel::OBFFVDWCalculationGaff
Compute	src/forcefields/forcefieldghemical.cpp	/^  void OBFFAngleCalculationGhemical::Compute()$/;"	f	class:OpenBabel::OBFFAngleCalculationGhemical
Compute	src/forcefields/forcefieldghemical.cpp	/^  void OBFFBondCalculationGhemical::Compute()$/;"	f	class:OpenBabel::OBFFBondCalculationGhemical
Compute	src/forcefields/forcefieldghemical.cpp	/^  void OBFFElectrostaticCalculationGhemical::Compute()$/;"	f	class:OpenBabel::OBFFElectrostaticCalculationGhemical
Compute	src/forcefields/forcefieldghemical.cpp	/^  void OBFFTorsionCalculationGhemical::Compute()$/;"	f	class:OpenBabel::OBFFTorsionCalculationGhemical
Compute	src/forcefields/forcefieldghemical.cpp	/^  void OBFFVDWCalculationGhemical::Compute()$/;"	f	class:OpenBabel::OBFFVDWCalculationGhemical
Compute	src/forcefields/forcefieldmmff94.cpp	/^  inline void OBFFAngleCalculationMMFF94::Compute()$/;"	f	class:OpenBabel::OBFFAngleCalculationMMFF94
Compute	src/forcefields/forcefieldmmff94.cpp	/^  inline void OBFFBondCalculationMMFF94::Compute()$/;"	f	class:OpenBabel::OBFFBondCalculationMMFF94
Compute	src/forcefields/forcefieldmmff94.cpp	/^  inline void OBFFElectrostaticCalculationMMFF94::Compute()$/;"	f	class:OpenBabel::OBFFElectrostaticCalculationMMFF94
Compute	src/forcefields/forcefieldmmff94.cpp	/^  inline void OBFFStrBndCalculationMMFF94::Compute()$/;"	f	class:OpenBabel::OBFFStrBndCalculationMMFF94
Compute	src/forcefields/forcefieldmmff94.cpp	/^  inline void OBFFTorsionCalculationMMFF94::Compute()$/;"	f	class:OpenBabel::OBFFTorsionCalculationMMFF94
Compute	src/forcefields/forcefieldmmff94.cpp	/^  inline void OBFFVDWCalculationMMFF94::Compute()$/;"	f	class:OpenBabel::OBFFVDWCalculationMMFF94
Compute	src/forcefields/forcefieldmmff94.cpp	/^  void OBFFOOPCalculationMMFF94::Compute()$/;"	f	class:OpenBabel::OBFFOOPCalculationMMFF94
Compute	src/forcefields/forcefielduff.cpp	/^  void OBFFAngleCalculationUFF::Compute()$/;"	f	class:OpenBabel::OBFFAngleCalculationUFF
Compute	src/forcefields/forcefielduff.cpp	/^  void OBFFBondCalculationUFF::Compute()$/;"	f	class:OpenBabel::OBFFBondCalculationUFF
Compute	src/forcefields/forcefielduff.cpp	/^  void OBFFElectrostaticCalculationUFF::Compute()$/;"	f	class:OpenBabel::OBFFElectrostaticCalculationUFF
Compute	src/forcefields/forcefielduff.cpp	/^  void OBFFOOPCalculationUFF::Compute()$/;"	f	class:OpenBabel::OBFFOOPCalculationUFF
Compute	src/forcefields/forcefielduff.cpp	/^  void OBFFTorsionCalculationUFF::Compute()$/;"	f	class:OpenBabel::OBFFTorsionCalculationUFF
Compute	src/forcefields/forcefielduff.cpp	/^  void OBFFVDWCalculationUFF::Compute()$/;"	f	class:OpenBabel::OBFFVDWCalculationUFF
ComputeCharges	include/openbabel/chargemodel.h	/^    virtual bool ComputeCharges(OBMol &m ) { return false; };$/;"	f	class:OpenBabel::OBChargeModel
ComputeCharges	include/openbabel/chargemodel.h	/^    virtual bool ComputeCharges(OBMol &m, const char *args) { return ComputeCharges( m ); } $/;"	f	class:OpenBabel::OBChargeModel
ComputeCharges	src/charges/eem.cpp	/^  bool EEMCharges::ComputeCharges(OBMol &mol)$/;"	f	class:OpenBabel::EEMCharges
ComputeCharges	src/charges/eqeq.cpp	/^  bool EQEqCharges::ComputeCharges(OBMol &mol)$/;"	f	class:OpenBabel::EQEqCharges
ComputeCharges	src/charges/fromfile.cpp	/^	bool FromFileCharges::ComputeCharges(OBMol &mol, const char *arg )$/;"	f	class:OpenBabel::FromFileCharges
ComputeCharges	src/charges/gasteiger.cpp	/^  bool GasteigerCharges::ComputeCharges(OBMol &mol)$/;"	f	class:OpenBabel::GasteigerCharges
ComputeCharges	src/charges/mmff94.cpp	/^  bool MMFF94Charges::ComputeCharges(OBMol &mol)$/;"	f	class:OpenBabel::MMFF94Charges
ComputeCharges	src/charges/none.cpp	/^  bool NoCharges::ComputeCharges(OBMol &mol)$/;"	f	class:OpenBabel::NoCharges
ComputeCharges	src/charges/qeq.cpp	/^  bool QEqCharges::ComputeCharges(OBMol &mol)$/;"	f	class:OpenBabel::QEqCharges
ComputeCharges	src/charges/qtpie.cpp	/^  bool QTPIECharges::ComputeCharges(OBMol &mol)$/;"	f	class:OpenBabel::QTPIECharges
ConTable	src/formats/libinchi/ichican2.c	/^} ConTable;$/;"	t	typeref:struct:tagCTable	file:
Confab	src/ops/opconfab.cpp	/^    Confab() {};$/;"	f	class:OpenBabel::Confab
Confab	src/ops/opconfab.cpp	/^  class Confab$/;"	c	namespace:OpenBabel	file:
ConfabReport	src/formats/confabreport.cpp	/^  ConfabReport()$/;"	f	class:OpenBabel::ConfabReport
ConfabReport	src/formats/confabreport.cpp	/^class ConfabReport : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Config	include/openbabel/grid.h	/^    virtual void   Config(std::string) {}$/;"	f	class:OpenBabel::OBScoreGrid
Config	include/openbabel/stereo/cistrans.h	/^      Config() : begin(OBStereo::NoRef), end(OBStereo::NoRef), shape(OBStereo::ShapeU),$/;"	f	struct:OpenBabel::OBCisTransStereo::Config
Config	include/openbabel/stereo/cistrans.h	/^      Config(unsigned long _begin, unsigned long _end, const OBStereo::Refs &_refs,$/;"	f	struct:OpenBabel::OBCisTransStereo::Config
Config	include/openbabel/stereo/cistrans.h	/^    struct OBAPI Config$/;"	s	class:OpenBabel::OBCisTransStereo
Config	include/openbabel/stereo/squareplanar.h	/^      Config() : center(OBStereo::NoRef), shape(OBStereo::ShapeU),$/;"	f	struct:OpenBabel::OBSquarePlanarStereo::Config
Config	include/openbabel/stereo/squareplanar.h	/^      Config(unsigned long _center, const OBStereo::Refs &_refs,$/;"	f	struct:OpenBabel::OBSquarePlanarStereo::Config
Config	include/openbabel/stereo/squareplanar.h	/^    struct OBAPI Config$/;"	s	class:OpenBabel::OBSquarePlanarStereo
Config	include/openbabel/stereo/tetrahedral.h	/^      Config() : center(OBStereo::NoRef), from(OBStereo::NoRef),$/;"	f	struct:OpenBabel::OBTetrahedralStereo::Config
Config	include/openbabel/stereo/tetrahedral.h	/^      Config(unsigned long _center, unsigned long from_or_towards,$/;"	f	struct:OpenBabel::OBTetrahedralStereo::Config
Config	include/openbabel/stereo/tetrahedral.h	/^    struct OBAPI Config$/;"	s	class:OpenBabel::OBTetrahedralStereo
Config	src/stereo/stereoutil.h	/^    typedef OBCisTransStereo::Config Config;$/;"	t	struct:OpenBabel::OBStereoTypeTraits
Config	src/stereo/stereoutil.h	/^    typedef OBTetrahedralStereo::Config Config; \/\/ the config struct$/;"	t	struct:OpenBabel::OBStereoTypeTraits
ConflictingRingBonds	src/formats/smiley.h	/^    ConflictingRingBonds = 128,$/;"	e	enum:Smiley::ErrorCode
ConformerData	include/openbabel/base.h	/^      ConformerData =      4,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
ConformerIndx	src/formats/xml/pubchem.cpp	/^	int ConformerIndx;$/;"	m	class:OpenBabel::PubChemFormat	file:
ConformerScore	src/conformersearch.cpp	/^    ConformerScore(const RotorKey &key, double _score) : rotorKey(key), score(_score) {}$/;"	f	struct:OpenBabel::ConformerScore
ConformerScore	src/conformersearch.cpp	/^  struct ConformerScore {$/;"	s	namespace:OpenBabel	file:
ConjugateGradients	src/forcefield.cpp	/^  void OBForceField::ConjugateGradients(int steps, double econv, int method)$/;"	f	class:OpenBabel::OBForceField
ConjugateGradientsInitialize	src/forcefield.cpp	/^  void OBForceField::ConjugateGradientsInitialize(int steps, double econv,$/;"	f	class:OpenBabel::OBForceField
ConjugateGradientsTakeNSteps	src/forcefield.cpp	/^  bool OBForceField::ConjugateGradientsTakeNSteps(int n)$/;"	f	class:OpenBabel::OBForceField
Connect	src/builder.cpp	/^  bool OBBuilder::Connect(OBMol &mol, int idxA, int idxB, int bondOrder)$/;"	f	class:OpenBabel::OBBuilder
Connect	src/builder.cpp	/^  bool OBBuilder::Connect(OBMol &mol, int idxA, int idxB,$/;"	f	class:OpenBabel::OBBuilder
ConnectDisconnectedH	src/formats/libinchi/ichirvr1.c	/^int ConnectDisconnectedH( inp_ATOM *at, int num_atoms, int num_deleted_H )$/;"	f
ConnectFrags	src/builder.cpp	/^  void OBBuilder::ConnectFrags(OBMol &mol, OBMol &workMol, vector<int> match, vector<vector3> coords,$/;"	f	class:OpenBabel::OBBuilder
ConnectMetalFlower	src/formats/libinchi/ichirvr1.c	/^int ConnectMetalFlower( int *pcur_num_vertices, int *pcur_num_edges,$/;"	f
ConnectSuperCGroup	src/formats/libinchi/ichirvr1.c	/^int ConnectSuperCGroup( int nSuperCGroup, int nAddGroups[], int num_add,$/;"	f
ConnectTheDots	src/mol.cpp	/^  void OBMol::ConnectTheDots(void)$/;"	f	class:OpenBabel::OBMol
ConnectTwoVertices	src/formats/libinchi/ichirvr1.c	/^int ConnectTwoVertices( BNS_VERTEX *p1, BNS_VERTEX *p2, BNS_EDGE *e, BN_STRUCT *pBNS, int bClearEdge )$/;"	f
ConsoleQuit	src/formats/libinchi/runichi.c	/^int (*ConsoleQuit)(void) = NULL; \/*  Console user issued CTRL+C etc. *\/$/;"	v
ConstRefIter	include/openbabel/stereo/stereo.h	/^    typedef Refs::const_iterator ConstRefIter;$/;"	t	struct:OpenBabel::OBStereo
ConstrainBackbone	src/chains.cpp	/^  void OBChainsParser::ConstrainBackbone(OBMol &mol, Template *templ, int tmax)$/;"	f	class:OpenBabel::OBChainsParser
Construct	src/GUI/optswx.cpp	/^bool DynOptionswx::Construct(const char* OptionsText, const char* StartText, int MultiCharFilter)$/;"	f	class:DynOptionswx
ConstructTree	src/formats/pdbqtformat.cpp	/^  void ConstructTree (map <unsigned int, branch>& tree, vector <vector <int> > rigid_fragments, unsigned int root_piece, const OBMol& mol, bool flexible)$/;"	f	namespace:OpenBabel
ContainsRef	src/stereo/stereo.cpp	/^  bool OBStereo::ContainsRef(const OBStereo::Refs &refs, unsigned long id)$/;"	f	class:OpenBabel::OBStereo
ContainsSameRefs	src/stereo/stereo.cpp	/^  bool OBStereo::ContainsSameRefs(const OBStereo::Refs &refs1, const OBStereo::Refs &refs2)$/;"	f	class:OpenBabel::OBStereo
ContigFragList	src/mol.cpp	/^  void OBMol::ContigFragList(std::vector<std::vector<int> >&cfl)$/;"	f	class:OpenBabel::OBMol
Convergence	include/openbabel/conformersearch.h	/^      enum Convergence { Highest, Lowest, Sum, Average };$/;"	g	class:OpenBabel::OBConformerScore
Convert	include/openbabel/stereo/bindings.h	/^    static OBCisTransStereo::Config Convert(const OBCisTransConfig &other)$/;"	f	struct:OpenBabel::OBCisTransConfig
Convert	include/openbabel/stereo/bindings.h	/^    static OBSquarePlanarStereo::Config Convert(const OBSquarePlanarConfig &other)$/;"	f	struct:OpenBabel::OBSquarePlanarConfig
Convert	include/openbabel/stereo/bindings.h	/^    static OBTetrahedralStereo::Config Convert(const OBTetrahedralConfig &other)$/;"	f	struct:OpenBabel::OBTetrahedralConfig
Convert	src/obconversion.cpp	/^  int OBConversion::Convert()$/;"	f	class:OpenBabel::OBConversion
Convert	src/obconversion.cpp	/^  int OBConversion::Convert(istream* is, ostream* os)$/;"	f	class:OpenBabel::OBConversion
ConvertDativeBonds	src/mol.cpp	/^  bool OBMol::ConvertDativeBonds()$/;"	f	class:OpenBabel::OBMol
ConvertZeroBonds	src/mol.cpp	/^  bool OBMol::ConvertZeroBonds()$/;"	f	class:OpenBabel::OBMol
Convert_SIV_to_SVI	src/formats/libinchi/ichirvr2.c	/^int Convert_SIV_to_SVI(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
CoordIndx	src/formats/xml/pubchem.cpp	/^	vector<int> CoordIndx;$/;"	m	class:OpenBabel::PubChemFormat	file:
CoordsToIndex	src/grid.cpp	/^  int OBFloatGrid::CoordsToIndex(double x, double y, double z)$/;"	f	class:OpenBabel::OBFloatGrid
CoordsToIndex	src/grid.cpp	/^  void OBFloatGrid::CoordsToIndex(int *idx,double *c)$/;"	f	class:OpenBabel::OBFloatGrid
Coordx	src/formats/xml/pubchem.cpp	/^	vector<double> Coordx;$/;"	m	class:OpenBabel::PubChemFormat	file:
Coordy	src/formats/xml/pubchem.cpp	/^	vector<double> Coordy;$/;"	m	class:OpenBabel::PubChemFormat	file:
Coordz	src/formats/xml/pubchem.cpp	/^	vector<double> Coordz;$/;"	m	class:OpenBabel::PubChemFormat	file:
Copy2StereoBondOrAllene	src/formats/libinchi/ichimak2.c	/^int Copy2StereoBondOrAllene( INChI_Stereo *Stereo, int *nNumberOfStereoCenters, int *nNumberOfStereoBonds,$/;"	f
CopyAt2St	src/formats/libinchi/ichirvr2.c	/^void CopyAt2St( inp_ATOM *at, inp_ATOM_STEREO * st, int num_atoms )$/;"	f
CopyAtomExpr	src/parsmart.cpp	/^  static AtomExpr *CopyAtomExpr( AtomExpr *expr )$/;"	f	namespace:OpenBabel
CopyAtomNumbers	src/formats/libinchi/ichiread.c	/^int CopyAtomNumbers( INChI *pInChI_To, int bIsoTo, INChI *pInChI_From, int bIsoFrom )$/;"	f
CopyBnsToAtom	src/formats/libinchi/ichirvr2.c	/^int CopyBnsToAtom( StrFromINChI *pStruct, BN_STRUCT  *pBNS, VAL_AT *pVA, ALL_TC_GROUPS *pTCGroups, int bAllowZeroBondOrder )$/;"	f
CopyBondExpr	src/parsmart.cpp	/^  static BondExpr *CopyBondExpr( BondExpr *expr )$/;"	f	namespace:OpenBabel
CopyConformer	src/mol.cpp	/^  void OBMol::CopyConformer(double *c,int idx)$/;"	f	class:OpenBabel::OBMol
CopyFormat	src/formats/copyformat.cpp	/^  CopyFormat()$/;"	f	class:OpenBabel::CopyFormat
CopyFormat	src/formats/copyformat.cpp	/^class CopyFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
CopyInpAtomData	src/formats/libinchi/inchi_dll.c	/^int CopyInpAtomData( INP_ATOM_DATA *dest_inp_at_data, INP_ATOM_DATA *src_inp_at_data )$/;"	f
CopyLinearCTStereoToINChIStereo	src/formats/libinchi/ichimak2.c	/^int CopyLinearCTStereoToINChIStereo( INChI_Stereo *Stereo,$/;"	f
CopyMOLfile	include/inchi/lreadmol.h	/^int CopyMOLfile(FILE *inp_file, long fPtrStart, long fPtrEnd, FILE *prb_file, long lNumb)$/;"	f
CopyMOLfile	src/formats/libinchi/inchi_dll.c	/^int CopyMOLfile(FILE *inp_file, long fPtrStart, long fPtrEnd, $/;"	f
CopyOfInput	src/formats/pngformat.cpp	/^  vector<char> CopyOfInput;$/;"	m	class:OpenBabel::PNGFormat	file:
CopyOptions	src/obconversion.cpp	/^  void OBConversion::CopyOptions(OBConversion* pSourceConv, Option_type typ)$/;"	f	class:OpenBabel::OBConversion
CopyPattern	src/parsmart.cpp	/^  static Pattern *CopyPattern( Pattern *pat )$/;"	f	namespace:OpenBabel
CopySegment	src/formats/libinchi/ichiread.c	/^int CopySegment( INChI *pInChITo, INChI *pInChIFrom, int SegmentType, int bIsotopicTo, int bIsotopicFrom)$/;"	f
CopySt2At	src/formats/libinchi/ichirvr2.c	/^void CopySt2At( inp_ATOM *at, inp_ATOM_STEREO * st, int num_atoms )$/;"	f
CorrectAromaticAmineCharge	src/formats/smilesformat.cpp	/^  void OBMol2Cansmi::CorrectAromaticAmineCharge(OBMol &mol)$/;"	f	class:OpenBabel::OBMol2Cansmi
CorrectAromaticNitrogens	src/typer.cpp	/^  void OBAtomTyper::CorrectAromaticNitrogens(OBMol &mol)$/;"	f	class:OpenBabel::OBAtomTyper
CorrectBadResonanceForm	src/mol.cpp	/^  void CorrectBadResonanceForm(OBMol &mol)$/;"	f	namespace:OpenBabel
CorrectChirality	src/chiral.cpp	/^  bool CorrectChirality(OBMol &, OBAtom *atm, atomreftype i, atomreftype o)$/;"	f	namespace:OpenBabel
CorrectFixing_NH_NH_Bonds	src/formats/libinchi/ichi_bns.c	/^int CorrectFixing_NH_NH_Bonds( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms )$/;"	f
CorrectForPH	src/mol.cpp	/^  bool OBMol::CorrectForPH(double pH)$/;"	f	class:OpenBabel::OBMol
CorrectForPH	src/phmodel.cpp	/^  void OBPhModel::CorrectForPH(OBMol &mol, double pH)$/;"	f	class:OpenBabel::OBPhModel
CorrectFormalCharges	src/formats/cifformat.cpp	/^  void CorrectFormalCharges(OBMol *mol)$/;"	f	namespace:OpenBabel
CorrectStereoAtoms	src/builder.cpp	/^  bool OBBuilder::CorrectStereoAtoms(OBMol &mol, bool warn)$/;"	f	class:OpenBabel::OBBuilder
CorrectStereoBonds	src/builder.cpp	/^  bool OBBuilder::CorrectStereoBonds(OBMol &mol)$/;"	f	class:OpenBabel::OBBuilder
CorrectStereoConstraints	src/distgeom.cpp	/^  void OBDistanceGeometry::CorrectStereoConstraints(double lambda)$/;"	f	class:OpenBabel::OBDistanceGeometry
CorrectVelocities	src/forcefield.cpp	/^  void OBForceField::CorrectVelocities()$/;"	f	class:OpenBabel::OBForceField
CorrectedBondRad	src/data.cpp	/^  double OBElementTable::CorrectedBondRad(int atomicnum, int hyb)$/;"	f	class:OpenBabel::OBElementTable
CorrectedVdwRad	src/data.cpp	/^  double OBElementTable::CorrectedVdwRad(int atomicnum, int hyb)$/;"	f	class:OpenBabel::OBElementTable
CoulombInt	src/charges/qeq.cpp	/^  double QEqCharges::CoulombInt(double a, double b, double R)$/;"	f	class:OpenBabel::QEqCharges
CoulombInt	src/charges/qtpie.cpp	/^double QTPIECharges::CoulombInt(double a, double b, double R)$/;"	f	class:OpenBabel::QTPIECharges
CoulombThreshold	src/charges/qeq.h	/^const double CoulombThreshold = 1.e-9;$/;"	v
CoulombThreshold	src/charges/qtpie.h	/^const double CoulombThreshold = 1.e-9;$/;"	v
Count	include/openbabel/obconversion.h	/^      int	          Count;$/;"	m	class:OpenBabel::OBConversion
CountAndRenumberClasses	src/graphsym.cpp	/^  void OBGraphSymPrivate::CountAndRenumberClasses(std::vector<std::pair<OBAtom*,unsigned int> > &vp,$/;"	f	class:OpenBabel::OBGraphSymPrivate
CountBits	src/bitvec.cpp	/^  unsigned OBBitVec::CountBits() const$/;"	f	class:OpenBabel::OBBitVec
CountBondsOfOrder	src/atom.cpp	/^  int OBAtom::CountBondsOfOrder(unsigned int order)$/;"	f	class:OpenBabel::OBAtom
CountFreeOxygens	src/atom.cpp	/^  unsigned int OBAtom::CountFreeOxygens() const$/;"	f	class:OpenBabel::OBAtom
CountFreeSulfurs	src/atom.cpp	/^  unsigned int OBAtom::CountFreeSulfurs() const$/;"	f	class:OpenBabel::OBAtom
CountRingBonds	src/atom.cpp	/^  unsigned int OBAtom::CountRingBonds() const$/;"	f	class:OpenBabel::OBAtom
CountStereoTypes	src/formats/libinchi/ichiread.c	/^int CountStereoTypes( INChI *pInChI, int *num_known_SB, int *num_known_SC,$/;"	f
CountTautomerGroups	src/formats/libinchi/ichitaut.c	/^int CountTautomerGroups( sp_ATOM *at, int num_atoms, T_GROUP_INFO *t_group_info )$/;"	f
CountTautomerGroupsInpAt	src/formats/libinchi/ichitaut.c	/^int CountTautomerGroupsInpAt( inp_ATOM *at, int num_atoms, T_GROUP_INFO *t_group_info )$/;"	f
Cr	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
CreateAtom	src/mol.cpp	/^  OBAtom *OBMol::CreateAtom(void)$/;"	f	class:OpenBabel::OBMol
CreateAtom	src/parsmart.cpp	/^  static int CreateAtom( Pattern *pat, AtomExpr *expr, int part,int vb)$/;"	f	namespace:OpenBabel
CreateBond	src/mol.cpp	/^  OBBond *OBMol::CreateBond(void)$/;"	f	class:OpenBabel::OBMol
CreateBond	src/parsmart.cpp	/^  static int CreateBond( Pattern *pat, BondExpr *expr, int src, int dst )$/;"	f	namespace:OpenBabel
CreateCGroupInBnStruct	src/formats/libinchi/ichi_bns.c	/^int CreateCGroupInBnStruct( inp_ATOM *at, int num_atoms,$/;"	f
CreateCansmiString	src/formats/smilesformat.cpp	/^  void CreateCansmiString(OBMol &mol, char *buffer, OBBitVec &frag_atoms, bool iso, OBConversion* pConv)$/;"	f	namespace:OpenBabel
CreateCheckSymmPaths	src/formats/libinchi/ichimap2.c	/^int CreateCheckSymmPaths( sp_ATOM *at, AT_RANK prev1, AT_RANK cur1, AT_RANK prev2, AT_RANK cur2,$/;"	f
CreateCisTrans	src/formats/smilesformat.cpp	/^  void OBMol2Cansmi::CreateCisTrans(OBMol &mol)$/;"	f	class:OpenBabel::OBMol2Cansmi
CreateCisTrans	src/formats/smilesformat.cpp	/^  void OBSmilesParser::CreateCisTrans(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
CreateCisTrans	src/formats/smileyformat.cpp	/^  void SmileyFormat::CreateCisTrans(OBMol *mol, const std::vector<OpenBabelCallback::UpDown> &upDown)$/;"	f	class:OpenBabel::SmileyFormat
CreateCompAtomData	src/formats/libinchi/inchi_dll_a2.c	/^int CreateCompAtomData( COMP_ATOM_DATA *inp_at_data, int num_atoms, int num_components, int bIntermediateTaut )$/;"	f
CreateCompositeNormAtom	src/formats/libinchi/inchi_dll_a2.c	/^int CreateCompositeNormAtom(COMP_ATOM_DATA *composite_norm_data, INP_ATOM_DATA2 *all_inp_norm_data, int num_components)$/;"	f
CreateCompositeNormAtom	src/formats/libinchi/runichi.c	/^int CreateCompositeNormAtom( COMP_ATOM_DATA *composite_norm_data, INP_ATOM_DATA2 *all_inp_norm_data,$/;"	f
CreateConformerList	src/rotamer.cpp	/^  vector<double*> OBRotamerList::CreateConformerList(OBMol& mol)$/;"	f	class:OpenBabel::OBRotamerList
CreateFragCansmiString	src/formats/smilesformat.cpp	/^  void OBMol2Cansmi::CreateFragCansmiString(OBMol &mol, OBBitVec &frag_atoms, bool isomeric, char *buffer)$/;"	f	class:OpenBabel::OBMol2Cansmi
CreateInchi_Atom	include/inchi/aux2atom.h	/^inchi_Atom *CreateInchi_Atom( int num_atoms )$/;"	f
CreateInchi_Stereo0D	include/inchi/aux2atom.h	/^inchi_Stereo0D *CreateInchi_Stereo0D( int num_stereo0D )$/;"	f
CreateInpAtom	src/formats/libinchi/inchi_dll.c	/^inp_ATOM *CreateInpAtom( int num_atoms )$/;"	f
CreateInpAtomData	src/formats/libinchi/inchi_dll.c	/^int CreateInpAtomData( INP_ATOM_DATA *inp_at_data, int num_atoms, int create_at_fixed_bonds )$/;"	f
CreateNeighList	src/formats/libinchi/ichisort.c	/^NEIGH_LIST *CreateNeighList( int num_atoms, int num_at_tg, sp_ATOM* at,$/;"	f
CreateNeighListFromLinearCT	src/formats/libinchi/ichisort.c	/^NEIGH_LIST *CreateNeighListFromLinearCT( AT_NUMB *LinearCT, int nLenCT, int num_atoms )$/;"	f
CreateNewClassVector	src/graphsym.cpp	/^  void OBGraphSymPrivate::CreateNewClassVector(OBMol *mol, std::vector<std::pair<OBAtom*,unsigned int> > &vp1,$/;"	f	class:OpenBabel::OBGraphSymPrivate
CreateNewClassVector	src/graphsym.cpp	/^  void OBGraphSymPrivate::CreateNewClassVector(std::vector<std::pair<OBAtom*,unsigned int> > &vp1,$/;"	f	class:OpenBabel::OBGraphSymPrivate
CreateNewClassVector	src/mol.cpp	/^  static void CreateNewClassVector(vector<pair<OBAtom*,unsigned int> > &vp1,vector<pair<OBAtom*,unsigned int> > &vp2)$/;"	f	namespace:OpenBabel
CreateOneComponentINChI	src/formats/libinchi/runichi.c	/^int CreateOneComponentINChI( STRUCT_DATA *sd, INPUT_PARMS *ip, INP_ATOM_DATA *inp_cur_data, ORIG_ATOM_DATA *orig_inp_data,$/;"	f
CreateOneStructureINChI	src/formats/libinchi/runichi.c	/^int CreateOneStructureINChI( STRUCT_DATA *sd, INPUT_PARMS *ip, char *szTitle,$/;"	f
CreateResidue	src/mol.cpp	/^  OBResidue *OBMol::CreateResidue(void)$/;"	f	class:OpenBabel::OBMol
CreateTGroupInBnStruct	src/formats/libinchi/ichi_bns.c	/^int CreateTGroupInBnStruct( inp_ATOM *at, int num_atoms,$/;"	f
Create_Atom	include/inchi/aux2atom.h	189;"	d
Create_Atom	include/inchi/aux2atom.h	204;"	d
Create_Atom	include/inchi/aux2atom.h	2363;"	d
Create_INChI	src/formats/libinchi/ichimake.c	/^int  Create_INChI( INChI **ppINChI, INChI_Aux **ppINChI_Aux, ORIG_ATOM_DATA *orig_inp_data, \/* not used *\/$/;"	f
Crystal09Format	src/formats/crystal09format.cpp	/^  Crystal09Format()$/;"	f	class:OpenBabel::Crystal09Format
Crystal09Format	src/formats/crystal09format.cpp	/^class Crystal09Format : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
CrystalScalarsNeeded	src/formats/xml/cmlformat.cpp	/^    int CrystalScalarsNeeded, PropertyScalarsNeeded, TransformsNeeded;$/;"	m	class:OpenBabel::CMLFormat	file:
CrystalVals	src/formats/xml/cmlformat.cpp	/^    vector<double> CrystalVals;$/;"	m	class:OpenBabel::CMLFormat	file:
Cs	include/openbabel/pointgroup.h	/^        C1 = 0, Cs, Ci, \/\/ 0 to 2$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
Cs	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
CtCompareLayersGetFirstDiff	src/formats/libinchi/ichican2.c	/^int CtCompareLayersGetFirstDiff( kLeast *kLeast_rho, int nOneAdditionalLayer,$/;"	f
CtFullCompare	src/formats/libinchi/ichican2.c	/^int CtFullCompare( ConTable *Ct1, ConTable *Ct2, int bOnlyCommon, int bSplitTautCompare )$/;"	f
CtFullCompareLayers	src/formats/libinchi/ichican2.c	/^int CtFullCompareLayers( kLeast *kLeastForLayer )$/;"	f
CtFullCopy	src/formats/libinchi/ichican2.c	/^void CtFullCopy( ConTable *Ct1, ConTable *Ct2 )$/;"	f
CtHash	src/formats/libinchi/ichican2.c	/^typedef U_INT_32       CtHash;$/;"	t	file:
CtPartClear	src/formats/libinchi/ichican2.c	/^void CtPartClear( ConTable *Ct, int k )$/;"	f
CtPartCompare	src/formats/libinchi/ichican2.c	/^int CtPartCompare( ConTable *Ct1, ConTable *Ct2, S_CHAR *cmp,$/;"	f
CtPartCompareLayers	src/formats/libinchi/ichican2.c	/^int CtPartCompareLayers( kLeast *kLeast_rho, int L_rho_fix_prev, int nOneAdditionalLayer )$/;"	f
CtPartCopy	src/formats/libinchi/ichican2.c	/^void CtPartCopy( ConTable *Ct1 \/* to *\/, ConTable *Ct2 \/* from *\/, int k )$/;"	f
CtPartFill	src/formats/libinchi/ichican2.c	/^void CtPartFill( Graph *G, CANON_DATA *pCD, Partition *p,$/;"	f
CtPartInfinity	src/formats/libinchi/ichican2.c	/^void CtPartInfinity( ConTable *Ct, S_CHAR *cmp, int k )$/;"	f
Ctbl	src/formats/libinchi/ichican2.c	/^    AT_RANK  *Ctbl;     \/* connection table *\/$/;"	m	struct:tagCTable	file:
Cu	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
CubeRoot	src/obutil.cpp	/^  double CubeRoot(double X)$/;"	f	namespace:OpenBabel
Cubic	include/openbabel/generic.h	/^                       Cubic};$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
CurTreeAddAtom	src/formats/libinchi/ichimap1.c	/^int CurTreeAddAtom( CUR_TREE *cur_tree, int at_no )$/;"	f
CurTreeAddRank	src/formats/libinchi/ichimap1.c	/^int CurTreeAddRank( CUR_TREE *cur_tree, AT_NUMB rank )$/;"	f
CurTreeAlloc	src/formats/libinchi/ichimap1.c	/^int CurTreeAlloc( CUR_TREE *cur_tree, int num_atoms )$/;"	f
CurTreeFindTheRankPos	src/formats/libinchi/ichimap1.c	/^int CurTreeFindTheRankPos( CUR_TREE *cur_tree, AT_NUMB rank )$/;"	f
CurTreeFree	src/formats/libinchi/ichimap1.c	/^void CurTreeFree( CUR_TREE *cur_tree )$/;"	f
CurTreeGetPos	src/formats/libinchi/ichimap1.c	/^int CurTreeGetPos( CUR_TREE *cur_tree )$/;"	f
CurTreeIsLastAtomEqu	src/formats/libinchi/ichimap1.c	/^int CurTreeIsLastAtomEqu( CUR_TREE *cur_tree, int at_no, AT_NUMB *nSymmStereo )$/;"	f
CurTreeIsLastRank	src/formats/libinchi/ichimap1.c	/^int CurTreeIsLastRank( CUR_TREE *cur_tree, AT_NUMB rank )$/;"	f
CurTreeKeepLastAtomsOnly	src/formats/libinchi/ichimap1.c	/^void CurTreeKeepLastAtomsOnly( CUR_TREE *cur_tree, int tpos, int shift )$/;"	f
CurTreeReAlloc	src/formats/libinchi/ichimap1.c	/^int CurTreeReAlloc( CUR_TREE *cur_tree )$/;"	f
CurTreeRemoveIfLastAtom	src/formats/libinchi/ichimap1.c	/^int CurTreeRemoveIfLastAtom( CUR_TREE *cur_tree, int at_no )$/;"	f
CurTreeRemoveLastAtom	src/formats/libinchi/ichimap1.c	/^int CurTreeRemoveLastAtom( CUR_TREE *cur_tree )$/;"	f
CurTreeRemoveLastRank	src/formats/libinchi/ichimap1.c	/^int CurTreeRemoveLastRank( CUR_TREE *cur_tree )$/;"	f
CurTreeRemoveLastRankIfNoAtoms	src/formats/libinchi/ichimap1.c	/^int CurTreeRemoveLastRankIfNoAtoms( CUR_TREE *cur_tree )$/;"	f
CurTreeReplaceLastRank	src/formats/libinchi/ichimap1.c	/^int CurTreeReplaceLastRank( CUR_TREE *cur_tree, AT_NUMB rank )$/;"	f
CurTreeSetPos	src/formats/libinchi/ichimap1.c	/^int CurTreeSetPos( CUR_TREE *cur_tree, int len )$/;"	f
CurrentAtomID	src/formats/xml/cmlformat.cpp	/^    string CurrentAtomID;$/;"	m	class:OpenBabel::CMLFormat	file:
CurrentDepth	src/obiter.cpp	/^  int OBMolAtomBFSIter::CurrentDepth() const$/;"	f	class:OpenBabel::OBMolAtomBFSIter
CurrentDepth	src/obiter.cpp	/^  int OBMolBondBFSIter::CurrentDepth() const$/;"	f	class:OpenBabel::OBMolBondBFSIter
CurrentID	src/formats/chemdrawcdx.cpp	/^  CDXObjectID CurrentID()const { return ids.back(); }$/;"	f	class:OpenBabel::CDXReader
CustomData0	include/openbabel/base.h	/^      CustomData0 = 16384,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData1	include/openbabel/base.h	/^      CustomData1 = 16385,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData10	include/openbabel/base.h	/^      CustomData10 = 16394,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData11	include/openbabel/base.h	/^      CustomData11 = 16395,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData12	include/openbabel/base.h	/^      CustomData12 = 16396,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData13	include/openbabel/base.h	/^      CustomData13 = 16397,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData14	include/openbabel/base.h	/^      CustomData14 = 16398,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData15	include/openbabel/base.h	/^      CustomData15 = 16399$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData2	include/openbabel/base.h	/^      CustomData2 = 16386,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData3	include/openbabel/base.h	/^      CustomData3 = 16387,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData4	include/openbabel/base.h	/^      CustomData4 = 16388,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData5	include/openbabel/base.h	/^      CustomData5 = 16389,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData6	include/openbabel/base.h	/^      CustomData6 = 16390,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData7	include/openbabel/base.h	/^      CustomData7 = 16391,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData8	include/openbabel/base.h	/^      CustomData8 = 16392,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomData9	include/openbabel/base.h	/^      CustomData9 = 16393,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
CustomWriter	include/openbabel/json/customwriter.h	/^   class JSON_API CustomWriter : public Writer$/;"	c	namespace:Json
CustomWriter	src/formats/json/customwriter.cpp	/^CustomWriter::CustomWriter( std::string opencurly,$/;"	f	class:Json::CustomWriter
D2	include/openbabel/pointgroup.h	/^        D2, D3, D4, D5, D6, D7, D8, \/\/ 10 to 16$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D2d	include/openbabel/pointgroup.h	/^        D2d, D3d, D4d, D5d, D6d, D7d, D8d, \/\/ 31 to 37$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D2h	include/openbabel/pointgroup.h	/^        D2h, D3h, D4h, D5h, D6h, D7h, D8h, \/\/ 38 to 44$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D3	include/openbabel/pointgroup.h	/^        D2, D3, D4, D5, D6, D7, D8, \/\/ 10 to 16$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D3d	include/openbabel/pointgroup.h	/^        D2d, D3d, D4d, D5d, D6d, D7d, D8d, \/\/ 31 to 37$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D3h	include/openbabel/pointgroup.h	/^        D2h, D3h, D4h, D5h, D6h, D7h, D8h, \/\/ 38 to 44$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D4	include/openbabel/pointgroup.h	/^        D2, D3, D4, D5, D6, D7, D8, \/\/ 10 to 16$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D4d	include/openbabel/pointgroup.h	/^        D2d, D3d, D4d, D5d, D6d, D7d, D8d, \/\/ 31 to 37$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D4h	include/openbabel/pointgroup.h	/^        D2h, D3h, D4h, D5h, D6h, D7h, D8h, \/\/ 38 to 44$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D5	include/openbabel/pointgroup.h	/^        D2, D3, D4, D5, D6, D7, D8, \/\/ 10 to 16$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D5d	include/openbabel/pointgroup.h	/^        D2d, D3d, D4d, D5d, D6d, D7d, D8d, \/\/ 31 to 37$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D5h	include/openbabel/pointgroup.h	/^        D2h, D3h, D4h, D5h, D6h, D7h, D8h, \/\/ 38 to 44$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D6	include/openbabel/pointgroup.h	/^        D2, D3, D4, D5, D6, D7, D8, \/\/ 10 to 16$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D6d	include/openbabel/pointgroup.h	/^        D2d, D3d, D4d, D5d, D6d, D7d, D8d, \/\/ 31 to 37$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D6h	include/openbabel/pointgroup.h	/^        D2h, D3h, D4h, D5h, D6h, D7h, D8h, \/\/ 38 to 44$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D7	include/openbabel/pointgroup.h	/^        D2, D3, D4, D5, D6, D7, D8, \/\/ 10 to 16$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D7d	include/openbabel/pointgroup.h	/^        D2d, D3d, D4d, D5d, D6d, D7d, D8d, \/\/ 31 to 37$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D7h	include/openbabel/pointgroup.h	/^        D2h, D3h, D4h, D5h, D6h, D7h, D8h, \/\/ 38 to 44$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D8	include/openbabel/pointgroup.h	/^        D2, D3, D4, D5, D6, D7, D8, \/\/ 10 to 16$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D8d	include/openbabel/pointgroup.h	/^        D2d, D3d, D4d, D5d, D6d, D7d, D8d, \/\/ 31 to 37$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
D8h	include/openbabel/pointgroup.h	/^        D2h, D3h, D4h, D5h, D6h, D7h, D8h, \/\/ 38 to 44$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
DALTONInputFormat	src/formats/daltonformat.cpp	/^    DALTONInputFormat()$/;"	f	class:OpenBabel::DALTONInputFormat
DALTONInputFormat	src/formats/daltonformat.cpp	/^  class DALTONInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
DALTONOutputFormat	src/formats/daltonformat.cpp	/^    DALTONOutputFormat()$/;"	f	class:OpenBabel::DALTONOutputFormat
DALTONOutputFormat	src/formats/daltonformat.cpp	/^  class DALTONOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
DATADIR	src/obconversion.cpp	29;"	d	file:
DEBUG	src/canon.cpp	37;"	d	file:
DEBUG	src/formats/smiley.h	39;"	d
DEBUG	src/isomorphism.cpp	7;"	d	file:
DEBUG	src/kekulize.cpp	21;"	d	file:
DEBUG	src/stereo/perception.cpp	41;"	d	file:
DEBUG_INVERSIONS	src/stereo/perception.cpp	42;"	d	file:
DEBUG_MEMORY	include/libxml/xmlmemory.h	31;"	d
DECIMAL_BASE	src/formats/libinchi/ichiprt2.c	1568;"	d	file:
DECIMAL_BASE	src/formats/libinchi/ichiprt2.c	1607;"	d	file:
DECIMAL_MINUS	src/formats/libinchi/ichiprt2.c	1569;"	d	file:
DECIMAL_MINUS	src/formats/libinchi/ichiprt2.c	1608;"	d	file:
DECIMAL_ONE	src/formats/libinchi/ichiprt2.c	1571;"	d	file:
DECIMAL_ONE	src/formats/libinchi/ichiprt2.c	1610;"	d	file:
DECIMAL_ZERO	src/formats/libinchi/ichiprt2.c	1572;"	d	file:
DECIMAL_ZERO	src/formats/libinchi/ichiprt2.c	1611;"	d	file:
DECIMAL_ZERO_VAL	src/formats/libinchi/ichiprt2.c	1570;"	d	file:
DECIMAL_ZERO_VAL	src/formats/libinchi/ichiprt2.c	1609;"	d	file:
DEFAULTBONDLENGTH	src/mcdlutil.cpp	172;"	d	file:
DEFAULTFORMAT	include/openbabel/format.h	40;"	d
DEG_TO_RAD	include/openbabel/math/matrix3x3.h	34;"	d
DEG_TO_RAD	include/openbabel/math/vector3.h	35;"	d
DELTA_ANGLE_FOR_OVERLAPPING_BONDS	src/stereo/perception.cpp	44;"	d	file:
DEPICTION2D	include/openbabel/format.h	39;"	d
DERIV_AMINE_tN	src/formats/libinchi/ichinorm.c	1047;"	d	file:
DERIV_AT	src/formats/libinchi/ichinorm.c	/^} DERIV_AT;$/;"	t	typeref:struct:tagDerivAttachment	file:
DERIV_AT_LEN	src/formats/libinchi/ichinorm.c	1037;"	d	file:
DERIV_BRIDGE_NH	src/formats/libinchi/ichinorm.c	1046;"	d	file:
DERIV_BRIDGE_O	src/formats/libinchi/ichinorm.c	1045;"	d	file:
DERIV_DUPLIC	src/formats/libinchi/ichinorm.c	1053;"	d	file:
DERIV_NOT	src/formats/libinchi/ichinorm.c	1051;"	d	file:
DERIV_RING	src/formats/libinchi/ichinorm.c	1055;"	d	file:
DERIV_RING_NH	src/formats/libinchi/ichinorm.c	1049;"	d	file:
DERIV_RING_O	src/formats/libinchi/ichinorm.c	1048;"	d	file:
DERIV_UNMARK	src/formats/libinchi/ichinorm.c	1050;"	d	file:
DEUTERIUM_ATOM	src/mcdlutil.cpp	147;"	d	file:
DFS_FindTautAltPath	src/formats/libinchi/ichiqueu.c	/^int DFS_FindTautAltPath( inp_ATOM *atom, int nStartAtom, int nStartAtomNeighbor,$/;"	f
DFS_FindTautInARing	src/formats/libinchi/ichiqueu.c	/^int DFS_FindTautInARing( inp_ATOM *atom, int nStartAtom, int nStartAtomNeighbor,$/;"	f
DFS_PATH	include/inchi/ichitaut.h	/^} DFS_PATH;$/;"	t	typeref:struct:tagDfsPath
DFT_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* DFT_CALCULATION_PATTERN = "DFT Module";$/;"	m	namespace:OpenBabel	file:
DFT_ENERGY_PATTERN	src/formats/nwchemformat.cpp	/^static const char* DFT_ENERGY_PATTERN = "DFT energy =";$/;"	m	namespace:OpenBabel	file:
DIFL_F	include/inchi/strutil.h	/^    DIFL_F,  \/* 2 fixed-H *\/$/;"	e	enum:tagDiffINChILayers
DIFL_FI	include/inchi/strutil.h	/^    DIFL_FI, \/* 3 fixed-H isotopic *\/$/;"	e	enum:tagDiffINChILayers
DIFL_LENGTH	include/inchi/strutil.h	/^    DIFL_LENGTH \/* number of layers *\/$/;"	e	enum:tagDiffINChILayers
DIFL_M	include/inchi/strutil.h	/^    DIFL_M,  \/* 0 main layer *\/$/;"	e	enum:tagDiffINChILayers
DIFL_MI	include/inchi/strutil.h	/^    DIFL_MI, \/* 1 main isotopic *\/$/;"	e	enum:tagDiffINChILayers
DIFS_LENGTH	include/inchi/strutil.h	/^    DIFS_LENGTH = DIFS_idf_LENGTH \/* length of the array *\/$/;"	e	enum:tagDiffINChISegments
DIFS_b_SBONDS	include/inchi/strutil.h	/^    DIFS_b_SBONDS,   \/*  5 r: stereobonds: fixed-H <-> mobile-H * isotopic <-> non-isotopic *\/$/;"	e	enum:tagDiffINChISegments
DIFS_c_CONNECT	include/inchi/strutil.h	/^    DIFS_c_CONNECT,  \/*  1 n; connection table; mobile-H only *\/$/;"	e	enum:tagDiffINChISegments
DIFS_f_FORMULA	include/inchi/strutil.h	/^    DIFS_f_FORMULA,  \/*  0 r; fixed-H <-> mobile-H *\/$/;"	e	enum:tagDiffINChISegments
DIFS_h_H_ATOMS	include/inchi/strutil.h	/^    DIFS_h_H_ATOMS,  \/*  2 n; hydrogen atoms: mobile-H and Fixed-H; have different meanings *\/$/;"	e	enum:tagDiffINChISegments
DIFS_i_IATOMS	include/inchi/strutil.h	/^    DIFS_i_IATOMS,   \/*  9 r: isotopic atoms: fixed-H <-> mobile-H * isotopic <-> non-isotopic *\/$/;"	e	enum:tagDiffINChISegments
DIFS_idf_LENGTH	include/inchi/strutil.h	/^    DIFS_idf_LENGTH, \/* 11    length of the array relevant to the INChI Identifier *\/$/;"	e	enum:tagDiffINChISegments
DIFS_m_SP3INV	include/inchi/strutil.h	/^    DIFS_m_SP3INV,   \/*  7 r: stereo-abs-inv: fixed-H <-> mobile-H * isotopic <-> non-isotopic *\/$/;"	e	enum:tagDiffINChISegments
DIFS_o_TRANSP	include/inchi/strutil.h	/^    DIFS_o_TRANSP,   \/* 10 n: Fixed-H transposition *\/$/;"	e	enum:tagDiffINChISegments
DIFS_p_PROTONS	include/inchi/strutil.h	/^    DIFS_p_PROTONS,  \/*  4 n; protons; mobile-H only *\/$/;"	e	enum:tagDiffINChISegments
DIFS_q_CHARGE	include/inchi/strutil.h	/^    DIFS_q_CHARGE,   \/*  3 r; charge; fixed-H <-> mobile-H *\/$/;"	e	enum:tagDiffINChISegments
DIFS_s_STYPE	include/inchi/strutil.h	/^    DIFS_s_STYPE,    \/*  8 r: stereo-type: fixed-H <-> mobile-H * isotopic <-> non-isotopic *\/$/;"	e	enum:tagDiffINChISegments
DIFS_t_SATOMS	include/inchi/strutil.h	/^    DIFS_t_SATOMS,   \/*  6 r: stereoatoms: fixed-H <-> mobile-H * isotopic <-> non-isotopic *\/$/;"	e	enum:tagDiffINChISegments
DIFV_BOTH_EMPTY	include/inchi/strutil.h	/^    DIFV_BOTH_EMPTY = 0, \/* both this and the component in the preceding namesake segment are empty  *\/$/;"	e	enum:tagMarkDiff
DIFV_EQL2PRECED	include/inchi/strutil.h	/^    DIFV_EQL2PRECED = 1, \/* equal to the component in the preceding namesake segment                 *\/$/;"	e	enum:tagMarkDiff
DIFV_FI_EQ_MI	include/inchi/strutil.h	/^    DIFV_FI_EQ_MI   = 8, \/* FI stereo component is equal to the component in the MI namesake segment *\/$/;"	e	enum:tagMarkDiff
DIFV_IS_EMPTY	include/inchi/strutil.h	/^    DIFV_IS_EMPTY   = 4, \/* is empty while the preceding namesake segment is not empty               *\/$/;"	e	enum:tagMarkDiff
DIFV_NEQ2PRECED	include/inchi/strutil.h	/^    DIFV_NEQ2PRECED = 2, \/* different from the component in the preceding namesake segment           *\/$/;"	e	enum:tagMarkDiff
DIFV_OUTPUT_EMPTY_F	include/inchi/strutil.h	/^    DIFV_OUTPUT_EMPTY_F = (DIFV_EQL2PRECED | DIFV_NEQ2PRECED | DIFV_FI_EQ_MI), \/* bits NOT present *\/$/;"	e	enum:tagMarkDiff
DIFV_OUTPUT_EMPTY_T	include/inchi/strutil.h	/^    DIFV_OUTPUT_EMPTY_T = (DIFV_IS_EMPTY), \/* bits present for empty segment output *\/$/;"	e	enum:tagMarkDiff
DIFV_OUTPUT_FILL_T	include/inchi/strutil.h	/^    DIFV_OUTPUT_FILL_T  = (DIFV_EQL2PRECED | DIFV_NEQ2PRECED | DIFV_FI_EQ_MI)$/;"	e	enum:tagMarkDiff
DIFV_OUTPUT_OMIT_F	include/inchi/strutil.h	/^    DIFV_OUTPUT_OMIT_F  = (DIFV_NEQ2PRECED | DIFV_IS_EMPTY), \/* bits NOT present for omitting *\/$/;"	e	enum:tagMarkDiff
DIF_LAYERS	include/inchi/strutil.h	/^} DIF_LAYERS;$/;"	t	typeref:enum:tagDiffINChILayers
DIF_SEGMENTS	include/inchi/strutil.h	/^} DIF_SEGMENTS;$/;"	t	typeref:enum:tagDiffINChISegments
DIF_VALUES	include/inchi/strutil.h	/^} DIF_VALUES;$/;"	t	typeref:enum:tagMarkDiff
DIGITAL_UNIX_COMPATIBLE	src/snprintf.c	309;"	d	file:
DIGITS	src/formats/nwchemformat.cpp	/^static const char* DIGITS = "1234567890";$/;"	m	namespace:OpenBabel	file:
DIMENSION	src/pointgroup.cpp	36;"	d	file:
DISABLE_CANDIDATE	src/formats/libinchi/ichitaut.c	2077;"	d	file:
DISCONNECT_METALS	include/inchi/mode.h	421;"	d
DISCONNECT_SALTS	include/inchi/mode.h	394;"	d
DISPLAY_DEBUG_DATA	include/inchi/mode.h	270;"	d
DISPLAY_DEBUG_DATA_C_POINT	include/inchi/mode.h	262;"	d
DISPLAY_DEBUG_DATA_C_POINT	include/inchi/mode.h	265;"	d
DISPLAY_ORIG_AT_NUMBERS	include/inchi/mode.h	263;"	d
DISPLAY_ORIG_AT_NUMBERS	include/inchi/mode.h	266;"	d
DISPLAY_RING_SYSTEMS	include/inchi/mode.h	557;"	d
DISPLAY_RING_SYSTEMS	include/inchi/mode.h	594;"	d
DISPLAY_RING_SYSTEMS	include/inchi/mode.h	595;"	d
DIST12_TOL	src/distgeom.cpp	34;"	d	file:
DIST13_TOL	src/distgeom.cpp	35;"	d	file:
DIST14_TOL	src/distgeom.cpp	36;"	d	file:
DIST15_TOL	src/distgeom.cpp	37;"	d	file:
DLHandler	include/openbabel/dlhandler.h	/^class OBERROR DLHandler$/;"	c
DMolFormat	src/formats/dmolformat.cpp	/^    DMolFormat()$/;"	f	class:OpenBabel::DMolFormat
DMolFormat	src/formats/dmolformat.cpp	/^  class DMolFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
DNAPairResidues	src/formats/fastaformat.cpp	/^  ResidueRecord DNAPairResidues[IUPAC_DNA_max] =$/;"	m	namespace:OpenBabel	file:
DNAResidues	src/formats/fastaformat.cpp	/^  ResidueRecord DNAResidues[IUPAC_DNA_max] =$/;"	m	namespace:OpenBabel	file:
DNASequence	src/formats/fastaformat.cpp	/^        DNASequence,$/;"	e	enum:OpenBabel::FASTAFormat::SequenceType	file:
DNASequence	src/formats/genbankformat.cpp	/^      DNASequence,$/;"	e	enum:OpenBabel::GenBankFormat::SequenceType	file:
DNA_helix	src/formats/fastaformat.cpp	/^  HelixParameters DNA_helix = { 3.37998, 2*M_PI\/10.0, 8 }; \/\/ HTER-OXT-.P-O5'-C5'-C4'-C3'-O3'-.P-O5'-C5'-C4'-C3'-O3'-.HCAP$/;"	m	namespace:OpenBabel	file:
DNA_pair_helix	src/formats/fastaformat.cpp	/^  HelixParameters DNA_pair_helix = { -3.37998, -2*M_PI\/10.0, 8 }; \/\/ Simply the negative of the above$/;"	m	namespace:OpenBabel	file:
DOD	include/openbabel/residue.h	/^      DOD   = 47,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
DONOR_PAIR	src/formats/libinchi/ichitaut.c	2080;"	d	file:
DOSData	include/openbabel/base.h	/^      DOSData =           28,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
DOUBLE	src/kekulize.cpp	45;"	d	file:
DOUBLE_ALLOWED	src/kekulize.cpp	49;"	d	file:
DOUBLE_ASSIGNED	src/kekulize.cpp	48;"	d	file:
DOUBLE_BOND_NEIGH_LIST	include/inchi/mode.h	686;"	d
DOUBLE_BOND_NEIGH_LIST	include/inchi/mode.h	778;"	d
DOUBLE_BOND_NEIGH_LIST	include/inchi/mode.h	779;"	d
DOUBLE_PROHIBITED	src/kekulize.cpp	50;"	d	file:
DRAWDATA	src/formats/libinchi/runichi.c	/^void (*DRAWDATA) ( struct DrawData * pDrawData) = NULL;$/;"	v
DRAWDATA_EXISTS	src/formats/libinchi/runichi.c	/^int (*DRAWDATA_EXISTS) ( int nComponent, int nType, int bReconnected ) = NULL;$/;"	v
DRAW_AROM_TAUT	include/inchi/mode.h	787;"	d
DRAW_PARMS	include/inchi/ichidrp.h	/^} DRAW_PARMS; \/* Settings: How to draw the structure *\/$/;"	t	typeref:struct:tagDrawParms
Dalton	src/formats/daltonformat.cpp	/^namespace Dalton$/;"	n	file:
DataOrigin	include/openbabel/base.h	/^  enum DataOrigin {$/;"	g	namespace:OpenBabel
DataSize	include/openbabel/base.h	/^      size_t                      DataSize() const$/;"	f	class:OpenBabel::OBBase
Db	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
DeAllocBCN	src/formats/libinchi/ichican2.c	/^void DeAllocBCN( BCN *pBCN )$/;"	f
DeAllocateBnData	src/formats/libinchi/ichi_bns.c	/^BN_DATA *DeAllocateBnData( BN_DATA *pBD )$/;"	f
DeAllocateBnStruct	src/formats/libinchi/ichi_bns.c	/^BN_STRUCT* DeAllocateBnStruct( BN_STRUCT *pBNS )$/;"	f
DeAllocateCS	src/formats/libinchi/ichicano.c	/^int DeAllocateCS( CANON_STAT *pCS )$/;"	f
DeAllocateForNonStereoRemoval	src/formats/libinchi/ichimap2.c	/^void DeAllocateForNonStereoRemoval( AT_RANK **nAtomNumberCanon1, AT_RANK **nAtomNumberCanon2,$/;"	f
DecrementImplicitValence	include/openbabel/atom.h	/^      void DecrementImplicitValence()     { _impval--; }$/;"	f	class:OpenBabel::OBAtom
DecrementMod	include/openbabel/mol.h	/^    void DecrementMod()    {      _mod--;          }$/;"	f	class:OpenBabel::OBMol
DefaultStrategy	src/zipstream.h	/^    DefaultStrategy = 0$/;"	e	enum:zlib_stream::EStrategy
DeferMolOutput	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::DeferMolOutput(OBMol* pmol, OBConversion* pConv, OBFormat* pF )$/;"	f	class:OpenBabel::OBMoleculeFormat
DeferredFormat	src/ops/deferred.h	/^  DeferredFormat(OBConversion* pConv, OBOp* pOp=NULL, bool CallDo=false)$/;"	f	class:OpenBabel::DeferredFormat
DeferredFormat	src/ops/deferred.h	/^class DeferredFormat : public OBFormat$/;"	c	namespace:OpenBabel
DefineMonomer	src/chains.cpp	/^  void OBChainsParser::DefineMonomer(void **tree, int resid, const char *smiles)$/;"	f	class:OpenBabel::OBChainsParser
DeleteAtom	src/mol.cpp	/^  bool OBMol::DeleteAtom(OBAtom *atom, bool destroyAtom)$/;"	f	class:OpenBabel::OBMol
DeleteBond	src/atom.cpp	/^  bool OBAtom::DeleteBond(OBBond *bond)$/;"	f	class:OpenBabel::OBAtom
DeleteBond	src/mol.cpp	/^  bool OBMol::DeleteBond(OBBond *bond, bool destroyBond)$/;"	f	class:OpenBabel::OBMol
DeleteByteCode	src/chains.cpp	/^  static void DeleteByteCode(ByteCode *node)$/;"	f	namespace:OpenBabel
DeleteConformer	src/mol.cpp	/^  void OBMol::DeleteConformer(int idx)$/;"	f	class:OpenBabel::OBMol
DeleteConstraint	src/forcefield.cpp	/^  void OBFFConstraints::DeleteConstraint(int index)$/;"	f	class:OpenBabel::OBFFConstraints
DeleteData	include/openbabel/generic.h	/^    void DeleteData(OBGenericData *gd)$/;"	f	class:OpenBabel::OBSetData
DeleteData	src/base.cpp	/^  bool OBBase::DeleteData(const string& s)$/;"	f	class:OpenBabel::OBBase
DeleteData	src/base.cpp	/^  void OBBase::DeleteData(OBGenericData *gd)$/;"	f	class:OpenBabel::OBBase
DeleteData	src/base.cpp	/^  void OBBase::DeleteData(unsigned int dt)$/;"	f	class:OpenBabel::OBBase
DeleteData	src/base.cpp	/^  void OBBase::DeleteData(vector<OBGenericData*> &vg)$/;"	f	class:OpenBabel::OBBase
DeleteDeferredMols	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::DeleteDeferredMols()$/;"	f	class:OpenBabel::OBMoleculeFormat
DeleteExpandedAtoms	src/alias.cpp	/^void AliasData::DeleteExpandedAtoms(OBMol& mol)$/;"	f	class:OpenBabel::AliasData
DeleteHydrogen	src/mol.cpp	/^  bool OBMol::DeleteHydrogen(OBAtom *atom)$/;"	f	class:OpenBabel::OBMol
DeleteHydrogens	src/formats/pdbqtformat.cpp	/^  bool DeleteHydrogens(OBMol & mol)$/;"	f	namespace:OpenBabel
DeleteHydrogens	src/mol.cpp	/^  bool OBMol::DeleteHydrogens()$/;"	f	class:OpenBabel::OBMol
DeleteHydrogens	src/mol.cpp	/^  bool OBMol::DeleteHydrogens(OBAtom *atom)$/;"	f	class:OpenBabel::OBMol
DeleteNonPolarHydrogens	src/mol.cpp	/^  bool OBMol::DeleteNonPolarHydrogens()$/;"	f	class:OpenBabel::OBMol
DeleteObject	include/openbabel/tokenst.h	/^  struct DeleteObject$/;"	s	namespace:OpenBabel
DeletePolarHydrogens	src/mol.cpp	/^  bool OBMol::DeletePolarHydrogens()$/;"	f	class:OpenBabel::OBMol
DeleteProperties	src/descriptor.cpp	/^void OBDescriptor::DeleteProperties(OBBase* pOb, const string& DescrList)$/;"	f	class:OpenBabel::OBDescriptor
DeleteResidue	include/openbabel/atom.h	/^      void DeleteResidue(){$/;"	f	class:OpenBabel::OBAtom
DeleteResidue	src/mol.cpp	/^  bool OBMol::DeleteResidue(OBResidue *residue, bool destroyResidue)$/;"	f	class:OpenBabel::OBMol
DeleteStereoOnAtom	src/mol.cpp	/^  const void DeleteStereoOnAtom(OBMol& mol, OBStereo::Ref atomId)$/;"	f	namespace:OpenBabel
DensityData	include/openbabel/base.h	/^      DensityData =       18,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Desc	include/openbabel/data.h	/^    std::string Desc()    { return _desc; }$/;"	f	class:OpenBabel::OBAtomHOF
DescribeAsString	src/math/transform3d.cpp	/^  string transform3d::DescribeAsString() const$/;"	f	class:OpenBabel::transform3d
DescribeAsValues	src/math/transform3d.cpp	/^  string transform3d::DescribeAsValues() const$/;"	f	class:OpenBabel::transform3d
DescribeBits	include/openbabel/fingerprint.h	/^  virtual std::string DescribeBits(const std::vector<unsigned int> \/* fp *\/,$/;"	f	class:OpenBabel::OBFingerprint
DescribeBits	src/fingerprints/finger2.cpp	/^virtual std::string DescribeBits(const std::  vector<unsigned int> fp, bool bSet=true)$/;"	f	class:OpenBabel::fingerprint2
DescribeBits	src/fingerprints/finger3.cpp	/^  virtual string DescribeBits(const vector<unsigned int> fp, bool bSet=true)$/;"	f	class:OpenBabel::PatternFP
DescribeBits	src/fingerprints/fingerecfp.cpp	/^  virtual std::string DescribeBits(const std::  vector<unsigned int> fp, bool bSet=true)$/;"	f	class:OpenBabel::fingerprintECFP
Description	include/openbabel/inchiformat.h	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::InChICompareFormat
Description	include/openbabel/inchiformat.h	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::InChIKeyFormat
Description	include/openbabel/inchiformat.h	/^  virtual const char* Description()$/;"	f	class:OpenBabel::InChIFormat
Description	include/openbabel/plugin.h	/^  virtual const char* Description() { return NULL;} ;$/;"	f	class:OpenBabel::OBPlugin
Description	src/alias.cpp	/^  const char* Description(){ return "Generate aliases as an alternative representation."; }$/;"	f	class:OpenBabel::OpGenAlias
Description	src/charges/eem.cpp	/^  const char *EEMCharges::Description(void)$/;"	f	class:OpenBabel::EEMCharges
Description	src/charges/eqeq.h	/^  const char* Description(){ return "Assign EQEq (charge equilibration) partial charges."; }$/;"	f	class:OpenBabel::EQEqCharges
Description	src/charges/fromfile.cpp	/^			const char* Description(){ return "Assign charges from file containing {'atom-name', charge} pairs"; }$/;"	f	class:OpenBabel::FromFileCharges
Description	src/charges/gasteiger.cpp	/^  const char* Description(){ return "Assign Gasteiger-Marsili sigma partial charges"; }$/;"	f	class:OpenBabel::GasteigerCharges
Description	src/charges/mmff94.cpp	/^  const char* Description(){ return "   Assign MMFF94 partial charges"; }$/;"	f	class:OpenBabel::MMFF94Charges
Description	src/charges/none.cpp	/^  const char* Description(){ return "Clear all partial charges"; }$/;"	f	class:OpenBabel::NoCharges
Description	src/charges/qeq.h	/^  const char* Description(){ return "Assign QEq (charge equilibration) partial charges (Rappe and Goddard, 1991)"; }$/;"	f	class:OpenBabel::QEqCharges
Description	src/charges/qtpie.h	/^  const char* Description(){ return "Assign QTPIE (charge transfer, polarization and equilibration) partial charges (Chen and Martinez, 2007)"; }$/;"	f	class:OpenBabel::QTPIECharges
Description	src/descriptors/cansmidescriptor.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::CanSmiles
Description	src/descriptors/cmpdfilter.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::CompoundFilter
Description	src/descriptors/filters.cpp	/^  virtual const char* Description(){return "Chemical formula";};$/;"	f	class:OpenBabel::FormulaDescriptor
Description	src/descriptors/filters.cpp	/^  virtual const char* Description(){return "For comparing a molecule's title";};$/;"	f	class:OpenBabel::TitleFilter
Description	src/descriptors/filters.cpp	/^  virtual const char* Description(){return "Molecular Weight filter";};$/;"	f	class:OpenBabel::MWFilter
Description	src/descriptors/filters.cpp	/^  virtual const char* Description(){return "SMARTS filter";};$/;"	f	class:OpenBabel::SmartsFilter
Description	src/descriptors/groupcontrib.cpp	/^  const char* OBGroupContrib::Description()$/;"	f	class:OpenBabel::OBGroupContrib
Description	src/descriptors/inchidescriptor.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::InChIFilter
Description	src/descriptors/smartsdescriptors.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::SmartsDescriptor
Description	src/fingerprints/finger2.cpp	/^	virtual const char* Description()$/;"	f	class:OpenBabel::fingerprint2
Description	src/fingerprints/finger3.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::PatternFP
Description	src/fingerprints/fingerecfp.cpp	/^	virtual const char* Description()$/;"	f	class:OpenBabel::fingerprintECFP
Description	src/forcefields/forcefieldgaff.h	/^      const char* Description()$/;"	f	class:OpenBabel::OBForceFieldGaff
Description	src/forcefields/forcefieldghemical.h	/^      const char* Description()$/;"	f	class:OpenBabel::OBForceFieldGhemical
Description	src/forcefields/forcefieldmm2.h	/^      virtual const char* Description()$/;"	f	class:OpenBabel::OBForceFieldMM2
Description	src/forcefields/forcefieldmmff94.h	/^      const char* Description()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
Description	src/forcefields/forcefielduff.h	/^    const char* Description()$/;"	f	class:OpenBabel::OBForceFieldUFF
Description	src/formats/APIInterface.cpp	/^	const char* Description(){$/;"	f	class:OpenBabel::OBAPIInterface
Description	src/formats/CSRformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CSRFormat
Description	src/formats/MCDLformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MCDLFormat
Description	src/formats/MNAformat.cpp	/^			virtual const char* Description()$/;"	f	class:OpenBabel::MNAFormat
Description	src/formats/PQSformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PQSFormat
Description	src/formats/abinitformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ABINITFormat
Description	src/formats/acesformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::AcesInputFormat
Description	src/formats/acesformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::AcesOutputFormat
Description	src/formats/acrformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ACRFormat
Description	src/formats/adfformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ADFInputFormat
Description	src/formats/adfformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ADFOutputFormat
Description	src/formats/adfformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OBT41Format
Description	src/formats/alchemyformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::AlchemyFormat
Description	src/formats/amberformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::AmberPrepFormat
Description	src/formats/aoforceformat.cpp	/^    virtual const char* Description() {  \/\/ required$/;"	f	class:OpenBabel::AoforceFormat
Description	src/formats/asciiformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ASCIIFormat
Description	src/formats/balstformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::BallStickFormat
Description	src/formats/bgfformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::BGFFormat
Description	src/formats/boxformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::BoxFormat
Description	src/formats/cacaoformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CacaoFormat
Description	src/formats/cacaoformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CacaoInternalFormat
Description	src/formats/cacheformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CacheFormat
Description	src/formats/carformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CARFormat
Description	src/formats/castepformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::CASTEPFormat
Description	src/formats/cccformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CCCFormat
Description	src/formats/chem3dformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CHEM3D1Format
Description	src/formats/chem3dformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CHEM3D2Format
Description	src/formats/chemdrawcdx.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
Description	src/formats/chemdrawct.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ChemDrawFormat
Description	src/formats/chemkinformat.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::ChemKinFormat
Description	src/formats/chemtoolformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CHTFormat
Description	src/formats/cifformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CIFFormat
Description	src/formats/confabreport.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ConfabReport
Description	src/formats/copyformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CopyFormat
Description	src/formats/crkformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CRK2DFormat
Description	src/formats/crkformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CRK3DFormat
Description	src/formats/crystal09format.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::Crystal09Format
Description	src/formats/cssrformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::CSSRFormat
Description	src/formats/daltonformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::DALTONInputFormat
Description	src/formats/daltonformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::DALTONOutputFormat
Description	src/formats/dlpolyformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::DlpolyConfigFormat
Description	src/formats/dlpolyformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::DlpolyHISTORYFormat
Description	src/formats/dmolformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::DMolFormat
Description	src/formats/exampleformat.cpp	/^	virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::XXXFormat
Description	src/formats/exyzformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::EXYZFormat
Description	src/formats/fastaformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FASTAFormat
Description	src/formats/fastsearchformat.cpp	/^virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FastSearchFormat
Description	src/formats/fchkformat.cpp	/^    virtual const char * Description()$/;"	f	class:OpenBabel::FCHKFormat
Description	src/formats/featformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FEATFormat
Description	src/formats/fhformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FenskeZmatFormat
Description	src/formats/fhiaimsformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FHIaimsFormat
Description	src/formats/fingerprintformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FingerprintFormat
Description	src/formats/fpsformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FPSFormat
Description	src/formats/freefracformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FreeFormFractionalFormat
Description	src/formats/gamessformat.cpp	/^      virtual const char* Description() {$/;"	f	class:OpenBabel::GAMESSInputFormat
Description	src/formats/gamessformat.cpp	/^      virtual const char* Description() {$/;"	f	class:OpenBabel::GAMESSOutputFormat
Description	src/formats/gamessukformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GAMESSUKInputFormat
Description	src/formats/gamessukformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
Description	src/formats/gausscubeformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OBGaussianCubeFormat
Description	src/formats/gaussformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GaussianInputFormat
Description	src/formats/gaussformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GaussianOutputFormat
Description	src/formats/gausszmatformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GaussianZMatrixInputFormat
Description	src/formats/genbankformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GenBankFormat
Description	src/formats/ghemicalformat.cpp	/^      virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GhemicalFormat
Description	src/formats/groformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GROFormat
Description	src/formats/gromos96format.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::GROMOS96Format
Description	src/formats/gulpformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::GULPFormat
Description	src/formats/hinformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::HINFormat
Description	src/formats/jaguarformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::JaguarInputFormat
Description	src/formats/jaguarformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::JaguarOutputFormat
Description	src/formats/json/chemdoodlejsonformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::ChemDoodleJSONFormat
Description	src/formats/json/pubchemjsonformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::PubChemJSONFormat
Description	src/formats/lmpdatformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::LMPDATFormat
Description	src/formats/lpmdformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::LpmdFormat
Description	src/formats/mdffformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::MDFFFormat
Description	src/formats/mdlformat.cpp	/^      virtual const char* Description()$/;"	f	class:OpenBabel::MDLFormat
Description	src/formats/mmcifformat.cpp	/^   virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::mmCIFFormat
Description	src/formats/mmodformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MacroModFormat
Description	src/formats/mol2format.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MOL2Format
Description	src/formats/moldenformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OBMoldenFormat
Description	src/formats/molproformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MolproInputFormat
Description	src/formats/molproformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MolproOutputFormat
Description	src/formats/molreport.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MolReportFormat
Description	src/formats/mopacformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MOPACCARTFormat
Description	src/formats/mopacformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MOPACFormat
Description	src/formats/mopacformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MOPACINTFormat
Description	src/formats/mpdformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MPDFormat
Description	src/formats/mpqcformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MPQCFormat
Description	src/formats/mpqcformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MPQCInputFormat
Description	src/formats/msiformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::MSIFormat
Description	src/formats/msmsformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OBMSMSFormat
Description	src/formats/nulformat.cpp	/^  virtual const char* Description() { return "Outputs nothing"; };$/;"	f	class:OpenBabel::NulFormat
Description	src/formats/nwchemformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::NWChemInputFormat
Description	src/formats/nwchemformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::NWChemOutputFormat
Description	src/formats/opendxformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
Description	src/formats/orcaformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OrcaInputFormat
Description	src/formats/orcaformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OrcaOutputFormat
Description	src/formats/outformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::OutputFormat
Description	src/formats/painterformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PainterFormat
Description	src/formats/pcmodelformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PCModelFormat
Description	src/formats/pdbformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PDBFormat
Description	src/formats/pdbqtformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PDBQTFormat
Description	src/formats/png2format.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PNG2Format
Description	src/formats/pngformat.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::PNGFormat
Description	src/formats/pointcloudformat.cpp	/^      virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PointCloudFormat
Description	src/formats/posformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::POSFormat
Description	src/formats/povrayformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PovrayFormat
Description	src/formats/pqrformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::PQRFormat
Description	src/formats/pwscfformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::PWscfFormat
Description	src/formats/qchemformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::QChemInputFormat
Description	src/formats/qchemformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::QChemOutputFormat
Description	src/formats/reportformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ReportFormat
Description	src/formats/rsmiformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::SmiReactFormat
Description	src/formats/rxnformat.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::RXNFormat
Description	src/formats/shelxformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ShelXFormat
Description	src/formats/siestaformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::SIESTAFormat
Description	src/formats/smilesformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::FIXFormat
Description	src/formats/smilesformat.cpp	/^    virtual const char* Description() {$/;"	f	class:OpenBabel::CANSMIFormat
Description	src/formats/smilesformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::SMIFormat
Description	src/formats/smileyformat.cpp	/^      virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::SmileyFormat
Description	src/formats/stlformat.cpp	/^      virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::STLFormat
Description	src/formats/svgformat.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::SVGFormat
Description	src/formats/textformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::TextFormat
Description	src/formats/thermoformat.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::ThermoFormat
Description	src/formats/tinkerformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::TinkerFormat
Description	src/formats/titleformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::TitleFormat
Description	src/formats/turbomoleformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::TurbomoleFormat
Description	src/formats/unichemformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::UniChemFormat
Description	src/formats/vaspformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::VASPFormat
Description	src/formats/viewmolformat.cpp	/^  virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ViewMolFormat
Description	src/formats/xedformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::XEDFormat
Description	src/formats/xml/cdxmlformat.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::ChemDrawXMLFormat
Description	src/formats/xml/cmlformat.cpp	/^    virtual const char* Description()$/;"	f	class:OpenBabel::CMLFormat
Description	src/formats/xml/cmlreactformat.cpp	/^  const char* Description()$/;"	f	class:OpenBabel::CMLReactFormat
Description	src/formats/xml/pubchem.cpp	/^  virtual const char* Description()$/;"	f	class:OpenBabel::PubChemFormat
Description	src/formats/xml/xmlformat.cpp	/^  const char* Description()$/;"	f	class:OpenBabel::XMLFormat
Description	src/formats/xsfformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::XSFFormat
Description	src/formats/xtcformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::XTCFormat
Description	src/formats/xyzformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::XYZFormat
Description	src/formats/yasaraformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::YOBFormat
Description	src/formats/zindoformat.cpp	/^    virtual const char* Description() \/\/required$/;"	f	class:OpenBabel::ZINDOFormat
Description	src/obconversion.cpp	/^  const char* OBConversion::Description()$/;"	f	class:OpenBabel::OBConversion
Description	src/ops/addfilename.cpp	/^  const char* Description(){ return $/;"	f	class:OpenBabel::OpAddFileName
Description	src/ops/addinindex.cpp	/^  const char* Description(){ return $/;"	f	class:OpenBabel::OpAddInIndex
Description	src/ops/addnonpolarh.cpp	/^  const char* Description(){ return "Adds hydrogen to nonpolar atoms only"; }$/;"	f	class:OpenBabel::OpAddNonPolarH
Description	src/ops/addpolarh.cpp	/^  const char* Description(){ return "Adds hydrogen to polar atoms only"; }$/;"	f	class:OpenBabel::OpAddPolarH
Description	src/ops/canonical.cpp	/^  const char* Description(){ return "Canonicalize the atom order"; }$/;"	f	class:OpenBabel::OpCanonical
Description	src/ops/changecell.cpp	/^  const char* Description(){ return "Change cell size:\\n"$/;"	f	class:OpenBabel::OpChangeCell
Description	src/ops/conformer.cpp	/^      const char* Description()$/;"	f	class:OpenBabel::OpConformer
Description	src/ops/deferred.h	/^  virtual const char* Description() { return "Read and write an OBBase* array"; }$/;"	f	class:OpenBabel::DeferredFormat
Description	src/ops/delnonpolarh.cpp	/^  const char* Description(){ return "Deletes hydrogen from nonpolar atoms only"; }$/;"	f	class:OpenBabel::OpDelNonPolarH
Description	src/ops/delpolarh.cpp	/^  const char* Description(){ return "Deletes hydrogen from polar atoms only"; }$/;"	f	class:OpenBabel::OpDelPolarH
Description	src/ops/fillUC.cpp	/^  const char* Description(){ return "<param> Fill the unit cell (strict or keepconnect)\\n"$/;"	f	class:OpenBabel::OpFillUC
Description	src/ops/forcefield.cpp	/^      const char* Description()$/;"	f	class:OpenBabel::OpEnergy
Description	src/ops/forcefield.cpp	/^      const char* Description()$/;"	f	class:OpenBabel::OpMinimize
Description	src/ops/gen2D.cpp	/^  const char* Description(){ return$/;"	f	class:OpenBabel::OpGen2D
Description	src/ops/gen3d.cpp	/^  const char* Description(){ return "Generate 3D coordinates"; }$/;"	f	class:OpenBabel::OpGen3D
Description	src/ops/largest.cpp	/^  const char* Description()$/;"	f	class:OpenBabel::OpLargest
Description	src/ops/loader.cpp	/^  virtual const char* Description(){ return "Makes plugin classes from a datafile"; }$/;"	f	class:OpenBabel::OBDefine
Description	src/ops/op2d.cpp	/^  const char* Description()$/;"	f	class:OpenBabel::Op2D
Description	src/ops/opalign.cpp	/^  const char* Description(){ return $/;"	f	class:OpenBabel::OpAlign
Description	src/ops/opconfab.cpp	/^      const char* Description()$/;"	f	class:OpenBabel::OpConfab
Description	src/ops/ophighlight.cpp	/^  const char* Description(){ return$/;"	f	class:OpenBabel::OpHighlight
Description	src/ops/opisomorph.cpp	/^const char* OpNewS::Description()$/;"	f	class:OpenBabel::OpNewS
Description	src/ops/opsplit.cpp	/^  const char* Description()$/;"	f	class:OpenBabel::OpSplit
Description	src/ops/optransform.cpp	/^  const char* OpTransform::Description()$/;"	f	class:OpenBabel::OpTransform
Description	src/ops/partialcharges.cpp	/^  const char* Description(){ return "<method> Calculate partial charges by specified method"; }$/;"	f	class:OpenBabel::OpPartialCharge
Description	src/ops/readconformers.cpp	/^  const char* Description(){ return$/;"	f	class:OpenBabel::OpReadConformers
Description	src/ops/sort.cpp	/^  const char* Description(){ return "<desc> Sort by descriptor(~desc for reverse)"$/;"	f	class:OpenBabel::OpSort
Description	src/ops/unique.cpp	/^  const char* Description(){ return$/;"	f	class:OpenBabel::OpUnique
Description	src/ops/xout.cpp	/^  const char* Description(){ return "<file.xxx> Additional file output\\n"$/;"	f	class:OpenBabel::OpExtraOut
Description	src/ops/xout.cpp	/^  virtual const char* Description() { return "Outputs to two formats"; }$/;"	f	class:OpenBabel::ExtraFormat
DestroyAtom	src/mol.cpp	/^  void OBMol::DestroyAtom(OBAtom *atom)$/;"	f	class:OpenBabel::OBMol
DestroyBond	src/mol.cpp	/^  void OBMol::DestroyBond(OBBond *bond)$/;"	f	class:OpenBabel::OBMol
DestroyResidue	src/mol.cpp	/^  void OBMol::DestroyResidue(OBResidue *residue)$/;"	f	class:OpenBabel::OBMol
DetectExplosion	src/forcefield.cpp	/^  bool OBForceField::DetectExplosion()$/;"	f	class:OpenBabel::OBForceField
DetectInpInchiCreationOptions	src/formats/libinchi/ichiread.c	/^int DetectInpInchiCreationOptions ( InpInChI *pOneInput, int *bHasReconnected, int *bHasMetal,$/;"	f
DetectInputINChIFileType	include/inchi/ichiparm.h	/^int DetectInputINChIFileType( FILE **inp_file, INPUT_PARMS *ip, const char *fmode )$/;"	f
DetermineConnectedChains	src/chains.cpp	/^  bool OBChainsParser::DetermineConnectedChains(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
DetermineFRJ	src/ring.cpp	/^  static int DetermineFRJ(OBMol &mol)$/;"	f	namespace:OpenBabel
DetermineFactors	src/rand.cpp	/^  static int DetermineFactors( unsigned int x, unsigned int *factors )$/;"	f	namespace:OpenBabel
DetermineHetAtoms	src/chains.cpp	/^  bool OBChainsParser::DetermineHetAtoms(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
DetermineHydrogens	src/chains.cpp	/^  bool OBChainsParser::DetermineHydrogens(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
DetermineIncrement	src/rand.cpp	/^  static unsigned int DetermineIncrement( unsigned int m )$/;"	f	namespace:OpenBabel
DetermineNucleicBackbone	src/chains.cpp	/^  bool OBChainsParser::DetermineNucleicBackbone(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
DetermineNucleicSidechains	src/chains.cpp	/^  bool OBChainsParser::DetermineNucleicSidechains(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
DeterminePeptideBackbone	src/chains.cpp	/^  bool OBChainsParser::DeterminePeptideBackbone(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
DeterminePeptideSidechains	src/chains.cpp	/^  bool OBChainsParser::DeterminePeptideSidechains(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
DeterminePotency	src/rand.cpp	/^  static int DeterminePotency( unsigned int m, unsigned int a )$/;"	f	namespace:OpenBabel
DetermineSequence	src/rand.cpp	/^  int DetermineSequence( unsigned int m, unsigned int *pm,$/;"	f	namespace:OpenBabel
DifferentiateRanks2	src/formats/libinchi/ichimap2.c	/^int  DifferentiateRanks2( int num_atoms, NEIGH_LIST *NeighList,$/;"	f
DifferentiateRanks3	src/formats/libinchi/ichimap2.c	/^int  DifferentiateRanks3( int num_atoms, NEIGH_LIST *NeighList,$/;"	f
DifferentiateRanks4	src/formats/libinchi/ichimap2.c	/^int  DifferentiateRanks4( int num_atoms, NEIGH_LIST *NeighList,$/;"	f
DifferentiateRanksBasic	src/formats/libinchi/ichimap2.c	/^int  DifferentiateRanksBasic( int num_atoms, NEIGH_LIST *NeighList,$/;"	f
Dinfh	include/openbabel/pointgroup.h	/^        Cinfv, Dinfh, \/\/ 53, 54$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
DipoleScalingFactor	include/openbabel/chargemodel.h	/^      virtual double DipoleScalingFactor() { return 1.0; }$/;"	f	class:OpenBabel::OBChargeModel
DipoleScalingFactor	src/charges/eem.cpp	/^    double DipoleScalingFactor() { return 1.0; } \/\/ fit from regression$/;"	f	class:OpenBabel::EEMCharges
DipoleScalingFactor	src/charges/gasteiger.cpp	/^  double DipoleScalingFactor() { return 3.4927; } \/\/ fit from regression$/;"	f	class:OpenBabel::GasteigerCharges
DipoleScalingFactor	src/charges/mmff94.cpp	/^  double DipoleScalingFactor() { return 3.8558; } \/\/ fit from regression across MMFF94 validation set$/;"	f	class:OpenBabel::MMFF94Charges
DipoleScalingFactor	src/charges/qeq.h	/^  double DipoleScalingFactor() { return 1.959; } \/\/ fit from regression$/;"	f	class:OpenBabel::QEqCharges
DipoleScalingFactor	src/charges/qtpie.h	/^  double DipoleScalingFactor() { return 4.041; } \/\/ fit from regression$/;"	f	class:OpenBabel::QTPIECharges
DisconnectAmmoniumSalt	src/formats/libinchi/strutil.c	/^int DisconnectAmmoniumSalt ( inp_ATOM *at, int iN, int iO, int k, S_CHAR *num_explicit_H )$/;"	f
DisconnectInpAtBond	src/formats/libinchi/strutil.c	/^int DisconnectInpAtBond( inp_ATOM *at, AT_NUMB *nOldCompNumber, int iat, int neigh_ord )$/;"	f
DisconnectMetalSalt	src/formats/libinchi/strutil.c	/^int DisconnectMetalSalt( inp_ATOM *at, int i )$/;"	f
DisconnectMetals	src/formats/libinchi/strutil.c	/^int DisconnectMetals( ORIG_ATOM_DATA *orig_inp_data, int bCheckMetalValence, INCHI_MODE *bTautFlagsDone ) $/;"	f
DisconnectOneLigand	src/formats/libinchi/strutil.c	/^int DisconnectOneLigand( inp_ATOM *at, AT_NUMB *nOldCompNumber, S_CHAR *bMetal, char *elnumber_Heteroat,$/;"	f
DisconnectSalts	src/formats/libinchi/strutil.c	/^int DisconnectSalts( ORIG_ATOM_DATA *orig_inp_data, int bDisconnect )$/;"	f
DisconnectedConnectedH	src/formats/libinchi/ichirvr1.c	/^int DisconnectedConnectedH( inp_ATOM *at, int num_atoms, int num_deleted_H )$/;"	f
Display	src/descriptor.cpp	/^bool OBDescriptor::Display(std::string&txt, const char* param, const char* ID)$/;"	f	class:OpenBabel::OBDescriptor
Display	src/format.cpp	/^bool OBFormat::Display(std::string& txt, const char* param, const char* ID)$/;"	f	class:OpenBabel::OBFormat
Display	src/plugin.cpp	/^bool OBPlugin::Display(string& txt, const char* param, const char* ID)$/;"	f	class:OpenBabel::OBPlugin
DisplayAllRestoredComponents	src/formats/libinchi/ichirvr7.c	/^int DisplayAllRestoredComponents( inp_ATOM *at, int num_at, const char *szCurHdr )$/;"	f
DisplayCompositeStructure	src/formats/libinchi/runichi.c	/^int DisplayCompositeStructure( COMP_ATOM_DATA *composite_norm_data, int bIsotopic, int bTautomeric,$/;"	f
DisplayConfig	src/ops/opconfab.cpp	/^  void OpConfab::DisplayConfig(OBConversion* pConv)$/;"	f	class:OpenBabel::OpConfab
DisplayInFile	src/GUI/OBGUI.cpp	/^void OBGUIFrame::DisplayInFile(wxString filename)$/;"	f	class:OBGUIFrame
DisplayInputFiles	src/GUI/OBGUI.cpp	/^void OBGUIFrame::DisplayInputFiles(wxArrayString filepatharray)$/;"	f	class:OBGUIFrame
DisplayMessage	src/GUI/OBGUI.h	/^  void DisplayMessage(wxString& message){m_pMessages->SetValue(message);}$/;"	f	class:OBGUIFrame
DisplayOneRestoredComponent	src/formats/libinchi/ichirvr7.c	/^int DisplayOneRestoredComponent( StrFromINChI *pStruct, inp_ATOM *at,$/;"	f
DisplayRestoredComponent	src/formats/libinchi/ichirvr7.c	/^int DisplayRestoredComponent( StrFromINChI *pStruct, int iComponent, int iAtNoOffset, INChI *pInChI, const char *szCurHdr )$/;"	f
DisplayStructure	src/formats/libinchi/runichi.c	/^int DisplayStructure( inp_ATOM *at, int num_at, int num_removed_H, int bAdd_DT_to_num_H,$/;"	f
DisplayStructureComponents	src/formats/libinchi/ichirvr7.c	/^int DisplayStructureComponents( ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, long num_inp, char *szCurHdr,$/;"	f
DisplayTheWholeCompositeStructure	src/formats/libinchi/runichi.c	/^int DisplayTheWholeCompositeStructure( INPUT_PARMS *ip, STRUCT_DATA *sd, long num_inp, int iINChI,$/;"	f
DisplayTheWholeStructure	src/formats/libinchi/runichi.c	/^int DisplayTheWholeStructure( STRUCT_DATA *sd, INPUT_PARMS *ip, char *szTitle, $/;"	f
DistanceFromCenter	src/pointgroup.cpp	/^    double *               DistanceFromCenter    ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
DistanceGeometry	src/forcefield.cpp	/^  void OBForceField::DistanceGeometry()$/;"	f	class:OpenBabel::OBForceField
DistanceGeometryPrivate	src/distgeom.cpp	/^    DistanceGeometryPrivate(const unsigned int N)$/;"	f	class:OpenBabel::DistanceGeometryPrivate
DistanceGeometryPrivate	src/distgeom.cpp	/^  class DistanceGeometryPrivate {$/;"	c	namespace:OpenBabel	file:
DiverseConfGen	src/confsearch.cpp	/^int OBForceField::DiverseConfGen(double rmsd, unsigned int nconfs, double energy_gap, bool verbose)$/;"	f	class:OpenBabel::OBForceField
DllMain	src/formats/libinchi/inchi_dll_main.c	/^int INCHI_DLLMAIN_TYPE DllMain( HANDLE hModule, $/;"	f
DlpolyConfigFormat	src/formats/dlpolyformat.cpp	/^    DlpolyConfigFormat()$/;"	f	class:OpenBabel::DlpolyConfigFormat
DlpolyConfigFormat	src/formats/dlpolyformat.cpp	/^  class DlpolyConfigFormat : public OBMoleculeFormat, public DlpolyInputReader$/;"	c	namespace:OpenBabel	file:
DlpolyHISTORYFormat	src/formats/dlpolyformat.cpp	/^  DlpolyHISTORYFormat()$/;"	f	class:OpenBabel::DlpolyHISTORYFormat
DlpolyHISTORYFormat	src/formats/dlpolyformat.cpp	/^  class DlpolyHISTORYFormat : public OBMoleculeFormat, public DlpolyInputReader$/;"	c	namespace:OpenBabel	file:
DlpolyInputReader	src/formats/dlpolyformat.cpp	/^  class DlpolyInputReader$/;"	c	namespace:OpenBabel	file:
DnD	src/GUI/OBGUI.h	/^  DnD(OBGUIFrame* parent) : m_pParent(parent){};$/;"	f	class:DnD
DnD	src/GUI/OBGUI.h	/^class DnD : public wxFileDropTarget$/;"	c
Do	src/alias.cpp	/^bool OpGenAlias::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion*)$/;"	f	class:OpenBabel::OpGenAlias
Do	src/ops/addfilename.cpp	/^bool OpAddFileName::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpAddFileName
Do	src/ops/addinindex.cpp	/^bool OpAddInIndex::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpAddInIndex
Do	src/ops/addnonpolarh.cpp	/^bool OpAddNonPolarH::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpAddNonPolarH
Do	src/ops/addpolarh.cpp	/^bool OpAddPolarH::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpAddPolarH
Do	src/ops/canonical.cpp	/^bool OpCanonical::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpCanonical
Do	src/ops/changecell.cpp	/^bool OpChangeCell::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpChangeCell
Do	src/ops/conformer.cpp	/^  bool OpConformer::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion*)$/;"	f	class:OpenBabel::OpConformer
Do	src/ops/delnonpolarh.cpp	/^bool OpDelNonPolarH::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpDelNonPolarH
Do	src/ops/delpolarh.cpp	/^bool OpDelPolarH::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpDelPolarH
Do	src/ops/fillUC.cpp	/^bool OpFillUC::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpFillUC
Do	src/ops/forcefield.cpp	/^  bool OpEnergy::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion*)$/;"	f	class:OpenBabel::OpEnergy
Do	src/ops/forcefield.cpp	/^  bool OpMinimize::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion*)$/;"	f	class:OpenBabel::OpMinimize
Do	src/ops/gen2D.cpp	/^bool OpGen2D::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpGen2D
Do	src/ops/gen3d.cpp	/^bool OpGen3D::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpGen3D
Do	src/ops/largest.cpp	/^bool OpLargest::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpLargest
Do	src/ops/op2d.cpp	/^bool Op2D::Do(OBBase* pOb, OpMap*, const char* OptionText)$/;"	f	class:OpenBabel::Op2D
Do	src/ops/opalign.cpp	/^bool OpAlign::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv)$/;"	f	class:OpenBabel::OpAlign
Do	src/ops/opconfab.cpp	/^  bool OpConfab::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv=NULL)$/;"	f	class:OpenBabel::OpConfab
Do	src/ops/ophighlight.cpp	/^bool OpHighlight::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv)$/;"	f	class:OpenBabel::OpHighlight
Do	src/ops/opisomorph.cpp	/^bool OpNewS::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv)$/;"	f	class:OpenBabel::OpNewS
Do	src/ops/opsplit.cpp	/^bool OpSplit::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpSplit
Do	src/ops/optransform.cpp	/^bool OpTransform::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpTransform
Do	src/ops/partialcharges.cpp	/^bool OpPartialCharge::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv)$/;"	f	class:OpenBabel::OpPartialCharge
Do	src/ops/readconformers.cpp	/^bool OpReadConformers::Do(OBBase* pOb, const char* OptionText, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OpReadConformers
Do	src/ops/sort.cpp	/^bool OpSort::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv)$/;"	f	class:OpenBabel::OpSort
Do	src/ops/unique.cpp	/^bool OpUnique::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv)$/;"	f	class:OpenBabel::OpUnique
Do	src/ops/xout.cpp	/^bool OpExtraOut::Do(OBBase* pOb, const char* OptionText, OpMap* pmap, OBConversion* pConv)$/;"	f	class:OpenBabel::OpExtraOut
DoAtoms	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::DoAtoms()$/;"	f	class:OpenBabel::CMLFormat
DoBonds	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::DoBonds()$/;"	f	class:OpenBabel::CMLFormat
DoComparison	include/openbabel/descriptor.h	/^static bool DoComparison(char ch1, char ch2, T& val, T& filterval)$/;"	f	namespace:OpenBabel
DoElement	include/openbabel/xml.h	/^      virtual bool DoElement(const std::string& ElName){return false;};$/;"	f	class:OpenBabel::XMLBaseFormat
DoElement	src/formats/xml/cdxmlformat.cpp	/^bool ChemDrawXMLFormat::DoElement(const string& name)$/;"	f	class:OpenBabel::ChemDrawXMLFormat
DoElement	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::DoElement(const string& name)$/;"	f	class:OpenBabel::CMLFormat
DoElement	src/formats/xml/cmlreactformat.cpp	/^bool CMLReactFormat::DoElement(const string& name)$/;"	f	class:OpenBabel::CMLReactFormat
DoElement	src/formats/xml/pubchem.cpp	/^bool PubChemFormat::DoElement(const string& name)$/;"	f	class:OpenBabel::PubChemFormat
DoFragment	src/formats/chemdrawcdx.cpp	/^bool ChemDrawBinaryXFormat::DoFragment(CDXReader& cdxr, OBMol* pmol)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
DoFragmentImpl	src/formats/chemdrawcdx.cpp	/^bool ChemDrawBinaryXFormat::DoFragmentImpl(CDXReader& cdxr, OBMol* pmol, $/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
DoHCounts	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::DoHCounts()$/;"	f	class:OpenBabel::CMLFormat
DoMolWideData	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::DoMolWideData()$/;"	f	class:OpenBabel::CMLFormat
DoNodeSetsIntersect	src/formats/libinchi/ichican2.c	/^int DoNodeSetsIntersect( NodeSet *cur_nodes, int k1, int k2)$/;"	f
DoOps	include/openbabel/op.h	/^  static bool DoOps(OBBase* pOb, OpMap* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OBOp
DoOptions	src/GUI/OBGUI.cpp	/^void OBGUIFrame::DoOptions(OpenBabel::OBConversion& Conv)$/;"	f	class:OBGUIFrame
DoOutputOptions	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::DoOutputOptions(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::OBMoleculeFormat
DoReaction	src/formats/chemdrawcdx.cpp	/^bool ChemDrawBinaryXFormat::DoReaction(CDXReader& cdxr, OBReaction* pReact)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
DoReverses	src/fingerprints/finger2.cpp	/^void fingerprint2::DoReverses()$/;"	f	class:OpenBabel::fingerprint2
DoRings	src/fingerprints/finger2.cpp	/^void fingerprint2::DoRings()$/;"	f	class:OpenBabel::fingerprint2
DoText	src/formats/chemdrawcdx.cpp	/^string ChemDrawBinaryXFormat::DoText(CDXReader& cdxr)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
DoTransformations	include/openbabel/base.h	/^      virtual OBBase* DoTransformations(const std::map<std::string,std::string>* \/*pOptions*\/,$/;"	f	class:OpenBabel::OBBase
DoTransformations	src/transform.cpp	/^  OBBase* OBMol::DoTransformations(const std::map<std::string, std::string>* pOptions, OBConversion* pConv)$/;"	f	class:OpenBabel::OBMol
Donor	src/tautomer.cpp	/^      Donor,$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
Double	src/tautomer.cpp	/^      Double$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
DoubleAdd	src/rand.cpp	/^  void DoubleAdd( DoubleType *x, unsigned int y )$/;"	f	namespace:OpenBabel
DoubleModulus	src/rand.cpp	/^  unsigned int DoubleModulus( DoubleType *n,  unsigned int d )$/;"	f	namespace:OpenBabel
DoubleMultiply	src/rand.cpp	/^  void DoubleMultiply( unsigned int x, unsigned int y, DoubleType *z )$/;"	f	namespace:OpenBabel
DoubleType	include/openbabel/rand.h	/^  DoubleType;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon58
Down	src/depict/depict.cpp	/^    Down$/;"	e	enum:OpenBabel::__anon74	file:
DownBond	include/openbabel/stereo/stereo.h	/^      DownBond =    6,$/;"	e	enum:OpenBabel::OBStereo::BondDirection
DrawAromaticRing	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawAromaticRing(OBRing *ring, OBBitVec &drawnBonds)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawAromaticRing	src/depict/depict.cpp	/^inline void OBDepictPrivateBallAndStick::DrawAromaticRing(OBRing* ring,$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawAromaticRingBond	src/depict/depict.cpp	/^  inline void OBDepictPrivateBallAndStick::DrawAromaticRingBond(OBAtom *prevAtom, OBAtom *beginAtom, OBAtom *endAtom, OBAtom *nextAtom, const vector3 &center, double dist)$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawAtom	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawAtom(OBAtom *atom)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawAtom	src/depict/depict.cpp	/^  void OBDepictPrivateBallAndStick::DrawAtom(OBAtom *atom)$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawAtomLabel	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawAtomLabel(const std::string &label, int alignment, const vector3 &pos)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawAtomLabel	src/depict/depict.cpp	/^  void OBDepictPrivateBallAndStick::DrawAtomLabel(const std::string &label, int alignment, const vector3 &pos)$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawBall	src/depict/asciipainter.cpp	/^  void ASCIIPainter::DrawBall(double x, double y, double r, double opacity)$/;"	f	class:OpenBabel::ASCIIPainter
DrawBall	src/depict/cairopainter.cpp	/^  void CairoPainter::DrawBall(double x, double y, double r, double opacity)$/;"	f	class:OpenBabel::CairoPainter
DrawBall	src/depict/commandpainter.cpp	/^  void CommandPainter::DrawBall(double x, double y, double r, double opacity)$/;"	f	class:OpenBabel::CommandPainter
DrawBall	src/depict/svgpainter.cpp	/^  void SVGPainter::DrawBall(double x, double y, double r, double opacity)$/;"	f	class:OpenBabel::SVGPainter
DrawCircle	src/depict/asciipainter.cpp	/^  void ASCIIPainter::DrawCircle(double x, double y, double r)$/;"	f	class:OpenBabel::ASCIIPainter
DrawCircle	src/depict/cairopainter.cpp	/^  void CairoPainter::DrawCircle(double x, double y, double r)$/;"	f	class:OpenBabel::CairoPainter
DrawCircle	src/depict/commandpainter.cpp	/^  void CommandPainter::DrawCircle(double x, double y, double r)$/;"	f	class:OpenBabel::CommandPainter
DrawCircle	src/depict/svgpainter.cpp	/^  void SVGPainter::DrawCircle(double x, double y, double r)$/;"	f	class:OpenBabel::SVGPainter
DrawHash	src/depict/depict.cpp	/^  inline void OBDepictPrivateBallAndStick::DrawHash(OBAtom* beginAtom,$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawHash	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawHash(OBAtom *beginAtom, OBAtom *endAtom)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawLine	src/depict/asciipainter.cpp	/^  void ASCIIPainter::DrawLine(double x1, double y1, double x2, double y2, const std::vector<double> & dashes)$/;"	f	class:OpenBabel::ASCIIPainter
DrawLine	src/depict/cairopainter.cpp	/^  void CairoPainter::DrawLine(double x1, double y1, double x2, double y2, const std::vector<double>& dashes)$/;"	f	class:OpenBabel::CairoPainter
DrawLine	src/depict/commandpainter.cpp	/^  void CommandPainter::DrawLine(double x1, double y1, double x2, double y2,  const std::vector<double> & dashes)$/;"	f	class:OpenBabel::CommandPainter
DrawLine	src/depict/svgpainter.cpp	/^  void SVGPainter::DrawLine(double x1, double y1, double x2, double y2, const std::vector<double>& dashes)$/;"	f	class:OpenBabel::SVGPainter
DrawMolecule	src/depict/depict.cpp	/^  bool OBDepict::DrawMolecule(OBMol *mol)$/;"	f	class:OpenBabel::OBDepict
DrawPolygon	src/depict/asciipainter.cpp	/^  void ASCIIPainter::DrawPolygon(const std::vector<std::pair<double,double> > &points)$/;"	f	class:OpenBabel::ASCIIPainter
DrawPolygon	src/depict/cairopainter.cpp	/^  void CairoPainter::DrawPolygon(const std::vector<std::pair<double,double> > &points)$/;"	f	class:OpenBabel::CairoPainter
DrawPolygon	src/depict/commandpainter.cpp	/^  void CommandPainter::DrawPolygon(const std::vector<std::pair<double,double> > &points)$/;"	f	class:OpenBabel::CommandPainter
DrawPolygon	src/depict/svgpainter.cpp	/^  void SVGPainter::DrawPolygon(const std::vector<std::pair<double,double> > &points)$/;"	f	class:OpenBabel::SVGPainter
DrawRing	src/depict/depict.cpp	/^  inline void OBDepictPrivateBallAndStick::DrawRing(OBRing* ring,$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawRing	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawRing(OBRing *ring, OBBitVec &drawnBonds)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawRingBond	src/depict/depict.cpp	/^  inline void OBDepictPrivateBallAndStick::DrawRingBond(OBAtom* beginAtom,$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawRingBond	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawRingBond(OBAtom *beginAtom, OBAtom *endAtom, const vector3 &center, int order)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawSimpleBond	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawSimpleBond(OBAtom *beginAtom, OBAtom *endAtom, int order, bool crossed_dbl_bond)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawSimpleBond	src/depict/depict.cpp	/^  void OBDepictPrivateBallAndStick::DrawSimpleBond(OBAtom* beginAtom,$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawText	src/depict/asciipainter.cpp	/^  void ASCIIPainter::DrawText(double x, double y, const std::string &text)$/;"	f	class:OpenBabel::ASCIIPainter
DrawText	src/depict/cairopainter.cpp	/^  void CairoPainter::DrawText(double x, double y, const std::string &text)$/;"	f	class:OpenBabel::CairoPainter
DrawText	src/depict/commandpainter.cpp	/^  void CommandPainter::DrawText(double x, double y, const std::string &text)$/;"	f	class:OpenBabel::CommandPainter
DrawText	src/depict/svgpainter.cpp	/^  void SVGPainter::DrawText(double x, double y, const std::string &text)$/;"	f	class:OpenBabel::SVGPainter
DrawWedge	src/depict/depict.cpp	/^  inline void OBDepictPrivateBallAndStick::DrawWedge(OBAtom* beginAtom,$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawWedge	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawWedge(OBAtom *beginAtom, OBAtom *endAtom)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawWobblyBond	src/depict/depict.cpp	/^  inline void OBDepictPrivateBallAndStick::DrawWobblyBond(OBAtom* beginAtom,$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
DrawWobblyBond	src/depict/depict.cpp	/^  void OBDepictPrivate::DrawWobblyBond(OBAtom *beginAtom, OBAtom *endAtom)$/;"	f	class:OpenBabel::OBDepictPrivate
DrawingLabelLeftShift	include/inchi/inpdef.h	/^    int       DrawingLabelLeftShift;$/;"	m	struct:tagAtomParmsForDrawing
DrawingLabelLength	include/inchi/inpdef.h	/^    int       DrawingLabelLength;$/;"	m	struct:tagAtomParmsForDrawing
Ds	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Duplicate	src/atom.cpp	/^  void OBAtom::Duplicate(OBAtom *src)$/;"	f	class:OpenBabel::OBAtom
DuplicateOrigAtom	src/formats/libinchi/runichi.c	/^int DuplicateOrigAtom( ORIG_ATOM_DATA *new_orig_atom, ORIG_ATOM_DATA *orig_atom )$/;"	f
DuplicationPolicy	include/openbabel/json/json.h	/^         enum DuplicationPolicy $/;"	g	class:Json::Value::CZString
Dy	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
DynOptionswx	src/GUI/optswx.h	/^	DynOptionswx(wxWindow* Par, wxSizer* pSizer)$/;"	f	class:DynOptionswx
DynOptionswx	src/GUI/optswx.h	/^class DynOptionswx$/;"	c
E	include/openbabel/kinetics.h	/^  enum rate_type {A, n, E};$/;"	e	enum:OpenBabel::OBRateData::rate_type
ECF	include/inchi/ichirvrs.h	/^} ECF;$/;"	t	typeref:struct:tagEdgeCapFlow
ECFPFirstPass	src/fingerprints/fingerecfp.cpp	/^static void ECFPFirstPass(OpenBabel::OBMol &mol,$/;"	f	namespace:OpenBabel
ECFPHash	src/fingerprints/fingerecfp.cpp	/^static unsigned int ECFPHash(std::vector<unsigned int> &v)$/;"	f	namespace:OpenBabel
ECFPHash	src/fingerprints/fingerecfp.cpp	/^static unsigned int ECFPHash(unsigned char *ptr, unsigned int length)$/;"	f	namespace:OpenBabel
ECFPInsert	src/fingerprints/fingerecfp.cpp	/^static void ECFPInsert(std::vector<unsigned int> &fp, unsigned int val)$/;"	f	namespace:OpenBabel
ECFPPass	src/fingerprints/fingerecfp.cpp	/^static void ECFPPass(OpenBabel::OBMol &mol,$/;"	f	namespace:OpenBabel
EDGE_FLOW_MASK	include/inchi/ichi_bns.h	159;"	d
EDGE_FLOW_PATH	include/inchi/ichi_bns.h	160;"	d
EDGE_FLOW_ST_MASK	include/inchi/ichi_bns.h	154;"	d
EDGE_FLOW_ST_PATH	include/inchi/ichi_bns.h	155;"	d
EDGE_LIST	include/inchi/ichirvrs.h	/^} EDGE_LIST;$/;"	t	typeref:struct:tagEdgeList
EDGE_LIST_CLEAR	include/inchi/ichirvrs.h	273;"	d
EDGE_LIST_FREE	include/inchi/ichirvrs.h	274;"	d
EEMCharges	src/charges/eem.cpp	/^  EEMCharges::EEMCharges(const char* ID, std::string parameters, std::string type) : OBChargeModel(ID, false)$/;"	f	class:OpenBabel::EEMCharges
EEMCharges	src/charges/eem.cpp	/^  class EEMCharges : public OBChargeModel$/;"	c	namespace:OpenBabel	file:
EEMParameter	src/charges/eem.cpp	/^  struct EEMParameter {$/;"	s	namespace:OpenBabel	file:
EILSEQ	include/iconv.h	58;"	d
EILSEQ	src/formats/xml/iconv.h	58;"	d
ELDATA	src/formats/libinchi/util.c	/^} ELDATA;$/;"	t	typeref:struct:tagElData	file:
ELECTRONVOLT_TO_KCALPERMOL	include/openbabel/data_utilities.h	/^ const double ELECTRONVOLT_TO_KCALPERMOL = 23.060538;$/;"	m	namespace:OpenBabel
ELEM_C_FST	src/formats/libinchi/ichi_bns.c	1809;"	d	file:
ELEM_C_FST	src/formats/libinchi/strutil.c	900;"	d	file:
ELEM_C_LEN	src/formats/libinchi/ichi_bns.c	1810;"	d	file:
ELEM_C_LEN	src/formats/libinchi/strutil.c	901;"	d	file:
ELEM_NAME_LEN	src/formats/libinchi/ichican2.c	3433;"	d	file:
ELEM_N_FST	src/formats/libinchi/ichi_bns.c	1803;"	d	file:
ELEM_N_FST	src/formats/libinchi/strutil.c	896;"	d	file:
ELEM_N_LEN	src/formats/libinchi/ichi_bns.c	1804;"	d	file:
ELEM_N_LEN	src/formats/libinchi/strutil.c	897;"	d	file:
ELEM_O_FST	src/formats/libinchi/ichi_bns.c	1805;"	d	file:
ELEM_O_FST	src/formats/libinchi/strutil.c	898;"	d	file:
ELEM_O_LEN	src/formats/libinchi/ichi_bns.c	1806;"	d	file:
ELEM_O_LEN	src/formats/libinchi/strutil.c	899;"	d	file:
ELEM_S_FST	src/formats/libinchi/ichi_bns.c	1807;"	d	file:
ELEM_S_LEN	src/formats/libinchi/ichi_bns.c	1808;"	d	file:
EL_NUMBER_H	include/inchi/ichirvrs.h	137;"	d
EL_TYPE_C	include/inchi/ichirvrs.h	413;"	d
EL_TYPE_MASK	include/inchi/ichirvrs.h	415;"	d
EL_TYPE_N	include/inchi/ichirvrs.h	411;"	d
EL_TYPE_O	include/inchi/ichirvrs.h	409;"	d
EL_TYPE_OSt	include/inchi/ichirvrs.h	416;"	d
EL_TYPE_P	include/inchi/ichirvrs.h	412;"	d
EL_TYPE_PT	include/inchi/ichirvrs.h	417;"	d
EL_TYPE_S	include/inchi/ichirvrs.h	410;"	d
EL_TYPE_X	include/inchi/ichirvrs.h	414;"	d
EMBED_REC_METALS_INCHI	include/inchi/mode.h	429;"	d
EMPTY_CT	src/formats/libinchi/ichican2.c	67;"	d	file:
EMPTY_H_NUMBER	src/formats/libinchi/ichican2.c	68;"	d	file:
EMPTY_ISO_SORT_KEY	src/formats/libinchi/ichican2.c	70;"	d	file:
ENDPOINT_INFO	include/inchi/ichitaut.h	/^} ENDPOINT_INFO;$/;"	t	typeref:struct:tagEndpointInfo
END_OF_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* END_OF_CALCULATION_PATTERN = "times  cpu";$/;"	m	namespace:OpenBabel	file:
ENTITY_REFS_IN_XML_MESSAGES	include/inchi/mode.h	535;"	d
EPSILON	src/formats/povrayformat.cpp	50;"	d	file:
EPSILON	src/generic.cpp	393;"	d	file:
EPSILON	src/generic.cpp	400;"	d	file:
EPSILON	src/ops/fillUC.cpp	74;"	d	file:
EPSILON	src/ops/fillUC.cpp	81;"	d	file:
EQ	include/openbabel/mol.h	794;"	d
EQEqCharges	src/charges/eqeq.h	/^  EQEqCharges(const char* ID) : OBChargeModel(ID, false){};$/;"	f	class:OpenBabel::EQEqCharges
EQEqCharges	src/charges/eqeq.h	/^  EQEqCharges(void) : OBChargeModel("fake ID", false){};$/;"	f	class:OpenBabel::EQEqCharges
EQEqCharges	src/charges/eqeq.h	/^class EQEqCharges : public OBChargeModel$/;"	c	namespace:OpenBabel
EQL_EQU	include/inchi/strutil.h	241;"	d
EQL_EQU_ISO	include/inchi/strutil.h	243;"	d
EQL_EQU_TG	include/inchi/strutil.h	242;"	d
EQL_EXISTS	include/inchi/strutil.h	233;"	d
EQL_H_NUM_TOGETHER	include/inchi/mode.h	494;"	d
EQL_NUM	include/inchi/strutil.h	247;"	d
EQL_NUM_INV	include/inchi/strutil.h	248;"	d
EQL_NUM_ISO	include/inchi/strutil.h	249;"	d
EQL_SP2	include/inchi/strutil.h	236;"	d
EQL_SP3	include/inchi/strutil.h	234;"	d
EQL_SP3_INV	include/inchi/strutil.h	235;"	d
EQUIV_INFO	include/inchi/ichicant.h	/^} EQUIV_INFO;$/;"	t	typeref:struct:tagEQUIV_INFO
EQ_NEIGH	include/inchi/ichicomn.h	/^} EQ_NEIGH;$/;"	t	typeref:struct:tagEquNeigh
EQn	include/openbabel/mol.h	798;"	d
ERR_ELEM	src/formats/libinchi/util.c	/^int ERR_ELEM = 255;$/;"	v
ERR_NO_CANON_RESULTS	include/inchi/ichi.h	73;"	d
ESC_KEY	include/inchi/ichimain.h	43;"	d
ESP_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* ESP_CALCULATION_PATTERN = "NWChem Electrostatic Potential Fit Module";$/;"	m	namespace:OpenBabel	file:
EStrategy	src/zipstream.h	/^enum EStrategy$/;"	g	namespace:zlib_stream
EUnitsFactor	src/formats/chemkinformat.cpp	/^  double AUnitsFactor, EUnitsFactor;$/;"	m	class:OpenBabel::ChemKinFormat	file:
EV_TO_KCAL_PER_MOL	src/formats/adfformat.cpp	39;"	d	file:
EV_TO_KCAL_PER_MOL	src/formats/castepformat.cpp	18;"	d	file:
EV_TO_KCAL_PER_MOL	src/formats/gulpformat.cpp	18;"	d	file:
EV_TO_KCAL_PER_MOL	src/formats/pwscfformat.cpp	21;"	d	file:
EV_TO_KCAL_PER_MOL	src/formats/siestaformat.cpp	18;"	d	file:
EV_TO_KCAL_PER_MOL	src/formats/vaspformat.cpp	23;"	d	file:
EV_TO_NM	src/formats/nwchemformat.cpp	25;"	d	file:
EXACTNUMBER_MASK	src/mcdlutil.cpp	/^    static int const EXACTNUMBER_MASK=AROMATIC_MASK << 1;$/;"	m	class:OpenBabel::TEditedMolecule	file:
EXCL_ALL_AROM_BOND_PARITY	include/inchi/mode.h	736;"	d
EXCL_ALL_AROM_BOND_PARITY	include/inchi/mode.h	765;"	d
EXCL_ALL_AROM_BOND_PARITY	include/inchi/mode.h	766;"	d
EXPIMP_TEMPLATE	include/inchi/inchi_api.h	559;"	d
EXPIMP_TEMPLATE	include/inchi/inchi_api.h	564;"	d
EXPIMP_TEMPLATE	include/inchi/inchi_api.h	570;"	d
EXPIMP_TEMPLATE	include/inchi/inchi_dll_a.h	147;"	d
EXPIMP_TEMPLATE	include/inchi/inchi_dll_a.h	152;"	d
EXPIMP_TEMPLATE	include/inchi/inchi_dll_a.h	158;"	d
EXPIMP_TEMPLATE	include/inchi_api.h	560;"	d
EXPIMP_TEMPLATE	include/inchi_api.h	565;"	d
EXPIMP_TEMPLATE	include/inchi_api.h	571;"	d
EXTERN	include/openbabel/atom.h	27;"	d
EXTERN	include/openbabel/bond.h	28;"	d
EXTERN	include/openbabel/graphsym.h	29;"	d
EXTERN	include/openbabel/internalcoord.h	28;"	d
EXTERN	include/openbabel/mol.h	28;"	d
EXTERN	include/openbabel/residue.h	31;"	d
EXTRACT_STRUCT_NUMBER	include/inchi/ichirvrs.h	100;"	d
EXTRA_SPACE	include/inchi/ichimake.h	46;"	d
EXTR_2EQL2CENTER_TO_REMOVE_PARITY	include/inchi/mode.h	512;"	d
EXTR_CALC_USED_TO_REMOVE_PARITY	include/inchi/mode.h	511;"	d
EXTR_CANON_NE_EQUITABLE	include/inchi/mode.h	524;"	d
EXTR_FLAGS	include/inchi/mode.h	532;"	d
EXTR_HAS_ATOM_WITH_DEFINED_PARITY	include/inchi/mode.h	513;"	d
EXTR_HAS_FEATURE	include/inchi/mode.h	526;"	d
EXTR_HAS_METAL_ATOM	include/inchi/mode.h	522;"	d
EXTR_HAS_PROTON_PN	include/inchi/mode.h	525;"	d
EXTR_KNOWN_USED_TO_REMOVE_PARITY	include/inchi/mode.h	510;"	d
EXTR_MASK	include/inchi/mode.h	531;"	d
EXTR_METAL_WAS_DISCONNECTED	include/inchi/mode.h	518;"	d
EXTR_METAL_WAS_NOT_DISCONNECTED	include/inchi/mode.h	519;"	d
EXTR_NON_TRIVIAL_STEREO	include/inchi/mode.h	520;"	d
EXTR_REMOVE_PARITY_WARNING	include/inchi/mode.h	514;"	d
EXTR_SALT_PROTON_MOVED	include/inchi/mode.h	516;"	d
EXTR_SALT_PROTON_MOVE_ERR_WARN	include/inchi/mode.h	517;"	d
EXTR_SALT_WAS_DISCONNECTED	include/inchi/mode.h	515;"	d
EXTR_TAUT_TREATMENT_CHARGES	include/inchi/mode.h	527;"	d
EXTR_TEST_TAUT3_SALTS_DONE	include/inchi/mode.h	523;"	d
EXTR_TRANSPOSITION_EXAMPLES	include/inchi/mode.h	528;"	d
EXTR_UNUSUAL_VALENCES	include/inchi/mode.h	521;"	d
EXYZFormat	src/formats/exyzformat.cpp	/^    EXYZFormat()$/;"	f	class:OpenBabel::EXYZFormat
EXYZFormat	src/formats/exyzformat.cpp	/^  class EXYZFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
E_Angle	src/forcefields/forcefieldgaff.cpp	/^  double OBForceFieldGaff::E_Angle()$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Angle	src/forcefields/forcefieldgaff.h	/^      double E_Angle(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Angle	src/forcefields/forcefieldghemical.cpp	/^  double OBForceFieldGhemical::E_Angle()$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Angle	src/forcefields/forcefieldghemical.h	/^      double E_Angle(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Angle	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::E_Angle()$/;"	f	class:OpenBabel::OBForceFieldMM2
E_Angle	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::E_Angle()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Angle	src/forcefields/forcefieldmmff94.h	/^      double E_Angle(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Angle	src/forcefields/forcefielduff.cpp	/^  double OBForceFieldUFF::E_Angle()$/;"	f	class:OpenBabel::OBForceFieldUFF
E_Angle	src/forcefields/forcefielduff.h	/^    double E_Angle(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldUFF
E_Bond	src/forcefields/forcefieldgaff.cpp	/^  double OBForceFieldGaff::E_Bond()$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Bond	src/forcefields/forcefieldgaff.h	/^      double E_Bond(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Bond	src/forcefields/forcefieldghemical.cpp	/^  double OBForceFieldGhemical::E_Bond()$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Bond	src/forcefields/forcefieldghemical.h	/^      double E_Bond(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Bond	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::E_Bond()$/;"	f	class:OpenBabel::OBForceFieldMM2
E_Bond	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::E_Bond()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Bond	src/forcefields/forcefieldmmff94.h	/^      double E_Bond(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Bond	src/forcefields/forcefielduff.cpp	/^  double OBForceFieldUFF::E_Bond()$/;"	f	class:OpenBabel::OBForceFieldUFF
E_Bond	src/forcefields/forcefielduff.h	/^    double E_Bond(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldUFF
E_Electrostatic	src/forcefields/forcefieldgaff.cpp	/^  double OBForceFieldGaff::E_Electrostatic()$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Electrostatic	src/forcefields/forcefieldgaff.h	/^      double E_Electrostatic(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Electrostatic	src/forcefields/forcefieldghemical.cpp	/^  double OBForceFieldGhemical::E_Electrostatic()$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Electrostatic	src/forcefields/forcefieldghemical.h	/^      double E_Electrostatic(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Electrostatic	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::E_Electrostatic()$/;"	f	class:OpenBabel::OBForceFieldMM2
E_Electrostatic	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::E_Electrostatic()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Electrostatic	src/forcefields/forcefieldmmff94.h	/^      double E_Electrostatic(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Electrostatic	src/forcefields/forcefielduff.cpp	/^  double OBForceFieldUFF::E_Electrostatic()$/;"	f	class:OpenBabel::OBForceFieldUFF
E_Electrostatic	src/forcefields/forcefielduff.h	/^    double E_Electrostatic(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldUFF
E_OOP	src/forcefields/forcefieldgaff.cpp	/^  double OBForceFieldGaff::E_OOP()$/;"	f	class:OpenBabel::OBForceFieldGaff
E_OOP	src/forcefields/forcefieldgaff.h	/^      double E_OOP(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGaff
E_OOP	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::E_OOP()$/;"	f	class:OpenBabel::OBForceFieldMM2
E_OOP	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::E_OOP()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_OOP	src/forcefields/forcefieldmmff94.h	/^      double E_OOP(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_OOP	src/forcefields/forcefielduff.cpp	/^  double OBForceFieldUFF::E_OOP()$/;"	f	class:OpenBabel::OBForceFieldUFF
E_OOP	src/forcefields/forcefielduff.h	/^    double E_OOP(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldUFF
E_StrBnd	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::E_StrBnd()$/;"	f	class:OpenBabel::OBForceFieldMM2
E_StrBnd	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::E_StrBnd()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_StrBnd	src/forcefields/forcefieldmmff94.h	/^      double E_StrBnd(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Torsion	src/forcefields/forcefieldgaff.cpp	/^  double OBForceFieldGaff::E_Torsion()$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Torsion	src/forcefields/forcefieldgaff.h	/^      double E_Torsion(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGaff
E_Torsion	src/forcefields/forcefieldghemical.cpp	/^  double OBForceFieldGhemical::E_Torsion()$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Torsion	src/forcefields/forcefieldghemical.h	/^      double E_Torsion(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_Torsion	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::E_Torsion()$/;"	f	class:OpenBabel::OBForceFieldMM2
E_Torsion	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::E_Torsion()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Torsion	src/forcefields/forcefieldmmff94.h	/^      double E_Torsion(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_Torsion	src/forcefields/forcefielduff.cpp	/^  double OBForceFieldUFF::E_Torsion()$/;"	f	class:OpenBabel::OBForceFieldUFF
E_Torsion	src/forcefields/forcefielduff.h	/^    double E_Torsion(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldUFF
E_VDW	src/forcefields/forcefieldgaff.cpp	/^  double OBForceFieldGaff::E_VDW()$/;"	f	class:OpenBabel::OBForceFieldGaff
E_VDW	src/forcefields/forcefieldgaff.h	/^      double E_VDW(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGaff
E_VDW	src/forcefields/forcefieldghemical.cpp	/^  double OBForceFieldGhemical::E_VDW()$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_VDW	src/forcefields/forcefieldghemical.h	/^      double E_VDW(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldGhemical
E_VDW	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::E_VDW()$/;"	f	class:OpenBabel::OBForceFieldMM2
E_VDW	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::E_VDW()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_VDW	src/forcefields/forcefieldmmff94.h	/^      double E_VDW(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
E_VDW	src/forcefields/forcefielduff.cpp	/^  double OBForceFieldUFF::E_VDW()$/;"	f	class:OpenBabel::OBForceFieldUFF
E_VDW	src/forcefields/forcefielduff.h	/^    double E_VDW(bool gradients = true)$/;"	f	class:OpenBabel::OBForceFieldUFF
Eab	src/forcefields/forcefieldgaff.h	/^      double Eab, RVDWab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationGaff
Edge	include/inchi/ichi_bns.h	/^typedef S_SHORT  Edge[2];         \/* Edge[0] = vertex1, Edge[1] = iedge or -(1+vertex1) if vertex2 = s or t *\/$/;"	t
EdgeFlow	include/inchi/ichi_bns.h	/^typedef S_SHORT EdgeFlow;$/;"	t
EdgeIndex	include/inchi/ichi_bns.h	/^typedef S_SHORT  EdgeIndex;$/;"	t
EditInchi	src/formats/inchiformat.cpp	/^bool InChIFormat::EditInchi(std::string& inchi, std::string& spec)$/;"	f	class:OpenBabel::InChIFormat
Efficiencies	include/openbabel/kinetics.h	/^  std::map<std::string,double> Efficiencies;$/;"	m	class:OpenBabel::OBRateData
ElData	src/formats/libinchi/util.c	/^const ELDATA ElData[] = {$/;"	v
Elapsed	include/openbabel/obutil.h	/^    double Elapsed()$/;"	f	class:OpenBabel::OBStopwatch
Electronegativity	src/charges/qeq.h	/^  VectorXd Electronegativity, Voltage, Charge;$/;"	m	class:OpenBabel::QEqCharges
Electronegativity	src/charges/qtpie.h	/^  VectorXd Electronegativity, Voltage, Charge;$/;"	m	class:OpenBabel::QTPIECharges
ElectronicData	include/openbabel/base.h	/^      ElectronicData =    19,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
ElectronicTransitionData	include/openbabel/base.h	/^      ElectronicTransitionData = 29,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
ElemDesc	include/openbabel/residue.h	/^  EXTERN char ElemDesc[MAXELEM][4];$/;"	m	namespace:OpenBabel
ElemDesc	src/residue.cpp	/^  char ElemDesc[MAXELEM][4] = {$/;"	m	namespace:OpenBabel	file:
ElemNo	include/openbabel/residue.h	/^  EXTERN unsigned int ElemNo;$/;"	m	namespace:OpenBabel
ElemNo	src/residue.cpp	/^  unsigned int ElemNo = MINELEM;$/;"	m	namespace:OpenBabel	file:
Element	include/openbabel/data.h	/^    std::string Element() { return _element; }$/;"	f	class:OpenBabel::OBAtomHOF
Elements	src/formats/smiley.h	/^  enum Elements {$/;"	g	namespace:Smiley
EliminateChargeSeparationOnHeteroatoms	src/formats/libinchi/ichirvr2.c	/^int EliminateChargeSeparationOnHeteroatoms( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
EliminateDerivNotInList	src/formats/libinchi/ichinorm.c	/^int EliminateDerivNotInList( inp_ATOM *at, DERIV_AT *da, int num_atoms )$/;"	f
EliminateNitrogen5Val3Bonds	src/formats/libinchi/ichirvr2.c	/^int EliminateNitrogen5Val3Bonds(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
EliminatePlusMinusChargeAmbiguity	src/formats/libinchi/ichi_bns.c	/^int EliminatePlusMinusChargeAmbiguity( BN_STRUCT *pBNS, int num_atoms )$/;"	f
EmbedCML	src/formats/svgformat.cpp	/^bool SVGFormat::EmbedCML(OBMol* pmol, OBConversion* pConv, ostream* ofs)$/;"	f	class:OpenBabel::SVGFormat
EmbedScript	src/formats/svgformat.cpp	/^bool SVGFormat::EmbedScript(ostream& ofs)$/;"	f	class:OpenBabel::SVGFormat
Empty	include/openbabel/bitvec.h	/^      bool Empty() const   { return(IsEmpty()); }$/;"	f	class:OpenBabel::OBBitVec
Empty	include/openbabel/generic.h	/^    bool Empty()    {      return(_bc.first == 0 && _bc.second == 0);    }$/;"	f	class:OpenBabel::OBTorsion
Empty	include/openbabel/mol.h	/^    bool Empty()                       { return(_natoms == 0);          }$/;"	f	class:OpenBabel::OBMol
Empty	include/openbabel/parsmart.h	/^    bool         Empty() const     {      return(_pat == NULL);    }$/;"	f	class:OpenBabel::OBSmartsPattern
EnableAllPairs	include/openbabel/forcefield.h	/^    void EnableAllPairs()$/;"	f	class:OpenBabel::OBForceField
EnableCutOff	include/openbabel/forcefield.h	/^    void EnableCutOff(bool enable)$/;"	f	class:OpenBabel::OBForceField
EnableStaticPlugins	src/plugin.cpp	/^std::vector<std::string> EnableStaticPlugins()$/;"	f	namespace:OpenBabel
End	include/openbabel/plugin.h	/^  static PluginIterator End(const char* PluginID)$/;"	f	class:OpenBabel::OBPlugin
End	src/formats/xml/cdxmlformat.cpp	/^  int Begin, End, Order, Flag; \/\/ Data for current bond$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
EndAtoms	include/openbabel/mol.h	/^    OBAtomIterator EndAtoms()    { return _vatom.begin() + NumAtoms() ; }$/;"	f	class:OpenBabel::OBMol
EndAtoms	include/openbabel/residue.h	/^    OBAtomIterator EndAtoms()     { return _atoms.end();   }$/;"	f	class:OpenBabel::OBResidue
EndBit	include/openbabel/bitvec.h	/^      int EndBit() const {  return -1; }$/;"	f	class:OpenBabel::OBBitVec
EndBonds	include/openbabel/atom.h	/^      OBBondIterator EndBonds()$/;"	f	class:OpenBabel::OBAtom
EndBonds	include/openbabel/mol.h	/^    OBBondIterator EndBonds()     { return _vbond.begin() + NumBonds() ; }$/;"	f	class:OpenBabel::OBMol
EndCanvas	src/depict/svgpainter.cpp	/^  void SVGPainter::EndCanvas()$/;"	f	class:OpenBabel::SVGPainter
EndData	include/openbabel/base.h	/^      OBDataIterator  EndData()$/;"	f	class:OpenBabel::OBBase
EndElement	include/openbabel/xml.h	/^      virtual bool EndElement(const std::string& ElName){return false;};$/;"	f	class:OpenBabel::XMLBaseFormat
EndElement	src/formats/xml/cdxmlformat.cpp	/^bool ChemDrawXMLFormat::EndElement(const string& name)$/;"	f	class:OpenBabel::ChemDrawXMLFormat
EndElement	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::EndElement(const string& name)$/;"	f	class:OpenBabel::CMLFormat
EndElement	src/formats/xml/cmlreactformat.cpp	/^bool CMLReactFormat::EndElement(const string& name)$/;"	f	class:OpenBabel::CMLReactFormat
EndElement	src/formats/xml/pubchem.cpp	/^bool PubChemFormat::EndElement(const string& name)$/;"	f	class:OpenBabel::PubChemFormat
EndMList	include/openbabel/parsmart.h	/^    std::vector<std::vector<int> >::iterator EndMList()$/;"	f	class:OpenBabel::OBSmartsPattern
EndModify	src/mol.cpp	/^  void OBMol::EndModify(bool nukePerceivedData)$/;"	f	class:OpenBabel::OBMol
EndNumber	include/openbabel/obconversion.h	/^      unsigned int	  EndNumber;$/;"	m	class:OpenBabel::OBConversion
EndPoints	include/openbabel/generic.h	/^    OBFreeGridPointIterator EndPoints() $/;"	f	class:OpenBabel::OBFreeGrid
EndResidues	include/openbabel/mol.h	/^    OBResidueIterator EndResidues()   { return _residue.end();   }$/;"	f	class:OpenBabel::OBMol
EndRings	include/openbabel/generic.h	/^    std::vector<OBRing*>::iterator EndRings()$/;"	f	class:OpenBabel::OBRingData
EndRings	include/openbabel/ring.h	/^    std::vector<OBRing*>::iterator EndRings()$/;"	f	class:OpenBabel::OBRingSearch
EndRotamer	include/openbabel/rotamer.h	/^    std::vector<unsigned char*>::iterator EndRotamer()$/;"	f	class:OpenBabel::OBRotamerList
EndRotors	include/openbabel/rotor.h	/^    OBRotorIterator EndRotors()     { return(_rotor.end());   }$/;"	f	class:OpenBabel::OBRotorList
EndTag	include/openbabel/xml.h	/^      virtual const char* EndTag(){return ">";};$/;"	f	class:OpenBabel::XMLBaseFormat
EndTag	src/formats/xml/cdxmlformat.cpp	/^	virtual const char* EndTag(){ return "\/fragment>"; };$/;"	f	class:OpenBabel::ChemDrawXMLFormat
EndTag	src/formats/xml/cmlformat.cpp	/^    virtual const char* EndTag(){ return "\/molecule>"; };$/;"	f	class:OpenBabel::CMLFormat
EndTag	src/formats/xml/cmlreactformat.cpp	/^  virtual const char* EndTag(){ return "\/reaction>"; };$/;"	f	class:OpenBabel::CMLReactFormat
EndTag	src/formats/xml/pubchem.cpp	/^	virtual const char* EndTag(){ return "\/PC-Compound>"; };$/;"	f	class:OpenBabel::PubChemFormat
EndTorIncrement	include/openbabel/rotor.h	/^    std::vector<double>::iterator EndTorIncrement()$/;"	f	class:OpenBabel::OBRotor
Energy	src/forcefields/forcefieldgaff.cpp	/^  double OBForceFieldGaff::Energy(bool gradients)$/;"	f	class:OpenBabel::OBForceFieldGaff
Energy	src/forcefields/forcefieldghemical.cpp	/^  double OBForceFieldGhemical::Energy(bool gradients)$/;"	f	class:OpenBabel::OBForceFieldGhemical
Energy	src/forcefields/forcefieldmm2.cpp	/^  double OBForceFieldMM2::Energy()$/;"	f	class:OpenBabel::OBForceFieldMM2
Energy	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::Energy(bool gradients)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
Energy	src/forcefields/forcefielduff.cpp	/^  double OBForceFieldUFF::Energy(bool gradients)$/;"	f	class:OpenBabel::OBForceFieldUFF
EnergyData	include/openbabel/base.h	/^      EnergyData    =      2,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
EnsureEndElement	src/formats/xml/cdxmlformat.cpp	/^void ChemDrawXMLFormat::EnsureEndElement(void)$/;"	f	class:OpenBabel::ChemDrawXMLFormat
EnsureInit	include/openbabel/stereo/stereo.h	/^      inline void EnsureInit() { if (!m_init) InitMaps(); }$/;"	f	class:OpenBabel::OBStereoFacade
Entry	src/stereo/perception.cpp	/^    struct Entry {$/;"	s	struct:OpenBabel::StereoInverted	file:
Enumerate	src/tautomer.cpp	/^    void Enumerate(OBMol *mol, TautomerFunctor &functor, bool canonical)$/;"	f	struct:OpenBabel::TautomerImpl
EnumerateRecursive	src/tautomer.cpp	/^    void EnumerateRecursive(OBMol *mol, std::vector<Type> &atomTypes, std::vector<Type> &bondTypes, const std::vector<OBAtom*> &canonAtoms,$/;"	f	struct:OpenBabel::TautomerImpl
EnumerateTautomers	src/tautomer.cpp	/^  void EnumerateTautomers(OBMol *mol, TautomerFunctor &functor)$/;"	f	namespace:OpenBabel
EqLvl2	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::EqLvl2(int type)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
EqLvl3	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::EqLvl3(int type)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
EqLvl4	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::EqLvl4(int type)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
EqLvl5	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::EqLvl5(int type)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
EqlOrigInfo	src/formats/libinchi/ichiprt2.c	/^int EqlOrigInfo( INChI_Aux *a1, INChI_Aux *a2 )$/;"	f
Eql_INChI_Aux_Equ	src/formats/libinchi/ichiprt2.c	/^int Eql_INChI_Aux_Equ( INChI_Aux *a1, int eql1, INChI_Aux *a2, int eql2 )$/;"	f
Eql_INChI_Aux_Num	src/formats/libinchi/ichiprt2.c	/^int Eql_INChI_Aux_Num( INChI_Aux *a1, int eql1, INChI_Aux *a2, int eql2 )$/;"	f
Eql_INChI_Isotopic	src/formats/libinchi/ichiprt2.c	/^int Eql_INChI_Isotopic( INChI *i1, INChI *i2 )$/;"	f
Eql_INChI_Stereo	src/formats/libinchi/ichiprt2.c	/^int Eql_INChI_Stereo( INChI_Stereo *s1, int eql1, INChI_Stereo *s2, int eql2, int bRelRac )$/;"	f
EquString	src/formats/libinchi/ichiprt1.c	/^const char *EquString( int EquVal )$/;"	f
EquivalentBondExpr	src/parsmart.cpp	/^  static bool EquivalentBondExpr( BondExpr *expr1, BondExpr *expr2 )$/;"	f	namespace:OpenBabel
Er	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
ErrMsg	src/formats/libinchi/runichi.c	/^const char *ErrMsg( int nErrorCode )$/;"	f
ErrorCode	src/formats/smiley.h	/^  enum ErrorCode {$/;"	g	namespace:Smiley
ErrorInfo	include/openbabel/json/json.h	/^      class ErrorInfo$/;"	c	class:Json::Reader
Errors	include/openbabel/json/json.h	/^      typedef std::deque<ErrorInfo> Errors;$/;"	t	class:Json::Reader
Es	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Eu	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Eval	include/openbabel/grid.h	/^    virtual double  Eval(OBMol &mol){return Eval(mol.GetCoordinates());}$/;"	f	class:OpenBabel::OBScoreGrid
Eval	include/openbabel/grid.h	/^    virtual double  Eval(double *)    {       return -1;       }$/;"	f	class:OpenBabel::OBScoreGrid
EvalAtomExpr	src/parsmart.cpp	/^  bool OBSmartsMatcher::EvalAtomExpr(AtomExpr *expr,OBAtom *atom)$/;"	f	class:OpenBabel::OBSmartsMatcher
EvalBondExpr	src/parsmart.cpp	/^  bool OBSmartsMatcher::EvalBondExpr(BondExpr *expr,OBBond *bond)$/;"	f	class:OpenBabel::OBSmartsMatcher
EvaluateChargeChanges	src/formats/libinchi/ichirvr1.c	/^int EvaluateChargeChanges( BN_STRUCT *pBNS, VAL_AT *pVA, int *pnDeltaH, int *pnDeltaCharge, int *pnNumVisitedAtoms )$/;"	f
Exception	src/formats/smiley.h	/^      Exception(Type type, ErrorCode errorCode, const std::string &what, std::size_t pos, std::size_t length = 1)$/;"	f	class:Smiley::Exception
Exception	src/formats/smiley.h	/^  class Exception$/;"	c	namespace:Smiley
ExcludeSmallRing	src/typer.cpp	/^  void OBAromaticTyper::ExcludeSmallRing(OBMol &mol)$/;"	f	class:OpenBabel::OBAromaticTyper
Expand	src/GUI/OBGUI.cpp	/^int  CFilenames::Expand(std::vector<std::string>& filelist)$/;"	f	class:CFilenames
Expand	src/alias.cpp	/^  bool AliasData::Expand(OBMol& mol, const unsigned int atomindex)$/;"	f	class:OpenBabel::AliasData
ExpandConformerList	src/rotamer.cpp	/^  void OBRotamerList::ExpandConformerList(OBMol &mol,vector<double*> &clist)$/;"	f	class:OpenBabel::OBRotamerList
ExpandKekule	src/mol.cpp	/^  bool ExpandKekule(OBMol &mol, vector<OBAtom*> &va,$/;"	f	namespace:OpenBabel
ExplicitHydrogenCount	src/atom.cpp	/^  unsigned int OBAtom::ExplicitHydrogenCount(bool ExcludeIsotopes) const$/;"	f	class:OpenBabel::OBAtom
ExtendInvariants	src/graphsym.cpp	/^  int OBGraphSymPrivate::ExtendInvariants(std::vector<std::pair<OBAtom*, unsigned int> > &symmetry_classes)$/;"	f	class:OpenBabel::OBGraphSymPrivate
ExtendedCisTrans	include/openbabel/stereo/stereo.h	/^      ExtendedCisTrans    = (1<<1), \/\/!< allene, biphenyl, ...$/;"	e	enum:OpenBabel::OBStereo::Type
ExtendedTetrahedral	include/openbabel/stereo/stereo.h	/^      ExtendedTetrahedral = (1<<4), \/\/!< extended tetrahedral$/;"	e	enum:OpenBabel::OBStereo::Type
ExternalBond	src/formats/smilesformat.cpp	/^    struct ExternalBond$/;"	s	class:OpenBabel::OBSmilesParser	file:
ExternalBondData	include/openbabel/base.h	/^      ExternalBondData =   5,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
ExternalID	include/libxml/entities.h	/^    const xmlChar    *ExternalID;	\/* External identifier for PUBLIC *\/$/;"	m	struct:_xmlEntity
ExternalID	include/libxml/tree.h	/^    const xmlChar *ExternalID;	\/* External identifier for PUBLIC DTD *\/$/;"	m	struct:_xmlDtd
ExtraFormat	src/ops/xout.cpp	/^  ExtraFormat(OBConversion* pOrigConv, OBConversion* pExtraConv)$/;"	f	class:OpenBabel::ExtraFormat
ExtraFormat	src/ops/xout.cpp	/^class ExtraFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
ExtraMols	src/ops/opisomorph.h	/^  std::vector<OBBase*> ExtraMols; \/\/extra OBMols passed in via ProcessVec() (FastSearchFormat)$/;"	m	class:OpenBabel::OpNewS
Extract0DParities	include/inchi/aux2atom.h	/^int Extract0DParities( inp_ATOM *at, int nNumAtoms, inchi_Stereo0D *stereo0D,$/;"	f
ExtractAll	src/formats/cifformat.cpp	/^  void CIFData::ExtractAll()$/;"	f	class:OpenBabel::CIFData
ExtractAtomicPositions	src/formats/cifformat.cpp	/^  void CIFData::ExtractAtomicPositions()$/;"	f	class:OpenBabel::CIFData
ExtractBonds	src/formats/cifformat.cpp	/^  void CIFData::ExtractBonds()$/;"	f	class:OpenBabel::CIFData
ExtractCharges	src/formats/cifformat.cpp	/^  void CIFData::ExtractCharges()$/;"	f	class:OpenBabel::CIFData
ExtractConnectedComponent	src/formats/libinchi/strutil.c	/^int ExtractConnectedComponent(  inp_ATOM *at, int num_at, int component_number, inp_ATOM *component_at )$/;"	f
ExtractName	src/formats/cifformat.cpp	/^  void CIFData::ExtractName()$/;"	f	class:OpenBabel::CIFData
ExtractOneStructure	src/formats/libinchi/inchi_dll.c	/^int ExtractOneStructure( STRUCT_DATA *sd, INPUT_PARMS *ip, char *szTitle,$/;"	f
ExtractSpacegroup	src/formats/cifformat.cpp	/^  void CIFData::ExtractSpacegroup()$/;"	f	class:OpenBabel::CIFData
ExtractSubstruct	src/ops/opisomorph.cpp	/^bool ExtractSubstruct(OBMol* pmol, const std::vector<int>& atomIdxs)$/;"	f	namespace:OpenBabel
ExtractUnitCell	src/formats/cifformat.cpp	/^  void CIFData::ExtractUnitCell()$/;"	f	class:OpenBabel::CIFData
F	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
F0	src/formats/libinchi/sha2.c	120;"	d	file:
F1	src/formats/libinchi/sha2.c	121;"	d	file:
FAR	include/zconf.h	185;"	d
FAR	include/zconf.h	187;"	d
FAR	include/zconf.h	194;"	d
FAR	include/zconf.h	196;"	d
FAR	include/zconf.h	220;"	d
FAR	include/zconf.h	257;"	d
FAR	include/zconf.h	311;"	d
FASTAFormat	src/formats/fastaformat.cpp	/^    FASTAFormat() {$/;"	f	class:OpenBabel::FASTAFormat
FASTAFormat	src/formats/fastaformat.cpp	/^  class FASTAFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FCHKFormat	src/formats/fchkformat.cpp	/^    FCHKFormat()$/;"	f	class:OpenBabel::FCHKFormat
FCHKFormat	src/formats/fchkformat.cpp	/^  class FCHKFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FEATFormat	src/formats/featformat.cpp	/^    FEATFormat()$/;"	f	class:OpenBabel::FEATFormat
FEATFormat	src/formats/featformat.cpp	/^  class FEATFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FHIaimsFormat	src/formats/fhiaimsformat.cpp	/^    FHIaimsFormat()$/;"	f	class:OpenBabel::FHIaimsFormat
FHIaimsFormat	src/formats/fhiaimsformat.cpp	/^class FHIaimsFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FILE_SEP_CHAR	include/openbabel/tokenst.h	65;"	d
FILE_SEP_CHAR	include/openbabel/tokenst.h	67;"	d
FIND_CANON_NE_EQUITABLE	include/inchi/mode.h	502;"	d
FIND_RING_SYSTEMS	include/inchi/inchi_api.h	48;"	d
FIND_RING_SYSTEMS	include/inchi/mode.h	551;"	d
FIND_RING_SYSTEMS	include/inchi/mode.h	570;"	d
FIND_RING_SYSTEMS	include/inchi/mode.h	572;"	d
FIND_RING_SYSTEMS	include/inchi_api.h	49;"	d
FIND_RINS_SYSTEMS_DISTANCES	include/inchi/inchi_api.h	51;"	d
FIND_RINS_SYSTEMS_DISTANCES	include/inchi/mode.h	554;"	d
FIND_RINS_SYSTEMS_DISTANCES	include/inchi/mode.h	579;"	d
FIND_RINS_SYSTEMS_DISTANCES	include/inchi/mode.h	580;"	d
FIND_RINS_SYSTEMS_DISTANCES	include/inchi_api.h	52;"	d
FIRSTIDX	src/formats/xtcformat.cpp	40;"	d	file:
FIRST_CENTER2	src/formats/libinchi/strutil.c	142;"	d	file:
FIRST_NEIGHB2	src/formats/libinchi/strutil.c	141;"	d	file:
FIXFormat	src/formats/smilesformat.cpp	/^    FIXFormat()$/;"	f	class:OpenBabel::FIXFormat
FIXFormat	src/formats/smilesformat.cpp	/^  class FIXFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FIX_2D_STEREO_BORDER_CASE	include/inchi/mode.h	297;"	d
FIX_ADD_PROTON_FOR_ADP	include/inchi/ichirvrs.h	906;"	d
FIX_ADJ_RAD	include/inchi/mode.h	347;"	d
FIX_AROM_RADICAL	include/inchi/mode.h	330;"	d
FIX_AVOID_ADP	include/inchi/mode.h	305;"	d
FIX_BOND23_IN_TAUT	include/inchi/mode.h	302;"	d
FIX_BOND_ADD_ALLOC	src/formats/libinchi/ichirvr2.c	2814;"	d	file:
FIX_CANCEL_CHARGE_COUNT_BUG	include/inchi/mode.h	296;"	d
FIX_CPOINT_BOND_CAP	src/formats/libinchi/ichi_bns.c	65;"	d	file:
FIX_CPOINT_BOND_CAP2	include/inchi/mode.h	309;"	d
FIX_ChCh_CONSTIT_CANON_BUG	include/inchi/mode.h	282;"	d
FIX_ChCh_STEREO_CANON_BUG	include/inchi/mode.h	280;"	d
FIX_DALKE_BUGS	include/inchi/mode.h	317;"	d
FIX_EITHER_DB_AS_NONSTEREO	include/inchi/mode.h	301;"	d
FIX_EITHER_STEREO_IN_AUX_INFO	include/inchi/mode.h	283;"	d
FIX_EMPTY_LAYER_BUG	include/inchi/mode.h	300;"	d
FIX_H_CHECKING_TAUT	include/inchi/mode.h	407;"	d
FIX_I2I_STEREOCONVERSION_BUG	include/inchi/mode.h	319;"	d
FIX_I2I_STEREOCONVERSION_BUG2	include/inchi/mode.h	320;"	d
FIX_I2I_STEREOCONVERSION_BUG3	include/inchi/mode.h	321;"	d
FIX_ISO_FIXEDH_BUG	include/inchi/mode.h	315;"	d
FIX_ISO_FIXEDH_BUG_READ	include/inchi/mode.h	316;"	d
FIX_KEEP_H_ON_NH_ANION	include/inchi/mode.h	304;"	d
FIX_NORM_BUG_ADD_ION_PAIR	include/inchi/mode.h	284;"	d
FIX_NP_MINUS_BUG	include/inchi/mode.h	342;"	d
FIX_NUM_TG	include/inchi/mode.h	307;"	d
FIX_N_MINUS_NORN_BUG	include/inchi/mode.h	295;"	d
FIX_N_V_METAL_BONDS_GPF	include/inchi/mode.h	288;"	d
FIX_ODD_THINGS_REM_Plus_BUG	include/inchi/mode.h	294;"	d
FIX_P_IV_Plus_O_Minus	src/formats/libinchi/strutil.c	61;"	d	file:
FIX_READ_AUX_MEM_LEAK	include/inchi/mode.h	286;"	d
FIX_READ_LONG_LINE_BUG	include/inchi/mode.h	287;"	d
FIX_REM_ION_PAIRS_Si_BUG	include/inchi/mode.h	298;"	d
FIX_REM_PROTON_COUNT_BUG	include/inchi/mode.h	285;"	d
FIX_STEREO_BOND_ORDER	include/inchi/ichirvrs.h	120;"	d
FIX_STEREO_SCALING_BUG	include/inchi/mode.h	299;"	d
FIX_TACN_POSSIBLE_BUG	include/inchi/mode.h	303;"	d
FIX_TERM_H_CHRG_BUG	include/inchi/mode.h	323;"	d
FIX_TRANSPOSITION_CHARGE_BUG	include/inchi/mode.h	318;"	d
FLAG_FORCE_SALT_TAUT	include/inchi/ichitaut.h	199;"	d
FLAG_FORCE_SALT_TAUT	include/inchi/ichitaut.h	205;"	d
FLAG_INP_AT_CHIRAL	include/inchi/inpdef.h	282;"	d
FLAG_INP_AT_NONCHIRAL	include/inchi/inpdef.h	283;"	d
FLAG_NORM_CONSIDER_TAUT	include/inchi/ichitaut.h	189;"	d
FLAG_PROTON_AC_HARD_ADDED	include/inchi/ichitaut.h	184;"	d
FLAG_PROTON_AC_HARD_REMOVED	include/inchi/ichitaut.h	183;"	d
FLAG_PROTON_AC_SIMPLE_ADDED	include/inchi/ichitaut.h	181;"	d
FLAG_PROTON_AC_SIMPLE_REMOVED	include/inchi/ichitaut.h	182;"	d
FLAG_PROTON_CHARGE_CANCEL	include/inchi/ichitaut.h	185;"	d
FLAG_PROTON_NPO_SIMPLE_REMOVED	include/inchi/ichitaut.h	179;"	d
FLAG_PROTON_NP_HARD_REMOVED	include/inchi/ichitaut.h	180;"	d
FLAG_PROTON_SINGLE_REMOVED	include/inchi/ichitaut.h	186;"	d
FLAG_SET_INP_AT_CHIRAL	include/inchi/inpdef.h	284;"	d
FLAG_SET_INP_AT_NONCHIRAL	include/inchi/inpdef.h	285;"	d
FLAG_SORT_PRINT_NO_IFIX_H_BAS	include/inchi/strutil.h	323;"	d
FLAG_SORT_PRINT_NO_IFIX_H_REC	include/inchi/strutil.h	324;"	d
FLAG_SORT_PRINT_NO_NFIX_H_BAS	include/inchi/strutil.h	321;"	d
FLAG_SORT_PRINT_NO_NFIX_H_REC	include/inchi/strutil.h	322;"	d
FLAG_SORT_PRINT_ReChI_PREFIX	include/inchi/strutil.h	325;"	d
FLAG_SORT_PRINT_TRANSPOS_BAS	include/inchi/strutil.h	319;"	d
FLAG_SORT_PRINT_TRANSPOS_REC	include/inchi/strutil.h	320;"	d
FMTOA	src/formats/yasaraformat.cpp	42;"	d	file:
FOR	include/openbabel/residue.h	/^      FOR   = 45,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
FORCE_ANSI	src/formats/libinchi/ichi_io.c	823;"	d	file:
FORCE_UNICODE	src/formats/libinchi/ichi_io.c	824;"	d	file:
FOR_ANGLES_OF_MOL	include/openbabel/obiter.h	409;"	d
FOR_ATOMS_OF_MOL	include/openbabel/obiter.h	399;"	d
FOR_ATOMS_OF_RESIDUE	include/openbabel/obiter.h	404;"	d
FOR_BFS_OF_MOL	include/openbabel/obiter.h	406;"	d
FOR_BONDBFS_OF_MOL	include/openbabel/obiter.h	407;"	d
FOR_BONDS_OF_ATOM	include/openbabel/obiter.h	402;"	d
FOR_BONDS_OF_MOL	include/openbabel/obiter.h	400;"	d
FOR_DFS_OF_MOL	include/openbabel/obiter.h	405;"	d
FOR_NBORS_OF_ATOM	include/openbabel/obiter.h	401;"	d
FOR_PAIRS_OF_MOL	include/openbabel/obiter.h	411;"	d
FOR_RESIDUES_OF_MOL	include/openbabel/obiter.h	403;"	d
FOR_RINGS_OF_MOL	include/openbabel/obiter.h	408;"	d
FOR_TORSIONS_OF_MOL	include/openbabel/obiter.h	410;"	d
FPSFormat	src/formats/fpsformat.cpp	/^    FPSFormat() {OBConversion::RegisterFormat("fps",this);}$/;"	f	class:OpenBabel::FPSFormat
FPSFormat	src/formats/fpsformat.cpp	/^  class FPSFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FPT_NOINFO	include/openbabel/fingerprint.h	/^  enum FptFlag{FPT_UNIQUEBITS=1, FPT_NOINFO=2};$/;"	e	enum:OpenBabel::OBFingerprint::FptFlag
FPT_UNIQUEBITS	include/openbabel/fingerprint.h	/^  enum FptFlag{FPT_UNIQUEBITS=1, FPT_NOINFO=2};$/;"	e	enum:OpenBabel::OBFingerprint::FptFlag
FREE_ARRAY	src/formats/libinchi/ichican2.c	3601;"	d	file:
FREE_ARRAY	src/formats/libinchi/ichican2.c	3634;"	d	file:
FREE_ARRAY	src/formats/libinchi/ichican2.c	5093;"	d	file:
FREE_ARRAY	src/formats/libinchi/ichican2.c	5167;"	d	file:
FREE_CONTABLE	src/formats/libinchi/ichican2.c	3600;"	d	file:
FREE_CONTABLE	src/formats/libinchi/ichican2.c	3633;"	d	file:
FREE_CONTABLE	src/formats/libinchi/ichican2.c	5092;"	d	file:
FREE_CONTABLE	src/formats/libinchi/ichican2.c	5166;"	d	file:
FREQUENCIES	src/formats/gamessukformat.cpp	/^    enum RunType_t { UNKNOWN, SINGLEPOINT, OPTXYZ, OPTZMAT, SADDLE, FREQUENCIES };$/;"	e	enum:OpenBabel::GAMESSUKOutputFormat::RunType_t	file:
FREQUENCY_PATTERN	src/formats/nwchemformat.cpp	/^static const char* FREQUENCY_PATTERN = "NWChem Nuclear Hessian and Frequency Analysis";$/;"	m	namespace:OpenBabel	file:
FTCN	include/inchi/ichicant.h	/^} FTCN;$/;"	t	typeref:struct:tagFixHOrTautCanonNumbering
FWPRINT	src/formats/libinchi/runichi.c	/^void (*FWPRINT) (const char * format, va_list argptr )=NULL;$/;"	v
False	src/rand.cpp	46;"	d	file:
FastRotorSearch	src/forcefield.cpp	/^  int OBForceField::FastRotorSearch(bool permute)$/;"	f	class:OpenBabel::OBForceField
FastSearch	include/openbabel/fingerprint.h	/^class OBFPRT FastSearch$/;"	c	namespace:OpenBabel
FastSearchFormat	src/formats/fastsearchformat.cpp	/^FastSearchFormat() : fsi(NULL)$/;"	f	class:OpenBabel::FastSearchFormat
FastSearchFormat	src/formats/fastsearchformat.cpp	/^class FastSearchFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
FastSearchIndexer	include/openbabel/fingerprint.h	/^class OBFPRT FastSearchIndexer$/;"	c	namespace:OpenBabel
FastSearchIndexer	src/fingerprint.cpp	/^  FastSearchIndexer::FastSearchIndexer(FptIndex* pindex, std::ostream* os, int nmols)$/;"	f	class:OpenBabel::FastSearchIndexer
FastSearchIndexer	src/fingerprint.cpp	/^  FastSearchIndexer::FastSearchIndexer(string& datafilename, ostream* os,$/;"	f	class:OpenBabel::FastSearchIndexer
FastSingleMatch	src/parsmart.cpp	/^  void OBSmartsMatcher::FastSingleMatch(OBMol &mol, const Pattern *pat,$/;"	f	class:OpenBabel::OBSmartsMatcher
FastWriter	include/openbabel/json/json.h	/^   class JSON_API FastWriter : public Writer$/;"	c	namespace:Json
FastWriter	src/formats/json/jsoncpp.cpp	/^FastWriter::FastWriter()$/;"	f	class:Json::FastWriter
FatalAllocationError	src/parsmart.cpp	/^  static void FatalAllocationError( const char *ptr )$/;"	f	namespace:OpenBabel
FatalMemoryError	src/chains.cpp	/^  static void FatalMemoryError(void)$/;"	f	namespace:OpenBabel
Fe	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
Features	include/openbabel/json/json.h	/^   class JSON_API Features$/;"	c	namespace:Json
Features	src/formats/json/jsoncpp.cpp	/^Features::Features()$/;"	f	class:Json::Features
FenskeZmatFormat	src/formats/fhformat.cpp	/^    FenskeZmatFormat()$/;"	f	class:OpenBabel::FenskeZmatFormat
FenskeZmatFormat	src/formats/fhformat.cpp	/^class FenskeZmatFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FillAllStereoDescriptors	src/formats/libinchi/ichicans.c	/^int FillAllStereoDescriptors( sp_ATOM *at, int num_atoms, const AT_RANK *nCanonRank, const AT_RANK *nAtomNumberCanon, CANON_STAT *pCS )$/;"	f
FillAngleArray	src/generic.cpp	/^  bool OBAngleData::FillAngleArray(std::vector<std::vector<unsigned int> > &angles)$/;"	f	class:OpenBabel::OBAngleData
FillAngleArray	src/generic.cpp	/^  unsigned int OBAngleData::FillAngleArray(int **angles, unsigned int &size)$/;"	f	class:OpenBabel::OBAngleData
FillChargeVectors	src/chargemodel.cpp	/^  void OBChargeModel::FillChargeVectors(OBMol &mol)$/;"	f	class:OpenBabel::OBChargeModel
FillCompositeTableParms	src/formats/libinchi/runichi.c	/^void FillCompositeTableParms( SET_DRAW_PARMS *sdp, AT_NUMB StereoFlags,$/;"	f
FillIsotopicAtLinearCT	src/formats/libinchi/ichicano.c	/^int FillIsotopicAtLinearCT(int num_atoms, sp_ATOM* at, $/;"	f
FillMaxMinClock	src/formats/libinchi/ichicano.c	/^static void FillMaxMinClock(void)$/;"	f	file:
FillOrth	src/math/matrix3x3.cpp	/^  void matrix3x3::FillOrth(double Alpha,double Beta, double Gamma,$/;"	f	class:OpenBabel::matrix3x3
FillOutAtomInvariant2	src/formats/libinchi/ichican2.c	/^void FillOutAtomInvariant2( sp_ATOM* at, int num_atoms, int num_at_tg, ATOM_INVARIANT2* pAtomInvariant,$/;"	f
FillOutCMP2FHINCHI	src/formats/libinchi/ichirvr4.c	/^int FillOutCMP2FHINCHI( StrFromINChI *pStruct, inp_ATOM *at2, VAL_AT *pVA, INChI *pInChI[], CMP2FHINCHI *pc2i )$/;"	f
FillOutCMP2MHINCHI	src/formats/libinchi/ichirvr4.c	/^int FillOutCMP2MHINCHI( StrFromINChI *pStruct, ALL_TC_GROUPS *pTCGroups, inp_ATOM *at2,$/;"	f
FillOutCanonInfAtom	src/formats/libinchi/ichimake.c	/^int FillOutCanonInfAtom(inp_ATOM *norm_at, INF_ATOM_DATA *inf_norm_at_data, int init_num_at, int bIsotopic,$/;"	f
FillOutCompareMessage	src/formats/libinchi/ichirvr7.c	/^int FillOutCompareMessage( char *szMsg, int nLenMsg, INCHI_MODE bits[] )$/;"	f
FillOutCompositeCanonInfAtom	src/formats/libinchi/ichimake.c	/^int FillOutCompositeCanonInfAtom(COMP_ATOM_DATA *composite_norm_data, INF_ATOM_DATA *inf_norm_at_data,$/;"	f
FillOutExtraFixedHDataInChI	src/formats/libinchi/ichirvr4.c	/^int  FillOutExtraFixedHDataInChI( StrFromINChI *pStruct, INChI *pInChI[] )$/;"	f
FillOutExtraFixedHDataRestr	src/formats/libinchi/ichirvr4.c	/^int  FillOutExtraFixedHDataRestr( StrFromINChI *pStruct )$/;"	f
FillOutINChI	src/formats/libinchi/ichimak2.c	/^int FillOutINChI( INChI *pINChI, INChI_Aux *pINChI_Aux,$/;"	f
FillOutINChIReducedWarn	src/formats/libinchi/inchi_dll_a2.c	/^int FillOutINChIReducedWarn( INChI *pINChI, INChI_Aux *pINChI_Aux,$/;"	f
FillOutInfAtom	src/formats/libinchi/ichimake.c	/^int FillOutInfAtom(inp_ATOM *norm_at, INF_ATOM_DATA *inf_norm_at_data, int init_num_at, int num_removed_H,$/;"	f
FillOutInputInfAtom	src/formats/libinchi/ichimake.c	/^int FillOutInputInfAtom(inp_ATOM *inp_at, INF_ATOM_DATA *inf_at_data, int init_num_at, int num_removed_H,$/;"	f
FillOutOneCanonInfAtom	src/formats/libinchi/ichimake.c	/^int FillOutOneCanonInfAtom(inp_ATOM *inp_norm_at, INF_ATOM_DATA *inf_norm_at_data,$/;"	f
FillOutOrigStruct	src/formats/libinchi/ichiprt1.c	/^int FillOutOrigStruct( ORIG_ATOM_DATA *orig_inp_data, ORIG_STRUCT *pOrigStruct, STRUCT_DATA *sd )$/;"	f
FillOutStereoParities	src/formats/libinchi/ichicans.c	/^int FillOutStereoParities( sp_ATOM *at, int num_atoms, const AT_RANK *nCanonRank, const AT_RANK *nAtomNumberCanon,$/;"	f
FillOutpStructEndpointFromInChI	src/formats/libinchi/ichirvr1.c	/^int FillOutpStructEndpointFromInChI( INChI *pInChI, AT_NUMB **pEndpoint )$/;"	f
FillSingleStereoDescriptors	src/formats/libinchi/ichicans.c	/^int FillSingleStereoDescriptors(sp_ATOM *at, int i, int num_trans, const AT_RANK *nRank$/;"	f
FillTableParms	src/formats/libinchi/runichi.c	/^void FillTableParms( SET_DRAW_PARMS *sdp, INChI **cur_INChI, INChI_Aux **cur_INChI_Aux,$/;"	f
FillTautLinearCT2	src/formats/libinchi/ichicano.c	/^int FillTautLinearCT2(int num_atoms, int num_at_tg, int bIsoTaut,$/;"	f
FillTgDiffHChgFH	src/formats/libinchi/ichirvr3.c	/^int FillTgDiffHChgFH( TgDiffHChgFH tdhc[], int max_tdhc, inp_ATOM at2[],$/;"	f
FillTorsionArray	src/generic.cpp	/^  bool OBTorsionData::FillTorsionArray(std::vector<std::vector<unsigned int> > &torsions)$/;"	f	class:OpenBabel::OBTorsionData
FillUnitCell	src/generic.cpp	/^  void OBUnitCell::FillUnitCell(OBMol *mol)$/;"	f	class:OpenBabel::OBUnitCell
FilterCompare	src/descriptor.cpp	/^bool OBDescriptor::FilterCompare(OBBase* pOb, std::istream& optionText, bool noEval)$/;"	f	class:OpenBabel::OBDescriptor
FilteringInputStream	include/openbabel/lineend.h	/^    explicit FilteringInputStream(istream_reference istream):$/;"	f	class:OpenBabel::FilteringInputStream
FilteringInputStream	include/openbabel/lineend.h	/^class  FilteringInputStream :$/;"	c	namespace:OpenBabel
FilteringInputStreambuf	include/openbabel/lineend.h	/^  FilteringInputStreambuf< Extractor >::FilteringInputStreambuf($/;"	f	class:OpenBabel::FilteringInputStreambuf
FilteringInputStreambuf	include/openbabel/lineend.h	/^  class FilteringInputStreambuf : public std::streambuf$/;"	c	namespace:OpenBabel
Find	src/fingerprint.cpp	/^  bool FastSearch::Find(OBBase* pOb, vector<unsigned int>& SeekPositions,$/;"	f	class:OpenBabel::FastSearch
Find	src/math/spacegroup.cpp	/^  const SpaceGroup * SpaceGroup::Find (SpaceGroup* group)$/;"	f	class:OpenBabel::SpaceGroup
FindAccessibleEndPoints	src/formats/libinchi/ichitaut.c	/^int FindAccessibleEndPoints( T_ENDPOINT *EndPoint, int *nNumEndPoints, T_BONDPOS *BondPos, int *nNumBondPos,$/;"	f
FindAngles	src/mol.cpp	/^  void OBMol::FindAngles()$/;"	f	class:OpenBabel::OBMol
FindAromaticBonds	src/formats/smilesformat.cpp	/^  void OBSmilesParser::FindAromaticBonds(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
FindAromaticBonds	src/formats/smilesformat.cpp	/^  void OBSmilesParser::FindAromaticBonds(OBMol &mol,OBAtom *atom,int depth )$/;"	f	class:OpenBabel::OBSmilesParser
FindAutomorphisms	src/isomorphism.cpp	/^  bool FindAutomorphisms(OBMol *mol, Automorphisms &maps, const OBBitVec &mask, std::size_t maxMemory)$/;"	f	namespace:OpenBabel
FindAutomorphisms	src/isomorphism.cpp	/^  bool FindAutomorphisms(OBMol *mol, Automorphisms &maps, const std::vector<unsigned int> &symClasses, const OBBitVec &mask, std::size_t maxMemory)$/;"	f	namespace:OpenBabel
FindAutomorphisms	src/isomorphism.cpp	/^  void FindAutomorphisms(OBIsomorphismMapper::Functor &functor, OBMol *mol,$/;"	f	namespace:OpenBabel
FindBase	src/formats/libinchi/ichi_bns.c	/^Vertex FindBase( Vertex u, Vertex *BasePtr )$/;"	f
FindBondedPiece	src/formats/pdbqtformat.cpp	/^  bool FindBondedPiece(const vector<int>& root, const vector<int>& branched, unsigned int& root_atom, unsigned int& branch_atom,$/;"	f	namespace:OpenBabel
FindChildren	src/mol.cpp	/^  void OBMol::FindChildren(vector<OBAtom*> &children,OBAtom *bgn,OBAtom *end)$/;"	f	class:OpenBabel::OBMol
FindChildren	src/mol.cpp	/^  void OBMol::FindChildren(vector<int> &children,int first,int second)$/;"	f	class:OpenBabel::OBMol
FindChiralCenters	include/openbabel/mol.h	/^    void FindChiralCenters() { IsChiral(); }$/;"	f	class:OpenBabel::OBMol
FindDef	src/ops/loader.cpp	/^OBPlugin* OBDefine::FindDef(const char* ID)$/;"	f	class:OpenBabel::OBDefine
FindFingerprint	include/openbabel/fingerprint.h	/^static OBFingerprint* FindFingerprint(const char* ID){ return FindType(ID);}$/;"	f	class:OpenBabel::OBFingerprint
FindForceField	include/openbabel/forcefield.h	/^    static OBForceField* FindForceField(const char *ID)$/;"	f	class:OpenBabel::OBForceField
FindForceField	include/openbabel/forcefield.h	/^    static OBForceField* FindForceField(const std::string& ID)$/;"	f	class:OpenBabel::OBForceField
FindFormat	src/obconversion.cpp	/^  OBFormat* OBConversion::FindFormat(const char* ID)$/;"	f	class:OpenBabel::OBConversion
FindFormat	src/obconversion.cpp	/^  OBFormat* OBConversion::FindFormat(const std::string ID)$/;"	f	class:OpenBabel::OBConversion
FindFragments	src/formats/pdbqtformat.cpp	/^  unsigned int FindFragments(OBMol mol, vector <vector <int> >& rigid_fragments)$/;"	f	namespace:OpenBabel
FindInEdgeList	src/formats/libinchi/ichirvr1.c	/^int FindInEdgeList( EDGE_LIST *pEdges, int iedge )$/;"	f
FindLSSR	src/ring.cpp	/^  void OBMol::FindLSSR()$/;"	f	class:OpenBabel::OBMol
FindLargestFragment	src/mol.cpp	/^  void OBMol::FindLargestFragment(OBBitVec &lf)$/;"	f	class:OpenBabel::OBMol
FindMatch	src/fingerprint.cpp	/^ bool FastSearch::FindMatch(OBBase* pOb, vector<unsigned int>& SeekPositions,$/;"	f	class:OpenBabel::FastSearch
FindOrbits	src/canon.cpp	/^    static void FindOrbits(Orbits &orbits, OBMol *mol, const std::vector<unsigned int> &labels1,$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
FindOrphanAromaticAtoms	src/formats/smilesformat.cpp	/^  void OBSmilesParser::FindOrphanAromaticAtoms(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
FindPathCap	src/formats/libinchi/ichi_bns.c	/^int FindPathCap( BN_STRUCT* pBNS, Edge *SwitchEdge, Vertex x, Vertex y, int delta )$/;"	f
FindPathToVertex_s	src/formats/libinchi/ichi_bns.c	/^int FindPathToVertex_s( Vertex x, Edge *SwitchEdge, Vertex *BasePtr, Vertex *Path, int MaxPathLen )$/;"	f
FindRingAtoms	src/graphsym.cpp	/^  void OBGraphSymPrivate::FindRingAtoms(OBBitVec &ring_atoms)$/;"	f	class:OpenBabel::OBGraphSymPrivate
FindRingAtomsAndBonds	src/ring.cpp	/^  void OBMol::FindRingAtomsAndBonds()$/;"	f	class:OpenBabel::OBMol
FindRingAtomsAndBonds2	src/ring.cpp	/^  static unsigned int FindRingAtomsAndBonds2(OBMol &mol)$/;"	f	namespace:OpenBabel
FindRings	src/ring.cpp	/^  static int FindRings(OBAtom *atom, int *avisit, unsigned char *bvisit,$/;"	f	namespace:OpenBabel
FindRotors	src/rotor.cpp	/^  bool OBRotorList::FindRotors(OBMol &mol, bool sampleRingBonds)$/;"	f	class:OpenBabel::OBRotorList
FindSSSR	src/ring.cpp	/^  void OBMol::FindSSSR()$/;"	f	class:OpenBabel::OBMol
FindSimilar	src/fingerprint.cpp	/^  bool FastSearch::FindSimilar(OBBase* pOb, multimap<double, unsigned int>& SeekposMap,$/;"	f	class:OpenBabel::FastSearch
FindSmallestRing	src/bond.cpp	/^  OBRing* OBBond::FindSmallestRing() const$/;"	f	class:OpenBabel::OBBond
FindStereogenicUnits	src/stereo/perception.cpp	/^  OBStereoUnitSet FindStereogenicUnits(OBMol *mol, const std::vector<unsigned int> &symClasses)$/;"	f	namespace:OpenBabel
FindStereogenicUnits	src/stereo/perception.cpp	/^  OBStereoUnitSet FindStereogenicUnits(OBMol *mol,$/;"	f	namespace:OpenBabel
FindSymmetry	src/stereo/perception.cpp	/^  std::vector<unsigned int> FindSymmetry(OBMol *mol)$/;"	f	namespace:OpenBabel
FindToken	include/inchi/aux2atom.h	/^char *FindToken( INCHI_IOSTREAM *inp_molfile, int *bTooLongLine, const char *sToken, int lToken,$/;"	f
FindToken	include/inchi/aux2atom.h	181;"	d
FindTorsions	src/mol.cpp	/^  void OBMol::FindTorsions()$/;"	f	class:OpenBabel::OBMol
FingerprintFormat	src/formats/fingerprintformat.cpp	/^    FingerprintFormat() {OBConversion::RegisterFormat("fpt",this);}$/;"	f	class:OpenBabel::FingerprintFormat
FingerprintFormat	src/formats/fingerprintformat.cpp	/^  class FingerprintFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FirstBit	include/openbabel/bitvec.h	/^      int FirstBit(unsigned bit_offset = 0) const$/;"	f	class:OpenBabel::OBBitVec
FirstLine	src/plugin.cpp	/^string OBPlugin::FirstLine(const char* txt)$/;"	f	class:OpenBabel::OBPlugin
FixAddProtonForADP	src/formats/libinchi/ichirvr4.c	/^int FixAddProtonForADP( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct, inp_ATOM *at,$/;"	f
FixAdjacentRadicals	src/formats/libinchi/strutil.c	/^int FixAdjacentRadicals( int num_inp_atoms, inp_ATOM *at )$/;"	f
FixCanonEquivalenceInfo	src/formats/libinchi/ichicano.c	/^int FixCanonEquivalenceInfo( int num_at_tg, AT_RANK *nSymmRank, AT_RANK *nCurrRank,$/;"	f
FixFixedHRestoredStructure	src/formats/libinchi/ichirvr3.c	/^int FixFixedHRestoredStructure(ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, BN_STRUCT *pBNS, BN_DATA *pBD,$/;"	f
FixLessHydrogenInFormula	src/formats/libinchi/ichirvr4.c	/^int FixLessHydrogenInFormula( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct, inp_ATOM *at,$/;"	f
FixMetal_Nminus_Ominus	src/formats/libinchi/ichirvr2.c	/^int FixMetal_Nminus_Ominus( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
FixMobileHRestoredStructure	src/formats/libinchi/ichirvr5.c	/^int FixMobileHRestoredStructure(ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, BN_STRUCT *pBNS, BN_DATA *pBD,$/;"	f
FixMoreHydrogenInFormula	src/formats/libinchi/ichirvr4.c	/^int FixMoreHydrogenInFormula( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct, inp_ATOM *at,$/;"	f
FixNextRadicals	src/formats/libinchi/strutil.c	/^int FixNextRadicals( int cur_at, inp_ATOM *at )$/;"	f
FixRemoveExtraTautEndpoints	src/formats/libinchi/ichirvr4.c	/^int FixRemoveExtraTautEndpoints( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct, inp_ATOM *at,$/;"	f
FixRestoredStructureStereo	src/formats/libinchi/ichirvr6.c	/^int FixRestoredStructureStereo( INCHI_MODE cmpInChI, ICR *icr, INCHI_MODE cmpInChI2, ICR *icr2,$/;"	f
FixRingStereo	src/builder.cpp	/^  bool OBBuilder::FixRingStereo(std::vector<std::pair<OBStereo::Ref, bool> > atomIds, OBMol &mol,$/;"	f	class:OpenBabel::OBBuilder
FixSb0DParities	src/formats/libinchi/ichister.c	/^int FixSb0DParities( inp_ATOM *at, \/* inp_ATOM *at_removed_H, int num_removed_H,*\/ int chain_length,$/;"	f
FixUnkn0DStereoBonds	src/formats/libinchi/ichister.c	/^int FixUnkn0DStereoBonds(inp_ATOM *at, int num_at)$/;"	f
Fl	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Flag	include/openbabel/bond.h	/^      enum Flag {$/;"	g	class:OpenBabel::OBBond
Flag	src/formats/xml/cdxmlformat.cpp	/^  int Begin, End, Order, Flag; \/\/ Data for current bond$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
FlagSB_0D	include/inchi/inpdef.h	84;"	d
FlagSC_0D	include/inchi/inpdef.h	83;"	d
Flags	include/openbabel/fingerprint.h	/^  virtual unsigned int Flags() { return 0;};$/;"	f	class:OpenBabel::OBFingerprint
Flags	include/openbabel/format.h	/^    virtual unsigned int Flags() { return 0;};$/;"	f	class:OpenBabel::OBFormat
Flags	include/openbabel/inchiformat.h	/^  virtual unsigned int Flags() { return NOTREADABLE;};$/;"	f	class:OpenBabel::InChICompareFormat
Flags	include/openbabel/inchiformat.h	/^  virtual unsigned int Flags() { return NOTREADABLE;};$/;"	f	class:OpenBabel::InChIKeyFormat
Flags	src/fingerprints/finger2.cpp	/^  virtual unsigned int Flags() { return _flags;};$/;"	f	class:OpenBabel::fingerprint2
Flags	src/fingerprints/finger3.cpp	/^  virtual unsigned int Flags() { return FPT_UNIQUEBITS;};$/;"	f	class:OpenBabel::PatternFP
Flags	src/fingerprints/fingerecfp.cpp	/^  virtual unsigned int Flags() { return _flags;};$/;"	f	class:OpenBabel::fingerprintECFP
Flags	src/formats/APIInterface.cpp	/^	unsigned int Flags(){ return (NOTWRITABLE | NOTREADABLE);}$/;"	f	class:OpenBabel::OBAPIInterface
Flags	src/formats/CSRformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CSRFormat
Flags	src/formats/MCDLformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::MCDLFormat
Flags	src/formats/MNAformat.cpp	/^			virtual unsigned int Flags()$/;"	f	class:OpenBabel::MNAFormat
Flags	src/formats/PQSformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::PQSFormat
Flags	src/formats/abinitformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ABINITFormat
Flags	src/formats/acesformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::AcesInputFormat
Flags	src/formats/acesformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::AcesOutputFormat
Flags	src/formats/acrformat.cpp	/^	  virtual unsigned int Flags()$/;"	f	class:OpenBabel::ACRFormat
Flags	src/formats/adfformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ADFInputFormat
Flags	src/formats/adfformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ADFOutputFormat
Flags	src/formats/adfformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OBT41Format
Flags	src/formats/alchemyformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::AlchemyFormat
Flags	src/formats/amberformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::AmberPrepFormat
Flags	src/formats/aoforceformat.cpp	/^    virtual unsigned int Flags() { return READONEONLY | NOTWRITABLE; }$/;"	f	class:OpenBabel::AoforceFormat
Flags	src/formats/asciiformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::ASCIIFormat
Flags	src/formats/balstformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::BallStickFormat
Flags	src/formats/bgfformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::BGFFormat
Flags	src/formats/boxformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::BoxFormat
Flags	src/formats/cacaoformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CacaoFormat
Flags	src/formats/cacaoformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CacaoInternalFormat
Flags	src/formats/cacheformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CacheFormat
Flags	src/formats/carformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CARFormat
Flags	src/formats/castepformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CASTEPFormat
Flags	src/formats/cccformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CCCFormat
Flags	src/formats/chem3dformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CHEM3D1Format
Flags	src/formats/chem3dformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CHEM3D2Format
Flags	src/formats/chemdrawcdx.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
Flags	src/formats/chemdrawct.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ChemDrawFormat
Flags	src/formats/chemtoolformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CHTFormat
Flags	src/formats/confabreport.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::ConfabReport
Flags	src/formats/copyformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::CopyFormat
Flags	src/formats/crkformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CRK2DFormat
Flags	src/formats/crkformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CRK3DFormat
Flags	src/formats/crystal09format.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::Crystal09Format
Flags	src/formats/cssrformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CSSRFormat
Flags	src/formats/daltonformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::DALTONInputFormat
Flags	src/formats/daltonformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::DALTONOutputFormat
Flags	src/formats/dlpolyformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::DlpolyConfigFormat
Flags	src/formats/dlpolyformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::DlpolyHISTORYFormat
Flags	src/formats/dmolformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::DMolFormat
Flags	src/formats/exampleformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::XXXFormat
Flags	src/formats/fastaformat.cpp	/^    virtual unsigned int Flags() {$/;"	f	class:OpenBabel::FASTAFormat
Flags	src/formats/fastsearchformat.cpp	/^  virtual unsigned int Flags(){return READBINARY | READONEONLY | WRITEBINARY;};$/;"	f	class:OpenBabel::FastSearchFormat
Flags	src/formats/fchkformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::FCHKFormat
Flags	src/formats/featformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::FEATFormat
Flags	src/formats/fhformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::FenskeZmatFormat
Flags	src/formats/fhiaimsformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::FHIaimsFormat
Flags	src/formats/fingerprintformat.cpp	/^    virtual unsigned int Flags(){return NOTREADABLE;};$/;"	f	class:OpenBabel::FingerprintFormat
Flags	src/formats/fpsformat.cpp	/^    virtual unsigned int Flags(){return NOTREADABLE;};$/;"	f	class:OpenBabel::FPSFormat
Flags	src/formats/gamessformat.cpp	/^      virtual unsigned int Flags() {$/;"	f	class:OpenBabel::GAMESSInputFormat
Flags	src/formats/gamessformat.cpp	/^      virtual unsigned int Flags() {$/;"	f	class:OpenBabel::GAMESSOutputFormat
Flags	src/formats/gamessukformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::GAMESSUKInputFormat
Flags	src/formats/gausscubeformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OBGaussianCubeFormat
Flags	src/formats/gaussformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::GaussianInputFormat
Flags	src/formats/gaussformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::GaussianOutputFormat
Flags	src/formats/genbankformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::GenBankFormat
Flags	src/formats/ghemicalformat.cpp	/^      virtual unsigned int Flags()$/;"	f	class:OpenBabel::GhemicalFormat
Flags	src/formats/gromos96format.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::GROMOS96Format
Flags	src/formats/gulpformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::GULPFormat
Flags	src/formats/jaguarformat.cpp	/^    virtual unsigned int Flags() {return WRITEONEONLY;};$/;"	f	class:OpenBabel::JaguarInputFormat
Flags	src/formats/jaguarformat.cpp	/^    virtual unsigned int Flags(){return READONEONLY | NOTWRITABLE;};$/;"	f	class:OpenBabel::JaguarOutputFormat
Flags	src/formats/json/chemdoodlejsonformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ChemDoodleJSONFormat
Flags	src/formats/json/pubchemjsonformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::PubChemJSONFormat
Flags	src/formats/lmpdatformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::LMPDATFormat
Flags	src/formats/mdffformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MDFFFormat
Flags	src/formats/mdlformat.cpp	/^      virtual unsigned int Flags() { return DEFAULTFORMAT | ZEROATOMSOK; }$/;"	f	class:OpenBabel::MDLFormat
Flags	src/formats/mmodformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MacroModFormat
Flags	src/formats/moldenformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OBMoldenFormat
Flags	src/formats/molproformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MolproInputFormat
Flags	src/formats/molproformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MolproOutputFormat
Flags	src/formats/molreport.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MolReportFormat
Flags	src/formats/mopacformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MOPACFormat
Flags	src/formats/mpdformat.cpp	/^    virtual unsigned int Flags() \/\/Flags() can return be any the following combined by | or be omitted if none apply$/;"	f	class:OpenBabel::MPDFormat
Flags	src/formats/mpqcformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MPQCFormat
Flags	src/formats/mpqcformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MPQCInputFormat
Flags	src/formats/msiformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::MSIFormat
Flags	src/formats/msmsformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OBMSMSFormat
Flags	src/formats/nulformat.cpp	/^  virtual unsigned int Flags() { return NOTREADABLE; };$/;"	f	class:OpenBabel::NulFormat
Flags	src/formats/nwchemformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::NWChemInputFormat
Flags	src/formats/nwchemformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::NWChemOutputFormat
Flags	src/formats/opendxformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
Flags	src/formats/orcaformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OrcaInputFormat
Flags	src/formats/orcaformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OrcaOutputFormat
Flags	src/formats/outformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::OutputFormat
Flags	src/formats/painterformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::PainterFormat
Flags	src/formats/png2format.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::PNG2Format
Flags	src/formats/pngformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::PNGFormat
Flags	src/formats/pointcloudformat.cpp	/^      virtual unsigned int Flags()$/;"	f	class:OpenBabel::PointCloudFormat
Flags	src/formats/posformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::POSFormat
Flags	src/formats/povrayformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::PovrayFormat
Flags	src/formats/pwscfformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::PWscfFormat
Flags	src/formats/qchemformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::QChemInputFormat
Flags	src/formats/qchemformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::QChemOutputFormat
Flags	src/formats/reportformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ReportFormat
Flags	src/formats/shelxformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ShelXFormat
Flags	src/formats/siestaformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::SIESTAFormat
Flags	src/formats/smilesformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::FIXFormat
Flags	src/formats/smileyformat.cpp	/^      virtual unsigned int Flags()$/;"	f	class:OpenBabel::SmileyFormat
Flags	src/formats/stlformat.cpp	/^      virtual unsigned int Flags()$/;"	f	class:OpenBabel::STLFormat
Flags	src/formats/svgformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::SVGFormat
Flags	src/formats/tinkerformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::TinkerFormat
Flags	src/formats/titleformat.cpp	/^	virtual unsigned int Flags() { return ZEROATOMSOK; }$/;"	f	class:OpenBabel::TitleFormat
Flags	src/formats/turbomoleformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::TurbomoleFormat
Flags	src/formats/unichemformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::UniChemFormat
Flags	src/formats/vaspformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::VASPFormat
Flags	src/formats/viewmolformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ViewMolFormat
Flags	src/formats/xedformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::XEDFormat
Flags	src/formats/xml/cdxmlformat.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::ChemDrawXMLFormat
Flags	src/formats/xml/cmlformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::CMLFormat
Flags	src/formats/xml/cmlreactformat.cpp	/^  unsigned Flags()$/;"	f	class:OpenBabel::CMLReactFormat
Flags	src/formats/xml/pubchem.cpp	/^  virtual unsigned int Flags()$/;"	f	class:OpenBabel::PubChemFormat
Flags	src/formats/xml/xmlformat.cpp	/^  unsigned Flags()$/;"	f	class:OpenBabel::XMLFormat
Flags	src/formats/xsfformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::XSFFormat
Flags	src/formats/xtcformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::XTCFormat
Flags	src/formats/yasaraformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::YOBFormat
Flags	src/formats/zindoformat.cpp	/^    virtual unsigned int Flags()$/;"	f	class:OpenBabel::ZINDOFormat
FlipSpiro	src/builder.cpp	/^  void OBBuilder::FlipSpiro(OBMol &mol, int idx)$/;"	f	class:OpenBabel::OBBuilder
Fm	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Fold	src/bitvec.cpp	/^  void OBBitVec::Fold(unsigned new_bit_size)$/;"	f	class:OpenBabel::OBBitVec
Fold	src/fingerprint.cpp	/^  void OBFingerprint::Fold(vector<unsigned int>& vec, unsigned int nbits)$/;"	f	class:OpenBabel::OBFingerprint
ForbidCarbonChargeEdges	src/formats/libinchi/ichirvr4.c	/^int ForbidCarbonChargeEdges( BN_STRUCT *pBNS, ALL_TC_GROUPS *pTCGroups, EDGE_LIST *pCarbonChargeEdges, int forbidden_edge_mask  )$/;"	f
ForbidMetalCarbonEdges	src/formats/libinchi/ichirvr4.c	/^int ForbidMetalCarbonEdges( BN_STRUCT *pBNS, inp_ATOM *at, int num_at, VAL_AT *pVA,$/;"	f
ForbidNintrogenPlus2BondsInSmallRings	src/formats/libinchi/ichirvr4.c	/^int ForbidNintrogenPlus2BondsInSmallRings( BN_STRUCT *pBNS, inp_ATOM *at, int num_at,$/;"	f
ForceImplH	include/openbabel/atom.h	/^      void ForceImplH() {SetFlag(OB_ATOM_NOT_H_DEFICIENT);}$/;"	f	class:OpenBabel::OBAtom
ForceNoH	include/openbabel/atom.h	/^      void ForceNoH() {SetFlag(OB_ATOM_HAS_NO_H);}$/;"	f	class:OpenBabel::OBAtom
FormatFromExt	src/obconversion.cpp	/^  OBFormat* OBConversion::FormatFromExt(const char* filename)$/;"	f	class:OpenBabel::OBConversion
FormatFromExt	src/obconversion.cpp	/^  OBFormat* OBConversion::FormatFromExt(const char* filename, bool& isgzip)$/;"	f	class:OpenBabel::OBConversion
FormatFromExt	src/obconversion.cpp	/^  OBFormat* OBConversion::FormatFromExt(const std::string filename)$/;"	f	class:OpenBabel::OBConversion
FormatFromExt	src/obconversion.cpp	/^  OBFormat* OBConversion::FormatFromExt(const std::string filename, bool& isgzip)$/;"	f	class:OpenBabel::OBConversion
FormatFromMIME	src/format.cpp	/^OBFormat* OBFormat::FormatFromMIME(const char* MIME)$/;"	f	class:OpenBabel::OBFormat
FormatFromMIME	src/obconversion.cpp	/^  OBFormat* OBConversion::FormatFromMIME(const char* MIME)$/;"	f	class:OpenBabel::OBConversion
Formatpos	include/openbabel/obconversion.h	/^  typedef OBPlugin::PluginIterator Formatpos;$/;"	t	namespace:OpenBabel
Formatpos	src/obconversion.cpp	/^  typedef OBPlugin::PluginIterator Formatpos;$/;"	t	namespace:OpenBabel	file:
FormatsMIMEMap	include/openbabel/format.h	/^    static PluginMapType &FormatsMIMEMap()$/;"	f	class:OpenBabel::OBFormat
FormulaDescriptor	src/descriptors/filters.cpp	/^  FormulaDescriptor(const char* ID) : OBDescriptor(ID){};$/;"	f	class:OpenBabel::FormulaDescriptor
FormulaDescriptor	src/descriptors/filters.cpp	/^class FormulaDescriptor : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
FourThirdsPI	src/obutil.cpp	773;"	d	file:
FptFlag	include/openbabel/fingerprint.h	/^  enum FptFlag{FPT_UNIQUEBITS=1, FPT_NOINFO=2};$/;"	g	class:OpenBabel::OBFingerprint
FptIndex	include/openbabel/fingerprint.h	/^struct OBFPRT FptIndex$/;"	s	namespace:OpenBabel
FptIndexHeader	include/openbabel/fingerprint.h	/^struct OBFPRT FptIndexHeader$/;"	s	namespace:OpenBabel
Fr	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Fractional2CartesianCoord	src/formats/cifformat.cpp	/^  void CIFData::Fractional2CartesianCoord()$/;"	f	class:OpenBabel::CIFData
FractionalToCartesian	src/generic.cpp	/^  vector3 OBUnitCell::FractionalToCartesian(vector3 frac) const$/;"	f	class:OpenBabel::OBUnitCell
Fragments	include/openbabel/parsmart.h	/^	  std::vector<const Pattern*> Fragments;$/;"	m	class:OpenBabel::OBSmartsMatcher
FreeAllINChIArrays	src/formats/libinchi/runichi.c	/^void FreeAllINChIArrays( PINChI2 *pINChI[INCHI_NUM], PINChI_Aux2 *pINChI_Aux[INCHI_NUM], int num_components[INCHI_NUM] )$/;"	f
FreeAtomExpr	src/parsmart.cpp	/^  static void FreeAtomExpr( AtomExpr *expr )$/;"	f	namespace:OpenBabel
FreeBondExpr	src/parsmart.cpp	/^  static void FreeBondExpr( BondExpr *expr )$/;"	f	namespace:OpenBabel
FreeCompAtomData	src/formats/libinchi/inchi_dll.c	/^void FreeCompAtomData( COMP_ATOM_DATA *inp_at_data )$/;"	f
FreeFormFractionalFormat	src/formats/freefracformat.cpp	/^    FreeFormFractionalFormat()$/;"	f	class:OpenBabel::FreeFormFractionalFormat
FreeFormFractionalFormat	src/formats/freefracformat.cpp	/^  class FreeFormFractionalFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
FreeINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API void INCHI_DECL FreeINCHI( inchi_Output *out )$/;"	f
FreeINChIArrays	src/formats/libinchi/runichi.c	/^void FreeINChIArrays( PINChI2 *pINChI, PINChI_Aux2 *pINChI_Aux, int num_components )$/;"	f
FreeInchi_Atom	include/inchi/aux2atom.h	/^void FreeInchi_Atom( inchi_Atom **at )$/;"	f
FreeInchi_Input	include/inchi/aux2atom.h	/^void FreeInchi_Input( inchi_Input *inp_at_data )$/;"	f
FreeInchi_Stereo0D	include/inchi/aux2atom.h	/^void FreeInchi_Stereo0D( inchi_Stereo0D **stereo0D )$/;"	f
FreeInpAtom	src/formats/libinchi/inchi_dll.c	/^void FreeInpAtom( inp_ATOM **at )$/;"	f
FreeInpAtomData	src/formats/libinchi/inchi_dll.c	/^void FreeInpAtomData( INP_ATOM_DATA *inp_at_data )$/;"	f
FreeInpInChI	src/formats/libinchi/ichirvr7.c	/^void FreeInpInChI( InpInChI *pOneInput )$/;"	f
FreeNeighList	src/formats/libinchi/ichisort.c	/^void FreeNeighList( NEIGH_LIST *pp )$/;"	f
FreeOrigAtData	src/formats/libinchi/inchi_dll.c	/^void FreeOrigAtData( ORIG_ATOM_DATA *orig_at_data )$/;"	f
FreeOrigStruct	src/formats/libinchi/ichiprt1.c	/^void FreeOrigStruct(  ORIG_STRUCT *pOrigStruct)$/;"	f
FreePattern	src/parsmart.cpp	/^  static void FreePattern( Pattern *pat )$/;"	f	namespace:OpenBabel
FreeStdINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API void INCHI_DECL FreeStdINCHI( inchi_Output *out )$/;"	f
FreeStrFromINChI	src/formats/libinchi/ichirvr7.c	/^void FreeStrFromINChI( StrFromINChI *pStruct[INCHI_NUM][TAUT_NUM], int nNumComponents[INCHI_NUM][TAUT_NUM] )$/;"	f
FreeStructFromINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API void INCHI_DECL FreeStructFromINCHI( inchi_OutputStruct *out )$/;"	f
FreeStructFromStdINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API void INCHI_DECL FreeStructFromStdINCHI( inchi_OutputStruct *out )$/;"	f
Free_INChI	src/formats/libinchi/strutil.c	/^int Free_INChI(INChI **ppINChI)$/;"	f
Free_INChI_Aux	src/formats/libinchi/strutil.c	/^int Free_INChI_Aux( INChI_Aux **ppINChI_Aux )$/;"	f
Free_INChI_Members	src/formats/libinchi/strutil.c	/^int Free_INChI_Members(INChI *pINChI)$/;"	f
Free_INChI_Stereo	src/formats/libinchi/strutil.c	/^int Free_INChI_Stereo( INChI_Stereo *pINChI_Stereo )$/;"	f
Free_inchi_Input	src/formats/libinchi/ichilnct.c	/^void INCHI_DECL Free_inchi_Input( inchi_Input *pInp )$/;"	f
Free_std_inchi_Input	src/formats/libinchi/ichilnct.c	/^void INCHI_DECL Free_std_inchi_Input( inchi_Input *pInp )$/;"	f
FromFileCharges	src/charges/fromfile.cpp	/^			FromFileCharges(const char* ID) : OBChargeModel(ID, false){$/;"	f	class:OpenBabel::FromFileCharges
FromFileCharges	src/charges/fromfile.cpp	/^	class FromFileCharges : public OBChargeModel$/;"	c	namespace:OpenBabel	file:
FromNameLookup	src/alias.cpp	/^bool AliasData::FromNameLookup(OBMol& mol, const unsigned int atomindex)$/;"	f	class:OpenBabel::AliasData
FromString	src/bitvec.cpp	/^  void OBBitVec::FromString(const std::string & line, int new_bit_size)$/;"	f	class:OpenBabel::OBBitVec
FromVecInt	src/bitvec.cpp	/^  void OBBitVec::FromVecInt(const std::vector<int> & bit_offsets)$/;"	f	class:OpenBabel::OBBitVec
Fset	src/fingerprints/finger2.cpp	/^	typedef std::set<std::vector<int> > Fset;$/;"	t	class:OpenBabel::fingerprint2	file:
FullCode	src/canon.cpp	/^      FullCode()$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::FullCode
FullCode	src/canon.cpp	/^      FullCode(const std::vector<unsigned int> &_labels, const std::vector<unsigned short> &from)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::FullCode
FullCode	src/canon.cpp	/^    struct FullCode$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
FullConvert	src/obconversion.cpp	/^  int OBConversion::FullConvert(std::vector<std::string>& FileList, std::string& OutputFileName,$/;"	f	class:OpenBabel::OBConversion
FullMaxClock	include/inchi/ichitime.h	86;"	d
FullMaxClock	src/formats/libinchi/ichicano.c	/^const clock_t FullMaxClock = (clock_t)(-1);$/;"	v
Functor	include/openbabel/isomorphism.h	/^      class Functor$/;"	c	class:OpenBabel::OBIsomorphismMapper
G	include/openbabel/residue.h	/^      G     = 26,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
GAMESSInputFormat	src/formats/gamessformat.cpp	/^      GAMESSInputFormat() {$/;"	f	class:OpenBabel::GAMESSInputFormat
GAMESSInputFormat	src/formats/gamessformat.cpp	/^  class GAMESSInputFormat: public OBMoleculeFormat {$/;"	c	namespace:OpenBabel	file:
GAMESSOutputFormat	src/formats/gamessformat.cpp	/^      GAMESSOutputFormat() {$/;"	f	class:OpenBabel::GAMESSOutputFormat
GAMESSOutputFormat	src/formats/gamessformat.cpp	/^  class GAMESSOutputFormat: public OBMoleculeFormat {$/;"	c	namespace:OpenBabel	file:
GAMESSUKFormat	src/formats/gamessukformat.cpp	/^  class GAMESSUKFormat$/;"	c	namespace:OpenBabel	file:
GAMESSUKInputFormat	src/formats/gamessukformat.cpp	/^    GAMESSUKInputFormat()$/;"	f	class:OpenBabel::GAMESSUKInputFormat
GAMESSUKInputFormat	src/formats/gamessukformat.cpp	/^  class GAMESSUKInputFormat : public OBMoleculeFormat, public GAMESSUKFormat$/;"	c	namespace:OpenBabel	file:
GAMESSUKOutputFormat	src/formats/gamessukformat.cpp	/^    GAMESSUKOutputFormat()$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
GAMESSUKOutputFormat	src/formats/gamessukformat.cpp	/^  class GAMESSUKOutputFormat : public OBMoleculeFormat, public GAMESSUKFormat$/;"	c	namespace:OpenBabel	file:
GENOPTIONS	include/openbabel/obconversion.h	/^      enum Option_type { INOPTIONS, OUTOPTIONS, GENOPTIONS, ALL };$/;"	e	enum:OpenBabel::OBConversion::Option_type
GEOMETRY_OPTIMIZATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* GEOMETRY_OPTIMIZATION_PATTERN = "NWChem Geometry Optimization";$/;"	m	namespace:OpenBabel	file:
GEOMETRY_PATTERN	src/formats/nwchemformat.cpp	/^static const char* GEOMETRY_PATTERN = "Geometry \\"geometry\\"";$/;"	m	namespace:OpenBabel	file:
GET_BITS_CUMULENE_LEN	include/inchi/extr_ct.h	221;"	d
GET_DRAWDATA	src/formats/libinchi/runichi.c	/^struct DrawData * (*GET_DRAWDATA) ( int nComponent, int nType, int bReconnected ) = NULL;$/;"	v	typeref:struct:GET_DRAWDATA
GET_II	include/inchi/ichimake.h	73;"	d
GET_UINT32_BE	src/formats/libinchi/sha2.c	53;"	d	file:
GLN	include/openbabel/residue.h	/^      GLN   = 14,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
GLU	include/openbabel/residue.h	/^      GLU   = 10,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
GLX	include/openbabel/residue.h	/^      GLX   = 21,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
GLY	include/openbabel/residue.h	/^      GLY   =  1,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
GPA_A3_TO_KCAL_PER_MOL	src/formats/castepformat.cpp	19;"	d	file:
GRADIENT_PATTERN	src/formats/nwchemformat.cpp	/^static const char* GRADIENT_PATTERN = "ENERGY GRADIENTS";$/;"	m	namespace:OpenBabel	file:
GROFormat	src/formats/groformat.cpp	/^  GROFormat()$/;"	f	class:OpenBabel::GROFormat
GROFormat	src/formats/groformat.cpp	/^class GROFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
GROMOS96Format	src/formats/gromos96format.cpp	/^    GROMOS96Format()$/;"	f	class:OpenBabel::GROMOS96Format
GROMOS96Format	src/formats/gromos96format.cpp	/^  class GROMOS96Format : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
GRP_VERT_TYPE	src/formats/libinchi/ichirvr1.c	3538;"	d	file:
GSVResize	src/molchrg.cpp	/^  void OBGastChrg::GSVResize(int size)$/;"	f	class:OpenBabel::OBGastChrg
GULPFormat	src/formats/gulpformat.cpp	/^    GULPFormat()$/;"	f	class:OpenBabel::GULPFormat
GULPFormat	src/formats/gulpformat.cpp	/^  class GULPFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Ga	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
Ga	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
Gamess	src/formats/gamessformat.cpp	/^namespace Gamess {$/;"	n	file:
GasteigerCharges	src/charges/gasteiger.cpp	/^  GasteigerCharges(const char* ID) : OBChargeModel(ID, false){};$/;"	f	class:OpenBabel::GasteigerCharges
GasteigerCharges	src/charges/gasteiger.cpp	/^class GasteigerCharges : public OBChargeModel$/;"	c	namespace:OpenBabel	file:
GasteigerSigmaChi	src/molchrg.cpp	/^  bool OBGastChrg::GasteigerSigmaChi(OBAtom *atom,double &a,double &b,double &c )$/;"	f	class:OpenBabel::OBGastChrg
GasteigerState	include/openbabel/molchrg.h	/^class OBAPI GasteigerState$/;"	c	namespace:OpenBabel
GasteigerState	src/molchrg.cpp	/^  GasteigerState::GasteigerState()$/;"	f	class:OpenBabel::GasteigerState
GaussianInputFormat	src/formats/gaussformat.cpp	/^    GaussianInputFormat()$/;"	f	class:OpenBabel::GaussianInputFormat
GaussianInputFormat	src/formats/gaussformat.cpp	/^  class GaussianInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
GaussianOutputFormat	src/formats/gaussformat.cpp	/^    GaussianOutputFormat()$/;"	f	class:OpenBabel::GaussianOutputFormat
GaussianOutputFormat	src/formats/gaussformat.cpp	/^  class GaussianOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
GaussianZMatrixInputFormat	src/formats/gausszmatformat.cpp	/^    GaussianZMatrixInputFormat()$/;"	f	class:OpenBabel::GaussianZMatrixInputFormat
GaussianZMatrixInputFormat	src/formats/gausszmatformat.cpp	/^  class GaussianZMatrixInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Gb	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
Gd	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Ge	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
GenBankFormat	src/formats/genbankformat.cpp	/^    GenBankFormat()$/;"	f	class:OpenBabel::GenBankFormat
GenBankFormat	src/formats/genbankformat.cpp	/^  class GenBankFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
GenerateAromElem	src/parsmart.cpp	/^  static AtomExpr *GenerateAromElem( int elem, int flag )$/;"	f	namespace:OpenBabel
GenerateAsciiDepiction	src/formats/mdlformat.cpp	/^  static void GenerateAsciiDepiction(OBMol* pmol)$/;"	f	namespace:OpenBabel
GenerateByteCodes	src/chains.cpp	/^  void GenerateByteCodes(ByteCode **node, int resid, int curr, int prev, int bond)$/;"	f	namespace:OpenBabel
GenerateDefaultBond	src/parsmart.cpp	/^  static BondExpr *GenerateDefaultBond( void )$/;"	f	namespace:OpenBabel
GenerateElement	src/parsmart.cpp	/^  static AtomExpr *GenerateElement( int elem )$/;"	f	namespace:OpenBabel
GenerateSequence	src/rand.cpp	/^  void GenerateSequence( unsigned int p, unsigned int m,$/;"	f	namespace:OpenBabel
GenerateVelocities	src/forcefield.cpp	/^  void OBForceField::GenerateVelocities()$/;"	f	class:OpenBabel::OBForceField
Get	include/openbabel/math/matrix3x3.h	/^      double Get(int row,int column) const$/;"	f	class:OpenBabel::matrix3x3
Get	include/openbabel/math/vector3.h	/^    void Get(double *c)$/;"	f	class:OpenBabel::vector3
Get2DTetrahedralAmbiguity	src/formats/libinchi/ichister.c	/^int Get2DTetrahedralAmbiguity( double at_coord[][3], int bAddExplicitNeighbor, int bFix2DstereoBorderCase )$/;"	f
Get2ndEdgeVertex	src/formats/libinchi/ichi_bns.c	/^Vertex Get2ndEdgeVertex( BN_STRUCT* pBNS, Edge uv )$/;"	f
GetA	src/generic.cpp	/^  double OBUnitCell::GetA() const$/;"	f	class:OpenBabel::OBUnitCell
GetADs	include/openbabel/generic.h	/^    std::vector<triple<OBAtom*,OBAtom*,double> > GetADs()$/;"	f	class:OpenBabel::OBTorsion
GetAccuracy	src/spectrophore.cpp	/^OBSpectrophore::GetAccuracy(void) const$/;"	f	class:OpenBabel::OBSpectrophore
GetAgent	include/openbabel/reaction.h	/^  obsharedptr<OBMol> GetAgent()const$/;"	f	class:OpenBabel::OBReaction
GetAlias	src/alias.cpp	/^  std::string AliasData::GetAlias(bool rightAligned)const$/;"	f	class:OpenBabel::AliasData
GetAlignment	src/math/align.cpp	/^  vector<vector3> OBAlign::GetAlignment() {$/;"	f	class:OpenBabel::OBAlign
GetAllData	src/base.cpp	/^  std::vector<OBGenericData *> OBBase::GetAllData(const unsigned int dt)$/;"	f	class:OpenBabel::OBBase
GetAllredRochowElectroNeg	include/openbabel/data.h	/^      double GetAllredRochowElectroNeg() { return(_ARENeg); }$/;"	f	class:OpenBabel::OBElement
GetAllredRochowElectroNeg	src/data.cpp	/^  double OBElementTable::GetAllredRochowElectroNeg(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetAlpha	src/generic.cpp	/^  double OBUnitCell::GetAlpha() const$/;"	f	class:OpenBabel::OBUnitCell
GetAlphaHOMO	include/openbabel/generic.h	/^    unsigned int GetAlphaHOMO() { return _alphaHOMO; }$/;"	f	class:OpenBabel::OBOrbitalData
GetAlphaOrbitals	include/openbabel/generic.h	/^    std::vector<OBOrbital> GetAlphaOrbitals() { return _alphaOrbitals; }$/;"	f	class:OpenBabel::OBOrbitalData
GetAlphaSharing	include/openbabel/conformersearch.h	/^      double GetAlphaSharing () {return alpha_share;}$/;"	f	class:OpenBabel::OBConformerSearch
GetAminoAcidProperty	src/residue.cpp	/^  bool OBResidue::GetAminoAcidProperty(int property) const$/;"	f	class:OpenBabel::OBResidue
GetAndCheckNextNeighbors	src/formats/libinchi/ichicans.c	/^int GetAndCheckNextNeighbors( sp_ATOM *at, AT_RANK cur1, AT_RANK prev1, AT_RANK cur2, AT_RANK prev2,$/;"	f
GetAngle	include/openbabel/generic.h	/^    double GetAngle() const$/;"	f	class:OpenBabel::OBAngle
GetAngle	src/atom.cpp	/^  double OBAtom::GetAngle(OBAtom *b, OBAtom *c)$/;"	f	class:OpenBabel::OBAtom
GetAngle	src/atom.cpp	/^  double OBAtom::GetAngle(int b, int c)$/;"	f	class:OpenBabel::OBAtom
GetAngle	src/generic.cpp	/^  bool OBTorsion::GetAngle(double &radians, unsigned int index)$/;"	f	class:OpenBabel::OBTorsion
GetAngle	src/mol.cpp	/^  double OBMol::GetAngle( OBAtom* a, OBAtom* b, OBAtom* c)$/;"	f	class:OpenBabel::OBMol
GetAngle	src/stereo/perception.cpp	/^  double GetAngle(OBAtom *a, OBAtom *b, OBAtom *c)$/;"	f	namespace:OpenBabel
GetAngleType	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetAngleType(OBAtom* a, OBAtom* b, OBAtom *c)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetArray	include/openbabel/math/matrix3x3.h	/^      void GetArray(double *m)$/;"	f	class:OpenBabel::matrix3x3
GetAtom	include/openbabel/generic.h	/^    OBAtom *GetAtom() const    {        return(_atom);   }$/;"	f	class:OpenBabel::OBExternalBond
GetAtom	src/formats/smilesformat.cpp	/^    OBAtom *GetAtom()$/;"	f	class:OpenBabel::OBCanSmiNode
GetAtom	src/mol.cpp	/^  OBAtom *OBMol::GetAtom(int idx) const$/;"	f	class:OpenBabel::OBMol
GetAtom4Refs	src/generic.cpp	/^  std::vector<unsigned int> OBChiralData::GetAtom4Refs(atomreftype t) const$/;"	f	class:OpenBabel::OBChiralData
GetAtomById	src/mol.cpp	/^  OBAtom *OBMol::GetAtomById(unsigned long id) const$/;"	f	class:OpenBabel::OBMol
GetAtomChargeType	src/formats/libinchi/ichi_bns.c	/^int GetAtomChargeType( inp_ATOM *atom, int at_no, int nAtTypeTotals[], int *pMask, int bSubtract  )$/;"	f
GetAtomID	src/residue.cpp	/^  string OBResidue::GetAtomID(OBAtom *atom) const$/;"	f	class:OpenBabel::OBResidue
GetAtomIDNumber	src/residue.cpp	/^  static unsigned int GetAtomIDNumber(const char *atomid)$/;"	f	namespace:OpenBabel
GetAtomIdx	src/ring.cpp	/^  int OBRTree::GetAtomIdx()$/;"	f	class:OpenBabel::OBRTree
GetAtomOrdNbrInCanonOrd	src/formats/libinchi/ichimake.c	/^int GetAtomOrdNbrInCanonOrd( inp_ATOM *norm_at, AT_NUMB *nAtomOrdNbr,$/;"	f
GetAtomProperty	src/residue.cpp	/^  bool OBResidue::GetAtomProperty(OBAtom *atom, int property) const$/;"	f	class:OpenBabel::OBResidue
GetAtomRadius	src/depict/depict.cpp	/^  double OBDepictPrivateBallAndStick::GetAtomRadius(OBAtom *atom)$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
GetAtomRef	src/generic.cpp	/^  unsigned int OBChiralData::GetAtomRef(int a, atomreftype t)$/;"	f	class:OpenBabel::OBChiralData
GetAtomRestoreInfo	src/formats/libinchi/ichirvr1.c	/^int GetAtomRestoreInfo( inp_ATOM *atom, int iat, VAL_AT *pVArray, ICHICONST SRM *pSrm, int bMobileH, AT_NUMB *endpoint )$/;"	f
GetAtomSymClass	src/depict/depict.cpp	/^  unsigned int GetAtomSymClass(OBAtom *atom)$/;"	f	namespace:OpenBabel
GetAtomTypes	src/forcefield.cpp	/^  bool OBForceField::GetAtomTypes(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
GetAtomicMass	src/atom.cpp	/^  double OBAtom::GetAtomicMass() const$/;"	f	class:OpenBabel::OBAtom
GetAtomicNum	include/openbabel/atom.h	/^      unsigned int GetAtomicNum()     const { return((unsigned int)_ele); }$/;"	f	class:OpenBabel::OBAtom
GetAtomicNum	include/openbabel/data.h	/^      int GetAtomicNum()         {       return(_num);    }$/;"	f	class:OpenBabel::OBElement
GetAtomicNum	src/data.cpp	/^  int OBElementTable::GetAtomicNum(const char *identifier, int &iso)$/;"	f	class:OpenBabel::OBElementTable
GetAtomicNum	src/data.cpp	/^  int OBElementTable::GetAtomicNum(const char *sym)$/;"	f	class:OpenBabel::OBElementTable
GetAtomicNum	src/data.cpp	/^  int OBElementTable::GetAtomicNum(string name, int &iso)$/;"	f	class:OpenBabel::OBElementTable
GetAtomicNum	src/parsmart.cpp	/^  int OBSmartsPattern::GetAtomicNum(int idx)$/;"	f	class:OpenBabel::OBSmartsPattern
GetAtomicNumber	src/formats/adfformat.cpp	/^    int GetAtomicNumber( const string& name ) const$/;"	f	class:OpenBabel::OBT41Format	file:
GetAtoms	include/openbabel/query.h	/^      const std::vector<OBQueryAtom*>& GetAtoms() const$/;"	f	class:OpenBabel::OBQuery
GetAtoms	src/generic.cpp	/^  triple<OBAtom*,OBAtom*,OBAtom*> OBAngle::GetAtoms()$/;"	f	class:OpenBabel::OBAngle
GetAtoms	src/residue.cpp	/^  vector<OBAtom*> OBResidue::GetAtoms(void) const$/;"	f	class:OpenBabel::OBResidue
GetAttribute	include/openbabel/base.h	/^    virtual const std::string &GetAttribute()  const$/;"	f	class:OpenBabel::OBGenericData
GetAttribute	src/formats/xml/xml.cpp	/^  string XMLConversion::GetAttribute(const char* attrname)$/;"	f	class:OpenBabel::XMLConversion
GetAuditMessageCount	include/openbabel/oberror.h	/^      unsigned int GetAuditMessageCount() { return _messageCount[obAuditMsg];}$/;"	f	class:OpenBabel::OBMessageHandler
GetAuxConv	include/openbabel/obconversion.h	/^      OBConversion* GetAuxConv() const {return pAuxConv;};$/;"	f	class:OpenBabel::OBConversion
GetAvailableFormats	src/GUI/OBGUI.cpp	/^void OBGUIFrame::GetAvailableFormats()$/;"	f	class:OBGUIFrame
GetAvgBounds	src/distgeom.cpp	/^    float GetAvgBounds(int i, int j)$/;"	f	class:OpenBabel::DistanceGeometryPrivate
GetAxes	src/griddata.cpp	/^  void OBGridData::GetAxes( double x[3], double y[3], double z[3] ) const$/;"	f	class:OpenBabel::OBGridData
GetAxes	src/griddata.cpp	/^  void OBGridData::GetAxes( vector3 &v1, vector3 &v2, vector3 &v3 ) const$/;"	f	class:OpenBabel::OBGridData
GetB	src/generic.cpp	/^  double OBUnitCell::GetB() const$/;"	f	class:OpenBabel::OBUnitCell
GetBC	include/openbabel/generic.h	/^    std::pair<OBAtom*,OBAtom*>                  GetBC()$/;"	f	class:OpenBabel::OBTorsion
GetBO	include/openbabel/bond.h	/^      unsigned int     GetBO()            const { return(_order); }$/;"	f	class:OpenBabel::OBBond
GetBaseCanonRanking	src/formats/libinchi/ichican2.c	/^int GetBaseCanonRanking( int num_atoms, int num_at_tg, sp_ATOM* at[],$/;"	f
GetBaseCoordinateSet	include/openbabel/rotamer.h	/^    double *GetBaseCoordinateSet(unsigned int i) const$/;"	f	class:OpenBabel::OBRotamerList
GetBegin	include/openbabel/generic.h	/^    std::vector<OBGenericData*>::iterator GetBegin()$/;"	f	class:OpenBabel::OBSetData
GetBeginAtom	include/openbabel/bond.h	/^      OBAtom *GetBeginAtom()    { return(_bgn);    }$/;"	f	class:OpenBabel::OBBond
GetBeginAtom	include/openbabel/bond.h	/^      const OBAtom *GetBeginAtom() const$/;"	f	class:OpenBabel::OBBond
GetBeginAtom	include/openbabel/query.h	/^      OBQueryAtom* GetBeginAtom() const { return m_begin; }$/;"	f	class:OpenBabel::OBQueryBond
GetBeginAtomIdx	include/openbabel/bond.h	/^      unsigned int     GetBeginAtomIdx()  const$/;"	f	class:OpenBabel::OBBond
GetBeta	src/generic.cpp	/^  double OBUnitCell::GetBeta() const$/;"	f	class:OpenBabel::OBUnitCell
GetBetaHOMO	include/openbabel/generic.h	/^    unsigned int GetBetaHOMO() { return _betaHOMO; }$/;"	f	class:OpenBabel::OBOrbitalData
GetBetaOrbitals	include/openbabel/generic.h	/^    std::vector<OBOrbital> GetBetaOrbitals() { return _betaOrbitals; }$/;"	f	class:OpenBabel::OBOrbitalData
GetBgn	include/openbabel/generic.h	/^    int GetBgn()    {      return(_bgn);    }$/;"	f	class:OpenBabel::OBVirtualBond
GetBit	src/fingerprint.cpp	/^  bool OBFingerprint::GetBit(const vector<unsigned int>& vec, const unsigned int n)$/;"	f	class:OpenBabel::OBFingerprint
GetBlue	include/openbabel/data.h	/^      double GetBlue()           {       return(_blue);    }$/;"	f	class:OpenBabel::OBElement
GetBond	include/openbabel/generic.h	/^    OBBond *GetBond() const    {        return(_bond);   }$/;"	f	class:OpenBabel::OBExternalBond
GetBond	include/openbabel/query.h	/^      OBQueryBond* GetBond(OBQueryAtom *begin, OBQueryAtom *end) const$/;"	f	class:OpenBabel::OBQuery
GetBond	include/openbabel/rotor.h	/^    OBBond *GetBond()$/;"	f	class:OpenBabel::OBRotor
GetBond	src/atom.cpp	/^  OBBond *OBAtom::GetBond(OBAtom *nbr)$/;"	f	class:OpenBabel::OBAtom
GetBond	src/mol.cpp	/^  OBBond *OBMol::GetBond(OBAtom *bgn,OBAtom *end) const$/;"	f	class:OpenBabel::OBMol
GetBond	src/mol.cpp	/^  OBBond *OBMol::GetBond(int bgn, int end) const$/;"	f	class:OpenBabel::OBMol
GetBond	src/mol.cpp	/^  OBBond *OBMol::GetBond(int idx) const$/;"	f	class:OpenBabel::OBMol
GetBond	src/parsmart.cpp	/^  void OBSmartsPattern::GetBond(int &src,int &dst,int &ord,int idx)$/;"	f	class:OpenBabel::OBSmartsPattern
GetBondById	src/mol.cpp	/^  OBBond *OBMol::GetBondById(unsigned long id) const$/;"	f	class:OpenBabel::OBMol
GetBondIdx	src/generic.cpp	/^  unsigned int OBTorsion::GetBondIdx()$/;"	f	class:OpenBabel::OBTorsion
GetBondLength	src/depict/depict.cpp	/^  double OBDepict::GetBondLength() const$/;"	f	class:OpenBabel::OBDepict
GetBondLength	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::GetBondLength(OBAtom* a, OBAtom* b)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetBondOrder	include/openbabel/bond.h	/^      unsigned int     GetBondOrder()     const { return(_order); }$/;"	f	class:OpenBabel::OBBond
GetBondSpacing	src/depict/depict.cpp	/^  double OBDepict::GetBondSpacing() const$/;"	f	class:OpenBabel::OBDepict
GetBondType	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetBondType(OBAtom* a, OBAtom* b)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetBondWidth	src/depict/depict.cpp	/^  double OBDepict::GetBondWidth() const$/;"	f	class:OpenBabel::OBDepict
GetBonds	include/openbabel/query.h	/^      const std::vector<OBQueryBond*>& GetBonds() const$/;"	f	class:OpenBabel::OBQuery
GetBonds	include/openbabel/query.h	/^      const std::vector<OBQueryBond*>& GetBonds() const$/;"	f	class:OpenBabel::OBQueryAtom
GetBonds	src/residue.cpp	/^  vector<OBBond*> OBResidue::GetBonds(bool exterior) const$/;"	f	class:OpenBabel::OBResidue
GetBoundsMatrix	src/distgeom.cpp	/^  Eigen::MatrixXf OBDistanceGeometry::GetBoundsMatrix()$/;"	f	class:OpenBabel::OBDistanceGeometry
GetC	src/generic.cpp	/^  double OBUnitCell::GetC() const$/;"	f	class:OpenBabel::OBUnitCell
GetCIdx	include/openbabel/atom.h	/^      unsigned int GetCIdx()          const { return((int)_cidx); }$/;"	f	class:OpenBabel::OBAtom
GetCParam	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::GetCParam(OBAtom* atom)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCXA	src/forcefields/forcefieldmmff94.cpp	/^  unsigned int OBForceFieldMMFF94::GetCXA(int type, int a, int b, int c)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCXB	src/forcefields/forcefieldmmff94.cpp	/^  unsigned int OBForceFieldMMFF94::GetCXB(int type, int a, int b)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCXO	src/forcefields/forcefieldmmff94.cpp	/^  unsigned int OBForceFieldMMFF94::GetCXO(int a, int b, int c, int d)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCXQ	src/forcefields/forcefieldmmff94.cpp	/^  unsigned int OBForceFieldMMFF94::GetCXQ(int type, int a, int b)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCXS	src/forcefields/forcefieldmmff94.cpp	/^  unsigned int OBForceFieldMMFF94::GetCXS(int type, int a, int b, int c)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCXT	src/forcefields/forcefieldmmff94.cpp	/^  unsigned int OBForceFieldMMFF94::GetCXT(int type, int a, int b, int c, int d)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCanonClosureDigits	src/formats/smilesformat.cpp	/^  OBMol2Cansmi::GetCanonClosureDigits(OBAtom *atom,$/;"	f	class:OpenBabel::OBMol2Cansmi
GetCanonLengths	src/formats/libinchi/ichicano.c	/^int GetCanonLengths( int num_at,  sp_ATOM* at, ATOM_SIZES *s, T_GROUP_INFO *t_group_info )$/;"	f
GetCanonRanking2	src/formats/libinchi/ichican2.c	/^int  GetCanonRanking2( int num_atoms, int num_at_tg, int num_max, int bDigraph, sp_ATOM* at,$/;"	f
GetCellMatrix	src/generic.cpp	/^  matrix3x3 OBUnitCell::GetCellMatrix() const$/;"	f	class:OpenBabel::OBUnitCell
GetCellVectors	src/generic.cpp	/^  vector<vector3> OBUnitCell::GetCellVectors() const$/;"	f	class:OpenBabel::OBUnitCell
GetCellVolume	src/generic.cpp	/^  double OBUnitCell::GetCellVolume() const$/;"	f	class:OpenBabel::OBUnitCell
GetCenter	src/stereo/perception.cpp	/^      OBAtom* GetCenter(OBMol *mol) const { return mol->GetAtomById(id); }$/;"	f	struct:OpenBabel::StereoRing::ParaAtom
GetCenter	src/stereo/perception.cpp	/^      OBBond* GetCenter(OBMol *mol) const { return mol->GetBondById(id); }$/;"	f	struct:OpenBabel::StereoRing::ParaBond
GetCenter	src/stereo/stereoutil.h	/^    static Center* GetCenter(OBMol *mol, unsigned long id) { return mol->GetAtomById(id); }$/;"	f	struct:OpenBabel::OBStereoTypeTraits
GetCenter	src/stereo/stereoutil.h	/^    static Center* GetCenter(OBMol *mol, unsigned long id) { return mol->GetBondById(id); }$/;"	f	struct:OpenBabel::OBStereoTypeTraits
GetChain	src/residue.cpp	/^  char OBResidue::GetChain(void) const$/;"	f	class:OpenBabel::OBResidue
GetChainNum	src/residue.cpp	/^  unsigned int OBResidue::GetChainNum(void) const$/;"	f	class:OpenBabel::OBResidue
GetCharge	src/parsmart.cpp	/^  int OBSmartsPattern::GetCharge(int idx)$/;"	f	class:OpenBabel::OBSmartsPattern
GetChargeFlowerUpperEdge	src/formats/libinchi/ichirvr1.c	/^int GetChargeFlowerUpperEdge( BN_STRUCT *pBNS, VAL_AT *pVA, int nChargeEdge )$/;"	f
GetChargeType	src/formats/libinchi/ichitaut.c	/^int GetChargeType( inp_ATOM *atom, int iat, S_CHAR *cChargeSubtype )$/;"	f
GetChemObject	src/obconversion.cpp	/^  OBBase* OBConversion::GetChemObject()$/;"	f	class:OpenBabel::OBConversion
GetChildAtom	src/formats/smilesformat.cpp	/^    OBAtom *GetChildAtom(int i)$/;"	f	class:OpenBabel::OBCanSmiNode
GetChildBond	src/formats/smilesformat.cpp	/^    OBBond *GetChildBond(int i)$/;"	f	class:OpenBabel::OBCanSmiNode
GetChildNode	src/formats/smilesformat.cpp	/^    OBCanSmiNode *GetChildNode(int i)$/;"	f	class:OpenBabel::OBCanSmiNode
GetChiralFlag	src/parsmart.cpp	/^  static int GetChiralFlag(AtomExpr *expr)$/;"	f	namespace:OpenBabel
GetChirality	src/chiral.cpp	/^  void GetChirality(OBMol &mol, std::vector<int> &chirality)$/;"	f	namespace:OpenBabel
GetCisOrTransRef	src/stereo/cistrans.cpp	/^  unsigned long OBCisTransStereo::GetCisOrTransRef(unsigned long id, bool getcisref) const$/;"	f	class:OpenBabel::OBCisTransStereo
GetCisRef	src/stereo/cistrans.cpp	/^  unsigned long OBCisTransStereo::GetCisRef(unsigned long id) const$/;"	f	class:OpenBabel::OBCisTransStereo
GetCisRefs	src/stereo/squareplanar.cpp	/^  std::vector<unsigned long> OBSquarePlanarStereo::GetCisRefs(unsigned long id) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
GetCisTransBondSymbol	src/formats/smilesformat.cpp	/^  char OBMol2Cansmi::GetCisTransBondSymbol(OBBond *bond, OBCanSmiNode *node)$/;"	f	class:OpenBabel::OBMol2Cansmi
GetCisTransStereo	src/distgeom.cpp	/^  OBCisTransStereo * OBDistanceGeometry::GetCisTransStereo(OBBond *bond)$/;"	f	class:OpenBabel::OBDistanceGeometry
GetCisTransStereo	src/stereo/facade.cpp	/^  OBCisTransStereo* OBStereoFacade::GetCisTransStereo(unsigned long bondId)$/;"	f	class:OpenBabel::OBStereoFacade
GetClass	include/openbabel/atomclass.h	/^  int GetClass(int indx)const$/;"	f	class:OpenBabel::OBAtomClassData
GetClassString	include/openbabel/atomclass.h	/^  std::string GetClassString(int indx)$/;"	f	class:OpenBabel::OBAtomClassData
GetCoeff	include/openbabel/kinetics.h	/^  double GetCoeff(unsigned n) const$/;"	f	class:OpenBabel::OBNasaThermoData
GetColor	include/openbabel/alias.h	/^  std::string GetColor() const { return _color; }$/;"	f	class:OpenBabel::AliasData
GetColumn	src/math/matrix3x3.cpp	/^  vector3 matrix3x3::GetColumn(unsigned int col) const$/;"	f	class:OpenBabel::matrix3x3
GetComment	include/openbabel/reaction.h	/^  std::string GetComment()	const { return _comment; }$/;"	f	class:OpenBabel::OBReaction
GetCommonAtom	src/formats/inchiformat.cpp	/^OBAtom* InChIFormat::GetCommonAtom(OBBond* pb1, OBBond* pb2)$/;"	f	class:OpenBabel::InChIFormat
GetConfig	src/stereo/cistrans.cpp	/^  OBCisTransStereo::Config OBCisTransStereo::GetConfig(OBStereo::Shape shape) const$/;"	f	class:OpenBabel::OBCisTransStereo
GetConfig	src/stereo/cistrans.cpp	/^  OBCisTransStereo::Config OBCisTransStereo::GetConfig(unsigned long start,$/;"	f	class:OpenBabel::OBCisTransStereo
GetConfig	src/stereo/squareplanar.cpp	/^  OBSquarePlanarStereo::Config OBSquarePlanarStereo::GetConfig(OBStereo::Shape shape) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
GetConfig	src/stereo/squareplanar.cpp	/^  OBSquarePlanarStereo::Config OBSquarePlanarStereo::GetConfig(unsigned long start,$/;"	f	class:OpenBabel::OBSquarePlanarStereo
GetConfig	src/stereo/tetrahedral.cpp	/^  OBTetrahedralStereo::Config OBTetrahedralStereo::GetConfig($/;"	f	class:OpenBabel::OBTetrahedralStereo
GetConfig	src/stereo/tetrahedral.cpp	/^  OBTetrahedralStereo::Config OBTetrahedralStereo::GetConfig(unsigned long from_or_towards,$/;"	f	class:OpenBabel::OBTetrahedralStereo
GetConformer	include/openbabel/mol.h	/^    double  *GetConformer(int i)       {  return(_vconf[i]);      }$/;"	f	class:OpenBabel::OBMol
GetConformers	include/openbabel/mol.h	/^    std::vector<double*> &GetConformers() {   return(_vconf);     }$/;"	f	class:OpenBabel::OBMol
GetConformers	src/conformersearch.cpp	/^  void OBConformerSearch::GetConformers(OBMol &mol)$/;"	f	class:OpenBabel::OBConformerSearch
GetConformers	src/distgeom.cpp	/^  void OBDistanceGeometry::GetConformers(OBMol &mol)$/;"	f	class:OpenBabel::OBDistanceGeometry
GetConformers	src/forcefield.cpp	/^  bool OBForceField::GetConformers(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
GetConstraintAtomA	src/forcefield.cpp	/^  int OBFFConstraints::GetConstraintAtomA(int index) const$/;"	f	class:OpenBabel::OBFFConstraints
GetConstraintAtomB	src/forcefield.cpp	/^  int OBFFConstraints::GetConstraintAtomB(int index) const$/;"	f	class:OpenBabel::OBFFConstraints
GetConstraintAtomC	src/forcefield.cpp	/^  int OBFFConstraints::GetConstraintAtomC(int index) const$/;"	f	class:OpenBabel::OBFFConstraints
GetConstraintAtomD	src/forcefield.cpp	/^  int OBFFConstraints::GetConstraintAtomD(int index) const$/;"	f	class:OpenBabel::OBFFConstraints
GetConstraintEnergy	src/forcefield.cpp	/^  double OBFFConstraints::GetConstraintEnergy()$/;"	f	class:OpenBabel::OBFFConstraints
GetConstraintType	src/forcefield.cpp	/^  int OBFFConstraints::GetConstraintType(int index) const$/;"	f	class:OpenBabel::OBFFConstraints
GetConstraintValue	src/forcefield.cpp	/^  double OBFFConstraints::GetConstraintValue(int index) const$/;"	f	class:OpenBabel::OBFFConstraints
GetConstraints	src/forcefield.cpp	/^  OBFFConstraints& OBForceField::GetConstraints()$/;"	f	class:OpenBabel::OBForceField
GetContent	src/formats/xml/xml.cpp	/^  string XMLConversion::GetContent()$/;"	f	class:OpenBabel::XMLConversion
GetContentDouble	src/formats/xml/xml.cpp	/^  bool XMLConversion::GetContentDouble(double& value)$/;"	f	class:OpenBabel::XMLConversion
GetContentInt	src/formats/xml/xml.cpp	/^  bool XMLConversion::GetContentInt(int& value)$/;"	f	class:OpenBabel::XMLConversion
GetConvergence	include/openbabel/conformersearch.h	/^      Convergence GetConvergence() { return Average; }$/;"	f	class:OpenBabel::OBMinimizingRMSDConformerScore
GetConvergence	include/openbabel/conformersearch.h	/^      Convergence GetConvergence() { return Average; }$/;"	f	class:OpenBabel::OBRMSDConformerScore
GetConvergence	include/openbabel/conformersearch.h	/^      Convergence GetConvergence() { return Lowest; }$/;"	f	class:OpenBabel::OBEnergyConformerScore
GetConvergence	include/openbabel/conformersearch.h	/^      Convergence GetConvergence() { return Lowest; }$/;"	f	class:OpenBabel::OBMinimizingEnergyConformerScore
GetCoordinate	include/openbabel/atom.h	/^      double     *GetCoordinate(){$/;"	f	class:OpenBabel::OBAtom
GetCoordinateIdx	include/openbabel/atom.h	/^      unsigned int GetCoordinateIdx() const { return((int)_cidx); }$/;"	f	class:OpenBabel::OBAtom
GetCoordinates	include/openbabel/mol.h	/^    double      *GetCoordinates() { return(_c); }$/;"	f	class:OpenBabel::OBMol
GetCoordinates	src/forcefield.cpp	/^  bool OBForceField::GetCoordinates(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
GetCoordination	src/forcefields/forcefielduff.cpp	/^  int GetCoordination(OBAtom *b, int ipar)$/;"	f	namespace:OpenBabel
GetCorrectedBondVector	src/builder.cpp	/^  vector3 GetCorrectedBondVector(OBAtom *atom1, OBAtom *atom2, int bondOrder = 1)$/;"	f	namespace:OpenBabel
GetCount	include/openbabel/obconversion.h	/^      int      GetCount()const { return Count; }$/;"	f	class:OpenBabel::OBConversion
GetCovalentRad	include/openbabel/data.h	/^      double GetCovalentRad()    {       return(_Rcov);   }$/;"	f	class:OpenBabel::OBElement
GetCovalentRad	src/data.cpp	/^  double OBElementTable::GetCovalentRad(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetCovalentRadius	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::GetCovalentRadius(OBAtom* a) {$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCrd	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetCrd(int atomtype)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetCrossoverProbability	include/openbabel/conformersearch.h	/^      double GetCrossoverProbability () {return p_crossover;}$/;"	f	class:OpenBabel::OBConformerSearch
GetCurrentValence	src/mol.cpp	/^  int GetCurrentValence(OBAtom *atom)$/;"	f	namespace:OpenBabel
GetCutoff	src/confsearch.cpp	/^      inline double GetCutoff() {$/;"	f	class:OpenBabel::OBDiversePoses
GetDFFVector	src/rotor.cpp	/^  bool GetDFFVector(OBMol &mol,vector<int> &dffv,OBBitVec &bv)$/;"	f	namespace:OpenBabel
GetData	include/openbabel/base.h	/^      std::vector<OBGenericData*>      &GetData() { return(_vdata); }$/;"	f	class:OpenBabel::OBBase
GetData	include/openbabel/generic.h	/^    OBGenericData *GetData(const char *s)$/;"	f	class:OpenBabel::OBSetData
GetData	include/openbabel/generic.h	/^    OBGenericData *GetData(const std::string &s)$/;"	f	class:OpenBabel::OBSetData
GetData	include/openbabel/generic.h	/^    const std::string &GetData()              const$/;"	f	class:OpenBabel::OBCommentData
GetData	include/openbabel/generic.h	/^    matrix3x3 GetData() const$/;"	f	class:OpenBabel::OBMatrixData
GetData	include/openbabel/generic.h	/^    std::map<int,OBAtom*> &GetData()    { return _serialMap;    }$/;"	f	class:OpenBabel::OBSerialNums
GetData	include/openbabel/generic.h	/^    std::vector<OBAngle> GetData() const$/;"	f	class:OpenBabel::OBAngleData
GetData	include/openbabel/generic.h	/^    std::vector<OBExternalBond> *GetData()$/;"	f	class:OpenBabel::OBExternalBondData
GetData	include/openbabel/generic.h	/^    std::vector<OBRing*> &GetData()$/;"	f	class:OpenBabel::OBRingData
GetData	include/openbabel/generic.h	/^    std::vector<OBTorsion> GetData() const$/;"	f	class:OpenBabel::OBTorsionData
GetData	include/openbabel/generic.h	/^    std::vector<std::string>    GetData() { return _vData; }$/;"	f	class:OpenBabel::OBConformerData
GetData	include/openbabel/generic.h	/^    virtual const std::vector<OBGenericData *> &GetData() const \/\/now virtual and const$/;"	f	class:OpenBabel::OBSetData
GetData	include/openbabel/generic.h	/^   vector3 GetData() const$/;"	f	class:OpenBabel::OBVectorData
GetData	src/base.cpp	/^  OBGenericData *OBBase::GetData(const char *s)$/;"	f	class:OpenBabel::OBBase
GetData	src/base.cpp	/^  OBGenericData *OBBase::GetData(const string &s)$/;"	f	class:OpenBabel::OBBase
GetData	src/base.cpp	/^  OBGenericData *OBBase::GetData(const unsigned int dt)$/;"	f	class:OpenBabel::OBBase
GetData	src/base.cpp	/^  std::vector<OBGenericData*>  OBBase::GetData(DataOrigin source)$/;"	f	class:OpenBabel::OBBase
GetDataType	include/openbabel/base.h	/^    unsigned int                GetDataType()    const$/;"	f	class:OpenBabel::OBGenericData
GetDataVector	src/grid.cpp	/^  std::vector<double> OBFloatGrid::GetDataVector()$/;"	f	class:OpenBabel::OBFloatGrid
GetDebugMessageCount	include/openbabel/oberror.h	/^      unsigned int GetDebugMessageCount() { return _messageCount[obDebug];}$/;"	f	class:OpenBabel::OBMessageHandler
GetDefaultFormat	include/openbabel/obconversion.h	/^      static OBFormat* GetDefaultFormat(){return OBFormat::FindType(NULL);};$/;"	f	class:OpenBabel::OBConversion
GetDefaultXMLClass	include/openbabel/xml.h	/^      static XMLBaseFormat* GetDefaultXMLClass() \/\/TODO make dependent on object type$/;"	f	class:OpenBabel::XMLConversion
GetDelta	include/openbabel/rotor.h	/^    double  GetDelta()            {       return(_delta);       }$/;"	f	class:OpenBabel::OBRotorRule
GetDelta	include/openbabel/rotor.h	/^    double GetDelta() { return 10.0; }$/;"	f	class:OpenBabel::OBRotor
GetDeltaChargeFromVF	src/formats/libinchi/ichirvr1.c	/^int GetDeltaChargeFromVF( BN_STRUCT *pBNS, VAL_AT *pVA, VF *vf )$/;"	f
GetDensities	include/openbabel/generic.h	/^    std::vector<double> GetDensities() const$/;"	f	class:OpenBabel::OBDOSData
GetDepth	src/formats/chemdrawcdx.cpp	/^  int GetDepth()const          { return depth; }$/;"	f	class:OpenBabel::CDXReader
GetDerived	src/formats/xml/xml.cpp	/^  XMLConversion* XMLConversion::GetDerived(OBConversion* pConv, bool ForReading)$/;"	f	class:OpenBabel::XMLConversion
GetDfsOrder4CT	src/formats/libinchi/ichimake.c	/^AT_NUMB *GetDfsOrder4CT( AT_NUMB *LinearCT, int nLenCT, S_CHAR *nNum_H, int num_atoms, int nCtMode )$/;"	f
GetDihedralAtoms	include/openbabel/rotor.h	/^    std::vector<int> &GetDihedralAtoms()$/;"	f	class:OpenBabel::OBRotor
GetDihedralAtoms	include/openbabel/rotor.h	/^    void GetDihedralAtoms(int ref[4])$/;"	f	class:OpenBabel::OBRotor
GetDim	include/openbabel/grid.h	/^    void GetDim(int *a)$/;"	f	class:OpenBabel::OBFloatGrid
GetDimension	include/openbabel/generic.h	/^    std::vector<unsigned short> GetDimension() { return _vDimension; }$/;"	f	class:OpenBabel::OBConformerData
GetDimension	include/openbabel/mol.h	/^    unsigned short int GetDimension() const { return _dimension; }$/;"	f	class:OpenBabel::OBMol
GetDipoleMoment	src/chargemodel.cpp	/^  vector3 OBChargeModel::GetDipoleMoment(OBMol &mol)$/;"	f	class:OpenBabel::OBChargeModel
GetDisplacements	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > > GetDisplacements()$/;"	f	class:OpenBabel::OBConformerData
GetDistance	src/atom.cpp	/^  double OBAtom::GetDistance(OBAtom *b)$/;"	f	class:OpenBabel::OBAtom
GetDistance	src/atom.cpp	/^  double OBAtom::GetDistance(int b)$/;"	f	class:OpenBabel::OBAtom
GetDistance	src/atom.cpp	/^  double OBAtom::GetDistance(vector3 *v)$/;"	f	class:OpenBabel::OBAtom
GetEDipole	include/openbabel/generic.h	/^    std::vector<double> GetEDipole() const$/;"	f	class:OpenBabel::OBElectronicTransitionData
GetEdgePointer	src/formats/libinchi/ichi_bns.c	/^int GetEdgePointer( BN_STRUCT* pBNS, Vertex u, Vertex v, EdgeIndex iuv, BNS_EDGE **uv, S_CHAR *s_or_t )$/;"	f
GetEdgeToGroupVertex	src/formats/libinchi/ichi_bns.c	/^BNS_IEDGE GetEdgeToGroupVertex( BN_STRUCT *pBNS, Vertex v1, AT_NUMB type)$/;"	f
GetEfficiency	include/openbabel/kinetics.h	/^  double GetEfficiency(std::string id)$/;"	f	class:OpenBabel::OBRateData
GetElectroNeg	include/openbabel/data.h	/^      double GetElectroNeg()     {       return(_elNeg);  }$/;"	f	class:OpenBabel::OBElement
GetElectroNeg	src/data.cpp	/^  double OBElementTable::GetElectroNeg(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetElectronAffinity	include/openbabel/data.h	/^      double GetElectronAffinity(){      return(_elAffinity);  }$/;"	f	class:OpenBabel::OBElement
GetElectronAffinity	src/data.cpp	/^  double OBElementTable::GetElectronAffinity(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetElectrostaticCutOff	include/openbabel/forcefield.h	/^    double GetElectrostaticCutOff()$/;"	f	class:OpenBabel::OBForceField
GetElementAndCount	src/formats/libinchi/ichimake.c	/^int GetElementAndCount( const char **f, char *szEl, int *count )$/;"	f
GetElementFormulaFromAtNum	src/formats/libinchi/util.c	/^int GetElementFormulaFromAtNum(int nAtNum, char *szElement )$/;"	f
GetElementRow	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetElementRow(OBAtom *atom)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetEnd	include/openbabel/generic.h	/^    int GetEnd()    {      return(_end);    }$/;"	f	class:OpenBabel::OBVirtualBond
GetEnd	include/openbabel/generic.h	/^    std::vector<OBGenericData*>::iterator GetEnd()$/;"	f	class:OpenBabel::OBSetData
GetEndAtom	include/openbabel/bond.h	/^      OBAtom *GetEndAtom()      { return(_end);    }$/;"	f	class:OpenBabel::OBBond
GetEndAtom	include/openbabel/bond.h	/^      const OBAtom *GetEndAtom() const$/;"	f	class:OpenBabel::OBBond
GetEndAtom	include/openbabel/query.h	/^      OBQueryAtom* GetEndAtom() const { return m_end; }$/;"	f	class:OpenBabel::OBQueryBond
GetEndAtomIdx	include/openbabel/bond.h	/^      unsigned int     GetEndAtomIdx()    const$/;"	f	class:OpenBabel::OBBond
GetEnergies	include/openbabel/generic.h	/^    std::vector<double>         GetEnergies()  { return _vEnergies; }$/;"	f	class:OpenBabel::OBConformerData
GetEnergies	include/openbabel/generic.h	/^    std::vector<double> GetEnergies() const$/;"	f	class:OpenBabel::OBDOSData
GetEnergies	src/mol.cpp	/^  vector<double> OBMol::GetEnergies()$/;"	f	class:OpenBabel::OBMol
GetEnergy	include/openbabel/generic.h	/^    double GetEnergy() const        { return _energy; }$/;"	f	class:OpenBabel::OBOrbital
GetEnergy	include/openbabel/mol.h	/^    double       GetEnergy() const { return _energy; }$/;"	f	class:OpenBabel::OBMol
GetEnergy	src/mol.cpp	/^  double OBMol::GetEnergy(int ci)$/;"	f	class:OpenBabel::OBMol
GetEquibLength	src/bond.cpp	/^  double OBBond::GetEquibLength() const$/;"	f	class:OpenBabel::OBBond
GetError	include/openbabel/oberror.h	/^      std::string    GetError() const            { return _errorMsg;        }$/;"	f	class:OpenBabel::OBError
GetErrorMessageCount	include/openbabel/oberror.h	/^      unsigned int GetErrorMessageCount() { return _messageCount[obError];}$/;"	f	class:OpenBabel::OBMessageHandler
GetEvalAtoms	include/openbabel/rotor.h	/^    OBBitVec &GetEvalAtoms() { return _evalatoms; }$/;"	f	class:OpenBabel::OBRotor
GetExactMass	src/atom.cpp	/^  double OBAtom::GetExactMass() const$/;"	f	class:OpenBabel::OBAtom
GetExactMass	src/data.cpp	/^  double        OBIsotopeTable::GetExactMass(const unsigned int ele,$/;"	f	class:OpenBabel::OBIsotopeTable
GetExactMass	src/mol.cpp	/^  double OBMol::GetExactMass(bool implicitH)$/;"	f	class:OpenBabel::OBMol
GetExplanation	include/openbabel/oberror.h	/^      std::string    GetExplanation() const      { return _explanation;     }$/;"	f	class:OpenBabel::OBError
GetExprAtomicNum	src/parsmart.cpp	/^  static int GetExprAtomicNum(AtomExpr *expr)$/;"	f	namespace:OpenBabel
GetExprCharge	src/parsmart.cpp	/^  static int GetExprCharge(AtomExpr *expr)$/;"	f	namespace:OpenBabel
GetExprOrder	src/parsmart.cpp	/^  static int GetExprOrder(BondExpr *expr)$/;"	f	namespace:OpenBabel
GetFactor	src/forcefield.cpp	/^  double OBFFConstraints::GetFactor()$/;"	f	class:OpenBabel::OBFFConstraints
GetFermiEnergy	include/openbabel/generic.h	/^    double GetFermiEnergy() const$/;"	f	class:OpenBabel::OBDOSData
GetFilter	src/GUI/OBGUI.cpp	/^wxString OBGUIFrame::GetFilter(wxChoice* pChoice)$/;"	f	class:OBGUIFrame
GetFingerprint	include/openbabel/fingerprint.h	/^  OBFingerprint* GetFingerprint() const{ return _pFP;};$/;"	f	class:OpenBabel::FastSearch
GetFingerprint	src/fingerprints/finger2.cpp	/^bool fingerprint2::GetFingerprint(OBBase* pOb, vector<unsigned int>&fp, int nbits)$/;"	f	class:OpenBabel::fingerprint2
GetFingerprint	src/fingerprints/finger3.cpp	/^  virtual bool GetFingerprint(OBBase* pOb, vector<unsigned int>&fp, int foldbits)$/;"	f	class:OpenBabel::PatternFP
GetFingerprint	src/fingerprints/fingerecfp.cpp	/^bool fingerprintECFP::GetFingerprint(OBBase* pOb, vector<unsigned int>&fp, int nbits)$/;"	f	class:OpenBabel::fingerprintECFP
GetFirstAtom	src/mol.cpp	/^  OBAtom *OBMol::GetFirstAtom() const$/;"	f	class:OpenBabel::OBMol
GetFixedAtoms	include/openbabel/rotor.h	/^    OBBitVec &GetFixedAtoms() { return _fixedatoms; }$/;"	f	class:OpenBabel::OBRotor
GetFixedBitVec	include/openbabel/forcefield.h	/^    OBBitVec GetFixedBitVec() { return _fixed; }$/;"	f	class:OpenBabel::OBFFConstraints
GetFixedBonds	include/openbabel/rotor.h	/^    OBBitVec &GetFixedBonds()$/;"	f	class:OpenBabel::OBRotor
GetFlag	include/openbabel/atom.h	/^      int  GetFlag() const    {  return(_flags);  }$/;"	f	class:OpenBabel::OBAtom
GetFlags	include/openbabel/bond.h	/^      unsigned int     GetFlags()         const { return(_flags);      }$/;"	f	class:OpenBabel::OBBond
GetFlags	include/openbabel/mol.h	/^    int          GetFlags()               { return(_flags); }$/;"	f	class:OpenBabel::OBMol
GetFontFamily	src/depict/depict.cpp	/^  const std::string& OBDepict::GetFontFamily() const$/;"	f	class:OpenBabel::OBDepict
GetFontMetrics	src/depict/asciipainter.cpp	/^  OBFontMetrics ASCIIPainter::GetFontMetrics(const std::string &text)$/;"	f	class:OpenBabel::ASCIIPainter
GetFontMetrics	src/depict/cairopainter.cpp	/^  OBFontMetrics CairoPainter::GetFontMetrics(const std::string &text)$/;"	f	class:OpenBabel::CairoPainter
GetFontMetrics	src/depict/commandpainter.cpp	/^  OBFontMetrics CommandPainter::GetFontMetrics(const std::string &text)$/;"	f	class:OpenBabel::CommandPainter
GetFontMetrics	src/depict/svgpainter.cpp	/^  OBFontMetrics SVGPainter::GetFontMetrics(const std::string &text)$/;"	f	class:OpenBabel::SVGPainter
GetFontSize	src/depict/depict.cpp	/^  int OBDepict::GetFontSize(bool subscript) const$/;"	f	class:OpenBabel::OBDepict
GetForces	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > > GetForces() {return _vForces; }$/;"	f	class:OpenBabel::OBConformerData
GetForces	include/openbabel/generic.h	/^    std::vector<double> GetForces() const$/;"	f	class:OpenBabel::OBElectronicTransitionData
GetFormalCharge	include/openbabel/atom.h	/^      int          GetFormalCharge()  const { return(_fcharge);    }$/;"	f	class:OpenBabel::OBAtom
GetFormalCharges	include/openbabel/chargemodel.h	/^    const std::vector<double> & GetFormalCharges() const$/;"	f	class:OpenBabel::OBChargeModel
GetFormula	src/mol.cpp	/^  string OBMol::GetFormula()$/;"	f	class:OpenBabel::OBMol
GetFractionalMatrix	src/generic.cpp	/^  matrix3x3 OBUnitCell::GetFractionalMatrix() const$/;"	f	class:OpenBabel::OBUnitCell
GetFragment	src/builder.cpp	/^  OBBitVec OBBuilder::GetFragment(OBAtom *atom)$/;"	f	class:OpenBabel::OBBuilder
GetFrequencies	include/openbabel/generic.h	/^    std::vector<double> GetFrequencies() const$/;"	f	class:OpenBabel::OBVibrationData
GetFromType	src/data.cpp	/^  std::string OBTypeTable::GetFromType()$/;"	f	class:OpenBabel::OBTypeTable
GetGIDVector	src/mol.cpp	/^  void OBMol::GetGIDVector(vector<unsigned int> &vgid)$/;"	f	class:OpenBabel::OBMol
GetGIVector	src/graphsym.cpp	/^  void OBGraphSymPrivate::GetGIVector(vector<unsigned int> &vid)$/;"	f	class:OpenBabel::OBGraphSymPrivate
GetGIVector	src/mol.cpp	/^  void OBMol::GetGIVector(vector<unsigned int> &vid)$/;"	f	class:OpenBabel::OBMol
GetGTDVector	src/graphsym.cpp	/^  bool OBGraphSymPrivate::GetGTDVector(vector<int> &gtd)$/;"	f	class:OpenBabel::OBGraphSymPrivate
GetGTDVector	src/mol.cpp	/^  bool OBMol::GetGTDVector(vector<int> &gtd)$/;"	f	class:OpenBabel::OBMol
GetGamma	src/generic.cpp	/^  double OBUnitCell::GetGamma() const$/;"	f	class:OpenBabel::OBUnitCell
GetGenericValue	include/openbabel/generic.h	/^    virtual const ValueT &GetGenericValue() const    { return(_value); }$/;"	f	class:OpenBabel::OBPairTemplate
GetGenericValueDef	include/openbabel/generic.h	/^    const ValueT &GetGenericValueDef(const ValueT &def_val) const$/;"	f	class:OpenBabel::OBPairTemplate
GetGeometry	src/distgeom.cpp	/^  bool OBDistanceGeometry::GetGeometry(OBMol &mol, bool useCurrentGeom)$/;"	f	class:OpenBabel::OBDistanceGeometry
GetGradient	include/openbabel/forcefield.h	/^    vector3 GetGradient(int a)$/;"	f	class:OpenBabel::OBFFConstraint
GetGradient	include/openbabel/forcefield.h	/^    virtual vector3 GetGradient(OBAtom *a, int \/*terms*\/ = OBFF_ENERGY)$/;"	f	class:OpenBabel::OBForceField
GetGradient	src/forcefield.cpp	/^  vector3 OBFFConstraints::GetGradient(int a)$/;"	f	class:OpenBabel::OBFFConstraints
GetGradientPtr	include/openbabel/forcefield.h	/^    double* GetGradientPtr()$/;"	f	class:OpenBabel::OBForceField
GetGreen	include/openbabel/data.h	/^      double GetGreen()          {       return(_green);   }$/;"	f	class:OpenBabel::OBElement
GetGrid	src/forcefield.cpp	/^  OBGridData* OBForceField::GetGrid(double step, double padding, const char* type, double pchg)$/;"	f	class:OpenBabel::OBForceField
GetGroupVertex	src/formats/libinchi/ichi_bns.c	/^Vertex GetGroupVertex(BN_STRUCT *pBNS, Vertex v1, AT_NUMB type)$/;"	f
GetHMName	include/openbabel/math/spacegroup.h	/^        const std::string & GetHMName() const$/;"	f	class:OpenBabel::SpaceGroup
GetHalfSpace	include/openbabel/grid.h	/^    double GetHalfSpace() const {return(_halfSpace);}$/;"	f	class:OpenBabel::OBFloatGrid
GetHalfStereobond0DParity	src/formats/libinchi/ichister.c	/^int GetHalfStereobond0DParity( inp_ATOM *at, int cur_at, AT_NUMB nSbNeighOrigAtNumb[],$/;"	f
GetHallName	include/openbabel/math/spacegroup.h	/^        const std::string & GetHallName()const$/;"	f	class:OpenBabel::SpaceGroup
GetHeatOfFormation	src/data.cpp	/^  int OBAtomicHeatOfFormationTable::GetHeatOfFormation(std::string elem,$/;"	f	class:OpenBabel::OBAtomicHeatOfFormationTable
GetHeavyAtomCoords	src/confsearch.cpp	/^  vector<vector3> OBDiversePoses::GetHeavyAtomCoords(const vector<vector3> &all_coords) {$/;"	f	class:OpenBabel::OBDiversePoses
GetHeavyAtomCoords	src/confsearch.cpp	/^vector<vector3> GetHeavyAtomCoords(const OBMol* mol, const vector<vector3> &all_coords) {$/;"	f	namespace:OpenBabel
GetHeteroValence	src/atom.cpp	/^  unsigned int OBAtom::GetHeteroValence() const$/;"	f	class:OpenBabel::OBAtom
GetHiT	include/openbabel/kinetics.h	/^  double GetHiT() const {return HiT;}$/;"	f	class:OpenBabel::OBNasaThermoData
GetHillFormulaCounts	src/formats/libinchi/ichimak2.c	/^int GetHillFormulaCounts( U_CHAR *nAtom, S_CHAR *nNum_H, int num_atoms,$/;"	f
GetHillFormulaIndexLength	src/formats/libinchi/ichimak2.c	/^int GetHillFormulaIndexLength( int count )$/;"	f
GetHvyBondSum	src/graphsym.cpp	/^  unsigned int OBGraphSymPrivate::GetHvyBondSum(OBAtom *atom)$/;"	f	class:OpenBabel::OBGraphSymPrivate
GetHvyValence	src/atom.cpp	/^  unsigned int OBAtom::GetHvyValence() const$/;"	f	class:OpenBabel::OBAtom
GetHvyValence	src/graphsym.cpp	/^  unsigned int OBGraphSymPrivate::GetHvyValence(OBAtom *atom)$/;"	f	class:OpenBabel::OBGraphSymPrivate
GetHyb	src/atom.cpp	/^  unsigned int OBAtom::GetHyb() const$/;"	f	class:OpenBabel::OBAtom
GetID	include/openbabel/plugin.h	/^  const char* GetID()const{return _id;};$/;"	f	class:OpenBabel::OBPlugin
GetINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL GetINCHI( inchi_Input *inp, inchi_Output *out )$/;"	f
GetINCHI1	src/formats/libinchi/inchi_dll.c	/^static int GetINCHI1(inchi_Input *inp, inchi_Output *out, int bStdFormat)$/;"	f	file:
GetINCHIKeyFromINCHI	src/formats/libinchi/ikey_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL GetINCHIKeyFromINCHI(const char* szINCHISource, $/;"	f
GetINCHIfromINCHI	src/formats/libinchi/inchi_dll.c	/^int INCHI_DECL GetINCHIfromINCHI( inchi_InputINCHI *inpInChI, inchi_Output *out )$/;"	f
GetId	include/openbabel/atom.h	/^      unsigned long GetId() const { return _id; }$/;"	f	class:OpenBabel::OBAtom
GetId	include/openbabel/bond.h	/^      unsigned long GetId()           const { return _id; }$/;"	f	class:OpenBabel::OBBond
GetId	include/openbabel/math/spacegroup.h	/^        unsigned GetId() const$/;"	f	class:OpenBabel::SpaceGroup
GetIdentifier	src/descriptor.cpp	/^pair<string,string> OBDescriptor::GetIdentifier(istream& optionText)$/;"	f	class:OpenBabel::OBDescriptor
GetIdx	include/openbabel/atom.h	/^      unsigned int GetIdx()           const { return((int)_idx);  }$/;"	f	class:OpenBabel::OBAtom
GetIdx	include/openbabel/bond.h	/^      unsigned int     GetIdx()           const { return(_idx);  }$/;"	f	class:OpenBabel::OBBond
GetIdx	include/openbabel/generic.h	/^    int     GetIdx()  const    {        return(_idx);    }$/;"	f	class:OpenBabel::OBExternalBond
GetIdx	include/openbabel/rotor.h	/^    int GetIdx() const$/;"	f	class:OpenBabel::OBRotor
GetIdx	src/residue.cpp	/^  unsigned int OBResidue::GetIdx(void) const$/;"	f	class:OpenBabel::OBResidue
GetIgnoredBitVec	include/openbabel/forcefield.h	/^    OBBitVec GetIgnoredBitVec() { return _ignored; }$/;"	f	class:OpenBabel::OBFFConstraints
GetImplicitValence	src/atom.cpp	/^  unsigned int OBAtom::GetImplicitValence() const$/;"	f	class:OpenBabel::OBAtom
GetInChI	src/formats/getinchi.cpp	/^string GetInChI(istream& is)$/;"	f	namespace:OpenBabel
GetInChIFormulaNumH	src/formats/libinchi/ichiread.c	/^int GetInChIFormulaNumH( INChI *pInChI, int *nNumH )$/;"	f
GetInChIIsoH	src/formats/libinchi/ichiread.c	/^int GetInChIIsoH( INChI *pInChI, int nNumIsotopicH[NUM_H_ISOTOPES] )$/;"	f
GetInChINumH	src/formats/libinchi/ichiread.c	/^int GetInChINumH( INChI *pInChI, int *nNumH )$/;"	f
GetInChIOptions	src/formats/inchiformat.cpp	/^char* InChIFormat::GetInChIOptions(OBConversion* pConv, bool Reading)$/;"	f	class:OpenBabel::InChIFormat
GetInFileBasePath	src/GUI/OBGUI.h	/^  wxString GetInFileBasePath(){ return m_InFileBasePath;}$/;"	f	class:OBGUIFrame
GetInFilename	include/openbabel/obconversion.h	/^      std::string GetInFilename() const{return InFilename;};$/;"	f	class:OpenBabel::OBConversion
GetInFormat	include/openbabel/obconversion.h	/^      OBFormat*   GetInFormat() const{return pInFormat;};$/;"	f	class:OpenBabel::OBConversion
GetInGzipped	include/openbabel/obconversion.h	/^      bool GetInGzipped() const{return inFormatGzip;};$/;"	f	class:OpenBabel::OBConversion
GetInLen	include/openbabel/obconversion.h	/^      size_t GetInLen()const{return wInlen;};$/;"	f	class:OpenBabel::OBConversion
GetInPos	include/openbabel/obconversion.h	/^      std::streampos GetInPos()const{return wInpos;};$/;"	f	class:OpenBabel::OBConversion
GetInStream	include/openbabel/obconversion.h	/^      std::istream* GetInStream() const {return pInput;};$/;"	f	class:OpenBabel::OBConversion
GetInchifiedSMILESMolecule	src/formats/smilesformat.cpp	/^  bool SMIBaseFormat::GetInchifiedSMILESMolecule(OBMol *mol, bool useFixedHRecMet)$/;"	f	class:OpenBabel::SMIBaseFormat
GetIndex	include/openbabel/atom.h	/^      unsigned int GetIndex() const { return _idx - 1; }$/;"	f	class:OpenBabel::OBAtom
GetIndex	include/openbabel/query.h	/^      unsigned int GetIndex() const$/;"	f	class:OpenBabel::OBQueryAtom
GetIndex	include/openbabel/query.h	/^      unsigned int GetIndex() const$/;"	f	class:OpenBabel::OBQueryBond
GetIndexHeader	include/openbabel/fingerprint.h	/^  const FptIndexHeader& GetIndexHeader() const{ return _index.header;};$/;"	f	class:OpenBabel::FastSearch
GetInfoMessageCount	include/openbabel/oberror.h	/^      unsigned int GetInfoMessageCount() { return _messageCount[obInfo];}$/;"	f	class:OpenBabel::OBMessageHandler
GetInpStructErrorType	src/formats/libinchi/ichimake.c	/^int GetInpStructErrorType( INPUT_PARMS *ip, int err, char *pStrErrStruct, int num_inp_atoms )$/;"	f
GetInsertionCode	src/residue.cpp	/^  char OBResidue::GetInsertionCode(void) const$/;"	f	class:OpenBabel::OBResidue
GetInstance	src/isomorphism.cpp	/^  OBIsomorphismMapper* OBIsomorphismMapper::GetInstance(OBQuery *query, const std::string &algorithm)$/;"	f	class:OpenBabel::OBIsomorphismMapper
GetIntegration	include/openbabel/generic.h	/^    std::vector<double> GetIntegration() const$/;"	f	class:OpenBabel::OBDOSData
GetIntensities	include/openbabel/generic.h	/^    std::vector<double> GetIntensities() const$/;"	f	class:OpenBabel::OBVibrationData
GetInternalCoord	src/mol.cpp	/^  std::vector<OBInternalCoord*> OBMol::GetInternalCoord()$/;"	f	class:OpenBabel::OBMol
GetIonization	include/openbabel/data.h	/^      double GetIonization()     {       return(_ionize);  }$/;"	f	class:OpenBabel::OBElement
GetIonization	src/data.cpp	/^  double OBElementTable::GetIonization(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetIsotope	include/openbabel/atom.h	/^      unsigned short int GetIsotope() const { return(_isotope);    }$/;"	f	class:OpenBabel::OBAtom
GetKey	include/openbabel/rotor.h	/^      std::vector<int> GetKey()$/;"	f	class:OBRotorKeys
GetLSSR	src/mol.cpp	/^  vector<OBRing*> &OBMol::GetLSSR()$/;"	f	class:OpenBabel::OBMol
GetLabelAlignment	src/depict/depict.cpp	/^  int GetLabelAlignment(OBAtom *atom)$/;"	f	namespace:OpenBabel
GetLatticeType	src/generic.cpp	/^  OBUnitCell::LatticeType OBUnitCell::GetLatticeType( int spacegroup ) const$/;"	f	class:OpenBabel::OBUnitCell
GetLatticeType	src/generic.cpp	/^  OBUnitCell::LatticeType OBUnitCell::GetLatticeType() const$/;"	f	class:OpenBabel::OBUnitCell
GetLen	src/formats/chemdrawcdx.cpp	/^  int GetLen()const            { return _len;} \/\/length of current property data$/;"	f	class:OpenBabel::CDXReader
GetLength	src/bond.cpp	/^  double OBBond::GetLength() const$/;"	f	class:OpenBabel::OBBond
GetLevel	include/openbabel/oberror.h	/^      obMessageLevel GetLevel() const            { return _level;           }$/;"	f	class:OpenBabel::OBError
GetLineSearchType	include/openbabel/forcefield.h	/^    int GetLineSearchType()$/;"	f	class:OpenBabel::OBForceField
GetLoRate	include/openbabel/kinetics.h	/^  double GetLoRate(rate_type n) const$/;"	f	class:OpenBabel::OBRateData
GetLoT	include/openbabel/kinetics.h	/^  double GetLoT() const {return LoT;}$/;"	f	class:OpenBabel::OBNasaThermoData
GetLogLevel	include/openbabel/forcefield.h	/^    int GetLogLevel() { return _loglvl; }$/;"	f	class:OpenBabel::OBForceField
GetLowerBounds	src/distgeom.cpp	/^    float GetLowerBounds(int i, int j)$/;"	f	class:OpenBabel::DistanceGeometryPrivate
GetLx	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > > GetLx() const$/;"	f	class:OpenBabel::OBVibrationData
GetMIMEType	include/openbabel/format.h	/^    virtual const char* GetMIMEType() { return pMime; }$/;"	f	class:OpenBabel::OBFormat
GetMIMEType	src/formats/MCDLformat.cpp	/^  virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MCDLFormat
GetMIMEType	src/formats/acrformat.cpp	/^    virtual const char* GetMIMEType() { return "chemical\/x-acr"; };$/;"	f	class:OpenBabel::ACRFormat
GetMIMEType	src/formats/adfformat.cpp	/^    virtual const char* GetMIMEType() { return 0; };$/;"	f	class:OpenBabel::OBT41Format
GetMIMEType	src/formats/alchemyformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::AlchemyFormat
GetMIMEType	src/formats/cacheformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::CacheFormat
GetMIMEType	src/formats/carformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::CARFormat
GetMIMEType	src/formats/chemdrawcdx.cpp	/^  virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
GetMIMEType	src/formats/crkformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::CRK2DFormat
GetMIMEType	src/formats/crkformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::CRK3DFormat
GetMIMEType	src/formats/daltonformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::DALTONInputFormat
GetMIMEType	src/formats/daltonformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::DALTONOutputFormat
GetMIMEType	src/formats/exampleformat.cpp	/^	virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::XXXFormat
GetMIMEType	src/formats/exyzformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::EXYZFormat
GetMIMEType	src/formats/fastaformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::FASTAFormat
GetMIMEType	src/formats/fchkformat.cpp	/^    virtual const char * GetMIMEType()$/;"	f	class:OpenBabel::FCHKFormat
GetMIMEType	src/formats/gamessformat.cpp	/^      virtual const char* GetMIMEType() {$/;"	f	class:OpenBabel::GAMESSInputFormat
GetMIMEType	src/formats/gamessformat.cpp	/^      virtual const char* GetMIMEType() {$/;"	f	class:OpenBabel::GAMESSOutputFormat
GetMIMEType	src/formats/gamessukformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::GAMESSUKInputFormat
GetMIMEType	src/formats/gamessukformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
GetMIMEType	src/formats/gausscubeformat.cpp	/^    virtual const char* GetMIMEType() { return 0; };$/;"	f	class:OpenBabel::OBGaussianCubeFormat
GetMIMEType	src/formats/gaussformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::GaussianInputFormat
GetMIMEType	src/formats/gaussformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::GaussianOutputFormat
GetMIMEType	src/formats/gausszmatformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::GaussianZMatrixInputFormat
GetMIMEType	src/formats/genbankformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::GenBankFormat
GetMIMEType	src/formats/hinformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::HINFormat
GetMIMEType	src/formats/lmpdatformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::LMPDATFormat
GetMIMEType	src/formats/lpmdformat.cpp	/^  virtual const char* GetMIMEType()  { return "chemical\/lpmd"; };$/;"	f	class:OpenBabel::LpmdFormat
GetMIMEType	src/formats/mdlformat.cpp	/^      virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MDLFormat
GetMIMEType	src/formats/mmcifformat.cpp	/^   virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::mmCIFFormat
GetMIMEType	src/formats/mmodformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MacroModFormat
GetMIMEType	src/formats/mol2format.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MOL2Format
GetMIMEType	src/formats/moldenformat.cpp	/^    virtual const char* GetMIMEType() { return 0; };$/;"	f	class:OpenBabel::OBMoldenFormat
GetMIMEType	src/formats/mopacformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MOPACCARTFormat
GetMIMEType	src/formats/mopacformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MOPACFormat
GetMIMEType	src/formats/mopacformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MOPACINTFormat
GetMIMEType	src/formats/msiformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::MSIFormat
GetMIMEType	src/formats/msmsformat.cpp	/^    virtual const char* GetMIMEType() { return 0; };$/;"	f	class:OpenBabel::OBMSMSFormat
GetMIMEType	src/formats/opendxformat.cpp	/^    virtual const char* GetMIMEType() { return 0; };$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
GetMIMEType	src/formats/pdbformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::PDBFormat
GetMIMEType	src/formats/pdbqtformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::PDBQTFormat
GetMIMEType	src/formats/pointcloudformat.cpp	/^      virtual const char* GetMIMEType() { return "chemical\/x-pointcloud"; };$/;"	f	class:OpenBabel::PointCloudFormat
GetMIMEType	src/formats/posformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::POSFormat
GetMIMEType	src/formats/pqrformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::PQRFormat
GetMIMEType	src/formats/rsmiformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::SmiReactFormat
GetMIMEType	src/formats/rxnformat.cpp	/^  virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::RXNFormat
GetMIMEType	src/formats/shelxformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::ShelXFormat
GetMIMEType	src/formats/smilesformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::SMIBaseFormat
GetMIMEType	src/formats/smileyformat.cpp	/^      virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::SmileyFormat
GetMIMEType	src/formats/stlformat.cpp	/^      virtual const char* GetMIMEType() { return "application\/sla"; };$/;"	f	class:OpenBabel::STLFormat
GetMIMEType	src/formats/xml/cdxmlformat.cpp	/^  virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::ChemDrawXMLFormat
GetMIMEType	src/formats/xml/cmlformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::CMLFormat
GetMIMEType	src/formats/xml/pubchem.cpp	/^  virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::PubChemFormat
GetMIMEType	src/formats/xyzformat.cpp	/^    virtual const char* GetMIMEType()$/;"	f	class:OpenBabel::XYZFormat
GetMapList	include/openbabel/parsmart.h	/^    std::vector<std::vector<int> > &GetMapList()$/;"	f	class:OpenBabel::OBSmartsPattern
GetMass	include/openbabel/data.h	/^      double GetMass()           {       return(_mass);   }$/;"	f	class:OpenBabel::OBElement
GetMass	src/data.cpp	/^  double OBElementTable::GetMass(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetMatchAtoms	src/ops/opisomorph.h	/^  std::vector<int> GetMatchAtoms(){ return firstmatch; }$/;"	f	class:OpenBabel::OpNewS
GetMax	include/openbabel/grid.h	/^    vector3 GetMax() { return vector3(_xmax, _ymax, _zmax); }$/;"	f	class:OpenBabel::OBFloatGrid
GetMax	include/openbabel/grid.h	/^    void GetMax(double *a)$/;"	f	class:OpenBabel::OBFloatGrid
GetMaxBonds	include/openbabel/data.h	/^      int GetMaxBonds()          {       return(_maxbonds);}$/;"	f	class:OpenBabel::OBElement
GetMaxBonds	src/data.cpp	/^  int OBElementTable::GetMaxBonds(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetMaxLogEntries	include/openbabel/oberror.h	/^      unsigned int GetMaxLogEntries() { return _maxEntries; }$/;"	f	class:OpenBabel::OBMessageHandler
GetMaxPrintfLength	src/formats/libinchi/ichi_io.c	/^int GetMaxPrintfLength( const char *lpszFormat, va_list argList)$/;"	f
GetMaxValue	src/griddata.cpp	/^  double OBGridData::GetMaxValue() const$/;"	f	class:OpenBabel::OBGridData
GetMaxVector	src/griddata.cpp	/^  vector3 OBGridData::GetMaxVector() const$/;"	f	class:OpenBabel::OBGridData
GetMessageSummary	src/oberror.cpp	/^  string OBMessageHandler::GetMessageSummary()$/;"	f	class:OpenBabel::OBMessageHandler
GetMessagesOfLevel	src/oberror.cpp	/^  std::vector<std::string> OBMessageHandler::GetMessagesOfLevel(const obMessageLevel level)$/;"	f	class:OpenBabel::OBMessageHandler
GetMethod	include/openbabel/oberror.h	/^      std::string    GetMethod() const           { return _method;          }$/;"	f	class:OpenBabel::OBError
GetMidT	include/openbabel/kinetics.h	/^  double GetMidT() const {return MidT;}$/;"	f	class:OpenBabel::OBNasaThermoData
GetMidpointVector	include/openbabel/grid.h	/^    vector3 GetMidpointVector()$/;"	f	class:OpenBabel::OBFloatGrid
GetMin	include/openbabel/grid.h	/^    vector3 GetMin() { return vector3(_xmin, _ymin, _zmin); }$/;"	f	class:OpenBabel::OBFloatGrid
GetMin	include/openbabel/grid.h	/^    void GetMin(double *a)$/;"	f	class:OpenBabel::OBFloatGrid
GetMinDistDistribution	src/formats/libinchi/strutil.c	/^double GetMinDistDistribution( inp_ATOM *at, int num_at, int iat, int iat_H,$/;"	f
GetMinNewRank	src/formats/libinchi/ichimap2.c	/^AT_RANK GetMinNewRank(AT_RANK *nAtomRank, AT_RANK *nAtomNumb, AT_RANK nRank1 )$/;"	f
GetMinRingSize	src/formats/libinchi/ichiring.c	/^int GetMinRingSize( inp_ATOM* atom, QUEUE *q, AT_RANK *nAtomLevel, S_CHAR *cSource, AT_RANK nMaxRingSize )$/;"	f
GetMinValue	src/griddata.cpp	/^  double OBGridData::GetMinValue() const$/;"	f	class:OpenBabel::OBGridData
GetMltb	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetMltb(int atomtype)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetMod	include/openbabel/mol.h	/^    int GetMod()           {      return(_mod);    }$/;"	f	class:OpenBabel::OBMol
GetMolID	src/formats/xml/cmlformat.cpp	/^  string CMLFormat::GetMolID()$/;"	f	class:OpenBabel::CMLFormat
GetMolWt	src/mol.cpp	/^  double OBMol::GetMolWt(bool implicitH)$/;"	f	class:OpenBabel::OBMol
GetMolecule	include/openbabel/stereo/stereo.h	/^      OBMol* GetMolecule() const { return m_mol; }$/;"	f	class:OpenBabel::OBStereoBase
GetNRMSD	src/confsearch.cpp	/^      inline int GetNRMSD() {$/;"	f	class:OpenBabel::OBDiversePoses
GetName	include/openbabel/data.h	/^      std::string GetName()      {       return(_name);    }$/;"	f	class:OpenBabel::OBElement
GetName	src/data.cpp	/^  string OBElementTable::GetName(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetName	src/residue.cpp	/^  string OBResidue::GetName(void) const$/;"	f	class:OpenBabel::OBResidue
GetNbEnergyCompute	include/openbabel/conformersearch.h	/^      long unsigned int GetNbEnergyCompute () {return energy_ncompute;}$/;"	f	class:OpenBabel::OBEnergyConformerScore
GetNbEnergyCompute	include/openbabel/conformersearch.h	/^      long unsigned int GetNbEnergyCompute () {return energy_ncompute;}$/;"	f	class:OpenBabel::OBMinimizingEnergyConformerScore
GetNbEnergyRequest	include/openbabel/conformersearch.h	/^      long unsigned int GetNbEnergyRequest () {return energy_nrequest;}$/;"	f	class:OpenBabel::OBEnergyConformerScore
GetNbEnergyRequest	include/openbabel/conformersearch.h	/^      long unsigned int GetNbEnergyRequest () {return energy_nrequest;}$/;"	f	class:OpenBabel::OBMinimizingEnergyConformerScore
GetNbNiches	include/openbabel/conformersearch.h	/^      int GetNbNiches () {return nb_niches;}$/;"	f	class:OpenBabel::OBConformerSearch
GetNbrAtom	include/openbabel/bond.h	/^      OBAtom *GetNbrAtom(OBAtom *ptr)$/;"	f	class:OpenBabel::OBBond
GetNbrAtomIdx	include/openbabel/bond.h	/^      unsigned int     GetNbrAtomIdx(OBAtom *ptr)$/;"	f	class:OpenBabel::OBBond
GetNbrs	include/openbabel/query.h	/^      const std::vector<OBQueryAtom*>& GetNbrs() const$/;"	f	class:OpenBabel::OBQueryAtom
GetNeutralRepsIfNeeded	src/formats/libinchi/ichitaut.c	/^int GetNeutralRepsIfNeeded( AT_NUMB *pri, AT_NUMB *prj, inp_ATOM *at, int num_atoms, $/;"	f
GetNewBondVector	src/atom.cpp	/^  bool OBAtom::GetNewBondVector(vector3 &v,double length)$/;"	f	class:OpenBabel::OBAtom
GetNewBondVector	src/builder.cpp	/^  vector3 OBBuilder::GetNewBondVector(OBAtom *atom)$/;"	f	class:OpenBabel::OBBuilder
GetNewBondVector	src/builder.cpp	/^  vector3 OBBuilder::GetNewBondVector(OBAtom *atom, double length)$/;"	f	class:OpenBabel::OBBuilder
GetNext	src/confsearch.cpp	/^  inline unsigned int LFSR::GetNext()$/;"	f	class:OpenBabel::LFSR
GetNextAtom	src/atom.cpp	/^  OBAtom *OBAtom::GetNextAtom()$/;"	f	class:OpenBabel::OBAtom
GetNextEff	include/openbabel/kinetics.h	/^  bool GetNextEff(std::string& id, double& Eff)$/;"	f	class:OpenBabel::OBRateData
GetNextFormat	src/obconversion.cpp	/^  bool OBConversion::GetNextFormat(Formatpos& itr, const char*& str,OBFormat*& pFormat)$/;"	f	class:OpenBabel::OBConversion
GetNextFragment	src/mol.cpp	/^  bool OBMol::GetNextFragment( OBMolAtomDFSIter& iter, OBMol& newmol ) {$/;"	f	class:OpenBabel::OBMol
GetNextNeighborAndRank	src/formats/libinchi/ichicans.c	/^int GetNextNeighborAndRank( sp_ATOM *at, AT_RANK cur, AT_RANK prev, AT_RANK *n, AT_RANK *cr, const AT_RANK *nCanonRank )$/;"	f
GetNicheMating	include/openbabel/conformersearch.h	/^      double GetNicheMating () {return niche_mating;}$/;"	f	class:OpenBabel::OBConformerSearch
GetNicheRadius	include/openbabel/conformersearch.h	/^      int GetNicheRadius () {return niche_radius;}$/;"	f	class:OpenBabel::OBConformerSearch
GetNonperiodicJij	src/charges/eqeq.cpp	/^  double EQEqCharges::GetNonperiodicJij(double J_i, double J_j, double R_ij, bool isSameAtom)$/;"	f	class:OpenBabel::EQEqCharges
GetNormalization	src/spectrophore.cpp	/^OBSpectrophore::GetNormalization(void) const$/;"	f	class:OpenBabel::OBSpectrophore
GetNum	src/residue.cpp	/^  unsigned int OBResidue::GetNum(void)$/;"	f	class:OpenBabel::OBResidue
GetNumAtoms	src/residue.cpp	/^  unsigned int OBResidue::GetNumAtoms(void) const$/;"	f	class:OpenBabel::OBResidue
GetNumElectrostaticPairs	src/forcefield.cpp	/^  unsigned int OBForceField::GetNumElectrostaticPairs()$/;"	f	class:OpenBabel::OBForceField
GetNumNeighborsFromInchi	src/formats/libinchi/ichiread.c	/^int GetNumNeighborsFromInchi( INChI *pInChI, AT_NUMB nAtNumber )$/;"	f
GetNumPairs	src/forcefield.cpp	/^  unsigned int OBForceField::GetNumPairs()$/;"	f	class:OpenBabel::OBForceField
GetNumString	src/residue.cpp	/^  std::string OBResidue::GetNumString(void)$/;"	f	class:OpenBabel::OBResidue
GetNumSymmetries	src/griddata.cpp	/^  int OBGridData::GetNumSymmetries() const$/;"	f	class:OpenBabel::OBGridData
GetNumVDWPairs	src/forcefield.cpp	/^  unsigned int OBForceField::GetNumVDWPairs()$/;"	f	class:OpenBabel::OBForceField
GetNumberOfElements	src/data.cpp	/^  unsigned int OBElementTable::GetNumberOfElements()$/;"	f	class:OpenBabel::OBElementTable
GetNumberOfFrequencies	src/generic.cpp	/^unsigned int OBVibrationData::GetNumberOfFrequencies() const$/;"	f	class:OpenBabel::OBVibrationData
GetNumberOfPoints	src/griddata.cpp	/^  int OBGridData::GetNumberOfPoints() const$/;"	f	class:OpenBabel::OBGridData
GetNumberOfPoints	src/griddata.cpp	/^  void OBGridData::GetNumberOfPoints( int &nx, int &ny, int &nz) const$/;"	f	class:OpenBabel::OBGridData
GetNumberOfSteps	src/griddata.cpp	/^  void OBGridData::GetNumberOfSteps( int steps[ 3 ] ) const$/;"	f	class:OpenBabel::OBGridData
GetNumberedRGroup	src/formats/mdlformat.cpp	/^  static int GetNumberedRGroup(OBMol* pmol, OBAtom* atom)$/;"	f	namespace:OpenBabel
GetOccupation	include/openbabel/generic.h	/^    double GetOccupation() const    { return _occupation; }$/;"	f	class:OpenBabel::OBOrbital
GetOffset	src/generic.cpp	/^  vector3 OBUnitCell::GetOffset() const$/;"	f	class:OpenBabel::OBUnitCell
GetOneAdditionalLayer	src/formats/libinchi/ichican2.c	/^int GetOneAdditionalLayer( CANON_DATA *pCD, ConTable *pzb_rho_fix )$/;"	f
GetOneComponent	src/formats/libinchi/runichi.c	/^int GetOneComponent( STRUCT_DATA *sd, INPUT_PARMS *ip, INCHI_IOSTREAM *log_file, INCHI_IOSTREAM *output_file,$/;"	f
GetOneStructure	src/formats/libinchi/runichi.c	/^int GetOneStructure( STRUCT_DATA *sd, INPUT_PARMS *ip, char *szTitle,$/;"	f
GetOptionParams	src/obconversion.cpp	/^  int OBConversion::GetOptionParams(string name, Option_type typ)$/;"	f	class:OpenBabel::OBConversion
GetOptions	include/openbabel/obconversion.h	/^      const std::map<std::string,std::string>* GetOptions(Option_type opttyp)$/;"	f	class:OpenBabel::OBConversion
GetOptions	src/depict/depict.cpp	/^  unsigned OBDepict::GetOptions() const$/;"	f	class:OpenBabel::OBDepict
GetOrder	include/openbabel/generic.h	/^    int GetOrder()  {      return(_ord);    }$/;"	f	class:OpenBabel::OBVirtualBond
GetOrientationMatrix	src/generic.cpp	/^  matrix3x3 OBUnitCell::GetOrientationMatrix() const$/;"	f	class:OpenBabel::OBUnitCell
GetOrigin	include/openbabel/base.h	/^    virtual DataOrigin GetOrigin() const$/;"	f	class:OpenBabel::OBGenericData
GetOriginAlternative	include/openbabel/math/spacegroup.h	/^        unsigned int GetOriginAlternative() const$/;"	f	class:OpenBabel::SpaceGroup
GetOriginVector	src/griddata.cpp	/^  vector3 OBGridData::GetOriginVector() const$/;"	f	class:OpenBabel::OBGridData
GetOriginVector	src/griddata.cpp	/^  void OBGridData::GetOriginVector( double o[ 3 ] ) const$/;"	f	class:OpenBabel::OBGridData
GetOrthoMatrix	src/generic.cpp	/^  matrix3x3 OBUnitCell::GetOrthoMatrix() const$/;"	f	class:OpenBabel::OBUnitCell
GetOtherSaltChargeType	src/formats/libinchi/ichitaut.c	/^int GetOtherSaltChargeType( inp_ATOM *at, int at_no, T_GROUP_INFO *t_group_info, int *s_subtype, int bAccept_O )$/;"	f
GetOtherSaltType	src/formats/libinchi/ichitaut.c	/^int GetOtherSaltType( inp_ATOM *at, int at_no, int *s_subtype )$/;"	f
GetOutFilename	include/openbabel/obconversion.h	/^      std::string GetOutFilename() const{return OutFilename;};$/;"	f	class:OpenBabel::OBConversion
GetOutFormat	include/openbabel/obconversion.h	/^      OBFormat*   GetOutFormat() const{return pOutFormat;};$/;"	f	class:OpenBabel::OBConversion
GetOutGzipped	include/openbabel/obconversion.h	/^      bool GetOutGzipped() const{return outFormatGzip;};$/;"	f	class:OpenBabel::OBConversion
GetOutStream	include/openbabel/obconversion.h	/^      std::ostream* GetOutStream() const {return pOutput;};$/;"	f	class:OpenBabel::OBConversion
GetOutputIndex	include/openbabel/xml.h	/^      int GetOutputIndex()$/;"	f	class:OpenBabel::XMLConversion
GetOutputIndex	src/obconversion.cpp	/^  int OBConversion::GetOutputIndex() const$/;"	f	class:OpenBabel::OBConversion
GetOutputLevel	include/openbabel/oberror.h	/^      obMessageLevel GetOutputLevel() { return _outputLevel; }$/;"	f	class:OpenBabel::OBMessageHandler
GetOutputOrder	src/formats/smilesformat.cpp	/^    std::string &GetOutputOrder()$/;"	f	class:OpenBabel::OBMol2Cansmi
GetOutputStream	include/openbabel/oberror.h	/^      std::ostream* GetOutputStream() { return _outputStream; }$/;"	f	class:OpenBabel::OBMessageHandler
GetParameter	src/forcefield.cpp	/^  OBFFParameter* OBForceField::GetParameter(const char* a, const char* b, const char* c,$/;"	f	class:OpenBabel::OBForceField
GetParameter	src/forcefield.cpp	/^  OBFFParameter* OBForceField::GetParameter(int a, int b, int c, int d,$/;"	f	class:OpenBabel::OBForceField
GetParameter1Atom	src/forcefields/forcefieldmmff94.cpp	/^  OBFFParameter* OBForceFieldMMFF94::GetParameter1Atom(int a, std::vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetParameter2Atom	src/forcefields/forcefieldmmff94.cpp	/^  OBFFParameter* OBForceFieldMMFF94::GetParameter2Atom(int a, int b, std::vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetParameter3Atom	src/forcefields/forcefieldmmff94.cpp	/^  OBFFParameter* OBForceFieldMMFF94::GetParameter3Atom(int a, int b, int c, std::vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetParameterGhemical	src/forcefields/forcefieldghemical.cpp	/^  OBFFParameter* OBForceFieldGhemical::GetParameterGhemical(int type, const char* a, const char* b, const char* c, const char* d,$/;"	f	class:OpenBabel::OBForceFieldGhemical
GetParameterIdx	src/forcefield.cpp	/^  int OBForceField::GetParameterIdx(int a, int b, int c, int d, vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceField
GetParameterOOP	src/forcefields/forcefieldgaff.cpp	/^  OBFFParameter* OBForceFieldGaff::GetParameterOOP(const char* a, const char* b, const char* c, const char* d,$/;"	f	class:OpenBabel::OBForceFieldGaff
GetParameterUFF	src/forcefields/forcefielduff.cpp	/^  OBFFParameter* OBForceFieldUFF::GetParameterUFF(std::string a, vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceFieldUFF
GetParameters	src/charges/qeq.cpp	/^  Vector3d QEqCharges::GetParameters(unsigned int Z, int Q)$/;"	f	class:OpenBabel::QEqCharges
GetParameters	src/charges/qtpie.cpp	/^  Vector3d QTPIECharges::GetParameters(unsigned int Z, int Q)$/;"	f	class:OpenBabel::QTPIECharges
GetParent	include/openbabel/atom.h	/^      OBMol     *GetParent()        {return((OBMol*)_parent);}$/;"	f	class:OpenBabel::OBAtom
GetParent	include/openbabel/bond.h	/^      OBMol  *GetParent()                 {return(_parent);}$/;"	f	class:OpenBabel::OBBond
GetParent	include/openbabel/ring.h	/^    OBMol *GetParent()          {    return(_parent);}$/;"	f	class:OpenBabel::OBRing
GetParent	src/formats/smilesformat.cpp	/^    OBAtom *GetParent()$/;"	f	class:OpenBabel::OBCanSmiNode
GetParity	src/formats/mdlformat.cpp	/^  void MDLFormat::GetParity(OBMol& mol, map<OBAtom*, MDLFormat::Parity> &parity)$/;"	f	class:OpenBabel::MDLFormat
GetParity4Ref	src/chiral.cpp	/^  int GetParity4Ref(vector<unsigned int> pref)$/;"	f	namespace:OpenBabel
GetPartialCharge	src/atom.cpp	/^  double OBAtom::GetPartialCharge()$/;"	f	class:OpenBabel::OBAtom
GetPartialCharges	include/openbabel/chargemodel.h	/^    const std::vector<double> & GetPartialCharges() const$/;"	f	class:OpenBabel::OBChargeModel
GetPartialCharges	src/forcefield.cpp	/^  bool OBForceField::GetPartialCharges(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
GetPenWidth	src/depict/asciipainter.cpp	/^  double ASCIIPainter::GetPenWidth()$/;"	f	class:OpenBabel::ASCIIPainter
GetPenWidth	src/depict/cairopainter.cpp	/^  double CairoPainter::GetPenWidth()$/;"	f	class:OpenBabel::CairoPainter
GetPenWidth	src/depict/commandpainter.cpp	/^  double CommandPainter::GetPenWidth()$/;"	f	class:OpenBabel::CommandPainter
GetPenWidth	src/depict/depict.cpp	/^  double OBDepict::GetPenWidth() const$/;"	f	class:OpenBabel::OBDepict
GetPenWidth	src/depict/svgpainter.cpp	/^  double SVGPainter::GetPenWidth()$/;"	f	class:OpenBabel::SVGPainter
GetPeriodicEwaldJij	src/charges/eqeq.cpp	/^  double EQEqCharges::GetPeriodicEwaldJij(double J_i, double J_j, vector3 dx, bool isSameAtom, matrix3x3 unitcell, matrix3x3 fourier, double cellVolume, int numNeighbors[])$/;"	f	class:OpenBabel::EQEqCharges
GetPermutationParity	src/formats/libinchi/ichicans.c	/^int GetPermutationParity( sp_ATOM *at, AT_RANK nAvoidNeighbor, AT_RANK *nCanonRank )$/;"	f
GetPhase	include/openbabel/kinetics.h	/^  char GetPhase() const {return phase;}$/;"	f	class:OpenBabel::OBNasaThermoData
GetPlugin	src/plugin.cpp	/^OBPlugin* OBPlugin::GetPlugin(const char* Type, const char* ID)$/;"	f	class:OpenBabel::OBPlugin
GetPlusMinusVertex	src/formats/libinchi/ichirvr5.c	/^int GetPlusMinusVertex( BN_STRUCT *pBNS, ALL_TC_GROUPS *pTCGroups, int bCheckForbiddenPlus, int bCheckForbiddenMinus )$/;"	f
GetPointGroup	include/openbabel/generic.h	/^    std::string GetPointGroup() { return _pointGroup; }$/;"	f	class:OpenBabel::OBSymmetryData
GetPossibleCause	include/openbabel/oberror.h	/^      std::string    GetPossibleCause() const    { return _possibleCause;   }$/;"	f	class:OpenBabel::OBError
GetPreferred	include/openbabel/conformersearch.h	/^      Preferred GetPreferred() { return HighScore; }$/;"	f	class:OpenBabel::OBMinimizingRMSDConformerScore
GetPreferred	include/openbabel/conformersearch.h	/^      Preferred GetPreferred() { return HighScore; }$/;"	f	class:OpenBabel::OBRMSDConformerScore
GetPreferred	include/openbabel/conformersearch.h	/^      Preferred GetPreferred() { return LowScore; }$/;"	f	class:OpenBabel::OBEnergyConformerScore
GetPreferred	include/openbabel/conformersearch.h	/^      Preferred GetPreferred() { return LowScore; }$/;"	f	class:OpenBabel::OBMinimizingEnergyConformerScore
GetPrevVertex	src/formats/libinchi/ichi_bns.c	/^Vertex GetPrevVertex( BN_STRUCT* pBNS, Vertex y, Edge *SwitchEdge, EdgeIndex *iuv )$/;"	f
GetProcessingWarnings	src/formats/libinchi/runichi.c	/^int  GetProcessingWarnings(INChI *cur_INChI[], INP_ATOM_DATA **inp_norm_data, STRUCT_DATA *sd)$/;"	f
GetProcessingWarningsOneINChI	src/formats/libinchi/runichi.c	/^int GetProcessingWarningsOneINChI(INChI *pINChI, INP_ATOM_DATA *inp_norm_data, char *pStrErrStruct)$/;"	f
GetProduct	include/openbabel/reaction.h	/^  obsharedptr<OBMol> GetProduct(const unsigned i)$/;"	f	class:OpenBabel::OBReaction
GetProxVector	src/grid.cpp	/^  vector<int> *OBProxGrid::GetProxVector(double *c)$/;"	f	class:OpenBabel::OBProxGrid
GetProxVector	src/grid.cpp	/^  vector<int> *OBProxGrid::GetProxVector(double x,double y,double z)$/;"	f	class:OpenBabel::OBProxGrid
GetRGB	src/data.cpp	/^  vector<double> OBElementTable::GetRGB(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetRMSD	src/math/align.cpp	/^  double OBAlign::GetRMSD() {$/;"	f	class:OpenBabel::OBAlign
GetRamanActivities	include/openbabel/generic.h	/^    std::vector<double> GetRamanActivities() const$/;"	f	class:OpenBabel::OBVibrationData
GetRate	include/openbabel/kinetics.h	/^  double GetRate(rate_type n) const$/;"	f	class:OpenBabel::OBRateData
GetReactant	include/openbabel/reaction.h	/^  obsharedptr<OBMol> GetReactant(const unsigned i)$/;"	f	class:OpenBabel::OBReaction
GetReader	include/openbabel/xml.h	/^      xmlTextReaderPtr GetReader() const$/;"	f	class:OpenBabel::XMLConversion
GetRed	include/openbabel/data.h	/^      double GetRed()            {       return(_red);     }$/;"	f	class:OpenBabel::OBElement
GetReferenceArray	src/rotamer.cpp	/^  void OBRotamerList::GetReferenceArray(unsigned char *ref)const$/;"	f	class:OpenBabel::OBRotamerList
GetReferenceAtoms	include/openbabel/rotor.h	/^    void    GetReferenceAtoms(int ref[4]) { memcpy(ref,_ref,sizeof(int)*4); }$/;"	f	class:OpenBabel::OBRotorRule
GetResKey	src/residue.cpp	/^  unsigned int OBResidue::GetResKey(void) const$/;"	f	class:OpenBabel::OBResidue
GetResidue	src/atom.cpp	/^  OBResidue *OBAtom::GetResidue()$/;"	f	class:OpenBabel::OBAtom
GetResidue	src/atom.cpp	/^  OBResidue *OBAtom::GetResidue(bool perception)$/;"	f	class:OpenBabel::OBAtom
GetResidue	src/mol.cpp	/^  OBResidue *OBMol::GetResidue(int idx) const$/;"	f	class:OpenBabel::OBMol
GetResidueNumber	src/residue.cpp	/^  static unsigned int GetResidueNumber(const char *res)$/;"	f	namespace:OpenBabel
GetResidueProperty	src/residue.cpp	/^  bool OBResidue::GetResidueProperty(int property) const$/;"	f	class:OpenBabel::OBResidue
GetResolution	include/openbabel/rotor.h	/^    std::vector<double> &GetResolution() { return _torsionAngles; }$/;"	f	class:OpenBabel::OBRotor
GetResolution	src/spectrophore.cpp	/^OBSpectrophore::GetResolution(void) const$/;"	f	class:OpenBabel::OBSpectrophore
GetRootAtom	src/ring.cpp	/^  unsigned int OBRing::GetRootAtom()$/;"	f	class:OpenBabel::OBRing
GetRotAtoms	include/openbabel/rotor.h	/^    const std::vector<int>& GetRotAtoms() const$/;"	f	class:OpenBabel::OBRotor
GetRotAtoms	include/openbabel/rotor.h	/^    void* GetRotAtoms() { return &_rotatoms; }$/;"	f	class:OpenBabel::OBRotor
GetRotConsts	include/openbabel/generic.h	/^   std::vector<double> GetRotConsts()const{ return RotConsts; }$/;"	f	class:OpenBabel::OBRotationData
GetRotMatrix	src/math/align.cpp	/^  matrix3x3 OBAlign::GetRotMatrix()$/;"	f	class:OpenBabel::OBAlign
GetRotatoryStrengthsLength	include/openbabel/generic.h	/^    std::vector<double> GetRotatoryStrengthsLength() const$/;"	f	class:OpenBabel::OBElectronicTransitionData
GetRotatoryStrengthsVelocity	include/openbabel/generic.h	/^    std::vector<double> GetRotatoryStrengthsVelocity() const$/;"	f	class:OpenBabel::OBElectronicTransitionData
GetRotorIncrements	src/rotor.cpp	/^  void OBRotorRules::GetRotorIncrements(OBMol &mol,OBBond *bond,$/;"	f	class:OpenBabel::OBRotorRules
GetRotorKeys	include/openbabel/conformersearch.h	/^      const RotorKeys& GetRotorKeys() const$/;"	f	class:OpenBabel::OBConformerSearch
GetRotorType	include/openbabel/generic.h	/^   RType GetRotorType()const   { return type; }$/;"	f	class:OpenBabel::OBRotationData
GetRow	src/math/matrix3x3.cpp	/^  vector3 matrix3x3::GetRow(unsigned int row) const$/;"	f	class:OpenBabel::matrix3x3
GetRuleBondLength	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::GetRuleBondLength(OBAtom* a, OBAtom* b)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetSMARTS	include/openbabel/parsmart.h	/^    const std::string &GetSMARTS() const    {      return _str;    }$/;"	f	class:OpenBabel::OBSmartsPattern
GetSMARTS	include/openbabel/parsmart.h	/^    std::string  &GetSMARTS()               {      return _str;    }$/;"	f	class:OpenBabel::OBSmartsPattern
GetSSSR	src/mol.cpp	/^  vector<OBRing*> &OBMol::GetSSSR()$/;"	f	class:OpenBabel::OBMol
GetSaltChargeType	src/formats/libinchi/ichitaut.c	/^int GetSaltChargeType(inp_ATOM *at, int at_no, T_GROUP_INFO *t_group_info, int *s_subtype )$/;"	f
GetSaveOptLetters	src/formats/libinchi/ichiprt1.c	/^void GetSaveOptLetters(unsigned char save_opt_bits, char* let1, char* let2)$/;"	f
GetScale	include/openbabel/grid.h	/^    double GetScale() const   { return(_inv_spa); }$/;"	f	class:OpenBabel::OBFloatGrid
GetSerialNum	src/residue.cpp	/^  unsigned int OBResidue::GetSerialNum(OBAtom *atom) const$/;"	f	class:OpenBabel::OBResidue
GetSigmaSharing	include/openbabel/conformersearch.h	/^      double GetSigmaSharing () {return sigma_share;}$/;"	f	class:OpenBabel::OBConformerSearch
GetSize	include/openbabel/bitvec.h	/^      size_t GetSize() const    { return(_size);    }$/;"	f	class:OpenBabel::OBBitVec
GetSize	include/openbabel/bondtyper.h	/^    size_t GetSize()                 { return _fgbonds.size();}$/;"	f	class:OpenBabel::OBBondTyper
GetSize	include/openbabel/data.h	/^      size_t    GetSize() { return GetNumberOfElements(); }$/;"	f	class:OpenBabel::OBElementTable
GetSize	include/openbabel/data.h	/^      size_t GetSize() { return _atomhof.size(); }$/;"	f	class:OpenBabel::OBAtomicHeatOfFormationTable
GetSize	include/openbabel/data.h	/^      size_t GetSize() { return _isotopes.size(); }$/;"	f	class:OpenBabel::OBIsotopeTable
GetSize	include/openbabel/data.h	/^      size_t GetSize() { return _resname.size(); }$/;"	f	class:OpenBabel::OBResidueData
GetSize	include/openbabel/data.h	/^      size_t GetSize() { return _table.size(); }$/;"	f	class:OpenBabel::OBTypeTable
GetSize	include/openbabel/data.h	/^      virtual size_t GetSize()                 { return 0;}$/;"	f	class:OpenBabel::OBGlobalDataBase
GetSize	include/openbabel/generic.h	/^    size_t      GetSize() const$/;"	f	class:OpenBabel::OBTorsionData
GetSize	include/openbabel/generic.h	/^    size_t GetSize() const    {      return _ads.size();    }$/;"	f	class:OpenBabel::OBTorsion
GetSize	include/openbabel/generic.h	/^    size_t GetSize() const$/;"	f	class:OpenBabel::OBAngleData
GetSize	include/openbabel/phmodel.h	/^    size_t GetSize()                 { return _vtsfm.size();}$/;"	f	class:OpenBabel::OBPhModel
GetSize	include/openbabel/rotor.h	/^    size_t GetSize()                 { return _vr.size();}$/;"	f	class:OpenBabel::OBRotorRules
GetSize	include/openbabel/typer.h	/^    size_t GetSize()                 { return _ringtyp.size();}$/;"	f	class:OpenBabel::OBRingTyper
GetSize	include/openbabel/typer.h	/^    size_t GetSize()                 { return _vimpval.size();}$/;"	f	class:OpenBabel::OBAtomTyper
GetSize	include/openbabel/typer.h	/^    size_t GetSize()                 { return _vsp.size();}$/;"	f	class:OpenBabel::OBAromaticTyper
GetSize	src/confsearch.cpp	/^  size_t OBDiversePoses::GetSize() {$/;"	f	class:OpenBabel::OBDiversePoses
GetSize	src/generic.cpp	/^  unsigned int OBChiralData::GetSize(atomreftype t) const$/;"	f	class:OpenBabel::OBChiralData
GetSize	src/math/spacegroup.cpp	/^    size_t GetSize() { return sgs.size();}$/;"	f	class:OpenBabel::SpaceGroups
GetSmartsPattern	include/openbabel/rotor.h	/^    OBSmartsPattern *GetSmartsPattern() {  return(_sp);         }$/;"	f	class:OpenBabel::OBRotorRule
GetSmartsString	include/openbabel/rotor.h	/^    std::string  &GetSmartsString(){      return(_s);           }$/;"	f	class:OpenBabel::OBRotorRule
GetSmilesElement	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::GetSmilesElement(OBCanSmiNode *node,$/;"	f	class:OpenBabel::OBMol2Cansmi
GetSmilesValence	src/formats/smilesformat.cpp	/^  int OBMol2Cansmi::GetSmilesValence(OBAtom *atom)$/;"	f	class:OpenBabel::OBMol2Cansmi
GetSource	include/openbabel/lineend.h	/^    std::istream* GetSource()const$/;"	f	class:OpenBabel::FilteringInputStreambuf
GetSp3RelRacAbs	src/formats/libinchi/ichimake.c	/^int GetSp3RelRacAbs( const INChI *pINChI, INChI_Stereo *Stereo )$/;"	f
GetSpaceGroup	include/openbabel/generic.h	/^    const SpaceGroup* GetSpaceGroup() const { return(_spaceGroup); }$/;"	f	class:OpenBabel::OBUnitCell
GetSpaceGroup	include/openbabel/generic.h	/^    const SpaceGroup* GetSpaceGroup() { return(_spaceGroup); }$/;"	f	class:OpenBabel::OBUnitCell
GetSpaceGroup	include/openbabel/generic.h	/^    std::string GetSpaceGroup() { return _spaceGroup; }$/;"	f	class:OpenBabel::OBSymmetryData
GetSpaceGroup	src/math/spacegroup.cpp	/^  const SpaceGroup * SpaceGroup::GetSpaceGroup (char const *name)$/;"	f	class:OpenBabel::SpaceGroup
GetSpaceGroup	src/math/spacegroup.cpp	/^  const SpaceGroup * SpaceGroup::GetSpaceGroup (const string &name_in)$/;"	f	class:OpenBabel::SpaceGroup
GetSpaceGroup	src/math/spacegroup.cpp	/^  const SpaceGroup * SpaceGroup::GetSpaceGroup (unsigned id)$/;"	f	class:OpenBabel::SpaceGroup
GetSpaceGroupName	include/openbabel/generic.h	/^    const std::string GetSpaceGroupName() const { return(_spaceGroupName); }$/;"	f	class:OpenBabel::OBUnitCell
GetSpaceGroupName	include/openbabel/generic.h	/^    const std::string GetSpaceGroupName() { return(_spaceGroupName); }$/;"	f	class:OpenBabel::OBUnitCell
GetSpaceGroupNumber	src/generic.cpp	/^  int OBUnitCell::GetSpaceGroupNumber( std::string name) const$/;"	f	class:OpenBabel::OBUnitCell
GetSpacedFormula	src/mol.cpp	/^  string OBMol::GetSpacedFormula(int ones, const char* sp, bool implicitH)$/;"	f	class:OpenBabel::OBMol
GetSpacing	include/openbabel/grid.h	/^    double GetSpacing() const { return(_spacing); }$/;"	f	class:OpenBabel::OBFloatGrid
GetSpacing	include/openbabel/grid.h	/^    void GetSpacing(double &s)$/;"	f	class:OpenBabel::OBFloatGrid
GetSpectrophore	src/spectrophore.cpp	/^OBSpectrophore::GetSpectrophore(OpenBabel::OBMol* mol)$/;"	f	class:OpenBabel::OBSpectrophore
GetSpinMultiplicity	include/openbabel/atom.h	/^      int          GetSpinMultiplicity() const { return(_spinmultiplicity); }$/;"	f	class:OpenBabel::OBAtom
GetSquarePlanarStereo	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::GetSquarePlanarStereo(OBCanSmiNode *node,$/;"	f	class:OpenBabel::OBMol2Cansmi
GetSquarePlanarStereo	src/stereo/facade.cpp	/^  OBSquarePlanarStereo* OBStereoFacade::GetSquarePlanarStereo(unsigned long atomId)$/;"	f	class:OpenBabel::OBStereoFacade
GetStdINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL GetStdINCHI( inchi_Input *inp, inchi_Output *out )$/;"	f
GetStdINCHIKeyFromStdINCHI	src/formats/libinchi/ikey_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL GetStdINCHIKeyFromStdINCHI(const char* szINCHISource, $/;"	f
GetStereo	include/openbabel/generic.h	/^    int GetStereo() {      return(_stereo); }$/;"	f	class:OpenBabel::OBVirtualBond
GetStereo	src/spectrophore.cpp	/^OBSpectrophore::GetStereo(void) const$/;"	f	class:OpenBabel::OBSpectrophore
GetStereo	src/stereo/facade.cpp	/^  OBCisTransStereo* OBStereoFacade::GetStereo<OBCisTransStereo>(unsigned long id)$/;"	f	class:OpenBabel::OBStereoFacade
GetStereo	src/stereo/facade.cpp	/^  OBTetrahedralStereo* OBStereoFacade::GetStereo<OBTetrahedralStereo>(unsigned long id)$/;"	f	class:OpenBabel::OBStereoFacade
GetStereoBondParity	src/formats/libinchi/ichicans.c	/^int GetStereoBondParity(sp_ATOM *at, int i, int n, AT_RANK *nRank )$/;"	f
GetStereoCenterParity	src/formats/libinchi/ichicans.c	/^int GetStereoCenterParity(sp_ATOM *at, int i, AT_RANK *nRank )$/;"	f
GetStereoNeighborPos	src/formats/libinchi/ichicans.c	/^int GetStereoNeighborPos( sp_ATOM *at, int iAt1, int iAt2 )$/;"	f
GetStereocenter0DParity	src/formats/libinchi/ichister.c	/^int GetStereocenter0DParity( inp_ATOM *at, int cur_at, int j1, AT_NUMB nSbNeighOrigAtNumb[], int nFlag )$/;"	f
GetStrBndType	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetStrBndType(OBAtom* a, OBAtom* b, OBAtom *c)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetStringLength	src/formats/libinchi/inchi_dll.c	/^int INCHI_DECL GetStringLength( char *p )$/;"	f
GetStringValue	src/descriptor.cpp	/^double OBDescriptor::GetStringValue(OBBase* pOb, string& svalue, string* param)$/;"	f	class:OpenBabel::OBDescriptor
GetStringValue	src/descriptors/cansmidescriptor.cpp	/^double CanSmiles::GetStringValue(OBBase* pOb, std::string& svalue, std::string*)$/;"	f	class:OpenBabel::CanSmiles
GetStringValue	src/descriptors/filters.cpp	/^  virtual double GetStringValue(OBBase* pOb, std::string& svalue, std::string* param=NULL)$/;"	f	class:OpenBabel::FormulaDescriptor
GetStringValue	src/descriptors/filters.cpp	/^double TitleFilter::GetStringValue(OBBase* pOb, std::string& svalue,std::string*)$/;"	f	class:OpenBabel::TitleFilter
GetStringValue	src/descriptors/inchidescriptor.cpp	/^double InChIFilter::GetStringValue(OBBase* pOb, std::string& svalue, std::string*)$/;"	f	class:OpenBabel::InChIFilter
GetStructFromINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL GetStructFromINCHI( inchi_InputINCHI *inpInChI, inchi_OutputStruct *outStruct )$/;"	f
GetStructFromStdINCHI	src/formats/libinchi/inchi_dll.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL GetStructFromStdINCHI( inchi_InputINCHI *inpInChI, inchi_OutputStruct *outStruct )$/;"	f
GetSuggestedRemedy	include/openbabel/oberror.h	/^      std::string    GetSuggestedRemedy() const  { return _suggestedRemedy; }$/;"	f	class:OpenBabel::OBError
GetSupportedInputFormat	src/obconversion.cpp	/^  std::vector<std::string> OBConversion::GetSupportedInputFormat()$/;"	f	class:OpenBabel::OBConversion
GetSupportedOutputFormat	src/obconversion.cpp	/^  std::vector<std::string> OBConversion::GetSupportedOutputFormat()$/;"	f	class:OpenBabel::OBConversion
GetSymbol	include/openbabel/data.h	/^      char *GetSymbol()          {       return(_symbol); }$/;"	f	class:OpenBabel::OBElement
GetSymbol	include/openbabel/generic.h	/^    std::string GetSymbol() const   { return _mullikenSymbol; }$/;"	f	class:OpenBabel::OBOrbital
GetSymbol	src/data.cpp	/^  const char *OBElementTable::GetSymbol(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetSymmetry	src/graphsym.cpp	/^  int OBGraphSym::GetSymmetry(std::vector<unsigned int> &symmetry_classes)$/;"	f	class:OpenBabel::OBGraphSym
GetSymmetryNumber	include/openbabel/generic.h	/^   int GetSymmetryNumber()const{ return SymNum; }$/;"	f	class:OpenBabel::OBRotationData
GetTetrahedralStereo	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::GetTetrahedralStereo(OBCanSmiNode *node,$/;"	f	class:OpenBabel::OBMol2Cansmi
GetTetrahedralStereo	src/stereo/facade.cpp	/^  OBTetrahedralStereo* OBStereoFacade::GetTetrahedralStereo(unsigned long atomId)$/;"	f	class:OpenBabel::OBStereoFacade
GetText	include/openbabel/text.h	/^  std::string GetText()const { return txt; }$/;"	f	class:OpenBabel::OBText
GetText	include/openbabel/text.h	/^  std::string GetText(std::string::size_type& pos, bool ToInsertOnly=false) const$/;"	f	class:OpenBabel::OBText
GetTgroupInfoFromInChI	src/formats/libinchi/ichirvr1.c	/^int GetTgroupInfoFromInChI( T_GROUP_INFO *ti, inp_ATOM *at, AT_NUMB *endpoint, INChI *pInChI )$/;"	f
GetThermoFormat	src/formats/chemkinformat.cpp	/^OBFormat* ChemKinFormat::GetThermoFormat()$/;"	f	class:OpenBabel::ChemKinFormat
GetTimeDate	src/formats/mdlformat.cpp	/^  string MDLFormat::GetTimeDate()$/;"	f	class:OpenBabel::MDLFormat
GetTitle	include/openbabel/reaction.h	/^  std::string GetTitle()	const { return _title; }$/;"	f	class:OpenBabel::OBReaction
GetTitle	src/mol.cpp	/^  const char *OBMol::GetTitle(bool replaceNewlines) const$/;"	f	class:OpenBabel::OBMol
GetTitle	src/obconversion.cpp	/^  const char* OBConversion::GetTitle() const$/;"	f	class:OpenBabel::OBConversion
GetToType	src/data.cpp	/^  std::string OBTypeTable::GetToType()$/;"	f	class:OpenBabel::OBTypeTable
GetTorsion	src/mol.cpp	/^  double OBMol::GetTorsion(OBAtom *a,OBAtom *b,OBAtom *c,OBAtom *d)$/;"	f	class:OpenBabel::OBMol
GetTorsion	src/mol.cpp	/^  double OBMol::GetTorsion(int a,int b,int c,int d)$/;"	f	class:OpenBabel::OBMol
GetTorsionType	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetTorsionType(OBAtom* a, OBAtom* b, OBAtom *c, OBAtom *d)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetTorsionVals	include/openbabel/rotor.h	/^    std::vector<double>   &GetTorsionVals()    { return(_vals); }$/;"	f	class:OpenBabel::OBRotorRule
GetTorsionValues	include/openbabel/rotor.h	/^    const std::vector<double> &GetTorsionValues() const$/;"	f	class:OpenBabel::OBRotor
GetTorsions	src/generic.cpp	/^  vector<quad<OBAtom*,OBAtom*,OBAtom*,OBAtom*> > OBTorsion::GetTorsions()$/;"	f	class:OpenBabel::OBTorsion
GetTotalCharge	src/mol.cpp	/^  int OBMol::GetTotalCharge()$/;"	f	class:OpenBabel::OBMol
GetTotalSpinMultiplicity	src/mol.cpp	/^  unsigned int OBMol::GetTotalSpinMultiplicity()$/;"	f	class:OpenBabel::OBMol
GetTransRef	src/stereo/cistrans.cpp	/^  unsigned long OBCisTransStereo::GetTransRef(unsigned long id) const$/;"	f	class:OpenBabel::OBCisTransStereo
GetTransRef	src/stereo/squareplanar.cpp	/^  unsigned long OBSquarePlanarStereo::GetTransRef(unsigned long id) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
GetTransitionState	include/openbabel/reaction.h	/^  obsharedptr<OBMol> GetTransitionState()const$/;"	f	class:OpenBabel::OBReaction
GetTree	src/confsearch.cpp	/^      Tree* GetTree() { return &poses; }$/;"	f	class:OpenBabel::OBDiversePoses
GetTroeParam	include/openbabel/kinetics.h	/^  double GetTroeParam(int n) const$/;"	f	class:OpenBabel::OBRateData
GetType	include/openbabel/grid.h	/^    score_t GetType(void)             {    return gridtype;    }$/;"	f	class:OpenBabel::OBScoreGrid
GetType	include/openbabel/obmolecformat.h	/^  const std::type_info& GetType()$/;"	f	class:OpenBabel::OBMoleculeFormat
GetType	include/openbabel/stereo/cistrans.h	/^    OBStereo::Type GetType() const { return OBStereo::CisTrans; }$/;"	f	class:OpenBabel::OBCisTransStereo
GetType	include/openbabel/stereo/squareplanar.h	/^    OBStereo::Type GetType() const { return OBStereo::SquarePlanar; }$/;"	f	class:OpenBabel::OBSquarePlanarStereo
GetType	include/openbabel/stereo/tetrahedral.h	/^    OBStereo::Type GetType() const { return OBStereo::Tetrahedral; }$/;"	f	class:OpenBabel::OBTetrahedralStereo
GetType	include/openbabel/xml.h	/^      const std::type_info& GetType()$/;"	f	class:OpenBabel::XMLMoleculeFormat
GetType	src/atom.cpp	/^  char *OBAtom::GetType()$/;"	f	class:OpenBabel::OBAtom
GetType	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetType(OBAtom *atom)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetType	src/format.cpp	/^const type_info& OBFormat::GetType()$/;"	f	class:OpenBabel::OBFormat
GetType	src/formats/chemkinformat.cpp	/^  const type_info& GetType()$/;"	f	class:OpenBabel::ChemKinFormat
GetType	src/formats/rsmiformat.cpp	/^    const type_info& GetType()$/;"	f	class:OpenBabel::SmiReactFormat
GetType	src/formats/rxnformat.cpp	/^  const type_info& GetType()$/;"	f	class:OpenBabel::RXNFormat
GetType	src/formats/xml/cmlreactformat.cpp	/^  const type_info& GetType()$/;"	f	class:OpenBabel::CMLReactFormat
GetType	src/ring.cpp	/^  char* OBRing::GetType()$/;"	f	class:OpenBabel::OBRing
GetTypeMap	src/plugin.cpp	/^OBPlugin::PluginMapType& OBPlugin::GetTypeMap(const char* PluginID)$/;"	f	class:OpenBabel::OBPlugin
GetTypedParameter2Atom	src/forcefields/forcefieldmmff94.cpp	/^  OBFFParameter* OBForceFieldMMFF94::GetTypedParameter2Atom(int ffclass, int a, int b, std::vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetTypedParameter3Atom	src/forcefields/forcefieldmmff94.cpp	/^  OBFFParameter* OBForceFieldMMFF94::GetTypedParameter3Atom(int ffclass, int a, int b, int c, std::vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetTypedParameter4Atom	src/forcefields/forcefieldmmff94.cpp	/^  OBFFParameter* OBForceFieldMMFF94::GetTypedParameter4Atom(int ffclass, int a, int b, int c, int d, std::vector<OBFFParameter> &parameter)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetUMapList	src/parsmart.cpp	/^  std::vector<std::vector<int> > &OBSmartsPattern::GetUMapList()$/;"	f	class:OpenBabel::OBSmartsPattern
GetUParam	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::GetUParam(OBAtom* atom)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetUnit	include/openbabel/forcefield.h	/^    virtual std::string GetUnit() { return std::string("au"); }$/;"	f	class:OpenBabel::OBForceField
GetUnit	src/forcefields/forcefieldgaff.h	/^      std::string GetUnit()$/;"	f	class:OpenBabel::OBForceFieldGaff
GetUnit	src/forcefields/forcefieldghemical.h	/^      std::string GetUnit()$/;"	f	class:OpenBabel::OBForceFieldGhemical
GetUnit	src/forcefields/forcefieldmmff94.h	/^      std::string GetUnit()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetUnit	src/forcefields/forcefielduff.h	/^    std::string GetUnit()$/;"	f	class:OpenBabel::OBForceFieldUFF
GetUnit	src/griddata.cpp	/^  OBGridData::Unit OBGridData::GetUnit() const$/;"	f	class:OpenBabel::OBGridData
GetUnorderedPartitionMcrNode	src/formats/libinchi/ichican2.c	/^Node GetUnorderedPartitionMcrNode( UnorderedPartition *p1, Node v )$/;"	f
GetUnrestricted	src/griddata.cpp	/^  bool OBGridData::GetUnrestricted() const$/;"	f	class:OpenBabel::OBGridData
GetUnspecifiedCisTrans	src/stereo/perception.cpp	/^  set<OBBond*> GetUnspecifiedCisTrans(OBMol& mol)$/;"	f	namespace:OpenBabel
GetUnusedIndex	src/formats/smilesformat.cpp	/^  int OBMol2Cansmi::GetUnusedIndex()$/;"	f	class:OpenBabel::OBMol2Cansmi
GetUpDown	src/formats/mdlformat.cpp	/^  void MDLFormat::GetUpDown(OBMol& mol, map<OBBond*, OBStereo::BondDirection> &updown,$/;"	f	class:OpenBabel::MDLFormat
GetUpdateFrequency	include/openbabel/forcefield.h	/^    int GetUpdateFrequency()$/;"	f	class:OpenBabel::OBForceField
GetUpperBounds	src/distgeom.cpp	/^    float GetUpperBounds(int i, int j)$/;"	f	class:OpenBabel::DistanceGeometryPrivate
GetV	include/openbabel/generic.h	/^    double GetV() { return _V; }$/;"	f	class:OpenBabel::OBFreeGridPoint
GetVDWCutOff	include/openbabel/forcefield.h	/^    double GetVDWCutOff()$/;"	f	class:OpenBabel::OBForceField
GetVParam	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::GetVParam(OBAtom* atom)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetVal	src/forcefields/forcefieldmmff94.cpp	/^  int OBForceFieldMMFF94::GetVal(int atomtype)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetValence	include/openbabel/atom.h	/^      unsigned int GetValence() const { return (unsigned int)_vbond.size(); }$/;"	f	class:OpenBabel::OBAtom
GetVals	include/openbabel/grid.h	/^    double *GetVals()    {        return(&_values[0]);    }$/;"	f	class:OpenBabel::OBFloatGrid
GetValue	include/openbabel/base.h	/^    virtual const std::string &GetValue()  const$/;"	f	class:OpenBabel::OBGenericData
GetValue	include/openbabel/generic.h	/^    virtual const std::string &GetValue()              const$/;"	f	class:OpenBabel::OBCommentData
GetValue	include/openbabel/generic.h	/^    virtual const std::string &GetValue() const$/;"	f	class:OpenBabel::OBPairData
GetValue	include/openbabel/grid.h	/^    double GetValue(int i, int j, int k)$/;"	f	class:OpenBabel::OBFloatGrid
GetValue	src/griddata.cpp	/^  double OBGridData::GetValue( int i, int j, int k ) const$/;"	f	class:OpenBabel::OBGridData
GetValue	src/griddata.cpp	/^  double OBGridData::GetValue(vector3 pos) const$/;"	f	class:OpenBabel::OBGridData
GetValues	src/descriptor.cpp	/^  string OBDescriptor::GetValues(OBBase* pOb, const std::string& DescrList)$/;"	f	class:OpenBabel::OBDescriptor
GetValues	src/griddata.cpp	/^  std::vector< double > OBGridData::GetValues() const$/;"	f	class:OpenBabel::OBGridData
GetVdwRad	include/openbabel/data.h	/^      double GetVdwRad()         {       return(_Rvdw);   }$/;"	f	class:OpenBabel::OBElement
GetVdwRad	src/data.cpp	/^  double OBElementTable::GetVdwRad(int atomicnum)$/;"	f	class:OpenBabel::OBElementTable
GetVector	src/atom.cpp	/^  const vector3 &OBAtom::GetVector() const$/;"	f	class:OpenBabel::OBAtom
GetVector	src/atom.cpp	/^  vector3 &OBAtom::GetVector()$/;"	f	class:OpenBabel::OBAtom
GetVectorBinding	include/openbabel/parsmart.h	/^    int          GetVectorBinding(int idx) const$/;"	f	class:OpenBabel::OBSmartsPattern
GetVectorBinding	src/parsmart.cpp	/^  int OBSmartsPattern::GetVectorBinding()$/;"	f	class:OpenBabel::OBSmartsPattern
GetVelocities	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > > GetVelocities()$/;"	f	class:OpenBabel::OBConformerData
GetVertexDegree	src/formats/libinchi/ichi_bns.c	/^int GetVertexDegree( BN_STRUCT* pBNS, Vertex v )$/;"	f
GetVertexNeighbor	src/formats/libinchi/ichi_bns.c	/^Vertex GetVertexNeighbor( BN_STRUCT* pBNS, Vertex v, int neigh, EdgeIndex *iedge )$/;"	f
GetWarningMessageCount	include/openbabel/oberror.h	/^      unsigned int GetWarningMessageCount() { return _messageCount[obWarning];}$/;"	f	class:OpenBabel::OBMessageHandler
GetWavelengths	include/openbabel/generic.h	/^    std::vector<double> GetWavelengths() const$/;"	f	class:OpenBabel::OBElectronicTransitionData
GetWords	include/openbabel/bitvec.h	/^      void GetWords(word_vector & vec)$/;"	f	class:OpenBabel::OBBitVec
GetWriter	include/openbabel/xml.h	/^      xmlTextWriterPtr GetWriter() const$/;"	f	class:OpenBabel::XMLConversion
GetX	include/openbabel/atom.h	/^      double      GetX() const   {        return(x());    }$/;"	f	class:OpenBabel::OBAtom
GetX	include/openbabel/generic.h	/^    double GetX() { return _x; }$/;"	f	class:OpenBabel::OBFreeGridPoint
GetX	include/openbabel/math/vector3.h	/^    double GetX() const$/;"	f	class:OpenBabel::vector3
GetXAxis	include/openbabel/grid.h	/^    vector3 GetXAxis() const$/;"	f	class:OpenBabel::OBFloatGrid
GetXAxis	src/griddata.cpp	/^  vector3 OBGridData::GetXAxis() const$/;"	f	class:OpenBabel::OBGridData
GetXdim	include/openbabel/grid.h	/^    int GetXdim() const       { return(_xdim);    }$/;"	f	class:OpenBabel::OBFloatGrid
GetXmax	include/openbabel/grid.h	/^    double GetXmax() const    { return(_xmax);    }$/;"	f	class:OpenBabel::OBGrid
GetXmin	include/openbabel/grid.h	/^    double GetXmin() const    { return(_xmin);    }$/;"	f	class:OpenBabel::OBGrid
GetY	include/openbabel/atom.h	/^      double      GetY() const  {        return(y());    }$/;"	f	class:OpenBabel::OBAtom
GetY	include/openbabel/generic.h	/^    double GetY() { return _y; }$/;"	f	class:OpenBabel::OBFreeGridPoint
GetY	include/openbabel/math/vector3.h	/^    double GetY() const$/;"	f	class:OpenBabel::vector3
GetYAxis	include/openbabel/grid.h	/^    vector3 GetYAxis() const$/;"	f	class:OpenBabel::OBFloatGrid
GetYAxis	src/griddata.cpp	/^  vector3 OBGridData::GetYAxis() const$/;"	f	class:OpenBabel::OBGridData
GetYdim	include/openbabel/grid.h	/^    int GetYdim() const       { return(_ydim);    }$/;"	f	class:OpenBabel::OBFloatGrid
GetYmax	include/openbabel/grid.h	/^    double GetYmax() const    { return(_ymax);    }$/;"	f	class:OpenBabel::OBGrid
GetYmin	include/openbabel/grid.h	/^    double GetYmin() const    { return(_ymin);    }$/;"	f	class:OpenBabel::OBGrid
GetZ	include/openbabel/atom.h	/^      double      GetZ() const  {        return(z());    }$/;"	f	class:OpenBabel::OBAtom
GetZ	include/openbabel/generic.h	/^    double GetZ() { return _z; }$/;"	f	class:OpenBabel::OBFreeGridPoint
GetZ	include/openbabel/math/vector3.h	/^    double GetZ() const$/;"	f	class:OpenBabel::vector3
GetZAxis	include/openbabel/grid.h	/^    vector3 GetZAxis() const$/;"	f	class:OpenBabel::OBFloatGrid
GetZAxis	src/griddata.cpp	/^  vector3 OBGridData::GetZAxis() const$/;"	f	class:OpenBabel::OBGridData
GetZParam	src/forcefields/forcefieldmmff94.cpp	/^  double OBForceFieldMMFF94::GetZParam(OBAtom* atom)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
GetZdim	include/openbabel/grid.h	/^    int GetZdim() const       { return(_zdim);    }$/;"	f	class:OpenBabel::OBFloatGrid
GetZmax	include/openbabel/grid.h	/^    double GetZmax() const    { return(_zmax);    }$/;"	f	class:OpenBabel::OBGrid
GetZmin	include/openbabel/grid.h	/^    double GetZmin() const    { return(_zmin);    }$/;"	f	class:OpenBabel::OBGrid
Get_inchi_Input_FromAuxInfo	src/formats/libinchi/ichilnct.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL Get_inchi_Input_FromAuxInfo(char *szInchiAuxInfo, $/;"	f
Get_std_inchi_Input_FromAuxInfo	src/formats/libinchi/ichilnct.c	/^EXPIMP_TEMPLATE INCHI_API int INCHI_DECL Get_std_inchi_Input_FromAuxInfo$/;"	f
Getbitsperint	include/openbabel/fingerprint.h	/^  static unsigned int Getbitsperint(){ return bitsperint; }$/;"	f	class:OpenBabel::OBFingerprint
GhemicalFormat	src/formats/ghemicalformat.cpp	/^      GhemicalFormat()$/;"	f	class:OpenBabel::GhemicalFormat
GhemicalFormat	src/formats/ghemicalformat.cpp	/^  class GhemicalFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
GotoCalculationEnd	src/formats/nwchemformat.cpp	/^  static void GotoCalculationEnd(istream* ifs)$/;"	f	namespace:OpenBabel
GradientStep	src/pointgroup.cpp	/^    double                 GradientStep          ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
Graph	src/formats/libinchi/ichican2.c	/^typedef NEIGH_LIST Graph;$/;"	t	file:
GraphPotentials	src/chiral.cpp	/^  void GraphPotentials(OBMol &mol, std::vector<double> &pot)$/;"	f	namespace:OpenBabel
GridData	include/openbabel/base.h	/^      GridData =          24,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
GridData	src/formats/adfformat.cpp	/^    typedef T41GridData GridData;$/;"	t	class:OpenBabel::OBT41Format	file:
GridDataPrivate	src/griddata.cpp	/^    GridDataPrivate() {    }$/;"	f	class:OpenBabel::GridDataPrivate
GridDataPrivate	src/griddata.cpp	/^  class GridDataPrivate {$/;"	c	namespace:OpenBabel	file:
GroupMapIterator	src/formats/chemdrawcdx.cpp	/^  typedef std::map<CDXObjectID, std::vector<CDXObjectID> >::iterator GroupMapIterator;$/;"	t	class:OpenBabel::ChemDrawBinaryXFormat	file:
H	src/formats/smiley.h	/^    H = 1,                                                                                                                      He,$/;"	e	enum:Smiley::Elements
H2U	include/openbabel/residue.h	/^      H2U   = 40,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
HALOGEN_ATOM	src/mcdlutil.cpp	149;"	d	file:
HAL_ACID_H_XCHG	include/inchi/mode.h	377;"	d
HARTEE_TO_KCALPERMOL	include/openbabel/data_utilities.h	/^ const double HARTEE_TO_KCALPERMOL = 627.509469;$/;"	m	namespace:OpenBabel
HARTREE2INVCM	src/formats/fchkformat.cpp	27;"	d	file:
HARTREE_TO_KCAL	src/formats/nwchemformat.cpp	23;"	d	file:
HAS_N	include/inchi/ichimake.h	65;"	d
HAS_NN	include/inchi/ichimake.h	72;"	d
HAS_T	include/inchi/ichimake.h	63;"	d
HAS_TN	include/inchi/ichimake.h	70;"	d
HAS_TT	include/inchi/ichimake.h	68;"	d
HAVE_SNPRINTF_DECL	src/GUI/OBGUI.cpp	18;"	d	file:
HCounts	src/formats/xml/cmlformat.cpp	/^    map<int, int> HCounts;$/;"	m	class:OpenBabel::CMLFormat	file:
HETERO_ATOM	src/mcdlutil.cpp	151;"	d	file:
HINFormat	src/formats/hinformat.cpp	/^    HINFormat()$/;"	f	class:OpenBabel::HINFormat
HINFormat	src/formats/hinformat.cpp	/^  class HINFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
HIS	include/openbabel/residue.h	/^      HIS   = 16,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
HOH	include/openbabel/residue.h	/^      HOH   = 46,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
HPUX_COMPATIBLE	src/snprintf.c	305;"	d	file:
HTML_COMMENT_NODE	include/libxml/HTMLtree.h	46;"	d
HTML_DEPRECATED	include/libxml/HTMLparser.h	/^  HTML_DEPRECATED = 0x2 ,$/;"	e	enum:__anon4
HTML_ENTITY_REF_NODE	include/libxml/HTMLtree.h	39;"	d
HTML_INVALID	include/libxml/HTMLparser.h	/^  HTML_INVALID = 0x1 ,$/;"	e	enum:__anon4
HTML_NA	include/libxml/HTMLparser.h	/^  HTML_NA = 0 ,		\/* something we don't check at all *\/$/;"	e	enum:__anon4
HTML_PARSE_NOBLANKS	include/libxml/HTMLparser.h	/^    HTML_PARSE_NOBLANKS	= 1<<8,	\/* remove blank nodes *\/$/;"	e	enum:__anon3
HTML_PARSE_NOERROR	include/libxml/HTMLparser.h	/^    HTML_PARSE_NOERROR	= 1<<5,	\/* suppress error reports *\/$/;"	e	enum:__anon3
HTML_PARSE_NONET	include/libxml/HTMLparser.h	/^    HTML_PARSE_NONET	= 1<<11 \/* Forbid network access *\/$/;"	e	enum:__anon3
HTML_PARSE_NOWARNING	include/libxml/HTMLparser.h	/^    HTML_PARSE_NOWARNING= 1<<6,	\/* suppress warning reports *\/$/;"	e	enum:__anon3
HTML_PARSE_PEDANTIC	include/libxml/HTMLparser.h	/^    HTML_PARSE_PEDANTIC	= 1<<7,	\/* pedantic error reporting *\/$/;"	e	enum:__anon3
HTML_PI_NODE	include/libxml/HTMLtree.h	60;"	d
HTML_PRESERVE_NODE	include/libxml/HTMLtree.h	53;"	d
HTML_REQUIRED	include/libxml/HTMLparser.h	/^  HTML_REQUIRED = 0xc \/* VALID bit set so ( & HTML_VALID ) is TRUE *\/$/;"	e	enum:__anon4
HTML_TEXT_NODE	include/libxml/HTMLtree.h	32;"	d
HTML_VALID	include/libxml/HTMLparser.h	/^  HTML_VALID = 0x4 ,$/;"	e	enum:__anon4
HYDMap	src/formats/mdlformat.cpp	/^      typedef map<unsigned int, unsigned int> HYDMap;$/;"	t	class:OpenBabel::MDLFormat	file:
HYDROGENS_IN_INIT_RANKS	include/inchi/mode.h	684;"	d
HYDROPHOBIC	include/openbabel/residue.h	/^      HYDROPHOBIC =  8,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
HYDValence	src/formats/mdlvalence.h	/^static unsigned int HYDValence(unsigned int elem, int q, unsigned int val)$/;"	f
HYP	include/openbabel/residue.h	/^      HYP   = 23,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
HalfMaxClock	include/inchi/ichitime.h	87;"	d
HalfMaxClock	src/formats/libinchi/ichicano.c	/^const clock_t HalfMaxClock = (clock_t)(-1) \/ 2;$/;"	v
HalfMaxPositiveClock	include/inchi/ichitime.h	90;"	d
HalfMaxPositiveClock	src/formats/libinchi/ichicano.c	/^clock_t HalfMaxPositiveClock = 0;$/;"	v
HalfMinNegativeClock	include/inchi/ichitime.h	91;"	d
HalfMinNegativeClock	src/formats/libinchi/ichicano.c	/^clock_t HalfMinNegativeClock = 0;$/;"	v
HalfStereoBondParity	src/formats/libinchi/ichimap2.c	/^int HalfStereoBondParity( sp_ATOM *at, int at_no1, int i_sb_neigh, const AT_RANK *nRank )$/;"	f
HardAddAcidicProtons	src/formats/libinchi/ichi_bns.c	/^int HardAddAcidicProtons( inp_ATOM *at, int num_atoms, BN_AATG *pAATG, int num2add, int *nNumCanceledCharges, BN_STRUCT *pBNS, BN_DATA *pBD )$/;"	f
HardRemoveAcidicProtons	src/formats/libinchi/ichi_bns.c	/^int HardRemoveAcidicProtons( inp_ATOM *at, int num_atoms, BN_AATG *pAATG, int num2remove, int *nNumCanceledCharges, BN_STRUCT *pBNS, BN_DATA *pBD )$/;"	f
HardRemoveHplusNP	src/formats/libinchi/ichi_bns.c	/^int HardRemoveHplusNP( inp_ATOM *at, int num_atoms, int bCancelChargesAlways, int *nNumCanceledCharges,$/;"	f
Hardness	src/charges/qeq.h	/^  MatrixXd Hardness; \/\/\/The hardness matrix$/;"	m	class:OpenBabel::QEqCharges
Hardness	src/charges/qtpie.h	/^  MatrixXd Hardness; \/\/\/The hardness matrix$/;"	m	class:OpenBabel::QTPIECharges
Has2D	src/mol.cpp	/^  bool OBMol::Has2D(bool Not3D)$/;"	f	class:OpenBabel::OBMol
Has3D	src/mol.cpp	/^  bool OBMol::Has3D()$/;"	f	class:OpenBabel::OBMol
HasAlphaBetaUnsat	src/atom.cpp	/^  bool OBAtom::HasAlphaBetaUnsat(bool includePandS)$/;"	f	class:OpenBabel::OBAtom
HasAnalyticalGradients	include/openbabel/forcefield.h	/^    virtual bool HasAnalyticalGradients() { return false; }$/;"	f	class:OpenBabel::OBForceField
HasAnalyticalGradients	src/forcefields/forcefieldgaff.h	/^      bool HasAnalyticalGradients() { return true; }$/;"	f	class:OpenBabel::OBForceFieldGaff
HasAnalyticalGradients	src/forcefields/forcefieldghemical.h	/^      bool HasAnalyticalGradients() { return true; }$/;"	f	class:OpenBabel::OBForceFieldGhemical
HasAnalyticalGradients	src/forcefields/forcefieldmmff94.h	/^      bool HasAnalyticalGradients() { return true; }$/;"	f	class:OpenBabel::OBForceFieldMMFF94
HasAnalyticalGradients	src/forcefields/forcefielduff.h	/^    bool HasAnalyticalGradients() { return true; }$/;"	f	class:OpenBabel::OBForceFieldUFF
HasAromSet	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::HasAromSet(int atomtype)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
HasAromaticBond	include/openbabel/atom.h	/^      bool HasAromaticBond()  {        return(HasBondOfOrder(5));    }$/;"	f	class:OpenBabel::OBAtom
HasAromaticCorrected	include/openbabel/mol.h	/^    bool HasAromaticCorrected() { return(HasFlag(OB_AROM_CORRECTED_MOL));}$/;"	f	class:OpenBabel::OBMol
HasAromaticPerceived	include/openbabel/mol.h	/^    bool HasAromaticPerceived()     { return(HasFlag(OB_AROMATIC_MOL)); }$/;"	f	class:OpenBabel::OBMol
HasAtomTypesPerceived	include/openbabel/mol.h	/^    bool HasAtomTypesPerceived()    { return(HasFlag(OB_ATOMTYPES_MOL));}$/;"	f	class:OpenBabel::OBMol
HasBondOfOrder	src/atom.cpp	/^  bool OBAtom::HasBondOfOrder(unsigned int order)$/;"	f	class:OpenBabel::OBAtom
HasChainsPerceived	include/openbabel/mol.h	/^    bool HasChainsPerceived() { return(HasFlag(OB_CHAINS_MOL));         }$/;"	f	class:OpenBabel::OBMol
HasChiralVolume	include/openbabel/atom.h	/^      bool HasChiralVolume() { return(HasFlag(OB_POS_CHIRAL_ATOM|OB_NEG_CHIRAL_ATOM)); }$/;"	f	class:OpenBabel::OBAtom
HasChiralityPerceived	include/openbabel/mol.h	/^    bool HasChiralityPerceived()    { return(HasFlag(OB_CHIRALITY_MOL));}$/;"	f	class:OpenBabel::OBMol
HasChiralitySpecified	include/openbabel/atom.h	/^      bool HasChiralitySpecified() { return(HasFlag(OB_CSTEREO_ATOM|OB_ACSTEREO_ATOM)); }$/;"	f	class:OpenBabel::OBAtom
HasCisTransStereo	src/stereo/facade.cpp	/^  bool OBStereoFacade::HasCisTransStereo(unsigned long bondId)$/;"	f	class:OpenBabel::OBStereoFacade
HasClass	include/openbabel/atomclass.h	/^  bool HasClass(int indx)const { return _map.find(indx)!=_map.end(); }$/;"	f	class:OpenBabel::OBAtomClassData
HasClosureBondsPerceived	include/openbabel/mol.h	/^    bool HasClosureBondsPerceived() { return(HasFlag(OB_CLOSURE_MOL));  }$/;"	f	class:OpenBabel::OBMol
HasData	src/base.cpp	/^  bool OBBase::HasData(const char *s)$/;"	f	class:OpenBabel::OBBase
HasData	src/base.cpp	/^  bool OBBase::HasData(const string &s)$/;"	f	class:OpenBabel::OBBase
HasData	src/base.cpp	/^  bool OBBase::HasData(const unsigned int dt)$/;"	f	class:OpenBabel::OBBase
HasDoubleBond	include/openbabel/atom.h	/^      bool HasDoubleBond()    {        return(HasBondOfOrder(2));    }$/;"	f	class:OpenBabel::OBAtom
HasFixedAtoms	include/openbabel/rotor.h	/^    bool HasFixedAtoms()$/;"	f	class:OpenBabel::OBRotorList
HasFixedBonds	include/openbabel/rotor.h	/^    bool HasFixedBonds()$/;"	f	class:OpenBabel::OBRotorList
HasFlag	include/openbabel/atom.h	/^      bool HasFlag(int flag)  {  return((_flags & flag) ? true : false); }$/;"	f	class:OpenBabel::OBAtom
HasFlag	include/openbabel/bond.h	/^      bool HasFlag(int flag) const { return ((_flags & flag) != 0); }$/;"	f	class:OpenBabel::OBBond
HasFlag	include/openbabel/mol.h	/^    bool  HasFlag(int flag)    { return((_flags & flag) ? true : false); }$/;"	f	class:OpenBabel::OBMol
HasGroups	src/forcefield.cpp	/^  bool OBForceField::HasGroups()$/;"	f	class:OpenBabel::OBForceField
HasHybridizationPerceived	include/openbabel/mol.h	/^    bool HasHybridizationPerceived() { return(HasFlag(OB_HYBRID_MOL));  }$/;"	f	class:OpenBabel::OBMol
HasHydrogensAdded	include/openbabel/mol.h	/^    bool HasHydrogensAdded() { return(HasFlag(OB_H_ADDED_MOL));         }$/;"	f	class:OpenBabel::OBMol
HasImplHForced	include/openbabel/atom.h	/^      bool HasImplHForced() {return HasFlag(OB_ATOM_NOT_H_DEFICIENT);}$/;"	f	class:OpenBabel::OBAtom
HasImplicitValencePerceived	include/openbabel/mol.h	/^    bool HasImplicitValencePerceived() { return(HasFlag(OB_IMPVAL_MOL));}$/;"	f	class:OpenBabel::OBMol
HasKekulePerceived	include/openbabel/mol.h	/^    bool HasKekulePerceived() { return(HasFlag(OB_KEKULE_MOL));         }$/;"	f	class:OpenBabel::OBMol
HasLSSRPerceived	include/openbabel/mol.h	/^    bool HasLSSRPerceived()         { return(HasFlag(OB_LSSR_MOL));     }$/;"	f	class:OpenBabel::OBMol
HasLabel	src/depict/depict.cpp	/^  bool OBDepictPrivate::HasLabel(OBAtom *atom)$/;"	f	class:OpenBabel::OBDepictPrivate
HasLinSet	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::HasLinSet(int atomtype)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
HasMatch	src/parsmart.cpp	/^  bool OBSmartsPattern::HasMatch(OBMol &mol) const$/;"	f	class:OpenBabel::OBSmartsPattern
HasNoHForced	include/openbabel/atom.h	/^      bool HasNoHForced() {return HasFlag(OB_ATOM_HAS_NO_H);}$/;"	f	class:OpenBabel::OBAtom
HasNonSingleBond	src/atom.cpp	/^  bool OBAtom::HasNonSingleBond()$/;"	f	class:OpenBabel::OBAtom
HasNonZeroCoords	src/mol.cpp	/^  bool OBMol::HasNonZeroCoords()$/;"	f	class:OpenBabel::OBMol
HasPartialChargesPerceived	include/openbabel/mol.h	/^    bool HasPartialChargesPerceived() { return(HasFlag(OB_PCHARGE_MOL));}$/;"	f	class:OpenBabel::OBMol
HasPilpSet	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::HasPilpSet(int atomtype)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
HasProperties	src/formats/mdlformat.cpp	/^      bool  HasProperties;$/;"	m	class:OpenBabel::MDLFormat	file:
HasResidue	include/openbabel/atom.h	/^      bool HasResidue()    { return(_residue != NULL);    }$/;"	f	class:OpenBabel::OBAtom
HasRingAtomsAndBondsPerceived	include/openbabel/mol.h	/^    bool HasRingAtomsAndBondsPerceived(){return(HasFlag(OB_RINGFLAGS_MOL));}$/;"	f	class:OpenBabel::OBMol
HasRingRotors	include/openbabel/rotor.h	/^    bool HasRingRotors()$/;"	f	class:OpenBabel::OBRotorList
HasRingTypesPerceived	include/openbabel/mol.h	/^    bool HasRingTypesPerceived()    { return(HasFlag(OB_RINGTYPES_MOL));}$/;"	f	class:OpenBabel::OBMol
HasSSSRPerceived	include/openbabel/mol.h	/^    bool HasSSSRPerceived()         { return(HasFlag(OB_SSSR_MOL));     }$/;"	f	class:OpenBabel::OBMol
HasSbmbSet	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::HasSbmbSet(int atomtype)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
HasSingleBond	include/openbabel/atom.h	/^      bool HasSingleBond()    {        return(HasBondOfOrder(1));    }$/;"	f	class:OpenBabel::OBAtom
HasSpinMultiplicityAssigned	include/openbabel/mol.h	/^    bool HasSpinMultiplicityAssigned() { return(HasFlag(OB_ATOMSPIN_MOL)); }$/;"	f	class:OpenBabel::OBMol
HasSquarePlanarStereo	src/stereo/facade.cpp	/^  bool OBStereoFacade::HasSquarePlanarStereo(unsigned long atomId)$/;"	f	class:OpenBabel::OBStereoFacade
HasStereo	src/stereo/facade.cpp	/^  bool OBStereoFacade::HasStereo<OBStereo::CisTrans>(unsigned long id)$/;"	f	class:OpenBabel::OBStereoFacade
HasStereo	src/stereo/facade.cpp	/^  bool OBStereoFacade::HasStereo<OBStereo::Tetrahedral>(unsigned long id)$/;"	f	class:OpenBabel::OBStereoFacade
HasStereoDblBond	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::HasStereoDblBond(OBBond *bond, OBAtom *atom)$/;"	f	class:OpenBabel::OBMol2Cansmi
HasTetrahedralStereo	src/stereo/facade.cpp	/^  bool OBStereoFacade::HasTetrahedralStereo(unsigned long atomId)$/;"	f	class:OpenBabel::OBStereoFacade
Hash	include/openbabel/bond.h	/^        Hash        = (1<<3),  \/\/!< A dashed "hash" bond in 2D representations -- i.e., "down" from the 2D plane$/;"	e	enum:OpenBabel::OBBond::StereoFlag
HashKey	include/openbabel/json/json.h	/^      typedef unsigned int HashKey;$/;"	t	class:Json::ValueInternalMap
He	src/formats/smiley.h	/^    H = 1,                                                                                                                      He,$/;"	e	enum:Smiley::Elements
HelixParameters	src/formats/fastaformat.cpp	/^  struct HelixParameters$/;"	s	namespace:OpenBabel	file:
HelpCommandLineParms	include/inchi/ichiparm.h	/^void HelpCommandLineParms( INCHI_IOSTREAM *f )$/;"	f
HelpCommandLineParmsReduced	include/inchi/ichiparm.h	/^void HelpCommandLineParmsReduced( INCHI_IOSTREAM *f )$/;"	f
HelpFile	src/GUI/OBGUI.h	/^    wxString HelpFile;$/;"	m	class:OBGUIApp
Hexagonal	include/openbabel/generic.h	/^                       Hexagonal,$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
Hf	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Hg	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
HiPart	src/rand.cpp	55;"	d	file:
HiT	include/openbabel/kinetics.h	/^  double LoT, MidT, HiT;$/;"	m	class:OpenBabel::OBNasaThermoData
HighScore	include/openbabel/conformersearch.h	/^      enum Preferred { HighScore, LowScore };$/;"	e	enum:OpenBabel::OBConformerScore::Preferred
Highest	include/openbabel/conformersearch.h	/^      enum Convergence { Highest, Lowest, Sum, Average };$/;"	e	enum:OpenBabel::OBConformerScore::Convergence
HighestBondOrder	src/atom.cpp	/^  int OBAtom::HighestBondOrder()$/;"	f	class:OpenBabel::OBAtom
Ho	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Hs	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
HtoMethyl	src/atom.cpp	/^  bool OBAtom::HtoMethyl()$/;"	f	class:OpenBabel::OBAtom
Hybridized	src/tautomer.cpp	/^      Hybridized,$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
HydrogenHydrogenCount	src/formats/smiley.h	/^    HydrogenHydrogenCount = 32,$/;"	e	enum:Smiley::ErrorCode
HydrogenType	include/openbabel/mol.h	/^enum HydrogenType { AllHydrogen, PolarHydrogen, NonPolarHydrogen };$/;"	g	namespace:OpenBabel
I	include/openbabel/pointgroup.h	/^        I, Ih, \/\/ 55, 56$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
I	include/openbabel/residue.h	/^      I     = 30,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
I	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
I2A_FLAG_FIXEDH	include/inchi/ichirvrs.h	134;"	d
I2A_FLAG_RECMET	include/inchi/ichirvrs.h	135;"	d
I2S_MODIFY_OUTPUT	include/inchi/mode.h	336;"	d
I2S_MODIFY_OUTPUT	include/inchi/mode.h	338;"	d
IAT_Br	src/formats/libinchi/strutil.c	/^     IAT_Br,$/;"	e	enum:tagIonAtomType	file:
IAT_C	src/formats/libinchi/strutil.c	/^     IAT_C,$/;"	e	enum:tagIonAtomType	file:
IAT_Cl	src/formats/libinchi/strutil.c	/^     IAT_Cl,$/;"	e	enum:tagIonAtomType	file:
IAT_F	src/formats/libinchi/strutil.c	/^     IAT_F,$/;"	e	enum:tagIonAtomType	file:
IAT_H	src/formats/libinchi/strutil.c	/^     IAT_H=0,$/;"	e	enum:tagIonAtomType	file:
IAT_I	src/formats/libinchi/strutil.c	/^     IAT_I,$/;"	e	enum:tagIonAtomType	file:
IAT_MAX	src/formats/libinchi/strutil.c	/^     IAT_MAX$/;"	e	enum:tagIonAtomType	file:
IAT_N	src/formats/libinchi/strutil.c	/^     IAT_N,$/;"	e	enum:tagIonAtomType	file:
IAT_O	src/formats/libinchi/strutil.c	/^     IAT_O,$/;"	e	enum:tagIonAtomType	file:
IAT_P	src/formats/libinchi/strutil.c	/^     IAT_P,$/;"	e	enum:tagIonAtomType	file:
IAT_S	src/formats/libinchi/strutil.c	/^     IAT_S,$/;"	e	enum:tagIonAtomType	file:
IAT_Se	src/formats/libinchi/strutil.c	/^     IAT_Se,$/;"	e	enum:tagIonAtomType	file:
IAT_Te	src/formats/libinchi/strutil.c	/^     IAT_Te,$/;"	e	enum:tagIonAtomType	file:
ICHICONST	include/inchi/ichirvrs.h	43;"	d
ICONV_GET_DISCARD_ILSEQ	include/iconv.h	103;"	d
ICONV_GET_DISCARD_ILSEQ	src/formats/xml/iconv.h	103;"	d
ICONV_GET_TRANSLITERATE	include/iconv.h	101;"	d
ICONV_GET_TRANSLITERATE	src/formats/xml/iconv.h	101;"	d
ICONV_SET_DISCARD_ILSEQ	include/iconv.h	104;"	d
ICONV_SET_DISCARD_ILSEQ	src/formats/xml/iconv.h	104;"	d
ICONV_SET_TRANSLITERATE	include/iconv.h	102;"	d
ICONV_SET_TRANSLITERATE	src/formats/xml/iconv.h	102;"	d
ICONV_TRIVIALP	include/iconv.h	100;"	d
ICONV_TRIVIALP	src/formats/xml/iconv.h	100;"	d
ICR	include/inchi/strutil.h	/^} ICR; \/* tagInChICompareResults *\/$/;"	t	typeref:struct:tagInChICompareResults
ICR_MAX_DIFF_FIXED_H	include/inchi/strutil.h	161;"	d
ICR_MAX_ENDP_IN1_ONLY	include/inchi/strutil.h	159;"	d
ICR_MAX_ENDP_IN2_ONLY	include/inchi/strutil.h	160;"	d
ICR_MAX_SB_IN1_ONLY	include/inchi/strutil.h	162;"	d
ICR_MAX_SB_IN2_ONLY	include/inchi/strutil.h	163;"	d
ICR_MAX_SB_UNDF	include/inchi/strutil.h	166;"	d
ICR_MAX_SC_IN1_ONLY	include/inchi/strutil.h	164;"	d
ICR_MAX_SC_IN2_ONLY	include/inchi/strutil.h	165;"	d
ICR_MAX_SC_UNDF	include/inchi/strutil.h	167;"	d
IDENT_LBL_BIT	src/formats/libinchi/ichiprt1.c	/^} IDENT_LBL_BIT;$/;"	t	typeref:enum:tagIdentLblBit	file:
IDENT_LBL_ORD	src/formats/libinchi/ichiprt1.c	/^} IDENT_LBL_ORD;$/;"	t	typeref:enum:tagIdentLblOrd	file:
IDGRP_CHARGE	include/inchi/inchicmp.h	/^    IDGRP_CHARGE    = 5,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_COMP	include/inchi/inchicmp.h	/^    IDGRP_COMP      =11,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_CONV_ERR	include/inchi/inchicmp.h	/^    IDGRP_CONV_ERR  =12$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_ERR	include/inchi/inchicmp.h	/^    IDGRP_ERR       = 1,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_H	include/inchi/inchicmp.h	/^    IDGRP_H         = 2,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_HLAYER	include/inchi/inchicmp.h	/^    IDGRP_HLAYER    =10,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_ISO_AT	include/inchi/inchicmp.h	/^    IDGRP_ISO_AT    = 4,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_ISO_H	include/inchi/inchicmp.h	/^    IDGRP_ISO_H     = 7,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_MOB_GRP	include/inchi/inchicmp.h	/^    IDGRP_MOB_GRP   = 3,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_PROTONS	include/inchi/inchicmp.h	/^    IDGRP_PROTONS   = 6,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_SB	include/inchi/inchicmp.h	/^    IDGRP_SB        = 9,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_SC	include/inchi/inchicmp.h	/^    IDGRP_SC        = 8,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDGRP_ZERO	include/inchi/inchicmp.h	/^    IDGRP_ZERO      = 0,$/;"	e	enum:tagtagCompareInchiMsgGroupID
IDIF	include/inchi/strutil.h	/^} IDIF;$/;"	t	typeref:enum:tagInchiDiffBits
IDIFF_CONSTIT	include/inchi/strutil.h	148;"	d
IDIFF_SB	include/inchi/strutil.h	145;"	d
IDIFF_SC	include/inchi/strutil.h	146;"	d
IDIFF_STEREO	include/inchi/strutil.h	153;"	d
IDIF_ATOMS	include/inchi/strutil.h	/^    IDIF_ATOMS         = 0x00000001, \/* severe: diiferent types of skeleton atoms *\/$/;"	e	enum:tagInchiDiffBits
IDIF_CHARGE	include/inchi/strutil.h	/^    IDIF_CHARGE        = 0x00020000, \/* restored structure has different charge *\/$/;"	e	enum:tagInchiDiffBits
IDIF_CON_LEN	include/inchi/strutil.h	/^    IDIF_CON_LEN       = 0x00000001, \/* severe: different connection table lengths *\/$/;"	e	enum:tagInchiDiffBits
IDIF_CON_TBL	include/inchi/strutil.h	/^    IDIF_CON_TBL       = 0x00000001, \/* severe: different connection tables *\/$/;"	e	enum:tagInchiDiffBits
IDIF_DIFF_TG_ENDP	include/inchi/strutil.h	/^    IDIF_DIFF_TG_ENDP  = 0x00002000, \/* lists of tg endpoints are different *\/$/;"	e	enum:tagInchiDiffBits
IDIF_EXTRA_TG_ENDP	include/inchi/strutil.h	/^    IDIF_EXTRA_TG_ENDP = 0x00000800, \/* extra tautomeric endpoint(s) in restored structure *\/$/;"	e	enum:tagInchiDiffBits
IDIF_ISO_AT	include/inchi/strutil.h	/^    IDIF_ISO_AT        = 0x00010000, \/* ?severe: restored struct. has different locations\/isotopes of isotopic atoms *\/$/;"	e	enum:tagInchiDiffBits
IDIF_LESS_FH	include/inchi/strutil.h	/^    IDIF_LESS_FH       = 0x00000008, \/* missing fixed H *\/$/;"	e	enum:tagInchiDiffBits
IDIF_LESS_H	include/inchi/strutil.h	/^    IDIF_LESS_H        = 0x00000020, \/* formulas differ in number of H *\/$/;"	e	enum:tagInchiDiffBits
IDIF_MISS_TG_ENDP	include/inchi/strutil.h	/^    IDIF_MISS_TG_ENDP  = 0x00001000, \/* one or more tg endpoint is not in the restored structure *\/$/;"	e	enum:tagInchiDiffBits
IDIF_MORE_FH	include/inchi/strutil.h	/^    IDIF_MORE_FH       = 0x00000004, \/* extra fixed H *\/$/;"	e	enum:tagInchiDiffBits
IDIF_MORE_H	include/inchi/strutil.h	/^    IDIF_MORE_H        = 0x00000010, \/* formulas differ in number of H *\/$/;"	e	enum:tagInchiDiffBits
IDIF_MULTIPLE_TG	include/inchi/strutil.h	/^    IDIF_MULTIPLE_TG   = 0x00000200, \/* restored has multiple tg while the original InChI has only one tg *\/$/;"	e	enum:tagInchiDiffBits
IDIF_NO_TAUT	include/inchi/strutil.h	/^    IDIF_NO_TAUT       = 0x00000040, \/* restored structure has no taut groups while the original InChI has some *\/$/;"	e	enum:tagInchiDiffBits
IDIF_NUM_AT	include/inchi/strutil.h	/^    IDIF_NUM_AT        = 0x00000001, \/* severe: different number of atoms in the skeleton *\/$/;"	e	enum:tagInchiDiffBits
IDIF_NUM_EL	include/inchi/strutil.h	/^    IDIF_NUM_EL        = 0x00000001, \/* severe: formulas differ in another element *\/$/;"	e	enum:tagInchiDiffBits
IDIF_NUM_ISO_AT	include/inchi/strutil.h	/^    IDIF_NUM_ISO_AT    = 0x00008000, \/* ?severe: restored struct. has different number of isotopic atoms *\/$/;"	e	enum:tagInchiDiffBits
IDIF_NUM_TG	include/inchi/strutil.h	/^    IDIF_NUM_TG        = 0x00000400, \/* different number of tautomeric groups *\/$/;"	e	enum:tagInchiDiffBits
IDIF_POSITION_H	include/inchi/strutil.h	/^    IDIF_POSITION_H    = 0x00000002, \/* difference in non-taut (Mobile-H) or all H (Fixed-H) location\/number *\/$/;"	e	enum:tagInchiDiffBits
IDIF_PROBLEM	include/inchi/strutil.h	/^    IDIF_PROBLEM       = 0x00000001, \/* severe: at least one InChI does not exist *\/$/;"	e	enum:tagInchiDiffBits
IDIF_REM_ISO_H	include/inchi/strutil.h	/^    IDIF_REM_ISO_H     = 0x00080000, \/* isotopic H removed *\/$/;"	e	enum:tagInchiDiffBits
IDIF_REM_PROT	include/inchi/strutil.h	/^    IDIF_REM_PROT      = 0x00040000, \/* proton(s) removed\/added from the restored structure *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SB_EXTRA	include/inchi/strutil.h	/^    IDIF_SB_EXTRA      = 0x10000000, \/* restored structure has extra stereobond(s) *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SB_EXTRA_UNDF	include/inchi/strutil.h	/^    IDIF_SB_EXTRA_UNDF = 0x08000000, \/* restored structure has extra undefined stereobond(s) *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SB_MISS	include/inchi/strutil.h	/^    IDIF_SB_MISS       = 0x40000000  \/* restored structure has not some stereobonds that are not undefined *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SB_MISS_UNDF	include/inchi/strutil.h	/^    IDIF_SB_MISS_UNDF  = 0x20000000, \/* restored structure has not some undefined stereocenters *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SB_PARITY	include/inchi/strutil.h	/^    IDIF_SB_PARITY     = 0x04000000, \/* restored structure has stereobonds or cumulenes with different parity *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SC_EXTRA	include/inchi/strutil.h	/^    IDIF_SC_EXTRA      = 0x00800000, \/* restored structure has extra stereocenter(s) *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SC_EXTRA_UNDF	include/inchi/strutil.h	/^    IDIF_SC_EXTRA_UNDF = 0x00400000, \/* restored structure has extra undefined stereocenter(s) *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SC_INV	include/inchi/strutil.h	/^    IDIF_SC_INV        = 0x00100000, \/* restores structure has different inversion stereocenter mark *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SC_MISS	include/inchi/strutil.h	/^    IDIF_SC_MISS       = 0x02000000, \/* restored structure has not some stereocenters that are not undefined *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SC_MISS_UNDF	include/inchi/strutil.h	/^    IDIF_SC_MISS_UNDF  = 0x01000000,  \/* restored structure has not some undefined stereocenter(s) *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SC_PARITY	include/inchi/strutil.h	/^    IDIF_SC_PARITY     = 0x00200000, \/* restored structure has stereoatoms or allenes with different parity *\/$/;"	e	enum:tagInchiDiffBits
IDIF_SINGLE_TG	include/inchi/strutil.h	/^    IDIF_SINGLE_TG     = 0x00000100, \/* restored has 1 taut. group while the original InChI has multiple tg *\/$/;"	e	enum:tagInchiDiffBits
IDIF_TG	include/inchi/strutil.h	/^    IDIF_TG            = 0x00004000, \/* different tautomeric groups *\/$/;"	e	enum:tagInchiDiffBits
IDIF_WRONG_TAUT	include/inchi/strutil.h	/^    IDIF_WRONG_TAUT    = 0x00000080, \/* restored has tautomerism while the original does not have it *\/$/;"	e	enum:tagInchiDiffBits
ID_BUTTON	src/GUI/OBGUI.h	/^    ID_BUTTON = wxID_HIGHEST+1,$/;"	e	enum:__anon87
ID_CONVERT	src/GUI/OBGUI.h	/^    ID_INFORCEFORMAT,ID_OUTFORCEFORMAT,ID_NOOUTFILE,ID_CONVERT,$/;"	e	enum:__anon87
ID_COPYTOINPUT	src/GUI/OBGUI.h	/^    ID_COPYTOINPUT,ID_SAVECONFIG,ID_HINT,ID_SHOWDATADIR,$/;"	e	enum:__anon87
ID_DISPLAY	src/GUI/OBGUI.h	/^    ID_PLUGINS,ID_DISPLAY,ID_SETDISPLAYFILE,ID_MINSIZE,ID_PLUGININFO$/;"	e	enum:__anon87
ID_HINT	src/GUI/OBGUI.h	/^    ID_COPYTOINPUT,ID_SAVECONFIG,ID_HINT,ID_SHOWDATADIR,$/;"	e	enum:__anon87
ID_INFILENAME	src/GUI/OBGUI.h	/^    ID_INFILENAME,ID_INGETFILES,$/;"	e	enum:__anon87
ID_INFO	src/GUI/OBGUI.h	/^    ID_TEXTCTRL, ID_INFO, ID_INTEXT, ID_OUTTEXT,$/;"	e	enum:__anon87
ID_INFORCEFORMAT	src/GUI/OBGUI.h	/^    ID_INFORCEFORMAT,ID_OUTFORCEFORMAT,ID_NOOUTFILE,ID_CONVERT,$/;"	e	enum:__anon87
ID_INFORMAT	src/GUI/OBGUI.h	/^    ID_INFORMAT,ID_OUTFORMAT,ID_ININFO,ID_OUTINFO,$/;"	e	enum:__anon87
ID_INGETFILES	src/GUI/OBGUI.h	/^    ID_INFILENAME,ID_INGETFILES,$/;"	e	enum:__anon87
ID_ININFO	src/GUI/OBGUI.h	/^    ID_INFORMAT,ID_OUTFORMAT,ID_ININFO,ID_OUTINFO,$/;"	e	enum:__anon87
ID_INPUTHERE	src/GUI/OBGUI.h	/^    ID_MESSAGES,ID_INPUTHERE,ID_RESTRICTFORMATS,ID_SELFORMATS,$/;"	e	enum:__anon87
ID_INTEXT	src/GUI/OBGUI.h	/^    ID_TEXTCTRL, ID_INFO, ID_INTEXT, ID_OUTTEXT,$/;"	e	enum:__anon87
ID_INWRAPPED	src/GUI/OBGUI.h	/^    ID_INWRAPPED,ID_OUTWRAPPED,$/;"	e	enum:__anon87
ID_MESSAGES	src/GUI/OBGUI.h	/^    ID_MESSAGES,ID_INPUTHERE,ID_RESTRICTFORMATS,ID_SELFORMATS,$/;"	e	enum:__anon87
ID_MINSIZE	src/GUI/OBGUI.h	/^    ID_PLUGINS,ID_DISPLAY,ID_SETDISPLAYFILE,ID_MINSIZE,ID_PLUGININFO$/;"	e	enum:__anon87
ID_NOOUTFILE	src/GUI/OBGUI.h	/^    ID_INFORCEFORMAT,ID_OUTFORCEFORMAT,ID_NOOUTFILE,ID_CONVERT,$/;"	e	enum:__anon87
ID_OUTFILENAME	src/GUI/OBGUI.h	/^    ID_OUTFILENAME,ID_OUTGETFILES,$/;"	e	enum:__anon87
ID_OUTFORCEFORMAT	src/GUI/OBGUI.h	/^    ID_INFORCEFORMAT,ID_OUTFORCEFORMAT,ID_NOOUTFILE,ID_CONVERT,$/;"	e	enum:__anon87
ID_OUTFORMAT	src/GUI/OBGUI.h	/^    ID_INFORMAT,ID_OUTFORMAT,ID_ININFO,ID_OUTINFO,$/;"	e	enum:__anon87
ID_OUTGETFILES	src/GUI/OBGUI.h	/^    ID_OUTFILENAME,ID_OUTGETFILES,$/;"	e	enum:__anon87
ID_OUTINFO	src/GUI/OBGUI.h	/^    ID_INFORMAT,ID_OUTFORMAT,ID_ININFO,ID_OUTINFO,$/;"	e	enum:__anon87
ID_OUTTEXT	src/GUI/OBGUI.h	/^    ID_TEXTCTRL, ID_INFO, ID_INTEXT, ID_OUTTEXT,$/;"	e	enum:__anon87
ID_OUTWRAPPED	src/GUI/OBGUI.h	/^    ID_INWRAPPED,ID_OUTWRAPPED,$/;"	e	enum:__anon87
ID_PLUGININFO	src/GUI/OBGUI.h	/^    ID_PLUGINS,ID_DISPLAY,ID_SETDISPLAYFILE,ID_MINSIZE,ID_PLUGININFO$/;"	e	enum:__anon87
ID_PLUGINS	src/GUI/OBGUI.h	/^    ID_PLUGINS,ID_DISPLAY,ID_SETDISPLAYFILE,ID_MINSIZE,ID_PLUGININFO$/;"	e	enum:__anon87
ID_RESTRICTFORMATS	src/GUI/OBGUI.h	/^    ID_MESSAGES,ID_INPUTHERE,ID_RESTRICTFORMATS,ID_SELFORMATS,$/;"	e	enum:__anon87
ID_SAVECONFIG	src/GUI/OBGUI.h	/^    ID_COPYTOINPUT,ID_SAVECONFIG,ID_HINT,ID_SHOWDATADIR,$/;"	e	enum:__anon87
ID_SELFORMATS	src/GUI/OBGUI.h	/^    ID_MESSAGES,ID_INPUTHERE,ID_RESTRICTFORMATS,ID_SELFORMATS,$/;"	e	enum:__anon87
ID_SETDISPLAYFILE	src/GUI/OBGUI.h	/^    ID_PLUGINS,ID_DISPLAY,ID_SETDISPLAYFILE,ID_MINSIZE,ID_PLUGININFO$/;"	e	enum:__anon87
ID_SHOWAPIOPTIONS	src/GUI/OBGUI.h	/^    ID_SHOWCONVOPTIONS,ID_SHOWAPIOPTIONS,ID_SHOWOBJOPTIONS1,ID_SHOWOBJOPTIONS2,$/;"	e	enum:__anon87
ID_SHOWCONVOPTIONS	src/GUI/OBGUI.h	/^    ID_SHOWCONVOPTIONS,ID_SHOWAPIOPTIONS,ID_SHOWOBJOPTIONS1,ID_SHOWOBJOPTIONS2,$/;"	e	enum:__anon87
ID_SHOWDATADIR	src/GUI/OBGUI.h	/^    ID_COPYTOINPUT,ID_SAVECONFIG,ID_HINT,ID_SHOWDATADIR,$/;"	e	enum:__anon87
ID_SHOWINOPTIONS	src/GUI/OBGUI.h	/^    ID_SHOWINOPTIONS,ID_SHOWOUTOPTIONS,$/;"	e	enum:__anon87
ID_SHOWOBJOPTIONS1	src/GUI/OBGUI.h	/^    ID_SHOWCONVOPTIONS,ID_SHOWAPIOPTIONS,ID_SHOWOBJOPTIONS1,ID_SHOWOBJOPTIONS2,$/;"	e	enum:__anon87
ID_SHOWOBJOPTIONS2	src/GUI/OBGUI.h	/^    ID_SHOWCONVOPTIONS,ID_SHOWAPIOPTIONS,ID_SHOWOBJOPTIONS1,ID_SHOWOBJOPTIONS2,$/;"	e	enum:__anon87
ID_SHOWOUTOPTIONS	src/GUI/OBGUI.h	/^    ID_SHOWINOPTIONS,ID_SHOWOUTOPTIONS,$/;"	e	enum:__anon87
ID_TEXTCTRL	src/GUI/OBGUI.h	/^    ID_TEXTCTRL, ID_INFO, ID_INTEXT, ID_OUTTEXT,$/;"	e	enum:__anon87
ID_VIEW	src/GUI/OBGUI.h	/^    ID_VIEW,$/;"	e	enum:__anon87
IF_OBFF_LOGLVL_HIGH	include/openbabel/forcefield.h	74;"	d
IF_OBFF_LOGLVL_LOW	include/openbabel/forcefield.h	72;"	d
IF_OBFF_LOGLVL_MEDIUM	include/openbabel/forcefield.h	73;"	d
IGNORE_SINGLE_ENDPOINTS	include/inchi/mode.h	409;"	d
IGNORE_TGROUP_WITHOUT_H	include/inchi/mode.h	614;"	d
ILE	include/openbabel/residue.h	/^      ILE   =  8,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
IL_ALLH	src/formats/libinchi/ichiprt1.c	/^    IL_ALLH = 1 << IL_ALLH_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_ALLH_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_ALLH_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_ATMS	src/formats/libinchi/ichiprt1.c	/^    IL_ATMS = 1 << IL_ATMS_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_ATMS_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_ATMS_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_CHRG	src/formats/libinchi/ichiprt1.c	/^    IL_CHRG = 1 << IL_CHRG_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_CHRG_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_CHRG_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_CONN	src/formats/libinchi/ichiprt1.c	/^    IL_CONN = 1 << IL_CONN_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_CONN_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_CONN_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_DBND	src/formats/libinchi/ichiprt1.c	/^    IL_DBND = 1 << IL_DBND_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_DBND_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_DBND_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_FIXH	src/formats/libinchi/ichiprt1.c	/^    IL_FIXH = 1 << IL_FIXH_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_FIXH_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_FIXH_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_FMLF	src/formats/libinchi/ichiprt1.c	/^    IL_FMLF = 1 << IL_FMLF_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_FMLF_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_FMLF_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_FML_	src/formats/libinchi/ichiprt1.c	/^    IL_FML_ = 1 << IL_FML__ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_FML__ORD	src/formats/libinchi/ichiprt1.c	/^    IL_FML__ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_HFIX	src/formats/libinchi/ichiprt1.c	/^    IL_HFIX = 1 << IL_HFIX_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_HFIX_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_HFIX_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_INVS	src/formats/libinchi/ichiprt1.c	/^    IL_INVS = 1 << IL_INVS_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_INVS_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_INVS_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_ISOT	src/formats/libinchi/ichiprt1.c	/^    IL_ISOT = 1 << IL_ISOT_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_ISOT_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_ISOT_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_MAX_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_MAX_ORD \/* max number of tags *\/$/;"	e	enum:tagIdentLblOrd	file:
IL_PROT	src/formats/libinchi/ichiprt1.c	/^    IL_PROT = 1 << IL_PROT_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_PROT_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_PROT_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_REC_	src/formats/libinchi/ichiprt1.c	/^    IL_REC_ = 1 << IL_REC__ORD$/;"	e	enum:tagIdentLblBit	file:
IL_REC__ORD	src/formats/libinchi/ichiprt1.c	/^    IL_REC__ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_SP3S	src/formats/libinchi/ichiprt1.c	/^    IL_SP3S = 1 << IL_SP3S_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_SP3S_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_SP3S_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_STER	src/formats/libinchi/ichiprt1.c	/^    IL_STER = 1 << IL_STER_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_STER_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_STER_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_TRNS	src/formats/libinchi/ichiprt1.c	/^    IL_TRNS = 1 << IL_TRNS_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_TRNS_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_TRNS_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_TYPS	src/formats/libinchi/ichiprt1.c	/^    IL_TYPS = 1 << IL_TYPS_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_TYPS_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_TYPS_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_VERS	src/formats/libinchi/ichiprt1.c	/^    IL_VERS = 1 << IL_VERS_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_VERS_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_VERS_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IL_XCGA	src/formats/libinchi/ichiprt1.c	/^    IL_XCGA = 1 << IL_XCGA_ORD,$/;"	e	enum:tagIdentLblBit	file:
IL_XCGA_ORD	src/formats/libinchi/ichiprt1.c	/^    IL_XCGA_ORD,$/;"	e	enum:tagIdentLblOrd	file:
IMPLICIT_CIS_RING_SIZE	src/formats/smilesformat.cpp	40;"	d	file:
IMPLICIT_CIS_RING_SIZE	src/stereo/perception.cpp	43;"	d	file:
IMols	include/openbabel/obmolecformat.h	/^  static std::map<std::string, OBMol*> IMols;$/;"	m	class:OpenBabel::OBMoleculeFormat
IMols	src/formats/chemkinformat.cpp	/^  MolMap IMols;$/;"	m	class:OpenBabel::ChemKinFormat	file:
IMols	src/formats/xml/cmlreactformat.cpp	/^  MolMap IMols; \/\/used on input$/;"	m	class:OpenBabel::CMLReactFormat	file:
IMols	src/obmolecformat.cpp	/^  std::map<std::string, OBMol*> OBMoleculeFormat::IMols;$/;"	m	class:OpenBabel::OBMoleculeFormat	file:
INCHIDIFF	include/inchi/inchicmp.h	/^} INCHIDIFF;$/;"	t	typeref:enum:tagInchiCompareDiffBits
INCHIDIFF_ATOMS	include/inchi/inchicmp.h	/^    INCHIDIFF_ATOMS         = 0x00000001, \/* severe: diiferent types of skeleton atoms *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_CHARGE	include/inchi/inchicmp.h	/^    INCHIDIFF_CHARGE        = 0x00002000, \/* restored structure has different charge *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_COMP_HLAYER	include/inchi/inchicmp.h	/^    INCHIDIFF_COMP_HLAYER   = 0x08000000, \/* Restored component has Mobile-H layer instead of both Mobile-H & Fixed-H or both instead of one *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_COMP_NUMBER	include/inchi/inchicmp.h	/^    INCHIDIFF_COMP_NUMBER   = 0x10000000, \/* wrong number of components *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_CONSTIT	include/inchi/inchicmp.h	128;"	d
INCHIDIFF_CON_LEN	include/inchi/inchicmp.h	/^    INCHIDIFF_CON_LEN       = 0x00000001, \/* severe: different connection table lengths *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_CON_TBL	include/inchi/inchicmp.h	/^    INCHIDIFF_CON_TBL       = 0x00000001, \/* severe: different connection tables *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_DIFF_TG_ENDP	include/inchi/inchicmp.h	/^    INCHIDIFF_DIFF_TG_ENDP  = 0x00000100, \/* lists of tg endpoints are different *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_EXTRA_TG_ENDP	include/inchi/inchicmp.h	/^    INCHIDIFF_EXTRA_TG_ENDP = 0x00000100, \/* extra tautomeric endpoint(s) in restored structure *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_ISO_AT	include/inchi/inchicmp.h	/^    INCHIDIFF_ISO_AT        = 0x00000400, \/* ?severe: restored struct. has different locations\/isotopes of isotopic atoms *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_LESS_FH	include/inchi/inchicmp.h	/^    INCHIDIFF_LESS_FH       = 0x00000004, \/* missing fixed H *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_LESS_H	include/inchi/inchicmp.h	/^    INCHIDIFF_LESS_H        = 0x00000008, \/* formulas differ in number of H *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_MISS_TG_ENDP	include/inchi/inchicmp.h	/^    INCHIDIFF_MISS_TG_ENDP  = 0x00000100, \/* one or more tg endpoint is not in the restored structure *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_MOBH_PROTONS	include/inchi/inchicmp.h	/^    INCHIDIFF_MOBH_PROTONS  = 0x00008000, \/* different proton balance *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_MOB_ISO_H	include/inchi/inchicmp.h	/^    INCHIDIFF_MOB_ISO_H     = 0x00001000, \/* different number of mobile exchangeable isotopic H *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_MORE_FH	include/inchi/inchicmp.h	/^    INCHIDIFF_MORE_FH       = 0x00000004, \/* extra fixed H *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_MORE_H	include/inchi/inchicmp.h	/^    INCHIDIFF_MORE_H        = 0x00000008, \/* formulas differ in number of H *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_MULTIPLE_TG	include/inchi/inchicmp.h	/^    INCHIDIFF_MULTIPLE_TG   = 0x00000080, \/* restored has multiple tg while the original InChI has only one tg *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_NO_TAUT	include/inchi/inchicmp.h	/^    INCHIDIFF_NO_TAUT       = 0x00000010, \/* restored structure has no taut groups while the original InChI has some *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_NUM_AT	include/inchi/inchicmp.h	/^    INCHIDIFF_NUM_AT        = 0x00000001, \/* severe: different number of atoms in the skeleton *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_NUM_EL	include/inchi/inchicmp.h	/^    INCHIDIFF_NUM_EL        = 0x00000001, \/* severe: formulas differ in another element *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_NUM_ISO_AT	include/inchi/inchicmp.h	/^    INCHIDIFF_NUM_ISO_AT    = 0x00000400, \/* ?severe: restored struct. has different number of isotopic atoms *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_NUM_TG	include/inchi/inchicmp.h	/^    INCHIDIFF_NUM_TG        = 0x00000200, \/* different number of tautomeric groups *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_POSITION_H	include/inchi/inchicmp.h	/^    INCHIDIFF_POSITION_H    = 0x00000002, \/* difference in non-taut (Mobile-H) or all H (Fixed-H) location\/number *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_PROBLEM	include/inchi/inchicmp.h	/^    INCHIDIFF_PROBLEM       = 0x00000001, \/* severe: at least one InChI does not exist *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_REM_ISO_H	include/inchi/inchicmp.h	/^    INCHIDIFF_REM_ISO_H     = 0x00000800, \/* isotopic H removed *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_REM_PROT	include/inchi/inchicmp.h	/^    INCHIDIFF_REM_PROT      = 0x00004000, \/* proton(s) removed\/added from the restored structure *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SB	include/inchi/inchicmp.h	125;"	d
INCHIDIFF_SB_EXTRA	include/inchi/inchicmp.h	/^    INCHIDIFF_SB_EXTRA      = 0x01000000, \/* restored structure has extra stereobond(s) *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SB_EXTRA_UNDF	include/inchi/inchicmp.h	/^    INCHIDIFF_SB_EXTRA_UNDF = 0x00800000, \/* restored structure has extra undefined stereobond(s) *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SB_MISS	include/inchi/inchicmp.h	/^    INCHIDIFF_SB_MISS       = 0x04000000, \/* restored structure has not some stereobonds that are not undefined *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SB_MISS_UNDF	include/inchi/inchicmp.h	/^    INCHIDIFF_SB_MISS_UNDF  = 0x02000000, \/* restored structure has not some undefined stereocenters *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SB_PARITY	include/inchi/inchicmp.h	/^    INCHIDIFF_SB_PARITY     = 0x00400000, \/* restored structure has stereobonds or cumulenes with different parity *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SC	include/inchi/inchicmp.h	126;"	d
INCHIDIFF_SC_EXTRA	include/inchi/inchicmp.h	/^    INCHIDIFF_SC_EXTRA      = 0x00080000, \/* restored structure has extra stereocenter(s) *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SC_EXTRA_UNDF	include/inchi/inchicmp.h	/^    INCHIDIFF_SC_EXTRA_UNDF = 0x00040000, \/* restored structure has extra undefined stereocenter(s) *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SC_INV	include/inchi/inchicmp.h	/^    INCHIDIFF_SC_INV        = 0x00010000, \/* restores structure has different inversion stereocenter mark *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SC_MISS	include/inchi/inchicmp.h	/^    INCHIDIFF_SC_MISS       = 0x00200000, \/* restored structure has not some stereocenters that are not undefined *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SC_MISS_UNDF	include/inchi/inchicmp.h	/^    INCHIDIFF_SC_MISS_UNDF  = 0x00100000,  \/* restored structure has not some undefined stereocenter(s) *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SC_PARITY	include/inchi/inchicmp.h	/^    INCHIDIFF_SC_PARITY     = 0x00020000, \/* restored structure has stereoatoms or allenes with different parity *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_SINGLE_TG	include/inchi/inchicmp.h	/^    INCHIDIFF_SINGLE_TG     = 0x00000040, \/* restored has 1 taut. group while the original InChI has multiple tg *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_STEREO	include/inchi/inchicmp.h	133;"	d
INCHIDIFF_STR2INCHI_ERR	include/inchi/inchicmp.h	/^    INCHIDIFF_STR2INCHI_ERR = 0x20000000  \/* Restored structure to InChI conversion error *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_TG	include/inchi/inchicmp.h	/^    INCHIDIFF_TG            = 0x00000200, \/* different tautomeric groups *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_WRONG_TAUT	include/inchi/inchicmp.h	/^    INCHIDIFF_WRONG_TAUT    = 0x00000020, \/* restored has tautomerism while the original does not have it *\/$/;"	e	enum:tagInchiCompareDiffBits
INCHIDIFF_ZERO	include/inchi/inchicmp.h	/^    INCHIDIFF_ZERO          = 0x00000000,$/;"	e	enum:tagInchiCompareDiffBits
INCHIGEN_CONTROL	include/inchi/inchi_dll_a.h	/^} INCHIGEN_CONTROL;$/;"	t	typeref:struct:tagINCHIGEN_CONTROL
INCHIGEN_Create	src/formats/libinchi/inchi_dll_a.c	/^INCHIGEN_HANDLE INCHI_DECL INCHIGEN_Create(void)$/;"	f
INCHIGEN_DATA	include/inchi/inchi_api.h	/^} INCHIGEN_DATA;$/;"	t	typeref:struct:tagINCHIGEN_DATA
INCHIGEN_DATA	include/inchi_api.h	/^} INCHIGEN_DATA;$/;"	t	typeref:struct:tagINCHIGEN_DATA
INCHIGEN_Destroy	src/formats/libinchi/inchi_dll_a.c	/^void INCHI_DECL INCHIGEN_Destroy(INCHIGEN_HANDLE _HGen) $/;"	f
INCHIGEN_DoCanonicalization	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL INCHIGEN_DoCanonicalization$/;"	f
INCHIGEN_DoNormalization	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL INCHIGEN_DoNormalization(INCHIGEN_HANDLE _HGen, INCHIGEN_DATA *pGenData) $/;"	f
INCHIGEN_DoSerialization	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL INCHIGEN_DoSerialization(INCHIGEN_HANDLE _HGen, $/;"	f
INCHIGEN_HANDLE	include/inchi/inchi_api.h	/^typedef void* INCHIGEN_HANDLE;$/;"	t
INCHIGEN_HANDLE	include/inchi_api.h	/^typedef void* INCHIGEN_HANDLE;$/;"	t
INCHIGEN_Reset	src/formats/libinchi/inchi_dll_a.c	/^void INCHI_DECL INCHIGEN_Reset(INCHIGEN_HANDLE _HGen, $/;"	f
INCHIGEN_Setup	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL INCHIGEN_Setup(INCHIGEN_HANDLE _HGen, $/;"	f
INCHIHASH_KEY	include/inchi/ichidrp.h	/^    INCHIHASH_KEY=1, $/;"	e	enum:tagInChIHashCalc
INCHIHASH_KEY_XTRA1	include/inchi/ichidrp.h	/^    INCHIHASH_KEY_XTRA1=2, $/;"	e	enum:tagInChIHashCalc
INCHIHASH_KEY_XTRA1_XTRA2	include/inchi/ichidrp.h	/^    INCHIHASH_KEY_XTRA1_XTRA2=4 $/;"	e	enum:tagInChIHashCalc
INCHIHASH_KEY_XTRA2	include/inchi/ichidrp.h	/^    INCHIHASH_KEY_XTRA2=3, $/;"	e	enum:tagInChIHashCalc
INCHIHASH_NONE	include/inchi/ichidrp.h	/^    INCHIHASH_NONE=0, $/;"	e	enum:tagInChIHashCalc
INCHIKEY_DEBUG	src/formats/libinchi/ikey_dll.c	78;"	d	file:
INCHIKEY_EMPTY_INPUT	include/inchi/inchi_api.h	888;"	d
INCHIKEY_EMPTY_INPUT	include/inchi_api.h	889;"	d
INCHIKEY_FLAG_OK	src/formats/libinchi/ikey_dll.c	80;"	d	file:
INCHIKEY_INVALID_INCHI	include/inchi/inchi_api.h	891;"	d
INCHIKEY_INVALID_INCHI	include/inchi_api.h	892;"	d
INCHIKEY_INVALID_INCHI_PREFIX	include/inchi/inchi_api.h	889;"	d
INCHIKEY_INVALID_INCHI_PREFIX	include/inchi_api.h	890;"	d
INCHIKEY_INVALID_LAYOUT	include/inchi/inchi_api.h	/^    INCHIKEY_INVALID_LAYOUT     =   2,$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_INVALID_LAYOUT	include/inchi_api.h	/^    INCHIKEY_INVALID_LAYOUT     =   2,$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_INVALID_LENGTH	include/inchi/inchi_api.h	/^    INCHIKEY_INVALID_LENGTH     =   1,$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_INVALID_LENGTH	include/inchi_api.h	/^    INCHIKEY_INVALID_LENGTH     =   1,$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_INVALID_STD_INCHI	include/inchi/inchi_api.h	892;"	d
INCHIKEY_INVALID_STD_INCHI	include/inchi_api.h	893;"	d
INCHIKEY_INVALID_VERSION	include/inchi/inchi_api.h	/^    INCHIKEY_INVALID_VERSION    =   3$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_INVALID_VERSION	include/inchi_api.h	/^    INCHIKEY_INVALID_VERSION    =   3$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_NOT_ENOUGH_MEMORY	include/inchi/inchi_api.h	890;"	d
INCHIKEY_NOT_ENOUGH_MEMORY	include/inchi_api.h	891;"	d
INCHIKEY_NOT_VALID_FLAG	src/formats/libinchi/ikey_dll.c	81;"	d	file:
INCHIKEY_OK	include/inchi/inchi_api.h	886;"	d
INCHIKEY_OK	include/inchi_api.h	887;"	d
INCHIKEY_UNKNOWN_ERROR	include/inchi/inchi_api.h	887;"	d
INCHIKEY_UNKNOWN_ERROR	include/inchi_api.h	888;"	d
INCHIKEY_VALID_NON_STANDARD	include/inchi/inchi_api.h	/^    INCHIKEY_VALID_NON_STANDARD =  -1,$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_VALID_NON_STANDARD	include/inchi_api.h	/^    INCHIKEY_VALID_NON_STANDARD =  -1,$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_VALID_STANDARD	include/inchi/inchi_api.h	/^    INCHIKEY_VALID_STANDARD     =   0,$/;"	e	enum:tagRetValGetINCHIKey
INCHIKEY_VALID_STANDARD	include/inchi_api.h	/^    INCHIKEY_VALID_STANDARD     =   0,$/;"	e	enum:tagRetValGetINCHIKey
INCHI_ACD_LABS_PREFIX	include/inchi/mode.h	252;"	d
INCHI_ADD_STR_LEN	src/formats/libinchi/ichi_io.c	51;"	d	file:
INCHI_ALT_OPT_PREFIX	include/inchi/mode.h	251;"	d
INCHI_API	include/inchi/inchi_api.h	558;"	d
INCHI_API	include/inchi/inchi_api.h	563;"	d
INCHI_API	include/inchi/inchi_api.h	569;"	d
INCHI_API	include/inchi/inchi_dll_a.h	146;"	d
INCHI_API	include/inchi/inchi_dll_a.h	151;"	d
INCHI_API	include/inchi/inchi_dll_a.h	157;"	d
INCHI_API	include/inchi_api.h	559;"	d
INCHI_API	include/inchi_api.h	564;"	d
INCHI_API	include/inchi_api.h	570;"	d
INCHI_BAS	include/inchi/mode.h	439;"	d
INCHI_BOND_STEREO_DOUBLE_EITHER	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_DOUBLE_EITHER  =  3 \/* unknown stereobond geometry *\/$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_DOUBLE_EITHER	include/inchi_api.h	/^   INCHI_BOND_STEREO_DOUBLE_EITHER  =  3 \/* unknown stereobond geometry *\/$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_NONE	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_NONE           =  0,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_NONE	include/inchi_api.h	/^   INCHI_BOND_STEREO_NONE           =  0,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_1DOWN	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_1DOWN   =  6,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_1DOWN	include/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_1DOWN   =  6,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_1EITHER	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_1EITHER =  4,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_1EITHER	include/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_1EITHER =  4,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_1UP	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_1UP     =  1,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_1UP	include/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_1UP     =  1,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_2DOWN	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_2DOWN   = -6,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_2DOWN	include/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_2DOWN   = -6,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_2EITHER	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_2EITHER = -4,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_2EITHER	include/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_2EITHER = -4,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_2UP	include/inchi/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_2UP     = -1,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_STEREO_SINGLE_2UP	include/inchi_api.h	/^   INCHI_BOND_STEREO_SINGLE_2UP     = -1,$/;"	e	enum:tagINCHIBondStereo2D
INCHI_BOND_TYPE_ALTERN	include/inchi/inchi_api.h	/^   INCHI_BOND_TYPE_ALTERN  =  4  \/* avoid by all means *\/$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_ALTERN	include/inchi_api.h	/^   INCHI_BOND_TYPE_ALTERN  =  4  \/* avoid by all means *\/$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_DOUBLE	include/inchi/inchi_api.h	/^   INCHI_BOND_TYPE_DOUBLE  =  2,$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_DOUBLE	include/inchi_api.h	/^   INCHI_BOND_TYPE_DOUBLE  =  2,$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_NONE	include/inchi/inchi_api.h	/^   INCHI_BOND_TYPE_NONE    =  0,$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_NONE	include/inchi_api.h	/^   INCHI_BOND_TYPE_NONE    =  0,$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_SINGLE	include/inchi/inchi_api.h	/^   INCHI_BOND_TYPE_SINGLE  =  1,$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_SINGLE	include/inchi_api.h	/^   INCHI_BOND_TYPE_SINGLE  =  1,$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_TRIPLE	include/inchi/inchi_api.h	/^   INCHI_BOND_TYPE_TRIPLE  =  3,$/;"	e	enum:tagINCHIBondType
INCHI_BOND_TYPE_TRIPLE	include/inchi_api.h	/^   INCHI_BOND_TYPE_TRIPLE  =  3,$/;"	e	enum:tagINCHIBondType
INCHI_CANON_MIN	src/formats/libinchi/ichican2.c	75;"	d	file:
INCHI_CLOCK_T	src/formats/libinchi/ichicano.c	114;"	d	file:
INCHI_DECL	include/inchi/inchi_api.h	560;"	d
INCHI_DECL	include/inchi/inchi_api.h	565;"	d
INCHI_DECL	include/inchi/inchi_api.h	571;"	d
INCHI_DECL	include/inchi/inchi_dll_a.h	148;"	d
INCHI_DECL	include/inchi/inchi_dll_a.h	153;"	d
INCHI_DECL	include/inchi/inchi_dll_a.h	159;"	d
INCHI_DECL	include/inchi_api.h	561;"	d
INCHI_DECL	include/inchi_api.h	566;"	d
INCHI_DECL	include/inchi_api.h	572;"	d
INCHI_DLLMAIN_TYPE	include/inchi/inchi_dll_main.h	51;"	d
INCHI_DLLMAIN_TYPE	include/inchi/inchi_dll_main.h	55;"	d
INCHI_FAIL_I2I	include/inchi/inchi_api.h	/^    INCHI_FAIL_I2I           =   4$/;"	e	enum:tagRetValCheckINCHI
INCHI_FAIL_I2I	include/inchi_api.h	/^    INCHI_FAIL_I2I           =   4$/;"	e	enum:tagRetValCheckINCHI
INCHI_FLAG_ACID_TAUT	include/inchi/ichi.h	115;"	d
INCHI_FLAG_HARD_ADD_REM_PROTON	include/inchi/ichi.h	122;"	d
INCHI_FLAG_RAC_STEREO	include/inchi/ichi.h	117;"	d
INCHI_FLAG_REL_STEREO	include/inchi/ichi.h	116;"	d
INCHI_FLAG_SB_IGN_ALL_ISO_UU	include/inchi/ichi.h	121;"	d
INCHI_FLAG_SB_IGN_ALL_UU	include/inchi/ichi.h	119;"	d
INCHI_FLAG_SC_IGN_ALL_ISO_UU	include/inchi/ichi.h	120;"	d
INCHI_FLAG_SC_IGN_ALL_UU	include/inchi/ichi.h	118;"	d
INCHI_FPTR	include/inchi/inpdef.h	/^typedef long INCHI_FPTR;$/;"	t
INCHI_HASH_CALC	include/inchi/ichidrp.h	/^INCHI_HASH_CALC;$/;"	t	typeref:enum:tagInChIHashCalc
INCHI_HEAPCHK	include/inchi/mode.h	920;"	d
INCHI_HEAPCHK	include/inchi/mode.h	943;"	d
INCHI_HEAPCHK	include/inchi/mode.h	944;"	d
INCHI_INP_EOF_ERR	include/inchi/ichierr.h	107;"	d
INCHI_INP_EOF_RET	include/inchi/ichierr.h	108;"	d
INCHI_INP_EOL	src/formats/libinchi/ichiread.c	233;"	d	file:
INCHI_INP_ERROR_ERR	include/inchi/ichierr.h	101;"	d
INCHI_INP_ERROR_RET	include/inchi/ichierr.h	102;"	d
INCHI_INP_FATAL_ERR	include/inchi/ichierr.h	104;"	d
INCHI_INP_FATAL_RET	include/inchi/ichierr.h	105;"	d
INCHI_INVALID_LAYOUT	include/inchi/inchi_api.h	/^    INCHI_INVALID_LAYOUT     =   3,$/;"	e	enum:tagRetValCheckINCHI
INCHI_INVALID_LAYOUT	include/inchi_api.h	/^    INCHI_INVALID_LAYOUT     =   3,$/;"	e	enum:tagRetValCheckINCHI
INCHI_INVALID_PREFIX	include/inchi/inchi_api.h	/^    INCHI_INVALID_PREFIX     =   1,$/;"	e	enum:tagRetValCheckINCHI
INCHI_INVALID_PREFIX	include/inchi_api.h	/^    INCHI_INVALID_PREFIX     =   1,$/;"	e	enum:tagRetValCheckINCHI
INCHI_INVALID_VERSION	include/inchi/inchi_api.h	/^    INCHI_INVALID_VERSION    =   2,$/;"	e	enum:tagRetValCheckINCHI
INCHI_INVALID_VERSION	include/inchi_api.h	/^    INCHI_INVALID_VERSION    =   2,$/;"	e	enum:tagRetValCheckINCHI
INCHI_IOSTREAM	include/inchi/mode.h	/^} INCHI_IOSTREAM;$/;"	t	typeref:struct:tagOutputStream
INCHI_IOSTREAM_FILE	include/inchi/mode.h	892;"	d
INCHI_IOSTREAM_NONE	include/inchi/mode.h	890;"	d
INCHI_IOSTREAM_STRING	include/inchi/mode.h	891;"	d
INCHI_LINE_ADD	include/inchi/aux2atom.h	47;"	d
INCHI_LINE_LEN	include/inchi/aux2atom.h	46;"	d
INCHI_MAX_NUM_ARG	include/inchi/inchi_dll_a.h	184;"	d
INCHI_MAX_NUM_ARG	src/formats/libinchi/inchi_dll.c	153;"	d	file:
INCHI_MODE	include/inchi/ichisize.h	/^typedef unsigned long INCHI_MODE;$/;"	t
INCHI_MODES	include/inchi/inchi_api.h	/^typedef unsigned long INCHI_MODES;        $/;"	t
INCHI_MODES	include/inchi_api.h	/^typedef unsigned long INCHI_MODES;        $/;"	t
INCHI_MSEC	src/formats/libinchi/ichicano.c	113;"	d	file:
INCHI_NAME	include/inchi/mode.h	236;"	d
INCHI_NAM_VER_DELIM	include/inchi/mode.h	241;"	d
INCHI_NUM	include/inchi/inchi_api.h	1015;"	d
INCHI_NUM	include/inchi/mode.h	438;"	d
INCHI_NUM	include/inchi_api.h	1016;"	d
INCHI_OPTION_PREFX	include/inchi/mode.h	244;"	d
INCHI_OPTION_PREFX	include/inchi/mode.h	247;"	d
INCHI_OUTPUT	include/inchi/mode.h	/^} INCHI_OUTPUT;$/;"	t	typeref:struct:tagOutputString
INCHI_OUT_EMBED_REC	include/inchi/ichi.h	127;"	d
INCHI_OUT_FIX_TRANSPOSITION_CHARGE_BUG	include/inchi/ichi.h	138;"	d
INCHI_OUT_NO_AUX_INFO	include/inchi/ichi.h	124;"	d
INCHI_OUT_ONLY_AUX_INFO	include/inchi/ichi.h	126;"	d
INCHI_OUT_PLAIN_TEXT	include/inchi/ichi.h	130;"	d
INCHI_OUT_PLAIN_TEXT_COMMENTS	include/inchi/ichi.h	131;"	d
INCHI_OUT_PRINT_OPTIONS	include/inchi/ichi.h	154;"	d
INCHI_OUT_SAVEOPT	include/inchi/ichi.h	142;"	d
INCHI_OUT_SDFILE_ATOMS_DT	include/inchi/ichi.h	135;"	d
INCHI_OUT_SDFILE_ONLY	include/inchi/ichi.h	128;"	d
INCHI_OUT_SDFILE_SPLIT	include/inchi/ichi.h	136;"	d
INCHI_OUT_SHORT_AUX_INFO	include/inchi/ichi.h	125;"	d
INCHI_OUT_STDINCHI	include/inchi/ichi.h	141;"	d
INCHI_OUT_TABBED_OUTPUT	include/inchi/ichi.h	134;"	d
INCHI_OUT_WINCHI_WINDOW	include/inchi/ichi.h	133;"	d
INCHI_OUT_XML	include/inchi/ichi.h	129;"	d
INCHI_OUT_XML_TEXT_COMMENTS	include/inchi/ichi.h	132;"	d
INCHI_PARITY_EVEN	include/inchi/inchi_api.h	/^   INCHI_PARITY_EVEN      = 2,  \/* 'e' *\/$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_EVEN	include/inchi_api.h	/^   INCHI_PARITY_EVEN      = 2,  \/* 'e' *\/$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_NONE	include/inchi/inchi_api.h	/^   INCHI_PARITY_NONE      = 0,$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_NONE	include/inchi_api.h	/^   INCHI_PARITY_NONE      = 0,$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_ODD	include/inchi/inchi_api.h	/^   INCHI_PARITY_ODD       = 1,  \/* 'o' *\/$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_ODD	include/inchi_api.h	/^   INCHI_PARITY_ODD       = 1,  \/* 'o' *\/$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_UNDEFINED	include/inchi/inchi_api.h	/^   INCHI_PARITY_UNDEFINED = 4   \/* '?' -- should not be used; however, see Note above *\/$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_UNDEFINED	include/inchi_api.h	/^   INCHI_PARITY_UNDEFINED = 4   \/* '?' -- should not be used; however, see Note above *\/$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_UNKNOWN	include/inchi/inchi_api.h	/^   INCHI_PARITY_UNKNOWN   = 3,  \/* 'u' *\/ \/* (see also readinch.c)$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PARITY_UNKNOWN	include/inchi_api.h	/^   INCHI_PARITY_UNKNOWN   = 3,  \/* 'u' *\/ \/* (see also readinch.c)$/;"	e	enum:tagINCHIStereoParity0D
INCHI_PATH_DELIM	include/inchi/mode.h	245;"	d
INCHI_PATH_DELIM	include/inchi/mode.h	248;"	d
INCHI_RADICAL_DOUBLET	include/inchi/inchi_api.h	/^   INCHI_RADICAL_DOUBLET = 2,$/;"	e	enum:tagINCHIRadical
INCHI_RADICAL_DOUBLET	include/inchi_api.h	/^   INCHI_RADICAL_DOUBLET = 2,$/;"	e	enum:tagINCHIRadical
INCHI_RADICAL_NONE	include/inchi/inchi_api.h	/^   INCHI_RADICAL_NONE    = 0,$/;"	e	enum:tagINCHIRadical
INCHI_RADICAL_NONE	include/inchi_api.h	/^   INCHI_RADICAL_NONE    = 0,$/;"	e	enum:tagINCHIRadical
INCHI_RADICAL_SINGLET	include/inchi/inchi_api.h	/^   INCHI_RADICAL_SINGLET = 1,$/;"	e	enum:tagINCHIRadical
INCHI_RADICAL_SINGLET	include/inchi_api.h	/^   INCHI_RADICAL_SINGLET = 1,$/;"	e	enum:tagINCHIRadical
INCHI_RADICAL_TRIPLET	include/inchi/inchi_api.h	/^   INCHI_RADICAL_TRIPLET = 3$/;"	e	enum:tagINCHIRadical
INCHI_RADICAL_TRIPLET	include/inchi_api.h	/^   INCHI_RADICAL_TRIPLET = 3$/;"	e	enum:tagINCHIRadical
INCHI_READ_ERR_MSG	src/formats/libinchi/ichiread.c	/^} INCHI_READ_ERR_MSG;$/;"	t	typeref:struct:tagInchiReadErrMsg	file:
INCHI_REC	include/inchi/mode.h	440;"	d
INCHI_SEGM_ACTION	include/inchi/strutil.h	/^} INCHI_SEGM_ACTION;$/;"	t	typeref:enum:tagINChISegmAction
INCHI_SEGM_BUFLEN	include/inchi/ichimain.h	44;"	d
INCHI_SEGM_EMPTY	include/inchi/strutil.h	/^    INCHI_SEGM_EMPTY = 2  \/* the value is used in str_LineEnd() *\/$/;"	e	enum:tagINChISegmAction
INCHI_SEGM_FILL	include/inchi/strutil.h	/^    INCHI_SEGM_FILL  = 1, \/* the value is used in str_LineEnd() *\/$/;"	e	enum:tagINChISegmAction
INCHI_SEGM_OMIT	include/inchi/strutil.h	/^    INCHI_SEGM_OMIT  = 0,$/;"	e	enum:tagINChISegmAction
INCHI_SORT	include/inchi/ichi.h	/^}INCHI_SORT;$/;"	t	typeref:struct:tagINChIforSort
INCHI_STATE	src/formats/libinchi/ichiread.c	/^}INCHI_STATE;$/;"	t	typeref:enum:tagInChI_STATE	file:
INCHI_STRING_PREFIX	include/inchi/inchi_api.h	617;"	d
INCHI_STRING_PREFIX	include/inchi_api.h	618;"	d
INCHI_StereoType_Allene	include/inchi/inchi_api.h	/^   INCHI_StereoType_Allene      = 3$/;"	e	enum:tagINCHIStereoType0D
INCHI_StereoType_Allene	include/inchi_api.h	/^   INCHI_StereoType_Allene      = 3$/;"	e	enum:tagINCHIStereoType0D
INCHI_StereoType_DoubleBond	include/inchi/inchi_api.h	/^   INCHI_StereoType_DoubleBond  = 1,$/;"	e	enum:tagINCHIStereoType0D
INCHI_StereoType_DoubleBond	include/inchi_api.h	/^   INCHI_StereoType_DoubleBond  = 1,$/;"	e	enum:tagINCHIStereoType0D
INCHI_StereoType_None	include/inchi/inchi_api.h	/^   INCHI_StereoType_None        = 0,$/;"	e	enum:tagINCHIStereoType0D
INCHI_StereoType_None	include/inchi_api.h	/^   INCHI_StereoType_None        = 0,$/;"	e	enum:tagINCHIStereoType0D
INCHI_StereoType_Tetrahedral	include/inchi/inchi_api.h	/^   INCHI_StereoType_Tetrahedral = 2,$/;"	e	enum:tagINCHIStereoType0D
INCHI_StereoType_Tetrahedral	include/inchi_api.h	/^   INCHI_StereoType_Tetrahedral = 2,$/;"	e	enum:tagINCHIStereoType0D
INCHI_TAG	src/formats/libinchi/ichiprt1.c	/^} INCHI_TAG;$/;"	t	typeref:struct:tagInchiTag	file:
INCHI_TOKEN	src/formats/libinchi/ichiread.c	235;"	d	file:
INCHI_T_NUM_MOVABLE	include/inchi/mode.h	623;"	d
INCHI_T_NUM_MOVABLE	include/inchi/mode.h	625;"	d
INCHI_US_CHAR_DEF	include/inchi/inchi_api.h	114;"	d
INCHI_US_CHAR_DEF	include/inchi/incomdef.h	128;"	d
INCHI_US_CHAR_DEF	include/inchi_api.h	115;"	d
INCHI_US_SHORT_DEF	include/inchi/ichicant.h	54;"	d
INCHI_US_SHORT_DEF	include/inchi/inchi_api.h	120;"	d
INCHI_US_SHORT_DEF	include/inchi/incomdef.h	134;"	d
INCHI_US_SHORT_DEF	include/inchi_api.h	121;"	d
INCHI_VALID_NON_STANDARD	include/inchi/inchi_api.h	/^    INCHI_VALID_NON_STANDARD =  -1,    $/;"	e	enum:tagRetValCheckINCHI
INCHI_VALID_NON_STANDARD	include/inchi_api.h	/^    INCHI_VALID_NON_STANDARD =  -1,    $/;"	e	enum:tagRetValCheckINCHI
INCHI_VALID_STANDARD	include/inchi/inchi_api.h	/^    INCHI_VALID_STANDARD     =   0,$/;"	e	enum:tagRetValCheckINCHI
INCHI_VALID_STANDARD	include/inchi_api.h	/^    INCHI_VALID_STANDARD     =   0,$/;"	e	enum:tagRetValCheckINCHI
INCHI_VERSION	include/inchi/mode.h	209;"	d
INCLUDE_NORMALIZATION_ENTRY_POINT	include/inchi/mode.h	362;"	d
INCL_NON_6AROM	include/inchi/mode.h	687;"	d
INCL_NON_SALT_CANDIDATATES	include/inchi/mode.h	412;"	d
INC_ADD_EDGE	src/formats/libinchi/ichirvr3.c	71;"	d	file:
INC_ADD_EDGE	src/formats/libinchi/ichirvr5.c	72;"	d	file:
INC_ADD_EDGE	src/formats/libinchi/ichirvr6.c	72;"	d	file:
INC_EDGE_LIST	src/formats/libinchi/ichirvr2.c	3745;"	d	file:
INC_EDGE_LIST	src/formats/libinchi/ichirvr2.c	3991;"	d	file:
INC_EDGE_LIST	src/formats/libinchi/ichirvr2.c	3999;"	d	file:
INC_EDGE_LIST	src/formats/libinchi/ichirvr2.c	4131;"	d	file:
INC_EDGE_LIST	src/formats/libinchi/ichirvr2.c	4138;"	d	file:
INC_EDGE_LIST	src/formats/libinchi/ichirvr2.c	4703;"	d	file:
INC_EDGE_LIST_DEFAULT	include/inchi/ichirvrs.h	57;"	d
INC_NUM_TCGROUPS	include/inchi/ichirvrs.h	189;"	d
INChI	include/inchi/ichi.h	/^} INChI;$/;"	t	typeref:struct:tagINChI
INChIToInchi_Atom	include/inchi/aux2atom.h	/^int INChIToInchi_Atom ( INCHI_IOSTREAM *inp_molfile, inchi_Stereo0D **stereo0D, int *num_stereo0D,$/;"	f
INChIToInchi_Atom	src/formats/libinchi/ichilnct.c	61;"	d	file:
INChIToInchi_Input	include/inchi/aux2atom.h	/^int INChIToInchi_Input( INCHI_IOSTREAM *inp_molfile, inchi_Input *orig_at_data, int bMergeAllInputStructures,$/;"	f
INChIToInchi_Input	src/formats/libinchi/ichilnct.c	/^int INChIToInchi_Input( INCHI_IOSTREAM *inp_molfile, inchi_Input *orig_at_data, int bMergeAllInputStructures,$/;"	f
INChIToInpAtom	include/inchi/aux2atom.h	/^int INChIToInpAtom (  INCHI_IOSTREAM *inp_molfile, MOL_COORD **szCoord,$/;"	f
INChITo_Atom	include/inchi/aux2atom.h	/^int INChITo_Atom(INCHI_IOSTREAM *inp_molfile, MOL_COORD **szCoord,$/;"	f
INChITo_Atom	include/inchi/aux2atom.h	178;"	d
INChITo_Atom	include/inchi/aux2atom.h	180;"	d
INChITo_Atom	include/inchi/aux2atom.h	202;"	d
INChITo_Atom	include/inchi/aux2atom.h	2360;"	d
INChI_Aux	include/inchi/ichi.h	/^} INChI_Aux;$/;"	t	typeref:struct:tagINChI_Aux
INChI_IsotopicAtom	include/inchi/ichi.h	/^} INChI_IsotopicAtom;$/;"	t	typeref:struct:tagINChI_IsotopicAtom
INChI_IsotopicTGroup	include/inchi/ichi.h	/^} INChI_IsotopicTGroup;$/;"	t	typeref:struct:tagINChI_IsotopicTGroup
INChI_SegmentAction	src/formats/libinchi/ichimake.c	/^int INChI_SegmentAction( char cDifSegs )$/;"	f
INChI_Stereo	include/inchi/ichi.h	/^} INChI_Stereo;$/;"	t	typeref:struct:tagINChI_Stereo
INFINITY	src/formats/libinchi/ichican2.c	66;"	d	file:
INFINITY	src/formats/mdffformat.cpp	25;"	d	file:
INF_ATOM_DATA	include/inchi/inpdef.h	/^} INF_ATOM_DATA;$/;"	t	typeref:struct:tagInfoAtomData
INF_STEREO	include/inchi/inpdef.h	205;"	d
INF_STEREO_ABS	include/inchi/inpdef.h	200;"	d
INF_STEREO_ABS_REL_RAC	include/inchi/inpdef.h	206;"	d
INF_STEREO_INV	include/inchi/inpdef.h	204;"	d
INF_STEREO_NORM	include/inchi/inpdef.h	203;"	d
INF_STEREO_NORM_INV	include/inchi/inpdef.h	207;"	d
INF_STEREO_RAC	include/inchi/inpdef.h	202;"	d
INF_STEREO_REL	include/inchi/inpdef.h	201;"	d
INIT_LEN_NUM_H	src/formats/libinchi/ichiprt2.c	566;"	d	file:
INIT_LEN_NUM_H	src/formats/libinchi/ichiprt2.c	752;"	d	file:
INIT_MAX_NUM_H	src/formats/libinchi/ichiprt2.c	565;"	d	file:
INIT_MAX_NUM_H	src/formats/libinchi/ichiprt2.c	751;"	d	file:
INIT_METAL_BOND_FLOW	include/inchi/ichirvrs.h	128;"	d
INIT_METAL_BOND_FLOW	include/inchi/ichirvrs.h	131;"	d
INIT_METAL_BOND_ZERO	include/inchi/ichirvrs.h	127;"	d
INIT_METAL_BOND_ZERO	include/inchi/ichirvrs.h	130;"	d
INIT_MIN_NUM_H	src/formats/libinchi/ichiprt2.c	564;"	d	file:
INIT_MIN_NUM_H	src/formats/libinchi/ichiprt2.c	750;"	d	file:
INI_NUM_TCGROUPS	include/inchi/ichirvrs.h	188;"	d
INOPTIONS	include/openbabel/obconversion.h	/^      enum Option_type { INOPTIONS, OUTOPTIONS, GENOPTIONS, ALL };$/;"	e	enum:OpenBabel::OBConversion::Option_type
INPUT_CHUNK	include/libxml/parserInternals.h	47;"	d
INPUT_CMLFILE	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_FILE	include/inchi/aux2atom.h	173;"	d
INPUT_FILE	include/inchi/aux2atom.h	2362;"	d
INPUT_INCHI	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_INCHI_PLAIN	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_INCHI_XML	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_MAX	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_MOLFILE	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_NONE	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_PARMS	include/inchi/ichidrp.h	/^} INPUT_PARMS;$/;"	t	typeref:struct:tagInputParms
INPUT_SDFILE	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	e	enum:tagInputType
INPUT_STEREO_DBLE_EITHER	include/inchi/incomdef.h	82;"	d
INPUT_STEREO_SNGL_DOWN	include/inchi/incomdef.h	81;"	d
INPUT_STEREO_SNGL_EITHER	include/inchi/incomdef.h	80;"	d
INPUT_STEREO_SNGL_UP	include/inchi/incomdef.h	79;"	d
INPUT_TYPE	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	t	typeref:enum:tagInputType
INP_ATOM_DATA	include/inchi/inpdef.h	/^} INP_ATOM_DATA;$/;"	t	typeref:struct:tagInputAtomData
INP_ATOM_DATA2	include/inchi/inpdef.h	/^typedef INP_ATOM_DATA INP_ATOM_DATA2[TAUT_NUM];$/;"	t
INT32	include/chemdrawcdx.h	/^typedef int INT32;$/;"	t
INTENSITIES_TABLE_PATTERN	src/formats/nwchemformat.cpp	/^static const char* INTENSITIES_TABLE_PATTERN = "Projected Infra Red Intensities";$/;"	m	namespace:OpenBabel	file:
INTGRL	src/formats/daltonformat.cpp	/^    enum BasisFormat_t {BASIS, ATOMBASIS, INTGRL};$/;"	e	enum:OpenBabel::DALTONInputFormat::BasisFormat_t	file:
IN_NEIGH_LIST	include/inchi/aux2atom.h	187;"	d
IN_NEIGH_LIST	include/inchi/aux2atom.h	200;"	d
IN_NEIGH_LIST	include/inchi/aux2atom.h	2348;"	d
IN_NEIGH_LIST	include/inchi/aux2atom.h	2358;"	d
ION	include/openbabel/residue.h	/^      ION          = 3,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
ION_ATOM_TYPE	src/formats/libinchi/strutil.c	/^ } ION_ATOM_TYPE;$/;"	t	typeref:enum:tagIonAtomType	file:
ISOLATED_ATOM	include/inchi/aux2atom.h	191;"	d
ISOLATED_ATOM	include/inchi/aux2atom.h	206;"	d
ISOLATED_ATOM	include/inchi/aux2atom.h	2365;"	d
ISOTOPIC_SHIFT_FLAG	include/inchi/inchi_api.h	107;"	d
ISOTOPIC_SHIFT_FLAG	include/inchi_api.h	108;"	d
ISOTOPIC_SHIFT_MAX	include/inchi/inchi_api.h	109;"	d
ISOTOPIC_SHIFT_MAX	include/inchi_api.h	110;"	d
IST_END	src/formats/libinchi/ichiread.c	/^    IST_END                     =    -1$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H,                   \/* 18 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_CHARGE	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_CHARGE,            \/* 19 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_FORMULA	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_FORMULA,           \/* 17 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_ATOMS	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_ATOMS,         \/* 26 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_LAYER	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_LAYER,         \/* 27 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_LAYER_FORK,    \/* 25 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_PERMUTATION	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_PERMUTATION,   \/* 32 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_SP2	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_SP2,           \/* 28 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_SP3	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_SP3,           \/* 29 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_SP3_M	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_SP3_M,         \/* 30 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_ISO_SP3_S	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_ISO_SP3_S,         \/* 31 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_LAYER_FORK,        \/* 16 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_PERMUTATION	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_PERMUTATION,       \/* 24 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_SP2	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_SP2,               \/* 20 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_SP3	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_SP3,               \/* 21 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_SP3_M	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_SP3_M,             \/* 22 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_FIXED_H_SP3_S	src/formats/libinchi/ichiread.c	/^    IST_FIXED_H_SP3_S,             \/* 23 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_HAPPENED_IN_RECMET	src/formats/libinchi/ichiread.c	296;"	d	file:
IST_MATERIAL_BALANCE_ERROR	src/formats/libinchi/ichiread.c	/^    IST_MATERIAL_BALANCE_ERROR,    \/* 35 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H,                  \/* 2 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_CHARGE	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_CHARGE,           \/* 3 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_CONNECTIONS	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_CONNECTIONS,      \/* 1 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_FORMULA	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_FORMULA,          \/* 0 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_ISO_ATOMS	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_ISO_ATOMS,        \/* 10 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_ISO_EXCH_H	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_ISO_EXCH_H,       \/* 11 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_ISO_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_ISO_LAYER_FORK,   \/* 9 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_ISO_SP2	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_ISO_SP2,          \/* 12 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_ISO_SP3	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_ISO_SP3,          \/* 13 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_ISO_SP3_M	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_ISO_SP3_M,        \/* 14 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_ISO_SP3_S	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_ISO_SP3_S,        \/* 15 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_PROTONS	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_PROTONS,          \/* 4 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_SP2	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_SP2,              \/* 5 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_SP3	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_SP3,              \/* 6 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_SP3_M	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_SP3_M,            \/* 7 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_MOBILE_H_SP3_S	src/formats/libinchi/ichiread.c	/^    IST_MOBILE_H_SP3_S,            \/* 8 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_RECONNECTED_FORMULA	src/formats/libinchi/ichiread.c	/^    IST_RECONNECTED_FORMULA,       \/* 34 *\/$/;"	e	enum:tagInChI_STATE	file:
IST_RECONNECTED_LAYER_FORK	src/formats/libinchi/ichiread.c	/^    IST_RECONNECTED_LAYER_FORK,    \/* 33 *\/$/;"	e	enum:tagInChI_STATE	file:
IS_ACIDIC	include/openbabel/residue.h	223;"	d
IS_ACYCLIC	include/openbabel/residue.h	224;"	d
IS_ALIPHATIC	include/openbabel/residue.h	228;"	d
IS_ALLENE_CHAIN	include/inchi/extr_ct.h	223;"	d
IS_ALT_OR_DBLBOND	src/formats/libinchi/ichiqueu.c	153;"	d	file:
IS_AROMATIC	include/openbabel/residue.h	230;"	d
IS_ASCII_DIGIT	include/libxml/parserInternals.h	218;"	d
IS_ASCII_LETTER	include/libxml/parserInternals.h	208;"	d
IS_BASECHAR	include/libxml/parserInternals.h	111;"	d
IS_BASIC	include/openbabel/residue.h	231;"	d
IS_BLANK	include/libxml/parserInternals.h	93;"	d
IS_BLANK_CH	include/libxml/parserInternals.h	101;"	d
IS_BNS_ERROR	include/inchi/ichierr.h	98;"	d
IS_BNS_VT_ATOM	include/inchi/ichi_bns.h	109;"	d
IS_BNS_VT_CHRG_STRUCT	include/inchi/ichi_bns.h	108;"	d
IS_BNS_VT_CM_GR	include/inchi/ichi_bns.h	105;"	d
IS_BNS_VT_C_GR	include/inchi/ichi_bns.h	104;"	d
IS_BNS_VT_C_OR_CSUPER_GR	include/inchi/ichi_bns.h	103;"	d
IS_BNS_VT_M_GR	include/inchi/ichi_bns.h	106;"	d
IS_BNS_VT_YVCONNECTOR	include/inchi/ichi_bns.h	107;"	d
IS_BURIED	include/openbabel/residue.h	232;"	d
IS_BYTE_CHAR	include/libxml/parserInternals.h	63;"	d
IS_C	src/formats/libinchi/ichirvr2.c	5624;"	d	file:
IS_C	src/formats/libinchi/ichirvr2.c	6201;"	d	file:
IS_CHAR	include/libxml/parserInternals.h	75;"	d
IS_CHARGED	include/openbabel/residue.h	234;"	d
IS_CHAR_CH	include/libxml/parserInternals.h	83;"	d
IS_COMBINING	include/libxml/parserInternals.h	139;"	d
IS_COMBINING_CH	include/libxml/parserInternals.h	147;"	d
IS_CYCLIC	include/openbabel/residue.h	236;"	d
IS_DEUTERIUM	src/formats/libinchi/strutil.c	3814;"	d	file:
IS_DIGIT	include/libxml/parserInternals.h	121;"	d
IS_DIGIT_CH	include/libxml/parserInternals.h	129;"	d
IS_EXTENDER	include/libxml/parserInternals.h	160;"	d
IS_EXTENDER_CH	include/libxml/parserInternals.h	168;"	d
IS_FORBIDDEN	src/formats/libinchi/ichi_bns.c	68;"	d	file:
IS_FORBIDDEN	src/formats/libinchi/ichi_bns.c	70;"	d	file:
IS_HYDROPHOBIC	include/openbabel/residue.h	238;"	d
IS_IDEOGRAPHIC	include/libxml/parserInternals.h	179;"	d
IS_LARGE	include/openbabel/residue.h	240;"	d
IS_LETTER	include/libxml/parserInternals.h	190;"	d
IS_LETTER_CH	include/libxml/parserInternals.h	199;"	d
IS_MEDIUM	include/openbabel/residue.h	243;"	d
IS_METAL	include/inchi/incomdef.h	117;"	d
IS_METAL_ATOM	include/inchi/aux2atom.h	193;"	d
IS_METAL_ATOM	include/inchi/aux2atom.h	208;"	d
IS_METAL_ATOM	include/inchi/aux2atom.h	2367;"	d
IS_NEGATIVE	include/openbabel/residue.h	245;"	d
IS_NEUTRAL	include/openbabel/residue.h	246;"	d
IS_POLAR	include/openbabel/residue.h	250;"	d
IS_POSITIVE	include/openbabel/residue.h	253;"	d
IS_PUBIDCHAR	include/libxml/parserInternals.h	229;"	d
IS_PUBIDCHAR_CH	include/libxml/parserInternals.h	237;"	d
IS_SMALL	include/openbabel/residue.h	254;"	d
IS_SURFACE	include/openbabel/residue.h	255;"	d
IS_TRITIUM	src/formats/libinchi/strutil.c	3815;"	d	file:
ITEM_DELIMETER	include/inchi/ichimake.h	45;"	d
IUPAC_DNA_A	src/formats/fastaformat.cpp	/^      IUPAC_DNA_A, \/\/ A DA  Adenine A -> T$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_B	src/formats/fastaformat.cpp	/^      IUPAC_DNA_B, \/\/ B GTC (G T C) B -> V$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_C	src/formats/fastaformat.cpp	/^      IUPAC_DNA_C, \/\/ C DC  Cytosine C -> G$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_D	src/formats/fastaformat.cpp	/^      IUPAC_DNA_D, \/\/ D GAT (G A T) D -> H$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_End	src/formats/fastaformat.cpp	/^      IUPAC_DNA_End = 1,$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_G	src/formats/fastaformat.cpp	/^      IUPAC_DNA_G, \/\/ G DG  Guanine G -> C$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_H	src/formats/fastaformat.cpp	/^      IUPAC_DNA_H, \/\/ H ACT (A C T) H -> D$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_K	src/formats/fastaformat.cpp	/^      IUPAC_DNA_K, \/\/ K GTX Keto (G or T) K -> M$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_M	src/formats/fastaformat.cpp	/^      IUPAC_DNA_M, \/\/ M ACX Amino (A or C) M -> K$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_N	src/formats/fastaformat.cpp	/^      IUPAC_DNA_N, \/\/ N XNA Unknown Nucleic Acid N -> N$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_R	src/formats/fastaformat.cpp	/^      IUPAC_DNA_R, \/\/ R GAX Purine (G or A) R -> Y$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_S	src/formats/fastaformat.cpp	/^      IUPAC_DNA_S, \/\/ S GCX Strong (G or C) S -> W$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_Start	src/formats/fastaformat.cpp	/^      IUPAC_DNA_Start = 0,$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_T	src/formats/fastaformat.cpp	/^      IUPAC_DNA_T, \/\/ T DT  Thymine T -> A$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_V	src/formats/fastaformat.cpp	/^      IUPAC_DNA_V, \/\/ V GCA (G C A) V -> B$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_W	src/formats/fastaformat.cpp	/^      IUPAC_DNA_W, \/\/ W ATX Weak (A or T) W -> S$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_Y	src/formats/fastaformat.cpp	/^      IUPAC_DNA_Y, \/\/ Y TCX Pyrimidine (T or C) Y -> R$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_DNA_code	src/formats/fastaformat.cpp	/^  enum IUPAC_DNA_code$/;"	g	namespace:OpenBabel	file:
IUPAC_DNA_codes	src/formats/fastaformat.cpp	/^  const char * IUPAC_DNA_codes = "01NACGTRYKMSWBDHV";$/;"	m	namespace:OpenBabel	file:
IUPAC_DNA_max	src/formats/fastaformat.cpp	/^      IUPAC_DNA_max$/;"	e	enum:OpenBabel::IUPAC_DNA_code	file:
IUPAC_End	src/formats/fastaformat.cpp	210;"	d	file:
IUPAC_Protein_A	src/formats/fastaformat.cpp	/^      IUPAC_Protein_A, \/\/ A ALA Alanine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_B	src/formats/fastaformat.cpp	/^      IUPAC_Protein_B, \/\/ B ASX Asparagine or Aspartic acid i.e. N or D$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_C	src/formats/fastaformat.cpp	/^      IUPAC_Protein_C, \/\/ C CYS Cysteine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_D	src/formats/fastaformat.cpp	/^      IUPAC_Protein_D, \/\/ D ASP Aspartic acid$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_E	src/formats/fastaformat.cpp	/^      IUPAC_Protein_E, \/\/ E GLU Glutamic acid$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_End	src/formats/fastaformat.cpp	/^      IUPAC_Protein_End = 1,$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_F	src/formats/fastaformat.cpp	/^      IUPAC_Protein_F, \/\/ F PHE Phenylalanine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_G	src/formats/fastaformat.cpp	/^      IUPAC_Protein_G, \/\/ G GLY Glycine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_H	src/formats/fastaformat.cpp	/^      IUPAC_Protein_H, \/\/ H HIS Histidine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_I	src/formats/fastaformat.cpp	/^      IUPAC_Protein_I, \/\/ I ILE Isoleucine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_J	src/formats/fastaformat.cpp	/^      IUPAC_Protein_J, \/\/ J XLE Leucine or Isoleucine i.e. L or I$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_K	src/formats/fastaformat.cpp	/^      IUPAC_Protein_K, \/\/ K LYS Lysine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_L	src/formats/fastaformat.cpp	/^      IUPAC_Protein_L, \/\/ L LEU Leucine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_M	src/formats/fastaformat.cpp	/^      IUPAC_Protein_M, \/\/ M MET Methionine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_N	src/formats/fastaformat.cpp	/^      IUPAC_Protein_N, \/\/ N ASN Asparagine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_O	src/formats/fastaformat.cpp	/^      IUPAC_Protein_O, \/\/ O PYL Pyrrolysine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_P	src/formats/fastaformat.cpp	/^      IUPAC_Protein_P, \/\/ P PRO Proline$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_Q	src/formats/fastaformat.cpp	/^      IUPAC_Protein_Q, \/\/ Q GLN Glutamine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_R	src/formats/fastaformat.cpp	/^      IUPAC_Protein_R, \/\/ R ARG Arginine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_S	src/formats/fastaformat.cpp	/^      IUPAC_Protein_S, \/\/ S SER Serine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_Start	src/formats/fastaformat.cpp	/^      IUPAC_Protein_Start = 0,$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_T	src/formats/fastaformat.cpp	/^      IUPAC_Protein_T, \/\/ T THR Threonine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_U	src/formats/fastaformat.cpp	/^      IUPAC_Protein_U, \/\/ U SEC Selenocysteine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_V	src/formats/fastaformat.cpp	/^      IUPAC_Protein_V, \/\/ V VAL Valine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_W	src/formats/fastaformat.cpp	/^      IUPAC_Protein_W, \/\/ W TRP Tryptophan$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_X	src/formats/fastaformat.cpp	/^      IUPAC_Protein_X, \/\/ X XAA any (unknown) amino acid$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_Y	src/formats/fastaformat.cpp	/^      IUPAC_Protein_Y, \/\/ Y TYR Tyrosine$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_Z	src/formats/fastaformat.cpp	/^      IUPAC_Protein_Z, \/\/ Z GLX Glutamine or Glutamic acid i.e. Q or E$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_Protein_code	src/formats/fastaformat.cpp	/^  enum IUPAC_Protein_code$/;"	g	namespace:OpenBabel	file:
IUPAC_Protein_codes	src/formats/fastaformat.cpp	/^  const char * IUPAC_Protein_codes = "01XABCDEFGHIJKLMNOPQRSTUVWYZ";$/;"	m	namespace:OpenBabel	file:
IUPAC_Protein_max	src/formats/fastaformat.cpp	/^      IUPAC_Protein_max$/;"	e	enum:OpenBabel::IUPAC_Protein_code	file:
IUPAC_RNA_A	src/formats/fastaformat.cpp	/^      IUPAC_RNA_A, \/\/ A A   Adenine A -> U$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_B	src/formats/fastaformat.cpp	/^      IUPAC_RNA_B, \/\/ B GUC (G U C) B -> V$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_C	src/formats/fastaformat.cpp	/^      IUPAC_RNA_C, \/\/ C C   Cytosine C -> G$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_D	src/formats/fastaformat.cpp	/^      IUPAC_RNA_D, \/\/ D GAU (G A U) D -> H$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_End	src/formats/fastaformat.cpp	/^      IUPAC_RNA_End = 1,$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_G	src/formats/fastaformat.cpp	/^      IUPAC_RNA_G, \/\/ G G   Guanine G -> C$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_H	src/formats/fastaformat.cpp	/^      IUPAC_RNA_H, \/\/ H ACU (A C U) H -> D$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_K	src/formats/fastaformat.cpp	/^      IUPAC_RNA_K, \/\/ K GUX Keto (G or U) K -> M$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_M	src/formats/fastaformat.cpp	/^      IUPAC_RNA_M, \/\/ M ACX Amino (A or C) M -> K$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_N	src/formats/fastaformat.cpp	/^      IUPAC_RNA_N, \/\/ N XNA Unknown Nucleic Acid N -> N$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_R	src/formats/fastaformat.cpp	/^      IUPAC_RNA_R, \/\/ R GAX Purine (G or A) R -> Y$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_S	src/formats/fastaformat.cpp	/^      IUPAC_RNA_S, \/\/ S GCX Strong (G or C) S -> W$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_Start	src/formats/fastaformat.cpp	/^      IUPAC_RNA_Start = 0,$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_U	src/formats/fastaformat.cpp	/^      IUPAC_RNA_U, \/\/ U U   Uridine U -> A$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_V	src/formats/fastaformat.cpp	/^      IUPAC_RNA_V, \/\/ V GCA (G C A) V -> B$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_W	src/formats/fastaformat.cpp	/^      IUPAC_RNA_W, \/\/ W AUX Weak (A or U) W -> S$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_Y	src/formats/fastaformat.cpp	/^      IUPAC_RNA_Y, \/\/ Y UCX Pyrimidine (U or C) Y -> R$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_RNA_code	src/formats/fastaformat.cpp	/^  enum IUPAC_RNA_code$/;"	g	namespace:OpenBabel	file:
IUPAC_RNA_codes	src/formats/fastaformat.cpp	/^  const char * IUPAC_RNA_codes = "01NACGURYKMSWBDHV";$/;"	m	namespace:OpenBabel	file:
IUPAC_RNA_max	src/formats/fastaformat.cpp	/^      IUPAC_RNA_max$/;"	e	enum:OpenBabel::IUPAC_RNA_code	file:
IUPAC_Start	src/formats/fastaformat.cpp	209;"	d	file:
IUPAC_Unknown	src/formats/fastaformat.cpp	211;"	d	file:
IUPACcode	src/formats/fastaformat.cpp	/^    char IUPACcode;$/;"	m	struct:OpenBabel::ResidueRecord	file:
IdentLbl	src/formats/libinchi/ichiprt1.c	/^const INCHI_TAG IdentLbl[] =$/;"	v
IdentifyElement	src/chains.cpp	/^  int OBChainsParser::IdentifyElement(char *ptr)$/;"	f	class:OpenBabel::OBChainsParser
IdentifyEvalAtoms	include/openbabel/rotor.h	/^    bool   IdentifyEvalAtoms(OBMol &mol) { return SetEvalAtoms(mol); }$/;"	f	class:OpenBabel::OBRotorList
IdentifyPointGroup	src/pointgroup.cpp	/^  const char* OBPointGroup::IdentifyPointGroup()$/;"	f	class:OpenBabel::OBPointGroup
IdentifyPointGroup	src/pointgroup.cpp	/^  const char* OBPointGroup::IdentifyPointGroup(double tolerance)$/;"	f	class:OpenBabel::OBPointGroup
IdentifyPointGroupSymbol	src/pointgroup.cpp	/^  OBPointGroup::Symbol OBPointGroup::IdentifyPointGroupSymbol(double tolerance)$/;"	f	class:OpenBabel::OBPointGroup
IdentifyResidue	src/chains.cpp	/^  int OBChainsParser::IdentifyResidue(void *tree, OBMol &mol, unsigned int seed,$/;"	f	class:OpenBabel::OBChainsParser
IgnoreCalculation	src/forcefield.cpp	/^  bool OBForceField::IgnoreCalculation(int a, int b)$/;"	f	class:OpenBabel::OBForceField
IgnoreCalculation	src/forcefield.cpp	/^  bool OBForceField::IgnoreCalculation(int a, int b, int c)$/;"	f	class:OpenBabel::OBForceField
IgnoreCalculation	src/forcefield.cpp	/^  bool OBForceField::IgnoreCalculation(int a, int b, int c, int d)$/;"	f	class:OpenBabel::OBForceField
IgnoreObject	src/formats/chemdrawcdx.cpp	/^  void IgnoreObject()          { ReadNext(true, GetDepth()-1); }$/;"	f	class:OpenBabel::CDXReader
IgnoreSymmetryRemoval	include/openbabel/rotor.h	/^    void IgnoreSymmetryRemoval()    { _removesym = false;}$/;"	f	class:OpenBabel::OBRotorList
Ih	include/openbabel/pointgroup.h	/^        I, Ih, \/\/ 55, 56$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
ImplicitHydrogenCount	src/atom.cpp	/^  unsigned int OBAtom::ImplicitHydrogenCount() const$/;"	f	class:OpenBabel::OBAtom
ImplicitRef	include/openbabel/stereo/stereo.h	/^      ImplicitRef = UINT_MAX - 1  \/\/!< Implicit Ref (i.e. hydrogen, N lone pair, ...).$/;"	e	enum:OpenBabel::OBStereo::__anon65
ImplicitRefToStereo	src/stereo/perception.cpp	/^  void ImplicitRefToStereo(OBMol& mol, OBStereo::Ref centerId, OBStereo::Ref newId) {$/;"	f	namespace:OpenBabel
ImproperAxes	src/pointgroup.cpp	/^    SYMMETRY_ELEMENT **    ImproperAxes          ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
ImproperAxesCount	src/pointgroup.cpp	/^    int                    ImproperAxesCount     ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
ImproperAxesCounts	src/pointgroup.cpp	/^    int *                  ImproperAxesCounts    ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
In	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
InArgs	include/openbabel/json/json.h	/^      typedef std::vector<const PathArgument *> InArgs;$/;"	t	class:Json::Path
InChI2Atom	src/formats/libinchi/ichirvr7.c	/^int InChI2Atom( ICHICONST INPUT_PARMS *ip,  STRUCT_DATA *sd, const char *szCurHdr, long num_inp,$/;"	f
InChICompareFormat	include/openbabel/inchiformat.h	/^  InChICompareFormat()$/;"	f	class:OpenBabel::InChICompareFormat
InChICompareFormat	include/openbabel/inchiformat.h	/^class InChICompareFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel
InChIErrorMessage	src/formats/inchiformat.cpp	/^string InChIFormat::InChIErrorMessage(const char ch)$/;"	f	class:OpenBabel::InChIFormat
InChIFilter	src/descriptors/inchidescriptor.cpp	/^  InChIFilter(const char* ID, bool useKey=false) : OBDescriptor(ID), bKey(useKey) {};$/;"	f	class:OpenBabel::InChIFilter
InChIFilter	src/descriptors/inchidescriptor.cpp	/^class InChIFilter : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
InChIFormat	include/openbabel/inchiformat.h	/^  InChIFormat()$/;"	f	class:OpenBabel::InChIFormat
InChIFormat	include/openbabel/inchiformat.h	/^class InChIFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel
InChIKeyFormat	include/openbabel/inchiformat.h	/^  InChIKeyFormat()$/;"	f	class:OpenBabel::InChIKeyFormat
InChIKeyFormat	include/openbabel/inchiformat.h	/^class InChIKeyFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel
InChILine2Data	src/formats/libinchi/ichiread.c	/^int InChILine2Data(INCHI_IOSTREAM *pInp, SEGM_LINE *pLine, $/;"	f
InFilename	include/openbabel/obconversion.h	/^      std::string	  InFilename, OutFilename; \/\/OutFileName added v2.4.0$/;"	m	class:OpenBabel::OBConversion
InSizer	src/GUI/OBGUI.h	/^  wxBoxSizer *InSizer;$/;"	m	class:OBGUIFrame
InchiClock	src/formats/libinchi/ichicano.c	/^static clock_t InchiClock(void)$/;"	f	file:
InchiInpData	include/inchi/inchi_api.h	/^} InchiInpData;$/;"	t	typeref:struct:tagInchiInpData
InchiInpData	include/inchi_api.h	/^} InchiInpData;$/;"	t	typeref:struct:tagInchiInpData
InchiLess	include/openbabel/inchiformat.h	/^  struct InchiLess$/;"	s	class:OpenBabel::InChIFormat
InchiTimeAddMsec	include/inchi/ichitime.h	82;"	d
InchiTimeAddMsec	src/formats/libinchi/ichicano.c	/^void InchiTimeAddMsec( inchiTime *TickEnd, unsigned long nNumMsec )$/;"	f
InchiTimeElapsed	include/inchi/ichitime.h	84;"	d
InchiTimeElapsed	src/formats/libinchi/ichicano.c	/^long InchiTimeElapsed( inchiTime *TickStart )$/;"	f
InchiTimeGet	include/inchi/ichitime.h	80;"	d
InchiTimeGet	src/formats/libinchi/ichicano.c	/^void InchiTimeGet( inchiTime *TickEnd )$/;"	f
InchiTimeMsecDiff	include/inchi/ichitime.h	81;"	d
InchiTimeMsecDiff	src/formats/libinchi/ichicano.c	/^long InchiTimeMsecDiff( inchiTime *TickEnd, inchiTime *TickStart )$/;"	f
IncrZeroBonds	src/formats/libinchi/ichirvr1.c	/^void IncrZeroBonds(inp_ATOM *at, int num_at, int iComponent )$/;"	f
IncrZeroBondsAndClearEndpts	src/formats/libinchi/ichirvr1.c	/^void IncrZeroBondsAndClearEndpts(inp_ATOM *at, int num_at, int iComponent )$/;"	f
IncrementImplicitValence	include/openbabel/atom.h	/^      void IncrementImplicitValence()     { _impval++; }$/;"	f	class:OpenBabel::OBAtom
IncrementMod	include/openbabel/mol.h	/^    void IncrementMod()    {      _mod++;          }$/;"	f	class:OpenBabel::OBMol
IncrementZeroOrderBondsToHeteroat	src/formats/libinchi/ichirvr2.c	/^int IncrementZeroOrderBondsToHeteroat( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
IncrementedFileName	src/obconversion.cpp	/^  string OBConversion::IncrementedFileName(string& BaseName, const int Count)$/;"	f	class:OpenBabel::OBConversion
Index	include/openbabel/obconversion.h	/^      int		  Index;$/;"	m	class:OpenBabel::OBConversion
IndexToCoords	src/grid.cpp	/^  void OBFloatGrid::IndexToCoords(int idx, double &x, double &y, double &z)$/;"	f	class:OpenBabel::OBFloatGrid
Init	include/openbabel/grid.h	/^    virtual void   Init(OBMol &, OBMol &, std::string &, double){}$/;"	f	class:OpenBabel::OBScoreGrid
Init	include/openbabel/obutil.h	/^    void Init(double max,double incr)$/;"	f	class:OpenBabel::OBSqrtTbl
Init	include/openbabel/plugin.h	/^  virtual void Init(){};$/;"	f	class:OpenBabel::OBPlugin
Init	include/openbabel/rotor.h	/^    void Init(std::string &fname)$/;"	f	class:OpenBabel::OBRotorList
Init	src/data.cpp	/^  void OBGlobalDataBase::Init()$/;"	f	class:OpenBabel::OBGlobalDataBase
Init	src/formats/chemkinformat.cpp	/^void ChemKinFormat::Init()$/;"	f	class:OpenBabel::ChemKinFormat
Init	src/formats/smilesformat.cpp	/^  void OBMol2Cansmi::Init(bool canonical, OBConversion* pconv)$/;"	f	class:OpenBabel::OBMol2Cansmi
Init	src/grid.cpp	/^  void OBFloatGrid::Init(OBMol &box, double spacing, double pad)$/;"	f	class:OpenBabel::OBFloatGrid
Init	src/grid.cpp	/^  void OBGrid::Init(OBMol &box)$/;"	f	class:OpenBabel::OBGrid
Init	src/parsmart.cpp	/^  bool OBSmartsPattern::Init(const char *buffer)$/;"	f	class:OpenBabel::OBSmartsPattern
Init	src/parsmart.cpp	/^  bool OBSmartsPattern::Init(const std::string &s)$/;"	f	class:OpenBabel::OBSmartsPattern
Init	src/phmodel.cpp	/^  bool OBChemTsfm::Init(string &bgn,string &end)$/;"	f	class:OpenBabel::OBChemTsfm
InitMaps	src/stereo/facade.cpp	/^  void OBStereoFacade::InitMaps()$/;"	f	class:OpenBabel::OBStereoFacade
Inited	src/math/spacegroup.cpp	/^    bool Inited() { return _init;}$/;"	f	class:OpenBabel::SpaceGroups
InitialPartialCharges	src/molchrg.cpp	/^  void OBGastChrg::InitialPartialCharges(OBMol &mol)$/;"	f	class:OpenBabel::OBGastChrg
Initialize	src/ops/optransform.cpp	/^bool OpTransform::Initialize()$/;"	f	class:OpenBabel::OpTransform
Inject	src/grid.cpp	/^  double OBFloatGrid::Inject(double x, double y, double z)$/;"	f	class:OpenBabel::OBFloatGrid
InpAtom0DToInchiAtom	src/formats/libinchi/inchi_dll.c	/^int InpAtom0DToInchiAtom( inp_ATOM *at, int num_atoms, inchi_OutputStruct *outStruct )$/;"	f
InpCurAtData	include/inchi/inchi_dll_a.h	/^    INP_ATOM_DATA   *InpCurAtData[INCHI_NUM];$/;"	m	struct:tagINCHIGEN_CONTROL
InpInChI	include/inchi/ichirvrs.h	/^} InpInChI;$/;"	t	typeref:struct:tagInputInChI
InpNormAtData	include/inchi/inchi_dll_a.h	/^    INP_ATOM_DATA   *InpNormAtData[INCHI_NUM];$/;"	m	struct:tagINCHIGEN_CONTROL
InpNormTautData	include/inchi/inchi_dll_a.h	/^    INP_ATOM_DATA   *InpNormTautData[INCHI_NUM];$/;"	m	struct:tagINCHIGEN_CONTROL
InpParms	include/inchi/inchi_dll_a.h	/^    INPUT_PARMS     InpParms;$/;"	m	struct:tagINCHIGEN_CONTROL
InputFilterString	src/GUI/OBGUI.h	/^  wxString InputFilterString, OutputFilterString;$/;"	m	class:OBGUIFrame
InsertAtom	src/mol.cpp	/^  bool OBMol::InsertAtom(OBAtom &atom)$/;"	f	class:OpenBabel::OBMol
InsertAtom	src/residue.cpp	/^  void OBResidue::InsertAtom(OBAtom *atom)$/;"	f	class:OpenBabel::OBResidue
InsertBond	include/openbabel/atom.h	/^      void InsertBond(OBBondIterator &i, OBBond *bond)$/;"	f	class:OpenBabel::OBAtom
InsertSquarePlanarRef	src/formats/smilesformat.cpp	/^  void OBSmilesParser::InsertSquarePlanarRef(OBMol &mol, unsigned long id)$/;"	f	class:OpenBabel::OBSmilesParser
InsertTetrahedralRef	src/formats/smilesformat.cpp	/^  void OBSmilesParser::InsertTetrahedralRef(OBMol &mol, unsigned long id)$/;"	f	class:OpenBabel::OBSmilesParser
Int	include/openbabel/json/json-forwards.h	/^   typedef int Int;$/;"	t	namespace:Json
Int	include/openbabel/json/json.h	/^      typedef Json::Int Int;$/;"	t	class:Json::Value
Int	include/openbabel/json/json.h	/^   typedef int Int;$/;"	t	namespace:Json
Int64	include/openbabel/json/json-forwards.h	/^   typedef __int64 Int64;$/;"	t	namespace:Json
Int64	include/openbabel/json/json-forwards.h	/^   typedef long long int Int64;$/;"	t	namespace:Json
Int64	include/openbabel/json/json.h	/^      typedef Json::Int64 Int64;$/;"	t	class:Json::Value
Int64	include/openbabel/json/json.h	/^   typedef __int64 Int64;$/;"	t	namespace:Json
Int64	include/openbabel/json/json.h	/^   typedef long long int Int64;$/;"	t	namespace:Json
InternalFlags	include/openbabel/json/json.h	/^      enum InternalFlags { $/;"	g	class:Json::ValueInternalLink
InternalToCartesian	src/obutil.cpp	/^  void InternalToCartesian(std::vector<OBInternalCoord*> &vic,OBMol &mol)$/;"	f	namespace:OpenBabel
Interpolate	src/grid.cpp	/^  double OBFloatGrid::Interpolate(double x, double y, double z)$/;"	f	class:OpenBabel::OBFloatGrid
InterpolateDerivatives	src/grid.cpp	/^  double OBFloatGrid::InterpolateDerivatives(double x,double y,double z,double *derivatives)$/;"	f	class:OpenBabel::OBFloatGrid
InvalidAtomExpr	src/formats/smiley.h	/^    InvalidAtomExpr = 7,$/;"	e	enum:Smiley::ErrorCode
InvalidAtomPrimitive	src/formats/smiley.h	/^    InvalidAtomPrimitive = 15,$/;"	e	enum:Smiley::ErrorCode
InvalidBondPrimitive	src/formats/smiley.h	/^    InvalidBondPrimitive = 16,$/;"	e	enum:Smiley::ErrorCode
InvalidChiralHydrogenCount	src/formats/smiley.h	/^    InvalidChiralHydrogenCount = 1024$/;"	e	enum:Smiley::ErrorCode
InvalidChiralValence	src/formats/smiley.h	/^    InvalidChiralValence = 512,$/;"	e	enum:Smiley::ErrorCode
InvalidChirality	src/formats/smiley.h	/^    InvalidChirality = 3,$/;"	e	enum:Smiley::ErrorCode
InvalidRingBond	src/formats/smiley.h	/^    InvalidRingBond = 256,$/;"	e	enum:Smiley::ErrorCode
InvalidRingBondNumber	src/formats/smiley.h	/^    InvalidRingBondNumber = 11,$/;"	e	enum:Smiley::ErrorCode
InversionCenters	src/pointgroup.cpp	/^    SYMMETRY_ELEMENT **    InversionCenters      ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
InversionCentersCount	src/pointgroup.cpp	/^    int                    InversionCentersCount ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
Invert	include/openbabel/stereo/tetranonplanar.h	/^      static void Invert(ConfigType &cfg)$/;"	f	class:OpenBabel::OBTetraNonPlanarStereo
InvertCase	src/obutil.cpp	/^  void InvertCase(char *cptr)$/;"	f	namespace:OpenBabel
InvertCase	src/obutil.cpp	/^  void InvertCase(std::string &s, unsigned int start)$/;"	f	namespace:OpenBabel
InvertStereo	src/formats/libinchi/ichicans.c	/^int InvertStereo( sp_ATOM *at, int num_at_tg,$/;"	f
Ir	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
IsAcid	src/phmodel.cpp	/^  bool OBChemTsfm::IsAcid()$/;"	f	class:OpenBabel::OBChemTsfm
IsAmide	src/bond.cpp	/^   bool OBBond::IsAmide()$/;"	f	class:OpenBabel::OBBond
IsAmideNitrogen	src/atom.cpp	/^  bool OBAtom::IsAmideNitrogen()$/;"	f	class:OpenBabel::OBAtom
IsAmidine	src/formats/pdbqtformat.cpp	/^  static bool IsAmidine(OBBond* querybond)$/;"	f	namespace:OpenBabel
IsAntiClockwise	include/openbabel/atom.h	/^      bool IsAntiClockwise()     { return(HasFlag(OB_ACSTEREO_ATOM)); }$/;"	f	class:OpenBabel::OBAtom
IsApprox	include/openbabel/obutil.h	/^  OBAPI inline bool IsApprox(const double & a, const double & b,$/;"	f	namespace:OpenBabel
IsApprox	src/math/vector3.cpp	/^  bool vector3::IsApprox(const vector3 & other, const double & precision) const$/;"	f	class:OpenBabel::vector3
IsApprox_pos	include/openbabel/obutil.h	/^  OBAPI inline bool IsApprox_pos(const double &a, const double &b,$/;"	f	namespace:OpenBabel
IsAromatic	src/atom.cpp	/^  bool OBAtom::IsAromatic() const$/;"	f	class:OpenBabel::OBAtom
IsAromatic	src/bond.cpp	/^  bool OBBond::IsAromatic() const$/;"	f	class:OpenBabel::OBBond
IsAromatic	src/ring.cpp	/^  bool OBRing::IsAromatic()$/;"	f	class:OpenBabel::OBRing
IsAromaticNOxide	src/atom.cpp	/^  bool OBAtom::IsAromaticNOxide()$/;"	f	class:OpenBabel::OBAtom
IsAxial	src/atom.cpp	/^  bool OBAtom::IsAxial()$/;"	f	class:OpenBabel::OBAtom
IsBase	src/phmodel.cpp	/^  bool OBChemTsfm::IsBase()$/;"	f	class:OpenBabel::OBChemTsfm
IsCarbon	include/openbabel/atom.h	/^      bool IsCarbon()      { return(GetAtomicNum() == 6); }$/;"	f	class:OpenBabel::OBAtom
IsCarbonyl	src/bond.cpp	/^  bool OBBond::IsCarbonyl()$/;"	f	class:OpenBabel::OBBond
IsCarboxylOxygen	src/atom.cpp	/^  bool OBAtom::IsCarboxylOxygen()$/;"	f	class:OpenBabel::OBAtom
IsChiral	src/atom.cpp	/^  bool OBAtom::IsChiral()$/;"	f	class:OpenBabel::OBAtom
IsChiral	src/mol.cpp	/^  bool OBMol::IsChiral()$/;"	f	class:OpenBabel::OBMol
IsCis	src/stereo/cistrans.cpp	/^  bool OBCisTransStereo::IsCis(unsigned long id1, unsigned long id2) const$/;"	f	class:OpenBabel::OBCisTransStereo
IsCis	src/stereo/squareplanar.cpp	/^  bool OBSquarePlanarStereo::IsCis(unsigned long id1, unsigned long id2) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
IsCisOrTrans	include/openbabel/bond.h	/^      bool IsCisOrTrans() const { return(HasFlag(CisOrTrans)); }$/;"	f	class:OpenBabel::OBBond
IsClockwise	include/openbabel/atom.h	/^      bool IsClockwise()         { return(HasFlag(OB_CSTEREO_ATOM));  }$/;"	f	class:OpenBabel::OBAtom
IsClosure	src/bond.cpp	/^  bool OBBond::IsClosure()$/;"	f	class:OpenBabel::OBBond
IsConnected	src/atom.cpp	/^  bool OBAtom::IsConnected(OBAtom *a1)$/;"	f	class:OpenBabel::OBAtom
IsCorrectedForPH	include/openbabel/mol.h	/^    bool IsCorrectedForPH() { return(HasFlag(OB_PH_CORRECTED_MOL));     }$/;"	f	class:OpenBabel::OBMol
IsCutOffEnabled	include/openbabel/forcefield.h	/^    bool IsCutOffEnabled()$/;"	f	class:OpenBabel::OBForceField
IsDouble	src/bond.cpp	/^  bool OBBond::IsDouble()$/;"	f	class:OpenBabel::OBBond
IsDoubleBondGeometry	src/bond.cpp	/^  bool OBBond::IsDoubleBondGeometry()$/;"	f	class:OpenBabel::OBBond
IsDown	include/openbabel/bond.h	/^      bool IsDown()  {    return(HasFlag(OB_TORDOWN_BOND));  }$/;"	f	class:OpenBabel::OBBond
IsDown	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::IsDown(OBBond *bond)$/;"	f	class:OpenBabel::OBSmilesParser
IsDown	src/formats/smileyformat.cpp	/^      IsDown$/;"	e	enum:OpenBabel::OpenBabelCallback::UpDown	file:
IsEmpty	src/bitvec.cpp	/^  bool OBBitVec::IsEmpty() const$/;"	f	class:OpenBabel::OBBitVec
IsEster	src/bond.cpp	/^  bool OBBond::IsEster()$/;"	f	class:OpenBabel::OBBond
IsEven	src/rand.cpp	49;"	d	file:
IsExpanded	include/openbabel/alias.h	/^  bool IsExpanded()const { return !_expandedatoms.empty(); }$/;"	f	class:OpenBabel::AliasData
IsFirstInput	src/obconversion.cpp	/^  bool OBConversion::IsFirstInput()$/;"	f	class:OpenBabel::OBConversion
IsFixed	src/forcefield.cpp	/^  bool OBFFConstraints::IsFixed(int index)$/;"	f	class:OpenBabel::OBFFConstraints
IsFixedBond	src/rotor.cpp	/^  bool OBRotorList::IsFixedBond(OBBond *bond)$/;"	f	class:OpenBabel::OBRotorList
IsGood	include/openbabel/conformersearch.h	/^      bool IsGood(const OBMol &mol, const RotorKey &key, double *coords)$/;"	f	class:OpenBabel::OBConformerFilters
IsGood	src/conformersearch.cpp	/^  bool OBConformerSearch::IsGood(const RotorKey &key)$/;"	f	class:OpenBabel::OBConformerSearch
IsGood	src/conformersearch.cpp	/^  bool OBStericConformerFilter::IsGood(const OBMol &mol, const RotorKey &key, double *conformer)$/;"	f	class:OpenBabel::OBStericConformerFilter
IsGood	src/depict/asciipainter.cpp	/^  bool ASCIIPainter::IsGood() const$/;"	f	class:OpenBabel::ASCIIPainter
IsGood	src/depict/cairopainter.cpp	/^  bool CairoPainter::IsGood() const$/;"	f	class:OpenBabel::CairoPainter
IsGood	src/depict/commandpainter.cpp	/^  bool CommandPainter::IsGood() const$/;"	f	class:OpenBabel::CommandPainter
IsGood	src/depict/svgpainter.cpp	/^  bool SVGPainter::IsGood() const$/;"	f	class:OpenBabel::SVGPainter
IsHash	include/openbabel/bond.h	/^      bool IsHash()  {    return(HasFlag(OB_HASH_BOND));     }$/;"	f	class:OpenBabel::OBBond
IsHbondAcceptor	src/atom.cpp	/^  bool OBAtom::IsHbondAcceptor() {$/;"	f	class:OpenBabel::OBAtom
IsHbondAcceptorSimple	src/atom.cpp	/^  bool OBAtom::IsHbondAcceptorSimple()$/;"	f	class:OpenBabel::OBAtom
IsHbondDonor	src/atom.cpp	/^  bool OBAtom::IsHbondDonor()$/;"	f	class:OpenBabel::OBAtom
IsHbondDonorH	src/atom.cpp	/^  bool OBAtom::IsHbondDonorH()$/;"	f	class:OpenBabel::OBAtom
IsHetAtom	include/openbabel/atom.h	/^      bool IsHetAtom() {$/;"	f	class:OpenBabel::OBAtom
IsHetAtom	src/residue.cpp	/^  bool OBResidue::IsHetAtom(OBAtom *atom) const$/;"	f	class:OpenBabel::OBResidue
IsHeteroatom	src/atom.cpp	/^  bool OBAtom::IsHeteroatom()$/;"	f	class:OpenBabel::OBAtom
IsHydrogen	include/openbabel/atom.h	/^      bool IsHydrogen()    { return(GetAtomicNum() == 1); }$/;"	f	class:OpenBabel::OBAtom
IsHydrogen	include/openbabel/atom.h	/^      bool IsHydrogen() const { return(GetAtomicNum() == 1); }$/;"	f	class:OpenBabel::OBAtom
IsIgnored	src/forcefield.cpp	/^  bool OBFFConstraints::IsIgnored(int index)$/;"	f	class:OpenBabel::OBFFConstraints
IsImide	src/formats/pdbqtformat.cpp	/^  static bool IsImide(OBBond* querybond)$/;"	f	namespace:OpenBabel
IsIn	src/formats/pdbqtformat.cpp	/^  bool IsIn(const vector<int>& vec, const int num) \/\/checks whether a vector of int contains a specific int$/;"	f	namespace:OpenBabel
IsInRing	include/openbabel/ring.h	/^    bool   IsInRing(int i)$/;"	f	class:OpenBabel::OBRing
IsInRing	src/atom.cpp	/^  bool OBAtom::IsInRing() const$/;"	f	class:OpenBabel::OBAtom
IsInRing	src/bond.cpp	/^  bool OBBond::IsInRing() const$/;"	f	class:OpenBabel::OBBond
IsInRingSize	src/atom.cpp	/^  bool OBAtom::IsInRingSize(int size) const$/;"	f	class:OpenBabel::OBAtom
IsInSameRing	src/forcefield.cpp	/^  bool OBForceField::IsInSameRing(OBAtom* a, OBAtom* b)$/;"	f	class:OpenBabel::OBForceField
IsInvalidAtom	src/parsmart.cpp	/^  static int IsInvalidAtom( AtomExpr *expr )$/;"	f	namespace:OpenBabel
IsKDouble	src/bond.cpp	/^  bool OBBond::IsKDouble()$/;"	f	class:OpenBabel::OBBond
IsKSingle	src/bond.cpp	/^  bool OBBond::IsKSingle()$/;"	f	class:OpenBabel::OBBond
IsKTriple	src/bond.cpp	/^  bool OBBond::IsKTriple()$/;"	f	class:OpenBabel::OBBond
IsLast	include/openbabel/xml.h	/^      bool IsLast()$/;"	f	class:OpenBabel::XMLConversion
IsLast	src/obconversion.cpp	/^  bool OBConversion::IsLast()$/;"	f	class:OpenBabel::OBConversion
IsLastFile	include/openbabel/obconversion.h	/^      bool     IsLastFile(){ return !MoreFilesToCome;}\/\/\/< @brief True if no more files to be read$/;"	f	class:OpenBabel::OBConversion
IsMember	src/ring.cpp	/^  bool OBRing::IsMember(OBAtom *a)$/;"	f	class:OpenBabel::OBRing
IsMember	src/ring.cpp	/^  bool OBRing::IsMember(OBBond *b)$/;"	f	class:OpenBabel::OBRing
IsMetal	src/atom.cpp	/^  bool OBAtom::IsMetal()$/;"	f	class:OpenBabel::OBAtom
IsMetal	src/formats/mdlformat.cpp	/^  bool MDLFormat::IsMetal(OBAtom *atom)$/;"	f	class:OpenBabel::MDLFormat
IsNan	src/obutil.cpp	/^  bool IsNan(const double &a)$/;"	f	namespace:OpenBabel
IsNear	src/obutil.cpp	/^  bool IsNear(const double &a, const double &b, const double epsilon)$/;"	f	namespace:OpenBabel
IsNearZero	src/obutil.cpp	/^  bool IsNearZero(const double &a, const double epsilon)$/;"	f	namespace:OpenBabel
IsNegativeStereo	include/openbabel/atom.h	/^      bool IsNegativeStereo() { return(HasFlag(OB_NEG_CHIRAL_ATOM)); }$/;"	f	class:OpenBabel::OBAtom
IsNegligible	include/openbabel/obutil.h	/^  OBAPI inline bool IsNegligible(const double & a, const double & b,$/;"	f	namespace:OpenBabel
IsNitroOxygen	src/atom.cpp	/^  bool OBAtom::IsNitroOxygen()$/;"	f	class:OpenBabel::OBAtom
IsNitrogen	include/openbabel/atom.h	/^      bool IsNitrogen()    { return(GetAtomicNum() == 7); }$/;"	f	class:OpenBabel::OBAtom
IsNodeSetEmpty	src/formats/libinchi/ichican2.c	/^int IsNodeSetEmpty( NodeSet *cur_nodes, int k)$/;"	f
IsNonPolarHydrogen	src/atom.cpp	/^  bool OBAtom::IsNonPolarHydrogen()$/;"	f	class:OpenBabel::OBAtom
IsNotCorH	src/atom.cpp	/^  bool OBAtom::IsNotCorH()$/;"	f	class:OpenBabel::OBAtom
IsNotUpDown	src/formats/smileyformat.cpp	/^      IsNotUpDown,$/;"	e	enum:OpenBabel::OpenBabelCallback::UpDown	file:
IsNum	src/formats/adfformat.cpp	/^inline bool IsNum( const string& s )$/;"	f	namespace:OpenBabel
IsOdd	src/rand.cpp	50;"	d	file:
IsOddPrime	src/rand.cpp	/^  static int IsOddPrime( unsigned int x )$/;"	f	namespace:OpenBabel
IsOnSameAtom	src/stereo/cistrans.cpp	/^  bool OBCisTransStereo::IsOnSameAtom(unsigned long id1, unsigned long id2) const$/;"	f	class:OpenBabel::OBCisTransStereo
IsOneFour	src/atom.cpp	/^  bool OBAtom::IsOneFour(OBAtom *a1)$/;"	f	class:OpenBabel::OBAtom
IsOneThree	src/atom.cpp	/^  bool OBAtom::IsOneThree(OBAtom *a1)$/;"	f	class:OpenBabel::OBAtom
IsOpenShell	include/openbabel/generic.h	/^    bool IsOpenShell() { return _openShell; }$/;"	f	class:OpenBabel::OBOrbitalData
IsOption	src/obconversion.cpp	/^  const char* OBConversion::IsOption(const char* opt, Option_type opttyp)$/;"	f	class:OpenBabel::OBConversion
IsOxygen	include/openbabel/atom.h	/^      bool IsOxygen()      { return(GetAtomicNum() == 8); }$/;"	f	class:OpenBabel::OBAtom
IsPhosphateOxygen	src/atom.cpp	/^  bool OBAtom::IsPhosphateOxygen()$/;"	f	class:OpenBabel::OBAtom
IsPhosphorus	include/openbabel/atom.h	/^      bool IsPhosphorus()  { return(GetAtomicNum() == 15);}$/;"	f	class:OpenBabel::OBAtom
IsPolarHydrogen	src/atom.cpp	/^  bool OBAtom::IsPolarHydrogen()$/;"	f	class:OpenBabel::OBAtom
IsPositiveStereo	include/openbabel/atom.h	/^      bool IsPositiveStereo() { return(HasFlag(OB_POS_CHIRAL_ATOM)); }$/;"	f	class:OpenBabel::OBAtom
IsPossibleSubstructure	src/formats/fingerprintformat.cpp	/^  bool FingerprintFormat::IsPossibleSubstructure(vector<unsigned int>Mol, vector<unsigned int>Frag)$/;"	f	class:OpenBabel::FingerprintFormat
IsPrimaryAmide	src/bond.cpp	/^   bool OBBond::IsPrimaryAmide()$/;"	f	class:OpenBabel::OBBond
IsPrime	src/rand.cpp	53;"	d	file:
IsProtonRotor	src/generic.cpp	/^  bool OBTorsion::IsProtonRotor()$/;"	f	class:OpenBabel::OBTorsion
IsResidueType	src/residue.cpp	/^  bool OBResidue::IsResidueType(int restype) const$/;"	f	class:OpenBabel::OBResidue
IsReversible	include/openbabel/reaction.h	/^  bool IsReversible() const       {return _reversible;}$/;"	f	class:OpenBabel::OBReaction
IsRotBond_PDBQT	src/formats/pdbqtformat.cpp	/^  bool IsRotBond_PDBQT(OBBond * the_bond)$/;"	f	namespace:OpenBabel
IsRotor	src/bond.cpp	/^  bool OBBond::IsRotor(bool includeRingBonds)$/;"	f	class:OpenBabel::OBBond
IsSecondaryAmide	src/bond.cpp	/^   bool OBBond::IsSecondaryAmide()$/;"	f	class:OpenBabel::OBBond
IsSetupNeeded	src/forcefield.cpp	/^  bool OBForceField::IsSetupNeeded(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
IsSingle	src/bond.cpp	/^  bool OBBond::IsSingle()$/;"	f	class:OpenBabel::OBBond
IsSpecified	include/openbabel/stereo/stereo.h	/^      bool IsSpecified() const { return m_specified; }$/;"	f	class:OpenBabel::OBStereoBase
IsSpiroAtom	src/builder.cpp	/^  bool OBBuilder::IsSpiroAtom(unsigned long atomId, OBMol &mol)$/;"	f	class:OpenBabel::OBBuilder
IsSulfateOxygen	src/atom.cpp	/^  bool OBAtom::IsSulfateOxygen()$/;"	f	class:OpenBabel::OBAtom
IsSulfoneOxygen	src/atom.cpp	/^  static bool IsSulfoneOxygen(OBAtom* atm)$/;"	f	namespace:OpenBabel
IsSulfur	include/openbabel/atom.h	/^      bool IsSulfur()      { return(GetAtomicNum() == 16);}$/;"	f	class:OpenBabel::OBAtom
IsSuppressedHydrogen	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::IsSuppressedHydrogen(OBAtom *atom)$/;"	f	class:OpenBabel::OBMol2Cansmi
IsSuppressibleHydrogen	src/mol.cpp	/^  static bool IsSuppressibleHydrogen(OBAtom *atom, OBAtomClassData *pac)$/;"	f	namespace:OpenBabel
IsTertiaryAmide	src/bond.cpp	/^   bool OBBond::IsTertiaryAmide()$/;"	f	class:OpenBabel::OBBond
IsThiocarboxylSulfur	src/formats/mol2format.cpp	/^  static bool IsThiocarboxylSulfur(OBAtom* queryatom)$/;"	f	namespace:OpenBabel
IsTrans	src/stereo/cistrans.cpp	/^  bool OBCisTransStereo::IsTrans(unsigned long id1, unsigned long id2) const$/;"	f	class:OpenBabel::OBCisTransStereo
IsTrans	src/stereo/squareplanar.cpp	/^  bool OBSquarePlanarStereo::IsTrans(unsigned long id1, unsigned long id2) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
IsTriple	src/bond.cpp	/^  bool OBBond::IsTriple()$/;"	f	class:OpenBabel::OBBond
IsUniqueKey	src/conformersearch.cpp	/^  bool OBConformerSearch::IsUniqueKey(const RotorKeys &keys, const RotorKey &key) const$/;"	f	class:OpenBabel::OBConformerSearch
IsUnits	src/formats/gamessukformat.cpp	/^  bool GAMESSUKFormat::IsUnits(string text)$/;"	f	class:OpenBabel::GAMESSUKFormat
IsUnsatType	include/openbabel/mol.h	806;"	d
IsUp	include/openbabel/bond.h	/^      bool IsUp()    {    return(HasFlag(OB_TORUP_BOND));    }$/;"	f	class:OpenBabel::OBBond
IsUp	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::IsUp(OBBond *bond)$/;"	f	class:OpenBabel::OBSmilesParser
IsUp	src/formats/smileyformat.cpp	/^      IsUp,$/;"	e	enum:OpenBabel::OpenBabelCallback::UpDown	file:
IsValid	include/openbabel/parsmart.h	/^    bool         IsValid() const   {      return(_pat != NULL);    }$/;"	f	class:OpenBabel::OBSmartsPattern
IsValid	include/openbabel/rotor.h	/^    bool    IsValid()    {        return(_sp->IsValid());       }$/;"	f	class:OpenBabel::OBRotorRule
IsValid	src/math/spacegroup.cpp	/^  bool SpaceGroup::IsValid() const$/;"	f	class:OpenBabel::SpaceGroup
IsValid	src/stereo/cistrans.cpp	/^  bool OBCisTransStereo::IsValid() const$/;"	f	class:OpenBabel::OBCisTransStereo
IsValid	src/stereo/squareplanar.cpp	/^  bool OBSquarePlanarStereo::IsValid() const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
IsValid	src/stereo/tetrahedral.cpp	/^  bool OBTetrahedralStereo::IsValid() const$/;"	f	class:OpenBabel::OBTetrahedralStereo
IsWedge	include/openbabel/bond.h	/^      bool IsWedge() {    return(HasFlag(OB_WEDGE_BOND));    }$/;"	f	class:OpenBabel::OBBond
IsWedgeOrHash	include/openbabel/bond.h	/^      bool IsWedgeOrHash() const { return(HasFlag(WedgeOrHash)); }$/;"	f	class:OpenBabel::OBBond
IsXFixed	src/forcefield.cpp	/^  bool OBFFConstraints::IsXFixed(int index)$/;"	f	class:OpenBabel::OBFFConstraints
IsYFixed	src/forcefield.cpp	/^  bool OBFFConstraints::IsYFixed(int index)$/;"	f	class:OpenBabel::OBFFConstraints
IsZFixed	src/forcefield.cpp	/^  bool OBFFConstraints::IsZFixed(int index)$/;"	f	class:OpenBabel::OBFFConstraints
IsZOX	src/formats/libinchi/ichi_bns.c	/^int IsZOX( inp_ATOM *atom, int at_x, int ord )$/;"	f
IsZero	src/obutil.cpp	768;"	d	file:
IsotopicAtom	include/inchi/ichi.h	/^    INChI_IsotopicAtom   *IsotopicAtom;              \/* [nNumberOfIsotopicAtoms] *\/$/;"	m	struct:tagINChI
IsotopicTGroup	include/inchi/ichi.h	/^    INChI_IsotopicTGroup *IsotopicTGroup;             \/* [nNumberOfIsotopicAtoms] *\/$/;"	m	struct:tagINChI
Istype	src/patty.cpp	/^  int patty::Istype(const std::string &type)$/;"	f	class:OpenBabel::patty
Iterate	src/graphsym.cpp	/^  int OBGraphSymPrivate::Iterate(vector<unsigned int> &symClasses)$/;"	f	class:OpenBabel::OBGraphSymPrivate
IteratorState	include/openbabel/json/json.h	/^         IteratorState() $/;"	f	struct:Json::ValueInternalArray::IteratorState
IteratorState	include/openbabel/json/json.h	/^         IteratorState() $/;"	f	struct:Json::ValueInternalMap::IteratorState
IteratorState	include/openbabel/json/json.h	/^      struct IteratorState \/\/ Must be a POD$/;"	s	class:Json::ValueInternalArray
IteratorState	include/openbabel/json/json.h	/^      struct IteratorState$/;"	s	class:Json::ValueInternalMap
JSONCPP_BATCHALLOCATOR_H_INCLUDED	src/formats/json/jsoncpp.cpp	1090;"	d	file:
JSONCPP_DEPRECATED	include/openbabel/json/json-forwards.h	151;"	d
JSONCPP_DEPRECATED	include/openbabel/json/json-forwards.h	155;"	d
JSONCPP_DEPRECATED	include/openbabel/json/json.h	150;"	d
JSONCPP_DEPRECATED	include/openbabel/json/json.h	154;"	d
JSON_AMALGATED_H_INCLUDED	include/openbabel/json/json.h	76;"	d
JSON_API	include/openbabel/json/json-forwards.h	130;"	d
JSON_API	include/openbabel/json/json-forwards.h	132;"	d
JSON_API	include/openbabel/json/json-forwards.h	134;"	d
JSON_API	include/openbabel/json/json-forwards.h	136;"	d
JSON_API	include/openbabel/json/json.h	129;"	d
JSON_API	include/openbabel/json/json.h	131;"	d
JSON_API	include/openbabel/json/json.h	133;"	d
JSON_API	include/openbabel/json/json.h	135;"	d
JSON_ASSERT	src/formats/json/jsoncpp.cpp	1564;"	d	file:
JSON_ASSERT_MESSAGE	src/formats/json/jsoncpp.cpp	1566;"	d	file:
JSON_ASSERT_UNREACHABLE	src/formats/json/jsoncpp.cpp	1563;"	d	file:
JSON_CONFIG_H_INCLUDED	include/openbabel/json/json-forwards.h	92;"	d
JSON_CONFIG_H_INCLUDED	include/openbabel/json/json.h	91;"	d
JSON_FAIL_MESSAGE	src/formats/json/jsoncpp.cpp	1565;"	d	file:
JSON_FORWARDS_H_INCLUDED	include/openbabel/json/json-forwards.h	202;"	d
JSON_FORWARDS_H_INCLUDED	include/openbabel/json/json.h	201;"	d
JSON_FORWARD_AMALGATED_H_INCLUDED	include/openbabel/json/json-forwards.h	77;"	d
JSON_HAS_INT64	include/openbabel/json/json-forwards.h	164;"	d
JSON_HAS_INT64	include/openbabel/json/json-forwards.h	176;"	d
JSON_HAS_INT64	include/openbabel/json/json.h	163;"	d
JSON_HAS_INT64	include/openbabel/json/json.h	175;"	d
JSON_IS_AMALGAMATION	include/openbabel/json/json-forwards.h	80;"	d
JSON_IS_AMALGAMATION	include/openbabel/json/json.h	79;"	d
JSON_USE_CPPTL	include/openbabel/json/json-forwards.h	125;"	d
JSON_USE_CPPTL	include/openbabel/json/json.h	124;"	d
JSON_USE_EXCEPTION	include/openbabel/json/json-forwards.h	114;"	d
JSON_USE_EXCEPTION	include/openbabel/json/json.h	113;"	d
JSON_USE_INT64_DOUBLE_CONVERSION	include/openbabel/json/json-forwards.h	146;"	d
JSON_USE_INT64_DOUBLE_CONVERSION	include/openbabel/json/json.h	145;"	d
JSON_WRITER_H_INCLUDED	include/openbabel/json/json.h	1667;"	d
JaguarInputFormat	src/formats/jaguarformat.cpp	/^    JaguarInputFormat()$/;"	f	class:OpenBabel::JaguarInputFormat
JaguarInputFormat	src/formats/jaguarformat.cpp	/^  class JaguarInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
JaguarOutputFormat	src/formats/jaguarformat.cpp	/^    JaguarOutputFormat()$/;"	f	class:OpenBabel::JaguarOutputFormat
JaguarOutputFormat	src/formats/jaguarformat.cpp	/^  class JaguarOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Json	include/openbabel/json/customwriter.h	/^namespace Json {$/;"	n
Json	include/openbabel/json/json-forwards.h	/^namespace Json {$/;"	n
Json	include/openbabel/json/json.h	/^namespace Json {$/;"	n
Json	src/formats/json/customwriter.cpp	/^namespace Json {$/;"	n	file:
Json	src/formats/json/jsoncpp.cpp	/^namespace Json {$/;"	n	file:
K	include/openbabel/pointgroup.h	/^        K, Kh, \/\/ 57, 58$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
K	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
KBOSum	src/atom.cpp	/^  unsigned int OBAtom::KBOSum() const$/;"	f	class:OpenBabel::OBAtom
KCAL_TO_KJ	include/openbabel/forcefield.h	69;"	d
KEEP_METAL_EDGE_FLOW	include/inchi/ichirvrs.h	904;"	d
KETO_ENOL_TAUT	include/inchi/mode.h	369;"	d
KJPERMOL_TO_KCALPERMOL	include/openbabel/data_utilities.h	/^ const double KJPERMOL_TO_KCALPERMOL = 1.0\/4.184;$/;"	m	namespace:OpenBabel
KNOWN_ACIDIC_TYPE	src/formats/libinchi/ichi_bns.c	167;"	d	file:
KNOWN_PARITIES_EQL	include/inchi/extr_ct.h	214;"	d
Kabsch	include/openbabel/math/align.h	/^      Kabsch = 0,   \/\/ Returns matrix and RMSD$/;"	e	enum:OpenBabel::OBAlign::AlignMethod
KekulePropagate	src/mol.cpp	/^  static bool KekulePropagate(OBAtom *atom,vector<int> &visit,vector<int> &ival,int depth)$/;"	f	namespace:OpenBabel
Kekulize	src/kekulize.cpp	/^  namespace Kekulize {$/;"	n	namespace:OpenBabel	file:
Kekulize	src/mol.cpp	/^  bool OBMol::Kekulize()$/;"	f	class:OpenBabel::OBMol
KeyDataToken	src/formats/mmcifformat.cpp	/^     KeyDataToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
KeyGlobalToken	src/formats/mmcifformat.cpp	/^     KeyGlobalToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
KeyLoopToken	src/formats/mmcifformat.cpp	/^     KeyLoopToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
KeySaveEndToken	src/formats/mmcifformat.cpp	/^     KeySaveEndToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
KeySaveToken	src/formats/mmcifformat.cpp	/^     KeySaveToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
KeyStopToken	src/formats/mmcifformat.cpp	/^     KeyStopToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
Kh	include/openbabel/pointgroup.h	/^        K, Kh, \/\/ 57, 58$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
Kind	include/openbabel/json/json.h	/^      enum Kind$/;"	g	class:Json::PathArgument
Kr	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
LARGE	include/openbabel/residue.h	/^      LARGE       =  9,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
LASTIDX	src/formats/xtcformat.cpp	42;"	d	file:
LAST_AT_LEN	src/formats/libinchi/ichiread.c	6986;"	d	file:
LAST_AT_LEN	src/formats/libinchi/ichiread.c	7436;"	d	file:
LAYER_DEPTH	src/formats/mpdformat.cpp	24;"	d	file:
LAYER_SIZE	src/formats/mpdformat.cpp	25;"	d	file:
LEInStream	include/openbabel/obconversion.h	/^      typedef   FilteringInputStream< LineEndingExtractor > LEInStream;$/;"	t	class:OpenBabel::OBConversion
LENGTH_LIMIT	src/strncasecmp.c	22;"	d	file:
LENGTH_LIMIT_EXPR	src/strncasecmp.c	27;"	d	file:
LENGTH_LIMIT_EXPR	src/strncasecmp.c	31;"	d	file:
LEN_COORD	include/inchi/ichisize.h	59;"	d
LEN_EXTRA_SPACE	include/inchi/ichimake.h	48;"	d
LEN_INCHI_STRING_PREFIX	include/inchi/inchi_api.h	618;"	d
LEN_INCHI_STRING_PREFIX	include/inchi_api.h	619;"	d
LEN_VERSIONS	include/inchi/ichiparm.h	2549;"	d
LEN_VERSIONS	include/inchi/ichiparm.h	2655;"	d
LEU	include/openbabel/residue.h	/^      LEU   =  2,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
LFSR	src/confsearch.cpp	/^  LFSR::LFSR(unsigned int range, unsigned int start = 1): _range(range), _lfsr(start)$/;"	f	class:OpenBabel::LFSR
LFSR	src/confsearch.cpp	/^  class LFSR$/;"	c	namespace:OpenBabel	file:
LIBXML_AUTOMATA_ENABLED	include/libxml/xmlversion.h	330;"	d
LIBXML_C14N_ENABLED	include/libxml/xmlversion.h	213;"	d
LIBXML_CATALOG_ENABLED	include/libxml/xmlversion.h	222;"	d
LIBXML_CATALOG_ENABLED	include/libxml/xmlwin32version.h	113;"	d
LIBXML_DEBUG_ENABLED	include/libxml/xmlversion.h	285;"	d
LIBXML_DEBUG_ENABLED	include/libxml/xmlwin32version.h	176;"	d
LIBXML_DLL_IMPORT	include/libxml/xmlexports.h	133;"	d
LIBXML_DLL_IMPORT	include/libxml/xmlwin32version.h	205;"	d
LIBXML_DLL_IMPORT	include/libxml/xmlwin32version.h	207;"	d
LIBXML_DOCB_ENABLED	include/libxml/xmlversion.h	231;"	d
LIBXML_DOCB_ENABLED	include/libxml/xmlwin32version.h	122;"	d
LIBXML_DOTTED_VERSION	include/libxml/xmlversion.h	32;"	d
LIBXML_DOTTED_VERSION	include/libxml/xmlwin32version.h	31;"	d
LIBXML_FTP_ENABLED	include/libxml/xmlversion.h	168;"	d
LIBXML_FTP_ENABLED	include/libxml/xmlwin32version.h	86;"	d
LIBXML_HTML_ENABLED	include/libxml/xmlversion.h	195;"	d
LIBXML_HTML_ENABLED	include/libxml/xmlwin32version.h	104;"	d
LIBXML_HTTP_ENABLED	include/libxml/xmlversion.h	177;"	d
LIBXML_HTTP_ENABLED	include/libxml/xmlwin32version.h	95;"	d
LIBXML_ICONV_ENABLED	include/libxml/xmlversion.h	267;"	d
LIBXML_LEGACY_ENABLED	include/libxml/xmlversion.h	204;"	d
LIBXML_MODULES_ENABLED	include/libxml/xmlversion.h	348;"	d
LIBXML_MODULE_EXTENSION	include/libxml/xmlversion.h	349;"	d
LIBXML_OUTPUT_ENABLED	include/libxml/xmlversion.h	114;"	d
LIBXML_PATTERN_ENABLED	include/libxml/xmlversion.h	141;"	d
LIBXML_PUSH_ENABLED	include/libxml/xmlversion.h	123;"	d
LIBXML_READER_ENABLED	include/libxml/xmlversion.h	132;"	d
LIBXML_REGEXP_ENABLED	include/libxml/xmlversion.h	321;"	d
LIBXML_SAX1_ENABLED	include/libxml/xmlversion.h	159;"	d
LIBXML_SCHEMAS_ENABLED	include/libxml/xmlversion.h	339;"	d
LIBXML_TEST_VERSION	include/libxml/xmlversion.h	61;"	d
LIBXML_TEST_VERSION	include/libxml/xmlwin32version.h	53;"	d
LIBXML_THREAD_ENABLED	include/libxml/xmlversion.h	95;"	d
LIBXML_TREE_ENABLED	include/libxml/xmlversion.h	105;"	d
LIBXML_UNICODE_ENABLED	include/libxml/xmlversion.h	312;"	d
LIBXML_VALID_ENABLED	include/libxml/xmlversion.h	186;"	d
LIBXML_VERSION	include/libxml/xmlversion.h	39;"	d
LIBXML_VERSION	include/libxml/xmlwin32version.h	38;"	d
LIBXML_VERSION_EXTRA	include/libxml/xmlversion.h	53;"	d
LIBXML_VERSION_STRING	include/libxml/xmlversion.h	46;"	d
LIBXML_VERSION_STRING	include/libxml/xmlwin32version.h	45;"	d
LIBXML_WRITER_ENABLED	include/libxml/xmlversion.h	150;"	d
LIBXML_XINCLUDE_ENABLED	include/libxml/xmlversion.h	258;"	d
LIBXML_XINCLUDE_ENABLED	include/libxml/xmlwin32version.h	158;"	d
LIBXML_XPATH_ENABLED	include/libxml/xmlversion.h	240;"	d
LIBXML_XPATH_ENABLED	include/libxml/xmlwin32version.h	131;"	d
LIBXML_XPTR_ENABLED	include/libxml/xmlversion.h	249;"	d
LIBXML_XPTR_ENABLED	include/libxml/xmlwin32version.h	140;"	d
LIB_JSONCPP_JSON_TOOL_H_INCLUDED	src/formats/json/jsoncpp.cpp	89;"	d	file:
LIGAND	include/openbabel/residue.h	/^      LIGAND           = 4,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
LIMIT	src/generic.cpp	383;"	d	file:
LIMIT	src/generic.cpp	390;"	d	file:
LIMIT	src/ops/fillUC.cpp	64;"	d	file:
LIMIT	src/ops/fillUC.cpp	71;"	d	file:
LINDERMANN	include/openbabel/kinetics.h	/^  enum reaction_type {ARRHENIUS=55555, LINDERMANN, TROE, SRI, THREEBODY};$/;"	e	enum:OpenBabel::OBRateData::reaction_type
LINEAR	include/openbabel/generic.h	/^   enum RType{UNKNOWN, ASYMMETRIC, SYMMETRIC, LINEAR};$/;"	e	enum:OpenBabel::OBRotationData::RType
LINKED_BONDS	src/formats/libinchi/ichiread.c	/^}LINKED_BONDS;$/;"	t	typeref:struct:tagLinkedBonds	file:
LINKED_BOND_ADD	src/formats/libinchi/ichiread.c	100;"	d	file:
LINUX_COMPATIBLE	src/snprintf.c	317;"	d	file:
LMPDATFormat	src/formats/lmpdatformat.cpp	/^    LMPDATFormat()$/;"	f	class:OpenBabel::LMPDATFormat
LMPDATFormat	src/formats/lmpdatformat.cpp	/^  class LMPDATFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
LOCAL_FREE	src/formats/libinchi/ichicano.c	405;"	d	file:
LOCAL_FREE	src/formats/libinchi/ichicano.c	482;"	d	file:
LOG_MASK_ALL	include/inchi/ichierr.h	129;"	d
LOG_MASK_ERR	include/inchi/ichierr.h	126;"	d
LOG_MASK_FATAL	include/inchi/ichierr.h	127;"	d
LOG_MASK_NO_WARN	include/inchi/ichierr.h	130;"	d
LOG_MASK_WARN	include/inchi/ichierr.h	125;"	d
LYS	include/openbabel/residue.h	/^      LYS   =  6,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
La	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
LabelFragments	src/canon.cpp	/^    static void LabelFragments(OBAtom *current, std::vector<OBAtom*> &nbrs, unsigned int label, Timeout &timeout, FullCode &bestCode, State &state)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
LabelToAtomicNumber	src/formats/dlpolyformat.cpp	/^  int DlpolyInputReader::LabelToAtomicNumber(std::string label)$/;"	f	class:OpenBabel::DlpolyInputReader
LabelToAtomicNumber	src/formats/gamessukformat.cpp	/^  int GAMESSUKFormat::LabelToAtomicNumber(string label)$/;"	f	class:OpenBabel::GAMESSUKFormat
Lap	include/openbabel/obutil.h	/^    double Lap()$/;"	f	class:OpenBabel::OBStopwatch
LargestInt	include/openbabel/json/json-forwards.h	/^   typedef Int64 LargestInt;$/;"	t	namespace:Json
LargestInt	include/openbabel/json/json-forwards.h	/^   typedef int LargestInt;$/;"	t	namespace:Json
LargestInt	include/openbabel/json/json.h	/^      typedef Json::LargestInt LargestInt;$/;"	t	class:Json::Value
LargestInt	include/openbabel/json/json.h	/^   typedef Int64 LargestInt;$/;"	t	namespace:Json
LargestInt	include/openbabel/json/json.h	/^   typedef int LargestInt;$/;"	t	namespace:Json
LargestUInt	include/openbabel/json/json-forwards.h	/^   typedef UInt64 LargestUInt;$/;"	t	namespace:Json
LargestUInt	include/openbabel/json/json-forwards.h	/^   typedef unsigned int LargestUInt;$/;"	t	namespace:Json
LargestUInt	include/openbabel/json/json.h	/^      typedef Json::LargestUInt LargestUInt;$/;"	t	class:Json::Value
LargestUInt	include/openbabel/json/json.h	/^   typedef UInt64 LargestUInt;$/;"	t	namespace:Json
LargestUInt	include/openbabel/json/json.h	/^   typedef unsigned int LargestUInt;$/;"	t	namespace:Json
LastSeekpos	src/formats/fastsearchformat.cpp	/^    streampos LastSeekpos; \/\/used during update$/;"	m	class:OpenBabel::FastSearchFormat	file:
LatticeType	include/openbabel/generic.h	/^    enum LatticeType { Undefined,$/;"	g	class:OpenBabel::OBUnitCell
LeadingDot	src/formats/smiley.h	/^    LeadingDot = 9,$/;"	e	enum:Smiley::ErrorCode
LeadingZeros	src/rand.cpp	/^  static int LeadingZeros( unsigned int x )$/;"	f	namespace:OpenBabel
Left	src/depict/depict.cpp	/^    Left,$/;"	e	enum:OpenBabel::__anon74	file:
LessThan	src/descriptors/filters.cpp	/^bool TitleFilter::LessThan(OBBase* pOb1, OBBase* pOb2)$/;"	f	class:OpenBabel::TitleFilter
Level	src/tautomer.cpp	/^    struct Level $/;"	s	struct:OpenBabel::TautomerImpl	file:
LewisAcidBaseCounts	src/atom.cpp	/^  pair<int, int> OBAtom::LewisAcidBaseCounts() const$/;"	f	class:OpenBabel::OBAtom
LexPtr	include/openbabel/parsmart.h	/^    char *LexPtr;$/;"	m	class:OpenBabel::OBSmartsPattern
Li	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
LineEndingExtractor	include/openbabel/lineend.h	/^class OBCONV LineEndingExtractor$/;"	c	namespace:OpenBabel
LineSearch	src/forcefield.cpp	/^  double OBForceField::LineSearch(double *currentCoords, double *direction)$/;"	f	class:OpenBabel::OBForceField
LineSearch	src/forcefield.cpp	/^  vector3 OBForceField::LineSearch(OBAtom *atom, vector3 &direction)$/;"	f	class:OpenBabel::OBForceField
LineSearchTakeStep	src/forcefield.cpp	/^  void OBForceField::LineSearchTakeStep(double* origCoords, double *direction, double step)$/;"	f	class:OpenBabel::OBForceField
LineSearchType	include/openbabel/forcefield.h	/^  struct LineSearchType$/;"	s	namespace:OpenBabel
LinearCT	include/inchi/ichicant.h	/^    AT_NUMB          *LinearCT;        \/* connection table only *\/$/;"	m	struct:tagCanonStat
LinearCT	include/inchi/ichicant.h	/^    AT_NUMB *LinearCT;  \/* output ?? *\/$/;"	m	struct:tagCanonData
LinearCT2	include/inchi/ichicant.h	/^    AT_NUMB          *LinearCT2;   \/* to save non-isotopic CT *\/$/;"	m	struct:tagCanonStat
LinearCTIsotopic	include/inchi/ichicant.h	/^    AT_ISOTOPIC      *LinearCTIsotopic;$/;"	m	struct:tagCanonStat
LinearCTIsotopicStereoCarb	include/inchi/ichicant.h	/^    AT_STEREO_CARB   *LinearCTIsotopicStereoCarb;$/;"	m	struct:tagCanonStat
LinearCTIsotopicStereoCarbInv	include/inchi/ichicant.h	/^    AT_STEREO_CARB   *LinearCTIsotopicStereoCarbInv;$/;"	m	struct:tagCanonStat
LinearCTIsotopicStereoDble	include/inchi/ichicant.h	/^    AT_STEREO_DBLE   *LinearCTIsotopicStereoDble;$/;"	m	struct:tagCanonStat
LinearCTIsotopicStereoDbleInv	include/inchi/ichicant.h	/^    AT_STEREO_DBLE   *LinearCTIsotopicStereoDbleInv;$/;"	m	struct:tagCanonStat
LinearCTIsotopicTautomer	include/inchi/ichicant.h	/^    AT_ISO_TGROUP    *LinearCTIsotopicTautomer;$/;"	m	struct:tagCanonStat
LinearCTStereoCarb	include/inchi/ichicant.h	/^    AT_STEREO_CARB   *LinearCTStereoCarb;$/;"	m	struct:tagCanonStat
LinearCTStereoCarbInv	include/inchi/ichicant.h	/^    AT_STEREO_CARB   *LinearCTStereoCarbInv;$/;"	m	struct:tagCanonStat
LinearCTStereoDble	include/inchi/ichicant.h	/^    AT_STEREO_DBLE   *LinearCTStereoDble;$/;"	m	struct:tagCanonStat
LinearCTStereoDbleInv	include/inchi/ichicant.h	/^    AT_STEREO_DBLE   *LinearCTStereoDbleInv;$/;"	m	struct:tagCanonStat
LinearCTTautomer	include/inchi/ichicant.h	/^    AT_TAUTOMER      *LinearCTTautomer;  \/*  minimal *\/$/;"	m	struct:tagCanonStat
LinearCt	include/inchi/ichicant.h	/^    AT_RANK        *LinearCt;      \/* connection table atoms (+taut. groups, directed graph)*\/$/;"	m	struct:tagFixHOrTautCanonNumbering
LipoGrid	include/openbabel/grid.h	/^    bool LipoGrid()$/;"	f	class:OpenBabel::OBProxGrid
List	src/plugin.cpp	/^void OBPlugin::List(const char* PluginID, const char* param, ostream* os)$/;"	f	class:OpenBabel::OBPlugin
ListAsString	src/plugin.cpp	/^string OBPlugin::ListAsString(const char* PluginID, const char* param)$/;"	f	class:OpenBabel::OBPlugin
ListAsVector	src/plugin.cpp	/^bool OBPlugin::ListAsVector(const char* PluginID, const char* param, vector<string>& vlist)$/;"	f	class:OpenBabel::OBPlugin
LoPart	src/rand.cpp	56;"	d	file:
LoRates	include/openbabel/kinetics.h	/^  double LoRates[3];$/;"	m	class:OpenBabel::OBRateData
LoT	include/openbabel/kinetics.h	/^  double LoT, MidT, HiT;$/;"	m	class:OpenBabel::OBNasaThermoData
LoadAllPlugins	src/plugin.cpp	/^void OBPlugin::LoadAllPlugins()$/;"	f	class:OpenBabel::OBPlugin
LoadAlphaOrbitals	src/generic.cpp	/^  void OBOrbitalData::LoadAlphaOrbitals(std::vector<double> energies, std::vector<std::string> symmetries, int alphaHOMO)$/;"	f	class:OpenBabel::OBOrbitalData
LoadBetaOrbitals	src/generic.cpp	/^  void OBOrbitalData::LoadBetaOrbitals(std::vector<double> energies, std::vector<std::string> symmetries, int betaHOMO)$/;"	f	class:OpenBabel::OBOrbitalData
LoadClosedShellOrbitals	src/generic.cpp	/^  void OBOrbitalData::LoadClosedShellOrbitals(std::vector<double> energies, std::vector<std::string> symmetries, int alphaHOMO)$/;"	f	class:OpenBabel::OBOrbitalData
LoadFile	src/alias.cpp	/^bool AliasData::LoadFile(SmartsTable& smtable)$/;"	f	class:OpenBabel::AliasData
LoadFile	src/alias.cpp	/^bool AliasData::LoadFile(SuperAtomTable& table)$/;"	f	class:OpenBabel::AliasData
LoadFragments	src/builder.cpp	/^  void OBBuilder::LoadFragments()  {$/;"	f	class:OpenBabel::OBBuilder
LoadLine	include/inchi/aux2atom.h	/^char *LoadLine( INCHI_IOSTREAM *inp_molfile, int *bTooLongLine, int *bItemIsOver, char **s,$/;"	f
LoadLine	include/inchi/aux2atom.h	182;"	d
Location	include/openbabel/json/json.h	/^      typedef const Char *Location;$/;"	t	class:Json::Reader
LookForNamespace	include/openbabel/xml.h	/^      void LookForNamespace()$/;"	f	class:OpenBabel::XMLConversion
LookupBO	src/data.cpp	/^  int OBResidueData::LookupBO(const string &s)$/;"	f	class:OpenBabel::OBResidueData
LookupBO	src/data.cpp	/^  int OBResidueData::LookupBO(const string &s1, const string &s2)$/;"	f	class:OpenBabel::OBResidueData
LookupGraphic	src/formats/chemdrawcdx.cpp	/^ChemDrawBinaryXFormat::graphicType ChemDrawBinaryXFormat::LookupGraphic(CDXObjectID id)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
LookupInMolMap	src/formats/chemdrawcdx.cpp	/^OBMol* ChemDrawBinaryXFormat::LookupInMolMap(CDXObjectID id)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
LookupMol	src/formats/chemdrawcdx.cpp	/^vector<OBMol*> ChemDrawBinaryXFormat::LookupMol(CDXObjectID id)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
LookupType	src/data.cpp	/^  bool OBResidueData::LookupType(const string &atmid,string &type,int &hyb)$/;"	f	class:OpenBabel::OBResidueData
LowBit	src/bitvec.cpp	68;"	d	file:
LowScore	include/openbabel/conformersearch.h	/^      enum Preferred { HighScore, LowScore };$/;"	e	enum:OpenBabel::OBConformerScore::Preferred
Lowest	include/openbabel/conformersearch.h	/^      enum Convergence { Highest, Lowest, Sum, Average };$/;"	e	enum:OpenBabel::OBConformerScore::Convergence
LpmdFormat	src/formats/lpmdformat.cpp	/^  LpmdFormat()$/;"	f	class:OpenBabel::LpmdFormat
LpmdFormat	src/formats/lpmdformat.cpp	/^class LpmdFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Lr	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
LtrimRtrim	src/formats/libinchi/util.c	/^char* LtrimRtrim( char *p, int* nLen )$/;"	f
Lu	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Lv	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
M2G	include/openbabel/residue.h	/^      M2G   = 36,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
MAKE_BITS_CUMULENE_LEN	include/inchi/extr_ct.h	220;"	d
MAKE_CN_BITS	include/inchi/ichirvrs.h	444;"	d
MAKE_PLUGIN	include/openbabel/plugin.h	156;"	d
MAKE_PLUGIN	include/openbabel/plugin.h	195;"	d
MAP_MODE_C2	src/formats/libinchi/ichimap2.c	57;"	d	file:
MAP_MODE_C2v	src/formats/libinchi/ichimap2.c	56;"	d	file:
MAP_MODE_S4	src/formats/libinchi/ichimap2.c	58;"	d	file:
MAP_MODE_STD	src/formats/libinchi/ichimap2.c	55;"	d	file:
MASK_CUMULENE_LEN	include/inchi/extr_ct.h	213;"	d
MAX	include/openbabel/spectrophore.h	45;"	d
MAX	src/formats/xtcformat.cpp	34;"	d	file:
MAXABS	src/formats/xtcformat.cpp	28;"	d	file:
MAXBONDS	include/openbabel/mcdlutil.h	/^  static const int MAXBONDS=300;$/;"	m	namespace:OpenBabel
MAXCHARS	include/openbabel/mcdlutil.h	/^  static const int MAXCHARS=1000;$/;"	m	namespace:OpenBabel
MAXDOMAINNAMELEN	src/formats/povrayformat.cpp	36;"	d	file:
MAXELEM	include/openbabel/residue.h	190;"	d
MAXFACT	src/rand.cpp	60;"	d	file:
MAXFRAGS	include/openbabel/mcdlutil.h	/^  static const int MAXFRAGS=200;$/;"	m	namespace:OpenBabel
MAXID	src/formats/xtcformat.cpp	27;"	d	file:
MAXNUCLEIC	src/chains.cpp	60;"	d	file:
MAXPARAM	src/pointgroup.cpp	37;"	d	file:
MAXPEPTIDE	src/chains.cpp	59;"	d	file:
MAXPRIMES	src/rand.cpp	64;"	d	file:
MAXQ	src/formats/libinchi/util.c	829;"	d	file:
MAXRADIUS	src/formats/povrayformat.cpp	39;"	d	file:
MAXRES	include/openbabel/residue.h	192;"	d
MAXSEG_64K	include/zconf.h	89;"	d
MAXSETNO	include/openbabel/residue.h	189;"	d
MAXSequence	src/formats/fastaformat.cpp	/^        MAXSequence$/;"	e	enum:OpenBabel::FASTAFormat::SequenceType	file:
MAXSequence	src/formats/genbankformat.cpp	/^      MAXSequence$/;"	e	enum:OpenBabel::GenBankFormat::SequenceType	file:
MAXTokenType	src/formats/mmcifformat.cpp	/^     MAXTokenType$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
MAXVAL	include/inchi/ichicant.h	93;"	d
MAXVAL	include/inchi/inchi_api.h	104;"	d
MAXVAL	include/inchi/incomdef.h	58;"	d
MAXVAL	include/inchi_api.h	105;"	d
MAX_ALT_AATG_ARRAY_LEN	include/inchi/ichi_bns.h	296;"	d
MAX_ALT_PATH_LEN	src/formats/libinchi/ichitaut.c	3582;"	d	file:
MAX_ALT_PATH_LEN	src/formats/libinchi/ichitaut.c	3990;"	d	file:
MAX_ATOMS	include/inchi/ichisize.h	48;"	d
MAX_ATOMS	src/formats/crkformat.cpp	229;"	d	file:
MAX_ATOM_CHARGE	src/formats/libinchi/ichirvr1.c	1229;"	d	file:
MAX_ATOM_CHARGE	src/formats/libinchi/ichirvr1.c	844;"	d	file:
MAX_ATOM_CHARGE	src/formats/libinchi/util.c	56;"	d	file:
MAX_AT_DERIV	src/formats/libinchi/ichinorm.c	1057;"	d	file:
MAX_AT_FLOW	include/inchi/ichi_bns.h	169;"	d
MAX_AT_FLOW	include/inchi/ichi_bns.h	176;"	d
MAX_BONDS	src/formats/crkformat.cpp	234;"	d	file:
MAX_BOND_EDGE_CAP	include/inchi/ichi_bns.h	149;"	d
MAX_BOND_LENGTH	src/formats/libinchi/strutil.c	2742;"	d	file:
MAX_CELLS	src/formats/libinchi/ichican2.c	61;"	d	file:
MAX_CHAIN_LEN	include/inchi/aux2atom.h	1118;"	d
MAX_CHAIN_LEN	include/inchi/aux2atom.h	1205;"	d
MAX_CHAIN_LEN	include/inchi/aux2atom.h	2150;"	d
MAX_CHAIN_LEN	include/inchi/aux2atom.h	2237;"	d
MAX_CIFCatName	src/formats/mmcifformat.cpp	/^     MAX_CIFCatName$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
MAX_CIFDataName	src/formats/mmcifformat.cpp	/^     MAX_CIFDataName$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_CN_VAL	include/inchi/ichirvrs.h	420;"	d
MAX_CUMULENE_LEN	include/inchi/extr_ct.h	215;"	d
MAX_DEPTH	include/openbabel/mcdlutil.h	/^  static const int MAX_DEPTH=10;$/;"	m	namespace:OpenBabel
MAX_DEPTH	src/kekulize.cpp	30;"	d	file:
MAX_DFS_DEPTH	src/formats/libinchi/ichiqueu.c	350;"	d	file:
MAX_DIFF_FIXH	include/inchi/ichirvrs.h	479;"	d
MAX_DIFF_MOBH	include/inchi/ichirvrs.h	480;"	d
MAX_EDGE_RATIO	src/formats/libinchi/ichister.c	78;"	d	file:
MAX_EDGE_RATIO	src/formats/libinchi/ichister.c	81;"	d	file:
MAX_IDENTITY_NODES	src/canon.cpp	39;"	d	file:
MAX_INPUT_BOND_TYPE	include/inchi/incomdef.h	65;"	d
MAX_LAYERS	src/formats/libinchi/ichican2.c	64;"	d	file:
MAX_LEN_REMOVED_PROTONS	include/inchi/inpdef.h	209;"	d
MAX_LOCAL_TGNUM	src/formats/libinchi/ichitaut.c	2481;"	d	file:
MAX_MEM_LEVEL	include/zconf.h	136;"	d
MAX_MEM_LEVEL	include/zconf.h	138;"	d
MAX_MSG_BUF_LEN	src/formats/libinchi/ichiread.c	375;"	d	file:
MAX_MSG_LEN	src/formats/libinchi/ichiread.c	374;"	d	file:
MAX_MSG_LEN	src/formats/libinchi/inchi_dll.c	1765;"	d	file:
MAX_NEIGH	src/formats/libinchi/ichi_bns.c	1812;"	d	file:
MAX_NEIGH	src/formats/libinchi/strutil.c	903;"	d	file:
MAX_NODES	src/formats/libinchi/ichican2.c	62;"	d	file:
MAX_NUM_CARBON_CHARGE_EDGES	src/formats/libinchi/ichirvr4.c	114;"	d	file:
MAX_NUM_CARBON_CHARGE_EDGES	src/formats/libinchi/ichirvr4.c	76;"	d	file:
MAX_NUM_CN_BITS	include/inchi/ichirvrs.h	443;"	d
MAX_NUM_PATHS	include/inchi/ichidrp.h	89;"	d
MAX_NUM_RAD	src/formats/libinchi/ichi_bns.c	6515;"	d	file:
MAX_NUM_STEREO_ATOM_NEIGH	include/inchi/inchi_api.h	1009;"	d
MAX_NUM_STEREO_ATOM_NEIGH	include/inchi/mode.h	754;"	d
MAX_NUM_STEREO_ATOM_NEIGH	include/inchi_api.h	1010;"	d
MAX_NUM_STEREO_BONDS	include/inchi/inchi_api.h	1012;"	d
MAX_NUM_STEREO_BONDS	include/inchi/mode.h	750;"	d
MAX_NUM_STEREO_BONDS	include/inchi_api.h	1013;"	d
MAX_NUM_STEREO_BOND_NEIGH	include/inchi/mode.h	751;"	d
MAX_NUM_VALENCES	src/formats/libinchi/ichirvr1.c	1232;"	d	file:
MAX_NUM_VALENCES	src/formats/libinchi/ichirvr1.c	1242;"	d	file:
MAX_NUM_VALENCES	src/formats/libinchi/ichirvr1.c	1263;"	d	file:
MAX_NUM_VALENCES	src/formats/libinchi/ichirvr1.c	847;"	d	file:
MAX_NUM_VALENCES	src/formats/libinchi/util.c	59;"	d	file:
MAX_OTHER_NEIGH	src/formats/libinchi/ichimap2.c	1777;"	d	file:
MAX_SDF_HEADER	include/inchi/incomdef.h	52;"	d
MAX_SDF_VALUE	include/inchi/incomdef.h	53;"	d
MAX_SET_SIZE	src/formats/libinchi/ichican2.c	63;"	d	file:
MAX_SINE	src/formats/libinchi/ichister.c	71;"	d	file:
MAX_STACK_ARRAY_LEN	src/formats/libinchi/ichitaut.c	88;"	d	file:
MAX_STEREO_BONDS	include/inchi/incomdef.h	59;"	d
MAX_SWEEPS	src/obutil.cpp	889;"	d	file:
MAX_TAG_LEN	src/formats/libinchi/ichiprt1.c	147;"	d	file:
MAX_TAG_NUM	src/formats/libinchi/ichiprt1.c	/^const int MAX_TAG_NUM = inchi_max((int)IL_MAX_ORD, (int)AL_MAX_ORD);$/;"	v
MAX_TGROUP_ARRAY_LEN	src/formats/libinchi/ichitaut.c	89;"	d	file:
MAX_TGROUP_EDGE_CAP	include/inchi/ichi_bns.h	151;"	d
MAX_TIME	src/kekulize.cpp	27;"	d	file:
MAX_WBITS	include/zconf.h	148;"	d
MAX_atom_site	src/formats/mmcifformat.cpp	/^     MAX_atom_site,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_atom_type	src/formats/mmcifformat.cpp	/^     MAX_atom_type,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_cell	src/formats/mmcifformat.cpp	/^     MAX_cell,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_chemical	src/formats/mmcifformat.cpp	/^     MAX_chemical,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_chemical_formula	src/formats/mmcifformat.cpp	/^     MAX_chemical_formula,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_space_group	src/formats/mmcifformat.cpp	/^     MAX_space_group,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_symmetry	src/formats/mmcifformat.cpp	/^     MAX_symmetry,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MAX_symmetry_equiv	src/formats/mmcifformat.cpp	/^     MAX_symmetry_equiv,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
MCDLFormat	src/formats/MCDLformat.cpp	/^  MCDLFormat()$/;"	f	class:OpenBabel::MCDLFormat
MCDLFormat	src/formats/MCDLformat.cpp	/^class MCDLFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MDFFFormat	src/formats/mdffformat.cpp	/^    MDFFFormat()$/;"	f	class:OpenBabel::MDFFFormat
MDFFFormat	src/formats/mdffformat.cpp	/^  class MDFFFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MDLFormat	src/formats/mdlformat.cpp	/^  class MDLFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MDLValence	src/formats/mdlvalence.h	/^static unsigned int MDLValence(unsigned int elem, int q, unsigned int val)$/;"	f
MEDIUM	include/openbabel/residue.h	/^      MEDIUM      = 10,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
MEP_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* MEP_CALCULATION_PATTERN = "Gonzalez & Schlegel IRC Optimization";$/;"	m	namespace:OpenBabel	file:
MEP_STEP_END_PATTERN	src/formats/nwchemformat.cpp	/^static const char* MEP_STEP_END_PATTERN = "&  Point";$/;"	m	namespace:OpenBabel	file:
MET	include/openbabel/residue.h	/^      MET   = 18,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
METAL	include/inchi/incomdef.h	115;"	d
METAL2	include/inchi/incomdef.h	116;"	d
METALL_ATOM	src/mcdlutil.cpp	148;"	d	file:
METAL_FREE_CHARGE_VAL	include/inchi/ichirvrs.h	122;"	d
MGROUPS	src/formats/libinchi/ichirvr2.c	/^} MGROUPS;$/;"	t	typeref:struct:tagMobileGroupList	file:
MIN	include/openbabel/spectrophore.h	44;"	d
MIN	src/formats/xtcformat.cpp	31;"	d	file:
MINELEM	include/openbabel/residue.h	191;"	d
MINOUTLENGTH	src/formats/libinchi/ikey_dll.c	/^enum { MINOUTLENGTH=256 };  $/;"	e	enum:__anon79	file:
MINRES	include/openbabel/residue.h	193;"	d
MIN_ANGLE	src/formats/libinchi/ichister.c	64;"	d	file:
MIN_ANGLE_DBOND	src/formats/libinchi/ichister.c	66;"	d	file:
MIN_ATOM	src/formats/povrayformat.cpp	43;"	d	file:
MIN_ATOM_CHARGE	src/formats/libinchi/ichirvr1.c	1228;"	d	file:
MIN_ATOM_CHARGE	src/formats/libinchi/ichirvr1.c	843;"	d	file:
MIN_ATOM_CHARGE	src/formats/libinchi/util.c	55;"	d	file:
MIN_AT_LEFT_DERIV	src/formats/libinchi/ichinorm.c	1059;"	d	file:
MIN_BOND_LEN	src/formats/libinchi/ichister.c	72;"	d	file:
MIN_BOND_LENGTH	include/inchi/aux2atom.h	45;"	d
MIN_BOND_LENGTH	src/formats/libinchi/ichiprt1.c	3522;"	d	file:
MIN_BOND_LENGTH	src/formats/libinchi/ichiprt1.c	3596;"	d	file:
MIN_BOND_LENGTH	src/formats/libinchi/inchi_dll.c	1043;"	d	file:
MIN_BOND_LENGTH	src/formats/libinchi/inchi_dll.c	1122;"	d	file:
MIN_BOND_LENGTH	src/formats/libinchi/strutil.c	2739;"	d	file:
MIN_BOND_LENGTH2	src/formats/libinchi/strutil.c	2741;"	d	file:
MIN_COS	src/formats/libinchi/strutil.c	2740;"	d	file:
MIN_DOT_PROD	include/inchi/extr_ct.h	261;"	d
MIN_INPUT_BOND_TYPE	include/inchi/incomdef.h	64;"	d
MIN_LEN_STRAIGHT	src/formats/libinchi/ichister.c	70;"	d	file:
MIN_NUM_STEREO_BOND_NEIGH	include/inchi/mode.h	752;"	d
MIN_SB_RING_SIZE	include/inchi/mode.h	469;"	d
MIN_SINE	src/formats/libinchi/ichister.c	65;"	d	file:
MIN_SINE_EDGE	src/formats/libinchi/ichister.c	69;"	d	file:
MIN_SINE_OUTSIDE	src/formats/libinchi/ichister.c	67;"	d	file:
MIN_SINE_SQUARE	src/formats/libinchi/ichister.c	68;"	d	file:
MMFF94Charges	src/charges/mmff94.cpp	/^  MMFF94Charges(const char* ID) : OBChargeModel(ID, false){};$/;"	f	class:OpenBabel::MMFF94Charges
MMFF94Charges	src/charges/mmff94.cpp	/^class MMFF94Charges : public OBChargeModel$/;"	c	namespace:OpenBabel	file:
MNAFormat	src/formats/MNAformat.cpp	/^			MNAFormat()$/;"	f	class:OpenBabel::MNAFormat
MNAFormat	src/formats/MNAformat.cpp	/^	class MNAFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MNAZ	src/formats/MNAformat.cpp	/^} MNAZ;$/;"	t	typeref:enum:__anon77	file:
MNAZ_Al	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_As	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_B	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Be	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Br	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_C	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Ca	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Cl	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Co	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_ERROR	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_F	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Fe	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_H	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_I	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_In	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_K	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Li	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Mg	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_N	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Ni	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_O	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Os	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_P	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Pd	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_S	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Sc	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Se	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Si	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Sn	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Sr	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_Te	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAZ_V	src/formats/MNAformat.cpp	/^	MNAZ_ERROR, MNAZ_H, MNAZ_C, MNAZ_N, MNAZ_O, MNAZ_F, MNAZ_Si, MNAZ_P, MNAZ_S, MNAZ_Cl, MNAZ_Ca, MNAZ_As, MNAZ_Se, MNAZ_Br, MNAZ_Li, MNAZ_B, MNAZ_Mg, MNAZ_Sn, MNAZ_Te, MNAZ_I, MNAZ_Os, MNAZ_Sc, MNAZ_Fe, MNAZ_Co, MNAZ_Sr, MNAZ_Pd, MNAZ_Be, MNAZ_K, MNAZ_V, MNAZ_Ni, MNAZ_In, MNAZ_Al$/;"	e	enum:__anon77	file:
MNAcmp	src/formats/MNAformat.cpp	/^	bool MNAcmp(OBAtom const * const A, OBAtom const * const B)$/;"	f	namespace:OpenBabel
MNAize	src/formats/MNAformat.cpp	/^	string MNAFormat::MNAize(OBAtom * const atom, unsigned level)$/;"	f	class:OpenBabel::MNAFormat
MOBILE_GR	src/formats/libinchi/ichirvr2.c	/^} MOBILE_GR;$/;"	t	typeref:struct:tagMobileHGroups	file:
MOB_AROMATICFLAG	src/formats/yasaraformat.cpp	167;"	d	file:
MOB_ATOMFLAG	src/formats/yasaraformat.cpp	160;"	d	file:
MOB_ATOMS	src/formats/yasaraformat.cpp	120;"	d	file:
MOB_ATOMSIZEMAX	src/formats/yasaraformat.cpp	171;"	d	file:
MOB_CHAINMASK	src/formats/yasaraformat.cpp	157;"	d	file:
MOB_CHAINSHIFTS	src/formats/yasaraformat.cpp	158;"	d	file:
MOB_COLOR	src/formats/yasaraformat.cpp	132;"	d	file:
MOB_DOTFLAG	src/formats/yasaraformat.cpp	168;"	d	file:
MOB_ELEMENT	src/formats/yasaraformat.cpp	129;"	d	file:
MOB_ELEMENTMASK	src/formats/yasaraformat.cpp	130;"	d	file:
MOB_ELEMENTS	src/formats/yasaraformat.cpp	105;"	d	file:
MOB_FIXEDFLAG	src/formats/yasaraformat.cpp	170;"	d	file:
MOB_HEADERLEN	src/formats/yasaraformat.cpp	123;"	d	file:
MOB_HEADERSIZE	src/formats/yasaraformat.cpp	124;"	d	file:
MOB_HETATOMFLAG	src/formats/yasaraformat.cpp	131;"	d	file:
MOB_IDLEN	src/formats/yasaraformat.cpp	128;"	d	file:
MOB_INFOEND	src/formats/yasaraformat.cpp	174;"	d	file:
MOB_INFOENDSIZE	src/formats/yasaraformat.cpp	175;"	d	file:
MOB_INFOHISTORY	src/formats/yasaraformat.cpp	172;"	d	file:
MOB_INFOHISTORYSIZE	src/formats/yasaraformat.cpp	173;"	d	file:
MOB_INSCODEALTLOCFLAG	src/formats/yasaraformat.cpp	162;"	d	file:
MOB_LINK1	src/formats/yasaraformat.cpp	137;"	d	file:
MOB_LINKATOMMASK	src/formats/yasaraformat.cpp	140;"	d	file:
MOB_LINKDOUBLE	src/formats/yasaraformat.cpp	147;"	d	file:
MOB_LINKNONE	src/formats/yasaraformat.cpp	145;"	d	file:
MOB_LINKQUADRUPLE	src/formats/yasaraformat.cpp	154;"	d	file:
MOB_LINKRESONANCE25	src/formats/yasaraformat.cpp	150;"	d	file:
MOB_LINKRESONANCE33	src/formats/yasaraformat.cpp	151;"	d	file:
MOB_LINKRESONANCE50	src/formats/yasaraformat.cpp	149;"	d	file:
MOB_LINKRESONANCE66	src/formats/yasaraformat.cpp	152;"	d	file:
MOB_LINKRESONANCE75	src/formats/yasaraformat.cpp	153;"	d	file:
MOB_LINKS	src/formats/yasaraformat.cpp	126;"	d	file:
MOB_LINKSINGLE	src/formats/yasaraformat.cpp	146;"	d	file:
MOB_LINKSMASK	src/formats/yasaraformat.cpp	127;"	d	file:
MOB_LINKTRIPLE	src/formats/yasaraformat.cpp	148;"	d	file:
MOB_LINKTYPEMASK	src/formats/yasaraformat.cpp	138;"	d	file:
MOB_LINKTYPES	src/formats/yasaraformat.cpp	144;"	d	file:
MOB_LINKTYPESHIFTS	src/formats/yasaraformat.cpp	139;"	d	file:
MOB_NOATOM	src/formats/yasaraformat.cpp	142;"	d	file:
MOB_OCCUPANCYFLAG	src/formats/yasaraformat.cpp	163;"	d	file:
MOB_POSX	src/formats/yasaraformat.cpp	134;"	d	file:
MOB_POSY	src/formats/yasaraformat.cpp	135;"	d	file:
MOB_POSZ	src/formats/yasaraformat.cpp	136;"	d	file:
MOB_PRINTRESIDSIZE	src/formats/yasaraformat.cpp	141;"	d	file:
MOB_PROPERTYFLAG	src/formats/yasaraformat.cpp	166;"	d	file:
MOB_RESFLAG	src/formats/yasaraformat.cpp	161;"	d	file:
MOB_RESNAMEMASK	src/formats/yasaraformat.cpp	156;"	d	file:
MOB_SEGMENTFLAG	src/formats/yasaraformat.cpp	165;"	d	file:
MOB_SURFENVFLAG	src/formats/yasaraformat.cpp	169;"	d	file:
MOB_TEMPFACFLAG	src/formats/yasaraformat.cpp	164;"	d	file:
MOB_TERLIST	src/formats/yasaraformat.cpp	122;"	d	file:
MOB_TERMINI	src/formats/yasaraformat.cpp	121;"	d	file:
MOB_UNDEFCOLOR	src/formats/yasaraformat.cpp	133;"	d	file:
MODE_PIXH	src/formats/libinchi/ichiread.c	/^} MODE_PIXH;$/;"	t	typeref:enum:tagModeProtonIsoExchgH	file:
MODE_PIXH_ADD_A_PIXH_COMPONENT	src/formats/libinchi/ichiread.c	/^    MODE_PIXH_ADD_A_PIXH_COMPONENT, \/* 3 *\/$/;"	e	enum:tagModeProtonIsoExchgH	file:
MODE_PIXH_ADD_TO_EACH	src/formats/libinchi/ichiread.c	/^    MODE_PIXH_ADD_TO_EACH,   \/* 2 *\/$/;"	e	enum:tagModeProtonIsoExchgH	file:
MODE_PIXH_ADD_TO_FIRST	src/formats/libinchi/ichiread.c	/^    MODE_PIXH_ADD_TO_FIRST,  \/* 1 *\/$/;"	e	enum:tagModeProtonIsoExchgH	file:
MODE_PIXH_KEEP_TOTALS	src/formats/libinchi/ichiread.c	/^    MODE_PIXH_KEEP_TOTALS         \/* 4 *\/$/;"	e	enum:tagModeProtonIsoExchgH	file:
MODE_PIXH_UNDEFINED	src/formats/libinchi/ichiread.c	/^    MODE_PIXH_UNDEFINED,     \/* 0 *\/$/;"	e	enum:tagModeProtonIsoExchgH	file:
MOL2Format	src/formats/mol2format.cpp	/^    MOL2Format()$/;"	f	class:OpenBabel::MOL2Format
MOL2Format	src/formats/mol2format.cpp	/^  class MOL2Format : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MOLFILE_ERR_FIN	include/inchi/incomdef.h	166;"	d
MOLFILE_ERR_FIN	include/inchi/lreadmol.h	64;"	d
MOLFILE_ERR_SET	include/inchi/incomdef.h	168;"	d
MOLFILE_ERR_SET	include/inchi/lreadmol.h	68;"	d
MOLFormat	src/formats/mdlformat.cpp	/^      MOLFormat()$/;"	f	class:OpenBabel::MOLFormat
MOLFormat	src/formats/mdlformat.cpp	/^  class MOLFormat : public MDLFormat$/;"	c	namespace:OpenBabel	file:
MOL_COORD	include/inchi/ichisize.h	/^typedef char MOL_COORD[LEN_COORD*NUM_COORD + NUM_COORD-1]; \/*copied 30 bytes from MOLfile *\/$/;"	t
MOL_GRAPH_H	include/OB-BGL/mol_graph.h	20;"	d
MOL_PART_MASK	include/inchi/ichicant.h	84;"	d
MOPACCARTFormat	src/formats/mopacformat.cpp	/^    MOPACCARTFormat()$/;"	f	class:OpenBabel::MOPACCARTFormat
MOPACCARTFormat	src/formats/mopacformat.cpp	/^  class MOPACCARTFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MOPACFormat	src/formats/mopacformat.cpp	/^    MOPACFormat()$/;"	f	class:OpenBabel::MOPACFormat
MOPACFormat	src/formats/mopacformat.cpp	/^  class MOPACFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MOPACINTFormat	src/formats/mopacformat.cpp	/^    MOPACINTFormat()$/;"	f	class:OpenBabel::MOPACINTFormat
MOPACINTFormat	src/formats/mopacformat.cpp	/^  class MOPACINTFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MOVETO_ENDTAG	include/libxml/parserInternals.h	255;"	d
MOVETO_STARTTAG	include/libxml/parserInternals.h	264;"	d
MOVE_CHARGES	include/inchi/mode.h	404;"	d
MOVE_CHARGES_FROM_HETEREO_TO_METAL	include/inchi/ichirvrs.h	905;"	d
MOVE_PPLUS_TO_REMOVE_PROTONS	include/inchi/mode.h	416;"	d
MPDFormat	src/formats/mpdformat.cpp	/^    MPDFormat()$/;"	f	class:OpenBabel::MPDFormat
MPDFormat	src/formats/mpdformat.cpp	/^  class MPDFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MPQCFormat	src/formats/mpqcformat.cpp	/^    MPQCFormat()$/;"	f	class:OpenBabel::MPQCFormat
MPQCFormat	src/formats/mpqcformat.cpp	/^  class MPQCFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MPQCInputFormat	src/formats/mpqcformat.cpp	/^    MPQCInputFormat()$/;"	f	class:OpenBabel::MPQCInputFormat
MPQCInputFormat	src/formats/mpqcformat.cpp	/^  class MPQCInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MPY_SINE	src/formats/libinchi/ichister.c	77;"	d	file:
MPY_SINE	src/formats/libinchi/ichister.c	80;"	d	file:
MSDOS	include/zconf.h	63;"	d
MSIFormat	src/formats/msiformat.cpp	/^    MSIFormat()$/;"	f	class:OpenBabel::MSIFormat
MSIFormat	src/formats/msiformat.cpp	/^  class MSIFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MULLIKEN_CHARGES_PATTERN	src/formats/nwchemformat.cpp	/^static const char* MULLIKEN_CHARGES_PATTERN = "Mulliken analysis of the total density";$/;"	m	namespace:OpenBabel	file:
MULTIPOLE_MOMENT_PATTERN	src/formats/nwchemformat.cpp	/^static const char* MULTIPOLE_MOMENT_PATTERN = "Multipole analysis of the density";$/;"	m	namespace:OpenBabel	file:
MULT_STEREOBOND	include/inchi/extr_ct.h	217;"	d
MWFilter	src/descriptors/filters.cpp	/^  MWFilter(const char* ID) : OBDescriptor(ID){};$/;"	f	class:OpenBabel::MWFilter
MWFilter	src/descriptors/filters.cpp	/^  class MWFilter : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
MYREALLOC2	include/inchi/mode.h	1036;"	d
MY_CONST	include/inchi/ichirvrs.h	299;"	d
M_PI	include/openbabel/obutil.h	42;"	d
M_PI	src/formats/fastaformat.cpp	324;"	d	file:
M_PI	src/pointgroup.cpp	33;"	d	file:
MacroModFormat	src/formats/mmodformat.cpp	/^    MacroModFormat()$/;"	f	class:OpenBabel::MacroModFormat
MacroModFormat	src/formats/mmodformat.cpp	/^  class MacroModFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MainPtr	include/openbabel/parsmart.h	/^    char *MainPtr;$/;"	m	class:OpenBabel::OBSmartsPattern
MakeAbcNumber	src/formats/libinchi/ichiprt2.c	/^int MakeAbcNumber( char *szString, int nStringLen, const char *szLeadingDelim, int nValue )$/;"	f
MakeAtomIds	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::MakeAtomIds(OBMol& mol, vector<string>& atomIDs)$/;"	f	class:OpenBabel::CMLFormat
MakeBlossom	src/formats/libinchi/ichi_bns.c	/^Vertex MakeBlossom( BN_STRUCT* pBNS, Vertex *ScanQ, int *pQSize,$/;"	f
MakeBold	src/GUI/OBGUI.cpp	/^void OBGUIFrame::MakeBold(wxWindow* pWnd)$/;"	f	class:OBGUIFrame
MakeCRVString	src/formats/libinchi/ichiprt2.c	/^int MakeCRVString( ORIG_INFO *OrigInfo, int nLenCT, int bAddDelim,$/;"	f
MakeCombinedMolecule	src/obmolecformat.cpp	/^  OBMol* OBMoleculeFormat::MakeCombinedMolecule(OBMol* pFirst, OBMol* pSecond)$/;"	f	class:OpenBabel::OBMoleculeFormat
MakeCtString	src/formats/libinchi/ichiprt2.c	/^int MakeCtString( AT_NUMB *LinearCT, int nLenCT, int bAddDelim,$/;"	f
MakeCtStringNew	src/formats/libinchi/ichiprt2.c	/^int MakeCtStringNew( AT_NUMB *LinearCT, int nLenCT, int bAddDelim,$/;"	f
MakeCtStringOld	src/formats/libinchi/ichiprt2.c	/^int MakeCtStringOld( AT_NUMB *LinearCT, int nLenCT, int bAddDelim,$/;"	f
MakeDativeBonds	src/mol.cpp	/^  bool OBMol::MakeDativeBonds()$/;"	f	class:OpenBabel::OBMol
MakeDecNumber	src/formats/libinchi/ichiprt2.c	/^int MakeDecNumber( char *szString, int nStringLen, const char *szLeadingDelim, int nValue )$/;"	f
MakeDelim	src/formats/libinchi/ichiprt2.c	/^int MakeDelim( const char *szTailingDelim, char *szLinearCT, int nLen_szLinearCT, int *bOverflow)$/;"	f
MakeEqStr	src/formats/libinchi/ichiprt2.c	/^int MakeEqStr( const char *szTailingDelim, int mult, char *szLinearCT, int nLen_szLinearCT, int *bOverflow)$/;"	f
MakeEquString	src/formats/libinchi/ichiprt2.c	/^int MakeEquString( AT_NUMB *LinearCT, int nLenCT, int bAddDelim,$/;"	f
MakeHString	src/formats/libinchi/ichiprt2.c	/^int MakeHString( int bAddDelim, S_CHAR *LinearCT, int nLenCT,$/;"	f
MakeHillFormula	src/formats/libinchi/ichimak2.c	/^int MakeHillFormula( U_CHAR *nAtom, int num_atoms,$/;"	f
MakeHillFormulaString	src/formats/libinchi/ichimak2.c	/^int MakeHillFormulaString( char *szHillFormula, char *szLinearCT, int nLen_szLinearCT, int *bOverflow)$/;"	f
MakeInChIOutOfStrFromINChI2	src/formats/libinchi/ichirvr1.c	/^int MakeInChIOutOfStrFromINChI2( ICHICONST INPUT_PARMS *ip_inp, STRUCT_DATA *sd_inp, StrFromINChI *pStruct,$/;"	f
MakeInstance	include/openbabel/groupcontrib.h	/^  virtual OBGroupContrib* MakeInstance(const std::vector<std::string>& textlines)$/;"	f	class:OpenBabel::OBGroupContrib
MakeInstance	include/openbabel/optransform.h	/^  virtual OpTransform* MakeInstance(const std::vector<std::string>& textlines)$/;"	f	class:OpenBabel::OpTransform
MakeInstance	include/openbabel/plugin.h	/^  virtual OBPlugin* MakeInstance(const std::vector<std::string>&){return NULL;}$/;"	f	class:OpenBabel::OBPlugin
MakeInstance	src/descriptors/cmpdfilter.cpp	/^  virtual CompoundFilter* MakeInstance(const std::vector<std::string>& textlines)$/;"	f	class:OpenBabel::CompoundFilter
MakeInstance	src/descriptors/smartsdescriptors.cpp	/^    virtual SmartsDescriptor* MakeInstance(const std::vector<std::string>& textlines)$/;"	f	class:OpenBabel::SmartsDescriptor
MakeInstance	src/fingerprints/finger3.cpp	/^  virtual PatternFP* MakeInstance(const std::vector<std::string>& textlines)$/;"	f	class:OpenBabel::PatternFP
MakeInstance	src/ops/loader.cpp	/^  virtual OBDefine* MakeInstance(const std::vector<std::string>& textlines)$/;"	f	class:OpenBabel::OBDefine
MakeIsoAtomString	src/formats/libinchi/ichiprt2.c	/^int MakeIsoAtomString( INChI_IsotopicAtom   *IsotopicAtom, int nNumberOfIsotopicAtoms,$/;"	f
MakeIsoHString	src/formats/libinchi/ichiprt2.c	/^int MakeIsoHString( int num_iso_H[], char *szLinearCT, int nLen_szLinearCT, int nCtMode, int *bOverflow)$/;"	f
MakeIsoTautString	src/formats/libinchi/ichiprt2.c	/^int MakeIsoTautString( INChI_IsotopicTGroup   *IsotopicTGroup, int nNumberOfIsotopicTGroups,$/;"	f
MakeIsotopicHGroup	src/formats/libinchi/ichitaut.c	/^int MakeIsotopicHGroup(inp_ATOM *at, int num_atoms, S_GROUP_INFO *s_group_info, $/;"	f
MakeMult	src/formats/libinchi/ichiprt2.c	/^int MakeMult( int mult, const char *szTailingDelim, char *szLinearCT, int nLen_szLinearCT, int nCtMode, int *bOverflow)$/;"	f
MakeNewInstance	include/openbabel/format.h	/^    virtual OBFormat* MakeNewInstance()$/;"	f	class:OpenBabel::OBFormat
MakeNewInstance	src/forcefields/forcefieldgaff.h	/^      virtual OBForceFieldGaff* MakeNewInstance()$/;"	f	class:OpenBabel::OBForceFieldGaff
MakeNewInstance	src/forcefields/forcefieldghemical.h	/^      virtual OBForceFieldGhemical* MakeNewInstance()$/;"	f	class:OpenBabel::OBForceFieldGhemical
MakeNewInstance	src/forcefields/forcefieldmm2.h	/^      virtual OBForceFieldMM2* MakeNewInstance(){ return new OBForceFieldMM2(*this); }$/;"	f	class:OpenBabel::OBForceFieldMM2
MakeNewInstance	src/forcefields/forcefieldmmff94.h	/^      virtual OBForceFieldMMFF94* MakeNewInstance()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
MakeNewInstance	src/forcefields/forcefielduff.h	/^     virtual OBForceFieldUFF* MakeNewInstance()$/;"	f	class:OpenBabel::OBForceFieldUFF
MakeNewOrd	src/formats/libinchi/inchi_dll.c	/^void MakeNewOrd( int num_atoms, AT_RANK *new_ord )$/;"	f
MakeOneInChIOutOfStrFromINChI	src/formats/libinchi/ichirvr1.c	/^int MakeOneInChIOutOfStrFromINChI( ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, StrFromINChI *pStruct,$/;"	f
MakeOneInChIOutOfStrFromINChI2	src/formats/libinchi/ichirvr1.c	/^int MakeOneInChIOutOfStrFromINChI2(ICHICONST INPUT_PARMS *ip_inp, STRUCT_DATA *sd_inp, $/;"	f
MakePluginsMenu	src/GUI/OBGUI.cpp	/^void OBGUIFrame::MakePluginsMenu()$/;"	f	class:OBGUIFrame
MakeProtonComponent	src/formats/libinchi/ichirvr4.c	/^int MakeProtonComponent( StrFromINChI *pStruct, int iComponent, int num_prot )$/;"	f
MakeQueriesFromMolInFile	src/ops/opisomorph.cpp	/^bool MakeQueriesFromMolInFile(vector<OBQuery*>& queries, const std::string& filename, int* pnAtoms, bool noH)$/;"	f	namespace:OpenBabel
MakeRGB	src/depict/svgpainter.cpp	/^  string SVGPainter::MakeRGB(OBColor color)$/;"	f	class:OpenBabel::SVGPainter
MakeRefs	include/openbabel/stereo/stereo.h	/^    static Refs MakeRefs(Ref ref1, Ref ref2, Ref ref3, Ref ref4 = NoRef)$/;"	f	struct:OpenBabel::OBStereo
MakeRemovedProtonsString	src/formats/libinchi/util.c	/^int MakeRemovedProtonsString( int nNumRemovedProtons, NUM_H *nNumExchgIsotopicH, NUM_H *nNumRemovedProtonsIsotopic,$/;"	f
MakeSelection	src/conformersearch.cpp	/^  double OBConformerSearch::MakeSelection()$/;"	f	class:OpenBabel::OBConformerSearch
MakeSingleBondsMetal2ChargedHeteroat	src/formats/libinchi/ichirvr4.c	/^int MakeSingleBondsMetal2ChargedHeteroat(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
MakeStereoString	src/formats/libinchi/ichiprt2.c	/^int MakeStereoString( AT_NUMB *at1, AT_NUMB *at2, S_CHAR *parity, int bAddDelim, int nLenCT,$/;"	f
MakeTautString	src/formats/libinchi/ichiprt2.c	/^int MakeTautString( AT_NUMB *LinearCT, int nLenCT, int bAddDelim,$/;"	f
MapAll	src/isomorphism.cpp	/^      void MapAll(const OBMol *queried, Mappings &maps, const OBBitVec &mask, std::size_t maxMemory)$/;"	f	class:OpenBabel::VF2Mapper
MapAllFunctor	src/isomorphism.cpp	/^      MapAllFunctor(OBIsomorphismMapper::Mappings &maps, std::size_t maxMemory)$/;"	f	class:OpenBabel::MapAllFunctor
MapAllFunctor	src/isomorphism.cpp	/^  class MapAllFunctor : public OBIsomorphismMapper::Functor$/;"	c	namespace:OpenBabel	file:
MapFirst	src/isomorphism.cpp	/^      void MapFirst(const OBMol *queried, Mapping &map, const OBBitVec &mask)$/;"	f	class:OpenBabel::VF2Mapper
MapGeneric	src/isomorphism.cpp	/^      void MapGeneric(Functor &functor, const OBMol *queried, const OBBitVec &mask)$/;"	f	class:OpenBabel::VF2Mapper
MapNext	src/isomorphism.cpp	/^      void MapNext(State &state, OBQueryAtom *queryAtom, OBAtom *queriedAtom)$/;"	f	class:OpenBabel::VF2Mapper
MapUnique	src/isomorphism.cpp	/^      void MapUnique(const OBMol *queried, Mappings &maps, const OBBitVec &mask)$/;"	f	class:OpenBabel::VF2Mapper
Mapping	include/openbabel/isomorphism.h	/^      typedef std::vector< std::pair<unsigned int,unsigned int> > Mapping;$/;"	t	class:OpenBabel::OBIsomorphismMapper
Mappings	include/openbabel/isomorphism.h	/^      typedef std::vector< Mapping > Mappings;$/;"	t	class:OpenBabel::OBIsomorphismMapper
MapsTo	include/openbabel/isomorphism.h	/^  inline bool MapsTo(const OBIsomorphismMapper::Mapping &map, unsigned int queryIndex, unsigned int &queriedIndex)$/;"	f	namespace:OpenBabel
MarkAmbiguousStereo	src/formats/libinchi/ichimak2.c	/^int MarkAmbiguousStereo( sp_ATOM *at, inp_ATOM *norm_at, int bIsotopic, AT_NUMB *pCanonOrd,$/;"	f
MarkAtomsAtTautGroups	src/formats/libinchi/ichi_bns.c	/^int MarkAtomsAtTautGroups(  BN_STRUCT *pBNS, int num_atoms, BN_AATG *pAATG, int nEnd1, int nEnd2 )$/;"	f
MarkChargeGroups	src/formats/libinchi/ichitaut.c	/^int MarkChargeGroups(inp_ATOM *at, int num_atoms, $/;"	f
MarkDisconectedIdenticalToReconnected	src/formats/libinchi/ichirvr7.c	/^int MarkDisconectedIdenticalToReconnected ( InpInChI *pOneInput )$/;"	f
MarkDisconnectedComponents	src/formats/libinchi/strutil.c	/^int MarkDisconnectedComponents( ORIG_ATOM_DATA *orig_at_data, int bProcessOldCompNumbers )$/;"	f
MarkGrowBonds	src/parsmart.cpp	/^  static void MarkGrowBonds(Pattern *pat)$/;"	f	namespace:OpenBabel
MarkKnownEqualStereoBondParities	src/formats/libinchi/ichicans.c	/^int MarkKnownEqualStereoBondParities( sp_ATOM *at, int num_atoms,$/;"	f
MarkKnownEqualStereoCenterParities	src/formats/libinchi/ichicans.c	/^int MarkKnownEqualStereoCenterParities( sp_ATOM *at, int num_atoms,$/;"	f
MarkNonStereoAltBns	src/formats/libinchi/ichi_bns.c	/^int MarkNonStereoAltBns( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, int bUnknAltAsNoStereo )$/;"	f
MarkRingSystemsAltBns	src/formats/libinchi/ichi_bns.c	/^int MarkRingSystemsAltBns( BN_STRUCT* pBNS, int bUnknAltAsNoStereo )$/;"	f
MarkRingSystemsInp	src/formats/libinchi/ichinorm.c	/^int MarkRingSystemsInp( inp_ATOM *at, int num_atoms, int start )$/;"	f
MarkSaltChargeGroups	src/formats/libinchi/ichitaut.c	/^int MarkSaltChargeGroups ( inp_ATOM *at, int num_atoms, S_GROUP_INFO *s_group_info,$/;"	f
MarkSaltChargeGroups2	src/formats/libinchi/ichitaut.c	/^int MarkSaltChargeGroups2 ( inp_ATOM *at, int num_atoms, S_GROUP_INFO *s_group_info,$/;"	f
MarkTautomerGroups	src/formats/libinchi/ichitaut.c	/^int MarkTautomerGroups( inp_ATOM *at, int num_atoms, T_GROUP_INFO *t_group_info, C_GROUP_INFO *c_group_info$/;"	f
MarkUnusedAndEmptyLayers	src/formats/libinchi/ichimake.c	/^int MarkUnusedAndEmptyLayers( char sDifSegs[][DIFS_LENGTH] )$/;"	f
MatVecMul	src/formats/adfformat.cpp	/^    void MatVecMul( const double xColumn[ 3 ],$/;"	f	class:OpenBabel::OBT41Format	file:
Match	src/parsmart.cpp	/^  bool OBSmartsPattern::Match(OBMol &mol, std::vector<std::vector<int> > & mlist,$/;"	f	class:OpenBabel::OBSmartsPattern
Match	src/parsmart.cpp	/^  bool OBSmartsPattern::Match(OBMol &mol,bool single)$/;"	f	class:OpenBabel::OBSmartsPattern
Match	src/parsmart.cpp	/^  void OBSSMatch::Match(std::vector<std::vector<int> > &mlist,int bidx)$/;"	f	class:OpenBabel::OBSSMatch
Match2Constraints	src/chains.cpp	/^  bool OBChainsParser::Match2Constraints(Template *tmpl, OBAtom *na, OBAtom *nb)$/;"	f	class:OpenBabel::OBChainsParser
Match3Constraints	src/chains.cpp	/^  bool OBChainsParser::Match3Constraints(Template *tmpl, OBAtom *na, OBAtom *nb, OBAtom *nc)$/;"	f	class:OpenBabel::OBChainsParser
Match4Constraints	src/chains.cpp	/^  bool OBChainsParser::Match4Constraints(Template *tmpl, OBAtom *na, OBAtom *nb, OBAtom *nc, OBAtom *nd)$/;"	f	class:OpenBabel::OBChainsParser
MatchConstraint	src/chains.cpp	/^  bool OBChainsParser::MatchConstraint(OBAtom *atom, int mask)$/;"	f	class:OpenBabel::OBChainsParser
MatchPairData	src/descriptor.cpp	/^  bool OBDescriptor::MatchPairData(OBBase* pOb, string& s)$/;"	f	class:OpenBabel::OBDescriptor
MatchPairData	src/ops/largest.cpp	/^bool OpLargest::MatchPairData(OBBase* pOb, string& s)$/;"	f	class:OpenBabel::OpLargest
MatchType	include/openbabel/parsmart.h	/^    enum MatchType {All, Single, AllUnique};$/;"	g	class:OpenBabel::OBSmartsPattern
Matches	include/openbabel/query.h	/^      virtual bool Matches(const OBAtom *atom) const$/;"	f	class:OpenBabel::OBQueryAtom
Matches	include/openbabel/query.h	/^      virtual bool Matches(const OBBond *bond) const$/;"	f	class:OpenBabel::OBQueryBond
Matches	src/isomorphism.cpp	/^      bool Matches(const OBAtom *atom) const$/;"	f	class:OpenBabel::OBAutomorphismQueryAtom
MatchesSMARTS	src/atom.cpp	/^  bool OBAtom::MatchesSMARTS(const char *pattern)$/;"	f	class:OpenBabel::OBAtom
MatrixData	include/openbabel/base.h	/^      MatrixData =        26,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
MaxAxisOrder	src/pointgroup.cpp	/^    int                    MaxAxisOrder          ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
MaxMonoAtom	include/openbabel/chains.h	24;"	d
MaxMonoBond	include/openbabel/chains.h	25;"	d
MaxOptCycles	src/pointgroup.cpp	/^    int                    MaxOptCycles          ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
MaxOptStep	src/pointgroup.cpp	/^    double                 MaxOptStep            ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
MaxPositiveClock	include/inchi/ichitime.h	88;"	d
MaxPositiveClock	src/formats/libinchi/ichicano.c	/^clock_t MaxPositiveClock = 0;$/;"	v
Md	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
MemberOfRingCount	src/atom.cpp	/^  unsigned int OBAtom::MemberOfRingCount() const$/;"	f	class:OpenBabel::OBAtom
MemberOfRingSize	src/atom.cpp	/^  unsigned int OBAtom::MemberOfRingSize() const$/;"	f	class:OpenBabel::OBAtom
Members	include/openbabel/json/json.h	/^      typedef std::vector<std::string> Members;$/;"	t	class:Json::Value
MergeCleanIsoSortKeys	src/formats/libinchi/ichican2.c	/^void MergeCleanIsoSortKeys( AT_ISO_SORT_KEY * isk1, AT_ISO_SORT_KEY * isk2, int len )$/;"	f
MergeSaltTautGroups	src/formats/libinchi/ichitaut.c	/^int MergeSaltTautGroups( inp_ATOM *at, int num_atoms, S_GROUP_INFO *s_group_info,$/;"	f
MergeStructureComponents	src/formats/libinchi/ichirvr7.c	/^int MergeStructureComponents( ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, long num_inp, char *szCurHdr,$/;"	f
Method	include/openbabel/data.h	/^    std::string Method()  { return _method; }$/;"	f	class:OpenBabel::OBAtomHOF
Mg	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
MidT	include/openbabel/kinetics.h	/^  double LoT, MidT, HiT;$/;"	m	class:OpenBabel::OBNasaThermoData
MinNegativeClock	include/inchi/ichitime.h	89;"	d
MinNegativeClock	src/formats/libinchi/ichicano.c	/^clock_t MinNegativeClock = 0;$/;"	v
MinOptStep	src/pointgroup.cpp	/^    double                 MinOptStep            ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
MirrorStereoSpecificProbes	include/openbabel/spectrophore.h	/^                            MirrorStereoSpecificProbes,$/;"	e	enum:OpenBabel::OBSpectrophore::StereoOption
Mn	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
Mo	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Mode	src/formats/smiley.h	/^      enum Mode {$/;"	g	class:Smiley::Parser
MolArray	include/openbabel/obmolecformat.h	/^  static std::vector<OBMol> MolArray; \/\/!< Used in --separate option$/;"	m	class:OpenBabel::OBMoleculeFormat
MolArray	src/obmolecformat.cpp	/^  std::vector<OBMol> OBMoleculeFormat::MolArray;$/;"	m	class:OpenBabel::OBMoleculeFormat	file:
MolCount	src/formats/CSRformat.cpp	/^    int MolCount; \/\/was = 1;$/;"	m	class:OpenBabel::CSRFormat	file:
MolMap	src/formats/chemkinformat.cpp	/^  typedef map<string,obsharedptr<OBMol> > MolMap;$/;"	t	class:OpenBabel::ChemKinFormat	file:
MolMap	src/formats/xml/cmlreactformat.cpp	/^  typedef map<string,obsharedptr<OBMol> > MolMap;$/;"	t	class:OpenBabel::CMLReactFormat	file:
MolReportFormat	src/formats/molreport.cpp	/^    MolReportFormat()$/;"	f	class:OpenBabel::MolReportFormat
MolReportFormat	src/formats/molreport.cpp	/^  class MolReportFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MolSet	src/formats/chemkinformat.cpp	/^  typedef set<obsharedptr<OBMol> > MolSet;$/;"	t	class:OpenBabel::ChemKinFormat	file:
MolecularDynamicsTakeNSteps	src/forcefield.cpp	/^  void OBForceField::MolecularDynamicsTakeNSteps(int n, double T, double timestep, int method)$/;"	f	class:OpenBabel::OBForceField
MolecularPlane	src/pointgroup.cpp	/^    SYMMETRY_ELEMENT *     MolecularPlane        ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
MolproInputFormat	src/formats/molproformat.cpp	/^    MolproInputFormat()$/;"	f	class:OpenBabel::MolproInputFormat
MolproInputFormat	src/formats/molproformat.cpp	/^  class MolproInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MolproOutputFormat	src/formats/molproformat.cpp	/^    MolproOutputFormat()$/;"	f	class:OpenBabel::MolproOutputFormat
MolproOutputFormat	src/formats/molproformat.cpp	/^  class MolproOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
MolsHaveBeenAdded	src/formats/xml/cmlreactformat.cpp	/^  bool MolsHaveBeenAdded; \/\/separate OBMols during output$/;"	m	class:OpenBabel::CMLReactFormat	file:
MonOpStruct	src/chains.cpp	/^  } MonOpStruct;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon70	file:
MonoAtom	src/chains.cpp	/^  static MonoAtomType MonoAtom[MaxMonoAtom];$/;"	m	namespace:OpenBabel	file:
MonoAtomCount	src/chains.cpp	/^  static int MonoAtomCount;$/;"	m	namespace:OpenBabel	file:
MonoAtomType	src/chains.cpp	/^  } MonoAtomType;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon68	file:
MonoBond	src/chains.cpp	/^  static MonoBondType MonoBond[MaxMonoBond];$/;"	m	namespace:OpenBabel	file:
MonoBondCount	src/chains.cpp	/^  static int MonoBondCount;$/;"	m	namespace:OpenBabel	file:
MonoBondType	src/chains.cpp	/^  } MonoBondType;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon69	file:
Monoclinic	include/openbabel/generic.h	/^                       Monoclinic,$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
MoreFilesToCome	include/openbabel/obconversion.h	/^      bool		  MoreFilesToCome;$/;"	m	class:OpenBabel::OBConversion
MoreParms	include/inchi/aux2atom.h	2361;"	d
MoveChargeFromHeteroatomsToMetals	src/formats/libinchi/ichirvr2.c	/^int MoveChargeFromHeteroatomsToMetals( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
MoveChargeToMakeCenerpoints	src/formats/libinchi/ichirvr2.c	/^int MoveChargeToMakeCenerpoints(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
MoveChargeToRemoveCenerpoints	src/formats/libinchi/ichirvr4.c	/^int MoveChargeToRemoveCenerpoints(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
MoveMobileHToAvoidFixedBonds	src/formats/libinchi/ichirvr2.c	/^int MoveMobileHToAvoidFixedBonds(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
MovePlusFromS2DiaminoCarbon	src/formats/libinchi/ichirvr2.c	/^int MovePlusFromS2DiaminoCarbon( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
MoveRadToAtomsAddCharges	src/formats/libinchi/ichirvr2.c	/^int MoveRadToAtomsAddCharges( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
MoveToOrigin	src/math/align.cpp	/^  Eigen::Vector3d OBAlign::MoveToOrigin(Eigen::MatrixXd &coords) {$/;"	f	class:OpenBabel::OBAlign
Mt	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Multiplicity	include/openbabel/data.h	/^    int Multiplicity()    { return _multiplicity; }$/;"	f	class:OpenBabel::OBAtomHOF
MyDialog	src/GUI/OBGUI.h	/^class MyDialog : public wxDialog$/;"	c
MyFindChildren	src/formats/smilesformat.cpp	/^  void OBMol2Cansmi::MyFindChildren(OBMol &mol, vector<OBAtom*> &children, OBBitVec &seen, OBAtom *end)$/;"	f	class:OpenBabel::OBMol2Cansmi
N	src/formats/confabreport.cpp	/^  unsigned int N;$/;"	m	class:OpenBabel::ConfabReport	file:
N	src/formats/lpmdformat.cpp	/^  int N; \/\/the number of atoms$/;"	m	class:OpenBabel::LpmdFormat	file:
N	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
N	src/ops/opconfab.cpp	/^      unsigned int N;$/;"	m	class:OpenBabel::OpConfab	file:
NAD	include/openbabel/residue.h	/^      NAD   = 50,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
NALKALYATOMS	src/mcdlutil.cpp	117;"	d	file:
NALKALYEARTHATOMS	src/mcdlutil.cpp	119;"	d	file:
NAN	src/formats/mdffformat.cpp	26;"	d	file:
NAP	include/openbabel/residue.h	/^      NAP   = 52,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
NAROMMAX	src/mcdlutil.cpp	143;"	d	file:
NBEADS_PATTERN	src/formats/nwchemformat.cpp	/^static const char* NBEADS_PATTERN = "@ Number of replicas";$/;"	m	namespace:OpenBabel	file:
NBONDTYPES	src/mcdlutil.cpp	326;"	d	file:
NCHROMIUMATOMS	src/mcdlutil.cpp	127;"	d	file:
NCOPPERATOMS	src/mcdlutil.cpp	135;"	d	file:
NDATABASE_MOLECULES	src/mcdlutil.cpp	173;"	d	file:
NDP	include/openbabel/residue.h	/^      NDP   = 53$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
NDecisionTree	include/openbabel/chains.h	/^      void *NDecisionTree; \/\/!< ByteCode decision tree for nucleotides$/;"	m	class:OpenBabel::OBChainsParser
NEB_BEAD_ENERGY_PATTERN	src/formats/nwchemformat.cpp	/^static const char* NEB_BEAD_ENERGY_PATTERN = "neb: final energy";$/;"	m	namespace:OpenBabel	file:
NEB_BEAD_START_PATTERN	src/formats/nwchemformat.cpp	/^static const char* NEB_BEAD_START_PATTERN = "neb: running bead";$/;"	m	namespace:OpenBabel	file:
NEB_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* NEB_CALCULATION_PATTERN = "NWChem Minimum Energy Pathway Program (NEB)";$/;"	m	namespace:OpenBabel	file:
NEB_NBEADS_PATTERN	src/formats/nwchemformat.cpp	/^static const char* NEB_NBEADS_PATTERN = "number of images in path";$/;"	m	namespace:OpenBabel	file:
NEED_SNPRINTF_ONLY	src/snprintf.c	293;"	d	file:
NEGATIVE	include/openbabel/residue.h	/^      NEGATIVE    = 11,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
NEIGH_LIST	include/inchi/ichicant.h	/^typedef AT_RANK  *NEIGH_LIST;$/;"	t
NEIGH_LIST_LEN	include/inchi/ichicant.h	67;"	d
NEIGH_MODE_CHAIN	src/formats/libinchi/ichimap2.c	1780;"	d	file:
NEIGH_MODE_RING	src/formats/libinchi/ichimap2.c	1779;"	d	file:
NELEMMAX	include/openbabel/mcdlutil.h	/^  static const int NELEMMAX=120;$/;"	m	namespace:OpenBabel
NELEMMCDL	include/openbabel/mcdlutil.h	43;"	d
NEU	src/data_utilities.cpp	99;"	d	file:
NEUTRAL	include/openbabel/residue.h	/^      NEUTRAL     = 12,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
NEUTRALIZE_ENDPOINTS	include/inchi/mode.h	405;"	d
NEUTRAL_STATE	src/formats/libinchi/ichirvr1.c	1230;"	d	file:
NEUTRAL_STATE	src/formats/libinchi/ichirvr1.c	845;"	d	file:
NEUTRAL_STATE	src/formats/libinchi/util.c	57;"	d	file:
NEW_STEREOCENTER_CHECK	include/inchi/mode.h	468;"	d
NEXACTATOMS	src/mcdlutil.cpp	115;"	d	file:
NHALOGENS	src/mcdlutil.cpp	141;"	d	file:
NHEAVY_METALS	src/mcdlutil.cpp	145;"	d	file:
NHETERO	src/mcdlutil.cpp	142;"	d	file:
NLIGHT_METALS	src/mcdlutil.cpp	144;"	d	file:
NLIKEFEATOMS	src/mcdlutil.cpp	131;"	d	file:
NMANGANESEATOMS	src/mcdlutil.cpp	129;"	d	file:
NMETALS	src/mcdlutil.cpp	140;"	d	file:
NOCHARGE	src/formats/cifformat.cpp	29;"	d	file:
NONE	src/formats/libinchi/ichiqueu.c	/^const int NONE = (AT_RANK)~0;$/;"	v
NOOTHER_MASK	src/mcdlutil.cpp	/^    static int const NOOTHER_MASK=1;$/;"	m	class:OpenBabel::TEditedMolecule	file:
NORMALIZE_INP_COORD	include/inchi/mode.h	488;"	d
NORMAL_ISO	src/formats/libinchi/strutil.c	3826;"	d	file:
NORM_ATOM	include/inchi/inchi_api.h	/^} NORM_ATOM;$/;"	t	typeref:struct:tagNormAtom
NORM_ATOM	include/inchi_api.h	/^} NORM_ATOM;$/;"	t	typeref:struct:tagNormAtom
NORM_ATOMS	include/inchi/inchi_api.h	/^} NORM_ATOMS;$/;"	t	typeref:struct:tagNormAtomData
NORM_ATOMS	include/inchi_api.h	/^} NORM_ATOMS;$/;"	t	typeref:struct:tagNormAtomData
NORM_CANON_FLAGS	include/inchi/inpdef.h	/^} NORM_CANON_FLAGS;$/;"	t	typeref:struct:tagNormCanonFlags
NOTREADABLE	include/openbabel/format.h	31;"	d
NOTWRITABLE	include/openbabel/format.h	35;"	d
NOT_AT_DERIV	src/formats/libinchi/ichinorm.c	1058;"	d	file:
NOT_IN_RINGS	src/kekulize.cpp	47;"	d	file:
NOT_READ_INT	include/inchi/ichirvrs.h	53;"	d
NOT_WELL_DEF_UNDF	src/formats/libinchi/ichimap2.c	1787;"	d	file:
NOT_WELL_DEF_UNKN	src/formats/libinchi/ichimap2.c	1786;"	d	file:
NO_ATOM	include/inchi/inchi_api.h	434;"	d
NO_ATOM	include/inchi_api.h	435;"	d
NO_DUMMY_DECL	include/zconf.h	130;"	d
NO_ENDPOINT	src/formats/libinchi/ichitaut.c	2076;"	d	file:
NO_ENDPOINT	src/formats/libinchi/ichitaut.c	2470;"	d	file:
NO_ISOLATED_NON_6RING_AROM_BOND	include/inchi/extr_ct.h	281;"	d
NO_ORD_VAL	src/formats/libinchi/ichinorm.c	1060;"	d	file:
NO_UNORDERED_MAP	src/ops/unique.cpp	32;"	d	file:
NO_VALUE_INT	include/inchi/ichirvrs.h	52;"	d
NO_VERTEX	include/inchi/ichi_bns.h	144;"	d
NO_vsnprintf	include/zconf.h	305;"	d
NO_vsnprintf	include/zconf.h	309;"	d
NPLATINUMATOMS	src/mcdlutil.cpp	133;"	d	file:
NSTRLEN	src/formats/libinchi/ichiread.c	373;"	d	file:
NTITANATOMS	src/mcdlutil.cpp	123;"	d	file:
NTRIVALENTATOMS	src/mcdlutil.cpp	121;"	d	file:
NUCLEIC_BACKBONE	include/openbabel/residue.h	/^      NUCLEIC_BACKBONE = 5,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
NUCLEO	include/openbabel/residue.h	/^      NUCLEO       = 4,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
NUCLEOMAX	src/chains.cpp	67;"	d	file:
NUMH	include/inchi/inpdef.h	80;"	d
NUMH	src/formats/libinchi/strutil.c	96;"	d	file:
NUM_ATOM_CHARGES	src/formats/libinchi/ichirvr1.c	1231;"	d	file:
NUM_ATOM_CHARGES	src/formats/libinchi/ichirvr1.c	846;"	d	file:
NUM_ATOM_CHARGES	src/formats/libinchi/util.c	58;"	d	file:
NUM_CENTERS_N	src/formats/libinchi/strutil.c	143;"	d	file:
NUM_CHEM_ELEMENTS	include/inchi/extr_ct.h	53;"	d
NUM_COORD	include/inchi/ichisize.h	60;"	d
NUM_C_TYPES	src/formats/libinchi/ichitaut.c	1287;"	d	file:
NUM_ELEM	src/formats/libinchi/ichiread.c	/^} NUM_ELEM;$/;"	t	typeref:struct:tagNumElem	file:
NUM_H	include/inchi/ichisize.h	/^typedef signed short NUM_H;$/;"	t
NUM_HS	include/inchi/inchi_api.h	/^typedef signed short NUM_HS; $/;"	t
NUM_HS	include/inchi_api.h	/^typedef signed short NUM_HS; $/;"	t
NUM_H_ISOTOPES	include/inchi/inchi_api.h	106;"	d
NUM_H_ISOTOPES	include/inchi/incomdef.h	60;"	d
NUM_H_ISOTOPES	include/inchi_api.h	107;"	d
NUM_ISO_H	include/inchi/inpdef.h	79;"	d
NUM_ISO_H	src/formats/libinchi/strutil.c	95;"	d	file:
NUM_ISO_Hk	include/inchi/aux2atom.h	192;"	d
NUM_ISO_Hk	include/inchi/aux2atom.h	207;"	d
NUM_ISO_Hk	include/inchi/aux2atom.h	2366;"	d
NUM_KINDS_OF_GROUPS	include/inchi/ichi_bns.h	112;"	d
NUM_SEGM	src/formats/libinchi/strutil.c	2911;"	d	file:
NUM_TCGROUP_TYPES	include/inchi/ichirvrs.h	/^    NUM_TCGROUP_TYPES \/* number of group types *\/$/;"	e	enum:tagTCGroupTypes
NUM_VERSIONS	include/inchi/ichiparm.h	2548;"	d
NUM_VERSIONS	include/inchi/ichiparm.h	2654;"	d
NUM_VF	src/formats/libinchi/ichirvr1.c	3549;"	d	file:
NV	src/formats/libinchi/ichican2.c	/^} NV;$/;"	t	typeref:struct:tagNodeValues	file:
NVANADIUMATOMS	src/mcdlutil.cpp	125;"	d	file:
NWChemInputFormat	src/formats/nwchemformat.cpp	/^    NWChemInputFormat()$/;"	f	class:OpenBabel::NWChemInputFormat
NWChemInputFormat	src/formats/nwchemformat.cpp	/^  class NWChemInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
NWChemOutputFormat	src/formats/nwchemformat.cpp	/^    NWChemOutputFormat()$/;"	f	class:OpenBabel::NWChemOutputFormat
NWChemOutputFormat	src/formats/nwchemformat.cpp	/^  class NWChemOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
NZINKATOMS	src/mcdlutil.cpp	137;"	d	file:
N_PROPERTIES	include/openbabel/spectrophore.h	46;"	d
N_UNIQUE_WEIGHTS	src/formats/libinchi/ikey_base26.c	1164;"	d	file:
N_V_STEREOBONDS	include/inchi/mode.h	386;"	d
Na	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
Na	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
Name	src/formats/fastaformat.cpp	/^    char Name[6]; \/\/ usually three-letter code$/;"	m	struct:OpenBabel::ResidueRecord	file:
NameIndexType	include/openbabel/obmolecformat.h	/^  typedef std::map<std::string, unsigned> NameIndexType;$/;"	t	class:OpenBabel::OBMoleculeFormat
NameIndexType	include/openbabel/obmolecformat.h	/^  typedef std::tr1::unordered_map<std::string, unsigned> NameIndexType;$/;"	t	class:OpenBabel::OBMoleculeFormat
NameIndexType	include/openbabel/obmolecformat.h	/^  typedef std::unordered_map<std::string, unsigned> NameIndexType;$/;"	t	class:OpenBabel::OBMoleculeFormat
NamespaceURI	src/formats/svgformat.cpp	/^  virtual const char* NamespaceURI()const{return "http:\/\/www.w3.org\/2000\/svg";}$/;"	f	class:OpenBabel::SVGFormat
NamespaceURI	src/formats/xml/cdxmlformat.cpp	/^	virtual const char* NamespaceURI()const{return "http:\/\/www.cambridgesoft.com\/xml\/cdxml.dtd";}$/;"	f	class:OpenBabel::ChemDrawXMLFormat
NamespaceURI	src/formats/xml/cmlformat.cpp	/^    virtual const char* NamespaceURI()const{return "http:\/\/www.xml-cml.org\/schema";}$/;"	f	class:OpenBabel::CMLFormat
NamespaceURI	src/formats/xml/cmlreactformat.cpp	/^  virtual const char* NamespaceURI()const$/;"	f	class:OpenBabel::CMLReactFormat
NamespaceURI	src/formats/xml/pubchem.cpp	/^	virtual const char* NamespaceURI()const{return "http:\/\/www.ncbi.nlm.nih.gov";}$/;"	f	class:OpenBabel::PubChemFormat
NamespaceURI	src/formats/xml/xmlformat.cpp	/^  const char* NamespaceURI()const{return "Undefined";};$/;"	f	class:OpenBabel::XMLFormat
Namespaces	include/openbabel/xml.h	/^      static NsMapType& Namespaces()$/;"	f	class:OpenBabel::XMLConversion
Nb	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
Nb	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
NborInfo	src/fingerprints/fingerecfp.cpp	/^  NborInfo(unsigned int o, unsigned int i) : order(o), idx(i) {}$/;"	f	struct:OpenBabel::NborInfo
NborInfo	src/fingerprints/fingerecfp.cpp	/^struct NborInfo {$/;"	s	namespace:OpenBabel	file:
Nd	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Ne	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
Needs2addXmlEntityRefs	src/formats/libinchi/ichiprt1.c	/^int Needs2addXmlEntityRefs( const char *s )$/;"	f
Negate	include/openbabel/bitvec.h	/^      void Negate()$/;"	f	class:OpenBabel::OBBitVec
NeighList	include/inchi/ichicant.h	/^    NEIGH_LIST       *NeighList;$/;"	m	struct:tagCanonStat
NeighList	include/inchi/ichicant.h	/^    NEIGH_LIST     *NeighList;  \/* length = num_at_tg *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
NeighborSymmetryClasses	src/stereo/stereoutil.h	/^  enum NeighborSymmetryClasses$/;"	g	namespace:OpenBabel
NewAtom	src/mol.cpp	/^  OBAtom *OBMol::NewAtom()$/;"	f	class:OpenBabel::OBMol
NewAtom	src/mol.cpp	/^  OBAtom *OBMol::NewAtom(unsigned long id)$/;"	f	class:OpenBabel::OBMol
NewBond	src/mol.cpp	/^  OBBond *OBMol::NewBond()$/;"	f	class:OpenBabel::OBMol
NewBond	src/mol.cpp	/^  OBBond *OBMol::NewBond(unsigned long id)$/;"	f	class:OpenBabel::OBMol
NewCanvas	src/depict/asciipainter.cpp	/^  void ASCIIPainter::NewCanvas(double width, double height)$/;"	f	class:OpenBabel::ASCIIPainter
NewCanvas	src/depict/cairopainter.cpp	/^  void CairoPainter::NewCanvas(double width, double height)$/;"	f	class:OpenBabel::CairoPainter
NewCanvas	src/depict/commandpainter.cpp	/^  void CommandPainter::NewCanvas(double width, double height)$/;"	f	class:OpenBabel::CommandPainter
NewCanvas	src/depict/svgpainter.cpp	/^  void SVGPainter::NewCanvas(double width, double height)$/;"	f	class:OpenBabel::SVGPainter
NewData	src/formats/adfformat.cpp	/^OBGridData *OBT41Format::NewData(const T41GridData &gd)$/;"	f	class:OpenBabel::OBT41Format
NewExtension	src/obutil.cpp	/^  string NewExtension(string &src,char *ext)$/;"	f	namespace:OpenBabel
NewPerceiveKekuleBonds	src/kekulize.cpp	/^  void OBMol::NewPerceiveKekuleBonds()$/;"	f	class:OpenBabel::OBMol
NewResidue	include/openbabel/atom.h	/^      void NewResidue()$/;"	f	class:OpenBabel::OBAtom
NewResidue	src/mol.cpp	/^  OBResidue *OBMol::NewResidue()$/;"	f	class:OpenBabel::OBMol
Newton2Num	include/openbabel/forcefield.h	/^      Simple, Newton2Num$/;"	e	enum:OpenBabel::LineSearchType::__anon42
Newton2NumLineSearch	src/forcefield.cpp	/^  double OBForceField::Newton2NumLineSearch(double *direction)$/;"	f	class:OpenBabel::OBForceField
Next	include/openbabel/rotor.h	/^      bool Next()$/;"	f	class:OBRotorKeys
NextAtom	src/mol.cpp	/^  OBAtom *OBMol::NextAtom(OBAtomIterator &i)$/;"	f	class:OpenBabel::OBMol
NextAtom	src/residue.cpp	/^  OBAtom *OBResidue::NextAtom(vector<OBAtom*>::iterator &i)$/;"	f	class:OpenBabel::OBResidue
NextBit	src/bitvec.cpp	/^  int OBBitVec::NextBit(int last_bit_offset) const$/;"	f	class:OpenBabel::OBBitVec
NextBond	src/atom.cpp	/^  OBBond *OBAtom::NextBond(OBBondIterator &i)$/;"	f	class:OpenBabel::OBAtom
NextBond	src/mol.cpp	/^  OBBond *OBMol::NextBond(OBBondIterator &i)$/;"	f	class:OpenBabel::OBMol
NextCandidate	src/isomorphism.cpp	/^      Candidate NextCandidate(State &state, const Candidate &lastCandidate)$/;"	f	class:OpenBabel::VF2Mapper
NextConformer	include/openbabel/mol.h	/^    double  *NextConformer(std::vector<double*>::iterator&i)$/;"	f	class:OpenBabel::OBMol
NextFloat	src/rand.cpp	/^  double OBRandom::NextFloat()$/;"	f	class:OpenBabel::OBRandom
NextGeneration	src/conformersearch.cpp	/^  void OBConformerSearch::NextGeneration()$/;"	f	class:OpenBabel::OBConformerSearch
NextInt	src/rand.cpp	/^  int OBRandom::NextInt()$/;"	f	class:OpenBabel::OBRandom
NextInternalCoord	include/openbabel/mol.h	/^    OBInternalCoord *NextInternalCoord(std::vector<OBInternalCoord*>::iterator &i)$/;"	f	class:OpenBabel::OBMol
NextNbrAtom	src/atom.cpp	/^  OBAtom *OBAtom::NextNbrAtom(OBBondIterator &i)$/;"	f	class:OpenBabel::OBAtom
NextPoint	include/openbabel/generic.h	/^    OBFreeGridPoint *NextPoint(OBFreeGridPointIterator &i)$/;"	f	class:OpenBabel::OBFreeGrid
NextResidue	include/openbabel/mol.h	/^    OBResidue *NextResidue(OBResidueIterator &i)$/;"	f	class:OpenBabel::OBMol
NextRing	src/generic.cpp	/^  OBRing *OBRingData::NextRing(std::vector<OBRing*>::iterator &i)$/;"	f	class:OpenBabel::OBRingData
NextRotor	include/openbabel/rotor.h	/^    OBRotor *NextRotor(OBRotorIterator &i)$/;"	f	class:OpenBabel::OBRotorList
NextStereoParity2Test	src/formats/libinchi/ichimap1.c	/^int NextStereoParity2Test( int *stereo_bond_parity, int *sb_parity_calc,$/;"	f
NextTag	src/formats/adfformat.cpp	/^    bool NextTag( istream& is, const std::string& tag ) const$/;"	f	class:OpenBabel::OBT41Format	file:
NextTransform	src/math/spacegroup.cpp	/^  transform3d const * SpaceGroup::NextTransform(transform3dIterator &i) const$/;"	f	class:OpenBabel::SpaceGroup
Next_SB_At_CanonRanks2	src/formats/libinchi/ichimap1.c	/^int Next_SB_At_CanonRanks2( AT_RANK *canon_rank1, AT_RANK *canon_rank2, \/*  canonical numbers *\/$/;"	f
Next_SC_At_CanonRank2	src/formats/libinchi/ichimap1.c	/^int Next_SC_At_CanonRank2( AT_RANK *canon_rank1,    \/*  1st call input: largest canon number mapped so far or 0 *\/$/;"	f
Ni	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
Nitrogen	src/tautomer.cpp	/^      Nitrogen = 7,$/;"	e	enum:OpenBabel::TautomerImpl::AtomNumber	file:
No	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
NoAtomClass	src/formats/smiley.h	/^    NoAtomClass = 4,$/;"	e	enum:Smiley::ErrorCode
NoCharges	src/charges/none.cpp	/^  NoCharges(const char* ID) : OBChargeModel(ID, false){};$/;"	f	class:OpenBabel::NoCharges
NoCharges	src/charges/none.cpp	/^class NoCharges : public OBChargeModel$/;"	c	namespace:OpenBabel	file:
NoClosingAtomBracket	src/formats/smiley.h	/^    NoClosingAtomBracket = 1,$/;"	e	enum:Smiley::ErrorCode
NoId	include/openbabel/mol.h	/^  static const unsigned long NoId = detail::max_value<unsigned long>::result;$/;"	m	namespace:OpenBabel
NoNormalization	include/openbabel/spectrophore.h	/^         enum NormalizationOption {NoNormalization,$/;"	e	enum:OpenBabel::OBSpectrophore::NormalizationOption
NoRef	include/openbabel/stereo/stereo.h	/^      NoRef = UINT_MAX,       \/\/!< No Ref set (invalid Ref)$/;"	e	enum:OpenBabel::OBStereo::__anon65
NoStereoSpecificProbes	include/openbabel/spectrophore.h	/^         enum StereoOption {NoStereoSpecificProbes,$/;"	e	enum:OpenBabel::OBSpectrophore::StereoOption
NoSymbolInBracketAtom	src/formats/smiley.h	/^    NoSymbolInBracketAtom = 2,$/;"	e	enum:Smiley::ErrorCode
NoSymmetryClass	include/openbabel/graphsym.h	/^      static const unsigned int NoSymmetryClass;$/;"	m	class:OpenBabel::OBGraphSym
NoSymmetryClass	src/graphsym.cpp	/^  const unsigned int OBGraphSym::NoSymmetryClass = 0x7FFFFFFF;$/;"	m	class:OpenBabel::OBGraphSym	file:
Node	src/formats/libinchi/ichican2.c	/^typedef AT_NUMB    Node;$/;"	t	file:
NodeSet	include/inchi/ichi_bns.h	/^} NodeSet;$/;"	t	typeref:struct:tagNodeSet
NodeSet	src/formats/libinchi/ichican2.c	/^} NodeSet;$/;"	t	typeref:struct:tagNodeSet	file:
NodeSetCreate	src/formats/libinchi/ichican2.c	/^int NodeSetCreate( NodeSet *pSet, int n, int L )$/;"	f
NodeSetFree	src/formats/libinchi/ichican2.c	/^void NodeSetFree( NodeSet *pSet )$/;"	f
NodeSetFromRadEndpoints	src/formats/libinchi/ichican2.c	/^void NodeSetFromRadEndpoints( NodeSet *cur_nodes, int k, \/*Node *v*\/ Vertex RadEndpoints[], int num_v)$/;"	f
NodeSetFromVertices	src/formats/libinchi/ichican2.c	/^void NodeSetFromVertices( NodeSet *cur_nodes, int l, Node *v, int num_v)$/;"	f
Nodes	include/openbabel/json/json.h	/^      typedef std::stack<Value *> Nodes;$/;"	t	class:Json::Reader
NonPolarHydrogen	include/openbabel/mol.h	/^enum HydrogenType { AllHydrogen, PolarHydrogen, NonPolarHydrogen };$/;"	e	enum:OpenBabel::HydrogenType
NormAtomsNontaut	include/inchi/inchi_api.h	/^    NORM_ATOMS   *NormAtomsNontaut[INCHI_NUM]; $/;"	m	struct:tagINCHIGEN_DATA
NormAtomsNontaut	include/inchi_api.h	/^    NORM_ATOMS   *NormAtomsNontaut[INCHI_NUM]; $/;"	m	struct:tagINCHIGEN_DATA
NormAtomsTaut	include/inchi/inchi_api.h	/^    NORM_ATOMS   *NormAtomsTaut[INCHI_NUM];$/;"	m	struct:tagINCHIGEN_DATA
NormAtomsTaut	include/inchi_api.h	/^    NORM_ATOMS   *NormAtomsTaut[INCHI_NUM];$/;"	m	struct:tagINCHIGEN_DATA
NormOneComponentINChI	src/formats/libinchi/inchi_dll_a2.c	/^int NormOneComponentINChI(INCHIGEN_CONTROL * genctl, int iINChI, int i)$/;"	f
NormOneStructureINChI	src/formats/libinchi/inchi_dll_a2.c	/^int NormOneStructureINChI(INCHIGEN_DATA *gendata, $/;"	f
NormalAxes	src/pointgroup.cpp	/^    SYMMETRY_ELEMENT **    NormalAxes            ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
NormalAxesCount	src/pointgroup.cpp	/^    int                    NormalAxesCount       ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
NormalAxesCounts	src/pointgroup.cpp	/^    int *                  NormalAxesCounts      ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
NormalizationOption	include/openbabel/spectrophore.h	/^         enum NormalizationOption {NoNormalization,$/;"	g	class:OpenBabel::OBSpectrophore
NormalizationTowardsUnitStd	include/openbabel/spectrophore.h	/^                                   NormalizationTowardsUnitStd,$/;"	e	enum:OpenBabel::OBSpectrophore::NormalizationOption
NormalizationTowardsZeroMean	include/openbabel/spectrophore.h	/^                                   NormalizationTowardsZeroMean,$/;"	e	enum:OpenBabel::OBSpectrophore::NormalizationOption
NormalizationTowardsZeroMeanAndUnitStd	include/openbabel/spectrophore.h	/^                                   NormalizationTowardsZeroMeanAndUnitStd};$/;"	e	enum:OpenBabel::OBSpectrophore::NormalizationOption
Normalization_step	src/formats/libinchi/inchi_dll_a2.c	/^int  Normalization_step( INChI **ppINChI, $/;"	f
Normalize	src/math/transform3d.cpp	/^  void transform3d::Normalize()$/;"	f	class:OpenBabel::transform3d
NormalizeAndCompare	src/formats/libinchi/ichirvr4.c	/^int NormalizeAndCompare(ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, BN_STRUCT *pBNS, BN_DATA *pBD,$/;"	f
NormalizeStructure	src/formats/libinchi/ichirvr1.c	/^int NormalizeStructure( ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, BN_STRUCT *pBNS, $/;"	f
NotAtomExpr	src/parsmart.cpp	/^  static AtomExpr *NotAtomExpr( AtomExpr *expr )$/;"	f	namespace:OpenBabel
NotChiral	src/formats/smiley.h	/^    NotChiral = 0,$/;"	e	enum:Smiley::Chirality
NotStereo	include/openbabel/stereo/stereo.h	/^      NotStereo =   0,$/;"	e	enum:OpenBabel::OBStereo::BondDirection
NotStereo	src/formats/mdlformat.cpp	/^        NotStereo, Clockwise, AntiClockwise, Unknown$/;"	e	enum:OpenBabel::MDLFormat::Parity	file:
Np	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
NsMapType	include/openbabel/xml.h	/^      typedef std::map<std::string, XMLBaseFormat*> NsMapType;$/;"	t	class:OpenBabel::XMLConversion
NuclearData	include/openbabel/base.h	/^      NuclearData =       22,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Nucleotide	src/chains.cpp	/^  static Template Nucleotide[MAXNUCLEIC] = {$/;"	m	namespace:OpenBabel	file:
Nucleotides	src/chains.cpp	/^  static ResidType Nucleotides[NUCLEOMAX] = {$/;"	m	namespace:OpenBabel	file:
NulFormat	src/formats/nulformat.cpp	/^  NulFormat() { OBConversion::RegisterFormat("nul",this); }$/;"	f	class:OpenBabel::NulFormat
NulFormat	src/formats/nulformat.cpp	/^class NulFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
NumAtoms	include/openbabel/mol.h	/^    unsigned int NumAtoms() const         {  return(_natoms); }$/;"	f	class:OpenBabel::OBMol
NumAtoms	include/openbabel/parsmart.h	/^    unsigned int NumAtoms()   const$/;"	f	class:OpenBabel::OBSmartsPattern
NumAtoms	include/openbabel/query.h	/^      unsigned int NumAtoms() const$/;"	f	class:OpenBabel::OBQuery
NumAtoms	include/openbabel/rotamer.h	/^    unsigned int NumAtoms() const$/;"	f	class:OpenBabel::OBRotamerList
NumBaseCoordinateSets	include/openbabel/rotamer.h	/^    unsigned int NumBaseCoordinateSets() const$/;"	f	class:OpenBabel::OBRotamerList
NumBonds	include/openbabel/mol.h	/^    unsigned int NumBonds() const         {  return(_nbonds); }$/;"	f	class:OpenBabel::OBMol
NumBonds	include/openbabel/parsmart.h	/^    unsigned int NumBonds()   const$/;"	f	class:OpenBabel::OBSmartsPattern
NumBonds	include/openbabel/query.h	/^      unsigned int NumBonds() const$/;"	f	class:OpenBabel::OBQuery
NumCisTransStereo	src/stereo/facade.cpp	/^  unsigned int OBStereoFacade::NumCisTransStereo()$/;"	f	class:OpenBabel::OBStereoFacade
NumConformers	include/openbabel/mol.h	/^    int     NumConformers()    { return((_vconf.empty())?0:static_cast<int> (_vconf.size())); }$/;"	f	class:OpenBabel::OBMol
NumConnections	src/formats/smilesformat.cpp	/^  int OBSmilesParser::NumConnections(OBAtom *atom) {$/;"	f	class:OpenBabel::OBSmilesParser
NumH	include/inchi/ichicant.h	/^    NUM_H          *NumH;      $/;"	m	struct:tagCanonData
NumH	src/formats/libinchi/ichican2.c	/^    NUM_H            NumH;$/;"	m	struct:tagNodeValues	file:
NumH	src/formats/libinchi/ichican2.c	/^    NUM_H          *NumH;      $/;"	m	struct:tagCTable	file:
NumHfixed	include/inchi/ichicant.h	/^    NUM_H           *NumHfixed;          $/;"	m	struct:tagCanonData
NumHfixed	src/formats/libinchi/ichican2.c	/^    NUM_H            NumHfixed;$/;"	m	struct:tagNodeValues	file:
NumHfixed	src/formats/libinchi/ichican2.c	/^    NUM_H           *NumHfixed;          $/;"	m	struct:tagCTable	file:
NumHvyAtoms	src/mol.cpp	/^  unsigned int OBMol::NumHvyAtoms()$/;"	f	class:OpenBabel::OBMol
NumInputObjects	src/obconversion.cpp	/^  int OBConversion::NumInputObjects()$/;"	f	class:OpenBabel::OBConversion
NumInversions	src/stereo/stereo.cpp	/^  int OBStereo::NumInversions(const OBStereo::Refs &refs)$/;"	f	class:OpenBabel::OBStereo
NumKeys	include/openbabel/rotor.h	/^      unsigned int NumKeys()$/;"	f	class:OBRotorKeys
NumMatches	include/openbabel/parsmart.h	/^    unsigned int NumMatches() const$/;"	f	class:OpenBabel::OBSmartsPattern
NumPoints	include/openbabel/generic.h	/^    int NumPoints() $/;"	f	class:OpenBabel::OBFreeGrid
NumProducts	include/openbabel/reaction.h	/^  int NumProducts()const$/;"	f	class:OpenBabel::OBReaction
NumReactants	include/openbabel/reaction.h	/^  int NumReactants() const$/;"	f	class:OpenBabel::OBReaction
NumResidues	include/openbabel/mol.h	/^    unsigned int NumResidues() const      { return(static_cast<unsigned int> (_residue.size())); }$/;"	f	class:OpenBabel::OBMol
NumRotamers	include/openbabel/rotamer.h	/^    unsigned int NumRotamers() const$/;"	f	class:OpenBabel::OBRotamerList
NumRotors	include/openbabel/rotamer.h	/^    unsigned int NumRotors()   const$/;"	f	class:OpenBabel::OBRotamerList
NumRotors	src/mol.cpp	/^  unsigned int OBMol::NumRotors(bool includeRingBonds)$/;"	f	class:OpenBabel::OBMol
NumSquarePlanarStereo	src/stereo/facade.cpp	/^  unsigned int OBStereoFacade::NumSquarePlanarStereo()$/;"	f	class:OpenBabel::OBStereoFacade
NumTetrahedralStereo	src/stereo/facade.cpp	/^  unsigned int OBStereoFacade::NumTetrahedralStereo()$/;"	f	class:OpenBabel::OBStereoFacade
NumberOfTies	src/formats/libinchi/ichimap2.c	/^int NumberOfTies( AT_RANK **pRankStack1, AT_RANK **pRankStack2, int length,$/;"	f
NumericalDerivative	src/forcefield.cpp	/^  vector3 OBForceField::NumericalDerivative(OBAtom *atom, int terms)$/;"	f	class:OpenBabel::OBForceField
NumericalSecondDerivative	src/forcefield.cpp	/^  vector3 OBForceField::NumericalSecondDerivative(OBAtom *atom, int terms)$/;"	f	class:OpenBabel::OBForceField
O	include/openbabel/pointgroup.h	/^        O, Oh, \/\/ 51, 52$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
O	src/formats/smiley.h	/^    Li, Be,                                                                                                  B,  C,  N,  O,  F, Ne,$/;"	e	enum:Smiley::Elements
OBAPI	include/openbabel/atomclass.h	28;"	d
OBAPI	include/openbabel/distgeom.h	27;"	d
OBAPI	include/openbabel/tautomer.h	21;"	d
OBAPIInterface	src/formats/APIInterface.cpp	/^  OBAPIInterface()$/;"	f	class:OpenBabel::OBAPIInterface
OBAPIInterface	src/formats/APIInterface.cpp	/^class OBAPIInterface : public OBFormat$/;"	c	namespace:OpenBabel	file:
OBATOM_TYPE_LEN	include/openbabel/atom.h	80;"	d
OBAlign	include/openbabel/math/align.h	/^  class OBAPI OBAlign {$/;"	c	namespace:OpenBabel
OBAlign	src/math/align.cpp	/^  OBAlign::OBAlign(bool includeH, bool symmetry) : _method(OBAlign::Kabsch)$/;"	f	class:OpenBabel::OBAlign
OBAlign	src/math/align.cpp	/^  OBAlign::OBAlign(const OBMol &refmol, const OBMol &targetmol, bool includeH, bool symmetry) : _method(OBAlign::Kabsch)$/;"	f	class:OpenBabel::OBAlign
OBAlign	src/math/align.cpp	/^  OBAlign::OBAlign(const vector<vector3> &ref, const vector<vector3> &target) : _method(OBAlign::Kabsch)$/;"	f	class:OpenBabel::OBAlign
OBAminoAcidProperty	include/openbabel/residue.h	/^  namespace OBAminoAcidProperty$/;"	n	namespace:OpenBabel
OBAngle	include/openbabel/generic.h	/^  class OBAPI OBAngle$/;"	c	namespace:OpenBabel
OBAngle	src/generic.cpp	/^  OBAngle::OBAngle():$/;"	f	class:OpenBabel::OBAngle
OBAngle	src/generic.cpp	/^  OBAngle::OBAngle(OBAtom *vertex,OBAtom *a,OBAtom *b):$/;"	f	class:OpenBabel::OBAngle
OBAngle	src/generic.cpp	/^  OBAngle::OBAngle(const OBAngle &src):$/;"	f	class:OpenBabel::OBAngle
OBAngleData	include/openbabel/generic.h	/^ class OBAPI OBAngleData : public OBGenericData$/;"	c	namespace:OpenBabel
OBAngleData	src/generic.cpp	/^  OBAngleData::OBAngleData()$/;"	f	class:OpenBabel::OBAngleData
OBAngleData	src/generic.cpp	/^  OBAngleData::OBAngleData(const OBAngleData &src)$/;"	f	class:OpenBabel::OBAngleData
OBAromaticTyper	include/openbabel/typer.h	/^class OBAPI OBAromaticTyper : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBAromaticTyper	src/typer.cpp	/^  OBAromaticTyper::OBAromaticTyper()$/;"	f	class:OpenBabel::OBAromaticTyper
OBAtom	include/openbabel/atom.h	/^ class OBAPI OBAtom: public OBBase$/;"	c	namespace:OpenBabel
OBAtom	src/atom.cpp	/^  OBAtom::OBAtom()$/;"	f	class:OpenBabel::OBAtom
OBAtomAtomIter	include/openbabel/obiter.h	/^    OBAtomAtomIter() : _parent(NULL), _ptr(NULL) { }$/;"	f	class:OpenBabel::OBAtomAtomIter
OBAtomAtomIter	include/openbabel/obiter.h	/^  class OBAPI OBAtomAtomIter {$/;"	c	namespace:OpenBabel
OBAtomAtomIter	src/obiter.cpp	/^  OBAtomAtomIter::OBAtomAtomIter(OBAtom &atm)$/;"	f	class:OpenBabel::OBAtomAtomIter
OBAtomAtomIter	src/obiter.cpp	/^  OBAtomAtomIter::OBAtomAtomIter(OBAtom *atm)$/;"	f	class:OpenBabel::OBAtomAtomIter
OBAtomAtomIter	src/obiter.cpp	/^  OBAtomAtomIter::OBAtomAtomIter(const OBAtomAtomIter &ai)$/;"	f	class:OpenBabel::OBAtomAtomIter
OBAtomBondIter	include/openbabel/obiter.h	/^    OBAtomBondIter(): _parent(NULL), _ptr(NULL) { }$/;"	f	class:OpenBabel::OBAtomBondIter
OBAtomBondIter	include/openbabel/obiter.h	/^  class OBAPI OBAtomBondIter {$/;"	c	namespace:OpenBabel
OBAtomBondIter	src/obiter.cpp	/^  OBAtomBondIter::OBAtomBondIter(OBAtom &atm)$/;"	f	class:OpenBabel::OBAtomBondIter
OBAtomBondIter	src/obiter.cpp	/^  OBAtomBondIter::OBAtomBondIter(OBAtom *atm)$/;"	f	class:OpenBabel::OBAtomBondIter
OBAtomBondIter	src/obiter.cpp	/^  OBAtomBondIter::OBAtomBondIter(const OBAtomBondIter &bi)$/;"	f	class:OpenBabel::OBAtomBondIter
OBAtomClassData	include/openbabel/atomclass.h	/^  OBAtomClassData(): OBGenericData("Atom Class", 0x7882){ }$/;"	f	class:OpenBabel::OBAtomClassData
OBAtomClassData	include/openbabel/atomclass.h	/^class OBAPI OBAtomClassData : public OBGenericData$/;"	c	namespace:OpenBabel
OBAtomHOF	include/openbabel/data.h	/^    OBAtomHOF(std::string element,int charge,$/;"	f	class:OpenBabel::OBAtomHOF
OBAtomHOF	include/openbabel/data.h	/^  class OBAPI OBAtomHOF$/;"	c	namespace:OpenBabel
OBAtomIncrement	src/mol.cpp	1629;"	d	file:
OBAtomIncrement	src/mol.cpp	1638;"	d	file:
OBAtomIncrement	src/mol.cpp	1759;"	d	file:
OBAtomIncrement	src/mol.cpp	1768;"	d	file:
OBAtomIterator	include/openbabel/atom.h	/^  typedef std::vector<OBAtom*>::iterator OBAtomIterator;$/;"	t	namespace:OpenBabel
OBAtomIterator	include/openbabel/residue.h	/^  typedef std::vector<OBAtom*>::iterator OBAtomIterator;$/;"	t	namespace:OpenBabel
OBAtomMap	include/OB-BGL/mol_graph.h	/^    OBAtomMap( const OpenBabel::OBMol& m ) :$/;"	f	class:OBAtomMap
OBAtomMap	include/OB-BGL/mol_graph.h	/^    OBAtomMap( const OpenBabel::OBMol& m, const value v ) :$/;"	f	class:OBAtomMap
OBAtomMap	include/OB-BGL/mol_graph.h	/^class OBAtomMap $/;"	c
OBAtomTyper	include/openbabel/typer.h	/^class OBAPI OBAtomTyper : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBAtomTyper	src/typer.cpp	/^  OBAtomTyper::OBAtomTyper()$/;"	f	class:OpenBabel::OBAtomTyper
OBAtomicHeatOfFormationTable	include/openbabel/data.h	/^  class OBAPI OBAtomicHeatOfFormationTable : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBAtomicHeatOfFormationTable	src/data.cpp	/^  OBAtomicHeatOfFormationTable::OBAtomicHeatOfFormationTable(void)$/;"	f	class:OpenBabel::OBAtomicHeatOfFormationTable
OBAutomorphismQueryAtom	src/isomorphism.cpp	/^      OBAutomorphismQueryAtom(unsigned int _symClass, const std::vector<unsigned int> &_symClasses)$/;"	f	class:OpenBabel::OBAutomorphismQueryAtom
OBAutomorphismQueryAtom	src/isomorphism.cpp	/^  class OBAutomorphismQueryAtom : public OBQueryAtom$/;"	c	namespace:OpenBabel	file:
OBBase	include/openbabel/base.h	/^  class OBAPI OBBase$/;"	c	namespace:OpenBabel
OBBitVec	include/openbabel/bitvec.h	/^      OBBitVec()$/;"	f	class:OpenBabel::OBBitVec
OBBitVec	include/openbabel/bitvec.h	/^      OBBitVec(const OBBitVec & bv)$/;"	f	class:OpenBabel::OBBitVec
OBBitVec	include/openbabel/bitvec.h	/^      OBBitVec(unsigned size_in_bits)$/;"	f	class:OpenBabel::OBBitVec
OBBitVec	include/openbabel/bitvec.h	/^  class OBERROR OBBitVec$/;"	c	namespace:OpenBabel
OBBond	include/openbabel/bond.h	/^  class OBAPI OBBond: public OBBase$/;"	c	namespace:OpenBabel
OBBond	src/bond.cpp	/^  OBBond::OBBond() \/*: d(new OBBondPrivate)*\/$/;"	f	class:OpenBabel::OBBond
OBBondClosureInfo	src/formats/smilesformat.cpp	/^  OBBondClosureInfo::OBBondClosureInfo(OBAtom *a1, OBAtom *a2, OBBond *b, int rd, bool open)$/;"	f	class:OpenBabel::OBBondClosureInfo
OBBondClosureInfo	src/formats/smilesformat.cpp	/^  class OBBondClosureInfo$/;"	c	namespace:OpenBabel	file:
OBBondIncrement	src/mol.cpp	1710;"	d	file:
OBBondIncrement	src/mol.cpp	1718;"	d	file:
OBBondIncrement	src/mol.cpp	3064;"	d	file:
OBBondIncrement	src/mol.cpp	3072;"	d	file:
OBBondIterator	include/openbabel/atom.h	/^  typedef std::vector<OBBond*>::iterator OBBondIterator;$/;"	t	namespace:OpenBabel
OBBondIterator	include/openbabel/bond.h	/^  typedef std::vector<OBBond*>::iterator OBBondIterator;$/;"	t	namespace:OpenBabel
OBBondIterator	include/openbabel/residue.h	/^  typedef std::vector<OBBond*>::iterator OBBondIterator;$/;"	t	namespace:OpenBabel
OBBondMap	include/OB-BGL/mol_graph.h	/^    OBBondMap( const OpenBabel::OBMol& m ) :$/;"	f	class:OBBondMap
OBBondMap	include/OB-BGL/mol_graph.h	/^    OBBondMap( const OpenBabel::OBMol& m, const value v ) :$/;"	f	class:OBBondMap
OBBondMap	include/OB-BGL/mol_graph.h	/^class OBBondMap $/;"	c
OBBondPrivate	src/bond.cpp	/^      OBBondPrivate() {}$/;"	f	class:OpenBabel::OBBondPrivate
OBBondPrivate	src/bond.cpp	/^  class OBBondPrivate$/;"	c	namespace:OpenBabel	file:
OBBondTyper	include/openbabel/bondtyper.h	/^class OBAPI OBBondTyper : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBBondTyper	src/bondtyper.cpp	/^  OBBondTyper::OBBondTyper()$/;"	f	class:OpenBabel::OBBondTyper
OBBuilder	include/openbabel/builder.h	/^      OBBuilder(): _keeprings(false) {}$/;"	f	class:OpenBabel::OBBuilder
OBBuilder	include/openbabel/builder.h	/^  class OBAPI OBBuilder {$/;"	c	namespace:OpenBabel
OBCOMMON	include/openbabel/alias.h	27;"	d
OBCOMMON	include/openbabel/obmolecformat.h	52;"	d
OBCOMMON	src/formats/getinchi.cpp	24;"	d	file:
OBCONV	include/openbabel/lineend.h	27;"	d
OBCONV	include/openbabel/obconversion.h	43;"	d
OBCanSmiNode	src/formats/smilesformat.cpp	/^  OBCanSmiNode::OBCanSmiNode(OBAtom *atom)$/;"	f	class:OpenBabel::OBCanSmiNode
OBCanSmiNode	src/formats/smilesformat.cpp	/^  class OBCanSmiNode$/;"	c	namespace:OpenBabel	file:
OBChainsParser	include/openbabel/chains.h	/^  class OBAPI OBChainsParser$/;"	c	namespace:OpenBabel
OBChainsParser	src/chains.cpp	/^  OBChainsParser::OBChainsParser(void)$/;"	f	class:OpenBabel::OBChainsParser
OBChargeModel	include/openbabel/chargemodel.h	/^class OBAPI OBChargeModel : public OBPlugin$/;"	c	namespace:OpenBabel
OBChemTsfm	include/openbabel/phmodel.h	/^    OBChemTsfm()    {}$/;"	f	class:OpenBabel::OBChemTsfm
OBChemTsfm	include/openbabel/phmodel.h	/^class OBAPI OBChemTsfm$/;"	c	namespace:OpenBabel
OBChiralData	include/openbabel/generic.h	/^ class OBAPI OBChiralData : public OBGenericData$/;"	c	namespace:OpenBabel
OBChiralData	src/generic.cpp	/^  OBChiralData::OBChiralData()$/;"	f	class:OpenBabel::OBChiralData
OBChiralData	src/generic.cpp	/^  OBChiralData::OBChiralData(const OBChiralData &src)$/;"	f	class:OpenBabel::OBChiralData
OBCisTransConfig	include/openbabel/stereo/bindings.h	/^  struct OBCisTransConfig$/;"	s	namespace:OpenBabel
OBCisTransStereo	include/openbabel/stereo/cistrans.h	/^class OBAPI OBCisTransStereo : public OBTetraPlanarStereo$/;"	c	namespace:OpenBabel
OBCisTransStereo	src/stereo/cistrans.cpp	/^  OBCisTransStereo::OBCisTransStereo(OBMol *mol) : OBTetraPlanarStereo(mol)$/;"	f	class:OpenBabel::OBCisTransStereo
OBColor	include/openbabel/depict/painter.h	/^    OBColor()$/;"	f	struct:OpenBabel::OBColor
OBColor	include/openbabel/depict/painter.h	/^    OBColor(const std::string &color)$/;"	f	struct:OpenBabel::OBColor
OBColor	include/openbabel/depict/painter.h	/^    OBColor(double _red, double _green, double _blue, double _alpha = 1.0) :$/;"	f	struct:OpenBabel::OBColor
OBColor	include/openbabel/depict/painter.h	/^    OBColor(std::vector<double> vec) : red(vec[0]), green(vec[1]), blue(vec[2]), alpha(1.0){}$/;"	f	struct:OpenBabel::OBColor
OBColor	include/openbabel/depict/painter.h	/^  struct OBDEPICT OBColor$/;"	s	namespace:OpenBabel
OBCommentData	include/openbabel/generic.h	/^ class OBAPI OBCommentData : public OBGenericData$/;"	c	namespace:OpenBabel
OBCommentData	src/generic.cpp	/^  OBCommentData::OBCommentData():$/;"	f	class:OpenBabel::OBCommentData
OBCommentData	src/generic.cpp	/^  OBCommentData::OBCommentData(const OBCommentData &src) :$/;"	f	class:OpenBabel::OBCommentData
OBCompareInt	src/obutil.cpp	/^  bool OBCompareInt(const int &a,const int &b)$/;"	f	namespace:OpenBabel
OBComparePairFirst	src/mol.cpp	/^  static bool OBComparePairFirst(const pair<OBAtom*,unsigned int> &a,const pair<OBAtom*,unsigned int> &b)$/;"	f	namespace:OpenBabel
OBComparePairSecond	src/mol.cpp	/^  static bool OBComparePairSecond(const pair<OBAtom*,unsigned int> &a,const pair<OBAtom*,unsigned int> &b)$/;"	f	namespace:OpenBabel
OBCompareUnsigned	src/obutil.cpp	/^  bool OBCompareUnsigned(const unsigned int &a,const unsigned int &b)$/;"	f	namespace:OpenBabel
OBConformerData	include/openbabel/generic.h	/^ class OBAPI OBConformerData: public OBGenericData$/;"	c	namespace:OpenBabel
OBConformerData	src/generic.cpp	/^  OBConformerData::OBConformerData() :$/;"	f	class:OpenBabel::OBConformerData
OBConformerData	src/generic.cpp	/^  OBConformerData::OBConformerData(const OBConformerData &src) :$/;"	f	class:OpenBabel::OBConformerData
OBConformerFilter	include/openbabel/conformersearch.h	/^  class OBAPI OBConformerFilter$/;"	c	namespace:OpenBabel
OBConformerFilters	include/openbabel/conformersearch.h	/^      OBConformerFilters(const std::vector<OBConformerFilter*> &filters) : m_filters(filters)$/;"	f	class:OpenBabel::OBConformerFilters
OBConformerFilters	include/openbabel/conformersearch.h	/^  class OBAPI OBConformerFilters : public OBConformerFilter$/;"	c	namespace:OpenBabel
OBConformerScore	include/openbabel/conformersearch.h	/^  class OBAPI OBConformerScore$/;"	c	namespace:OpenBabel
OBConformerSearch	include/openbabel/conformersearch.h	/^  class OBAPI OBConformerSearch$/;"	c	namespace:OpenBabel
OBConformerSearch	src/conformersearch.cpp	/^  OBConformerSearch::OBConformerSearch()$/;"	f	class:OpenBabel::OBConformerSearch
OBConversion	include/openbabel/obconversion.h	/^  class OBCONV OBConversion$/;"	c	namespace:OpenBabel
OBConversion	src/obconversion.cpp	/^  OBConversion::OBConversion(const OBConversion& o)$/;"	f	class:OpenBabel::OBConversion
OBConversion	src/obconversion.cpp	/^  OBConversion::OBConversion(istream* is, ostream* os) :$/;"	f	class:OpenBabel::OBConversion
OBConversion	src/obconversion.cpp	/^  OBConversion::OBConversion(string infile, string outfile):$/;"	f	class:OpenBabel::OBConversion
OBDEPICT	include/openbabel/depict/depict.h	33;"	d
OBDEPICT	include/openbabel/depict/painter.h	27;"	d
OBDESC	include/openbabel/groupcontrib.h	33;"	d
OBDLL	include/openbabel/dlhandler.h	33;"	d
OBDLL	include/openbabel/obconversion.h	46;"	d
OBDOSData	include/openbabel/generic.h	/^    OBDOSData(): OBGenericData("DOSData", OBGenericDataType::DOSData){};$/;"	f	class:OpenBabel::OBDOSData
OBDOSData	include/openbabel/generic.h	/^ class OBAPI OBDOSData: public OBGenericData$/;"	c	namespace:OpenBabel
OBDataIterator	include/openbabel/base.h	/^  typedef std::vector<OBGenericData*>::iterator OBDataIterator;$/;"	t	namespace:OpenBabel
OBDataIterator	include/openbabel/generic.h	/^  typedef std::vector<OBGenericData*>::iterator OBDataIterator;$/;"	t	namespace:OpenBabel
OBDefine	src/ops/loader.cpp	/^  OBDefine() : OBLoader("define", false), _descr("*"){}$/;"	f	class:OpenBabel::OBDefine
OBDefine	src/ops/loader.cpp	/^  OBDefine(const char* ID, const char* filename)$/;"	f	class:OpenBabel::OBDefine
OBDefine	src/ops/loader.cpp	/^class OBDefine : public OBLoader$/;"	c	namespace:OpenBabel	file:
OBDepict	include/openbabel/depict/depict.h	/^  class OBDEPICT OBDepict$/;"	c	namespace:OpenBabel
OBDepict	src/depict/depict.cpp	/^  OBDepict::OBDepict(OBPainter *painter) : d(new OBDepictPrivate)$/;"	f	class:OpenBabel::OBDepict
OBDepict	src/depict/depict.cpp	/^  OBDepict::OBDepict(OBPainter *painter, bool withBall, bool symbolOnBall)$/;"	f	class:OpenBabel::OBDepict
OBDepictPrivate	src/depict/depict.cpp	/^      OBDepictPrivate() : mol(0), painter(0), bondLength(40.0), penWidth(2.0),$/;"	f	class:OpenBabel::OBDepictPrivate
OBDepictPrivate	src/depict/depict.cpp	/^  class OBDepictPrivate$/;"	c	namespace:OpenBabel	file:
OBDepictPrivateBallAndStick	src/depict/depict.cpp	/^        OBDepictPrivateBallAndStick(bool symbolOnBall) : m_symbolOnBall(symbolOnBall){}$/;"	f	class:OpenBabel::OBDepictPrivateBallAndStick
OBDepictPrivateBallAndStick	src/depict/depict.cpp	/^  class OBDepictPrivateBallAndStick : public OBDepictPrivate$/;"	c	namespace:OpenBabel	file:
OBDescriptor	include/openbabel/descriptor.h	/^class OBAPI OBDescriptor : public OBPlugin$/;"	c	namespace:OpenBabel
OBDistanceGeometry	include/openbabel/distgeom.h	/^  class OBAPI OBDistanceGeometry {$/;"	c	namespace:OpenBabel
OBDistanceGeometry	src/distgeom.cpp	/^  OBDistanceGeometry::OBDistanceGeometry(): _d(NULL) {}$/;"	f	class:OpenBabel::OBDistanceGeometry
OBDistanceGeometry	src/distgeom.cpp	/^  OBDistanceGeometry::OBDistanceGeometry(const OBMol &mol, bool useCurrentGeometry): _d(NULL)$/;"	f	class:OpenBabel::OBDistanceGeometry
OBDiversePoses	src/confsearch.cpp	/^  OBDiversePoses::OBDiversePoses(const OBMol &ref, double RMSD, bool percise):$/;"	f	class:OpenBabel::OBDiversePoses
OBDiversePoses	src/confsearch.cpp	/^  class OBDiversePoses {$/;"	c	namespace:OpenBabel	file:
OBERROR	include/openbabel/dlhandler.h	30;"	d
OBERROR	include/openbabel/locale.h	26;"	d
OBERROR	include/openbabel/oberror.h	32;"	d
OBERROR	include/openbabel/plugin.h	32;"	d
OBERROR	src/ops/op2d.cpp	36;"	d	file:
OBEdgeBase	include/openbabel/bond.h	/^  typedef OBBond OBEdgeBase;$/;"	t	namespace:OpenBabel
OBElectronicTransitionData	include/openbabel/generic.h	/^    OBElectronicTransitionData(): OBGenericData("ElectronicTransitionData", OBGenericDataType::ElectronicTransitionData) {}$/;"	f	class:OpenBabel::OBElectronicTransitionData
OBElectronicTransitionData	include/openbabel/generic.h	/^ class OBAPI OBElectronicTransitionData: public OBGenericData$/;"	c	namespace:OpenBabel
OBElement	include/openbabel/data.h	/^      OBElement()    {}$/;"	f	class:OpenBabel::OBElement
OBElement	include/openbabel/data.h	/^      OBElement(int num, const char *sym, double ARENeg, double rcov,$/;"	f	class:OpenBabel::OBElement
OBElement	include/openbabel/data.h	/^  class OBAPI OBElement$/;"	c	namespace:OpenBabel
OBElementTable	include/openbabel/data.h	/^  class OBAPI OBElementTable : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBElementTable	src/data.cpp	/^  OBElementTable::OBElementTable()$/;"	f	class:OpenBabel::OBElementTable
OBEnergyConformerScore	include/openbabel/conformersearch.h	/^      OBEnergyConformerScore () {$/;"	f	class:OpenBabel::OBEnergyConformerScore
OBEnergyConformerScore	include/openbabel/conformersearch.h	/^  class OBAPI OBEnergyConformerScore : public OBConformerScore$/;"	c	namespace:OpenBabel
OBError	include/openbabel/oberror.h	/^  class OBERROR OBError$/;"	c	namespace:OpenBabel
OBError	src/oberror.cpp	/^  OBError::OBError( const string &method,$/;"	f	class:OpenBabel::OBError
OBExternalBond	include/openbabel/generic.h	/^  OBExternalBond(): _idx(0), _atom(NULL), _bond(NULL) {}$/;"	f	class:OpenBabel::OBExternalBond
OBExternalBond	include/openbabel/generic.h	/^  class OBAPI OBExternalBond$/;"	c	namespace:OpenBabel
OBExternalBond	src/generic.cpp	/^  OBExternalBond::OBExternalBond(OBAtom *atom,OBBond *bond,int idx):$/;"	f	class:OpenBabel::OBExternalBond
OBExternalBond	src/generic.cpp	/^  OBExternalBond::OBExternalBond(const OBExternalBond &src):$/;"	f	class:OpenBabel::OBExternalBond
OBExternalBondData	include/openbabel/generic.h	/^ class OBAPI OBExternalBondData : public OBGenericData$/;"	c	namespace:OpenBabel
OBExternalBondData	src/generic.cpp	/^  OBExternalBondData::OBExternalBondData():$/;"	f	class:OpenBabel::OBExternalBondData
OBFFAngleCalculationGaff	src/forcefields/forcefieldgaff.h	/^  class OBFFAngleCalculationGaff : public OBFFCalculation3$/;"	c	namespace:OpenBabel
OBFFAngleCalculationGhemical	src/forcefields/forcefieldghemical.h	/^  class OBFFAngleCalculationGhemical : public OBFFCalculation3$/;"	c	namespace:OpenBabel
OBFFAngleCalculationMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBFFAngleCalculationMMFF94 : public OBFFCalculation3$/;"	c	namespace:OpenBabel
OBFFAngleCalculationUFF	src/forcefields/forcefielduff.h	/^  class OBFFAngleCalculationUFF : public OBFFCalculation3$/;"	c	namespace:OpenBabel
OBFFBondCalculationGaff	src/forcefields/forcefieldgaff.h	/^  class OBFFBondCalculationGaff : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFBondCalculationGhemical	src/forcefields/forcefieldghemical.h	/^  class OBFFBondCalculationGhemical : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFBondCalculationMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBFFBondCalculationMMFF94 : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFBondCalculationUFF	src/forcefields/forcefielduff.h	/^  class OBFFBondCalculationUFF : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFCalculation2	include/openbabel/forcefield.h	/^  class OBFPRT OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFCalculation3	include/openbabel/forcefield.h	/^  class OBFPRT OBFFCalculation3: public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFCalculation4	include/openbabel/forcefield.h	/^  class OBFPRT OBFFCalculation4: public OBFFCalculation3$/;"	c	namespace:OpenBabel
OBFFConstraint	include/openbabel/forcefield.h	/^    OBFFConstraint()$/;"	f	class:OpenBabel::OBFFConstraint
OBFFConstraint	include/openbabel/forcefield.h	/^  class OBFPRT OBFFConstraint$/;"	c	namespace:OpenBabel
OBFFConstraints	include/openbabel/forcefield.h	/^  class OBFPRT OBFFConstraints$/;"	c	namespace:OpenBabel
OBFFConstraints	src/forcefield.cpp	/^  OBFFConstraints::OBFFConstraints()$/;"	f	class:OpenBabel::OBFFConstraints
OBFFElectrostaticCalculationGaff	src/forcefields/forcefieldgaff.h	/^  class OBFFElectrostaticCalculationGaff : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFElectrostaticCalculationGhemical	src/forcefields/forcefieldghemical.h	/^  class OBFFElectrostaticCalculationGhemical : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFElectrostaticCalculationMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBFFElectrostaticCalculationMMFF94 : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFElectrostaticCalculationUFF	src/forcefields/forcefielduff.h	/^  class OBFFElectrostaticCalculationUFF : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFLog	include/openbabel/forcefield.h	/^    void OBFFLog(const char *msg)$/;"	f	class:OpenBabel::OBForceField
OBFFLog	include/openbabel/forcefield.h	/^    void OBFFLog(std::string msg)$/;"	f	class:OpenBabel::OBForceField
OBFFOOPCalculationGaff	src/forcefields/forcefieldgaff.h	/^  class OBFFOOPCalculationGaff : public OBFFCalculation4$/;"	c	namespace:OpenBabel
OBFFOOPCalculationMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBFFOOPCalculationMMFF94 : public OBFFCalculation4$/;"	c	namespace:OpenBabel
OBFFOOPCalculationUFF	src/forcefields/forcefielduff.h	/^  class OBFFOOPCalculationUFF : public OBFFCalculation4$/;"	c	namespace:OpenBabel
OBFFParameter	include/openbabel/forcefield.h	/^  class OBFPRT OBFFParameter {$/;"	c	namespace:OpenBabel
OBFFStrBndCalculationMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBFFStrBndCalculationMMFF94 : public OBFFCalculation3$/;"	c	namespace:OpenBabel
OBFFTorsionCalculationGaff	src/forcefields/forcefieldgaff.h	/^  class OBFFTorsionCalculationGaff : public OBFFCalculation4$/;"	c	namespace:OpenBabel
OBFFTorsionCalculationGhemical	src/forcefields/forcefieldghemical.h	/^  class OBFFTorsionCalculationGhemical : public OBFFCalculation4$/;"	c	namespace:OpenBabel
OBFFTorsionCalculationMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBFFTorsionCalculationMMFF94 : public OBFFCalculation4$/;"	c	namespace:OpenBabel
OBFFTorsionCalculationUFF	src/forcefields/forcefielduff.h	/^  class OBFFTorsionCalculationUFF : public OBFFCalculation4$/;"	c	namespace:OpenBabel
OBFFVDWCalculationGaff	src/forcefields/forcefieldgaff.h	/^  class OBFFVDWCalculationGaff : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFVDWCalculationGhemical	src/forcefields/forcefieldghemical.h	/^  class OBFFVDWCalculationGhemical : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFVDWCalculationMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBFFVDWCalculationMMFF94 : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFFVDWCalculationUFF	src/forcefields/forcefielduff.h	/^  class OBFFVDWCalculationUFF : public OBFFCalculation2$/;"	c	namespace:OpenBabel
OBFF_ANALYTICAL_GRADIENT	include/openbabel/forcefield.h	67;"	d
OBFF_CONST_ANGLE	include/openbabel/forcefield.h	61;"	d
OBFF_CONST_ATOM	include/openbabel/forcefield.h	56;"	d
OBFF_CONST_ATOM_X	include/openbabel/forcefield.h	57;"	d
OBFF_CONST_ATOM_Y	include/openbabel/forcefield.h	58;"	d
OBFF_CONST_ATOM_Z	include/openbabel/forcefield.h	59;"	d
OBFF_CONST_CHIRAL	include/openbabel/forcefield.h	63;"	d
OBFF_CONST_DISTANCE	include/openbabel/forcefield.h	60;"	d
OBFF_CONST_IGNORE	include/openbabel/forcefield.h	55;"	d
OBFF_CONST_TORSION	include/openbabel/forcefield.h	62;"	d
OBFF_EANGLE	include/openbabel/forcefield.h	47;"	d
OBFF_EBOND	include/openbabel/forcefield.h	46;"	d
OBFF_EELECTROSTATIC	include/openbabel/forcefield.h	52;"	d
OBFF_ENERGY	include/openbabel/forcefield.h	45;"	d
OBFF_EOOP	include/openbabel/forcefield.h	50;"	d
OBFF_ESTRBND	include/openbabel/forcefield.h	48;"	d
OBFF_ETORSION	include/openbabel/forcefield.h	49;"	d
OBFF_EVDW	include/openbabel/forcefield.h	51;"	d
OBFF_LOGLVL_HIGH	include/openbabel/forcefield.h	42;"	d
OBFF_LOGLVL_LOW	include/openbabel/forcefield.h	40;"	d
OBFF_LOGLVL_MEDIUM	include/openbabel/forcefield.h	41;"	d
OBFF_LOGLVL_NONE	include/openbabel/forcefield.h	39;"	d
OBFF_NUMERICAL_GRADIENT	include/openbabel/forcefield.h	66;"	d
OBFPRT	include/openbabel/fingerprint.h	31;"	d
OBFingerprint	include/openbabel/fingerprint.h	/^class OBFPRT OBFingerprint : public OBPlugin$/;"	c	namespace:OpenBabel
OBFloatGrid	include/openbabel/grid.h	/^    OBFloatGrid() : _ival(NULL), _halfSpace(0.0) {}$/;"	f	class:OpenBabel::OBFloatGrid
OBFloatGrid	include/openbabel/grid.h	/^ class OBAPI OBFloatGrid: public OBGrid$/;"	c	namespace:OpenBabel
OBFontMetrics	include/openbabel/depict/painter.h	/^  struct OBDEPICT OBFontMetrics$/;"	s	namespace:OpenBabel
OBForceField	include/openbabel/forcefield.h	/^  class OBFPRT OBForceField : public OBPlugin$/;"	c	namespace:OpenBabel
OBForceFieldGaff	src/forcefields/forcefieldgaff.h	/^      explicit OBForceFieldGaff(const char* ID, bool IsDefault=true) : OBForceField(ID, IsDefault)$/;"	f	class:OpenBabel::OBForceFieldGaff
OBForceFieldGaff	src/forcefields/forcefieldgaff.h	/^  class OBForceFieldGaff: public OBForceField$/;"	c	namespace:OpenBabel
OBForceFieldGhemical	src/forcefields/forcefieldghemical.h	/^      explicit OBForceFieldGhemical(const char* ID, bool IsDefault=true) : OBForceField(ID, IsDefault)$/;"	f	class:OpenBabel::OBForceFieldGhemical
OBForceFieldGhemical	src/forcefields/forcefieldghemical.h	/^  class OBForceFieldGhemical: public OBForceField$/;"	c	namespace:OpenBabel
OBForceFieldMM2	src/forcefields/forcefieldmm2.h	/^      explicit OBForceFieldMM2(const char* ID, bool IsDefault=true) : OBForceField(ID, IsDefault), _init(false)$/;"	f	class:OpenBabel::OBForceFieldMM2
OBForceFieldMM2	src/forcefields/forcefieldmm2.h	/^  class OBForceFieldMM2: public OBForceField$/;"	c	namespace:OpenBabel
OBForceFieldMMFF94	src/forcefields/forcefieldmmff94.h	/^      explicit OBForceFieldMMFF94(const char* ID, bool IsDefault=true) : OBForceField(ID, IsDefault)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
OBForceFieldMMFF94	src/forcefields/forcefieldmmff94.h	/^  class OBForceFieldMMFF94: public OBForceField$/;"	c	namespace:OpenBabel
OBForceFieldUFF	src/forcefields/forcefielduff.h	/^    explicit OBForceFieldUFF(const char* ID, bool IsDefault=true) : OBForceField(ID, IsDefault)$/;"	f	class:OpenBabel::OBForceFieldUFF
OBForceFieldUFF	src/forcefields/forcefielduff.h	/^  class OBForceFieldUFF: public OBForceField$/;"	c	namespace:OpenBabel
OBFormat	include/openbabel/format.h	/^    OBFormat(){}$/;"	f	class:OpenBabel::OBFormat
OBFormat	include/openbabel/format.h	/^class OBCONV OBFormat : public OBPlugin$/;"	c	namespace:OpenBabel
OBFreeGrid	include/openbabel/generic.h	/^    OBFreeGrid() $/;"	f	class:OpenBabel::OBFreeGrid
OBFreeGrid	include/openbabel/generic.h	/^  class OBAPI OBFreeGrid: public OBGenericData$/;"	c	namespace:OpenBabel
OBFreeGridPoint	include/openbabel/generic.h	/^    OBFreeGridPoint() {};$/;"	f	class:OpenBabel::OBFreeGridPoint
OBFreeGridPoint	include/openbabel/generic.h	/^    OBFreeGridPoint(double x,double y,double z,double V) { _x = x; _y = y; _z = z; _V = V; }$/;"	f	class:OpenBabel::OBFreeGridPoint
OBFreeGridPoint	include/openbabel/generic.h	/^  class OBAPI OBFreeGridPoint$/;"	c	namespace:OpenBabel
OBFreeGridPointIterator	include/openbabel/generic.h	/^  typedef std::vector<OBFreeGridPoint*>::iterator OBFreeGridPointIterator;$/;"	t	namespace:OpenBabel
OBGUIApp	src/GUI/OBGUI.h	/^class OBGUIApp : public wxApp$/;"	c
OBGUIFrame	src/GUI/OBGUI.cpp	/^OBGUIFrame::OBGUIFrame(const wxString& title, wxPoint position, wxSize size)$/;"	f	class:OBGUIFrame
OBGUIFrame	src/GUI/OBGUI.h	/^class OBGUIFrame : public wxFrame$/;"	c
OBGastChrg	include/openbabel/molchrg.h	/^    OBGastChrg()    {}$/;"	f	class:OpenBabel::OBGastChrg
OBGastChrg	include/openbabel/molchrg.h	/^class OBAPI OBGastChrg$/;"	c	namespace:OpenBabel
OBGaussianCubeFormat	src/formats/gausscubeformat.cpp	/^    OBGaussianCubeFormat()$/;"	f	class:OpenBabel::OBGaussianCubeFormat
OBGaussianCubeFormat	src/formats/gausscubeformat.cpp	/^  class OBGaussianCubeFormat : public OpenBabel::OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
OBGenericData	include/openbabel/base.h	/^  class OBAPI OBGenericData$/;"	c	namespace:OpenBabel
OBGenericData	src/generic.cpp	/^  OBGenericData::OBGenericData(const std::string attr, const unsigned int type,$/;"	f	class:OpenBabel::OBGenericData
OBGenericDataType	include/openbabel/base.h	/^  namespace OBGenericDataType$/;"	n	namespace:OpenBabel
OBGlobalDataBase	include/openbabel/data.h	/^      OBGlobalDataBase(): _init(false), _dataptr(NULL) { }$/;"	f	class:OpenBabel::OBGlobalDataBase
OBGlobalDataBase	include/openbabel/data.h	/^  class OBAPI OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBGraphSym	include/openbabel/graphsym.h	/^  class OBAPI OBGraphSym {$/;"	c	namespace:OpenBabel
OBGraphSym	src/graphsym.cpp	/^  OBGraphSym::OBGraphSym(OBMol* pmol, const OBBitVec* frag_atoms) : d(new OBGraphSymPrivate)$/;"	f	class:OpenBabel::OBGraphSym
OBGraphSymPrivate	src/graphsym.cpp	/^  class OBGraphSymPrivate$/;"	c	namespace:OpenBabel	file:
OBGrid	include/openbabel/grid.h	/^    OBGrid() {}$/;"	f	class:OpenBabel::OBGrid
OBGrid	include/openbabel/grid.h	/^ class OBAPI OBGrid: public OBBase$/;"	c	namespace:OpenBabel
OBGridData	include/openbabel/griddata.h	/^  class OBAPI OBGridData : public OBGenericData$/;"	c	namespace:OpenBabel
OBGridData	src/griddata.cpp	/^  OBGridData::OBGridData() : OBGenericData("GridData", OBGenericDataType::GridData),$/;"	f	class:OpenBabel::OBGridData
OBGroupContrib	include/openbabel/groupcontrib.h	/^  OBGroupContrib(const char* ID, const char* filename, const char* descr)$/;"	f	class:OpenBabel::OBGroupContrib
OBGroupContrib	include/openbabel/groupcontrib.h	/^class OBDESC OBGroupContrib : public OBDescriptor$/;"	c	namespace:OpenBabel
OBInternalCoord	include/openbabel/internalcoord.h	/^  OBInternalCoord(OBAtom *a= NULL, OBAtom *b= NULL, OBAtom *c= NULL,$/;"	f	class:OpenBabel::OBInternalCoord
OBInternalCoord	include/openbabel/internalcoord.h	/^  class OBAPI OBInternalCoord$/;"	c	namespace:OpenBabel
OBIsomorphismMapper	include/openbabel/isomorphism.h	/^  class OBAPI OBIsomorphismMapper$/;"	c	namespace:OpenBabel
OBIsomorphismMapper	src/isomorphism.cpp	/^  OBIsomorphismMapper::OBIsomorphismMapper(OBQuery *query) : m_query(query), m_timeout(60)$/;"	f	class:OpenBabel::OBIsomorphismMapper
OBIsotopeTable	include/openbabel/data.h	/^  class OBAPI OBIsotopeTable : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBIsotopeTable	src/data.cpp	/^  OBIsotopeTable::OBIsotopeTable()$/;"	f	class:OpenBabel::OBIsotopeTable
OBLipoGrid	include/openbabel/grid.h	292;"	d
OBLoader	src/ops/loader.cpp	/^class OBLoader : public OBPlugin$/;"	c	namespace:OpenBabel	file:
OBLocale	include/openbabel/locale.h	/^  class OBERROR OBLocale {$/;"	c	namespace:OpenBabel
OBLocale	src/locale.cpp	/^  OBLocale::OBLocale()$/;"	f	class:OpenBabel::OBLocale
OBLocalePrivate	src/locale.cpp	/^    OBLocalePrivate(): counter(0)$/;"	f	class:OpenBabel::OBLocalePrivate
OBLocalePrivate	src/locale.cpp	/^  class OBLocalePrivate {$/;"	c	namespace:OpenBabel	file:
OBMSMSFormat	src/formats/msmsformat.cpp	/^    OBMSMSFormat()$/;"	f	class:OpenBabel::OBMSMSFormat
OBMSMSFormat	src/formats/msmsformat.cpp	/^class OBMSMSFormat : public OpenBabel::OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
OBMatrixData	include/openbabel/generic.h	/^    OBMatrixData(): OBGenericData("MatrixData", OBGenericDataType::MatrixData){}$/;"	f	class:OpenBabel::OBMatrixData
OBMatrixData	include/openbabel/generic.h	/^  class OBAPI OBMatrixData: public OBGenericData$/;"	c	namespace:OpenBabel
OBMessageHandler	include/openbabel/oberror.h	/^  class OBERROR OBMessageHandler$/;"	c	namespace:OpenBabel
OBMessageHandler	src/oberror.cpp	/^  OBMessageHandler::OBMessageHandler() :$/;"	f	class:OpenBabel::OBMessageHandler
OBMinimizingEnergyConformerScore	include/openbabel/conformersearch.h	/^      OBMinimizingEnergyConformerScore () {$/;"	f	class:OpenBabel::OBMinimizingEnergyConformerScore
OBMinimizingEnergyConformerScore	include/openbabel/conformersearch.h	/^  class OBAPI OBMinimizingEnergyConformerScore : public OBConformerScore$/;"	c	namespace:OpenBabel
OBMinimizingRMSDConformerScore	include/openbabel/conformersearch.h	/^  class OBAPI OBMinimizingRMSDConformerScore : public OBConformerScore$/;"	c	namespace:OpenBabel
OBMol	include/openbabel/mol.h	/^ class OBAPI OBMol: public OBBase$/;"	c	namespace:OpenBabel
OBMol	src/mol.cpp	/^  OBMol::OBMol()$/;"	f	class:OpenBabel::OBMol
OBMol	src/mol.cpp	/^  OBMol::OBMol(const OBMol &mol) : OBBase(mol)$/;"	f	class:OpenBabel::OBMol
OBMol2Cansmi	src/formats/smilesformat.cpp	/^    OBMol2Cansmi()$/;"	f	class:OpenBabel::OBMol2Cansmi
OBMol2Cansmi	src/formats/smilesformat.cpp	/^  class OBMol2Cansmi$/;"	c	namespace:OpenBabel	file:
OBMolAngleIter	include/openbabel/obiter.h	/^    OBMolAngleIter() :_parent(NULL) { }$/;"	f	class:OpenBabel::OBMolAngleIter
OBMolAngleIter	include/openbabel/obiter.h	/^  class OBAPI OBMolAngleIter {$/;"	c	namespace:OpenBabel
OBMolAngleIter	src/obiter.cpp	/^  OBMolAngleIter::OBMolAngleIter(OBMol &mol)$/;"	f	class:OpenBabel::OBMolAngleIter
OBMolAngleIter	src/obiter.cpp	/^  OBMolAngleIter::OBMolAngleIter(OBMol *mol)$/;"	f	class:OpenBabel::OBMolAngleIter
OBMolAngleIter	src/obiter.cpp	/^  OBMolAngleIter::OBMolAngleIter(const OBMolAngleIter &ai)$/;"	f	class:OpenBabel::OBMolAngleIter
OBMolAtomBFSIter	include/openbabel/obiter.h	/^    OBMolAtomBFSIter(): _parent(NULL), _ptr(NULL) { }$/;"	f	class:OpenBabel::OBMolAtomBFSIter
OBMolAtomBFSIter	include/openbabel/obiter.h	/^  class OBAPI OBMolAtomBFSIter {$/;"	c	namespace:OpenBabel
OBMolAtomBFSIter	src/obiter.cpp	/^  OBMolAtomBFSIter::OBMolAtomBFSIter(OBMol &mol, int StartIndex):$/;"	f	class:OpenBabel::OBMolAtomBFSIter
OBMolAtomBFSIter	src/obiter.cpp	/^  OBMolAtomBFSIter::OBMolAtomBFSIter(OBMol *mol, int StartIndex):$/;"	f	class:OpenBabel::OBMolAtomBFSIter
OBMolAtomBFSIter	src/obiter.cpp	/^  OBMolAtomBFSIter::OBMolAtomBFSIter(const OBMolAtomBFSIter &ai)$/;"	f	class:OpenBabel::OBMolAtomBFSIter
OBMolAtomDFSIter	include/openbabel/obiter.h	/^    OBMolAtomDFSIter() : _parent(NULL), _ptr(NULL) { }$/;"	f	class:OpenBabel::OBMolAtomDFSIter
OBMolAtomDFSIter	include/openbabel/obiter.h	/^  class OBAPI OBMolAtomDFSIter {$/;"	c	namespace:OpenBabel
OBMolAtomDFSIter	src/obiter.cpp	/^  OBMolAtomDFSIter::OBMolAtomDFSIter(OBMol &mol, int StartIndex):$/;"	f	class:OpenBabel::OBMolAtomDFSIter
OBMolAtomDFSIter	src/obiter.cpp	/^  OBMolAtomDFSIter::OBMolAtomDFSIter(OBMol *mol, int StartIndex):$/;"	f	class:OpenBabel::OBMolAtomDFSIter
OBMolAtomDFSIter	src/obiter.cpp	/^  OBMolAtomDFSIter::OBMolAtomDFSIter(const OBMolAtomDFSIter &ai)$/;"	f	class:OpenBabel::OBMolAtomDFSIter
OBMolAtomIter	include/openbabel/obiter.h	/^    OBMolAtomIter() :_parent(NULL), _ptr(NULL) { }$/;"	f	class:OpenBabel::OBMolAtomIter
OBMolAtomIter	include/openbabel/obiter.h	/^  class OBAPI OBMolAtomIter {$/;"	c	namespace:OpenBabel
OBMolAtomIter	src/obiter.cpp	/^  OBMolAtomIter::OBMolAtomIter(OBMol &mol)$/;"	f	class:OpenBabel::OBMolAtomIter
OBMolAtomIter	src/obiter.cpp	/^  OBMolAtomIter::OBMolAtomIter(OBMol *mol)$/;"	f	class:OpenBabel::OBMolAtomIter
OBMolAtomIter	src/obiter.cpp	/^  OBMolAtomIter::OBMolAtomIter(const OBMolAtomIter &ai)$/;"	f	class:OpenBabel::OBMolAtomIter
OBMolBondBFSIter	include/openbabel/obiter.h	/^    OBMolBondBFSIter(): _parent(NULL), _ptr(NULL) { }$/;"	f	class:OpenBabel::OBMolBondBFSIter
OBMolBondBFSIter	include/openbabel/obiter.h	/^  class OBAPI OBMolBondBFSIter {$/;"	c	namespace:OpenBabel
OBMolBondBFSIter	src/obiter.cpp	/^  OBMolBondBFSIter::OBMolBondBFSIter(OBMol &mol, int StartIndex):$/;"	f	class:OpenBabel::OBMolBondBFSIter
OBMolBondBFSIter	src/obiter.cpp	/^  OBMolBondBFSIter::OBMolBondBFSIter(OBMol *mol, int StartIndex):$/;"	f	class:OpenBabel::OBMolBondBFSIter
OBMolBondBFSIter	src/obiter.cpp	/^  OBMolBondBFSIter::OBMolBondBFSIter(const OBMolBondBFSIter &ai)$/;"	f	class:OpenBabel::OBMolBondBFSIter
OBMolBondIter	include/openbabel/obiter.h	/^    OBMolBondIter() : _parent(NULL), _ptr(NULL) {}$/;"	f	class:OpenBabel::OBMolBondIter
OBMolBondIter	include/openbabel/obiter.h	/^  class OBAPI OBMolBondIter {$/;"	c	namespace:OpenBabel
OBMolBondIter	src/obiter.cpp	/^  OBMolBondIter::OBMolBondIter(OBMol &mol)$/;"	f	class:OpenBabel::OBMolBondIter
OBMolBondIter	src/obiter.cpp	/^  OBMolBondIter::OBMolBondIter(OBMol *mol)$/;"	f	class:OpenBabel::OBMolBondIter
OBMolBondIter	src/obiter.cpp	/^  OBMolBondIter::OBMolBondIter(const OBMolBondIter &bi)$/;"	f	class:OpenBabel::OBMolBondIter
OBMolPairIter	include/openbabel/obiter.h	/^    OBMolPairIter() :_parent(NULL) { }$/;"	f	class:OpenBabel::OBMolPairIter
OBMolPairIter	include/openbabel/obiter.h	/^  class OBAPI OBMolPairIter {$/;"	c	namespace:OpenBabel
OBMolPairIter	src/obiter.cpp	/^  OBMolPairIter::OBMolPairIter(OBMol &mol)$/;"	f	class:OpenBabel::OBMolPairIter
OBMolPairIter	src/obiter.cpp	/^  OBMolPairIter::OBMolPairIter(OBMol *mol)$/;"	f	class:OpenBabel::OBMolPairIter
OBMolPairIter	src/obiter.cpp	/^  OBMolPairIter::OBMolPairIter(const OBMolPairIter &ai)$/;"	f	class:OpenBabel::OBMolPairIter
OBMolRingIter	include/openbabel/obiter.h	/^    OBMolRingIter() : _ptr(NULL), _parent(NULL), _rings(NULL) { }$/;"	f	class:OpenBabel::OBMolRingIter
OBMolRingIter	include/openbabel/obiter.h	/^  class OBAPI OBMolRingIter {$/;"	c	namespace:OpenBabel
OBMolRingIter	src/obiter.cpp	/^  OBMolRingIter::OBMolRingIter(OBMol &mol): _parent(&mol)$/;"	f	class:OpenBabel::OBMolRingIter
OBMolRingIter	src/obiter.cpp	/^  OBMolRingIter::OBMolRingIter(OBMol *mol): _parent(mol)$/;"	f	class:OpenBabel::OBMolRingIter
OBMolRingIter	src/obiter.cpp	/^  OBMolRingIter::OBMolRingIter(const OBMolRingIter &ri)$/;"	f	class:OpenBabel::OBMolRingIter
OBMolToRWMol	src/RDKitConv.cpp	/^RDKit::RWMol OBMolToRWMol(OpenBabel::OBMol* pOBMol)$/;"	f
OBMolTorsionIter	include/openbabel/obiter.h	/^    OBMolTorsionIter() :_parent(NULL) { }$/;"	f	class:OpenBabel::OBMolTorsionIter
OBMolTorsionIter	include/openbabel/obiter.h	/^  class OBAPI OBMolTorsionIter {$/;"	c	namespace:OpenBabel
OBMolTorsionIter	src/obiter.cpp	/^  OBMolTorsionIter::OBMolTorsionIter(OBMol &mol)$/;"	f	class:OpenBabel::OBMolTorsionIter
OBMolTorsionIter	src/obiter.cpp	/^  OBMolTorsionIter::OBMolTorsionIter(OBMol *mol)$/;"	f	class:OpenBabel::OBMolTorsionIter
OBMolTorsionIter	src/obiter.cpp	/^  OBMolTorsionIter::OBMolTorsionIter(const OBMolTorsionIter &ai)$/;"	f	class:OpenBabel::OBMolTorsionIter
OBMoldenFormat	src/formats/moldenformat.cpp	/^    OBMoldenFormat()$/;"	f	class:OpenBabel::OBMoldenFormat
OBMoldenFormat	src/formats/moldenformat.cpp	/^class OBMoldenFormat : public OpenBabel::OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
OBMoleculeFormat	include/openbabel/obmolecformat.h	/^  OBMoleculeFormat()$/;"	f	class:OpenBabel::OBMoleculeFormat
OBMoleculeFormat	include/openbabel/obmolecformat.h	/^class OBCOMMON OBMoleculeFormat : public OBFormat$/;"	c	namespace:OpenBabel
OBNasaThermoData	include/openbabel/kinetics.h	/^  OBNasaThermoData(): LoT(300),MidT(1000),HiT(3000),phase('G')$/;"	f	class:OpenBabel::OBNasaThermoData
OBNasaThermoData	include/openbabel/kinetics.h	/^class OBNasaThermoData : public OBGenericData$/;"	c	namespace:OpenBabel
OBNodeBase	include/openbabel/atom.h	/^  typedef OBAtom OBNodeBase;$/;"	t	namespace:OpenBabel
OBOp	include/openbabel/op.h	/^class OBAPI OBOp : public OBPlugin$/;"	c	namespace:OpenBabel
OBOpenDXCubeFormat	src/formats/opendxformat.cpp	/^    OBOpenDXCubeFormat()$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
OBOpenDXCubeFormat	src/formats/opendxformat.cpp	/^  class OBOpenDXCubeFormat : public OpenBabel::OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
OBOrbital	include/openbabel/generic.h	/^  class OBAPI OBOrbital$/;"	c	namespace:OpenBabel
OBOrbitalData	include/openbabel/generic.h	/^    OBOrbitalData(): OBGenericData("OrbitalData", OBGenericDataType::ElectronicData),$/;"	f	class:OpenBabel::OBOrbitalData
OBOrbitalData	include/openbabel/generic.h	/^  class OBAPI OBOrbitalData: public OBGenericData$/;"	c	namespace:OpenBabel
OBPainter	include/openbabel/depict/painter.h	/^  class OBDEPICT OBPainter$/;"	c	namespace:OpenBabel
OBPairBool	include/openbabel/generic.h	/^  typedef OBPairTemplate<bool>    OBPairBool;$/;"	t	namespace:OpenBabel
OBPairData	include/openbabel/generic.h	/^ class OBAPI OBPairData : public OBGenericData$/;"	c	namespace:OpenBabel
OBPairData	src/generic.cpp	/^  OBPairData::OBPairData() :$/;"	f	class:OpenBabel::OBPairData
OBPairFloatingPoint	include/openbabel/generic.h	/^  typedef OBPairTemplate<double>  OBPairFloatingPoint;$/;"	t	namespace:OpenBabel
OBPairInteger	include/openbabel/generic.h	/^  typedef OBPairTemplate<int>     OBPairInteger;$/;"	t	namespace:OpenBabel
OBPairTemplate	include/openbabel/generic.h	/^    class OBPairTemplate : public OBGenericData \/\/ Note: no OBAPI should be used$/;"	c	namespace:OpenBabel
OBPairTemplate	include/openbabel/generic.h	/^  OBPairTemplate():$/;"	f	class:OpenBabel::OBPairTemplate
OBPhModel	include/openbabel/phmodel.h	/^class OBAPI OBPhModel : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBPhModel	src/phmodel.cpp	/^  OBPhModel::OBPhModel()$/;"	f	class:OpenBabel::OBPhModel
OBPlugin	include/openbabel/plugin.h	/^class OBERROR OBPlugin$/;"	c	namespace:OpenBabel
OBPointGroup	include/openbabel/pointgroup.h	/^  class OBAPI OBPointGroup$/;"	c	namespace:OpenBabel
OBPointGroup	src/pointgroup.cpp	/^  OBPointGroup::OBPointGroup()$/;"	f	class:OpenBabel::OBPointGroup
OBPolarGrid	include/openbabel/grid.h	288;"	d
OBProxGrid	include/openbabel/grid.h	/^    OBProxGrid(int gridtype=0)$/;"	f	class:OpenBabel::OBProxGrid
OBProxGrid	include/openbabel/grid.h	/^ class OBAPI OBProxGrid: public OBGrid$/;"	c	namespace:OpenBabel
OBQuery	include/openbabel/query.h	/^  class OBAPI OBQuery$/;"	c	namespace:OpenBabel
OBQueryAtom	include/openbabel/query.h	/^      OBQueryAtom(int atomicNum = 6, bool isInRing = false, bool isAromatic = false) :$/;"	f	class:OpenBabel::OBQueryAtom
OBQueryAtom	include/openbabel/query.h	/^  class OBAPI OBQueryAtom$/;"	c	namespace:OpenBabel
OBQueryBond	include/openbabel/query.h	/^      OBQueryBond(OBQueryAtom *begin, OBQueryAtom *end, int order = 1, bool aromatic = false) :$/;"	f	class:OpenBabel::OBQueryBond
OBQueryBond	include/openbabel/query.h	/^  class OBAPI OBQueryBond$/;"	c	namespace:OpenBabel
OBRMSDConformerScore	include/openbabel/conformersearch.h	/^  class OBAPI OBRMSDConformerScore : public OBConformerScore$/;"	c	namespace:OpenBabel
OBRTree	include/openbabel/ring.h	/^  class OBAPI OBRTree$/;"	c	namespace:OpenBabel
OBRTree	src/ring.cpp	/^  OBRTree::OBRTree(OBAtom *atom,OBRTree *prv)$/;"	f	class:OpenBabel::OBRTree
OBRandom	include/openbabel/rand.h	/^  class OBAPI OBRandom$/;"	c	namespace:OpenBabel
OBRandom	src/rand.cpp	/^  OBRandom::OBRandom(bool useSysRand)$/;"	f	class:OpenBabel::OBRandom
OBRandomUseSysRand	include/openbabel/rand.h	/^    bool OBRandomUseSysRand;$/;"	m	class:OpenBabel::OBRandom
OBRateData	include/openbabel/kinetics.h	/^  OBRateData():OBGenericData("Rate data", RateData)$/;"	f	class:OpenBabel::OBRateData
OBRateData	include/openbabel/kinetics.h	/^class OBRateData : public OBGenericData$/;"	c	namespace:OpenBabel
OBReaction	include/openbabel/reaction.h	/^  OBReaction() : _reversible(false)$/;"	f	class:OpenBabel::OBReaction
OBReaction	include/openbabel/reaction.h	/^class OBReaction : public OBBase$/;"	c	namespace:OpenBabel
OBReleaseVersion	src/base.cpp	/^  std::string OBReleaseVersion()$/;"	f	namespace:OpenBabel
OBResidue	include/openbabel/residue.h	/^ class OBAPI OBResidue : public OBBase$/;"	c	namespace:OpenBabel
OBResidue	src/residue.cpp	/^  OBResidue::OBResidue()$/;"	f	class:OpenBabel::OBResidue
OBResidue	src/residue.cpp	/^  OBResidue::OBResidue(const OBResidue &src) :$/;"	f	class:OpenBabel::OBResidue
OBResidueAtomIter	include/openbabel/obiter.h	/^    OBResidueAtomIter() : _parent(NULL), _ptr(NULL) { }$/;"	f	class:OpenBabel::OBResidueAtomIter
OBResidueAtomIter	include/openbabel/obiter.h	/^  class OBAPI OBResidueAtomIter {$/;"	c	namespace:OpenBabel
OBResidueAtomIter	src/obiter.cpp	/^  OBResidueAtomIter::OBResidueAtomIter(OBResidue &res):$/;"	f	class:OpenBabel::OBResidueAtomIter
OBResidueAtomIter	src/obiter.cpp	/^  OBResidueAtomIter::OBResidueAtomIter(OBResidue *res):$/;"	f	class:OpenBabel::OBResidueAtomIter
OBResidueAtomIter	src/obiter.cpp	/^  OBResidueAtomIter::OBResidueAtomIter(const OBResidueAtomIter &ri)$/;"	f	class:OpenBabel::OBResidueAtomIter
OBResidueAtomProperty	include/openbabel/residue.h	/^  namespace OBResidueAtomProperty$/;"	n	namespace:OpenBabel
OBResidueData	include/openbabel/data.h	/^  class OBAPI OBResidueData : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBResidueData	src/data.cpp	/^  OBResidueData::OBResidueData()$/;"	f	class:OpenBabel::OBResidueData
OBResidueIndex	include/openbabel/residue.h	/^  namespace OBResidueIndex$/;"	n	namespace:OpenBabel
OBResidueIter	include/openbabel/obiter.h	/^    OBResidueIter() : _ptr(NULL), _parent(NULL) { }$/;"	f	class:OpenBabel::OBResidueIter
OBResidueIter	include/openbabel/obiter.h	/^  class OBAPI OBResidueIter {$/;"	c	namespace:OpenBabel
OBResidueIter	src/obiter.cpp	/^  OBResidueIter::OBResidueIter(OBMol &mol)$/;"	f	class:OpenBabel::OBResidueIter
OBResidueIter	src/obiter.cpp	/^  OBResidueIter::OBResidueIter(OBMol *mol)$/;"	f	class:OpenBabel::OBResidueIter
OBResidueIter	src/obiter.cpp	/^  OBResidueIter::OBResidueIter(const OBResidueIter &ri)$/;"	f	class:OpenBabel::OBResidueIter
OBResidueIterator	include/openbabel/residue.h	/^  typedef std::vector<OBResidue*>::iterator OBResidueIterator;$/;"	t	namespace:OpenBabel
OBResidueProperty	include/openbabel/residue.h	/^  namespace OBResidueProperty$/;"	n	namespace:OpenBabel
OBRing	include/openbabel/ring.h	/^    OBRing()    {}$/;"	f	class:OpenBabel::OBRing
OBRing	include/openbabel/ring.h	/^    OBRing(std::vector<int>& path, OBBitVec set) : _path(path), _pathset(set) {}$/;"	f	class:OpenBabel::OBRing
OBRing	include/openbabel/ring.h	/^  class OBAPI OBRing$/;"	c	namespace:OpenBabel
OBRing	src/ring.cpp	/^  OBRing::OBRing(const OBRing &src)$/;"	f	class:OpenBabel::OBRing
OBRing	src/ring.cpp	/^  OBRing::OBRing(vector<int> &path,int size) : _path(path)$/;"	f	class:OpenBabel::OBRing
OBRingData	include/openbabel/generic.h	/^ class OBAPI OBRingData : public OBGenericData$/;"	c	namespace:OpenBabel
OBRingData	src/generic.cpp	/^  OBRingData::OBRingData() :$/;"	f	class:OpenBabel::OBRingData
OBRingData	src/generic.cpp	/^  OBRingData::OBRingData(const OBRingData &src)$/;"	f	class:OpenBabel::OBRingData
OBRingSearch	include/openbabel/ring.h	/^    OBRingSearch()    {}$/;"	f	class:OpenBabel::OBRingSearch
OBRingSearch	include/openbabel/ring.h	/^  class OBAPI OBRingSearch$/;"	c	namespace:OpenBabel
OBRingTyper	include/openbabel/typer.h	/^class OBAPI OBRingTyper : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBRingTyper	src/typer.cpp	/^  OBRingTyper::OBRingTyper()$/;"	f	class:OpenBabel::OBRingTyper
OBRotamerList	include/openbabel/rotamer.h	/^    OBRotamerList()$/;"	f	class:OpenBabel::OBRotamerList
OBRotamerList	include/openbabel/rotamer.h	/^ class OBAPI OBRotamerList : public OBGenericData$/;"	c	namespace:OpenBabel
OBRotationData	include/openbabel/generic.h	/^   OBRotationData(): OBGenericData("RotationData", OBGenericDataType::RotationData){}$/;"	f	class:OpenBabel::OBRotationData
OBRotationData	include/openbabel/generic.h	/^ class OBAPI OBRotationData: public OBGenericData$/;"	c	namespace:OpenBabel
OBRotor	include/openbabel/rotor.h	/^  class OBAPI OBRotor$/;"	c	namespace:OpenBabel
OBRotor	src/rotor.cpp	/^  OBRotor::OBRotor()$/;"	f	class:OpenBabel::OBRotor
OBRotorIterator	include/openbabel/rotor.h	/^  typedef std::vector<OBRotor*>::iterator OBRotorIterator;$/;"	t	namespace:OpenBabel
OBRotorKeys	include/openbabel/rotor.h	/^      OBRotorKeys()$/;"	f	class:OBRotorKeys
OBRotorKeys	include/openbabel/rotor.h	/^  class OBAPI OBRotorKeys$/;"	c
OBRotorList	include/openbabel/rotor.h	/^  class OBAPI OBRotorList$/;"	c	namespace:OpenBabel
OBRotorList	src/rotor.cpp	/^  OBRotorList::OBRotorList()$/;"	f	class:OpenBabel::OBRotorList
OBRotorRule	include/openbabel/rotor.h	/^  OBRotorRule(char *buffer,int ref[4],std::vector<double> &vals,double d):$/;"	f	class:OpenBabel::OBRotorRule
OBRotorRule	include/openbabel/rotor.h	/^  class OBAPI OBRotorRule$/;"	c	namespace:OpenBabel
OBRotorRules	include/openbabel/rotor.h	/^  class OBAPI OBRotorRules : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBRotorRules	src/rotor.cpp	/^  OBRotorRules::OBRotorRules()$/;"	f	class:OpenBabel::OBRotorRules
OBSSMatch	include/openbabel/parsmart.h	/^  class OBAPI OBSSMatch$/;"	c	namespace:OpenBabel
OBSSMatch	src/parsmart.cpp	/^  OBSSMatch::OBSSMatch(OBMol &mol, const Pattern *pat)$/;"	f	class:OpenBabel::OBSSMatch
OBScoreGrid	include/openbabel/grid.h	/^    OBScoreGrid(void)                 {  verbose = false;      }$/;"	f	class:OpenBabel::OBScoreGrid
OBScoreGrid	include/openbabel/grid.h	/^  class OBAPI OBScoreGrid$/;"	c	namespace:OpenBabel
OBSerialNums	include/openbabel/generic.h	/^  OBSerialNums() :$/;"	f	class:OpenBabel::OBSerialNums
OBSerialNums	include/openbabel/generic.h	/^  OBSerialNums(const OBSerialNums &cp) : OBGenericData(cp)$/;"	f	class:OpenBabel::OBSerialNums
OBSerialNums	include/openbabel/generic.h	/^ class OBSerialNums : public OBGenericData$/;"	c	namespace:OpenBabel
OBSetData	include/openbabel/generic.h	/^  OBSetData() : OBGenericData("SetData", OBGenericDataType::SetData) {}$/;"	f	class:OpenBabel::OBSetData
OBSetData	include/openbabel/generic.h	/^ class OBAPI OBSetData : public OBGenericData$/;"	c	namespace:OpenBabel
OBSmartsMatcher	include/openbabel/parsmart.h	/^    OBSmartsMatcher() {}$/;"	f	class:OpenBabel::OBSmartsMatcher
OBSmartsMatcher	include/openbabel/parsmart.h	/^  class OBAPI OBSmartsMatcher$/;"	c	namespace:OpenBabel
OBSmartsPattern	include/openbabel/parsmart.h	/^  OBSmartsPattern() : _pat(NULL), _buffer(NULL), LexPtr(NULL), MainPtr(NULL) { }$/;"	f	class:OpenBabel::OBSmartsPattern
OBSmartsPattern	include/openbabel/parsmart.h	/^  OBSmartsPattern(const OBSmartsPattern& cp): _pat(NULL), _buffer(NULL), LexPtr(NULL), MainPtr(NULL)$/;"	f	class:OpenBabel::OBSmartsPattern
OBSmartsPattern	include/openbabel/parsmart.h	/^  class OBAPI OBSmartsPattern$/;"	c	namespace:OpenBabel
OBSmilesParser	src/formats/smilesformat.cpp	/^    OBSmilesParser() { }$/;"	f	class:OpenBabel::OBSmilesParser
OBSmilesParser	src/formats/smilesformat.cpp	/^  class OBSmilesParser$/;"	c	namespace:OpenBabel	file:
OBSpectrophore	include/openbabel/spectrophore.h	/^   class OBAPI OBSpectrophore$/;"	c	namespace:OpenBabel
OBSpectrophore	src/spectrophore.cpp	/^OBSpectrophore::OBSpectrophore(const OBSpectrophore& s)$/;"	f	class:OpenBabel::OBSpectrophore
OBSpectrophore	src/spectrophore.cpp	/^OBSpectrophore::OBSpectrophore(void)$/;"	f	class:OpenBabel::OBSpectrophore
OBSqrtTbl	include/openbabel/obutil.h	/^  OBSqrtTbl():$/;"	f	class:OpenBabel::OBSqrtTbl
OBSqrtTbl	include/openbabel/obutil.h	/^  OBSqrtTbl(const double max, const double incr):$/;"	f	class:OpenBabel::OBSqrtTbl
OBSqrtTbl	include/openbabel/obutil.h	/^  class OBAPI OBSqrtTbl$/;"	c	namespace:OpenBabel
OBSquarePlanarConfig	include/openbabel/stereo/bindings.h	/^  struct OBSquarePlanarConfig$/;"	s	namespace:OpenBabel
OBSquarePlanarStereo	include/openbabel/stereo/squareplanar.h	/^class OBAPI OBSquarePlanarStereo : public OBTetraPlanarStereo$/;"	c	namespace:OpenBabel
OBSquarePlanarStereo	src/stereo/squareplanar.cpp	/^  OBSquarePlanarStereo::OBSquarePlanarStereo(OBMol *mol) : OBTetraPlanarStereo(mol)$/;"	f	class:OpenBabel::OBSquarePlanarStereo
OBStereo	include/openbabel/stereo/stereo.h	/^  struct OBAPI OBStereo$/;"	s	namespace:OpenBabel
OBStereoBase	include/openbabel/stereo/stereo.h	/^      OBStereoBase(OBMol *mol) :$/;"	f	class:OpenBabel::OBStereoBase
OBStereoBase	include/openbabel/stereo/stereo.h	/^  class OBAPI OBStereoBase : public OBGenericData$/;"	c	namespace:OpenBabel
OBStereoCenterTraits	src/stereo/stereoutil.h	/^  template<> struct OBStereoCenterTraits<OBAtom> : OBStereoTypeTraits<OBStereo::Tetrahedral> {};$/;"	s	namespace:OpenBabel
OBStereoCenterTraits	src/stereo/stereoutil.h	/^  template<> struct OBStereoCenterTraits<OBBond> : OBStereoTypeTraits<OBStereo::CisTrans> {};$/;"	s	namespace:OpenBabel
OBStereoFacade	include/openbabel/stereo/stereo.h	/^      OBStereoFacade(OBMol *mol, bool perceive = true) :$/;"	f	class:OpenBabel::OBStereoFacade
OBStereoFacade	include/openbabel/stereo/stereo.h	/^  class OBAPI OBStereoFacade$/;"	c	namespace:OpenBabel
OBStereoTypeTraits	src/stereo/stereoutil.h	/^  template<> struct OBStereoTypeTraits<OBStereo::CisTrans>$/;"	s	namespace:OpenBabel
OBStereoTypeTraits	src/stereo/stereoutil.h	/^  template<> struct OBStereoTypeTraits<OBStereo::Tetrahedral>$/;"	s	namespace:OpenBabel
OBStereoUnit	include/openbabel/stereo/stereo.h	/^    OBStereoUnit() : type(static_cast<OBStereo::Type>(0)), id(OBStereo::NoRef), para(false)$/;"	f	struct:OpenBabel::OBStereoUnit
OBStereoUnit	include/openbabel/stereo/stereo.h	/^    OBStereoUnit(OBStereo::Type _type, unsigned long _id, bool _para = false) :$/;"	f	struct:OpenBabel::OBStereoUnit
OBStereoUnit	include/openbabel/stereo/stereo.h	/^  struct OBStereoUnit$/;"	s	namespace:OpenBabel
OBStereoUnitSet	include/openbabel/stereo/stereo.h	/^  typedef std::vector<OBStereoUnit> OBStereoUnitSet;$/;"	t	namespace:OpenBabel
OBStereoUnitSetOfSets	include/openbabel/stereo/stereo.h	/^  typedef std::vector<OBStereoUnitSet> OBStereoUnitSetOfSets;$/;"	t	namespace:OpenBabel
OBStericConformerFilter	include/openbabel/conformersearch.h	/^  class OBAPI OBStericConformerFilter : public OBConformerFilter$/;"	c	namespace:OpenBabel
OBStericConformerFilter	src/conformersearch.cpp	/^  OBStericConformerFilter::OBStericConformerFilter ()$/;"	f	class:OpenBabel::OBStericConformerFilter
OBStericConformerFilter	src/conformersearch.cpp	/^  OBStericConformerFilter::OBStericConformerFilter (double cutoff, double vdw_factor, bool check_hydrogens)$/;"	f	class:OpenBabel::OBStericConformerFilter
OBStopwatch	include/openbabel/obutil.h	/^  class OBAPI OBStopwatch$/;"	c	namespace:OpenBabel
OBSymmetryData	include/openbabel/generic.h	/^ class OBAPI OBSymmetryData: public OBGenericData$/;"	c	namespace:OpenBabel
OBSymmetryData	src/generic.cpp	/^  OBSymmetryData::OBSymmetryData():$/;"	f	class:OpenBabel::OBSymmetryData
OBSymmetryData	src/generic.cpp	/^  OBSymmetryData::OBSymmetryData(const OBSymmetryData &src) :$/;"	f	class:OpenBabel::OBSymmetryData
OBT41Format	src/formats/adfformat.cpp	/^    OBT41Format()$/;"	f	class:OpenBabel::OBT41Format
OBT41Format	src/formats/adfformat.cpp	/^class OBT41Format : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
OBTetraNonPlanarStereo	include/openbabel/stereo/tetranonplanar.h	/^  class OBAPI OBTetraNonPlanarStereo : public OBStereoBase$/;"	c	namespace:OpenBabel
OBTetraNonPlanarStereo	src/stereo/tetranonplanar.cpp	/^  OBTetraNonPlanarStereo::OBTetraNonPlanarStereo(OBMol *mol) : OBStereoBase(mol)$/;"	f	class:OpenBabel::OBTetraNonPlanarStereo
OBTetraPlanarStereo	include/openbabel/stereo/tetraplanar.h	/^  class OBAPI OBTetraPlanarStereo : public OBStereoBase$/;"	c	namespace:OpenBabel
OBTetraPlanarStereo	src/stereo/tetraplanar.cpp	/^  OBTetraPlanarStereo::OBTetraPlanarStereo(OBMol *mol) : OBStereoBase(mol)$/;"	f	class:OpenBabel::OBTetraPlanarStereo
OBTetrahedralConfig	include/openbabel/stereo/bindings.h	/^  struct OBTetrahedralConfig$/;"	s	namespace:OpenBabel
OBTetrahedralStereo	include/openbabel/stereo/tetrahedral.h	/^class OBAPI OBTetrahedralStereo : public OBTetraNonPlanarStereo$/;"	c	namespace:OpenBabel
OBTetrahedralStereo	src/stereo/tetrahedral.cpp	/^  OBTetrahedralStereo::OBTetrahedralStereo(OBMol *mol) :$/;"	f	class:OpenBabel::OBTetrahedralStereo
OBText	include/openbabel/text.h	/^  OBText(){}$/;"	f	class:OpenBabel::OBText
OBText	include/openbabel/text.h	/^  OBText(const std::string& text) :txt(text) {}$/;"	f	class:OpenBabel::OBText
OBText	include/openbabel/text.h	/^class OBText : public OBBase$/;"	c	namespace:OpenBabel
OBTorsion	include/openbabel/generic.h	/^    OBTorsion(): _bc((OBAtom *)NULL, (OBAtom *)NULL)      {      }$/;"	f	class:OpenBabel::OBTorsion
OBTorsion	include/openbabel/generic.h	/^  class OBAPI OBTorsion$/;"	c	namespace:OpenBabel
OBTorsion	src/generic.cpp	/^  OBTorsion::OBTorsion(OBAtom *a,OBAtom *b, OBAtom *c,OBAtom *d)$/;"	f	class:OpenBabel::OBTorsion
OBTorsion	src/generic.cpp	/^  OBTorsion::OBTorsion(const OBTorsion &src)$/;"	f	class:OpenBabel::OBTorsion
OBTorsionData	include/openbabel/generic.h	/^ class OBAPI OBTorsionData : public OBGenericData$/;"	c	namespace:OpenBabel
OBTorsionData	src/generic.cpp	/^  OBTorsionData::OBTorsionData()$/;"	f	class:OpenBabel::OBTorsionData
OBTorsionData	src/generic.cpp	/^  OBTorsionData::OBTorsionData(const OBTorsionData &src)$/;"	f	class:OpenBabel::OBTorsionData
OBTypeTable	include/openbabel/data.h	/^  class OBAPI OBTypeTable : public OBGlobalDataBase$/;"	c	namespace:OpenBabel
OBTypeTable	src/data.cpp	/^  OBTypeTable::OBTypeTable()$/;"	f	class:OpenBabel::OBTypeTable
OBUNITCELL_CALL_CONST_OVERLOAD	src/generic.cpp	637;"	d	file:
OBUNITCELL_CALL_CONST_OVERLOAD_ARG	src/generic.cpp	642;"	d	file:
OBUnitCell	include/openbabel/generic.h	/^ class OBAPI OBUnitCell: public OBGenericData$/;"	c	namespace:OpenBabel
OBUnitCell	src/generic.cpp	/^  OBUnitCell::OBUnitCell():$/;"	f	class:OpenBabel::OBUnitCell
OBUnitCell	src/generic.cpp	/^  OBUnitCell::OBUnitCell(const OBUnitCell &src) :$/;"	f	class:OpenBabel::OBUnitCell
OBVectorData	include/openbabel/generic.h	/^   OBVectorData(): OBGenericData("VectorData", OBGenericDataType::VectorData){}$/;"	f	class:OpenBabel::OBVectorData
OBVectorData	include/openbabel/generic.h	/^ class OBAPI OBVectorData: public OBGenericData$/;"	c	namespace:OpenBabel
OBVerboseBFSVisitor	include/OB-BGL/verbose_visitors.h	/^    OBVerboseBFSVisitor( std::ostream& o ) : os(o) {}$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
OBVerboseBFSVisitor	include/OB-BGL/verbose_visitors.h	/^class OBVerboseBFSVisitor$/;"	c	namespace:OpenBabel
OBVerboseDFSVisitor	include/OB-BGL/verbose_visitors.h	/^    OBVerboseDFSVisitor( std::ostream& o ) : os(o) {}$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
OBVerboseDFSVisitor	include/OB-BGL/verbose_visitors.h	/^class OBVerboseDFSVisitor {$/;"	c	namespace:OpenBabel
OBVibrationData	include/openbabel/generic.h	/^    OBVibrationData(): OBGenericData("VibrationData", OBGenericDataType::VibrationData){};$/;"	f	class:OpenBabel::OBVibrationData
OBVibrationData	include/openbabel/generic.h	/^ class OBAPI OBVibrationData: public OBGenericData$/;"	c	namespace:OpenBabel
OBVirtualBond	include/openbabel/generic.h	/^ class OBAPI OBVirtualBond : public OBGenericData$/;"	c	namespace:OpenBabel
OBVirtualBond	src/generic.cpp	/^  OBVirtualBond::OBVirtualBond():$/;"	f	class:OpenBabel::OBVirtualBond
OBVirtualBond	src/generic.cpp	/^  OBVirtualBond::OBVirtualBond(int bgn,int end,int ord,int stereo):$/;"	f	class:OpenBabel::OBVirtualBond
OB_3RING_ATOM	include/openbabel/atom.h	54;"	d
OB_4RING_ATOM	include/openbabel/atom.h	52;"	d
OB_ACCEPTOR_ATOM	include/openbabel/atom.h	66;"	d
OB_ACSTEREO_ATOM	include/openbabel/atom.h	62;"	d
OB_ALIAS_H	include/openbabel/alias.h	16;"	d
OB_ALIGN_H	include/openbabel/math/align.h	20;"	d
OB_AROMATIC_ATOM	include/openbabel/atom.h	56;"	d
OB_AROMATIC_BOND	include/openbabel/bond.h	44;"	d
OB_AROMATIC_MOL	include/openbabel/mol.h	72;"	d
OB_AROM_CORRECTED_MOL	include/openbabel/mol.h	92;"	d
OB_ASCIIPAINTER_H	include/openbabel/depict/asciipainter.h	19;"	d
OB_ATOMCLASS_H	include/openbabel/atomclass.h	15;"	d
OB_ATOMSPIN_MOL	include/openbabel/mol.h	106;"	d
OB_ATOMTYPES_MOL	include/openbabel/mol.h	74;"	d
OB_ATOM_H	include/openbabel/atom.h	22;"	d
OB_ATOM_HAS_NO_H	include/openbabel/atom.h	74;"	d
OB_ATOM_NOT_H_DEFICIENT	include/openbabel/atom.h	76;"	d
OB_BASE_H	include/openbabel/base.h	21;"	d
OB_BINARY_SETWORD	src/rotamer.cpp	24;"	d	file:
OB_BITVEC_H	include/openbabel/bitvec.h	21;"	d
OB_BONDTYPER_H	include/openbabel/bondtyper.h	20;"	d
OB_BOND_H	include/openbabel/bond.h	23;"	d
OB_BUILDER_H	include/openbabel/builder.h	21;"	d
OB_CAIROPAINTER_H	include/openbabel/depict/cairopainter.h	2;"	d
OB_CHAINS_H	include/openbabel/chains.h	22;"	d
OB_CHAINS_MOL	include/openbabel/mol.h	94;"	d
OB_CHARGEMODEL_H	include/openbabel/chargemodel.h	21;"	d
OB_CHIRALITY_MOL	include/openbabel/mol.h	76;"	d
OB_CHIRAL_ATOM	include/openbabel/atom.h	68;"	d
OB_CHIRAL_H	include/openbabel/chiral.h	21;"	d
OB_CISTRANS_H	include/openbabel/stereo/cistrans.h	25;"	d
OB_CIS_OR_TRANS_BOND	include/openbabel/bond.h	66;"	d
OB_CLOSURE_BOND	include/openbabel/bond.h	62;"	d
OB_CLOSURE_MOL	include/openbabel/mol.h	86;"	d
OB_COMMANDPAINTER_H	include/openbabel/depict/commandpainter.h	19;"	d
OB_CONFORMERSEARCH_H	include/openbabel/conformersearch.h	21;"	d
OB_CONV_H	include/openbabel/obconversion.h	20;"	d
OB_CSTEREO_ATOM	include/openbabel/atom.h	60;"	d
OB_CURRENT_CONFORMER	include/openbabel/mol.h	108;"	d
OB_DATA_H	include/openbabel/data.h	21;"	d
OB_DATA_UTILITIES_H	include/openbabel/data_utilities.h	21;"	d
OB_DEFAULT_DELTA	src/rotor.cpp	1051;"	d	file:
OB_DEFAULT_DELTA	src/rotor.cpp	37;"	d	file:
OB_DEPICT_H	include/openbabel/depict/depict.h	20;"	d
OB_DESCRIPTOR_H	include/openbabel/descriptor.h	20;"	d
OB_DISTGEOM_H	include/openbabel/distgeom.h	21;"	d
OB_DLHANDLER_H	include/openbabel/dlhandler.h	20;"	d
OB_DONOR_ATOM	include/openbabel/atom.h	64;"	d
OB_ERF_H	include/openbabel/math/erf.h	4;"	d
OB_ERROR_H	include/openbabel/oberror.h	21;"	d
OB_FINGERPRINT_H	include/openbabel/fingerprint.h	20;"	d
OB_FORCEFIELD_H	include/openbabel/forcefield.h	20;"	d
OB_FORMAT_H	include/openbabel/format.h	20;"	d
OB_GASTEIGER_DAMP	include/openbabel/molchrg.h	77;"	d
OB_GASTEIGER_DENOM	include/openbabel/molchrg.h	76;"	d
OB_GASTEIGER_ITERS	include/openbabel/molchrg.h	78;"	d
OB_GENERIC_H	include/openbabel/generic.h	21;"	d
OB_GRAPHSYM_H	include/openbabel/graphsym.h	22;"	d
OB_GRIDDATA_H	include/openbabel/griddata.h	23;"	d
OB_GRID_H	include/openbabel/grid.h	22;"	d
OB_GROUPCONTRIB_H	include/openbabel/groupcontrib.h	24;"	d
OB_GUI_H	src/GUI/OBGUI.h	19;"	d
OB_HASH_BOND	include/openbabel/bond.h	48;"	d
OB_HYBRID_MOL	include/openbabel/mol.h	80;"	d
OB_H_ADDED_MOL	include/openbabel/mol.h	88;"	d
OB_IMPVAL_MOL	include/openbabel/mol.h	82;"	d
OB_INCHIFORMAT_H	include/openbabel/inchiformat.h	19;"	d
OB_INTERNALCOORD_H	include/openbabel/internalcoord.h	22;"	d
OB_ISOMORPHISM_H	include/openbabel/isomorphism.h	25;"	d
OB_KDOUBLE_BOND	include/openbabel/bond.h	58;"	d
OB_KEKULE_MOL	include/openbabel/mol.h	84;"	d
OB_KINETICS_H	include/openbabel/kinetics.h	17;"	d
OB_KSINGLE_BOND	include/openbabel/bond.h	56;"	d
OB_KTRIPLE_BOND	include/openbabel/bond.h	60;"	d
OB_LINEEND_H	include/openbabel/lineend.h	21;"	d
OB_LOCALE_H	include/openbabel/locale.h	20;"	d
OB_LSSR_MOL	include/openbabel/mol.h	104;"	d
OB_MATRIX3x3_H	include/openbabel/math/matrix3x3.h	22;"	d
OB_MATRIX_H	include/openbabel/matrix.h	21;"	d
OB_MOLCHRG_H	include/openbabel/molchrg.h	21;"	d
OB_MOLECULEFORMAT_H	include/openbabel/obmolecformat.h	20;"	d
OB_MOL_H	include/openbabel/mol.h	23;"	d
OB_NEG_CHIRAL_ATOM	include/openbabel/atom.h	72;"	d
OB_OBGUI_H	src/GUI/stdwx.h	19;"	d
OB_OBITER_H	include/openbabel/obiter.h	21;"	d
OB_OPTSWX_H	src/GUI/optswx.h	19;"	d
OB_OP_H	include/openbabel/op.h	20;"	d
OB_PAINTER_H	include/openbabel/depict/painter.h	20;"	d
OB_PARSMART_H	include/openbabel/parsmart.h	21;"	d
OB_PATTERN_STRUCTURE	include/openbabel/mol.h	102;"	d
OB_PATTY_H	include/openbabel/patty.h	21;"	d
OB_PCHARGE_MOL	include/openbabel/mol.h	78;"	d
OB_PHMODEL_H	include/openbabel/phmodel.h	21;"	d
OB_PH_CORRECTED_MOL	include/openbabel/mol.h	90;"	d
OB_PLUGIN_H	include/openbabel/plugin.h	20;"	d
OB_POINTGROUP_H	include/openbabel/pointgroup.h	21;"	d
OB_POS_CHIRAL_ATOM	include/openbabel/atom.h	70;"	d
OB_QUERY_H	include/openbabel/query.h	25;"	d
OB_REACT_H	include/openbabel/reaction.h	20;"	d
OB_RESIDUE_H	include/openbabel/residue.h	26;"	d
OB_RINGFLAGS_MOL	include/openbabel/mol.h	70;"	d
OB_RINGTYPES_MOL	include/openbabel/mol.h	100;"	d
OB_RING_ATOM	include/openbabel/atom.h	58;"	d
OB_RING_BOND	include/openbabel/bond.h	50;"	d
OB_RING_H	include/openbabel/ring.h	21;"	d
OB_ROTAMER_H	include/openbabel/rotamer.h	21;"	d
OB_ROTOR_H	include/openbabel/rotor.h	21;"	d
OB_RTREE_CUTOFF	src/ring.cpp	689;"	d	file:
OB_RTREE_CUTOFF	src/ring.cpp	714;"	d	file:
OB_SHARED_PTR_H	include/openbabel/shared_ptr.h	17;"	d
OB_SPACE_GROUP_H	include/openbabel/math/spacegroup.h	21;"	d
OB_SPECTROPHORE_H	include/openbabel/spectrophore.h	27;"	d
OB_SQUAREPLANAR_H	include/openbabel/stereo/squareplanar.h	25;"	d
OB_SSSR_MOL	include/openbabel/mol.h	68;"	d
OB_STATIC_PLUGIN	include/openbabel/plugin.h	372;"	d
OB_STEREO_H	include/openbabel/stereo/stereo.h	25;"	d
OB_SVGPAINTER_H	include/openbabel/depict/svgpainter.h	19;"	d
OB_TCHARGE_MOL	include/openbabel/mol.h	96;"	d
OB_TETRAHEDRAL_H	include/openbabel/stereo/tetrahedral.h	25;"	d
OB_TETRANONPLANAR_H	include/openbabel/stereo/tetranonplanar.h	25;"	d
OB_TETRAPLANAR_H	include/openbabel/stereo/tetraplanar.h	25;"	d
OB_TEXT_H	include/openbabel/text.h	20;"	d
OB_TITLE_SIZE	src/rotamer.cpp	23;"	d	file:
OB_TOKENST_H	include/openbabel/tokenst.h	21;"	d
OB_TORDOWN_BOND	include/openbabel/bond.h	54;"	d
OB_TORUP_BOND	include/openbabel/bond.h	52;"	d
OB_TRANSFORM_3D_H	include/openbabel/math/transform3d.h	21;"	d
OB_TSPIN_MOL	include/openbabel/mol.h	98;"	d
OB_TYPER_H	include/openbabel/typer.h	21;"	d
OB_UTIL_H	include/openbabel/obutil.h	21;"	d
OB_VECTOR_H	include/openbabel/math/vector3.h	22;"	d
OB_WEDGE_BOND	include/openbabel/bond.h	46;"	d
OB_WEDGE_OR_HASH_BOND	include/openbabel/bond.h	65;"	d
OB_XML_H	include/openbabel/xml.h	17;"	d
OF	include/zconf.h	168;"	d
OF	include/zconf.h	170;"	d
OH1	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH10	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH11	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH12	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH13	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH14	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH15	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH16	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH17	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH18	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH19	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH2	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH20	src/formats/smiley.h	/^    OH11, OH12, OH13, OH14, OH15, OH16, OH17, OH18, OH19, OH20,$/;"	e	enum:Smiley::Chirality
OH21	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH22	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH23	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH24	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH25	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH26	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH27	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH28	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH29	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH3	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH30	src/formats/smiley.h	/^    OH21, OH22, OH23, OH24, OH25, OH26, OH27, OH28, OH29, OH30$/;"	e	enum:Smiley::Chirality
OH4	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH5	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH6	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH7	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH8	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OH9	src/formats/smiley.h	/^    OH1, OH2, OH3, OH4, OH5, OH6, OH7, OH8, OH9, OH10,$/;"	e	enum:Smiley::Chirality
OMC	include/openbabel/residue.h	/^      OMC   = 33,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
OMG	include/openbabel/residue.h	/^      OMG   = 38,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
OMapType	src/GUI/optswx.h	/^	typedef std::vector <std::pair<wxString, wxWindow*> > OMapType;$/;"	t	class:DynOptionswx
OMols	src/formats/chemkinformat.cpp	/^  MolSet OMols;$/;"	m	class:OpenBabel::ChemKinFormat	file:
OMols	src/formats/xml/cmlreactformat.cpp	/^  MolMap OMols; \/\/used on output$/;"	m	class:OpenBabel::CMLReactFormat	file:
ONE_BAD_SB_NEIGHBOR	include/inchi/mode.h	479;"	d
ONE_LINKED_BOND	src/formats/libinchi/ichiread.c	/^} ONE_LINKED_BOND;$/;"	t	typeref:struct:tagOneLinkedBond	file:
ONE_OVER_SQRT3	src/atom.cpp	1521;"	d	file:
ONLY_DOUBLE_BOND_STEREO	include/inchi/mode.h	477;"	d
OPAMapType	include/openbabel/obconversion.h	/^      typedef std::map<std::string,int> OPAMapType;$/;"	t	class:OpenBabel::OBConversion
OPPOSITE_CHARGE_IN_CGROUP	include/inchi/mode.h	415;"	d
OPTIMIZATION_END_PATTERN	src/formats/nwchemformat.cpp	/^static const char* OPTIMIZATION_END_PATTERN = "  Optimization converged";$/;"	m	namespace:OpenBabel	file:
OPTIMIZATION_STEP_PATTERN	src/formats/nwchemformat.cpp	/^static const char* OPTIMIZATION_STEP_PATTERN = "Step       Energy";$/;"	m	namespace:OpenBabel	file:
OPTXYZ	src/formats/gamessukformat.cpp	/^    enum RunType_t { UNKNOWN, SINGLEPOINT, OPTXYZ, OPTZMAT, SADDLE, FREQUENCIES };$/;"	e	enum:OpenBabel::GAMESSUKOutputFormat::RunType_t	file:
OPTZMAT	src/formats/gamessukformat.cpp	/^    enum RunType_t { UNKNOWN, SINGLEPOINT, OPTXYZ, OPTZMAT, SADDLE, FREQUENCIES };$/;"	e	enum:OpenBabel::GAMESSUKOutputFormat::RunType_t	file:
OP_And	src/formats/smiley.h	/^    OP_And = OP_AndHi | OP_AndLo, \/\/ 6$/;"	e	enum:Smiley::SmartsLogicalOpType
OP_AndHi	src/formats/smiley.h	/^    OP_AndHi = 2,$/;"	e	enum:Smiley::SmartsLogicalOpType
OP_AndLo	src/formats/smiley.h	/^    OP_AndLo = 4,$/;"	e	enum:Smiley::SmartsLogicalOpType
OP_Not	src/formats/smiley.h	/^    OP_Not = 1,$/;"	e	enum:Smiley::SmartsLogicalOpType
OP_Or	src/formats/smiley.h	/^    OP_Or = 7$/;"	e	enum:Smiley::SmartsLogicalOpType
ORBITAL_SECTION_PATTERN_1	src/formats/nwchemformat.cpp	/^static const char* ORBITAL_SECTION_PATTERN_1 = "Analysis";$/;"	m	namespace:OpenBabel	file:
ORBITAL_SECTION_PATTERN_2	src/formats/nwchemformat.cpp	/^static const char* ORBITAL_SECTION_PATTERN_2 = "rbital";$/;"	m	namespace:OpenBabel	file:
ORBITAL_START_PATTERN	src/formats/nwchemformat.cpp	/^static const char* ORBITAL_START_PATTERN = "Vector";$/;"	m	namespace:OpenBabel	file:
ORIG_ATOM_DATA	include/inchi/inpdef.h	/^} ORIG_ATOM_DATA;$/;"	t	typeref:struct:tagOrigAtom
ORIG_INFO	include/inchi/ichi.h	/^} ORIG_INFO;$/;"	t	typeref:struct:tagOrigInfo
ORIG_STRUCT	include/inchi/inpdef.h	/^} ORIG_STRUCT;$/;"	t	typeref:struct:tagOriginalStruct
ORIG_STR_BUFLEN	src/formats/libinchi/ichiprt1.c	4061;"	d	file:
OS2	include/zconf.h	66;"	d
OSCILATOR_STRENGTH_PATTERN	src/formats/nwchemformat.cpp	/^static const char* OSCILATOR_STRENGTH_PATTERN = "Oscillator Strength";$/;"	m	namespace:OpenBabel	file:
OS_CODE	src/zipstream.h	47;"	d
OS_CODE	src/zipstream.h	50;"	d
OS_CODE	src/zipstream.h	53;"	d
OTHER	include/openbabel/griddata.h	/^    typedef enum { BOHR, ANGSTROM, OTHER } Unit;$/;"	e	enum:OpenBabel::OBGridData::__anon44
OUTOPTIONS	include/openbabel/obconversion.h	/^      enum Option_type { INOPTIONS, OUTOPTIONS, GENOPTIONS, ALL };$/;"	e	enum:OpenBabel::OBConversion::Option_type
OUTPUT_CONNECTED_METAL_ONLY	include/inchi/mode.h	427;"	d
OUT_N1	include/inchi/mode.h	449;"	d
OUT_N1	src/formats/libinchi/ichiprt1.c	684;"	d	file:
OUT_NN	include/inchi/mode.h	454;"	d
OUT_NONTAUT	src/formats/libinchi/ichiprt1.c	1063;"	d	file:
OUT_NT	include/inchi/mode.h	451;"	d
OUT_NT	src/formats/libinchi/ichiprt1.c	686;"	d	file:
OUT_T1	include/inchi/mode.h	450;"	d
OUT_T1	src/formats/libinchi/ichiprt1.c	685;"	d	file:
OUT_TN	include/inchi/mode.h	452;"	d
OUT_TN	src/formats/libinchi/ichiprt1.c	687;"	d	file:
ObjectValues	include/openbabel/json/json.h	/^      typedef CppTL::SmallMap<CZString, Value> ObjectValues;$/;"	t	class:Json::Value
ObjectValues	include/openbabel/json/json.h	/^      typedef std::map<CZString, Value> ObjectValues;$/;"	t	class:Json::Value
ObtainTarget	src/formats/fastsearchformat.cpp	/^  bool FastSearchFormat::ObtainTarget(OBConversion* pConv, vector<OBMol>& patternMols, const string& indexname)$/;"	f	class:OpenBabel::FastSearchFormat
OccupationData	include/openbabel/base.h	/^      OccupationData =    17,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Octahedral	include/openbabel/stereo/stereo.h	/^      Octahedral          = (1<<6)  \/\/!< Octahedral stereochemistry$/;"	e	enum:OpenBabel::OBStereo::Type
Oh	include/openbabel/pointgroup.h	/^        O, Oh, \/\/ 51, 52$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
OnChangeInputHere	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnChangeInputHere(wxCommandEvent& event)$/;"	f	class:OBGUIFrame
OnClickPlugin	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnClickPlugin(wxCommandEvent& event)$/;"	f	class:OBGUIFrame
OnClose	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnClose(wxCloseEvent& event)$/;"	f	class:OBGUIFrame
OnDblClick	src/GUI/OBGUI.cpp	/^void CFilenames::OnDblClick(wxMouseEvent& event)$/;"	f	class:CFilenames
OnDropFiles	src/GUI/OBGUI.h	/^  virtual bool OnDropFiles(wxCoord, wxCoord, const wxArrayString& filenames)$/;"	f	class:DnD
OnInFileNameUpdate	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnInFileNameUpdate(wxUpdateUIEvent& event)$/;"	f	class:OBGUIFrame
OnInit	src/GUI/OBGUI.cpp	/^bool OBGUIApp::OnInit()$/;"	f	class:OBGUIApp
OnKeyPress	src/GUI/OBGUI.cpp	/^void CFilenames::OnKeyPress(wxKeyEvent& event)$/;"	f	class:CFilenames
OnMouseWheel	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnMouseWheel(wxMouseEvent& event)$/;"	f	class:OBGUIFrame
OnOutFileNameUpdate	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnOutFileNameUpdate(wxUpdateUIEvent& event)$/;"	f	class:OBGUIFrame
OnRestrictFormats	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnRestrictFormats(wxCommandEvent& event)$/;"	f	class:OBGUIFrame
OnSaveConfig	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnSaveConfig(wxCommandEvent& event)$/;"	f	class:OBGUIFrame
OnSelectFormats	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnSelectFormats(wxCommandEvent& event)$/;"	f	class:OBGUIFrame
OnSetDisplayFile	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnSetDisplayFile(wxCommandEvent& event)$/;"	f	class:OBGUIFrame
OnSetMinSize	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnSetMinSize(wxCommandEvent& event)$/;"	f	class:OBGUIFrame
OnShowDataDir	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnShowDataDir(wxCommandEvent& (event))$/;"	f	class:OBGUIFrame
OneInChI2Atom	src/formats/libinchi/ichirvr4.c	/^int OneInChI2Atom( ICHICONST INPUT_PARMS *ip_inp, STRUCT_DATA *sd, const char *szCurHdr, long num_inp,$/;"	f
OneObjectOnly	include/openbabel/obconversion.h	/^      bool		  OneObjectOnly;$/;"	m	class:OpenBabel::OBConversion
OneThird	src/obutil.cpp	772;"	d	file:
One_ti	include/inchi/ichirvrs.h	/^    T_GROUP_INFO   One_ti;                    \/* t-groups of normalized canonicalized restored structure *\/$/;"	m	struct:tagStructFromInChI
Op2D	src/ops/op2d.cpp	/^  Op2D(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::Op2D
Op2D	src/ops/op2d.cpp	/^  class Op2D : public OBOp \/\/was OBERROR when with OpenBabelDLL$/;"	c	namespace:OpenBabel	file:
OpAddFileName	src/ops/addfilename.cpp	/^  OpAddFileName(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpAddFileName
OpAddFileName	src/ops/addfilename.cpp	/^class OpAddFileName : public OBOp$/;"	c	namespace:OpenBabel	file:
OpAddInIndex	src/ops/addinindex.cpp	/^  OpAddInIndex(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpAddInIndex
OpAddInIndex	src/ops/addinindex.cpp	/^class OpAddInIndex : public OBOp$/;"	c	namespace:OpenBabel	file:
OpAddNonPolarH	src/ops/addnonpolarh.cpp	/^  OpAddNonPolarH(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpAddNonPolarH
OpAddNonPolarH	src/ops/addnonpolarh.cpp	/^class OpAddNonPolarH : public OBOp$/;"	c	namespace:OpenBabel	file:
OpAddPolarH	src/ops/addpolarh.cpp	/^  OpAddPolarH(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpAddPolarH
OpAddPolarH	src/ops/addpolarh.cpp	/^class OpAddPolarH : public OBOp$/;"	c	namespace:OpenBabel	file:
OpAlign	src/ops/opalign.cpp	/^  OpAlign(const char* ID) : OBOp(ID, false), _align(false, false){};$/;"	f	class:OpenBabel::OpAlign
OpAlign	src/ops/opalign.cpp	/^class OpAlign : public OBOp$/;"	c	namespace:OpenBabel	file:
OpCanonical	src/ops/canonical.cpp	/^  OpCanonical(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpCanonical
OpCanonical	src/ops/canonical.cpp	/^class OpCanonical : public OBOp$/;"	c	namespace:OpenBabel	file:
OpChangeCell	src/ops/changecell.cpp	/^  OpChangeCell(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpChangeCell
OpChangeCell	src/ops/changecell.cpp	/^class OpChangeCell : public OBOp$/;"	c	namespace:OpenBabel	file:
OpConfab	src/ops/opconfab.cpp	/^      OpConfab(const char* ID) : OBOp(ID, false) {$/;"	f	class:OpenBabel::OpConfab
OpConfab	src/ops/opconfab.cpp	/^  class OpConfab : public OBOp$/;"	c	namespace:OpenBabel	file:
OpConformer	src/ops/conformer.cpp	/^      OpConformer(const char *ID) : OBOp(ID, false) {}$/;"	f	class:OpenBabel::OpConformer
OpConformer	src/ops/conformer.cpp	/^  class OpConformer : public OBOp$/;"	c	namespace:OpenBabel	file:
OpDelNonPolarH	src/ops/delnonpolarh.cpp	/^  OpDelNonPolarH(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpDelNonPolarH
OpDelNonPolarH	src/ops/delnonpolarh.cpp	/^class OpDelNonPolarH : public OBOp$/;"	c	namespace:OpenBabel	file:
OpDelPolarH	src/ops/delpolarh.cpp	/^  OpDelPolarH(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpDelPolarH
OpDelPolarH	src/ops/delpolarh.cpp	/^class OpDelPolarH : public OBOp$/;"	c	namespace:OpenBabel	file:
OpEnergy	src/ops/forcefield.cpp	/^      OpEnergy(const char *ID) : OBOp(ID, false) {}$/;"	f	class:OpenBabel::OpEnergy
OpEnergy	src/ops/forcefield.cpp	/^  class OpEnergy : public OBOp$/;"	c	namespace:OpenBabel	file:
OpExtraOut	src/ops/xout.cpp	/^  OpExtraOut(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpExtraOut
OpExtraOut	src/ops/xout.cpp	/^class OpExtraOut : public OBOp$/;"	c	namespace:OpenBabel	file:
OpFillUC	src/ops/fillUC.cpp	/^  OpFillUC(const char* ID) : OBOp(ID, false){$/;"	f	class:OpenBabel::OpFillUC
OpFillUC	src/ops/fillUC.cpp	/^class OpFillUC : public OBOp$/;"	c	namespace:OpenBabel	file:
OpGen2D	src/ops/gen2D.cpp	/^  OpGen2D(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpGen2D
OpGen2D	src/ops/gen2D.cpp	/^class OpGen2D : public OBOp$/;"	c	namespace:OpenBabel	file:
OpGen3D	src/ops/gen3d.cpp	/^  OpGen3D(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpGen3D
OpGen3D	src/ops/gen3d.cpp	/^class OpGen3D : public OBOp$/;"	c	namespace:OpenBabel	file:
OpGenAlias	src/alias.cpp	/^  OpGenAlias(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpGenAlias
OpGenAlias	src/alias.cpp	/^class OpGenAlias : public OBOp$/;"	c	namespace:OpenBabel	file:
OpHighlight	src/ops/ophighlight.cpp	/^  OpHighlight(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpHighlight
OpHighlight	src/ops/ophighlight.cpp	/^class OpHighlight : public OBOp$/;"	c	namespace:OpenBabel	file:
OpLargest	src/ops/largest.cpp	/^  OpLargest(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpLargest
OpLargest	src/ops/largest.cpp	/^class OpLargest : public OBOp$/;"	c	namespace:OpenBabel	file:
OpMap	include/openbabel/op.h	/^  typedef const std::map<std::string, std::string> OpMap ;$/;"	t	class:OpenBabel::OBOp
OpMinimize	src/ops/forcefield.cpp	/^      OpMinimize(const char* ID) : OBOp(ID, false) {}$/;"	f	class:OpenBabel::OpMinimize
OpMinimize	src/ops/forcefield.cpp	/^  class OpMinimize : public OBOp$/;"	c	namespace:OpenBabel	file:
OpNewS	src/ops/opisomorph.h	/^  OpNewS(const char* ID) : OBOp(ID, false){}$/;"	f	class:OpenBabel::OpNewS
OpNewS	src/ops/opisomorph.h	/^class OpNewS : public OBOp$/;"	c	namespace:OpenBabel
OpOptions	include/openbabel/op.h	/^  static std::string OpOptions(OBBase* pOb)$/;"	f	class:OpenBabel::OBOp
OpPartialCharge	src/ops/partialcharges.cpp	/^  OpPartialCharge(const char* ID) : OBOp(ID, false) {$/;"	f	class:OpenBabel::OpPartialCharge
OpPartialCharge	src/ops/partialcharges.cpp	/^class OpPartialCharge : public OBOp$/;"	c	namespace:OpenBabel	file:
OpReadConformers	src/ops/readconformers.cpp	/^  OpReadConformers(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpReadConformers
OpReadConformers	src/ops/readconformers.cpp	/^class OpReadConformers : public OBOp$/;"	c	namespace:OpenBabel	file:
OpSort	src/ops/sort.cpp	/^  OpSort(const char* ID) : OBOp(ID, false)$/;"	f	class:OpenBabel::OpSort
OpSort	src/ops/sort.cpp	/^class OpSort : public OBOp$/;"	c	namespace:OpenBabel	file:
OpSplit	src/ops/opsplit.cpp	/^  OpSplit(const char* ID) : OBOp(ID, false){};$/;"	f	class:OpenBabel::OpSplit
OpSplit	src/ops/opsplit.cpp	/^class OpSplit : public OBOp$/;"	c	namespace:OpenBabel	file:
OpTransform	include/openbabel/optransform.h	/^  OpTransform(const char* ID, const char* filename, const char* descr)$/;"	f	class:OpenBabel::OpTransform
OpTransform	include/openbabel/optransform.h	/^class OpTransform : public OBOp$/;"	c	namespace:OpenBabel
OpUnique	src/ops/unique.cpp	/^  OpUnique(const char* ID) : OBOp(ID, false){$/;"	f	class:OpenBabel::OpUnique
OpUnique	src/ops/unique.cpp	/^class OpUnique : public OBOp$/;"	c	namespace:OpenBabel	file:
OpenAndSetFormat	src/obconversion.cpp	/^  bool OBConversion::OpenAndSetFormat(bool SetFormat, ifstream* is, stringstream* ss)$/;"	f	class:OpenBabel::OBConversion
OpenBabel	include/OB-BGL/verbose_visitors.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/alias.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/atom.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/atomclass.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/base.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/bitvec.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/bond.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/bondtyper.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/builder.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/canon.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/chains.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/chargemodel.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/chiral.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/conformersearch.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/data.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/data_utilities.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/depict/asciipainter.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/depict/cairopainter.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/depict/commandpainter.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/depict/depict.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/depict/painter.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/depict/svgpainter.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/descriptor.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/distgeom.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/fingerprint.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/forcefield.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/format.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/generic.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/graphsym.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/grid.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/griddata.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/groupcontrib.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/inchiformat.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/internalcoord.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/isomorphism.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/kinetics.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/lineend.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/locale.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/math/align.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/math/matrix3x3.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/math/spacegroup.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/math/transform3d.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/math/vector3.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/matrix.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/mcdlutil.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/mol.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/molchrg.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/obconversion.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/oberror.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/obiter.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/obmolecformat.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/obutil.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/op.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/optransform.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/parsmart.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/patty.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/phmodel.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/plugin.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/pointgroup.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/query.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/rand.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/reaction.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/residue.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/ring.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/rotamer.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/rotor.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/spectrophore.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/stereo/bindings.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/stereo/cistrans.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/stereo/squareplanar.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/stereo/stereo.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/stereo/tetrahedral.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/stereo/tetranonplanar.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/stereo/tetraplanar.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/tautomer.h	/^namespace OpenBabel {$/;"	n
OpenBabel	include/openbabel/text.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/tokenst.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/typer.h	/^namespace OpenBabel$/;"	n
OpenBabel	include/openbabel/xml.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/alias.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/atom.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/base.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/bitvec.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/bond.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/bondtyper.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/builder.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/canon.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/chains.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/chargemodel.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/eem.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/eqeq.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/eqeq.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/charges/fromfile.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/gasteiger.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/mmff94.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/none.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/qeq.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/qeq.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/charges/qtpie.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/charges/qtpie.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/chiral.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/conformersearch.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/confsearch.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/data.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/data_utilities.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/depict/asciipainter.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/depict/cairopainter.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/depict/commandpainter.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/depict/depict.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/depict/svgpainter.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/descriptor.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/descriptors/cansmidescriptor.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/descriptors/cmpdfilter.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/descriptors/filters.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/descriptors/groupcontrib.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/descriptors/inchidescriptor.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/descriptors/smartsdescriptors.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/distgeom.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/dlhandler_unix.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/dlhandler_win32.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/doxygen_pages.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/fingerprint.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/fingerprints/finger2.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/fingerprints/finger3.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/fingerprints/fingerecfp.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/forcefield.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/forcefields/forcefieldgaff.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/forcefields/forcefieldgaff.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/forcefields/forcefieldghemical.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/forcefields/forcefieldghemical.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/forcefields/forcefieldmm2.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/forcefields/forcefieldmm2.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/forcefields/forcefieldmmff94.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/forcefields/forcefieldmmff94.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/forcefields/forcefielduff.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/forcefields/forcefielduff.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/format.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/APIInterface.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/CSRformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/MCDLformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/MNAformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/PQSformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/abinitformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/acesformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/acrformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/adfformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/alchemyformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/amberformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/aoforceformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/asciiformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/balstformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/bgfformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/boxformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/cacaoformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/cacheformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/carformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/castepformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/cccformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/chem3dformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/chemdrawcdx.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/chemdrawct.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/chemkinformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/chemtoolformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/cifformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/confabreport.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/copyformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/crkformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/crystal09format.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/cssrformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/daltonformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/dlpolyformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/dmolformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/exampleformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/exyzformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/fastaformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/fastsearchformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/fchkformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/featformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/fhformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/fhiaimsformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/fingerprintformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/fpsformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/freefracformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/gamessformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/gamessukformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/gausscubeformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/gaussformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/gausszmatformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/genbankformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/getinchi.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/ghemicalformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/groformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/gromos96format.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/gulpformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/hinformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/inchiformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/jaguarformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/json/chemdoodlejsonformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/json/pubchemjsonformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/lmpdatformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/lpmdformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/mdffformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/mdlformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/mmcifformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/mmodformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/mol2format.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/moldenformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/molproformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/molreport.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/mopacformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/mpdformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/mpqcformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/msiformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/msmsformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/nulformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/nwchemformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/opendxformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/orcaformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/outformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/painterformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/pcmodelformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/pdbformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/pdbqtformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/png2format.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/pngformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/pointcloudformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/posformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/povrayformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/pqrformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/pwscfformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/qchemformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/reportformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/rsmiformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/rxnformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/shelxformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/siestaformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/smilesformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/smileyformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/stlformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/svgformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/textformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/thermoformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/tinkerformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/titleformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/turbomoleformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/unichemformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/vaspformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/viewmolformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xedformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xml/cdxmlformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xml/cmlformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xml/cmlreactformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xml/pubchem.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xml/xml.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xml/xmlformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xsfformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xtcformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/xyzformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/formats/yasaraformat.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/formats/zindoformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/generic.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/graphsym.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/grid.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/griddata.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/isomorphism.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/kekulize.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/locale.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/math/align.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/math/matrix3x3.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/math/spacegroup.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/math/transform3d.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/math/vector3.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/matrix.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/mcdlutil.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/mol.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/molchrg.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/obconversion.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/oberror.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/obiter.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/obmolecformat.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/obutil.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/op.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/addfilename.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/addinindex.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/addnonpolarh.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/addpolarh.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/canonical.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/changecell.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/conformer.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/deferred.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/ops/delnonpolarh.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/delpolarh.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/fillUC.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/forcefield.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/gen2D.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/gen3d.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/largest.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/loader.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/op2d.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/opalign.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/opconfab.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/ophighlight.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/opisomorph.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/opisomorph.h	/^namespace OpenBabel$/;"	n
OpenBabel	src/ops/opsplit.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/optransform.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/partialcharges.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/readconformers.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/sort.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/unique.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ops/xout.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/parsmart.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/patty.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/phmodel.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/plugin.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/pointgroup.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/query.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/rand.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/residue.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/ring.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/rotamer.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/rotor.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/spectrophore.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/stereo/cistrans.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/stereo/facade.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/stereo/perception.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/stereo/squareplanar.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/stereo/stereo.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/stereo/stereoutil.h	/^namespace OpenBabel {$/;"	n
OpenBabel	src/stereo/tetrahedral.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/stereo/tetranonplanar.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/stereo/tetraplanar.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/tautomer.cpp	/^namespace OpenBabel {$/;"	n	file:
OpenBabel	src/tokenst.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/transform.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabel	src/typer.cpp	/^namespace OpenBabel$/;"	n	file:
OpenBabelCallback	src/formats/smileyformat.cpp	/^    OpenBabelCallback(OBMol *pmol) : mol(pmol)$/;"	f	struct:OpenBabel::OpenBabelCallback
OpenBabelCallback	src/formats/smileyformat.cpp	/^  struct OpenBabelCallback : public Smiley::CallbackBase$/;"	s	namespace:OpenBabel	file:
OpenDatafile	src/tokenst.cpp	/^  std::string OpenDatafile(std::ifstream& ifs, const std::string& filename,$/;"	f	namespace:OpenBabel
OpenFiles	include/inchi/ichiparm.h	/^int OpenFiles( FILE **inp_file, FILE **output_file, FILE **log_file, FILE **prb_file, INPUT_PARMS *ip )$/;"	f
OpenInAndOutFiles	src/obconversion.cpp	/^  bool OBConversion::OpenInAndOutFiles(std::string infilepath, std::string outfilepath)$/;"	f	class:OpenBabel::OBConversion
OptChangeHits	src/pointgroup.cpp	/^    int                    OptChangeHits         ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
OptChangeThreshold	src/pointgroup.cpp	/^    double                 OptChangeThreshold    ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
OptionMap	src/GUI/optswx.h	/^	OMapType OptionMap;$/;"	m	class:DynOptionswx
OptionParamArray	src/obconversion.cpp	/^  OBConversion::OPAMapType& OBConversion::OptionParamArray(Option_type typ)$/;"	f	class:OpenBabel::OBConversion
OptionType	include/openbabel/depict/depict.h	/^      enum OptionType{$/;"	g	class:OpenBabel::OBDepict
Option_type	include/openbabel/obconversion.h	/^      enum Option_type { INOPTIONS, OUTOPTIONS, GENOPTIONS, ALL };$/;"	g	class:OpenBabel::OBConversion
OptionsArray	include/openbabel/obconversion.h	/^      std::map<std::string,std::string> OptionsArray[3];$/;"	m	class:OpenBabel::OBConversion
OptionsRegistered	include/openbabel/obmolecformat.h	/^  static bool OptionsRegistered;$/;"	m	class:OpenBabel::OBMoleculeFormat
OptionsRegistered	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::OptionsRegistered=false;$/;"	m	class:OpenBabel::OBMoleculeFormat	file:
OptionsSizer	src/GUI/OBGUI.h	/^  wxBoxSizer* OptionsSizer;$/;"	m	class:OBGUIFrame
Orbit	src/canon.cpp	/^    typedef std::vector<OBAtom*> Orbit;$/;"	t	struct:OpenBabel::CanonicalLabelsImpl	file:
Orbits	src/canon.cpp	/^    typedef std::vector<Orbit> Orbits;$/;"	t	struct:OpenBabel::CanonicalLabelsImpl	file:
OrcaInputFormat	src/formats/orcaformat.cpp	/^    OrcaInputFormat()$/;"	f	class:OpenBabel::OrcaInputFormat
OrcaInputFormat	src/formats/orcaformat.cpp	/^  class OrcaInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
OrcaOutputFormat	src/formats/orcaformat.cpp	/^    OrcaOutputFormat()$/;"	f	class:OpenBabel::OrcaOutputFormat
OrcaOutputFormat	src/formats/orcaformat.cpp	/^  class OrcaOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Order	include/openbabel/descriptor.h	/^  virtual bool Order(double p1, double p2){ return p1<p2; }$/;"	f	class:OpenBabel::OBDescriptor
Order	include/openbabel/descriptor.h	/^  virtual bool Order(std::string s1, std::string s2){ return s1<s2; }$/;"	f	class:OpenBabel::OBDescriptor
Order	src/descriptors/inchidescriptor.cpp	/^  virtual bool Order(std::string s1, std::string s2)$/;"	f	class:OpenBabel::InChIFilter
Order	src/formats/xml/cdxmlformat.cpp	/^  int Begin, End, Order, Flag; \/\/ Data for current bond$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
Order	src/ops/sort.cpp	/^  Order(OBDescriptor* pDesc, bool rev) : _pDesc(pDesc), _rev(rev){}$/;"	f	struct:OpenBabel::Order
Order	src/ops/sort.cpp	/^struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>$/;"	s	namespace:OpenBabel	file:
OrigInfo	include/inchi/ichi.h	/^    ORIG_INFO *OrigInfo;$/;"	m	struct:tagINChI_Aux
OrigInpData	include/inchi/inchi_dll_a.h	/^    ORIG_ATOM_DATA  OrigInpData; $/;"	m	struct:tagINCHIGEN_CONTROL
OrigStruct	include/inchi/inchi_dll_a.h	/^    ORIG_STRUCT     OrigStruct;$/;"	m	struct:tagINCHIGEN_CONTROL
Orthorhombic	include/openbabel/generic.h	/^                       Orthorhombic,$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
Os	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Other	src/tautomer.cpp	/^      Other,$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
OutFilename	include/openbabel/obconversion.h	/^      std::string	  InFilename, OutFilename; \/\/OutFileName added v2.4.0$/;"	m	class:OpenBabel::OBConversion
OutSizer	src/GUI/OBGUI.h	/^  wxBoxSizer *OutSizer;$/;"	m	class:OBGUIFrame
OutputAtom	src/formats/pdbqtformat.cpp	/^  void OutputAtom(OBAtom* atom, ostream& ofs, const unsigned int index)$/;"	f	namespace:OpenBabel
OutputAtoms	src/formats/povrayformat.cpp	/^  void OutputAtoms(ostream &ofs, OBMol &mol, string prefix)$/;"	f	namespace:OpenBabel
OutputBASBonds	src/formats/povrayformat.cpp	/^  void OutputBASBonds(ostream &ofs, OBMol &mol, string prefix)$/;"	f	namespace:OpenBabel
OutputCSTBonds	src/formats/povrayformat.cpp	/^  void OutputCSTBonds(ostream &ofs, OBMol &mol, string prefix)$/;"	f	namespace:OpenBabel
OutputCenterComment	src/formats/povrayformat.cpp	/^  void OutputCenterComment(ostream &ofs,$/;"	f	namespace:OpenBabel
OutputDeferredMols	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::OutputDeferredMols(OBConversion* pConv)$/;"	f	class:OpenBabel::OBMoleculeFormat
OutputFilterString	src/GUI/OBGUI.h	/^  wxString InputFilterString, OutputFilterString;$/;"	m	class:OBGUIFrame
OutputFormat	src/formats/outformat.cpp	/^    OutputFormat()$/;"	f	class:OpenBabel::OutputFormat
OutputFormat	src/formats/outformat.cpp	/^  class OutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
OutputGroup	src/formats/pdbqtformat.cpp	/^  void OutputGroup(OBMol& mol, ostream& ofs, const vector <int>& group, map <unsigned int, unsigned int> new_indexes, bool use_new_indexes)$/;"	f	namespace:OpenBabel
OutputHeader	src/formats/povrayformat.cpp	/^  void PovrayFormat::OutputHeader(ostream &ofs, OBMol &mol, string prefix)$/;"	f	class:OpenBabel::PovrayFormat
OutputINChI1	src/formats/libinchi/ichiprt1.c	/^int OutputINChI1(char *pStr, int nStrLen,$/;"	f
OutputINChI2	src/formats/libinchi/ichiprt1.c	/^int OutputINChI2(char *pStr, int nStrLen,$/;"	f
OutputINChIPlainError	src/formats/libinchi/ichiprt1.c	/^int OutputINChIPlainError( INCHI_IOSTREAM *output_file, char *pStr, int nStrLen,$/;"	f
OutputINChIXmlError	src/formats/libinchi/ichiprt1.c	/^int OutputINChIXmlError( INCHI_IOSTREAM *output_file, char *pStr, int nStrLen, int ind,$/;"	f
OutputINChIXmlRootEndTag	src/formats/libinchi/ichiprt1.c	/^int OutputINChIXmlRootEndTag( INCHI_IOSTREAM *output_file )$/;"	f
OutputINChIXmlRootStartTag	src/formats/libinchi/ichiprt1.c	/^int OutputINChIXmlRootStartTag( INCHI_IOSTREAM *output_file )$/;"	f
OutputINChIXmlStructEndTag	src/formats/libinchi/ichiprt1.c	/^int OutputINChIXmlStructEndTag( INCHI_IOSTREAM *output_file, char *pStr, int nStrLen, int ind )$/;"	f
OutputINChIXmlStructStartTag	src/formats/libinchi/ichiprt1.c	/^int OutputINChIXmlStructStartTag( INCHI_IOSTREAM *output_file, char *pStr, int ind \/* indent*\/,$/;"	f
OutputInChIAsRequested	src/formats/libinchi/ichiread.c	/^int OutputInChIAsRequested(INCHI_IOSTREAM *pOut, INCHI_IOSTREAM *pLog, $/;"	f
OutputInChIOutOfStrFromINChI	src/formats/libinchi/ichirvr1.c	/^int OutputInChIOutOfStrFromINChI(ICHICONST INPUT_PARMS *ip_inp, STRUCT_DATA *sd_inp, $/;"	f
OutputMoleculeBonds	src/formats/povrayformat.cpp	/^  void OutputMoleculeBonds(ostream &ofs,$/;"	f	namespace:OpenBabel
OutputMoleculeNoBonds	src/formats/povrayformat.cpp	/^  void OutputMoleculeNoBonds(ostream &ofs, string prefix)$/;"	f	namespace:OpenBabel
OutputMolsFromReaction	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::OutputMolsFromReaction$/;"	f	class:OpenBabel::OBMoleculeFormat
OutputToStream	include/openbabel/xml.h	/^      void OutputToStream()$/;"	f	class:OpenBabel::XMLBaseFormat
OutputToStream	include/openbabel/xml.h	/^      void OutputToStream()$/;"	f	class:OpenBabel::XMLConversion
OutputTree	src/formats/pdbqtformat.cpp	/^  bool OutputTree(OBConversion* pConv, OBMol& mol, ostream& ofs, map <unsigned int, branch> & tree, unsigned int depth, bool moves_many, bool preserve_original_index)$/;"	f	namespace:OpenBabel
OutputUnions	src/formats/povrayformat.cpp	/^  void OutputUnions(ostream &ofs, OBMol &mol, string prefix)$/;"	f	namespace:OpenBabel
OverlapInt	src/charges/qtpie.cpp	/^double QTPIECharges::OverlapInt(double a, double b, double R)$/;"	f	class:OpenBabel::QTPIECharges
OverlapThreshold	src/charges/qtpie.h	/^const double OverlapThreshold = 1.e-9;$/;"	v
Oxygen	src/tautomer.cpp	/^      Oxygen = 8,$/;"	e	enum:OpenBabel::TautomerImpl::AtomNumber	file:
P	src/formats/libinchi/sha2.c	129;"	d	file:
P	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
PARITY_CALCULATE	include/inchi/extr_ct.h	275;"	d
PARITY_ILL_DEF	include/inchi/extr_ct.h	272;"	d
PARITY_IMPOSSIBLE	src/formats/libinchi/ichimap2.c	1789;"	d	file:
PARITY_KNOWN	include/inchi/extr_ct.h	273;"	d
PARITY_PART_DEF	include/inchi/extr_ct.h	271;"	d
PARITY_VAL	include/inchi/extr_ct.h	270;"	d
PARITY_WELL_DEF	include/inchi/extr_ct.h	274;"	d
PATH_LEN	src/formats/libinchi/ichiqueu.c	1089;"	d	file:
PATH_LEN	src/formats/libinchi/ichiqueu.c	1125;"	d	file:
PATH_LEN	src/formats/libinchi/ichiqueu.c	1288;"	d	file:
PATH_LEN	src/formats/libinchi/ichiqueu.c	1315;"	d	file:
PATH_LEN	src/formats/libinchi/ichiqueu.c	1433;"	d	file:
PATH_LEN	src/formats/libinchi/ichiqueu.c	723;"	d	file:
PATH_LEN	src/formats/libinchi/ichiqueu.c	860;"	d	file:
PATH_LEN	src/formats/libinchi/ichiqueu.c	882;"	d	file:
PCA	include/openbabel/residue.h	/^      PCA   = 22,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
PCModelFormat	src/formats/pcmodelformat.cpp	/^    PCModelFormat()$/;"	f	class:OpenBabel::PCModelFormat
PCModelFormat	src/formats/pcmodelformat.cpp	/^  class PCModelFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PDBFormat	src/formats/pdbformat.cpp	/^    PDBFormat()$/;"	f	class:OpenBabel::PDBFormat
PDBFormat	src/formats/pdbformat.cpp	/^  class PDBFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PDBQTFormat	src/formats/pdbqtformat.cpp	/^    PDBQTFormat()$/;"	f	class:OpenBabel::PDBQTFormat
PDBQTFormat	src/formats/pdbqtformat.cpp	/^  class PDBQTFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PDecisionTree	include/openbabel/chains.h	/^      void *PDecisionTree; \/\/!< ByteCode decision tree for peptides$/;"	m	class:OpenBabel::OBChainsParser
PERIODIC_NUMBER_H	include/inchi/inpdef.h	76;"	d
PERL_COMPATIBLE	src/snprintf.c	313;"	d	file:
PER_DRAW_PARMS	include/inchi/ichidrp.h	/^} PER_DRAW_PARMS; \/* saved between displaying different structures *\/$/;"	t	typeref:struct:tagPersistDrawParms
PES_BIT_ARSINE_STEREO	include/inchi/ichister.h	62;"	d
PES_BIT_FIX_SP3_BUG	include/inchi/ichister.h	63;"	d
PES_BIT_PHOSPHINE_STEREO	include/inchi/ichister.h	61;"	d
PES_BIT_POINT_EDGE_STEREO	include/inchi/ichister.h	60;"	d
PHE	include/openbabel/residue.h	/^      PHE   = 13,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
PHOSPHINE_STEREO	src/formats/libinchi/ichister.c	1233;"	d	file:
PI	src/charges/eqeq.h	33;"	d
PI	src/formats/povrayformat.cpp	60;"	d	file:
PI	src/mcdlutil.cpp	52;"	d	file:
PI	src/obutil.cpp	770;"	d	file:
PINChI2	include/inchi/ichi.h	/^typedef INChI *PINChI2[TAUT_NUM];$/;"	t
PINChI_Aux2	include/inchi/ichi.h	/^typedef INChI_Aux *PINChI_Aux2[TAUT_NUM];$/;"	t
PLP	include/openbabel/grid.h	/^  typedef enum { Undefined = -1, PLP, ChemScore } score_t;$/;"	e	enum:OpenBabel::__anon43
PLUGIN_CPP_FILE	include/openbabel/plugin.h	186;"	d
PNG2Format	src/formats/png2format.cpp	/^  PNG2Format() : _ncols(0), _nrows(0), _nmax(0)$/;"	f	class:OpenBabel::PNG2Format
PNG2Format	src/formats/png2format.cpp	/^class PNG2Format : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PNGFormat	src/formats/pngformat.cpp	/^  PNGFormat()$/;"	f	class:OpenBabel::PNGFormat
PNGFormat	src/formats/pngformat.cpp	/^class PNGFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
PO4	include/openbabel/residue.h	/^      PO4   = 49,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
POINT_GROUP	src/pointgroup.cpp	/^  } POINT_GROUP ;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon89	file:
POLAR	include/openbabel/residue.h	/^      POLAR       = 13,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
PORTABLE_SNPRINTF_VERSION_MAJOR	src/snprintf.c	288;"	d	file:
PORTABLE_SNPRINTF_VERSION_MAJOR	src/snprintf.h	4;"	d
PORTABLE_SNPRINTF_VERSION_MINOR	src/snprintf.c	289;"	d	file:
PORTABLE_SNPRINTF_VERSION_MINOR	src/snprintf.h	5;"	d
POSFormat	src/formats/posformat.cpp	/^    POSFormat()$/;"	f	class:OpenBabel::POSFormat
POSFormat	src/formats/posformat.cpp	/^  class POSFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
POSITIVE	include/openbabel/residue.h	/^      POSITIVE    = 14,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
PQRFormat	src/formats/pqrformat.cpp	/^    PQRFormat()$/;"	f	class:OpenBabel::PQRFormat
PQRFormat	src/formats/pqrformat.cpp	/^  class PQRFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PQSFormat	src/formats/PQSformat.cpp	/^    PQSFormat()$/;"	f	class:OpenBabel::PQSFormat
PQSFormat	src/formats/PQSformat.cpp	/^  class PQSFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PREFER_PORTABLE_SNPRINTF	src/snprintf.c	296;"	d	file:
PRMAT	src/formats/libinchi/ichi_bns.c	/^} PRMAT;$/;"	t	typeref:struct:tagProtonRemovalMaskAndType	file:
PRO	include/openbabel/residue.h	/^      PRO   = 11,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
PROPAGATE_ILL_DEF_STEREO	include/inchi/mode.h	473;"	d
PROPERTY_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* PROPERTY_CALCULATION_PATTERN = "NWChem Property Module";$/;"	m	namespace:OpenBabel	file:
PROTEIN	include/openbabel/residue.h	/^      PROTEIN      = 5,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
PR_HARD_MSK_H	src/formats/libinchi/ichi_bns.c	223;"	d	file:
PR_HARD_MSK_NEG	src/formats/libinchi/ichi_bns.c	220;"	d	file:
PR_HARD_MSK_POS	src/formats/libinchi/ichi_bns.c	216;"	d	file:
PR_HARD_TYP_H	src/formats/libinchi/ichi_bns.c	224;"	d	file:
PR_HARD_TYP_NEG	src/formats/libinchi/ichi_bns.c	221;"	d	file:
PR_HARD_TYP_POS	src/formats/libinchi/ichi_bns.c	217;"	d	file:
PR_HARD_TYP_POSP	src/formats/libinchi/ichi_bns.c	218;"	d	file:
PR_SIMPLE_MSK	src/formats/libinchi/ichi_bns.c	163;"	d	file:
PR_SIMPLE_TYP	src/formats/libinchi/ichi_bns.c	164;"	d	file:
PSTR_BUFFER_SIZE	include/inchi/inchi_dll_a.h	183;"	d
PSU	include/openbabel/residue.h	/^      PSU   = 42,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
PT_ACCEPTOR	include/openbabel/patty.h	27;"	d
PT_ANION	include/openbabel/patty.h	26;"	d
PT_CATION	include/openbabel/patty.h	25;"	d
PT_DONOR	include/openbabel/patty.h	29;"	d
PT_HYDROPHOBIC	include/openbabel/patty.h	30;"	d
PT_METAL	include/openbabel/patty.h	32;"	d
PT_OTHER	include/openbabel/patty.h	31;"	d
PT_POLAR	include/openbabel/patty.h	28;"	d
PURINE	include/openbabel/residue.h	/^      PURINE       = 6,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
PUT_UINT32_BE	src/formats/libinchi/sha2.c	62;"	d	file:
PWscfFormat	src/formats/pwscfformat.cpp	/^    PWscfFormat()$/;"	f	class:OpenBabel::PWscfFormat
PWscfFormat	src/formats/pwscfformat.cpp	/^  class PWscfFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PYRIMIDINE	include/openbabel/residue.h	/^      PYRIMIDINE   = 7,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
PYTHON_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* PYTHON_CALCULATION_PATTERN = "NWChem Python program";$/;"	m	namespace:OpenBabel	file:
Pa	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
PackCoordinate	src/rotamer.cpp	/^  int PackCoordinate(double c[3],double max[3])$/;"	f	namespace:OpenBabel
PadString	src/formats/CSRformat.cpp	/^  char* CSRFormat::PadString(char *input, int size)$/;"	f	class:OpenBabel::CSRFormat
PageIndex	include/openbabel/json/json.h	/^      typedef unsigned int PageIndex;$/;"	t	class:Json::ValueInternalArray
PainterFormat	src/formats/painterformat.cpp	/^  PainterFormat()$/;"	f	class:OpenBabel::PainterFormat
PainterFormat	src/formats/painterformat.cpp	/^class PainterFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PairData	include/openbabel/base.h	/^      PairData      =      1,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
PairedAtoms	src/pointgroup.cpp	/^    std::vector< std::pair<int, int> > PairedAtoms;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
ParaAtom	src/stereo/perception.cpp	/^      ParaAtom(unsigned long _id, unsigned int idx) : id(_id), inIdx(idx) {}$/;"	f	struct:OpenBabel::StereoRing::ParaAtom
ParaAtom	src/stereo/perception.cpp	/^    struct ParaAtom$/;"	s	struct:OpenBabel::StereoRing	file:
ParaBond	src/stereo/perception.cpp	/^      ParaBond(unsigned long _id, unsigned int _inIdx, unsigned int _outIdx) : id(_id), inIdx(_inIdx), outIdx(_outIdx) {}$/;"	f	struct:OpenBabel::StereoRing::ParaBond
ParaBond	src/stereo/perception.cpp	/^    struct ParaBond$/;"	s	struct:OpenBabel::StereoRing	file:
Parity	src/formats/mdlformat.cpp	/^      enum Parity {$/;"	g	class:OpenBabel::MDLFormat	file:
Parse	src/formats/cifformat.cpp	/^  void CIF::Parse(istream &in)$/;"	f	class:OpenBabel::CIF
ParseAtomExpr	src/parsmart.cpp	/^  AtomExpr *OBSmartsPattern::ParseAtomExpr( int level )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseAuxSegmentAtomEqu	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentAtomEqu( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentGroupEqu	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentGroupEqu( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentNumbers	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentNumbers( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state, int *pbAbc )$/;"	f
ParseAuxSegmentReverseAtoms	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentReverseAtoms( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentReverseBonds	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentReverseBonds( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentReverseCRV	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentReverseCRV( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentReverseXYZ	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentReverseXYZ( const char *str, int bMobileH, XYZ_COORD **ppXYZ, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentSp3Inv	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentSp3Inv( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentSp3InvNumbers	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentSp3InvNumbers( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseAuxSegmentVersion	src/formats/libinchi/ichiread.c	/^int ParseAuxSegmentVersion( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseBondExpr	src/parsmart.cpp	/^  BondExpr *OBSmartsPattern::ParseBondExpr( int level )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseBondPrimitive	src/parsmart.cpp	/^  BondExpr *OBSmartsPattern::ParseBondPrimitive( void )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseComplex	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::ParseComplex(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
ParseComplexAtomPrimitive	src/parsmart.cpp	/^  AtomExpr *OBSmartsPattern::ParseComplexAtomPrimitive( void )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseEnums	src/formats/chemdrawcdx.cpp	/^bool CDXReader::ParseEnums(map<CDXTag, string>& enummap, const string& filename)$/;"	f	class:OpenBabel::CDXReader
ParseExternalBond	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::ParseExternalBond(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
ParseFile	src/descriptors/groupcontrib.cpp	/^  bool OBGroupContrib::ParseFile()$/;"	f	class:OpenBabel::OBGroupContrib
ParseFormula	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::ParseFormula(string& formula, OBMol* pmol)$/;"	f	class:OpenBabel::CMLFormat
ParseHeader	src/formats/dlpolyformat.cpp	/^  bool DlpolyInputReader::ParseHeader( std::istream &ifs, OBMol &mol )$/;"	f	class:OpenBabel::DlpolyInputReader
ParseInChI	src/formats/smilesformat.cpp	/^  bool OBMol2Cansmi::ParseInChI(OBMol &mol, vector<int> &atom_order)$/;"	f	class:OpenBabel::OBMol2Cansmi
ParseLine	include/openbabel/data.h	/^      virtual void ParseLine(const char*)          {}$/;"	f	class:OpenBabel::OBGlobalDataBase
ParseLine	src/bondtyper.cpp	/^  void OBBondTyper::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBBondTyper
ParseLine	src/data.cpp	/^  void OBAtomicHeatOfFormationTable::ParseLine(const char *line)$/;"	f	class:OpenBabel::OBAtomicHeatOfFormationTable
ParseLine	src/data.cpp	/^  void OBElementTable::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBElementTable
ParseLine	src/data.cpp	/^  void OBIsotopeTable::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBIsotopeTable
ParseLine	src/data.cpp	/^  void OBResidueData::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBResidueData
ParseLine	src/data.cpp	/^  void OBTypeTable::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBTypeTable
ParseLine	src/math/spacegroup.cpp	/^  void SpaceGroups::ParseLine(const char* line)$/;"	f	class:OpenBabel::SpaceGroups
ParseLine	src/ops/optransform.cpp	/^void OpTransform::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OpTransform
ParseLine	src/phmodel.cpp	/^  void OBPhModel::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBPhModel
ParseLine	src/rotor.cpp	/^  void OBRotorRules::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBRotorRules
ParseLine	src/typer.cpp	/^  void OBAromaticTyper::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBAromaticTyper
ParseLine	src/typer.cpp	/^  void OBAtomTyper::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBAtomTyper
ParseLine	src/typer.cpp	/^  void OBRingTyper::ParseLine(const char *buffer)$/;"	f	class:OpenBabel::OBRingTyper
ParseParamAngle	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamAngle(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamBndk	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamBndk(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamBond	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamBond(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamCharge	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamCharge(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamDef	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamDef(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamDfsb	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamDfsb(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamFile	include/openbabel/forcefield.h	/^    virtual bool ParseParamFile() { return false; }$/;"	f	class:OpenBabel::OBForceField
ParseParamFile	src/charges/eqeq.cpp	/^  bool EQEqCharges::ParseParamFile()$/;"	f	class:OpenBabel::EQEqCharges
ParseParamFile	src/charges/qeq.cpp	/^  void QEqCharges::ParseParamFile()$/;"	f	class:OpenBabel::QEqCharges
ParseParamFile	src/charges/qtpie.cpp	/^  void QTPIECharges::ParseParamFile()$/;"	f	class:OpenBabel::QTPIECharges
ParseParamFile	src/forcefields/forcefieldgaff.cpp	/^  bool OBForceFieldGaff::ParseParamFile()$/;"	f	class:OpenBabel::OBForceFieldGaff
ParseParamFile	src/forcefields/forcefieldghemical.cpp	/^  bool OBForceFieldGhemical::ParseParamFile()$/;"	f	class:OpenBabel::OBForceFieldGhemical
ParseParamFile	src/forcefields/forcefieldmm2.cpp	/^  bool OBForceFieldMM2::ParseParamFile()$/;"	f	class:OpenBabel::OBForceFieldMM2
ParseParamFile	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamFile()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamFile	src/forcefields/forcefielduff.cpp	/^  bool OBForceFieldUFF::ParseParamFile()$/;"	f	class:OpenBabel::OBForceFieldUFF
ParseParamOOP	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamOOP(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamPbci	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamPbci(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamProp	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamProp(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamStrBnd	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamStrBnd(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamTorsion	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamTorsion(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParseParamVDW	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ParseParamVDW(std::string &filename)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ParsePredicate	src/descriptor.cpp	/^double OBDescriptor::ParsePredicate(istream& optionText, char& ch1, char& ch2, string& svalue)$/;"	f	class:OpenBabel::OBDescriptor
ParseRDKitFormat	src/fingerprints/finger3.cpp	/^  bool ParseRDKitFormat(istringstream& ss, pattern& p)$/;"	f	class:OpenBabel::PatternFP
ParseReactionLine	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::ParseReactionLine(OBReaction* pReact, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat
ParseRingBond	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::ParseRingBond(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
ParseSMARTSError	src/parsmart.cpp	/^  Pattern *OBSmartsPattern::ParseSMARTSError( Pattern *pat, BondExpr *expr )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseSMARTSPart	src/parsmart.cpp	/^  Pattern *OBSmartsPattern::ParseSMARTSPart( Pattern *result, int part )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseSMARTSPattern	src/parsmart.cpp	/^  Pattern *OBSmartsPattern::ParseSMARTSPattern( void )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseSMARTSRecord	src/parsmart.cpp	/^  Pattern *OBSmartsPattern::ParseSMARTSRecord( char *ptr )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseSMARTSString	src/parsmart.cpp	/^  Pattern *OBSmartsPattern::ParseSMARTSString( char *ptr )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseSegmentCharge	src/formats/libinchi/ichiread.c	/^int ParseSegmentCharge( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[] )$/;"	f
ParseSegmentConnections	src/formats/libinchi/ichiread.c	/^int ParseSegmentConnections( const char *str, int bMobileH, INChI **pInpInChI, int *pnNumComponents, int *pbAbc )$/;"	f
ParseSegmentFormula	src/formats/libinchi/ichiread.c	/^int ParseSegmentFormula( const char *str, int bMobileH, INChI *pInpInChI[], int pnNumComponents[] )$/;"	f
ParseSegmentIsoAtoms	src/formats/libinchi/ichiread.c	/^int ParseSegmentIsoAtoms( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state, int *pbAbc )$/;"	f
ParseSegmentIsoExchgH	src/formats/libinchi/ichiread.c	/^int ParseSegmentIsoExchgH( const char *str, int bMobileH, REM_PROTONS nNumProtons[], int pnNumComponents[], int state, int *pbAbc )$/;"	f
ParseSegmentMobileH	src/formats/libinchi/ichiread.c	/^int ParseSegmentMobileH( const char *str, int bMobileH, INChI *pInpInChI[], int pnNumComponents[], int *pbAbc )$/;"	f
ParseSegmentPerm	src/formats/libinchi/ichiread.c	/^int ParseSegmentPerm( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state, int *pbAbc )$/;"	f
ParseSegmentProtons	src/formats/libinchi/ichiread.c	/^int ParseSegmentProtons( const char *str, int bMobileH, REM_PROTONS nNumProtons[], int ppnNumComponents[] )$/;"	f
ParseSegmentSp2	src/formats/libinchi/ichiread.c	/^int ParseSegmentSp2( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state, int *pbAbc )$/;"	f
ParseSegmentSp3	src/formats/libinchi/ichiread.c	/^int ParseSegmentSp3( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state, int *pbAbc )$/;"	f
ParseSegmentSp3m	src/formats/libinchi/ichiread.c	/^int ParseSegmentSp3m( const char *str, int bMobileH, INChI *pInpInChI[], int ppnNumComponents[], int state )$/;"	f
ParseSegmentSp3s	src/formats/libinchi/ichiread.c	/^int ParseSegmentSp3s( const char *str, int bMobileH, INChI *pInpInChI[], int s[TAUT_NUM][2], int ppnNumComponents[], int state )$/;"	f
ParseSimple	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::ParseSimple(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
ParseSimpleAtomPrimitive	src/parsmart.cpp	/^  AtomExpr *OBSmartsPattern::ParseSimpleAtomPrimitive( void )$/;"	f	class:OpenBabel::OBSmartsPattern
ParseSmiles	src/chains.cpp	/^  const char *OBChainsParser::ParseSmiles(const char *ptr, int prev)$/;"	f	class:OpenBabel::OBChainsParser
ParseSmiles	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::ParseSmiles(OBMol &mol)$/;"	f	class:OpenBabel::OBSmilesParser
ParseState	include/openbabel/parsmart.h	/^  } ParseState;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon57
ParseUnitCell	src/formats/dlpolyformat.cpp	/^  bool DlpolyInputReader::ParseUnitCell( std::istream &ifs, OBMol &mol )$/;"	f	class:OpenBabel::DlpolyInputReader
Parser	src/formats/smiley.h	/^      Parser(Callback &callback, Mode mode = SmilesMode) : m_callback(callback),$/;"	f	class:Smiley::Parser
Parser	src/formats/smiley.h	/^  class Parser$/;"	c	namespace:Smiley
PartFragmentDefinition	src/mcdlutil.cpp	/^    PartFragmentDefinition(){$/;"	f	class:OpenBabel::PartFragmentDefinition
PartFragmentDefinition	src/mcdlutil.cpp	/^  class PartFragmentDefinition {$/;"	c	namespace:OpenBabel	file:
PartialCode	src/canon.cpp	/^      PartialCode(std::size_t numAtoms)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::PartialCode
PartialCode	src/canon.cpp	/^    struct PartialCode$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
Partition	include/inchi/ichicant.h	/^} Partition;$/;"	t	typeref:struct:tagPartition
PartitionColorVertex	src/formats/libinchi/ichican2.c	/^int PartitionColorVertex( Graph *G, Partition *p, Node v, int n, int n_tg, int n_max, int bDigraph, int nNumPrevRanks )$/;"	f
PartitionCopy	src/formats/libinchi/ichican2.c	/^void PartitionCopy( Partition *To, Partition *From, int n )$/;"	f
PartitionCreate	src/formats/libinchi/ichican2.c	/^int PartitionCreate( Partition *p, int n)$/;"	f
PartitionCt	include/inchi/ichicant.h	/^    Partition       PartitionCt;  \/* canonical numbering *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
PartitionCtIso	include/inchi/ichicant.h	/^    Partition       PartitionCtIso;     \/* canonical numbering of isotopic base structure, defined later *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
PartitionFree	src/formats/libinchi/ichican2.c	/^void PartitionFree( Partition *p )$/;"	f
PartitionGetFirstCell	src/formats/libinchi/ichican2.c	/^int PartitionGetFirstCell( Partition *p, Cell *baseW, int k, int n )$/;"	f
PartitionGetMcrAndFixSet	src/formats/libinchi/ichican2.c	/^void PartitionGetMcrAndFixSet( Partition *p, NodeSet *Mcr, NodeSet *Fix, int n, int l )$/;"	f
PartitionGetTransposition	src/formats/libinchi/ichican2.c	/^void PartitionGetTransposition( Partition *pFrom, Partition *pTo, int n, Transposition *gamma )$/;"	f
PartitionIsDiscrete	src/formats/libinchi/ichican2.c	/^int PartitionIsDiscrete( Partition *p, int n)$/;"	f
PartitionSatisfiesLemma_2_25	src/formats/libinchi/ichican2.c	/^int PartitionSatisfiesLemma_2_25( Partition *p, int n )$/;"	f
Path	include/openbabel/json/json.h	/^   class Path$/;"	c	namespace:Json
Path	src/formats/json/jsoncpp.cpp	/^Path::Path( const std::string &path,$/;"	f	class:Json::Path
PathArgument	include/openbabel/json/json.h	/^   class PathArgument$/;"	c	namespace:Json
PathArgument	src/formats/json/jsoncpp.cpp	/^PathArgument::PathArgument( ArrayIndex index )$/;"	f	class:Json::PathArgument
PathArgument	src/formats/json/jsoncpp.cpp	/^PathArgument::PathArgument( const char *key )$/;"	f	class:Json::PathArgument
PathArgument	src/formats/json/jsoncpp.cpp	/^PathArgument::PathArgument( const std::string &key )$/;"	f	class:Json::PathArgument
PathArgument	src/formats/json/jsoncpp.cpp	/^PathArgument::PathArgument()$/;"	f	class:Json::PathArgument
PathSize	include/openbabel/ring.h	/^    size_t    PathSize() const  {    return(_path.size());  }$/;"	f	class:OpenBabel::OBRing
PathToRoot	src/ring.cpp	/^  void OBRTree::PathToRoot(vector<OBAtom*> &path)$/;"	f	class:OpenBabel::OBRTree
PathsHaveIdenticalKnownParities	src/formats/libinchi/ichicans.c	/^AT_RANK PathsHaveIdenticalKnownParities( sp_ATOM *at, AT_RANK prev1, AT_RANK cur1, AT_RANK prev2, AT_RANK cur2,$/;"	f
Pattern	include/openbabel/parsmart.h	/^  Pattern;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon56
PatternFP	src/fingerprints/finger3.cpp	/^  PatternFP(const char* ID, const char* filename=NULL,$/;"	f	class:OpenBabel::PatternFP
PatternFP	src/fingerprints/finger3.cpp	/^class PatternFP  : public OBFingerprint$/;"	c	namespace:OpenBabel	file:
Pb	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Pd	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Peptide	src/chains.cpp	/^  static Template Peptide[MAXPEPTIDE] = {$/;"	m	namespace:OpenBabel	file:
PerceiveAromatic	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::PerceiveAromatic()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
PerceiveBondOrders	src/mol.cpp	/^  void OBMol::PerceiveBondOrders()$/;"	f	class:OpenBabel::OBMol
PerceiveChains	src/chains.cpp	/^  bool OBChainsParser::PerceiveChains(OBMol &mol, bool nukeSingleResidue)$/;"	f	class:OpenBabel::OBChainsParser
PerceiveKekuleBonds	src/mol.cpp	/^  bool OBMol::PerceiveKekuleBonds()$/;"	f	class:OpenBabel::OBMol
PerceiveStereo	src/stereo/perception.cpp	/^  void PerceiveStereo(OBMol *mol, bool force)$/;"	f	namespace:OpenBabel
Permutate	src/stereo/stereo.cpp	/^  void OBStereo::Permutate(OBStereo::Refs &refs, int i, int j)$/;"	f	class:OpenBabel::OBStereo
Permutated	src/stereo/stereo.cpp	/^  OBStereo::Refs OBStereo::Permutated(const OBStereo::Refs &refs, int i, int j)$/;"	f	class:OpenBabel::OBStereo
PlaneReflection	src/math/matrix3x3.cpp	/^  void matrix3x3::PlaneReflection(const vector3 &norm)$/;"	f	class:OpenBabel::matrix3x3
Planes	src/pointgroup.cpp	/^    SYMMETRY_ELEMENT **    Planes                ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
PlanesCount	src/pointgroup.cpp	/^    int                    PlanesCount           ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
PluginIterator	include/openbabel/plugin.h	/^  typedef PluginMapType::const_iterator PluginIterator;$/;"	t	class:OpenBabel::OBPlugin
PluginMap	include/openbabel/plugin.h	/^  static PluginMapType& PluginMap()$/;"	f	class:OpenBabel::OBPlugin
PluginMapType	include/openbabel/plugin.h	/^  typedef std::map<const char*, OBPlugin*, CharPtrLess> PluginMapType;$/;"	t	class:OpenBabel::OBPlugin
PlusFromDB_N_DB_O_to_Metal	src/formats/libinchi/ichirvr2.c	/^int PlusFromDB_N_DB_O_to_Metal(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
Pm	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Po	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Point	src/mcdlutil.cpp	/^  class Point {$/;"	c	namespace:OpenBabel	file:
Point2Line	src/math/vector3.cpp	/^  double Point2Line(const vector3& a, const vector3& b, const vector3& c)$/;"	f	namespace:OpenBabel
Point2Plane	src/math/vector3.cpp	/^  double Point2Plane(vector3 a, vector3 b, vector3 c, vector3 d)$/;"	f	namespace:OpenBabel
Point2PlaneAngle	src/math/vector3.cpp	/^  double Point2PlaneAngle(const vector3 a, const vector3 b, const vector3 c, const vector3 d)$/;"	f	namespace:OpenBabel
Point2PlaneSigned	src/math/vector3.cpp	/^  double Point2PlaneSigned(vector3 a, vector3 b, vector3 c, vector3 d)$/;"	f	namespace:OpenBabel
PointCloudFormat	src/formats/pointcloudformat.cpp	/^      PointCloudFormat()$/;"	f	class:OpenBabel::PointCloudFormat
PointCloudFormat	src/formats/pointcloudformat.cpp	/^  class PointCloudFormat : public OpenBabel::OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PointGroupPrivate	src/pointgroup.cpp	/^    PointGroupPrivate()$/;"	f	class:OpenBabel::PointGroupPrivate
PointGroupPrivate	src/pointgroup.cpp	/^  class PointGroupPrivate$/;"	c	namespace:OpenBabel	file:
PointGroupRejectionReason	src/pointgroup.cpp	/^    char *                 PointGroupRejectionReason;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
PointGroups	src/pointgroup.cpp	/^  POINT_GROUP            PointGroups[]         = {$/;"	m	namespace:OpenBabel	file:
PointGroupsCount	src/pointgroup.cpp	135;"	d	file:
PointIsInBox	include/openbabel/grid.h	/^    bool PointIsInBox(double *c)$/;"	f	class:OpenBabel::OBGrid
PointIsInBox	include/openbabel/grid.h	/^    bool PointIsInBox(double x,double y,double z)$/;"	f	class:OpenBabel::OBGrid
PointIsInBox	include/openbabel/grid.h	/^    bool PointIsInBox(vector3 v)$/;"	f	class:OpenBabel::OBGrid
PolarGrid	include/openbabel/grid.h	/^    bool PolarGrid()$/;"	f	class:OpenBabel::OBProxGrid
PolarHydrogen	include/openbabel/mol.h	/^enum HydrogenType { AllHydrogen, PolarHydrogen, NonPolarHydrogen };$/;"	e	enum:OpenBabel::HydrogenType
PosDouble	src/formats/smilesformat.cpp	/^    vector<int> PosDouble; \/\/for extension: lc atoms as conjugated double bonds$/;"	m	class:OpenBabel::OBSmilesParser	file:
PosePair	src/confsearch.cpp	/^      typedef std::pair<vector<vector3>, double> PosePair;$/;"	t	class:OpenBabel::OBDiversePoses	file:
PovrayFormat	src/formats/povrayformat.cpp	/^    PovrayFormat()$/;"	f	class:OpenBabel::PovrayFormat
PovrayFormat	src/formats/povrayformat.cpp	/^  class PovrayFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Pr	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Precalc	src/rotor.cpp	/^  void OBRotor::Precalc(vector<double*> &cv)$/;"	f	class:OpenBabel::OBRotor
Precompute	src/rotor.cpp	/^  void OBRotor::Precompute(double *coordinates)$/;"	f	class:OpenBabel::OBRotor
Predict	include/openbabel/descriptor.h	/^  virtual double Predict(OBBase* \/* pOb *\/, std::string* \/* param *\/ =NULL)$/;"	f	class:OpenBabel::OBDescriptor
Predict	src/descriptors/filters.cpp	/^  virtual double Predict(OBBase* pOb, string* param=NULL)$/;"	f	class:OpenBabel::MWFilter
Predict	src/descriptors/groupcontrib.cpp	/^  double OBGroupContrib::Predict(OBBase* pOb, string* param)$/;"	f	class:OpenBabel::OBGroupContrib
Predict	src/descriptors/smartsdescriptors.cpp	/^    double Predict(OBBase* pOb, string* param=NULL)$/;"	f	class:OpenBabel::SmartsDescriptor
PredictAndSave	src/descriptor.cpp	/^double OBDescriptor::PredictAndSave(OBBase* pOb, string* param)$/;"	f	class:OpenBabel::OBDescriptor
Preferred	include/openbabel/conformersearch.h	/^      enum Preferred { HighScore, LowScore };$/;"	g	class:OpenBabel::OBConformerScore
PrepInpData	include/inchi/inchi_dll_a.h	/^    ORIG_ATOM_DATA  PrepInpData[INCHI_NUM]; \/*^^^ INCHI_NUM=2;  0   disconnected\/original$/;"	m	struct:tagINCHIGEN_CONTROL
PreprocessOneStructure	src/formats/libinchi/runichi.c	/^int PreprocessOneStructure( STRUCT_DATA *sd, INPUT_PARMS *ip, ORIG_ATOM_DATA *orig_inp_data, ORIG_ATOM_DATA *prep_inp_data )$/;"	f
PrintCallback	src/formats/smiley.h	/^  struct PrintCallback : public CallbackBase$/;"	s	namespace:Smiley
PrintFileName	src/formats/libinchi/strutil.c	/^void PrintFileName( const char *fmt, $/;"	f
PrintFormalCharges	src/forcefield.cpp	/^  void OBForceField::PrintFormalCharges()$/;"	f	class:OpenBabel::OBForceField
PrintFpt	src/fingerprints/finger2.cpp	/^void fingerprint2::PrintFpt(const vector<int>& f, int hash)$/;"	f	class:OpenBabel::fingerprint2
PrintInputParms	include/inchi/ichiparm.h	/^int PrintInputParms( INCHI_IOSTREAM *log_file, INPUT_PARMS *ip )$/;"	f
PrintLayer	src/formats/mpdformat.cpp	/^  void MPDFormat::PrintLayer(int layer_a[][LAYER_SIZE],ostream &ofs)$/;"	f	class:OpenBabel::MPDFormat
PrintPartialCharges	src/forcefield.cpp	/^  void OBForceField::PrintPartialCharges()$/;"	f	class:OpenBabel::OBForceField
PrintTypes	src/forcefield.cpp	/^  void OBForceField::PrintTypes()$/;"	f	class:OpenBabel::OBForceField
PrintVector	include/openbabel/forcefield.h	/^    static void PrintVector(double *i)$/;"	f	class:OpenBabel::OBForceField
PrintVelocities	src/forcefield.cpp	/^  void OBForceField::PrintVelocities()$/;"	f	class:OpenBabel::OBForceField
PrintXML	src/formats/mpdformat.cpp	/^  void MPDFormat::PrintXML(int layer_a[][LAYER_SIZE],ostream &ofs)$/;"	f	class:OpenBabel::MPDFormat
PrintXmlStartTag	src/formats/libinchi/ichiprt1.c	/^int PrintXmlStartTag(char *pStr, int indent, int bEnd, const char *tag,$/;"	f
ProcessOneStructure	src/formats/libinchi/runichi.c	/^int ProcessOneStructure( STRUCT_DATA *sd, INPUT_PARMS *ip, char *szTitle,$/;"	f
ProcessStructError	src/formats/libinchi/ichimake.c	/^int ProcessStructError( INCHI_IOSTREAM *output_file, INCHI_IOSTREAM *log_file, \/*int err,*\/ $/;"	f
ProcessVec	include/openbabel/op.h	/^  virtual bool ProcessVec(std::vector<OBBase*>& \/* vec *\/){ return false; }$/;"	f	class:OpenBabel::OBOp
ProcessVec	src/ops/largest.cpp	/^bool OpLargest::ProcessVec(vector<OBBase*>& vec)$/;"	f	class:OpenBabel::OpLargest
ProcessVec	src/ops/opisomorph.cpp	/^bool OpNewS::ProcessVec(std::vector<OBBase*>& Extravec)$/;"	f	class:OpenBabel::OpNewS
ProcessVec	src/ops/readconformers.cpp	/^bool OpReadConformers::ProcessVec(std::vector<OBBase*>& vec)$/;"	f	class:OpenBabel::OpReadConformers
ProcessVec	src/ops/sort.cpp	/^bool OpSort::ProcessVec(std::vector<OBBase*>& vec)$/;"	f	class:OpenBabel::OpSort
PropagatePotentialAromatic	src/typer.cpp	/^  void OBAromaticTyper::PropagatePotentialAromatic(OBAtom *atom)$/;"	f	class:OpenBabel::OBAromaticTyper
PropertyScalarsNeeded	src/formats/xml/cmlformat.cpp	/^    int CrystalScalarsNeeded, PropertyScalarsNeeded, TransformsNeeded;$/;"	m	class:OpenBabel::CMLFormat	file:
ProteinResidues	src/formats/fastaformat.cpp	/^  ResidueRecord ProteinResidues[IUPAC_Protein_max] =$/;"	m	namespace:OpenBabel	file:
ProteinSequence	src/formats/fastaformat.cpp	/^        ProteinSequence,$/;"	e	enum:OpenBabel::FASTAFormat::SequenceType	file:
ProteinSequence	src/formats/genbankformat.cpp	/^      ProteinSequence,$/;"	e	enum:OpenBabel::GenBankFormat::SequenceType	file:
Pt	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Pu	include/inchi/ichi_bns.h	/^    Vertex          *Pu;         \/*[MAX_VERTEX\/2+1] *\/$/;"	m	struct:BalancedNetworkData
Pu	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
PubChemFormat	src/formats/xml/pubchem.cpp	/^	PubChemFormat()$/;"	f	class:OpenBabel::PubChemFormat
PubChemFormat	src/formats/xml/pubchem.cpp	/^class PubChemFormat : public XMLMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PubChemJSONFormat	src/formats/json/pubchemjsonformat.cpp	/^    PubChemJSONFormat()$/;"	f	class:OpenBabel::PubChemJSONFormat
PubChemJSONFormat	src/formats/json/pubchemjsonformat.cpp	/^class PubChemJSONFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
PublicID	include/libxml/tree.h	/^    const xmlChar               *PublicID;	\/* Public identifier, if any *\/$/;"	m	struct:_xmlNotation
PullFlow	src/formats/libinchi/ichi_bns.c	/^int PullFlow( BN_STRUCT *pBNS, Edge *SwitchEdge, Vertex x, Vertex y, int delta, S_CHAR bReverse, int bChangeFlow )$/;"	f
PushBack	include/openbabel/generic.h	/^    void PushBack(OBRing *r)$/;"	f	class:OpenBabel::OBRingData
Pv	include/inchi/ichi_bns.h	/^    Vertex          *Pv;         \/*[MAX_VERTEX\/2+1] *\/$/;"	m	struct:BalancedNetworkData
QCP	include/openbabel/math/align.h	/^      QCP    = 1    \/\/ Returns just RMSD (fast)$/;"	e	enum:OpenBabel::OBAlign::AlignMethod
QCProot	src/math/align.cpp	/^  static double QCProot(const vector<double> &coeff, double guess, const double delta)$/;"	f	namespace:OpenBabel
QChemInputFormat	src/formats/qchemformat.cpp	/^    QChemInputFormat()$/;"	f	class:OpenBabel::QChemInputFormat
QChemInputFormat	src/formats/qchemformat.cpp	/^  class QChemInputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
QChemOutputFormat	src/formats/qchemformat.cpp	/^    QChemOutputFormat()$/;"	f	class:OpenBabel::QChemOutputFormat
QChemOutputFormat	src/formats/qchemformat.cpp	/^  class QChemOutputFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
QEqCharges	src/charges/qeq.h	/^  QEqCharges(const char* ID) : OBChargeModel(ID, false){};$/;"	f	class:OpenBabel::QEqCharges
QEqCharges	src/charges/qeq.h	/^  QEqCharges(void) : OBChargeModel("fake ID", false){};$/;"	f	class:OpenBabel::QEqCharges
QEqCharges	src/charges/qeq.h	/^class QEqCharges : public OBChargeModel$/;"	c	namespace:OpenBabel
QINT_TYPE	include/inchi/ichiring.h	46;"	d
QINT_TYPE	include/inchi/ichiring.h	48;"	d
QSize	include/inchi/ichi_bns.h	/^    int             QSize;       \/* index of the  last element added to ScanQ *\/$/;"	m	struct:BalancedNetworkData
QTPIECharges	src/charges/qtpie.h	/^  QTPIECharges(const char* ID) : OBChargeModel(ID, false){};$/;"	f	class:OpenBabel::QTPIECharges
QTPIECharges	src/charges/qtpie.h	/^  QTPIECharges(void) : OBChargeModel("fake ID", false){};$/;"	f	class:OpenBabel::QTPIECharges
QTPIECharges	src/charges/qtpie.h	/^class QTPIECharges : public OBChargeModel$/;"	c	namespace:OpenBabel
QUADCONST	include/chemdrawcdx.h	27;"	d
QUADCONST	include/chemdrawcdx.h	34;"	d
QUEUE	include/inchi/ichiring.h	/^}QUEUE;$/;"	t	typeref:struct:tagQieue
QUEUE_QINT	include/inchi/ichiring.h	42;"	d
QZFIX_OK	src/formats/libinchi/ichican2.c	2526;"	d	file:
QueueAdd	src/formats/libinchi/ichiring.c	/^int QueueAdd( QUEUE *q, QINT_TYPE *Val )$/;"	f
QueueCreate	src/formats/libinchi/ichiring.c	/^QUEUE *QueueCreate( int nTotLength, int nSize )$/;"	f
QueueDelete	src/formats/libinchi/ichiring.c	/^QUEUE *QueueDelete( QUEUE *q )$/;"	f
QueueGet	src/formats/libinchi/ichiring.c	/^int QueueGet( QUEUE *q, QINT_TYPE *Val )$/;"	f
QueueGetAny	src/formats/libinchi/ichiring.c	/^int QueueGetAny( QUEUE *q, QINT_TYPE *Val, int ord )$/;"	f
QueueLength	src/formats/libinchi/ichiring.c	/^int QueueLength( QUEUE *q )$/;"	f
QueueReinit	src/formats/libinchi/ichiring.c	/^int QueueReinit( QUEUE *q )$/;"	f
QueueWrittenLength	src/formats/libinchi/ichiring.c	/^int QueueWrittenLength( QUEUE *q )$/;"	f
Quiet	include/openbabel/rotor.h	/^    void Quiet()                           { _quiet=true;      }$/;"	f	class:OpenBabel::OBRotorRules
R	src/formats/libinchi/sha2.c	123;"	d	file:
R2C_AT	src/formats/libinchi/ichinorm.c	/^} R2C_AT;$/;"	t	typeref:struct:tagRing2Chain	file:
R2C_ATPAIR	src/formats/libinchi/ichinorm.c	/^} R2C_ATPAIR;$/;"	t	typeref:struct:tagAtPair	file:
R2C_EMPTY	src/formats/libinchi/ichinorm.c	2992;"	d	file:
RAD2DEG	src/formats/povrayformat.cpp	64;"	d	file:
RADICAL_DOUBLET	include/inchi/incomdef.h	111;"	d
RADICAL_SINGLET	include/inchi/incomdef.h	110;"	d
RADICAL_TRIPLET	include/inchi/incomdef.h	112;"	d
RAD_SRCH_FROM_FICT	include/inchi/ichi_bns.h	/^    RAD_SRCH_FROM_FICT = 1    \/* search from fict. vertices to atoms *\/$/;"	e	enum:tagBnsRadSrchMode
RAD_SRCH_NORM	include/inchi/ichi_bns.h	/^    RAD_SRCH_NORM      = 0,   \/* normal search for normalization *\/$/;"	e	enum:tagBnsRadSrchMode
RAD_TO_DEG	include/openbabel/math/matrix3x3.h	30;"	d
RAD_TO_DEG	include/openbabel/math/vector3.h	31;"	d
RAND_H	include/openbabel/rand.h	21;"	d
READBINARY	include/openbabel/format.h	33;"	d
READONEONLY	include/openbabel/format.h	32;"	d
READXML	include/openbabel/format.h	38;"	d
READ_INCHI_KEEP_BALANCE_P	include/inchi/mode.h	860;"	d
READ_INCHI_OUTPUT_INCHI	include/inchi/mode.h	858;"	d
READ_INCHI_SPLIT_OUTPUT	include/inchi/mode.h	859;"	d
READ_INCHI_STRING	include/inchi/mode.h	354;"	d
READ_INCHI_STRING	include/inchi/mode.h	356;"	d
READ_INCHI_TO_STRUCTURE	include/inchi/mode.h	861;"	d
READ_INT16	src/formats/chemdrawcdx.cpp	50;"	d	file:
READ_INT16	src/formats/chemdrawcdx.cpp	57;"	d	file:
READ_INT16	src/formats/chemdrawcdx.cpp	67;"	d	file:
READ_INT16	src/formats/chemdrawcdx.cpp	74;"	d	file:
READ_INT32	src/formats/chemdrawcdx.cpp	53;"	d	file:
READ_INT32	src/formats/chemdrawcdx.cpp	59;"	d	file:
READ_INT32	src/formats/chemdrawcdx.cpp	70;"	d	file:
READ_INT32	src/formats/chemdrawcdx.cpp	76;"	d	file:
RECONNECT_METALS	include/inchi/mode.h	422;"	d
REDDIPSTR2INT	src/formats/fchkformat.cpp	29;"	d	file:
REL_RAC_STEREO_IGN_1_SC	include/inchi/mode.h	642;"	d
REMOVE_CALC_NONSTEREO	include/inchi/mode.h	472;"	d
REMOVE_CUT_DERIV	src/formats/libinchi/ichinorm.c	2229;"	d	file:
REMOVE_ION_PAIRS_DISC_STRU	include/inchi/mode.h	383;"	d
REMOVE_ION_PAIRS_EARLY	include/inchi/mode.h	382;"	d
REMOVE_ION_PAIRS_FIX_BONDS	include/inchi/mode.h	384;"	d
REMOVE_ION_PAIRS_ORIG_STRU	include/inchi/mode.h	388;"	d
REMOVE_KNOWN_NONSTEREO	include/inchi/mode.h	471;"	d
REMOVE_TGROUP_CHARGE	include/inchi/mode.h	617;"	d
REMOVE_TGROUP_CHARGE	include/inchi/mode.h	619;"	d
REM_PROTONS	include/inchi/ichirvrs.h	/^} REM_PROTONS;$/;"	t	typeref:struct:tagRemovedAndExchangeableH
RENUMB_DATA	src/formats/libinchi/runichi.c	/^} RENUMB_DATA;$/;"	t	typeref:struct:tagRenumbData	file:
REPEAT_ALL	src/formats/libinchi/inchi_dll.c	970;"	d	file:
REPLACE_ALT_WITH_TAUT	include/inchi/mode.h	403;"	d
REPLACE_THE_BOND	src/formats/libinchi/ichiqueu.c	170;"	d	file:
REPLACE_THE_BOND	src/formats/libinchi/ichiqueu.c	172;"	d	file:
REQ_MODE_BASIC	include/inchi/ichi.h	45;"	d
REQ_MODE_CHIR_FLG_STEREO	include/inchi/ichi.h	59;"	d
REQ_MODE_DEFAULT	include/inchi/ichi.h	68;"	d
REQ_MODE_DIFF_UU_STEREO	include/inchi/ichi.h	63;"	d
REQ_MODE_ISO	include/inchi/ichi.h	47;"	d
REQ_MODE_ISO_STEREO	include/inchi/ichi.h	50;"	d
REQ_MODE_MIN_SB_RING_MASK	include/inchi/ichi.h	65;"	d
REQ_MODE_MIN_SB_RING_SHFT	include/inchi/ichi.h	66;"	d
REQ_MODE_NOEQ_STEREO	include/inchi/ichi.h	51;"	d
REQ_MODE_NON_ISO	include/inchi/ichi.h	48;"	d
REQ_MODE_NO_ALT_SBONDS	include/inchi/ichi.h	53;"	d
REQ_MODE_RACEMIC_STEREO	include/inchi/ichi.h	56;"	d
REQ_MODE_REDNDNT_STEREO	include/inchi/ichi.h	52;"	d
REQ_MODE_RELATIVE_STEREO	include/inchi/ichi.h	55;"	d
REQ_MODE_SB_IGN_ALL_UU	include/inchi/ichi.h	58;"	d
REQ_MODE_SC_IGN_ALL_UU	include/inchi/ichi.h	57;"	d
REQ_MODE_STEREO	include/inchi/ichi.h	49;"	d
REQ_MODE_TAUT	include/inchi/ichi.h	46;"	d
RESET_EDGE_FORBIDDEN_MASK	include/inchi/ichirvrs.h	287;"	d
RESET_EDGE_FORBIDDEN_MASK	src/formats/libinchi/ichi_bns.c	66;"	d	file:
RESIDMAX	src/chains.cpp	46;"	d	file:
RESIDMIN	src/chains.cpp	44;"	d	file:
RETURNED_ERROR	include/inchi/ichierr.h	77;"	d
RET_DRAW_PARMS	include/inchi/ichidrp.h	/^} RET_DRAW_PARMS;$/;"	t	typeref:struct:tagReturnedDrawParms
RET_MAX	src/formats/libinchi/ichisort.c	54;"	d	file:
REV_INCHI	include/inchi/ichirvrs.h	/^} REV_INCHI;$/;"	t	typeref:struct:tagReversedInChI
RGBcode	src/depict/svgpainter.cpp	/^  string SVGPainter::RGBcode(OBColor color)$/;"	f	class:OpenBabel::SVGPainter
RING2CHAIN	include/inchi/mode.h	374;"	d
RI_ERR_ALLOC	include/inchi/ichirvrs.h	45;"	d
RI_ERR_ALLOC	src/formats/libinchi/ichi_bns.c	9710;"	d	file:
RI_ERR_EOF	include/inchi/ichirvrs.h	49;"	d
RI_ERR_EOL	include/inchi/ichirvrs.h	48;"	d
RI_ERR_PROGR	include/inchi/ichirvrs.h	47;"	d
RI_ERR_PROGR	src/formats/libinchi/ichi_bns.c	9712;"	d	file:
RI_ERR_SYNTAX	include/inchi/ichirvrs.h	46;"	d
RI_ERR_SYNTAX	src/formats/libinchi/ichi_bns.c	9711;"	d	file:
RNAResidues	src/formats/fastaformat.cpp	/^  ResidueRecord RNAResidues[IUPAC_RNA_max] =$/;"	m	namespace:OpenBabel	file:
RNASequence	src/formats/fastaformat.cpp	/^        RNASequence,$/;"	e	enum:OpenBabel::FASTAFormat::SequenceType	file:
RNASequence	src/formats/genbankformat.cpp	/^      RNASequence,$/;"	e	enum:OpenBabel::GenBankFormat::SequenceType	file:
RNA_helix	src/formats/fastaformat.cpp	/^  HelixParameters RNA_helix = { 2.95057, 2*M_PI\/11.0, 8 }; \/\/ HTER-OXT-.P-O5'-C5'-C4'-C3'-O3'-.P-O5'-C5'-C4'-C3'-O3'-.HCAP$/;"	m	namespace:OpenBabel	file:
ROOT_PATTERN	src/formats/nwchemformat.cpp	/^static const char* ROOT_PATTERN = "Root";$/;"	m	namespace:OpenBabel	file:
ROTR	src/formats/libinchi/sha2.c	112;"	d	file:
RSCACHE	include/openbabel/parsmart.h	/^	  std::vector<std::pair<const Pattern*,std::vector<bool> > > RSCACHE;$/;"	m	class:OpenBabel::OBSmartsMatcher
RType	include/openbabel/generic.h	/^   enum RType{UNKNOWN, ASYMMETRIC, SYMMETRIC, LINEAR};$/;"	g	class:OpenBabel::OBRotationData
RUNDEF	src/mcdlutil.cpp	171;"	d	file:
RVDWab	src/forcefields/forcefieldgaff.h	/^      double Eab, RVDWab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationGaff
RXNFormat	src/formats/rxnformat.cpp	/^  RXNFormat()$/;"	f	class:OpenBabel::RXNFormat
RXNFormat	src/formats/rxnformat.cpp	/^class RXNFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
RYDBERG_TO_ELECTRON_VOLT	src/formats/pwscfformat.cpp	19;"	d	file:
RYDBERG_TO_KCALPERMOL	include/openbabel/data_utilities.h	/^ const double RYDBERG_TO_KCALPERMOL = 313.755026;$/;"	m	namespace:OpenBabel
RYDBERG_TO_KCAL_PER_MOL	src/formats/pwscfformat.cpp	18;"	d	file:
R_AB	src/forcefields/forcefieldmmff94.h	/^      double R_AB, R_AB7\/*, erep, erep7, eattr*\/;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
R_AB7	src/forcefields/forcefieldmmff94.h	/^      double R_AB, R_AB7\/*, erep, erep7, eattr*\/;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
Ra	src/forcefields/forcefieldghemical.h	/^      double Ra, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationGhemical
Ra	src/forcefields/forcefielduff.h	/^      double ka, kaSquared, Ra, kb, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
Ra	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
RadEdges	include/inchi/ichi_bns.h	/^    EdgeIndex      *RadEdges;$/;"	m	struct:BalancedNetworkData
RadEndpoints	include/inchi/ichi_bns.h	/^    Vertex         *RadEndpoints; \/*[MAX_VERTEX*\/$/;"	m	struct:BalancedNetworkData
RandomLabels	src/formats/smilesformat.cpp	/^  void RandomLabels(OBMol *pMol, OBBitVec &frag_atoms,$/;"	f	namespace:OpenBabel
RandomRotorSearch	src/forcefield.cpp	/^  void OBForceField::RandomRotorSearch(unsigned int conformers, unsigned int geomSteps,$/;"	f	class:OpenBabel::OBForceField
RandomRotorSearchInitialize	src/forcefield.cpp	/^  void OBForceField::RandomRotorSearchInitialize(unsigned int conformers, unsigned int geomSteps,$/;"	f	class:OpenBabel::OBForceField
RandomRotorSearchNextConformer	src/forcefield.cpp	/^  bool OBForceField::RandomRotorSearchNextConformer(unsigned int geomSteps)$/;"	f	class:OpenBabel::OBForceField
Rank	include/inchi/ichicant.h	/^    AT_RANK *Rank;$/;"	m	struct:tagPartition
RateData	include/openbabel/kinetics.h	/^const unsigned RateData = 55555;$/;"	m	namespace:OpenBabel
Rates	include/openbabel/kinetics.h	/^  double Rates[3];$/;"	m	class:OpenBabel::OBRateData
RawFormula	src/formats/xml/cmlformat.cpp	/^    string RawFormula;$/;"	m	class:OpenBabel::CMLFormat	file:
Rb	src/forcefields/forcefieldghemical.h	/^      double Ra, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationGhemical
Rb	src/forcefields/forcefielduff.h	/^      double ka, kaSquared, Ra, kb, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
Rb	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Re	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
ReInitBnData	src/formats/libinchi/ichi_bns.c	/^int ReInitBnData( BN_DATA *pBD )$/;"	f
ReInitBnStruct	src/formats/libinchi/ichi_bns.c	/^int ReInitBnStruct( BN_STRUCT *pBNS, inp_ATOM *at, int num_at, int bRemoveGroupsFromAtoms )$/;"	f
ReInitBnStructAddGroups	src/formats/libinchi/ichi_bns.c	/^int ReInitBnStructAddGroups( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, T_GROUP_INFO *tgi, C_GROUP_INFO *cgi )$/;"	f
ReInitBnStructAltPaths	src/formats/libinchi/ichi_bns.c	/^int ReInitBnStructAltPaths( BN_STRUCT *pBNS )$/;"	f
ReInitBnStructForAltBns	src/formats/libinchi/ichi_bns.c	/^int ReInitBnStructForAltBns( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, int bUnknAltAsNoStereo )$/;"	f
ReactionType	include/openbabel/kinetics.h	/^  reaction_type ReactionType;$/;"	m	class:OpenBabel::OBRateData
Read	include/openbabel/grid.h	/^    virtual bool   Read(std::string)   {      return false;    }$/;"	f	class:OpenBabel::OBScoreGrid
Read	src/fingerprint.cpp	/^  bool FptIndex::Read(istream* pIndexstream)$/;"	f	class:OpenBabel::FptIndex
Read	src/obconversion.cpp	/^  bool	OBConversion::Read(OBBase* pOb, std::istream* pin)$/;"	f	class:OpenBabel::OBConversion
Read32	src/formats/pngformat.cpp	/^  unsigned long Read32(istream& ifs)$/;"	f	class:OpenBabel::PNGFormat	file:
ReadASCII	src/formats/adfformat.cpp	/^bool OBT41Format::ReadASCII( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::OBT41Format
ReadAtom	src/formats/dlpolyformat.cpp	/^  bool DlpolyInputReader::ReadAtom( std::istream &ifs, OBMol &mol )$/;"	f	class:OpenBabel::DlpolyInputReader
ReadAtomBlock	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadAtomBlock(istream& ifs,OBMol& mol, OBConversion* pConv)$/;"	f	class:OpenBabel::MDLFormat
ReadBinary	src/formats/adfformat.cpp	/^bool OBT41Format::ReadBinary( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::OBT41Format
ReadBondBlock	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadBondBlock(istream& ifs,OBMol& mol, OBConversion* pConv)$/;"	f	class:OpenBabel::MDLFormat
ReadCRK	src/formats/crkformat.cpp	/^  bool CRK2DFormat::ReadCRK(std::istream &ifs,OBMol &mol,const char *classTag)$/;"	f	class:OpenBabel::CRK2DFormat
ReadChem3d	src/formats/chem3dformat.cpp	/^  bool CHEM3D1Format::ReadChem3d(istream &ifs,OBMol &mol,bool mmads,const char *type_key)$/;"	f	class:OpenBabel::CHEM3D1Format
ReadChemObject	include/openbabel/format.h	/^    virtual bool ReadChemObject(OBConversion* \/*pConv*\/)$/;"	f	class:OpenBabel::OBFormat
ReadChemObject	include/openbabel/obmolecformat.h	/^  virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::OBMoleculeFormat
ReadChemObject	include/openbabel/xml.h	/^      virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::XMLMoleculeFormat
ReadChemObject	src/formats/chemdrawcdx.cpp	/^  virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
ReadChemObject	src/formats/chemkinformat.cpp	/^  virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat	file:
ReadChemObject	src/formats/fastsearchformat.cpp	/^  bool FastSearchFormat::ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::FastSearchFormat
ReadChemObject	src/formats/pngformat.cpp	/^  virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::PNGFormat
ReadChemObject	src/formats/rsmiformat.cpp	/^    virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::SmiReactFormat
ReadChemObject	src/formats/rxnformat.cpp	/^  virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::RXNFormat
ReadChemObject	src/formats/textformat.cpp	/^  virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::TextFormat
ReadChemObject	src/formats/xml/cmlreactformat.cpp	/^bool CMLReactFormat::ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::CMLReactFormat
ReadChemObject	src/formats/xml/xmlformat.cpp	/^  bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::XMLFormat
ReadChemObject	src/ops/deferred.h	/^  virtual bool ReadChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::DeferredFormat
ReadChemObjectImpl	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::ReadChemObjectImpl(OBConversion* pConv, OBFormat* pFormat)$/;"	f	class:OpenBabel::OBMoleculeFormat
ReadCommandLineParms	include/inchi/ichiparm.h	/^int ReadCommandLineParms(int argc, const char *argv[], INPUT_PARMS *ip, $/;"	f
ReadConfig	src/GUI/selformats.h	/^	bool ReadConfig(wxConfig& config) \/\/Called in OBGUIFrame constructor$/;"	f	class:ActiveFormats
ReadCoordinates	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadCoordinates(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadFASTASequence	src/formats/fastaformat.cpp	/^  bool ReadFASTASequence(OBMol * pmol, int seq_type, std::istream * in, bool create_bonds, bool bond_orders,$/;"	f	namespace:OpenBabel
ReadFile	src/obconversion.cpp	/^  bool	OBConversion::ReadFile(OBBase* pOb, std::string filePath)$/;"	f	class:OpenBabel::OBConversion
ReadFrequencyCalculation	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadFrequencyCalculation(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadGeometry	src/formats/gamessukformat.cpp	/^  bool GAMESSUKFormat::ReadGeometry(OBMol &mol, vector<string> &geomList)$/;"	f	class:OpenBabel::GAMESSUKFormat
ReadGeometryOptimizationCalculation	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadGeometryOptimizationCalculation(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadGridData	src/formats/adfformat.cpp	/^OBT41Format::GridData OBT41Format::ReadGridData( istream& is ) const$/;"	f	class:OpenBabel::OBT41Format
ReadHeader	src/fingerprint.cpp	/^  bool FptIndex::ReadHeader(istream* pIndexstream)$/;"	f	class:OpenBabel::FptIndex
ReadHeader	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::ReadHeader(istream& ifs, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat
ReadHeader	src/formats/lpmdformat.cpp	/^bool LpmdFormat::ReadHeader( std::istream &ifs, OBMol &mol )$/;"	f	class:OpenBabel::LpmdFormat
ReadInChICoord	src/formats/libinchi/ichiread.c	/^int ReadInChICoord( INCHI_IOSTREAM *pInp, $/;"	f
ReadInChILine	src/formats/libinchi/ichiread.c	/^int ReadInChILine(INCHI_IOSTREAM *pInp, SEGM_LINE *pLine, $/;"	f
ReadIndex	src/fingerprint.cpp	/^  string FastSearch::ReadIndex(istream* pIndexstream)$/;"	f	class:OpenBabel::FastSearch
ReadIndexFile	src/fingerprint.cpp	/^  string FastSearch::ReadIndexFile(string IndexFilename)$/;"	f	class:OpenBabel::FastSearch
ReadInitialCartesian	src/formats/gamessukformat.cpp	/^  bool GAMESSUKOutputFormat::ReadInitialCartesian( OBMol &mol, std::istream &ifs )$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
ReadInputZmatrix	src/formats/gamessukformat.cpp	/^  bool GAMESSUKOutputFormat::ReadInputZmatrix( OBMol &mol, std::istream &ifs )$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
ReadIntField	src/formats/mdlformat.cpp	/^  int MDLFormat::ReadIntField(const char *s)$/;"	f	class:OpenBabel::MDLFormat
ReadLine	src/formats/chemkinformat.cpp	/^int ChemKinFormat::ReadLine(istream& ifs )$/;"	f	class:OpenBabel::ChemKinFormat
ReadLine	src/ops/loader.cpp	/^  bool OBDefine::ReadLine(istream& ifs, string& ln, bool removeComments)$/;"	f	class:OpenBabel::OBDefine
ReadLineCartesian	src/formats/gamessukformat.cpp	/^  bool GAMESSUKFormat::ReadLineCartesian(OBAtom *atom, vector<string> &tokens, double factor)$/;"	f	class:OpenBabel::GAMESSUKFormat
ReadLineZmatrix	src/formats/gamessukformat.cpp	/^  bool GAMESSUKFormat::ReadLineZmatrix(OBMol &mol, OBAtom *atom, vector<string> &tokens, double factor, int *zmatLineCount)$/;"	f	class:OpenBabel::GAMESSUKFormat
ReadMEPCalculation	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadMEPCalculation(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadMode	src/formats/gamessukformat.cpp	/^    ReadMode_t ReadMode;$/;"	m	class:OpenBabel::GAMESSUKFormat	file:
ReadMode_t	src/formats/gamessukformat.cpp	/^    enum ReadMode_t {CARTESIAN, ZMATRIX, VARIABLES, CONSTANTS, SKIP};$/;"	g	class:OpenBabel::GAMESSUKFormat	file:
ReadMolecule	include/openbabel/format.h	/^    virtual bool ReadMolecule(OBBase* \/*pOb*\/, OBConversion* \/*pConv*\/)$/;"	f	class:OpenBabel::OBFormat
ReadMolecule	include/openbabel/xml.h	/^      virtual bool ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XMLMoleculeFormat
ReadMolecule	src/formats/MCDLformat.cpp	/^bool MCDLFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MCDLFormat
ReadMolecule	src/formats/PQSformat.cpp	/^  bool PQSFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PQSFormat
ReadMolecule	src/formats/abinitformat.cpp	/^  bool ABINITFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ABINITFormat
ReadMolecule	src/formats/acesformat.cpp	/^  bool AcesOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::AcesOutputFormat
ReadMolecule	src/formats/acrformat.cpp	/^  bool ACRFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ACRFormat
ReadMolecule	src/formats/adfformat.cpp	/^    virtual bool ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ADFInputFormat
ReadMolecule	src/formats/adfformat.cpp	/^  bool ADFOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ADFOutputFormat
ReadMolecule	src/formats/adfformat.cpp	/^bool OBT41Format::ReadMolecule( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::OBT41Format
ReadMolecule	src/formats/alchemyformat.cpp	/^  bool AlchemyFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::AlchemyFormat
ReadMolecule	src/formats/amberformat.cpp	/^bool AmberPrepFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::AmberPrepFormat
ReadMolecule	src/formats/aoforceformat.cpp	/^bool AoforceFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv) {$/;"	f	class:OpenBabel::AoforceFormat
ReadMolecule	src/formats/balstformat.cpp	/^  bool BallStickFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::BallStickFormat
ReadMolecule	src/formats/bgfformat.cpp	/^  bool BGFFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::BGFFormat
ReadMolecule	src/formats/boxformat.cpp	/^bool BoxFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::BoxFormat
ReadMolecule	src/formats/cacaoformat.cpp	/^  bool CacaoFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CacaoFormat
ReadMolecule	src/formats/carformat.cpp	/^  bool CARFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CARFormat
ReadMolecule	src/formats/castepformat.cpp	/^  bool CASTEPFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CASTEPFormat
ReadMolecule	src/formats/cccformat.cpp	/^bool CCCFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CCCFormat
ReadMolecule	src/formats/chem3dformat.cpp	/^  bool CHEM3D1Format::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CHEM3D1Format
ReadMolecule	src/formats/chem3dformat.cpp	/^  bool CHEM3D2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CHEM3D2Format
ReadMolecule	src/formats/chemdrawcdx.cpp	/^bool ChemDrawBinaryXFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
ReadMolecule	src/formats/chemdrawct.cpp	/^  bool ChemDrawFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemDrawFormat
ReadMolecule	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat
ReadMolecule	src/formats/cifformat.cpp	/^  bool CIFFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CIFFormat
ReadMolecule	src/formats/crkformat.cpp	/^  bool CRK2DFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CRK2DFormat
ReadMolecule	src/formats/crkformat.cpp	/^  bool CRK3DFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CRK3DFormat
ReadMolecule	src/formats/crystal09format.cpp	/^bool Crystal09Format::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::Crystal09Format
ReadMolecule	src/formats/daltonformat.cpp	/^  bool DALTONInputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DALTONInputFormat
ReadMolecule	src/formats/daltonformat.cpp	/^  bool DALTONOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DALTONOutputFormat
ReadMolecule	src/formats/dlpolyformat.cpp	/^  bool DlpolyConfigFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DlpolyConfigFormat
ReadMolecule	src/formats/dlpolyformat.cpp	/^  bool DlpolyHISTORYFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DlpolyHISTORYFormat
ReadMolecule	src/formats/dmolformat.cpp	/^  bool DMolFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DMolFormat
ReadMolecule	src/formats/exampleformat.cpp	/^bool XXXFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XXXFormat
ReadMolecule	src/formats/exyzformat.cpp	/^  bool EXYZFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::EXYZFormat
ReadMolecule	src/formats/fastaformat.cpp	/^  bool FASTAFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FASTAFormat
ReadMolecule	src/formats/fchkformat.cpp	/^  bool FCHKFormat::ReadMolecule(OBBase * pOb, OBConversion * pConv)$/;"	f	class:OpenBabel::FCHKFormat
ReadMolecule	src/formats/featformat.cpp	/^  bool FEATFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FEATFormat
ReadMolecule	src/formats/fhiaimsformat.cpp	/^bool FHIaimsFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FHIaimsFormat
ReadMolecule	src/formats/freefracformat.cpp	/^  bool FreeFormFractionalFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FreeFormFractionalFormat
ReadMolecule	src/formats/gamessformat.cpp	/^  bool GAMESSInputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv) {$/;"	f	class:OpenBabel::GAMESSInputFormat
ReadMolecule	src/formats/gamessformat.cpp	/^  bool GAMESSOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv) {$/;"	f	class:OpenBabel::GAMESSOutputFormat
ReadMolecule	src/formats/gamessukformat.cpp	/^    bool GAMESSUKOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv) {$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
ReadMolecule	src/formats/gamessukformat.cpp	/^  bool GAMESSUKInputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GAMESSUKInputFormat
ReadMolecule	src/formats/gausscubeformat.cpp	/^bool OBGaussianCubeFormat::ReadMolecule( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::OBGaussianCubeFormat
ReadMolecule	src/formats/gaussformat.cpp	/^  bool GaussianOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GaussianOutputFormat
ReadMolecule	src/formats/gausszmatformat.cpp	/^  bool GaussianZMatrixInputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GaussianZMatrixInputFormat
ReadMolecule	src/formats/genbankformat.cpp	/^  bool GenBankFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GenBankFormat
ReadMolecule	src/formats/ghemicalformat.cpp	/^  bool GhemicalFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GhemicalFormat
ReadMolecule	src/formats/groformat.cpp	/^bool GROFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GROFormat
ReadMolecule	src/formats/gulpformat.cpp	/^  bool GULPFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GULPFormat
ReadMolecule	src/formats/hinformat.cpp	/^  bool HINFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::HINFormat
ReadMolecule	src/formats/inchiformat.cpp	/^bool InChIFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::InChIFormat
ReadMolecule	src/formats/jaguarformat.cpp	/^  bool JaguarInputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::JaguarInputFormat
ReadMolecule	src/formats/jaguarformat.cpp	/^  bool JaguarOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::JaguarOutputFormat
ReadMolecule	src/formats/json/chemdoodlejsonformat.cpp	/^  bool ChemDoodleJSONFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemDoodleJSONFormat
ReadMolecule	src/formats/json/pubchemjsonformat.cpp	/^  bool PubChemJSONFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PubChemJSONFormat
ReadMolecule	src/formats/lpmdformat.cpp	/^bool LpmdFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::LpmdFormat
ReadMolecule	src/formats/mdffformat.cpp	/^  bool MDFFFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MDFFFormat
ReadMolecule	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MDLFormat
ReadMolecule	src/formats/mmcifformat.cpp	/^ bool mmCIFFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::mmCIFFormat
ReadMolecule	src/formats/mmodformat.cpp	/^  bool MacroModFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MacroModFormat
ReadMolecule	src/formats/mol2format.cpp	/^  bool MOL2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MOL2Format
ReadMolecule	src/formats/moldenformat.cpp	/^bool OBMoldenFormat::ReadMolecule( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::OBMoldenFormat
ReadMolecule	src/formats/molproformat.cpp	/^  bool MolproOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MolproOutputFormat
ReadMolecule	src/formats/mopacformat.cpp	/^  bool MOPACCARTFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MOPACCARTFormat
ReadMolecule	src/formats/mopacformat.cpp	/^  bool MOPACFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MOPACFormat
ReadMolecule	src/formats/mopacformat.cpp	/^  bool MOPACINTFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MOPACINTFormat
ReadMolecule	src/formats/mpqcformat.cpp	/^  bool MPQCFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MPQCFormat
ReadMolecule	src/formats/msiformat.cpp	/^  bool MSIFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MSIFormat
ReadMolecule	src/formats/msmsformat.cpp	/^    virtual bool ReadMolecule( OpenBabel::OBBase*, OpenBabel::OBConversion* )$/;"	f	class:OpenBabel::OBMSMSFormat
ReadMolecule	src/formats/nwchemformat.cpp	/^  bool NWChemOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadMolecule	src/formats/opendxformat.cpp	/^bool OBOpenDXCubeFormat::ReadMolecule( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
ReadMolecule	src/formats/orcaformat.cpp	/^  bool OrcaOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::OrcaOutputFormat
ReadMolecule	src/formats/outformat.cpp	/^  bool OutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::OutputFormat
ReadMolecule	src/formats/pcmodelformat.cpp	/^  bool PCModelFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PCModelFormat
ReadMolecule	src/formats/pdbformat.cpp	/^  bool PDBFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PDBFormat
ReadMolecule	src/formats/pdbqtformat.cpp	/^  bool PDBQTFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PDBQTFormat
ReadMolecule	src/formats/pngformat.cpp	/^bool PNGFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PNGFormat
ReadMolecule	src/formats/pointcloudformat.cpp	/^      virtual bool ReadMolecule( OpenBabel::OBBase*, OpenBabel::OBConversion* )$/;"	f	class:OpenBabel::PointCloudFormat
ReadMolecule	src/formats/posformat.cpp	/^  bool POSFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::POSFormat
ReadMolecule	src/formats/pqrformat.cpp	/^  bool PQRFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PQRFormat
ReadMolecule	src/formats/pwscfformat.cpp	/^  bool PWscfFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PWscfFormat
ReadMolecule	src/formats/qchemformat.cpp	/^  bool QChemOutputFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::QChemOutputFormat
ReadMolecule	src/formats/rsmiformat.cpp	/^  bool SmiReactFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::SmiReactFormat
ReadMolecule	src/formats/rxnformat.cpp	/^bool RXNFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::RXNFormat
ReadMolecule	src/formats/shelxformat.cpp	/^  bool ShelXFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ShelXFormat
ReadMolecule	src/formats/siestaformat.cpp	/^  bool SIESTAFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::SIESTAFormat
ReadMolecule	src/formats/smilesformat.cpp	/^  bool SMIBaseFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::SMIBaseFormat
ReadMolecule	src/formats/smileyformat.cpp	/^  bool SmileyFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::SmileyFormat
ReadMolecule	src/formats/stlformat.cpp	/^      virtual bool ReadMolecule( OpenBabel::OBBase*, OpenBabel::OBConversion* )$/;"	f	class:OpenBabel::STLFormat
ReadMolecule	src/formats/textformat.cpp	/^  virtual bool ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::TextFormat
ReadMolecule	src/formats/thermoformat.cpp	/^bool ThermoFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ThermoFormat
ReadMolecule	src/formats/tinkerformat.cpp	/^  bool TinkerFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::TinkerFormat
ReadMolecule	src/formats/titleformat.cpp	/^bool TitleFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::TitleFormat
ReadMolecule	src/formats/turbomoleformat.cpp	/^bool TurbomoleFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::TurbomoleFormat
ReadMolecule	src/formats/unichemformat.cpp	/^bool UniChemFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::UniChemFormat
ReadMolecule	src/formats/vaspformat.cpp	/^  bool VASPFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::VASPFormat
ReadMolecule	src/formats/viewmolformat.cpp	/^bool ViewMolFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ViewMolFormat
ReadMolecule	src/formats/xml/cmlreactformat.cpp	/^bool CMLReactFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CMLReactFormat
ReadMolecule	src/formats/xml/xmlformat.cpp	/^  bool ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XMLFormat
ReadMolecule	src/formats/xsfformat.cpp	/^  bool XSFFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XSFFormat
ReadMolecule	src/formats/xtcformat.cpp	/^  bool XTCFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XTCFormat
ReadMolecule	src/formats/xyzformat.cpp	/^  bool XYZFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XYZFormat
ReadMolecule	src/formats/yasaraformat.cpp	/^bool YOBFormat::ReadMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::YOBFormat
ReadMultipoleMoment	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadMultipoleMoment(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadNEBCalculation	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadNEBCalculation(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadNameIndex	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::ReadNameIndex(NameIndexType& index,$/;"	f	class:OpenBabel::OBMoleculeFormat
ReadNasaThermo	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::ReadNasaThermo()$/;"	f	class:OpenBabel::CMLFormat
ReadNext	src/formats/chemdrawcdx.cpp	/^CDXTag CDXReader::ReadNext(bool objectsOnly, int targetDepth)$/;"	f	class:OpenBabel::CDXReader
ReadNormalModesForce	src/formats/gamessukformat.cpp	/^    bool GAMESSUKOutputFormat::ReadNormalModesForce( OBMol &mol, std::istream &ifs)$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
ReadNormalModesHessian	src/formats/gamessukformat.cpp	/^    bool GAMESSUKOutputFormat::ReadNormalModesHessian( OBMol &mol, std::istream &ifs)$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
ReadOptGeomXyz1	src/formats/gamessukformat.cpp	/^    bool GAMESSUKOutputFormat::ReadOptGeomXyz1( OBMol &mol, std::istream &ifs )$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
ReadOptGeomXyz2	src/formats/gamessukformat.cpp	/^    bool GAMESSUKOutputFormat::ReadOptGeomXyz2( OBMol &mol, std::istream &ifs )$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
ReadOrbitals	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadOrbitals(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadPQS_geom	src/formats/PQSformat.cpp	/^  int ReadPQS_geom(istream &ifs, OBMol &mol, const char *title,$/;"	f	namespace:OpenBabel
ReadPartialCharges	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadPartialCharges(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadPatternFile	src/fingerprints/finger3.cpp	/^  bool ReadPatternFile(string& ver)$/;"	f	class:OpenBabel::PatternFP
ReadPropertyLines	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadPropertyLines(istream& ifs, OBMol& mol)$/;"	f	class:OpenBabel::MDLFormat
ReadRGroupBlock	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadRGroupBlock(istream& ifs,OBMol& mol, OBConversion* pConv)$/;"	f	class:OpenBabel::MDLFormat
ReadReactionQualifierLines	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::ReadReactionQualifierLines(istream& ifs, OBReaction* pReact)$/;"	f	class:OpenBabel::ChemKinFormat
ReadSCFGrid	src/formats/adfformat.cpp	/^bool OBT41Format::ReadSCFGrid( istream& is, OBGridData& t41Data ) const$/;"	f	class:OpenBabel::OBT41Format
ReadSCFOrbitalGrid	src/formats/adfformat.cpp	/^bool OBT41Format::ReadSCFOrbitalGrid( istream& is, OBGridData& t41Data ) const$/;"	f	class:OpenBabel::OBT41Format
ReadSinglePointCalculation	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadSinglePointCalculation(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadStdThermo	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::ReadStdThermo(const string& datafilename)$/;"	f	class:OpenBabel::ChemKinFormat
ReadStream	src/formats/xml/xml.cpp	/^  int XMLConversion::ReadStream(void * context, char * buffer, int len)$/;"	f	class:OpenBabel::XMLConversion
ReadString	src/obconversion.cpp	/^  bool	OBConversion::ReadString(OBBase* pOb, std::string input)$/;"	f	class:OpenBabel::OBConversion
ReadStringFromFilter	src/descriptor.cpp	/^bool OBDescriptor::ReadStringFromFilter(istream& optionText, string& result)$/;"	f	class:OpenBabel::OBDescriptor
ReadSumFragGrid	src/formats/adfformat.cpp	/^bool OBT41Format::ReadSumFragGrid( istream& is, OBGridData& t41Data ) const$/;"	f	class:OpenBabel::OBT41Format
ReadTDDFTCalculation	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadTDDFTCalculation(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
ReadTheStructure	src/formats/libinchi/runichi.c	/^int ReadTheStructure( STRUCT_DATA *sd, INPUT_PARMS *ip, INCHI_IOSTREAM  *inp_file, ORIG_ATOM_DATA *orig_inp_data,$/;"	f
ReadThermo	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::ReadThermo(OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat
ReadUIntField	src/formats/mdlformat.cpp	/^  unsigned int MDLFormat::ReadUIntField(const char *s)$/;"	f	class:OpenBabel::MDLFormat
ReadUnimplementedBlock	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadUnimplementedBlock(istream& ifs,OBMol& mol, OBConversion* pConv, string& blockname)$/;"	f	class:OpenBabel::MDLFormat
ReadV3000Block	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadV3000Block(istream& ifs, OBMol& mol, OBConversion* pConv,bool DoMany)$/;"	f	class:OpenBabel::MDLFormat
ReadV3000Line	src/formats/mdlformat.cpp	/^  bool MDLFormat::ReadV3000Line(istream& ifs, vector<string>& vs)$/;"	f	class:OpenBabel::MDLFormat
ReadVariables	src/formats/gamessukformat.cpp	/^  bool GAMESSUKFormat::ReadVariables(istream &ifs, double factor, string stopstr)$/;"	f	class:OpenBabel::GAMESSUKFormat
ReadWriteInChI	src/formats/libinchi/ichiread.c	/^int ReadWriteInChI(INCHI_IOSTREAM *pInp, INCHI_IOSTREAM *pOut, INCHI_IOSTREAM *pLog,$/;"	f
ReadXML	src/formats/xml/xml.cpp	/^  bool XMLConversion::ReadXML(XMLBaseFormat* pFormat, OBBase* pOb)$/;"	f	class:OpenBabel::XMLConversion
ReadZTSCalculation	src/formats/nwchemformat.cpp	/^  void NWChemOutputFormat::ReadZTSCalculation(istream* ifs, OBMol* molecule)$/;"	f	class:OpenBabel::NWChemOutputFormat
Reader	include/openbabel/json/json.h	/^   class JSON_API Reader$/;"	c	namespace:Json
Reader	src/formats/json/jsoncpp.cpp	/^Reader::Reader( const Features &features )$/;"	f	class:Json::Reader
Reader	src/formats/json/jsoncpp.cpp	/^Reader::Reader()$/;"	f	class:Json::Reader
ReadyToInput	include/openbabel/obconversion.h	/^      bool		  ReadyToInput;$/;"	m	class:OpenBabel::OBConversion
ReallocTCGroups	src/formats/libinchi/ichirvr1.c	/^int ReallocTCGroups( ALL_TC_GROUPS *pTCGroups, int nAdd )$/;"	f
RearrangeAtRankArray	src/formats/libinchi/ichican2.c	/^void RearrangeAtRankArray ( int n, AT_RANK *nRank, AT_NUMB *new2old, S_CHAR *mark, int bDone )$/;"	f
RearrangePlusMinusEdgesFlow	src/formats/libinchi/ichirvr2.c	/^int RearrangePlusMinusEdgesFlow( BN_STRUCT *pBNS, BN_DATA *pBD, VAL_AT *pVA,$/;"	f
ReconcileAllCmlBondParities	src/formats/libinchi/ichister.c	/^int ReconcileAllCmlBondParities( inp_ATOM *at, int num_atoms, int bDisconnected )$/;"	f
ReconcileCmlIncidentBondParities	src/formats/libinchi/ichister.c	/^int ReconcileCmlIncidentBondParities( inp_ATOM *at, int cur_atom, int prev_atom, S_CHAR *visited, int bDisconnected )$/;"	f
Rect	src/mcdlutil.cpp	/^  class Rect {$/;"	c	namespace:OpenBabel	file:
RecurseChain	src/chains.cpp	/^  unsigned int OBChainsParser::RecurseChain(OBMol &mol, unsigned int i, int c)$/;"	f	class:OpenBabel::OBChainsParser
Ref	include/openbabel/stereo/stereo.h	/^    typedef unsigned long Ref;$/;"	t	struct:OpenBabel::OBStereo
RefIter	include/openbabel/stereo/stereo.h	/^    typedef Refs::iterator RefIter;$/;"	t	struct:OpenBabel::OBStereo
Refs	include/openbabel/stereo/stereo.h	/^    typedef std::vector<Ref> Refs;$/;"	t	struct:OpenBabel::OBStereo
RegisterCPoints	src/formats/libinchi/ichitaut.c	/^int RegisterCPoints( C_GROUP *c_group, int *pnum_c, int max_num_c, T_GROUP_INFO *t_group_info,$/;"	f
RegisterEndPoints	src/formats/libinchi/ichitaut.c	/^int RegisterEndPoints( T_GROUP_INFO *t_group_info, $/;"	f
RegisterFormat	src/format.cpp	/^int OBFormat::RegisterFormat(const char* ID, const char* MIME)$/;"	f	class:OpenBabel::OBFormat
RegisterFormat	src/obconversion.cpp	/^  int OBConversion::RegisterFormat(const char* ID, OBFormat* pFormat, const char* MIME)$/;"	f	class:OpenBabel::OBConversion
RegisterOptionParam	src/obconversion.cpp	/^  void OBConversion::RegisterOptionParam(string name, OBFormat* pFormat,$/;"	f	class:OpenBabel::OBConversion
RegisterRadEndpoint	src/formats/libinchi/ichi_bns.c	/^int RegisterRadEndpoint( BN_STRUCT *pBNS, BN_DATA *pBD, Vertex u)$/;"	f
RegisterSpaceGroup	src/math/spacegroup.cpp	/^  void SpaceGroup::RegisterSpaceGroup (int nb, ...)$/;"	f	class:OpenBabel::SpaceGroup
RegisterTCGroup	src/formats/libinchi/ichirvr1.c	/^int RegisterTCGroup( ALL_TC_GROUPS *pTCGroups, int nGroupType, int nGroupOrdNum,$/;"	f
RegisterXMLFormat	src/formats/xml/xml.cpp	/^  void XMLConversion::RegisterXMLFormat(XMLBaseFormat* pFormat, bool IsDefault, const char* uri)$/;"	f	class:OpenBabel::XMLConversion
RelativelyPrime	src/rand.cpp	/^  static int RelativelyPrime( unsigned int x, unsigned int y )$/;"	f	namespace:OpenBabel
RemoveAtom	src/residue.cpp	/^  void OBResidue::RemoveAtom(OBAtom *atom)$/;"	f	class:OpenBabel::OBResidue
RemoveCalculatedNonStereo	src/formats/libinchi/ichimap2.c	/^int RemoveCalculatedNonStereo( sp_ATOM *at, int num_atoms, int num_at_tg,$/;"	f
RemoveCalculatedNonStereoBondParities	src/formats/libinchi/ichimap2.c	/^int RemoveCalculatedNonStereoBondParities( sp_ATOM *at, int num_atoms, int num_at_tg,$/;"	f
RemoveCalculatedNonStereoCenterParities	src/formats/libinchi/ichimap2.c	/^int RemoveCalculatedNonStereoCenterParities( sp_ATOM *at, int num_atoms, int num_at_tg,$/;"	f
RemoveFixHInChIIdentical2MobH	src/formats/libinchi/ichirvr7.c	/^void RemoveFixHInChIIdentical2MobH( InpInChI *pOneInput )$/;"	f
RemoveForbiddenBondFlowBits	src/formats/libinchi/ichirvr1.c	/^void RemoveForbiddenBondFlowBits( BN_STRUCT *pBNS, int forbidden_edge_mask_int )$/;"	f
RemoveForbiddenEdgeMask	src/formats/libinchi/ichirvr1.c	/^void RemoveForbiddenEdgeMask( BN_STRUCT *pBNS, EDGE_LIST *pEdges, int forbidden_edge_mask  )$/;"	f
RemoveFromEdgeListByIndex	src/formats/libinchi/ichirvr1.c	/^int RemoveFromEdgeListByIndex( EDGE_LIST *pEdges, int index )$/;"	f
RemoveFromEdgeListByValue	src/formats/libinchi/ichirvr1.c	/^int RemoveFromEdgeListByValue( EDGE_LIST *pEdges, int iedge )$/;"	f
RemoveFromNodeSet	src/formats/libinchi/ichican2.c	/^void RemoveFromNodeSet( NodeSet *cur_nodes, int k, Vertex v[], int num_v)$/;"	f
RemoveHalfStereoBond	src/formats/libinchi/ichicans.c	/^int RemoveHalfStereoBond( sp_ATOM *at, int jn, \/* atom number*\/ int k1 \/* stereo bond number*\/ )$/;"	f
RemoveInpAtBond	src/formats/libinchi/strutil.c	/^int RemoveInpAtBond( inp_ATOM *atom, int iat, int k )$/;"	f
RemoveKnownNonStereoBondParities	src/formats/libinchi/ichicans.c	/^int RemoveKnownNonStereoBondParities( sp_ATOM *at, int num_atoms, const AT_RANK *nCanonRank,$/;"	f
RemoveKnownNonStereoCenterParities	src/formats/libinchi/ichicans.c	/^int RemoveKnownNonStereoCenterParities( sp_ATOM *at, int num_atoms, const AT_RANK *nCanonRank,$/;"	f
RemoveLastGroupFromBnStruct	src/formats/libinchi/ichi_bns.c	/^int RemoveLastGroupFromBnStruct( inp_ATOM *at, int num_atoms, int tg, BN_STRUCT *pBNS )$/;"	f
RemoveLayer	src/formats/inchiformat.cpp	/^void InChIFormat::RemoveLayer (std::string& inchi, const std::string& str, bool all)$/;"	f	class:OpenBabel::InChIFormat
RemoveNPProtonsAndAcidCharges	src/formats/libinchi/ichi_bns.c	/^int RemoveNPProtonsAndAcidCharges( inp_ATOM *at, int num_atoms, BN_AATG *pAATG, BN_STRUCT *pBNS, BN_DATA *pBD )$/;"	f
RemoveNonPrintable	include/inchi/lreadmol.h	/^int RemoveNonPrintable( char *line )$/;"	f
RemoveOneStereoBond	src/formats/libinchi/ichicans.c	/^int RemoveOneStereoBond( sp_ATOM *at, int jc, \/* atom number*\/ int k \/* stereo bond number*\/ )$/;"	f
RemoveOneStereoCenter	src/formats/libinchi/ichicans.c	/^int RemoveOneStereoCenter( sp_ATOM *at, int jc \/* atom number*\/ )$/;"	f
RemoveOption	src/obconversion.cpp	/^  bool OBConversion::RemoveOption(const char* opt, Option_type opttyp)$/;"	f	class:OpenBabel::OBConversion
RemoveRadEndpoints	src/formats/libinchi/ichi_bns.c	/^int RemoveRadEndpoints( BN_STRUCT *pBNS, BN_DATA *pBD, inp_ATOM *at )$/;"	f
RemoveRadFromMobileHEndpoint	src/formats/libinchi/ichirvr2.c	/^int RemoveRadFromMobileHEndpoint(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
RemoveRadFromMobileHEndpointFixH	src/formats/libinchi/ichirvr2.c	/^int RemoveRadFromMobileHEndpointFixH(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
RemoveRedundant	src/ring.cpp	/^  void OBRingSearch::RemoveRedundant(int frj)$/;"	f	class:OpenBabel::OBRingSearch
RemoveSymTorsionValues	src/rotor.cpp	/^  void OBRotor::RemoveSymTorsionValues(int fold)$/;"	f	class:OpenBabel::OBRotor
RemoveSymVals	src/rotor.cpp	/^  void OBRotorList::RemoveSymVals(OBMol &mol)$/;"	f	class:OpenBabel::OBRotorList
RemoveWhiteSpaceUnderscore	src/math/spacegroup.cpp	/^  std::string RemoveWhiteSpaceUnderscore(const string &in){$/;"	f	namespace:OpenBabel
RenumbInpAtomData	src/formats/libinchi/inchi_dll.c	/^void RenumbInpAtomData( INP_ATOM_DATA *dest_inp_at_data, INP_ATOM_DATA *src_inp_at_data, AT_RANK *new_ord )$/;"	f
RenumberAtNumbArray	src/formats/libinchi/ichican2.c	/^void RenumberAtNumbArray( int n, AT_NUMB *nAtNumb, AT_NUMB *old2new )$/;"	f
RenumberAtoms	src/mol.cpp	/^  void OBMol::RenumberAtoms(vector<OBAtom*> &v)$/;"	f	class:OpenBabel::OBMol
RenumberAtoms	src/mol.cpp	/^  void OBMol::RenumberAtoms(vector<int> v)$/;"	f	class:OpenBabel::OBMol
RenumberTheGraph	src/formats/libinchi/ichican2.c	/^void RenumberTheGraph( int n, NEIGH_LIST *NeighList, AT_NUMB *old2new,$/;"	f
RenumberingTest	src/formats/libinchi/runichi.c	/^int RenumberingTest( PINChI2 *pINChI, PINChI_Aux2 *pINChI_Aux, ORIG_ATOM_DATA *orig_inp_data, int iINChI,$/;"	f
RenumberingTestInit	src/formats/libinchi/runichi.c	/^int RenumberingTestInit( RENUMB_DATA *pRenumbData, INP_ATOM_DATA *inp_cur_data )$/;"	f
RenumberingTestUninit	src/formats/libinchi/runichi.c	/^int RenumberingTestUninit( RENUMB_DATA *pRenumbData )$/;"	f
ReportFormat	src/formats/reportformat.cpp	/^    ReportFormat()$/;"	f	class:OpenBabel::ReportFormat
ReportFormat	src/formats/reportformat.cpp	/^  class ReportFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ReportNumberConverted	src/obconversion.cpp	/^  void OBConversion::ReportNumberConverted(int count, OBFormat* pFormat)$/;"	f	class:OpenBabel::OBConversion
ReqShownFound	include/inchi/ichidrp.h	/^    char   ReqShownFound[TDP_NUM_LBL][TDP_NUM_PAR];$/;"	m	struct:tagTblDrawPatms
ReqShownFoundTxt	include/inchi/ichidrp.h	/^    char   ReqShownFoundTxt[TDP_NUM_LBL][TDP_LEN_LBL];$/;"	m	struct:tagTblDrawPatms
ResMonoAtom	include/openbabel/chains.h	/^      int   ResMonoAtom[MaxMonoAtom];$/;"	m	class:OpenBabel::OBChainsParser
ResMonoBond	include/openbabel/chains.h	/^      int   ResMonoBond[MaxMonoBond];$/;"	m	class:OpenBabel::OBChainsParser
ResNo	include/openbabel/residue.h	/^  EXTERN unsigned int ResNo;$/;"	m	namespace:OpenBabel
ResNo	src/residue.cpp	/^  unsigned int ResNo  = MINRES;$/;"	m	namespace:OpenBabel	file:
ResNum	src/formats/mmcifformat.cpp	/^   unsigned long ResNum;  \/\/ The number of the residue within the chain$/;"	m	struct:OpenBabel::CIFResidueID	file:
Rescale	src/formats/gamessukformat.cpp	/^  double GAMESSUKFormat::Rescale(string text)$/;"	f	class:OpenBabel::GAMESSUKFormat
ReserveAtoms	include/openbabel/mol.h	/^    void ReserveAtoms(int natoms)$/;"	f	class:OpenBabel::OBMol
ResidType	src/chains.cpp	/^  }    ResidType;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon67	file:
Residue	include/openbabel/residue.h	/^  EXTERN char Residue[MAXRES][4];$/;"	m	namespace:OpenBabel
Residue	src/residue.cpp	/^  char Residue[MAXRES][4] = {$/;"	m	namespace:OpenBabel	file:
ResidueAtomRecord	src/formats/fastaformat.cpp	/^  struct ResidueAtomRecord$/;"	s	namespace:OpenBabel	file:
ResidueBondRecord	src/formats/fastaformat.cpp	/^  struct ResidueBondRecord$/;"	s	namespace:OpenBabel	file:
ResidueRecord	src/formats/fastaformat.cpp	/^  struct ResidueRecord$/;"	s	namespace:OpenBabel	file:
Resize	include/openbabel/bitvec.h	/^      bool Resize(unsigned size_in_bits)$/;"	f	class:OpenBabel::OBBitVec
ResizeWords	include/openbabel/bitvec.h	/^	  bool ResizeWords(unsigned size_in_words)$/;"	f	class:OpenBabel::OBBitVec
RestoreAtomConnectionsSetStereo	src/formats/libinchi/ichirvr2.c	/^int RestoreAtomConnectionsSetStereo( StrFromINChI *pStruct, int iComponent, int iAtNoOffset, INChI *pInChI, INChI *pInChIMobH)$/;"	f
RestoreAtomMakeBNS	src/formats/libinchi/ichirvr4.c	/^int RestoreAtomMakeBNS( ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, StrFromINChI *pStruct, int iComponent,$/;"	f
RestoreBnStructFlow	src/formats/libinchi/ichi_bns.c	/^int RestoreBnStructFlow( BN_STRUCT *pBNS, int bChangeFlow )$/;"	f
RestoreCyanoGroup	src/formats/libinchi/ichirvr2.c	/^int RestoreCyanoGroup( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
RestoreEdgeFlow	src/formats/libinchi/ichi_bns.c	/^int RestoreEdgeFlow( BNS_EDGE *edge, int delta, int bChangeFlow )$/;"	f
RestoreIsoCyanoGroup	src/formats/libinchi/ichirvr2.c	/^int RestoreIsoCyanoGroup( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
RestoreLocale	src/locale.cpp	/^  void OBLocale::RestoreLocale()$/;"	f	class:OpenBabel::OBLocale
RestoreNNNgroup	src/formats/libinchi/ichirvr2.c	/^int RestoreNNNgroup( BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
RestoreRadicalsOnly	src/formats/libinchi/ichi_bns.c	/^int RestoreRadicalsOnly( BN_STRUCT *pBNS, BN_DATA *pBD, inp_ATOM *at )$/;"	f
RestrictedMatch	src/parsmart.cpp	/^  bool OBSmartsPattern::RestrictedMatch(OBMol &mol,$/;"	f	class:OpenBabel::OBSmartsPattern
RestrictedMatch	src/parsmart.cpp	/^  bool OBSmartsPattern::RestrictedMatch(OBMol &mol,OBBitVec &vres, bool single)$/;"	f	class:OpenBabel::OBSmartsPattern
RetValCheckINCHI	include/inchi/inchi_api.h	/^} RetValCheckINCHI;$/;"	t	typeref:enum:tagRetValCheckINCHI
RetValCheckINCHI	include/inchi_api.h	/^} RetValCheckINCHI;$/;"	t	typeref:enum:tagRetValCheckINCHI
RetValCheckINCHIKeyv	include/inchi/inchi_api.h	/^} RetValCheckINCHIKeyv;$/;"	t	typeref:enum:tagRetValGetINCHIKey
RetValCheckINCHIKeyv	include/inchi_api.h	/^} RetValCheckINCHIKeyv;$/;"	t	typeref:enum:tagRetValGetINCHIKey
RetValGetINCHI	include/inchi/inchi_api.h	/^} RetValGetINCHI;$/;"	t	typeref:enum:tagRetValGetINCHI
RetValGetINCHI	include/inchi_api.h	/^} RetValGetINCHI;$/;"	t	typeref:enum:tagRetValGetINCHI
RevInChI	include/inchi/ichirvrs.h	/^    REV_INCHI  RevInChI;$/;"	m	struct:tagStructFromInChI
RevertToAliasForm	src/alias.cpp	/^void AliasData::RevertToAliasForm(OBMol& mol)$/;"	f	class:OpenBabel::AliasData
Reweight	src/forcefield.cpp	/^  void Reweight(std::vector< std::vector <double> > &rotorWeights,$/;"	f	namespace:OpenBabel
Rf	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Rg	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Rh	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Rhombohedral	include/openbabel/generic.h	/^                       Rhombohedral \/**< also called trigonal*\/,$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
Right	src/depict/depict.cpp	/^    Right,$/;"	e	enum:OpenBabel::__anon74	file:
Ring	include/openbabel/bond.h	/^        Ring     = (1<<4), \/\/!< A bond in a ring$/;"	e	enum:OpenBabel::OBBond::Flag
Ring2Chain	src/formats/libinchi/ichinorm.c	/^int Ring2Chain( ORIG_ATOM_DATA *orig_inp_data )$/;"	f
RingBondInfo	src/formats/smiley.h	/^        RingBondInfo() : number(-1), order(-1), isUp(false), isDown(false),$/;"	f	struct:Smiley::Parser::RingBondInfo
RingBondInfo	src/formats/smiley.h	/^        RingBondInfo(int number_, int order_, bool isUp_, bool isDown_,$/;"	f	struct:Smiley::Parser::RingBondInfo
RingBondInfo	src/formats/smiley.h	/^      struct RingBondInfo$/;"	s	class:Smiley::Parser
RingClosureBond	src/formats/smilesformat.cpp	/^    struct RingClosureBond$/;"	s	class:OpenBabel::OBSmilesParser	file:
RingData	include/openbabel/base.h	/^      RingData =           8,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Rn	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Roots	src/obutil.cpp	/^  static double Roots[4];$/;"	m	namespace:OpenBabel	file:
RotAboutAxisByAngle	src/math/matrix3x3.cpp	/^  void matrix3x3::RotAboutAxisByAngle(const vector3 &v,const double angle)$/;"	f	class:OpenBabel::matrix3x3
RotBond_count	src/formats/pdbqtformat.cpp	/^  unsigned int RotBond_count(OBMol & mol)$/;"	f	namespace:OpenBabel
RotConsts	include/openbabel/generic.h	/^   std::vector<double> RotConsts;\/\/!< Rotational constants in GHz$/;"	m	class:OpenBabel::OBRotationData
RotamerList	include/openbabel/base.h	/^      RotamerList =        6,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Rotate	src/mol.cpp	/^  void OBMol::Rotate(const double m[9])$/;"	f	class:OpenBabel::OBMol
Rotate	src/mol.cpp	/^  void OBMol::Rotate(const double m[9],int nconf)$/;"	f	class:OpenBabel::OBMol
Rotate	src/mol.cpp	/^  void OBMol::Rotate(const double u[3][3])$/;"	f	class:OpenBabel::OBMol
RotationData	include/openbabel/base.h	/^      RotationData =      21,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
RotorKey	include/openbabel/conformersearch.h	/^  typedef std::vector<int> RotorKey;$/;"	t	namespace:OpenBabel
RotorKeys	include/openbabel/conformersearch.h	/^  typedef std::vector<RotorKey> RotorKeys;$/;"	t	namespace:OpenBabel
Ru	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Run	src/ops/opconfab.cpp	/^  void OpConfab::Run(OBConversion* pConv, OBMol* pmol)$/;"	f	class:OpenBabel::OpConfab
RunBalancedNetworkSearch	src/formats/libinchi/ichi_bns.c	/^int RunBalancedNetworkSearch( BN_STRUCT *pBNS, BN_DATA *pBD, int bChangeFlow )$/;"	f
RunBnsRestore1	src/formats/libinchi/ichirvr4.c	/^int RunBnsRestore1( ICHICONST INPUT_PARMS *ip, STRUCT_DATA *sd, BN_STRUCT *pBNS, BN_DATA *pBD,$/;"	f
RunBnsRestoreOnce	src/formats/libinchi/ichirvr1.c	/^int RunBnsRestoreOnce( BN_STRUCT *pBNS, BN_DATA *pBD, VAL_AT *pVA, ALL_TC_GROUPS *pTCGroups )$/;"	f
RunBnsTestOnce	src/formats/libinchi/ichirvr1.c	/^int RunBnsTestOnce( BN_STRUCT *pBNS, BN_DATA *pBD, VAL_AT *pVA, Vertex *pvFirst, Vertex *pvLast,$/;"	f
RunType_t	src/formats/gamessukformat.cpp	/^    enum RunType_t { UNKNOWN, SINGLEPOINT, OPTXYZ, OPTZMAT, SADDLE, FREQUENCIES };$/;"	g	class:OpenBabel::GAMESSUKOutputFormat	file:
S	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
S0	src/formats/libinchi/sha2.c	114;"	d	file:
S1	src/formats/libinchi/sha2.c	115;"	d	file:
S2	src/formats/libinchi/sha2.c	117;"	d	file:
S3	src/formats/libinchi/sha2.c	118;"	d	file:
S4	include/openbabel/pointgroup.h	/^        S4, S6, S8, \/\/ 45 to 47$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
S6	include/openbabel/pointgroup.h	/^        S4, S6, S8, \/\/ 45 to 47$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
S8	include/openbabel/pointgroup.h	/^        S4, S6, S8, \/\/ 45 to 47$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
SADDLE	src/formats/gamessukformat.cpp	/^    enum RunType_t { UNKNOWN, SINGLEPOINT, OPTXYZ, OPTZMAT, SADDLE, FREQUENCIES };$/;"	e	enum:OpenBabel::GAMESSUKOutputFormat::RunType_t	file:
SALT_ACCEPTOR	include/inchi/incomdef.h	99;"	d
SALT_DONOR	include/inchi/incomdef.h	105;"	d
SALT_DONOR_ALL	include/inchi/incomdef.h	102;"	d
SALT_DONOR_H	include/inchi/incomdef.h	97;"	d
SALT_DONOR_H2	include/inchi/incomdef.h	104;"	d
SALT_DONOR_Neg	include/inchi/incomdef.h	98;"	d
SALT_DONOR_Neg2	include/inchi/incomdef.h	103;"	d
SALT_SELECTED	include/inchi/incomdef.h	107;"	d
SALT_WITH_PROTONS	include/inchi/mode.h	414;"	d
SALT_p_ACCEPTOR	include/inchi/incomdef.h	101;"	d
SALT_p_DONOR	include/inchi/incomdef.h	100;"	d
SAVE_6_AROM_CENTERS	include/inchi/extr_ct.h	282;"	d
SAVE_OPT_15T	include/inchi/ichi.h	151;"	d
SAVE_OPT_FIXEDH	include/inchi/ichi.h	148;"	d
SAVE_OPT_KET	include/inchi/ichi.h	150;"	d
SAVE_OPT_RECMET	include/inchi/ichi.h	149;"	d
SAVE_OPT_SLUUD	include/inchi/ichi.h	146;"	d
SAVE_OPT_SUU	include/inchi/ichi.h	147;"	d
SB_DEPTH	src/formats/libinchi/ichimap4.c	57;"	d	file:
SB_PARITY_1	include/inchi/aux2atom.h	62;"	d
SB_PARITY_1	include/inchi/inpdef.h	89;"	d
SB_PARITY_2	include/inchi/aux2atom.h	63;"	d
SB_PARITY_2	include/inchi/inpdef.h	90;"	d
SB_PARITY_FLAG	include/inchi/aux2atom.h	59;"	d
SB_PARITY_FLAG	include/inchi/inpdef.h	86;"	d
SB_PARITY_MASK	include/inchi/aux2atom.h	61;"	d
SB_PARITY_MASK	include/inchi/inpdef.h	88;"	d
SB_PARITY_SHFT	include/inchi/aux2atom.h	60;"	d
SB_PARITY_SHFT	include/inchi/inpdef.h	87;"	d
SCF_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* SCF_CALCULATION_PATTERN = "SCF Module";$/;"	m	namespace:OpenBabel	file:
SCF_ENERGY_PATTERN	src/formats/nwchemformat.cpp	/^static const char* SCF_ENERGY_PATTERN = "SCF energy =";$/;"	m	namespace:OpenBabel	file:
SDF_DATA_HEADER	include/inchi/lreadmol.h	/^enum { SDF_START, SDF_DATA_HEADER, SDF_DATA_HEADER_NAME$/;"	e	enum:__anon1
SDF_DATA_HEADER_CAS	include/inchi/lreadmol.h	/^     , SDF_DATA_HEADER_COMMENT, SDF_DATA_HEADER_CAS$/;"	e	enum:__anon1
SDF_DATA_HEADER_COMMENT	include/inchi/lreadmol.h	/^     , SDF_DATA_HEADER_COMMENT, SDF_DATA_HEADER_CAS$/;"	e	enum:__anon1
SDF_DATA_HEADER_NAME	include/inchi/lreadmol.h	/^enum { SDF_START, SDF_DATA_HEADER, SDF_DATA_HEADER_NAME$/;"	e	enum:__anon1
SDF_DATA_HEADER_USER	include/inchi/lreadmol.h	/^     , SDF_DATA_HEADER_USER, SDF_DATA_LINE$/;"	e	enum:__anon1
SDF_DATA_LINE	include/inchi/lreadmol.h	/^     , SDF_DATA_HEADER_USER, SDF_DATA_LINE$/;"	e	enum:__anon1
SDF_EMPTY_LINE	include/inchi/lreadmol.h	/^     , SDF_END_OF_DATA_ITEM, SDF_EMPTY_LINE, SDF_END_OF_DATA_BLOCK };$/;"	e	enum:__anon1
SDF_END_OF_DATA_BLOCK	include/inchi/lreadmol.h	/^     , SDF_END_OF_DATA_ITEM, SDF_EMPTY_LINE, SDF_END_OF_DATA_BLOCK };$/;"	e	enum:__anon1
SDF_END_OF_DATA_ITEM	include/inchi/lreadmol.h	/^     , SDF_END_OF_DATA_ITEM, SDF_EMPTY_LINE, SDF_END_OF_DATA_BLOCK };$/;"	e	enum:__anon1
SDF_LBL_VAL	include/inchi/strutil.h	399;"	d
SDF_OUTPUT_DT	include/inchi/mode.h	350;"	d
SDF_OUTPUT_V2000	include/inchi/mode.h	349;"	d
SDF_START	include/inchi/lreadmol.h	/^enum { SDF_START, SDF_DATA_HEADER, SDF_DATA_HEADER_NAME$/;"	e	enum:__anon1
SDFormat	src/formats/mdlformat.cpp	/^      SDFormat()$/;"	f	class:OpenBabel::SDFormat
SDFormat	src/formats/mdlformat.cpp	/^  class SDFormat : public MDLFormat$/;"	c	namespace:OpenBabel	file:
SEC_UNDEFINED	src/formats/yasaraformat.cpp	255;"	d	file:
SEEK_CUR	include/zconf.h	297;"	d
SEEK_END	include/zconf.h	298;"	d
SEEK_SET	include/zconf.h	296;"	d
SEGM_LINE	src/formats/libinchi/ichiread.c	/^} SEGM_LINE;$/;"	t	typeref:struct:tagLine	file:
SEGM_LINE_ADD	src/formats/libinchi/ichiread.c	86;"	d	file:
SEG_END	src/formats/libinchi/ichiread.c	231;"	d	file:
SELFORMATS_DIALOG_H	src/GUI/selformats.h	2;"	d
SEPARATE_CANON_CALLS	src/formats/libinchi/ichican2.c	72;"	d	file:
SEP_0	src/formats/mpdformat.cpp	26;"	d	file:
SEP_1	src/formats/mpdformat.cpp	27;"	d	file:
SEP_2	src/formats/mpdformat.cpp	28;"	d	file:
SER	include/openbabel/residue.h	/^      SER   =  3,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
SETWORD	include/openbabel/bitvec.h	36;"	d
SET_DRAW_PARMS	include/inchi/ichidrp.h	/^} SET_DRAW_PARMS;  \/* input only: how to draw or calculate *\/$/;"	t	typeref:struct:tagDrawParmsSettings
SHAPELY_BACKBONE	include/openbabel/residue.h	/^      SHAPELY_BACKBONE = 6,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
SHAPELY_SPECIAL	include/openbabel/residue.h	/^      SHAPELY_SPECIAL  = 7,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
SHR	src/formats/libinchi/sha2.c	111;"	d	file:
SIDECHAIN	include/openbabel/residue.h	/^      SIDECHAIN        = 8,$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
SIESTAFormat	src/formats/siestaformat.cpp	/^    SIESTAFormat()$/;"	f	class:OpenBabel::SIESTAFormat
SIESTAFormat	src/formats/siestaformat.cpp	/^  class SIESTAFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
SINGLE	src/kekulize.cpp	44;"	d	file:
SINGLEPOINT	src/formats/gamessukformat.cpp	/^    enum RunType_t { UNKNOWN, SINGLEPOINT, OPTXYZ, OPTZMAT, SADDLE, FREQUENCIES };$/;"	e	enum:OpenBabel::GAMESSUKOutputFormat::RunType_t	file:
SINGLET_IS_TRIPLET	include/inchi/mode.h	498;"	d
SINT	src/rotamer.cpp	/^  static int SINT = 0x00000001;$/;"	m	namespace:OpenBabel	file:
SKIP	src/formats/gamessukformat.cpp	/^    enum ReadMode_t {CARTESIAN, ZMATRIX, VARIABLES, CONSTANTS, SKIP};$/;"	e	enum:OpenBabel::GAMESSUKFormat::ReadMode_t	file:
SKIP_EOL	include/libxml/parserInternals.h	245;"	d
SMALL	include/openbabel/residue.h	/^      SMALL       = 15,$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
SMALL_MEDIUM	include/zconf.h	183;"	d
SMALL_MEDIUM	include/zconf.h	192;"	d
SMARTSError	src/parsmart.cpp	/^  Pattern *OBSmartsPattern::SMARTSError( Pattern *pat )$/;"	f	class:OpenBabel::OBSmartsPattern
SMARTSParser	src/parsmart.cpp	/^  Pattern *OBSmartsPattern::SMARTSParser( Pattern *pat, ParseState *stat,$/;"	f	class:OpenBabel::OBSmartsPattern
SMIBaseFormat	src/formats/smilesformat.cpp	/^  class SMIBaseFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
SMIFormat	src/formats/smilesformat.cpp	/^    SMIFormat()$/;"	f	class:OpenBabel::SMIFormat
SMIFormat	src/formats/smilesformat.cpp	/^  class SMIFormat : public SMIBaseFormat$/;"	c	namespace:OpenBabel	file:
SMILEY_SMILEY_H	src/formats/smiley.h	28;"	d
SO4	include/openbabel/residue.h	/^      SO4   = 48,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
SOLARIS_COMPATIBLE	src/snprintf.c	301;"	d	file:
SOLVENT	include/openbabel/residue.h	/^      SOLVENT      = 8,$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
SP	src/formats/libinchi/ichiprt1.c	372;"	d	file:
SP1	src/formats/smiley.h	/^    SP1, SP2, SP3,$/;"	e	enum:Smiley::Chirality
SP2	src/formats/smiley.h	/^    SP1, SP2, SP3,$/;"	e	enum:Smiley::Chirality
SP3	src/formats/smiley.h	/^    SP1, SP2, SP3,$/;"	e	enum:Smiley::Chirality
SP3_ABS	src/formats/libinchi/ichimake.c	/^    SP3_ABS  = 2,  \/* abs stereo: both \/m and \/s are present *\/$/;"	e	enum:tagSp3StereoTypeTmp	file:
SP3_ANY	src/formats/libinchi/ichimake.c	/^    SP3_ANY  = (SP3_ABS|SP3_REL|SP3_RAC|SP3_ONLY)  \/* bitmap for checking the presence of \/t *\/$/;"	e	enum:tagSp3StereoTypeTmp	file:
SP3_NONE	src/formats/libinchi/ichimake.c	/^    SP3_NONE = 0,  \/* no sp3 stereo: no \/t, \/m, \/s segments *\/$/;"	e	enum:tagSp3StereoTypeTmp	file:
SP3_ONLY	src/formats/libinchi/ichimake.c	/^    SP3_ONLY = 1,  \/* no \/s or \/m segment: inversion leaves the structure unchanged *\/$/;"	e	enum:tagSp3StereoTypeTmp	file:
SP3_RAC	src/formats/libinchi/ichimake.c	/^    SP3_RAC  = 8,  \/* racemic stereo: \/s is presen, \/m is nott *\/$/;"	e	enum:tagSp3StereoTypeTmp	file:
SP3_REL	src/formats/libinchi/ichimake.c	/^    SP3_REL  = 4,  \/* rel stereo: \/s is present, \/m is not *\/$/;"	e	enum:tagSp3StereoTypeTmp	file:
SP3_TYPE	src/formats/libinchi/ichimake.c	/^    SP3_TYPE = (SP3_ABS|SP3_REL|SP3_RAC),          \/* bitmap for checking the presence of \/m *\/$/;"	e	enum:tagSp3StereoTypeTmp	file:
SP3_TYPE_TMP	src/formats/libinchi/ichimake.c	/^} SP3_TYPE_TMP;$/;"	t	typeref:enum:tagSp3StereoTypeTmp	file:
SPACE_GROUP_HALL	src/math/spacegroup.cpp	/^      SPACE_GROUP_HALL,$/;"	e	enum:OpenBabel::__anon88	file:
SPACE_GROUP_HM	src/math/spacegroup.cpp	/^      SPACE_GROUP_HM,$/;"	e	enum:OpenBabel::__anon88	file:
SPACE_GROUP_ID	src/math/spacegroup.cpp	/^      SPACE_GROUP_ID,$/;"	e	enum:OpenBabel::__anon88	file:
SPACE_GROUP_TRANSFORM	src/math/spacegroup.cpp	/^      SPACE_GROUP_TRANSFORM$/;"	e	enum:OpenBabel::__anon88	file:
SPIN_FORBIDDEN_PATTERN	src/formats/nwchemformat.cpp	/^static const char* SPIN_FORBIDDEN_PATTERN = "Spin forbidden";$/;"	m	namespace:OpenBabel	file:
SQR	src/formats/xtcformat.cpp	37;"	d	file:
SQRT_TWO_THIRDS	src/atom.cpp	1524;"	d	file:
SQUARE	include/openbabel/mol.h	802;"	d
SQUARE	include/openbabel/rotor.h	30;"	d
SQUARE	src/formats/povrayformat.cpp	54;"	d	file:
SQUARE	src/formats/povrayformat.cpp	56;"	d	file:
SQUARE	src/math/matrix3x3.cpp	/^  static inline double SQUARE( double x ) { return x*x; }$/;"	f	namespace:OpenBabel
SRI	include/openbabel/kinetics.h	/^  enum reaction_type {ARRHENIUS=55555, LINDERMANN, TROE, SRI, THREEBODY};$/;"	e	enum:OpenBabel::OBRateData::reaction_type
SRM	include/inchi/ichirvrs.h	/^} SRM;$/;"	t	typeref:struct:tagStructRestoreMode
STACKSIZE	src/chains.cpp	68;"	d	file:
STARTWORDS	include/openbabel/bitvec.h	45;"	d
STDC	include/zconf.h	106;"	d
STDC	include/zconf.h	109;"	d
STDC	include/zconf.h	112;"	d
STDC	include/zconf.h	115;"	d
STDC	include/zconf.h	119;"	d
STDC	include/zconf.h	97;"	d
STDC99	include/zconf.h	101;"	d
STDINCHIGEN_Create	src/formats/libinchi/inchi_dll_a.c	/^INCHIGEN_HANDLE INCHI_DECL STDINCHIGEN_Create(void)$/;"	f
STDINCHIGEN_Destroy	src/formats/libinchi/inchi_dll_a.c	/^void INCHI_DECL STDINCHIGEN_Destroy(INCHIGEN_HANDLE HGen)$/;"	f
STDINCHIGEN_DoCanonicalization	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL STDINCHIGEN_DoCanonicalization$/;"	f
STDINCHIGEN_DoNormalization	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL STDINCHIGEN_DoNormalization(INCHIGEN_HANDLE HGen,INCHIGEN_DATA * pGenData)$/;"	f
STDINCHIGEN_DoSerialization	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL STDINCHIGEN_DoSerialization(INCHIGEN_HANDLE HGen, $/;"	f
STDINCHIGEN_Reset	src/formats/libinchi/inchi_dll_a.c	/^void INCHI_DECL STDINCHIGEN_Reset(INCHIGEN_HANDLE HGen, $/;"	f
STDINCHIGEN_Setup	src/formats/libinchi/inchi_dll_a.c	/^int INCHI_DECL STDINCHIGEN_Setup(INCHIGEN_HANDLE _HGen, $/;"	f
STEREO_AT_MARK	include/inchi/mode.h	755;"	d
STEREO_BOND_NEIGH	src/formats/libinchi/ichicans.c	/^} STEREO_BOND_NEIGH;$/;"	t	typeref:struct:tagStereoBondNeighbor	file:
STEREO_CENTER_BOND4_NORM	include/inchi/mode.h	487;"	d
STEREO_CENTER_BONDS_NORM	include/inchi/mode.h	486;"	d
STEREO_DBLE_EITHER	include/inchi/incomdef.h	75;"	d
STEREO_SNGL_DOWN	include/inchi/incomdef.h	74;"	d
STEREO_SNGL_EITHER	include/inchi/incomdef.h	73;"	d
STEREO_SNGL_UP	include/inchi/incomdef.h	72;"	d
STEREO_WEDGE_ONLY	include/inchi/mode.h	379;"	d
STEREO_WEDGE_ONLY	include/inchi/mode.h	491;"	d
STLFormat	src/formats/stlformat.cpp	/^      STLFormat()$/;"	f	class:OpenBabel::STLFormat
STLFormat	src/formats/stlformat.cpp	/^  class STLFormat : public OpenBabel::OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
STPTR	src/rotamer.cpp	/^  static unsigned char *STPTR = (unsigned char*)&SINT;$/;"	m	namespace:OpenBabel	file:
STRUCT_DATA	include/inchi/ichimain.h	/^} STRUCT_DATA;$/;"	t	typeref:struct:tagStructData
STRUCT_FPTRS	include/inchi/inpdef.h	/^} STRUCT_FPTRS;$/;"	t	typeref:struct:tagStructFptrs
STRXCASECMP_DECLARE_N	src/strncasecmp.c	26;"	d	file:
STRXCASECMP_DECLARE_N	src/strncasecmp.c	30;"	d	file:
STRXCASECMP_FUNCTION	src/strncasecmp.c	/^STRXCASECMP_FUNCTION (const char *s1, const char *s2 STRXCASECMP_DECLARE_N)$/;"	f
STRXCASECMP_FUNCTION	src/strncasecmp.c	25;"	d	file:
STRXCASECMP_FUNCTION	src/strncasecmp.c	29;"	d	file:
STR_ERR_LEN	include/inchi/inchi_api.h	756;"	d
STR_ERR_LEN	include/inchi/incomdef.h	144;"	d
STR_ERR_LEN	include/inchi_api.h	757;"	d
STR_____	src/formats/yasaraformat.cpp	41;"	d	file:
ST_CAP_FLOW	include/inchi/inpdef.h	/^typedef S_SHORT ST_CAP_FLOW;$/;"	t
SUGAR_PHOSPHATE	include/openbabel/residue.h	/^      SUGAR_PHOSPHATE  = 9$/;"	e	enum:OpenBabel::OBResidueAtomProperty::__anon60
SURFACE	include/openbabel/residue.h	/^      SURFACE     = 16$/;"	e	enum:OpenBabel::OBAminoAcidProperty::__anon59
SU_LONG	include/inchi/ichicant.h	/^}SU_LONG;$/;"	t	typeref:union:tagSplitLong
SVGFormat	src/formats/svgformat.cpp	/^  SVGFormat() : _ncols(0), _nrows(0), _nmax(0)$/;"	f	class:OpenBabel::SVGFormat
SVGFormat	src/formats/svgformat.cpp	/^class SVGFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
SVGPainter	include/openbabel/depict/svgpainter.h	/^  class OBDEPICT SVGPainter : public OBPainter$/;"	c	namespace:OpenBabel
SVGPainter	src/depict/svgpainter.cpp	/^  SVGPainter::SVGPainter(ostream& ofs, std::set<ColorGradient>* gradients, bool withViewBox,$/;"	f	class:OpenBabel::SVGPainter
SYMMETRIC	include/openbabel/generic.h	/^   enum RType{UNKNOWN, ASYMMETRIC, SYMMETRIC, LINEAR};$/;"	e	enum:OpenBabel::OBRotationData::RType
SYMMETRY_ELEMENT	src/pointgroup.cpp	/^    typedef _SYMMETRY_ELEMENT_ SYMMETRY_ELEMENT;$/;"	t	class:OpenBabel::PointGroupPrivate	file:
SYS16BIT	include/zconf.h	79;"	d
SZELEM1	src/formats/libinchi/ichister.c	1196;"	d	file:
SZELEM2	src/formats/libinchi/ichister.c	1210;"	d	file:
SZELEM3	src/formats/libinchi/ichister.c	1226;"	d	file:
S_CANDIDATE	include/inchi/ichitaut.h	/^} S_CANDIDATE;$/;"	t	typeref:struct:tagSaltChargeCandidate
S_CHAR	include/inchi/inchi_api.h	/^typedef signed char   S_CHAR;$/;"	t
S_CHAR	include/inchi/incomdef.h	/^typedef signed char   S_CHAR;$/;"	t
S_CHAR	include/inchi_api.h	/^typedef signed char   S_CHAR;$/;"	t
S_GROUP_INFO	include/inchi/ichitaut.h	/^} S_GROUP_INFO;$/;"	t	typeref:struct:tagSaltGroupInfo
S_SHORT	include/inchi/ichicant.h	/^typedef signed short S_SHORT;$/;"	t
S_SHORT	include/inchi/inchi_api.h	/^typedef signed short   S_SHORT;$/;"	t
S_SHORT	include/inchi/incomdef.h	/^typedef signed short   S_SHORT;$/;"	t
S_SHORT	include/inchi_api.h	/^typedef signed short   S_SHORT;$/;"	t
S_VI_O_PLUS_METAL_FIX_BOND	include/inchi/mode.h	385;"	d
SafeOpen	src/obutil.cpp	/^  bool SafeOpen(std::ifstream &fs, const char *filename)$/;"	f	namespace:OpenBabel
SafeOpen	src/obutil.cpp	/^  bool SafeOpen(std::ifstream &fs, const string &filename)$/;"	f	namespace:OpenBabel
SafeOpen	src/obutil.cpp	/^  bool SafeOpen(std::ofstream &fs, const char *filename)$/;"	f	namespace:OpenBabel
SafeOpen	src/obutil.cpp	/^  bool SafeOpen(std::ofstream &fs, const string &filename)$/;"	f	namespace:OpenBabel
SaltBondsToCoordBonds	src/formats/libinchi/ichirvr4.c	/^int SaltBondsToCoordBonds(BN_STRUCT *pBNS, BN_DATA *pBD, StrFromINChI *pStruct,$/;"	f
SaveEquComponentsInfoAndSortOrder	src/formats/libinchi/runichi.c	/^int SaveEquComponentsInfoAndSortOrder ( int iINChI, INCHI_SORT *pINChISort[TAUT_NUM], int *num_components,$/;"	f
SaveInchi	src/formats/inchiformat.cpp	/^void InChIFormat::SaveInchi(OBMol* pmol, const std::string& s)$/;"	f	class:OpenBabel::InChIFormat
SaveUniqueRing	src/ring.cpp	/^  bool OBRingSearch::SaveUniqueRing(deque<int> &d1,deque<int> &d2)$/;"	f	class:OpenBabel::OBRingSearch
Sb	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Sc	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
ScanQ	include/inchi/ichi_bns.h	/^    Vertex          *ScanQ;      \/*[MAX_VERTEX];  contains the set S of s-reachable vertices *\/$/;"	m	struct:BalancedNetworkData
Score	src/conformersearch.cpp	/^  double OBEnergyConformerScore::Score(OBMol &mol, unsigned int index,$/;"	f	class:OpenBabel::OBEnergyConformerScore
Score	src/conformersearch.cpp	/^  double OBMinimizingEnergyConformerScore::Score(OBMol &mol, unsigned int index,$/;"	f	class:OpenBabel::OBMinimizingEnergyConformerScore
Score	src/conformersearch.cpp	/^  double OBMinimizingRMSDConformerScore::Score(OBMol &mol, unsigned int index,$/;"	f	class:OpenBabel::OBMinimizingRMSDConformerScore
Score	src/conformersearch.cpp	/^  double OBRMSDConformerScore::Score(OBMol &mol, unsigned int index,$/;"	f	class:OpenBabel::OBRMSDConformerScore
Se	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
Search	src/conformersearch.cpp	/^  void OBConformerSearch::Search()$/;"	f	class:OpenBabel::OBConformerSearch
Seed	include/openbabel/rand.h	/^    void Seed(int seed)$/;"	f	class:OpenBabel::OBRandom
SelFormatsDialog	src/GUI/selformats.h	/^	SelFormatsDialog(wxArrayString& AllFormatsArray, wxString& ActiveFormatsString)$/;"	f	class:SelFormatsDialog
SelFormatsDialog	src/GUI/selformats.h	/^class SelFormatsDialog : public wxDialog$/;"	c
SelectFilename	src/GUI/OBGUI.cpp	/^wxString CFilenames::SelectFilename()$/;"	f	class:CFilenames
SelectFormats	src/GUI/selformats.h	/^	bool SelectFormats() \/\/ Called in OBGUIFrame::OnSelectFormats$/;"	f	class:ActiveFormats
SelectRootAtoms	src/typer.cpp	/^  void OBAromaticTyper::SelectRootAtoms(OBMol &mol, bool avoidInnerRingAtoms)$/;"	f	class:OpenBabel::OBAromaticTyper
Selenium	src/tautomer.cpp	/^      Selenium = 34,$/;"	e	enum:OpenBabel::TautomerImpl::AtomNumber	file:
SelfType	include/openbabel/json/json.h	/^      typedef ValueConstIterator SelfType;$/;"	t	class:Json::ValueConstIterator
SelfType	include/openbabel/json/json.h	/^      typedef ValueIterator SelfType;$/;"	t	class:Json::ValueIterator
SelfType	include/openbabel/json/json.h	/^      typedef ValueIteratorBase SelfType;$/;"	t	class:Json::ValueIteratorBase
SemanticsError	src/formats/smiley.h	/^      enum Type { SyntaxError, SemanticsError };$/;"	e	enum:Smiley::Exception::Type
Separate	src/mol.cpp	/^  vector<OBMol> OBMol::Separate(int StartIndex)$/;"	f	class:OpenBabel::OBMol
Separate_preserve_charges	src/formats/pdbqtformat.cpp	/^  bool Separate_preserve_charges(OBMol & mol, vector <OBMol> & result)$/;"	f	namespace:OpenBabel
SequenceType	src/formats/fastaformat.cpp	/^    enum SequenceType$/;"	g	class:OpenBabel::FASTAFormat	file:
SequenceType	src/formats/genbankformat.cpp	/^    enum SequenceType$/;"	g	class:OpenBabel::GenBankFormat	file:
SerialNums	include/openbabel/base.h	/^      SerialNums =        11,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Set	include/openbabel/math/matrix3x3.h	/^      void Set(int row,int column, double v)$/;"	f	class:OpenBabel::matrix3x3
Set	include/openbabel/math/vector3.h	/^    void Set(const double *c)$/;"	f	class:OpenBabel::vector3
Set	include/openbabel/math/vector3.h	/^    void Set(const double inX, const double inY, const double inZ)$/;"	f	class:OpenBabel::vector3
Set	include/openbabel/rotor.h	/^    void Set(double *coordinates, int conformer, int idx)$/;"	f	class:OpenBabel::OBRotor
Set	src/bond.cpp	/^  void OBBond::Set(int idx,OBAtom *begin,OBAtom *end,int order,int flags)$/;"	f	class:OpenBabel::OBBond
Set	src/rotor.cpp	/^  void OBRotor::Set(double *c,double sn,double cs,double t,double invmag)$/;"	f	class:OpenBabel::OBRotor
Set	src/rotor.cpp	/^  void OBRotor::Set(double *coordinates, int idx)$/;"	f	class:OpenBabel::OBRotor
Set12Bounds	src/distgeom.cpp	/^  void OBDistanceGeometry::Set12Bounds(bool useGeom)$/;"	f	class:OpenBabel::OBDistanceGeometry
Set13Bounds	src/distgeom.cpp	/^  void OBDistanceGeometry::Set13Bounds(bool useGeom)$/;"	f	class:OpenBabel::OBDistanceGeometry
Set14Bounds	src/distgeom.cpp	/^  void OBDistanceGeometry::Set14Bounds()$/;"	f	class:OpenBabel::OBDistanceGeometry
Set15Bounds	src/distgeom.cpp	/^  void OBDistanceGeometry::Set15Bounds()$/;"	f	class:OpenBabel::OBDistanceGeometry
SetAccuracy	src/spectrophore.cpp	/^OBSpectrophore::SetAccuracy(const OBSpectrophore::AccuracyOption a)$/;"	f	class:OpenBabel::OBSpectrophore
SetAlias	include/openbabel/alias.h	/^  void SetAlias(const char* alias) {_alias = alias;}$/;"	f	class:OpenBabel::AliasData
SetAlias	include/openbabel/alias.h	/^  void SetAlias(const std::string& alias) {_alias = alias;}$/;"	f	class:OpenBabel::AliasData
SetAliasMode	src/depict/depict.cpp	/^  void OBDepict::SetAliasMode(bool b)$/;"	f	class:OpenBabel::OBDepict
SetAlphaOrbitals	include/openbabel/generic.h	/^    void SetAlphaOrbitals(std::vector<OBOrbital> orbitalList)$/;"	f	class:OpenBabel::OBOrbitalData
SetAlphaSharing	include/openbabel/conformersearch.h	/^      void SetAlphaSharing (double value) {alpha_share = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetAngle	include/openbabel/generic.h	/^    void  SetAngle(double angle)$/;"	f	class:OpenBabel::OBAngle
SetAngle	src/generic.cpp	/^  bool OBTorsion::SetAngle(double radians,unsigned int index)$/;"	f	class:OpenBabel::OBTorsion
SetAntiClockwiseStereo	include/openbabel/atom.h	/^      void SetAntiClockwiseStereo()       { SetFlag(OB_ACSTEREO_ATOM|OB_CHIRAL_ATOM); }$/;"	f	class:OpenBabel::OBAtom
SetAromatic	include/openbabel/atom.h	/^      void SetAromatic()                  { SetFlag(OB_AROMATIC_ATOM); }$/;"	f	class:OpenBabel::OBAtom
SetAromatic	include/openbabel/bond.h	/^      void SetAromatic()    { SetFlag(OB_AROMATIC_BOND); }$/;"	f	class:OpenBabel::OBBond
SetAromaticCorrected	include/openbabel/mol.h	/^    void   SetAromaticCorrected()    { SetFlag(OB_AROM_CORRECTED_MOL);}$/;"	f	class:OpenBabel::OBMol
SetAromaticPerceived	include/openbabel/mol.h	/^    void   SetAromaticPerceived()    { SetFlag(OB_AROMATIC_MOL);    }$/;"	f	class:OpenBabel::OBMol
SetAromaticRingBounds	src/distgeom.cpp	/^  void OBDistanceGeometry::SetAromaticRingBounds()$/;"	f	class:OpenBabel::OBDistanceGeometry
SetAtom	include/openbabel/generic.h	/^    void SetAtom(OBAtom *atom) {        _atom = atom;    }$/;"	f	class:OpenBabel::OBExternalBond
SetAtom4Refs	src/generic.cpp	/^  bool OBChiralData::SetAtom4Refs(std::vector<unsigned int> atom4refs, atomreftype t)$/;"	f	class:OpenBabel::OBChiralData
SetAtomAndBondProperties	src/formats/libinchi/inchi_dll.c	/^int SetAtomAndBondProperties( inp_ATOM *at, inchi_Atom *ati, int a1,$/;"	f
SetAtomBondType	src/formats/libinchi/ichi_bns.c	/^int SetAtomBondType( BNS_EDGE *edge, U_CHAR *bond_type12, U_CHAR *bond_type21, int delta, int bChangeFlow )$/;"	f
SetAtomID	src/residue.cpp	/^  void OBResidue::SetAtomID(OBAtom *atom, const string &id)$/;"	f	class:OpenBabel::OBResidue
SetAtomProperties	src/formats/libinchi/inchi_dll.c	/^int SetAtomProperties( inp_ATOM *at, MOL_COORD *szCoord, inchi_Atom *ati, int a1, int *nDim, char *pStrErr, int *err )$/;"	f
SetAtomRadAndChemValFromVertexCapFlow	src/formats/libinchi/ichi_bns.c	/^int SetAtomRadAndChemValFromVertexCapFlow( BN_STRUCT *pBNS, inp_ATOM *atom, int v1 )$/;"	f
SetAtomTypesPerceived	include/openbabel/mol.h	/^    void   SetAtomTypesPerceived()   { SetFlag(OB_ATOMTYPES_MOL);   }$/;"	f	class:OpenBabel::OBMol
SetAtomicNum	include/openbabel/atom.h	/^      void SetAtomicNum(int atomicnum)    { _ele = (char)atomicnum; }$/;"	f	class:OpenBabel::OBAtom
SetAtoms	src/generic.cpp	/^  void OBAngle::SetAtoms(OBAtom *vertex,OBAtom *a,OBAtom *b)$/;"	f	class:OpenBabel::OBAngle
SetAtoms	src/generic.cpp	/^  void OBAngle::SetAtoms(triple<OBAtom*,OBAtom*,OBAtom*> &atoms)$/;"	f	class:OpenBabel::OBAngle
SetAttribute	include/openbabel/base.h	/^    void                      SetAttribute(const std::string &v)$/;"	f	class:OpenBabel::OBGenericData
SetAutomaticFormalCharge	include/openbabel/mol.h	/^    void SetAutomaticFormalCharge(bool val)$/;"	f	class:OpenBabel::OBMol
SetAutomaticPartialCharge	include/openbabel/mol.h	/^    void SetAutomaticPartialCharge(bool val)$/;"	f	class:OpenBabel::OBMol
SetAuxConv	include/openbabel/obconversion.h	/^      void          SetAuxConv(OBConversion* pConv) {pAuxConv=pConv;};$/;"	f	class:OpenBabel::OBConversion
SetBO	src/bond.cpp	/^  void OBBond::SetBO(int order)$/;"	f	class:OpenBabel::OBBond
SetBackground	include/openbabel/depict/cairopainter.h	/^      void SetBackground(std::string color) {m_fillcolor=color;}$/;"	f	class:OpenBabel::CairoPainter
SetBaseCoordinateSets	include/openbabel/rotamer.h	/^    void SetBaseCoordinateSets(OBMol& mol)$/;"	f	class:OpenBabel::OBRotamerList
SetBaseCoordinateSets	src/rotamer.cpp	/^  void OBRotamerList::SetBaseCoordinateSets(vector<double*> bc, unsigned int N)$/;"	f	class:OpenBabel::OBRotamerList
SetBegin	include/openbabel/bond.h	/^      void SetBegin(OBAtom *begin){          _bgn = begin;      }$/;"	f	class:OpenBabel::OBBond
SetBetaOrbitals	include/openbabel/generic.h	/^    void SetBetaOrbitals(std::vector<OBOrbital> orbitalList)$/;"	f	class:OpenBabel::OBOrbitalData
SetBit	src/fingerprint.cpp	/^  void OBFingerprint::SetBit(vector<unsigned int>& vec, const unsigned int n)$/;"	f	class:OpenBabel::OBFingerprint
SetBitCreate	src/formats/libinchi/ichican2.c	/^int SetBitCreate( void )$/;"	f
SetBitFree	src/formats/libinchi/ichican2.c	/^int SetBitFree( void )$/;"	f
SetBitOff	src/bitvec.cpp	/^  void OBBitVec::SetBitOff(unsigned bit_offset)$/;"	f	class:OpenBabel::OBBitVec
SetBitOn	src/bitvec.cpp	/^  void OBBitVec::SetBitOn(unsigned bit_offset)$/;"	f	class:OpenBabel::OBBitVec
SetBond	include/openbabel/generic.h	/^    void SetBond(OBBond *bond) {        _bond = bond;    }$/;"	f	class:OpenBabel::OBExternalBond
SetBond	include/openbabel/rotor.h	/^    void SetBond(OBBond *bond)$/;"	f	class:OpenBabel::OBRotor
SetBondColor	include/openbabel/depict/cairopainter.h	/^      void SetBondColor(std::string color) {m_bondcolor=color;}$/;"	f	class:OpenBabel::CairoPainter
SetBondColor	src/depict/depict.cpp	/^  void OBDepict::SetBondColor(const std::string& scolor)$/;"	f	class:OpenBabel::OBDepict
SetBondLength	src/depict/depict.cpp	/^  void OBDepict::SetBondLength(double length)$/;"	f	class:OpenBabel::OBDepict
SetBondOrder	src/bond.cpp	/^  void OBBond::SetBondOrder(int order)$/;"	f	class:OpenBabel::OBBond
SetBondProperties	src/formats/libinchi/inchi_dll.c	/^int SetBondProperties( inp_ATOM *at, inchi_Atom *ati, int a1, int j,$/;"	f
SetBondSpacing	src/depict/depict.cpp	/^  void OBDepict::SetBondSpacing(double spacing)$/;"	f	class:OpenBabel::OBDepict
SetBondWidth	src/depict/depict.cpp	/^  void OBDepict::SetBondWidth(double width)$/;"	f	class:OpenBabel::OBDepict
SetBondsFromBnStructFlow	src/formats/libinchi/ichi_bns.c	/^int SetBondsFromBnStructFlow( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, int bChangeFlow0 )$/;"	f
SetBoundsMatrix	src/distgeom.cpp	/^  bool OBDistanceGeometry::SetBoundsMatrix(const Eigen::MatrixXf bounds)$/;"	f	class:OpenBabel::OBDistanceGeometry
SetChain	src/residue.cpp	/^  void OBResidue::SetChain(char chain)$/;"	f	class:OpenBabel::OBResidue
SetChainNum	src/residue.cpp	/^  void OBResidue::SetChainNum(unsigned int chainnum)$/;"	f	class:OpenBabel::OBResidue
SetChainsPerceived	include/openbabel/mol.h	/^    void   SetChainsPerceived()      { SetFlag(OB_CHAINS_MOL);      }$/;"	f	class:OpenBabel::OBMol
SetChiral	include/openbabel/atom.h	/^      void SetChiral()         { SetFlag(OB_CHIRAL_ATOM); }$/;"	f	class:OpenBabel::OBAtom
SetChiralityPerceived	include/openbabel/mol.h	/^    void   SetChiralityPerceived()   { SetFlag(OB_CHIRALITY_MOL);   }$/;"	f	class:OpenBabel::OBMol
SetChoice	src/GUI/OBGUI.cpp	/^bool OBGUIFrame::SetChoice(wxChoice* pChoice, const wxString& FileName)$/;"	f	class:OBGUIFrame
SetClockwiseStereo	include/openbabel/atom.h	/^      void SetClockwiseStereo()           { SetFlag(OB_CSTEREO_ATOM|OB_CHIRAL_ATOM); }$/;"	f	class:OpenBabel::OBAtom
SetClosure	include/openbabel/bond.h	/^      void SetClosure()     { SetFlag(OB_CLOSURE_BOND);  }$/;"	f	class:OpenBabel::OBBond
SetClosureBondsPerceived	include/openbabel/mol.h	/^    void   SetClosureBondsPerceived(){ SetFlag(OB_CLOSURE_MOL);     }$/;"	f	class:OpenBabel::OBMol
SetCoeff	include/openbabel/kinetics.h	/^  void SetCoeff(unsigned n, const double val)$/;"	f	class:OpenBabel::OBNasaThermoData
SetColor	include/openbabel/alias.h	/^  void SetColor(std::string color){ _color = color; }$/;"	f	class:OpenBabel::AliasData
SetColumn	src/math/matrix3x3.cpp	/^  void matrix3x3::SetColumn(int col, const vector3 &v)$/;"	f	class:OpenBabel::matrix3x3
SetComment	include/openbabel/reaction.h	/^  void SetComment(const std::string& comment) { _comment=comment; }$/;"	f	class:OpenBabel::OBReaction
SetConfig	src/stereo/cistrans.cpp	/^  void OBCisTransStereo::SetConfig(const Config &config)$/;"	f	class:OpenBabel::OBCisTransStereo
SetConfig	src/stereo/squareplanar.cpp	/^  void OBSquarePlanarStereo::SetConfig(const Config &config)$/;"	f	class:OpenBabel::OBSquarePlanarStereo
SetConfig	src/stereo/tetrahedral.cpp	/^  void OBTetrahedralStereo::SetConfig(const Config &config)$/;"	f	class:OpenBabel::OBTetrahedralStereo
SetConformer	src/mol.cpp	/^  void OBMol::SetConformer(int i)$/;"	f	class:OpenBabel::OBMol
SetConformers	src/forcefield.cpp	/^  bool OBForceField::SetConformers(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
SetConformers	src/mol.cpp	/^  void OBMol::SetConformers(vector<double*> &v)$/;"	f	class:OpenBabel::OBMol
SetConnectedComponentNumber	src/formats/libinchi/strutil.c	/^int SetConnectedComponentNumber( inp_ATOM *at, int num_at, int component_number )$/;"	f
SetConstraints	src/forcefield.cpp	/^  void OBForceField::SetConstraints(OBFFConstraints& constraints)$/;"	f	class:OpenBabel::OBForceField
SetConvergence	include/openbabel/conformersearch.h	/^      void SetConvergence(int convergence) { m_convergence = convergence; }$/;"	f	class:OpenBabel::OBConformerSearch
SetCoordPtr	include/openbabel/atom.h	/^      void SetCoordPtr(double **c)        { _c = c; _cidx = (GetIdx()-1)*3; }$/;"	f	class:OpenBabel::OBAtom
SetCoordinates	src/forcefield.cpp	/^  bool OBForceField::SetCoordinates(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
SetCoordinates	src/mol.cpp	/^  void OBMol::SetCoordinates(double *newCoords)$/;"	f	class:OpenBabel::OBMol
SetCorrectedForPH	include/openbabel/mol.h	/^    void   SetCorrectedForPH()       { SetFlag(OB_PH_CORRECTED_MOL);}$/;"	f	class:OpenBabel::OBMol
SetCropping	include/openbabel/depict/cairopainter.h	/^      void SetCropping(bool cr) {m_cropping=cr;}$/;"	f	class:OpenBabel::CairoPainter
SetCrossoverProbability	include/openbabel/conformersearch.h	/^      void SetCrossoverProbability (double value) {p_crossover = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetCtToIsotopicStereo	src/formats/libinchi/ichicans.c	/^void SetCtToIsotopicStereo( CANON_STAT *pCS, CANON_STAT *pCS2 )$/;"	f
SetCtToNonIsotopicStereo	src/formats/libinchi/ichicans.c	/^void SetCtToNonIsotopicStereo( CANON_STAT *pCS, CANON_STAT *pCS2 )$/;"	f
SetCurrentCoordinates	src/rotamer.cpp	/^  bool OBRotamerList::SetCurrentCoordinates(OBMol &mol, std::vector<int> arr)$/;"	f	class:OpenBabel::OBRotamerList
SetData	include/openbabel/base.h	/^      SetData =           23,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
SetData	include/openbabel/base.h	/^      void                              SetData(OBGenericData *d)$/;"	f	class:OpenBabel::OBBase
SetData	include/openbabel/generic.h	/^    bool SetData(OBBond * \/*bond*\/) { return false; }$/;"	f	class:OpenBabel::OBTorsion
SetData	include/openbabel/generic.h	/^    void          SetData(const char *d)$/;"	f	class:OpenBabel::OBCommentData
SetData	include/openbabel/generic.h	/^    void          SetData(const std::string &data)$/;"	f	class:OpenBabel::OBCommentData
SetData	include/openbabel/generic.h	/^    void SetData(double energy, double occupation = 2.0, std::string symbol = "A")$/;"	f	class:OpenBabel::OBOrbital
SetData	include/openbabel/generic.h	/^    void SetData(matrix3x3 data)$/;"	f	class:OpenBabel::OBMatrixData
SetData	include/openbabel/generic.h	/^    void SetData(std::map<int,OBAtom*> &sm) { _serialMap = sm;  }$/;"	f	class:OpenBabel::OBSerialNums
SetData	include/openbabel/generic.h	/^    void SetData(std::string pg, std::string sg = "")$/;"	f	class:OpenBabel::OBSymmetryData
SetData	include/openbabel/generic.h	/^    void SetData(std::vector<OBGenericData *> &vdata)$/;"	f	class:OpenBabel::OBSetData
SetData	include/openbabel/generic.h	/^    void SetData(std::vector<OBRing*> &vr)$/;"	f	class:OpenBabel::OBRingData
SetData	include/openbabel/generic.h	/^    void SetData(std::vector<std::string> vdat) { _vData = vdat; }$/;"	f	class:OpenBabel::OBConformerData
SetData	include/openbabel/generic.h	/^   void SetData(RType RotorType, std::vector<double> RotationalConstants, int SymmetryNumber)$/;"	f	class:OpenBabel::OBRotationData
SetData	include/openbabel/generic.h	/^   void SetData(double x, double y, double z)$/;"	f	class:OpenBabel::OBVectorData
SetData	include/openbabel/generic.h	/^   void SetData(vector3 data)$/;"	f	class:OpenBabel::OBVectorData
SetData	src/generic.cpp	/^  void OBAngleData::SetData(OBAngle &angle)$/;"	f	class:OpenBabel::OBAngleData
SetData	src/generic.cpp	/^  void OBExternalBondData::SetData(OBAtom *atom,OBBond *bond,int idx)$/;"	f	class:OpenBabel::OBExternalBondData
SetData	src/generic.cpp	/^  void OBTorsionData::SetData(OBTorsion &torsion)$/;"	f	class:OpenBabel::OBTorsionData
SetData	src/generic.cpp	/^  void OBUnitCell::SetData(const double a, const double b, const double c,$/;"	f	class:OpenBabel::OBUnitCell
SetData	src/generic.cpp	/^  void OBUnitCell::SetData(const matrix3x3 m)$/;"	f	class:OpenBabel::OBUnitCell
SetData	src/generic.cpp	/^  void OBUnitCell::SetData(const vector3 v1, const vector3 v2, const vector3 v3)$/;"	f	class:OpenBabel::OBUnitCell
SetData	src/generic.cpp	/^void OBDOSData::SetData(double fermi,$/;"	f	class:OpenBabel::OBDOSData
SetData	src/generic.cpp	/^void OBElectronicTransitionData::SetData(const std::vector<double> & vWavelengths,$/;"	f	class:OpenBabel::OBElectronicTransitionData
SetData	src/generic.cpp	/^void OBVibrationData::SetData(const std::vector< std::vector< vector3 > > & vLx,$/;"	f	class:OpenBabel::OBVibrationData
SetDelta	include/openbabel/rotor.h	/^    void    SetDelta(double d)    {       _delta = d;           }$/;"	f	class:OpenBabel::OBRotorRule
SetDelta	include/openbabel/rotor.h	/^    void SetDelta(double UNUSED(d)) {}$/;"	f	class:OpenBabel::OBRotor
SetDihedralAtoms	src/rotor.cpp	/^  void OBRotor::SetDihedralAtoms(int ref[4])$/;"	f	class:OpenBabel::OBRotor
SetDihedralAtoms	src/rotor.cpp	/^  void OBRotor::SetDihedralAtoms(std::vector<int> &ref)$/;"	f	class:OpenBabel::OBRotor
SetDimension	include/openbabel/generic.h	/^    void SetDimension(std::vector<unsigned short> vd) { _vDimension = vd; }$/;"	f	class:OpenBabel::OBConformerData
SetDimension	include/openbabel/mol.h	/^    void   SetDimension(unsigned short int d) { _dimension = d; }$/;"	f	class:OpenBabel::OBMol
SetDisplacements	include/openbabel/generic.h	/^    void SetDisplacements(std::vector< std::vector< vector3 > > vd)$/;"	f	class:OpenBabel::OBConformerData
SetDown	include/openbabel/bond.h	/^      void SetDown()        { SetFlag(OB_TORDOWN_BOND); UnsetFlag(OB_TORUP_BOND);   }$/;"	f	class:OpenBabel::OBBond
SetEDipole	src/generic.cpp	/^void OBElectronicTransitionData::SetEDipole(const std::vector<double> & vEDipole)$/;"	f	class:OpenBabel::OBElectronicTransitionData
SetEdgeCapFlow	src/formats/libinchi/ichirvr1.c	/^void SetEdgeCapFlow( BNS_EDGE *e, int edge_cap, int edge_flow )$/;"	f
SetEfficiency	include/openbabel/kinetics.h	/^  void SetEfficiency(std::string id, double Eff)$/;"	f	class:OpenBabel::OBRateData
SetElectrostaticCutOff	include/openbabel/forcefield.h	/^    void SetElectrostaticCutOff(double r)$/;"	f	class:OpenBabel::OBForceField
SetEnd	include/openbabel/bond.h	/^      void SetEnd(OBAtom *end)    {          _end = end;        }$/;"	f	class:OpenBabel::OBBond
SetEnergies	include/openbabel/generic.h	/^    void SetEnergies(std::vector<double> ve) { _vEnergies = ve; }$/;"	f	class:OpenBabel::OBConformerData
SetEnergies	src/mol.cpp	/^  void OBMol::SetEnergies(std::vector<double> &energies)$/;"	f	class:OpenBabel::OBMol
SetEnergy	include/openbabel/mol.h	/^    void   SetEnergy(double energy) { _energy = energy; }$/;"	f	class:OpenBabel::OBMol
SetEnvironmentVariable	include/openbabel/data.h	/^      void  SetEnvironmentVariable(char *var)      { _envvar = var; }$/;"	f	class:OpenBabel::OBGlobalDataBase
SetEvalAtoms	include/openbabel/rotor.h	/^    void SetEvalAtoms(OBBitVec &bv) { _evalatoms = bv; }$/;"	f	class:OpenBabel::OBRotor
SetEvalAtoms	src/rotor.cpp	/^  bool OBRotorList::SetEvalAtoms(OBMol &mol)$/;"	f	class:OpenBabel::OBRotorList
SetFactor	src/forcefield.cpp	/^  void OBFFConstraints::SetFactor(double factor)$/;"	f	class:OpenBabel::OBFFConstraints
SetFilename	include/openbabel/rotor.h	/^    void SetFilename(std::string &s)       { _filename = s;    }$/;"	f	class:OpenBabel::OBRotorRules
SetFillColor	src/depict/asciipainter.cpp	/^  void ASCIIPainter::SetFillColor(const OBColor &color)$/;"	f	class:OpenBabel::ASCIIPainter
SetFillColor	src/depict/cairopainter.cpp	/^  void CairoPainter::SetFillColor(const OBColor &color)$/;"	f	class:OpenBabel::CairoPainter
SetFillColor	src/depict/commandpainter.cpp	/^  void CommandPainter::SetFillColor(const OBColor &color)$/;"	f	class:OpenBabel::CommandPainter
SetFillColor	src/depict/svgpainter.cpp	/^  void SVGPainter::SetFillColor(const OBColor &color)$/;"	f	class:OpenBabel::SVGPainter
SetFillRadial	src/depict/asciipainter.cpp	/^  void ASCIIPainter::SetFillRadial(const OBColor &start, const OBColor &end)$/;"	f	class:OpenBabel::ASCIIPainter
SetFillRadial	src/depict/cairopainter.cpp	/^  void CairoPainter::SetFillRadial(const OBColor &start, const OBColor &end)$/;"	f	class:OpenBabel::CairoPainter
SetFillRadial	src/depict/commandpainter.cpp	/^  void CommandPainter::SetFillRadial(const OBColor &start, const OBColor &end)$/;"	f	class:OpenBabel::CommandPainter
SetFillRadial	src/depict/svgpainter.cpp	/^  void SVGPainter::SetFillRadial(const OBColor &start, const OBColor &end)$/;"	f	class:OpenBabel::SVGPainter
SetFilter	include/openbabel/conformersearch.h	/^      void SetFilter(OBConformerFilter *filter)$/;"	f	class:OpenBabel::OBConformerSearch
SetFirstInput	src/obconversion.cpp	/^  void OBConversion::SetFirstInput(bool b)$/;"	f	class:OpenBabel::OBConversion
SetFixAtom	src/forcefield.cpp	/^  void OBForceField::SetFixAtom(int index)$/;"	f	class:OpenBabel::OBForceField
SetFixAtoms	include/openbabel/rotor.h	/^    void SetFixAtoms(OBBitVec &fix)$/;"	f	class:OpenBabel::OBRotorList
SetFixedAtoms	include/openbabel/rotor.h	/^    void SetFixedAtoms(OBBitVec &bv) { _fixedatoms = bv; }$/;"	f	class:OpenBabel::OBRotor
SetFixedBonds	include/openbabel/conformersearch.h	/^      void SetFixedBonds(const OBBitVec &fixedBonds) { m_fixedBonds = fixedBonds; }$/;"	f	class:OpenBabel::OBConformerSearch
SetFixedBonds	include/openbabel/rotor.h	/^    void SetFixedBonds(OBBitVec &bv)$/;"	f	class:OpenBabel::OBRotor
SetFixedBonds	include/openbabel/rotor.h	/^    void SetFixedBonds(OBBitVec &fix)$/;"	f	class:OpenBabel::OBRotorList
SetFlag	include/openbabel/atom.h	/^      void SetFlag(int flag)  { _flags |= flag;   }$/;"	f	class:OpenBabel::OBAtom
SetFlag	include/openbabel/bond.h	/^      void SetFlag(int flag) { _flags |= flag; }$/;"	f	class:OpenBabel::OBBond
SetFlag	include/openbabel/mol.h	/^    void  SetFlag(int flag)    { _flags |= flag; }$/;"	f	class:OpenBabel::OBMol
SetFlags	include/openbabel/fingerprint.h	/^  virtual void SetFlags(unsigned int){}$/;"	f	class:OpenBabel::OBFingerprint
SetFlags	include/openbabel/mol.h	/^    void   SetFlags(int flags)       { _flags = flags;              }$/;"	f	class:OpenBabel::OBMol
SetFlags	src/fingerprints/finger2.cpp	/^  virtual void SetFlags(unsigned int f){ _flags=f; }$/;"	f	class:OpenBabel::fingerprint2
SetFlags	src/fingerprints/fingerecfp.cpp	/^  virtual void SetFlags(unsigned int f){ _flags=f; }$/;"	f	class:OpenBabel::fingerprintECFP
SetFontFamily	include/openbabel/depict/asciipainter.h	/^      void SetFontFamily(const std::string &fontFamily) {}$/;"	f	class:OpenBabel::ASCIIPainter
SetFontFamily	include/openbabel/depict/cairopainter.h	/^      void SetFontFamily(const std::string &fontFamily) {} \/\/ FIXME$/;"	f	class:OpenBabel::CairoPainter
SetFontFamily	include/openbabel/depict/commandpainter.h	/^      void SetFontFamily(const std::string &fontFamily) {} \/\/ FIXME$/;"	f	class:OpenBabel::CommandPainter
SetFontFamily	src/depict/depict.cpp	/^  void OBDepict::SetFontFamily(const std::string &family)$/;"	f	class:OpenBabel::OBDepict
SetFontFamily	src/depict/svgpainter.cpp	/^  void SVGPainter::SetFontFamily(const std::string &fontFamily)$/;"	f	class:OpenBabel::SVGPainter
SetFontSize	src/depict/asciipainter.cpp	/^  void ASCIIPainter::SetFontSize(int pointSize)$/;"	f	class:OpenBabel::ASCIIPainter
SetFontSize	src/depict/cairopainter.cpp	/^  void CairoPainter::SetFontSize(int pointSize)$/;"	f	class:OpenBabel::CairoPainter
SetFontSize	src/depict/commandpainter.cpp	/^  void CommandPainter::SetFontSize(int pointSize)$/;"	f	class:OpenBabel::CommandPainter
SetFontSize	src/depict/depict.cpp	/^  void OBDepict::SetFontSize(int pointSize, bool subscript)$/;"	f	class:OpenBabel::OBDepict
SetFontSize	src/depict/svgpainter.cpp	/^  void SVGPainter::SetFontSize(int pointSize)$/;"	f	class:OpenBabel::SVGPainter
SetForbiddenEdgeMask	src/formats/libinchi/ichirvr1.c	/^void SetForbiddenEdgeMask( BN_STRUCT *pBNS, EDGE_LIST *pEdges, int forbidden_edge_mask  )$/;"	f
SetForbiddenEdges	src/formats/libinchi/ichi_bns.c	/^int SetForbiddenEdges( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, int forbidden_mask )$/;"	f
SetForces	include/openbabel/generic.h	/^    void SetForces(std::vector< std::vector< vector3 > > vf) {_vForces = vf;}$/;"	f	class:OpenBabel::OBConformerData
SetFormalCharge	include/openbabel/atom.h	/^      void SetFormalCharge(int fcharge)   { _fcharge = fcharge; }$/;"	f	class:OpenBabel::OBAtom
SetFormalCharges	include/openbabel/forcefield.h	/^    virtual bool SetFormalCharges() { return false; }$/;"	f	class:OpenBabel::OBForceField
SetFormalCharges	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::SetFormalCharges()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
SetFormula	src/mol.cpp	/^  void OBMol::SetFormula(string molFormula)$/;"	f	class:OpenBabel::OBMol
SetFromType	src/data.cpp	/^  bool OBTypeTable::SetFromType(const char* from)$/;"	f	class:OpenBabel::OBTypeTable
SetGradient	include/openbabel/forcefield.h	/^    void SetGradient(double *grad, int idx)$/;"	f	class:OpenBabel::OBForceField
SetGridType	include/openbabel/grid.h	/^    void SetGridType(int gridtype)$/;"	f	class:OpenBabel::OBProxGrid
SetHMName	include/openbabel/math/spacegroup.h	/^        void SetHMName(const char *name)$/;"	f	class:OpenBabel::SpaceGroup
SetHMName	src/math/spacegroup.cpp	/^  void SpaceGroup::SetHMName(const std::string &name)$/;"	f	class:OpenBabel::SpaceGroup
SetHOMO	include/openbabel/generic.h	/^    void SetHOMO(int alpha, int beta = 0)$/;"	f	class:OpenBabel::OBOrbitalData
SetHalfStereoBondIllDefPariy	src/formats/libinchi/ichicans.c	/^int SetHalfStereoBondIllDefPariy( sp_ATOM *at, int jn, \/* atom number*\/ int k1 \/* stereo bond number*\/, int new_parity )$/;"	f
SetHallName	include/openbabel/math/spacegroup.h	/^        void SetHallName(const char *name)$/;"	f	class:OpenBabel::SpaceGroup
SetHallName	include/openbabel/math/spacegroup.h	/^        void SetHallName(const std::string &name)$/;"	f	class:OpenBabel::SpaceGroup
SetHash	include/openbabel/bond.h	/^      void SetHash() { SetFlag(Hash); }$/;"	f	class:OpenBabel::OBBond
SetHeight	include/openbabel/depict/cairopainter.h	/^      void SetHeight(int height) {m_height=height;}$/;"	f	class:OpenBabel::CairoPainter
SetHetAtom	src/residue.cpp	/^  void OBResidue::SetHetAtom(OBAtom *atom, bool hetatm)$/;"	f	class:OpenBabel::OBResidue
SetHiT	include/openbabel/kinetics.h	/^  void SetHiT(double val){HiT=val;}$/;"	f	class:OpenBabel::OBNasaThermoData
SetHilderbrandt	src/formats/cacaoformat.cpp	/^  void CacaoFormat::SetHilderbrandt(OBMol &mol,vector<OBInternalCoord*> &vit)$/;"	f	class:OpenBabel::CacaoFormat
SetHillFormFromInChI	src/formats/libinchi/ichiread.c	/^int SetHillFormFromInChI(InpInChI *OneInput)$/;"	f
SetHyb	include/openbabel/atom.h	/^      void SetHyb(int hyb)    { _hyb = hyb; }$/;"	f	class:OpenBabel::OBAtom
SetHybAndGeom	src/atom.cpp	/^  bool OBAtom::SetHybAndGeom(int hyb)$/;"	f	class:OpenBabel::OBAtom
SetHybridizationPerceived	include/openbabel/mol.h	/^    void   SetHybridizationPerceived() { SetFlag(OB_HYBRID_MOL);    }$/;"	f	class:OpenBabel::OBMol
SetHydrogensAdded	include/openbabel/mol.h	/^    void   SetHydrogensAdded()       { SetFlag(OB_H_ADDED_MOL);     }$/;"	f	class:OpenBabel::OBMol
SetId	include/openbabel/atom.h	/^      void SetId(unsigned long id) { _id = id; }$/;"	f	class:OpenBabel::OBAtom
SetId	include/openbabel/bond.h	/^      void SetId(unsigned long id) { _id = id; }$/;"	f	class:OpenBabel::OBBond
SetId	include/openbabel/math/spacegroup.h	/^        void SetId(unsigned n)$/;"	f	class:OpenBabel::SpaceGroup
SetIdx	include/openbabel/atom.h	/^      void SetIdx(int idx)    { _idx = idx; _cidx = (idx-1)*3; }$/;"	f	class:OpenBabel::OBAtom
SetIdx	include/openbabel/bond.h	/^      void SetIdx(int idx)        {          _idx = idx;        }$/;"	f	class:OpenBabel::OBBond
SetIdx	include/openbabel/generic.h	/^    void SetIdx(int idx)       {        _idx = idx;      }$/;"	f	class:OpenBabel::OBExternalBond
SetIdx	include/openbabel/rotor.h	/^    void SetIdx(int idx)$/;"	f	class:OpenBabel::OBRotor
SetIdx	src/residue.cpp	/^  void OBResidue::SetIdx(unsigned int idx)$/;"	f	class:OpenBabel::OBResidue
SetIgnoreAtom	src/forcefield.cpp	/^  void OBForceField::SetIgnoreAtom(int index)$/;"	f	class:OpenBabel::OBForceField
SetImplicitValence	include/openbabel/atom.h	/^      void SetImplicitValence(int val)    { _impval = (char)val; }$/;"	f	class:OpenBabel::OBAtom
SetImplicitValencePerceived	include/openbabel/mol.h	/^    void   SetImplicitValencePerceived(){ SetFlag(OB_IMPVAL_MOL);   }$/;"	f	class:OpenBabel::OBMol
SetInAndOutFormats	src/obconversion.cpp	/^  bool OBConversion::SetInAndOutFormats(OBFormat* pIn, OBFormat* pOut, bool inzip, bool outzip)$/;"	f	class:OpenBabel::OBConversion
SetInAndOutFormats	src/obconversion.cpp	/^  bool OBConversion::SetInAndOutFormats(const char* inID, const char* outID, bool inzip, bool outzip)$/;"	f	class:OpenBabel::OBConversion
SetInFormat	src/obconversion.cpp	/^  bool OBConversion::SetInFormat(OBFormat* pIn, bool gzip)$/;"	f	class:OpenBabel::OBConversion
SetInFormat	src/obconversion.cpp	/^  bool OBConversion::SetInFormat(const char* inID, bool gzip)$/;"	f	class:OpenBabel::OBConversion
SetInRing	include/openbabel/atom.h	/^      void SetInRing()         { SetFlag(OB_RING_ATOM); }$/;"	f	class:OpenBabel::OBAtom
SetInRing	include/openbabel/bond.h	/^      void SetInRing(bool set=true) { if(set)SetFlag(OB_RING_BOND); else UnsetFlag(OB_RING_BOND);}$/;"	f	class:OpenBabel::OBBond
SetInStream	src/obconversion.cpp	/^  void OBConversion::SetInStream(std::istream* pIn, bool takeOwnership)$/;"	f	class:OpenBabel::OBConversion
SetIndex	include/openbabel/depict/cairopainter.h	/^      void SetIndex(int index) {m_index=index;}$/;"	f	class:OpenBabel::CairoPainter
SetInitCapFlowToCurrent	src/formats/libinchi/ichi_bns.c	/^int SetInitCapFlowToCurrent( BN_STRUCT *pBNS )$/;"	f
SetInitialFocus	src/GUI/OBGUI.cpp	/^void OBGUIFrame::SetInitialFocus()$/;"	f	class:OBGUIFrame
SetInitialRanks2	src/formats/libinchi/ichican2.c	/^int SetInitialRanks2( int num_atoms, ATOM_INVARIANT2* pAtomInvariant2, AT_RANK *nNewRank, AT_RANK *nAtomNumber )$/;"	f
SetInsertionCode	src/residue.cpp	/^  void    OBResidue::SetInsertionCode(const char insertioncode) {$/;"	f	class:OpenBabel::OBResidue
SetInternalCoord	src/mol.cpp	/^  void OBMol::SetInternalCoord(std::vector<OBInternalCoord*> int_coord) {$/;"	f	class:OpenBabel::OBMol
SetIsPatternStructure	include/openbabel/mol.h	/^    void   SetIsPatternStructure()       { SetFlag(OB_PATTERN_STRUCTURE);}$/;"	f	class:OpenBabel::OBMol
SetIsotope	src/atom.cpp	/^  void OBAtom::SetIsotope(unsigned int iso)$/;"	f	class:OpenBabel::OBAtom
SetItr	src/fingerprints/finger2.cpp	/^	typedef std::set<std::vector<int> >::iterator SetItr;$/;"	t	class:OpenBabel::fingerprint2	file:
SetKDouble	src/bond.cpp	/^  void OBBond::SetKDouble()$/;"	f	class:OpenBabel::OBBond
SetKSingle	src/bond.cpp	/^  void OBBond::SetKSingle()$/;"	f	class:OpenBabel::OBBond
SetKTriple	src/bond.cpp	/^  void OBBond::SetKTriple()$/;"	f	class:OpenBabel::OBBond
SetKeepRings	include/openbabel/builder.h	/^      void SetKeepRings() { _keeprings = true; }$/;"	f	class:OpenBabel::OBBuilder
SetKekulePerceived	include/openbabel/mol.h	/^    void   SetKekulePerceived()      { SetFlag(OB_KEKULE_MOL);      }$/;"	f	class:OpenBabel::OBMol
SetKnownStereoBondParities	src/formats/libinchi/ichicans.c	/^int SetKnownStereoBondParities( sp_ATOM *at, int num_atoms, const AT_RANK *nCanonRank,$/;"	f
SetKnownStereoCenterParities	src/formats/libinchi/ichicans.c	/^int SetKnownStereoCenterParities( sp_ATOM *at, int num_atoms, const AT_RANK *nCanonRank,$/;"	f
SetLSSRPerceived	include/openbabel/mol.h	/^    void   SetLSSRPerceived()        { SetFlag(OB_LSSR_MOL);        }$/;"	f	class:OpenBabel::OBMol
SetLast	include/openbabel/obconversion.h	/^      void     SetLast(bool b){SetOneObjectOnly(b);}\/\/\/< @brief Synonym for SetOneObjectOnly()$/;"	f	class:OpenBabel::OBConversion
SetLatticeType	include/openbabel/generic.h	/^    void SetLatticeType(const LatticeType lt) { _lattice = lt; }$/;"	f	class:OpenBabel::OBUnitCell
SetLength	src/bond.cpp	/^  void OBBond::SetLength(OBAtom *fixed, double length)$/;"	f	class:OpenBabel::OBBond
SetLength	src/bond.cpp	/^  void OBBond::SetLength(double length)$/;"	f	class:OpenBabel::OBBond
SetLimits	src/grid.cpp	/^  void OBFloatGrid::SetLimits(const double origin[3], const double v1[3], const double v2[3],$/;"	f	class:OpenBabel::OBFloatGrid
SetLimits	src/grid.cpp	/^  void OBFloatGrid::SetLimits(const vector3& origin, const vector3& x,$/;"	f	class:OpenBabel::OBFloatGrid
SetLimits	src/griddata.cpp	/^  void OBGridData::SetLimits(const double origin [3], const double x[3],$/;"	f	class:OpenBabel::OBGridData
SetLimits	src/griddata.cpp	/^  void OBGridData::SetLimits(const vector3 &origin, const vector3 &x,$/;"	f	class:OpenBabel::OBGridData
SetLineSearchType	include/openbabel/forcefield.h	/^    void SetLineSearchType(int type)$/;"	f	class:OpenBabel::OBForceField
SetLoRate	include/openbabel/kinetics.h	/^  void SetLoRate(rate_type n, const double val)$/;"	f	class:OpenBabel::OBRateData
SetLoT	include/openbabel/kinetics.h	/^  void SetLoT(double val){LoT=val;}$/;"	f	class:OpenBabel::OBNasaThermoData
SetLocalOptRate	include/openbabel/conformersearch.h	/^      int  SetLocalOptRate() {return local_opt_rate;}$/;"	f	class:OpenBabel::OBConformerSearch
SetLocalOptRate	include/openbabel/conformersearch.h	/^      void SetLocalOptRate (int value) {local_opt_rate = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetLocale	src/locale.cpp	/^  void OBLocale::SetLocale()$/;"	f	class:OpenBabel::OBLocale
SetLogFile	src/forcefield.cpp	/^  bool OBForceField::SetLogFile(ostream* pos)$/;"	f	class:OpenBabel::OBForceField
SetLogLevel	src/forcefield.cpp	/^  bool OBForceField::SetLogLevel(int level)$/;"	f	class:OpenBabel::OBForceField
SetLogStream	include/openbabel/conformersearch.h	/^      void SetLogStream  (std::ostream *sptr) {m_logstream = sptr;}$/;"	f	class:OpenBabel::OBConformerSearch
SetLowerBounds	src/distgeom.cpp	/^    void SetLowerBounds(int i, int j, float value)$/;"	f	class:OpenBabel::DistanceGeometryPrivate
SetLowerBounds	src/distgeom.cpp	/^  void OBDistanceGeometry::SetLowerBounds()$/;"	f	class:OpenBabel::OBDistanceGeometry
SetMM2Types	src/forcefields/forcefieldmm2.cpp	/^  bool OBForceFieldMM2::SetMM2Types()$/;"	f	class:OpenBabel::OBForceFieldMM2
SetMM3Type	src/formats/tinkerformat.cpp	/^  int SetMM3Type(OBAtom *atom)$/;"	f	namespace:OpenBabel
SetMaxLogEntries	include/openbabel/oberror.h	/^      void SetMaxLogEntries(unsigned int max) { _maxEntries = max; }$/;"	f	class:OpenBabel::OBMessageHandler
SetMethod	src/math/align.cpp	/^  void OBAlign::SetMethod(OBAlign::AlignMethod method) {$/;"	f	class:OpenBabel::OBAlign
SetMidT	include/openbabel/kinetics.h	/^  void SetMidT(double val){MidT=val;}$/;"	f	class:OpenBabel::OBNasaThermoData
SetMoreFilesToCome	src/obconversion.cpp	/^  void OBConversion::SetMoreFilesToCome()$/;"	f	class:OpenBabel::OBConversion
SetMutability	include/openbabel/conformersearch.h	/^      void SetMutability(int mutability) { m_mutability = mutability; }$/;"	f	class:OpenBabel::OBConformerSearch
SetName	src/residue.cpp	/^  void OBResidue::SetName(const string &name)$/;"	f	class:OpenBabel::OBResidue
SetNbNiches	include/openbabel/conformersearch.h	/^      void SetNbNiches (int value) {nb_niches = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetNegativeStereo	include/openbabel/atom.h	/^      void SetNegativeStereo() { SetFlag(OB_NEG_CHIRAL_ATOM|OB_CHIRAL_ATOM); }$/;"	f	class:OpenBabel::OBAtom
SetNewRanksFromNeighLists	src/formats/libinchi/ichimap2.c	/^int SetNewRanksFromNeighLists( int num_atoms, NEIGH_LIST *NeighList, AT_RANK *nRank, AT_RANK *nNewRank,$/;"	f
SetNewRanksFromNeighLists3	src/formats/libinchi/ichimap2.c	/^int SetNewRanksFromNeighLists3( int num_atoms, NEIGH_LIST *NeighList, AT_RANK *nRank,$/;"	f
SetNewRanksFromNeighLists4	src/formats/libinchi/ichimap2.c	/^int SetNewRanksFromNeighLists4( int num_atoms, NEIGH_LIST *NeighList, AT_RANK *nRank,$/;"	f
SetNicheMating	include/openbabel/conformersearch.h	/^      void SetNicheMating (double value) {niche_mating = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetNicheRadius	include/openbabel/conformersearch.h	/^      void SetNicheRadius (int value) {niche_radius = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetNormalization	src/spectrophore.cpp	/^OBSpectrophore::SetNormalization(const OBSpectrophore::NormalizationOption n)$/;"	f	class:OpenBabel::OBSpectrophore
SetNum	src/residue.cpp	/^  void OBResidue::SetNum(const string resnum)$/;"	f	class:OpenBabel::OBResidue
SetNum	src/residue.cpp	/^  void OBResidue::SetNum(const unsigned int resnum)$/;"	f	class:OpenBabel::OBResidue
SetNumChildren	include/openbabel/conformersearch.h	/^      void SetNumChildren(int numChildren) { m_numChildren = numChildren; }$/;"	f	class:OpenBabel::OBConformerSearch
SetNumConformers	include/openbabel/conformersearch.h	/^      void SetNumConformers(int numConformers) { m_numConformers = numConformers; }$/;"	f	class:OpenBabel::OBConformerSearch
SetNumCoords	include/openbabel/rotor.h	/^    void SetNumCoords(int UNUSED(nc)) {}$/;"	f	class:OpenBabel::OBRotor
SetNumImplicitH	src/formats/libinchi/inchi_dll.c	/^void SetNumImplicitH(inp_ATOM* at, int num_atoms)$/;"	f
SetNumSymmetries	src/griddata.cpp	/^  void OBGridData::SetNumSymmetries( int s )$/;"	f	class:OpenBabel::OBGridData
SetNumberOfPoints	src/grid.cpp	/^  void OBFloatGrid::SetNumberOfPoints(int nx, int ny, int nz)$/;"	f	class:OpenBabel::OBFloatGrid
SetNumberOfPoints	src/griddata.cpp	/^  void OBGridData::SetNumberOfPoints( int nx, int ny, int nz )$/;"	f	class:OpenBabel::OBGridData
SetOffset	src/generic.cpp	/^  void OBUnitCell::SetOffset(const vector3 v1)$/;"	f	class:OpenBabel::OBUnitCell
SetOneObjectOnly	src/obconversion.cpp	/^  void OBConversion::SetOneObjectOnly(bool b)$/;"	f	class:OpenBabel::OBConversion
SetOneStereoBondIllDefParity	src/formats/libinchi/ichicans.c	/^int SetOneStereoBondIllDefParity( sp_ATOM *at, int jc, \/* atom number*\/ int k \/* stereo bond ord. number*\/, int new_parity )$/;"	f
SetOpenShell	include/openbabel/generic.h	/^    void SetOpenShell(bool openShell)$/;"	f	class:OpenBabel::OBOrbitalData
SetOption	src/depict/depict.cpp	/^  void OBDepict::SetOption(unsigned opts)$/;"	f	class:OpenBabel::OBDepict
SetOptions	src/GUI/optswx.cpp	/^int DynOptionswx::SetOptions(OpenBabel::OBConversion& Conv, OpenBabel::OBConversion::Option_type opttyp)$/;"	f	class:DynOptionswx
SetOptions	src/obconversion.cpp	/^  void OBConversion::SetOptions(const char* options, Option_type opttyp)$/;"	f	class:OpenBabel::OBConversion
SetOrigin	include/openbabel/base.h	/^    void SetOrigin(const DataOrigin s) { _source = s; }$/;"	f	class:OpenBabel::OBGenericData
SetOutFormat	src/obconversion.cpp	/^  bool OBConversion::SetOutFormat(OBFormat* pOut, bool gzip)$/;"	f	class:OpenBabel::OBConversion
SetOutFormat	src/obconversion.cpp	/^  bool OBConversion::SetOutFormat(const char* outID, bool gzip)$/;"	f	class:OpenBabel::OBConversion
SetOutStream	src/obconversion.cpp	/^  void OBConversion::SetOutStream(std::ostream* pOut, bool takeOwnership)$/;"	f	class:OpenBabel::OBConversion
SetOutputIndex	src/obconversion.cpp	/^  void OBConversion::SetOutputIndex(int indx)$/;"	f	class:OpenBabel::OBConversion
SetOutputLevel	include/openbabel/oberror.h	/^      void SetOutputLevel(const obMessageLevel level) { _outputLevel = level; }$/;"	f	class:OpenBabel::OBMessageHandler
SetOutputStream	include/openbabel/oberror.h	/^      void SetOutputStream(std::ostream *os) { _outputStream = os; }$/;"	f	class:OpenBabel::OBMessageHandler
SetParameterFile	include/openbabel/forcefield.h	/^    void SetParameterFile(const std::string &filename)$/;"	f	class:OpenBabel::OBForceField
SetParent	include/openbabel/atom.h	/^      void SetParent(OBMol *ptr)          { _parent=ptr; }$/;"	f	class:OpenBabel::OBAtom
SetParent	include/openbabel/bond.h	/^      void SetParent(OBMol *ptr)  {        _parent= ptr;        }$/;"	f	class:OpenBabel::OBBond
SetParent	include/openbabel/ring.h	/^    void   SetParent(OBMol *m)  {    _parent = m;    }$/;"	f	class:OpenBabel::OBRing
SetParent	src/formats/smilesformat.cpp	/^    void SetParent(OBAtom *a)$/;"	f	class:OpenBabel::OBCanSmiNode
SetPartialCharge	include/openbabel/atom.h	/^      void SetPartialCharge(double pcharge){ _pcharge = pcharge; }$/;"	f	class:OpenBabel::OBAtom
SetPartialCharges	include/openbabel/forcefield.h	/^    virtual bool SetPartialCharges() { return false; }$/;"	f	class:OpenBabel::OBForceField
SetPartialCharges	src/forcefields/forcefieldgaff.cpp	/^  bool OBForceFieldGaff::SetPartialCharges()$/;"	f	class:OpenBabel::OBForceFieldGaff
SetPartialCharges	src/forcefields/forcefieldghemical.cpp	/^  bool OBForceFieldGhemical::SetPartialCharges()$/;"	f	class:OpenBabel::OBForceFieldGhemical
SetPartialCharges	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::SetPartialCharges()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
SetPartialChargesPerceived	include/openbabel/mol.h	/^    void   SetPartialChargesPerceived(){ SetFlag(OB_PCHARGE_MOL);   }$/;"	f	class:OpenBabel::OBMol
SetPenColor	src/depict/asciipainter.cpp	/^  void ASCIIPainter::SetPenColor(const OBColor &color)$/;"	f	class:OpenBabel::ASCIIPainter
SetPenColor	src/depict/cairopainter.cpp	/^  void CairoPainter::SetPenColor(const OBColor &color)$/;"	f	class:OpenBabel::CairoPainter
SetPenColor	src/depict/commandpainter.cpp	/^  void CommandPainter::SetPenColor(const OBColor &color)$/;"	f	class:OpenBabel::CommandPainter
SetPenColor	src/depict/svgpainter.cpp	/^  void SVGPainter::SetPenColor(const OBColor &color)$/;"	f	class:OpenBabel::SVGPainter
SetPenWidth	src/depict/asciipainter.cpp	/^  void ASCIIPainter::SetPenWidth(double width)$/;"	f	class:OpenBabel::ASCIIPainter
SetPenWidth	src/depict/cairopainter.cpp	/^  void CairoPainter::SetPenWidth(double width)$/;"	f	class:OpenBabel::CairoPainter
SetPenWidth	src/depict/commandpainter.cpp	/^  void CommandPainter::SetPenWidth(double width)$/;"	f	class:OpenBabel::CommandPainter
SetPenWidth	src/depict/depict.cpp	/^  void OBDepict::SetPenWidth(double width)$/;"	f	class:OpenBabel::OBDepict
SetPenWidth	src/depict/svgpainter.cpp	/^  void SVGPainter::SetPenWidth(double width)$/;"	f	class:OpenBabel::SVGPainter
SetPhase	include/openbabel/kinetics.h	/^  void SetPhase(char ph){phase=ph;}$/;"	f	class:OpenBabel::OBNasaThermoData
SetPointGroup	include/openbabel/generic.h	/^    void SetPointGroup(std::string pg) { _pointGroup = pg; }$/;"	f	class:OpenBabel::OBSymmetryData
SetPositiveStereo	include/openbabel/atom.h	/^      void SetPositiveStereo() { SetFlag(OB_POS_CHIRAL_ATOM|OB_CHIRAL_ATOM); }$/;"	f	class:OpenBabel::OBAtom
SetProtonsAndXchgIsoH	src/formats/libinchi/ichiread.c	/^int SetProtonsAndXchgIsoH( int bInChI2Structure, int bReqSplitOutputInChI, int bReqProtonsForEachComponent,$/;"	f
SetQuiet	include/openbabel/rotor.h	/^    void SetQuiet() {$/;"	f	class:OpenBabel::OBRotorList
SetRadEndpoints	src/formats/libinchi/ichi_bns.c	/^int SetRadEndpoints( BN_STRUCT *pBNS, BN_DATA *pBD, BRS_MODE bRadSrchMode )$/;"	f
SetRadEndpoints2	src/formats/libinchi/ichi_bns.c	/^int SetRadEndpoints2( BN_STRUCT *pBNS, BN_DATA *pBD, BRS_MODE bRadSrchMode )$/;"	f
SetRangeOff	src/bitvec.cpp	/^  void OBBitVec::SetRangeOff(unsigned lo_bit_offset, unsigned hi_bit_offset)$/;"	f	class:OpenBabel::OBBitVec
SetRangeOn	src/bitvec.cpp	/^  void OBBitVec::SetRangeOn(unsigned lo_bit_offset, unsigned hi_bit_offset)$/;"	f	class:OpenBabel::OBBitVec
SetRate	include/openbabel/kinetics.h	/^  void SetRate(rate_type n, const double val)$/;"	f	class:OpenBabel::OBRateData
SetReadDirectory	include/openbabel/data.h	/^      void  SetReadDirectory(char *dir)            { _dir = dir;    }$/;"	f	class:OpenBabel::OBGlobalDataBase
SetRef	src/math/align.cpp	/^  void OBAlign::SetRef(const vector<vector3> &ref) {$/;"	f	class:OpenBabel::OBAlign
SetRefMol	src/math/align.cpp	/^  void OBAlign::SetRefMol(const OBMol &refmol) {$/;"	f	class:OpenBabel::OBAlign
SetResName	src/data.cpp	/^  bool OBResidueData::SetResName(const string &s)$/;"	f	class:OpenBabel::OBResidueData
SetResidue	include/openbabel/atom.h	/^      void SetResidue(OBResidue *res)     { _residue=res; }$/;"	f	class:OpenBabel::OBAtom
SetResidueInformation	src/chains.cpp	/^  void OBChainsParser::SetResidueInformation(OBMol &mol, bool nukeSingleResidue)$/;"	f	class:OpenBabel::OBChainsParser
SetResidueKeys	src/residue.cpp	/^  static void SetResidueKeys(const char   *residue,$/;"	f	namespace:OpenBabel
SetResolution	src/spectrophore.cpp	/^OBSpectrophore::SetResolution(const double r)$/;"	f	class:OpenBabel::OBSpectrophore
SetReversible	include/openbabel/reaction.h	/^  void SetReversible(bool b=true) {_reversible=b;}$/;"	f	class:OpenBabel::OBReaction
SetRingAtomsAndBondsPerceived	include/openbabel/mol.h	/^    void   SetRingAtomsAndBondsPerceived(){SetFlag(OB_RINGFLAGS_MOL);}$/;"	f	class:OpenBabel::OBMol
SetRingClosureStereo	src/formats/smilesformat.cpp	/^  char OBSmilesParser::SetRingClosureStereo(StereoRingBond rcstereo, OBBond* dbl_bond)$/;"	f	class:OpenBabel::OBSmilesParser
SetRingTypesPerceived	include/openbabel/mol.h	/^    void   SetRingTypesPerceived()   { SetFlag(OB_RINGTYPES_MOL);   }$/;"	f	class:OpenBabel::OBMol
SetRings	src/rotor.cpp	/^  void OBRotor::SetRings(OBBond *bond)$/;"	f	class:OpenBabel::OBRotor
SetRotAtoms	src/rotor.cpp	/^  bool OBRotorList::SetRotAtoms(OBMol &mol)$/;"	f	class:OpenBabel::OBRotorList
SetRotAtoms	src/rotor.cpp	/^  void OBRotor::SetRotAtoms(vector<int> &vi)$/;"	f	class:OpenBabel::OBRotor
SetRotAtomsByFix	src/rotor.cpp	/^  void OBRotorList::SetRotAtomsByFix(OBMol &mol)$/;"	f	class:OpenBabel::OBRotorList
SetRotatoryStrengthsLength	src/generic.cpp	/^void OBElectronicTransitionData::SetRotatoryStrengthsLength(const std::vector<double> & vRotatoryStrengthsLength)$/;"	f	class:OpenBabel::OBElectronicTransitionData
SetRotatoryStrengthsVelocity	src/generic.cpp	/^void OBElectronicTransitionData::SetRotatoryStrengthsVelocity(const std::vector<double> & vRotatoryStrengthsVelocity)$/;"	f	class:OpenBabel::OBElectronicTransitionData
SetRotor	src/rotor.cpp	/^  void OBRotor::SetRotor(double *c,int idx,int prev)$/;"	f	class:OpenBabel::OBRotor
SetRotorToAngle	src/obutil.cpp	/^  void SetRotorToAngle(double *c,vector<int> &tor,double ang,vector<int> &atoms)$/;"	f	namespace:OpenBabel
SetRotorToAngle	src/rotamer.cpp	/^  void SetRotorToAngle(double *c, OBAtom **ref,double ang,vector<int> atoms)$/;"	f	namespace:OpenBabel
SetRow	src/math/matrix3x3.cpp	/^  void matrix3x3::SetRow(int row, const vector3 &v)$/;"	f	class:OpenBabel::matrix3x3
SetSSSRPerceived	include/openbabel/mol.h	/^    void   SetSSSRPerceived()        { SetFlag(OB_SSSR_MOL);        }$/;"	f	class:OpenBabel::OBMol
SetScore	include/openbabel/conformersearch.h	/^      void SetScore(OBConformerScore *score)$/;"	f	class:OpenBabel::OBConformerSearch
SetSerialNum	src/residue.cpp	/^  void OBResidue::SetSerialNum(OBAtom *atom, unsigned int sernum)$/;"	f	class:OpenBabel::OBResidue
SetSharing	include/openbabel/conformersearch.h	/^      void SetSharing (bool value = true)  {use_sharing = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetSigmaSharing	include/openbabel/conformersearch.h	/^      void SetSigmaSharing (double value) {sigma_share = value;}$/;"	f	class:OpenBabel::OBConformerSearch
SetSource	include/openbabel/lineend.h	/^    void SetSource(std::istream* newsource)$/;"	f	class:OpenBabel::FilteringInputStreambuf
SetSpaceGroup	include/openbabel/generic.h	/^    void SetSpaceGroup(const SpaceGroup* sg) { _spaceGroup = sg; }$/;"	f	class:OpenBabel::OBUnitCell
SetSpaceGroup	include/openbabel/generic.h	/^    void SetSpaceGroup(const int sg) { _spaceGroup = SpaceGroup::GetSpaceGroup (sg); }$/;"	f	class:OpenBabel::OBUnitCell
SetSpaceGroup	include/openbabel/generic.h	/^    void SetSpaceGroup(const std::string sg) { _spaceGroup = SpaceGroup::GetSpaceGroup (sg);$/;"	f	class:OpenBabel::OBUnitCell
SetSpaceGroup	include/openbabel/generic.h	/^    void SetSpaceGroup(std::string sg) { _spaceGroup = sg; }$/;"	f	class:OpenBabel::OBSymmetryData
SetSpecified	include/openbabel/stereo/stereo.h	/^      void SetSpecified(bool specified) { m_specified = specified; }$/;"	f	class:OpenBabel::OBStereoBase
SetSpinMultiplicity	include/openbabel/atom.h	/^      void SetSpinMultiplicity(short spin){ _spinmultiplicity = spin; }$/;"	f	class:OpenBabel::OBAtom
SetSpinMultiplicityAssigned	include/openbabel/mol.h	/^    void   SetSpinMultiplicityAssigned(){ SetFlag(OB_ATOMSPIN_MOL);    }$/;"	f	class:OpenBabel::OBMol
SetStCapFlow	src/formats/libinchi/ichirvr1.c	/^void SetStCapFlow( BNS_VERTEX *vert_ficpoint, int *tot_st_flow, int *tot_st_cap, int cap, int flow )$/;"	f
SetStartAndEnd	src/obconversion.cpp	/^  bool OBConversion::SetStartAndEnd()$/;"	f	class:OpenBabel::OBConversion
SetStereo	src/spectrophore.cpp	/^OBSpectrophore::SetStereo(const OBSpectrophore::StereoOption stereo)$/;"	f	class:OpenBabel::OBSpectrophore
SetStereoBondTypeFor0DParity	src/formats/libinchi/ichirvr2.c	/^int SetStereoBondTypeFor0DParity( inp_ATOM *at, int i1, int m1 )$/;"	f
SetStereoBondTypesFrom0DStereo	src/formats/libinchi/ichirvr2.c	/^int SetStereoBondTypesFrom0DStereo( StrFromINChI *pStruct, INChI *pInChI)$/;"	f
SetTableSize	include/openbabel/depict/cairopainter.h	/^      void SetTableSize(int nrows, int ncols) {m_nrows=nrows; m_ncols=ncols;}$/;"	f	class:OpenBabel::CairoPainter
SetTarget	src/math/align.cpp	/^  void OBAlign::SetTarget(const vector<vector3> &target) {$/;"	f	class:OpenBabel::OBAlign
SetTargetMol	src/math/align.cpp	/^  void OBAlign::SetTargetMol(const OBMol &targetmol) {$/;"	f	class:OpenBabel::OBAlign
SetTautomericBonds	src/formats/libinchi/ichitaut.c	/^int SetTautomericBonds( inp_ATOM *at, int nNumBondPos, T_BONDPOS *BondPos )$/;"	f
SetText	include/openbabel/text.h	/^  void SetText(const std::string& text){ txt = text; }$/;"	f	class:OpenBabel::OBText
SetTimeout	include/openbabel/isomorphism.h	/^      void SetTimeout(unsigned int seconds) { m_timeout = seconds; }$/;"	f	class:OpenBabel::OBIsomorphismMapper
SetTitle	include/openbabel/depict/cairopainter.h	/^      void SetTitle(std::string title) {m_title=title;}$/;"	f	class:OpenBabel::CairoPainter
SetTitle	include/openbabel/reaction.h	/^  void SetTitle(const std::string& title) { _title=title; }$/;"	f	class:OpenBabel::OBReaction
SetTitle	src/mol.cpp	/^  void  OBMol::SetTitle(const char *title)$/;"	f	class:OpenBabel::OBMol
SetTitle	src/mol.cpp	/^  void  OBMol::SetTitle(std::string &title)$/;"	f	class:OpenBabel::OBMol
SetToAngle	include/openbabel/rotor.h	/^    inline void SetToAngle(double *coordinates, double setang)$/;"	f	class:OpenBabel::OBRotor
SetToType	src/data.cpp	/^  bool OBTypeTable::SetToType(const char* to)$/;"	f	class:OpenBabel::OBTypeTable
SetTorsion	src/mol.cpp	/^  void OBMol::SetTorsion(OBAtom *a,OBAtom *b,OBAtom *c, OBAtom *d, double ang)$/;"	f	class:OpenBabel::OBMol
SetTorsionValues	include/openbabel/rotor.h	/^    void SetTorsionValues(std::vector<double> &angles)$/;"	f	class:OpenBabel::OBRotor
SetTotalCharge	src/mol.cpp	/^  void OBMol::SetTotalCharge(int charge)$/;"	f	class:OpenBabel::OBMol
SetTotalSpinMultiplicity	src/mol.cpp	/^  void   OBMol::SetTotalSpinMultiplicity(unsigned int spin)$/;"	f	class:OpenBabel::OBMol
SetTransitionState	include/openbabel/reaction.h	/^  void SetTransitionState(const obsharedptr<OBMol> sp)$/;"	f	class:OpenBabel::OBReaction
SetTransparent	include/openbabel/depict/cairopainter.h	/^      void SetTransparent(bool tr) {m_transparent=tr;}$/;"	f	class:OpenBabel::CairoPainter
SetTroeParams	include/openbabel/kinetics.h	/^  void SetTroeParams(int n, const double val)$/;"	f	class:OpenBabel::OBRateData
SetType	include/openbabel/grid.h	/^    void    SetType(score_t type)     {      gridtype = type;  }$/;"	f	class:OpenBabel::OBScoreGrid
SetType	src/atom.cpp	/^  void OBAtom::SetType(const char *type)$/;"	f	class:OpenBabel::OBAtom
SetType	src/atom.cpp	/^  void OBAtom::SetType(const string &type)$/;"	f	class:OpenBabel::OBAtom
SetType	src/ring.cpp	/^  void OBRing::SetType(char *type)$/;"	f	class:OpenBabel::OBRing
SetType	src/ring.cpp	/^  void OBRing::SetType(std::string &type)$/;"	f	class:OpenBabel::OBRing
SetTypes	include/openbabel/forcefield.h	/^    virtual bool SetTypes() { return false; }$/;"	f	class:OpenBabel::OBForceField
SetTypes	src/forcefields/forcefieldgaff.cpp	/^  bool OBForceFieldGaff::SetTypes()$/;"	f	class:OpenBabel::OBForceFieldGaff
SetTypes	src/forcefields/forcefieldghemical.cpp	/^  bool OBForceFieldGhemical::SetTypes()$/;"	f	class:OpenBabel::OBForceFieldGhemical
SetTypes	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::SetTypes()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
SetTypes	src/forcefields/forcefielduff.cpp	/^  bool OBForceFieldUFF::SetTypes()$/;"	f	class:OpenBabel::OBForceFieldUFF
SetUnit	src/griddata.cpp	/^  void OBGridData::SetUnit( OBGridData::Unit u )$/;"	f	class:OpenBabel::OBGridData
SetUnrestricted	src/griddata.cpp	/^  void OBGridData::SetUnrestricted( bool u )$/;"	f	class:OpenBabel::OBGridData
SetUp	include/openbabel/bond.h	/^      void SetUp()          { SetFlag(OB_TORUP_BOND); UnsetFlag(OB_TORDOWN_BOND); }$/;"	f	class:OpenBabel::OBBond
SetUpSrm	src/formats/libinchi/ichirvr7.c	/^void SetUpSrm( SRM *pSrm )$/;"	f
SetUpdateFrequency	include/openbabel/forcefield.h	/^    void SetUpdateFrequency(int f)$/;"	f	class:OpenBabel::OBForceField
SetUpperBounds	src/distgeom.cpp	/^    void SetUpperBounds(int i, int j, float value)$/;"	f	class:OpenBabel::DistanceGeometryPrivate
SetUpperBounds	src/distgeom.cpp	/^  void OBDistanceGeometry::SetUpperBounds()$/;"	f	class:OpenBabel::OBDistanceGeometry
SetUseAtomForStereo	src/formats/libinchi/ichimap1.c	/^void SetUseAtomForStereo( S_CHAR *bAtomUsedForStereo, sp_ATOM *at, int num_atoms )$/;"	f
SetV	include/openbabel/generic.h	/^    void SetV(double V) { _V = V; }$/;"	f	class:OpenBabel::OBFreeGridPoint
SetVDWCutOff	include/openbabel/forcefield.h	/^    void SetVDWCutOff(double r)$/;"	f	class:OpenBabel::OBForceField
SetVals	include/openbabel/grid.h	/^    void SetVals(double *ptr)$/;"	f	class:OpenBabel::OBFloatGrid
SetVals	src/grid.cpp	/^  void OBFloatGrid::SetVals(const std::vector<double> & vals)$/;"	f	class:OpenBabel::OBFloatGrid
SetValue	include/openbabel/generic.h	/^    void    SetValue(const char *v)        {      _value = v;    }$/;"	f	class:OpenBabel::OBPairData
SetValue	include/openbabel/generic.h	/^    void    SetValue(const std::string &v) {      _value = v;    }$/;"	f	class:OpenBabel::OBPairData
SetValue	include/openbabel/generic.h	/^    void SetValue(const ValueT t)             { _value = t;     }$/;"	f	class:OpenBabel::OBPairTemplate
SetValue	include/openbabel/grid.h	/^    bool SetValue(int i, int j, int k, double val)$/;"	f	class:OpenBabel::OBFloatGrid
SetValue	src/griddata.cpp	/^  bool OBGridData::SetValue(int i, int j, int k, double val)$/;"	f	class:OpenBabel::OBGridData
SetValues	include/openbabel/molchrg.h	/^    void SetValues(double _a,double _b,double _c,double _q)$/;"	f	class:OpenBabel::GasteigerState
SetValues	src/griddata.cpp	/^  void OBGridData::SetValues( const std::vector< double >& v )$/;"	f	class:OpenBabel::OBGridData
SetVector	src/atom.cpp	/^  void OBAtom::SetVector()$/;"	f	class:OpenBabel::OBAtom
SetVector	src/atom.cpp	/^  void OBAtom::SetVector(const double v_x,const double v_y,const double v_z)$/;"	f	class:OpenBabel::OBAtom
SetVector	src/atom.cpp	/^  void OBAtom::SetVector(const vector3 &v)$/;"	f	class:OpenBabel::OBAtom
SetVelocities	include/openbabel/generic.h	/^    void SetVelocities(std::vector< std::vector< vector3 > > vv)$/;"	f	class:OpenBabel::OBConformerData
SetVerbose	include/openbabel/grid.h	/^    void    SetVerbose(bool v)        {      verbose = v;      }$/;"	f	class:OpenBabel::OBScoreGrid
SetWedge	include/openbabel/bond.h	/^      void SetWedge() { SetFlag(Wedge); }$/;"	f	class:OpenBabel::OBBond
SetWedgeAndHash	src/depict/depict.cpp	/^  void OBDepictPrivate::SetWedgeAndHash(OBMol* mol)$/;"	f	class:OpenBabel::OBDepictPrivate
SetWedgeOrHash	include/openbabel/bond.h	/^      void SetWedgeOrHash() { SetFlag(WedgeOrHash); }$/;"	f	class:OpenBabel::OBBond
SetWidth	include/openbabel/depict/cairopainter.h	/^      void SetWidth(int width) {m_width=width;}$/;"	f	class:OpenBabel::CairoPainter
SetX	include/openbabel/generic.h	/^    void SetX(double x) { _x = x; }$/;"	f	class:OpenBabel::OBFreeGridPoint
SetX	include/openbabel/math/vector3.h	/^    void SetX(const double inX)$/;"	f	class:OpenBabel::vector3
SetXAxis	src/grid.cpp	/^  void OBFloatGrid::SetXAxis(vector3 v)$/;"	f	class:OpenBabel::OBFloatGrid
SetY	include/openbabel/generic.h	/^    void SetY(double y) { _y = y; }$/;"	f	class:OpenBabel::OBFreeGridPoint
SetY	include/openbabel/math/vector3.h	/^    void SetY(const double inY)$/;"	f	class:OpenBabel::vector3
SetYAxis	src/grid.cpp	/^  void OBFloatGrid::SetYAxis(vector3 v)$/;"	f	class:OpenBabel::OBFloatGrid
SetZ	include/openbabel/generic.h	/^    void SetZ(double z) { _z = z; }$/;"	f	class:OpenBabel::OBFreeGridPoint
SetZ	include/openbabel/math/vector3.h	/^    void SetZ(const double inZ)$/;"	f	class:OpenBabel::vector3
SetZAxis	src/grid.cpp	/^  void OBFloatGrid::SetZAxis(vector3 v)$/;"	f	class:OpenBabel::OBFloatGrid
Setup	include/openbabel/grid.h	/^    virtual void   Setup(OBMol &) {}$/;"	f	class:OpenBabel::OBScoreGrid
Setup	include/openbabel/grid.h	/^    virtual void   Setup(OBMol &, std::vector<int> &){}$/;"	f	class:OpenBabel::OBScoreGrid
Setup	include/openbabel/grid.h	/^    virtual void   Setup(std::vector<int> &) {}$/;"	f	class:OpenBabel::OBScoreGrid
Setup	src/conformersearch.cpp	/^  bool OBConformerSearch::Setup(const OBMol &mol, int numConformers, int numChildren, int mutability, int convergence)$/;"	f	class:OpenBabel::OBConformerSearch
Setup	src/distgeom.cpp	/^  bool OBDistanceGeometry::Setup(const OBMol &mol, bool useCurrentGeometry)$/;"	f	class:OpenBabel::OBDistanceGeometry
Setup	src/forcefield.cpp	/^  bool OBForceField::Setup(OBMol &mol)$/;"	f	class:OpenBabel::OBForceField
Setup	src/forcefield.cpp	/^  bool OBForceField::Setup(OBMol &mol, OBFFConstraints &constraints)$/;"	f	class:OpenBabel::OBForceField
Setup	src/forcefield.cpp	/^  void OBFFConstraints::Setup(OBMol& mol)$/;"	f	class:OpenBabel::OBFFConstraints
Setup	src/forcefields/forcefieldmm2.cpp	/^  bool OBForceFieldMM2::Setup(OBMol &mol)$/;"	f	class:OpenBabel::OBForceFieldMM2
Setup	src/grid.cpp	/^  void OBProxGrid::Setup(OBMol &mol,OBMol &box,double cutoff,double res)$/;"	f	class:OpenBabel::OBProxGrid
Setup	src/grid.cpp	/^  void OBProxGrid::Setup(OBMol &mol,OBMol &box,double cutoff,vector<bool> &use,$/;"	f	class:OpenBabel::OBProxGrid
Setup	src/pointgroup.cpp	/^    bool                   Setup;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
Setup	src/pointgroup.cpp	/^  void OBPointGroup::Setup(OBMol *mol)$/;"	f	class:OpenBabel::OBPointGroup
Setup	src/rotamer.cpp	/^  void OBRotamerList::Setup(OBMol &mol,OBRotorList &rl)$/;"	f	class:OpenBabel::OBRotamerList
Setup	src/rotamer.cpp	/^  void OBRotamerList::Setup(OBMol &mol,unsigned char *ref,int nrotors)$/;"	f	class:OpenBabel::OBRotamerList
Setup	src/rotor.cpp	/^  bool OBRotorList::Setup(OBMol &mol, bool sampleRingBonds)$/;"	f	class:OpenBabel::OBRotorList
SetupAtomMatchTable	src/parsmart.cpp	/^  void OBSmartsMatcher::SetupAtomMatchTable(std::vector<std::vector<bool> > &ttab,$/;"	f	class:OpenBabel::OBSmartsMatcher
SetupCalculations	include/openbabel/forcefield.h	/^    virtual bool SetupCalculations() { return false; }$/;"	f	class:OpenBabel::OBForceField
SetupCalculations	src/forcefields/forcefieldgaff.cpp	/^  bool OBForceFieldGaff::SetupCalculations()$/;"	f	class:OpenBabel::OBForceFieldGaff
SetupCalculations	src/forcefields/forcefieldghemical.cpp	/^  bool OBForceFieldGhemical::SetupCalculations()$/;"	f	class:OpenBabel::OBForceFieldGhemical
SetupCalculations	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::SetupCalculations()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
SetupCalculations	src/forcefields/forcefielduff.cpp	/^  bool OBForceFieldUFF::SetupCalculations()$/;"	f	class:OpenBabel::OBForceFieldUFF
SetupElectrostatics	src/forcefields/forcefielduff.cpp	/^  bool OBForceFieldUFF::SetupElectrostatics()$/;"	f	class:OpenBabel::OBForceFieldUFF
SetupMol	src/chains.cpp	/^  void OBChainsParser::SetupMol(OBMol &mol)$/;"	f	class:OpenBabel::OBChainsParser
SetupPointers	include/openbabel/forcefield.h	/^    virtual bool SetupPointers() { return false; }$/;"	f	class:OpenBabel::OBForceField
SetupPointers	include/openbabel/forcefield.h	/^    virtual void SetupPointers()$/;"	f	class:OpenBabel::OBFFCalculation2
SetupPointers	include/openbabel/forcefield.h	/^    virtual void SetupPointers()$/;"	f	class:OpenBabel::OBFFCalculation3
SetupPointers	include/openbabel/forcefield.h	/^    void SetupPointers()$/;"	f	class:OpenBabel::OBFFCalculation4
SetupPointers	src/forcefields/forcefieldgaff.cpp	/^  bool OBForceFieldGaff::SetupPointers()$/;"	f	class:OpenBabel::OBForceFieldGaff
SetupPointers	src/forcefields/forcefieldghemical.cpp	/^  bool OBForceFieldGhemical::SetupPointers()$/;"	f	class:OpenBabel::OBForceFieldGhemical
SetupPointers	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::SetupPointers()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
SetupPointers	src/forcefields/forcefielduff.cpp	/^  bool OBForceFieldUFF::SetupPointers()$/;"	f	class:OpenBabel::OBForceFieldUFF
SetupReader	src/formats/xml/xml.cpp	/^  bool XMLConversion::SetupReader()$/;"	f	class:OpenBabel::XMLConversion
SetupRotMat	src/math/matrix3x3.cpp	/^  void matrix3x3::SetupRotMat(double phi,double theta,double psi)$/;"	f	class:OpenBabel::matrix3x3
SetupVDWCalculation	src/forcefields/forcefielduff.cpp	/^  bool OBForceFieldUFF::SetupVDWCalculation(OBAtom *a, OBAtom *b, OBFFVDWCalculationUFF &vdwcalc)$/;"	f	class:OpenBabel::OBForceFieldUFF
SetupWriter	src/formats/xml/xml.cpp	/^  bool XMLConversion::SetupWriter()$/;"	f	class:OpenBabel::XMLConversion
Sg	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
Shape	include/openbabel/stereo/stereo.h	/^    enum Shape {$/;"	g	struct:OpenBabel::OBStereo
Shape4	include/openbabel/stereo/stereo.h	/^      Shape4 = 3$/;"	e	enum:OpenBabel::OBStereo::Shape
ShapeU	include/openbabel/stereo/stereo.h	/^      ShapeU = 1,$/;"	e	enum:OpenBabel::OBStereo::Shape
ShapeZ	include/openbabel/stereo/stereo.h	/^      ShapeZ = 2,$/;"	e	enum:OpenBabel::OBStereo::Shape
ShelXFormat	src/formats/shelxformat.cpp	/^    ShelXFormat()$/;"	f	class:OpenBabel::ShelXFormat
ShelXFormat	src/formats/shelxformat.cpp	/^  class ShelXFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ShortenedPath	src/GUI/OBGUI.cpp	/^wxString OBGUIFrame::ShortenedPath(const wxString& path, const wxWindow& wnd, int wndwidth)$/;"	f	class:OBGUIFrame
Si	src/formats/smiley.h	/^    Na, Mg,                                                                                                 Al, Si,  P,  S, Cl, Ar,$/;"	e	enum:Smiley::Elements
Simple	include/openbabel/forcefield.h	/^      Simple, Newton2Num$/;"	e	enum:OpenBabel::LineSearchType::__anon42
SimpleAddAcidicProtons	src/formats/libinchi/ichi_bns.c	/^int SimpleAddAcidicProtons( inp_ATOM *at, int num_atoms, BN_AATG *pAATG, int num2add )$/;"	f
SimpleAlign	src/math/align.cpp	/^  void OBAlign::SimpleAlign(const Eigen::MatrixXd &mtarget)$/;"	f	class:OpenBabel::OBAlign
SimpleRemoveAcidicProtons	src/formats/libinchi/ichi_bns.c	/^int SimpleRemoveAcidicProtons( inp_ATOM *at, int num_atoms, BN_AATG *pAATG, int num2remove )$/;"	f
SimpleRemoveHplusNPO	src/formats/libinchi/ichi_bns.c	/^int SimpleRemoveHplusNPO( inp_ATOM *at, int num_atoms, int nAtTypeTotals[], T_GROUP_INFO *t_group_info )$/;"	f
Single	include/openbabel/parsmart.h	/^    enum MatchType {All, Single, AllUnique};$/;"	e	enum:OpenBabel::OBSmartsPattern::MatchType
Single	src/tautomer.cpp	/^      Single,$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
Size	include/openbabel/ring.h	/^    size_t    Size()     const  {    return(_path.size());  }$/;"	f	class:OpenBabel::OBRing
Size	include/openbabel/rotor.h	/^    size_t Size()$/;"	f	class:OpenBabel::OBRotor
Size	include/openbabel/rotor.h	/^    size_t Size()$/;"	f	class:OpenBabel::OBRotorList
Size	src/forcefield.cpp	/^  int OBFFConstraints::Size() const$/;"	f	class:OpenBabel::OBFFConstraints
Size	src/formats/smilesformat.cpp	/^    int Size()$/;"	f	class:OpenBabel::OBCanSmiNode
Sizers	src/GUI/optswx.h	/^	std::vector<wxSizer*> Sizers;$/;"	m	class:DynOptionswx
SkipObjects	include/openbabel/format.h	/^    virtual int SkipObjects(int \/*n*\/, OBConversion* \/*pConv*\/)$/;"	f	class:OpenBabel::OBFormat
SkipObjects	include/openbabel/xml.h	/^      virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::XMLBaseFormat
SkipObjects	src/formats/MCDLformat.cpp	/^  virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::MCDLFormat
SkipObjects	src/formats/acrformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::ACRFormat
SkipObjects	src/formats/adfformat.cpp	/^    virtual int SkipObjects( int n, OBConversion* pConv ) { return 0; }$/;"	f	class:OpenBabel::OBT41Format
SkipObjects	src/formats/castepformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::CASTEPFormat
SkipObjects	src/formats/exampleformat.cpp	/^	virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::XXXFormat
SkipObjects	src/formats/gausscubeformat.cpp	/^    virtual int SkipObjects( int n, OpenBabel::OBConversion* pConv ) { return 0; }$/;"	f	class:OpenBabel::OBGaussianCubeFormat
SkipObjects	src/formats/groformat.cpp	/^  virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::GROFormat
SkipObjects	src/formats/gulpformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::GULPFormat
SkipObjects	src/formats/inchiformat.cpp	/^int InChIFormat::SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::InChIFormat
SkipObjects	src/formats/lpmdformat.cpp	/^  virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::LpmdFormat
SkipObjects	src/formats/mdffformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::MDFFFormat
SkipObjects	src/formats/mdlformat.cpp	/^      virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::MDLFormat
SkipObjects	src/formats/mmcifformat.cpp	/^  int mmCIFFormat::SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::mmCIFFormat
SkipObjects	src/formats/mol2format.cpp	/^  int MOL2Format::SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::MOL2Format
SkipObjects	src/formats/moldenformat.cpp	/^    virtual int SkipObjects( int n, OpenBabel::OBConversion* pConv ) { return 0; }$/;"	f	class:OpenBabel::OBMoldenFormat
SkipObjects	src/formats/msmsformat.cpp	/^    virtual int SkipObjects( int n, OpenBabel::OBConversion* pConv ) { return 0; }$/;"	f	class:OpenBabel::OBMSMSFormat
SkipObjects	src/formats/opendxformat.cpp	/^    virtual int SkipObjects( int n, OpenBabel::OBConversion* pConv ) { return 0; }$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
SkipObjects	src/formats/pdbformat.cpp	/^ 	int PDBFormat::SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::PDBFormat
SkipObjects	src/formats/pdbqtformat.cpp	/^  int PDBQTFormat::SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::PDBQTFormat
SkipObjects	src/formats/pointcloudformat.cpp	/^      virtual int SkipObjects( int n, OpenBabel::OBConversion* pConv ) { return 0; }$/;"	f	class:OpenBabel::PointCloudFormat
SkipObjects	src/formats/pqrformat.cpp	/^  int PQRFormat::SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::PQRFormat
SkipObjects	src/formats/pwscfformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::PWscfFormat
SkipObjects	src/formats/siestaformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::SIESTAFormat
SkipObjects	src/formats/smilesformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::SMIBaseFormat
SkipObjects	src/formats/stlformat.cpp	/^      virtual int SkipObjects( int n, OpenBabel::OBConversion* pConv ) { return 0; }$/;"	f	class:OpenBabel::STLFormat
SkipObjects	src/formats/vaspformat.cpp	/^    virtual int SkipObjects(int n, OBConversion* pConv)$/;"	f	class:OpenBabel::VASPFormat
SkipXML	src/formats/xml/xml.cpp	/^  int XMLConversion::SkipXML(const char* ctag)$/;"	f	class:OpenBabel::XMLConversion
SkippedMolecules	include/openbabel/obconversion.h	/^      bool      SkippedMolecules;    \/\/\/ skip molecules using -f and -l$/;"	m	class:OpenBabel::OBConversion
Sleep	src/dlhandler_win32.cpp	/^void DLHandler::Sleep(int n)$/;"	f	class:DLHandler
Sm	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
SmallestBondAngle	src/atom.cpp	/^  double	  OBAtom::SmallestBondAngle()$/;"	f	class:OpenBabel::OBAtom
Smarts	src/formats/smiley.h	/^    Smarts() : chiral(false) {}$/;"	f	struct:Smiley::Smarts
Smarts	src/formats/smiley.h	/^  struct Smarts$/;"	s	namespace:Smiley
SmartsAtom	src/formats/smiley.h	/^    SmartsAtom() : expr(0), atomClass(0), chiral(0) {}$/;"	f	struct:Smiley::SmartsAtom
SmartsAtom	src/formats/smiley.h	/^    SmartsAtom(SmartsAtomExpr *expr_, int ac, bool chrl)$/;"	f	struct:Smiley::SmartsAtom
SmartsAtom	src/formats/smiley.h	/^  struct SmartsAtom$/;"	s	namespace:Smiley
SmartsAtomExpr	src/formats/smiley.h	/^    SmartsAtomExpr(int typ) : type(typ) {}$/;"	f	struct:Smiley::SmartsAtomExpr
SmartsAtomExpr	src/formats/smiley.h	/^  struct SmartsAtomExpr$/;"	s	namespace:Smiley
SmartsAtomExprType	src/formats/smiley.h	/^  enum SmartsAtomExprType$/;"	g	namespace:Smiley
SmartsBond	src/formats/smiley.h	/^    SmartsBond() : source(0), target(0), grow(false) {}$/;"	f	struct:Smiley::SmartsBond
SmartsBond	src/formats/smiley.h	/^    SmartsBond(int src, int trg, bool grw = false)$/;"	f	struct:Smiley::SmartsBond
SmartsBond	src/formats/smiley.h	/^  struct SmartsBond$/;"	s	namespace:Smiley
SmartsBondExpr	src/formats/smiley.h	/^    SmartsBondExpr(int typ) : type(typ) {}$/;"	f	struct:Smiley::SmartsBondExpr
SmartsBondExpr	src/formats/smiley.h	/^  struct SmartsBondExpr$/;"	s	namespace:Smiley
SmartsBondExprType	src/formats/smiley.h	/^  enum SmartsBondExprType$/;"	g	namespace:Smiley
SmartsDescriptor	src/descriptors/smartsdescriptors.cpp	/^    SmartsDescriptor(const char* ID, const char* smarts, const char* descr)$/;"	f	class:OpenBabel::SmartsDescriptor
SmartsDescriptor	src/descriptors/smartsdescriptors.cpp	/^  class SmartsDescriptor : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
SmartsFilter	src/descriptors/filters.cpp	/^  SmartsFilter(const char* ID) : OBDescriptor(ID){};$/;"	f	class:OpenBabel::SmartsFilter
SmartsFilter	src/descriptors/filters.cpp	/^class SmartsFilter : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
SmartsImplicitRef	src/parsmart.cpp	/^  const int SmartsImplicitRef = -9999; \/\/ Used as a placeholder when recording atom nbrs for chiral atoms$/;"	m	namespace:OpenBabel	file:
SmartsLexReplace	src/parsmart.cpp	/^  void SmartsLexReplace(std::string &s,std::vector<std::pair<std::string,std::string> > &vlex)$/;"	f	namespace:OpenBabel
SmartsLogicalOpType	src/formats/smiley.h	/^  enum SmartsLogicalOpType$/;"	g	namespace:Smiley
SmartsMode	src/formats/smiley.h	/^        SmartsMode$/;"	e	enum:Smiley::Parser::Mode
SmartsTable	include/openbabel/alias.h	/^  typedef std::vector< std::pair<std::string, obsharedptr<OBSmartsPattern> > > SmartsTable;$/;"	t	class:OpenBabel::AliasData
SmiReactFormat	src/formats/rsmiformat.cpp	/^    SmiReactFormat()$/;"	f	class:OpenBabel::SmiReactFormat
SmiReactFormat	src/formats/rsmiformat.cpp	/^  class SmiReactFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
SmiToMol	src/formats/smilesformat.cpp	/^  bool OBSmilesParser::SmiToMol(OBMol &mol,const string &s)$/;"	f	class:OpenBabel::OBSmilesParser
SmilesMode	src/formats/smiley.h	/^        SmilesMode,$/;"	e	enum:Smiley::Parser::Mode
Smiley	src/formats/smiley.h	/^namespace Smiley {$/;"	n
SmileyFormat	src/formats/smileyformat.cpp	/^      SmileyFormat()$/;"	f	class:OpenBabel::SmileyFormat
SmileyFormat	src/formats/smileyformat.cpp	/^  class SmileyFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Sn	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
SolveCubic	src/obutil.cpp	/^  int SolveCubic(double A,double B,double C,double D)$/;"	f	namespace:OpenBabel
SolveLinear	src/obutil.cpp	/^  int SolveLinear(double A,double B)$/;"	f	namespace:OpenBabel
SolveQuadratic	src/obutil.cpp	/^  int SolveQuadratic(double A,double B,double C)$/;"	f	namespace:OpenBabel
SortAndPrintINChI	src/formats/libinchi/runichi.c	/^int SortAndPrintINChI(INCHI_IOSTREAM *output_file, $/;"	f
SortAtomZ	src/mol.cpp	/^  bool SortAtomZ(const pair<OBAtom*,double> &a, const pair<OBAtom*,double> &b)$/;"	f	namespace:OpenBabel
SortAtomsAscending	src/canon.cpp	/^      SortAtomsAscending(const std::vector<unsigned int> &_ranks) : ranks(_ranks) {}$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::SortAtomsAscending
SortAtomsAscending	src/canon.cpp	/^    struct SortAtomsAscending$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
SortAtomsDescending	src/canon.cpp	/^      SortAtomsDescending(const std::vector<unsigned int> &_ranks) : ranks(_ranks) {}$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::SortAtomsDescending
SortAtomsDescending	src/canon.cpp	/^    struct SortAtomsDescending$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
SortByIndex	src/generic.cpp	/^  void OBAngle::SortByIndex()$/;"	f	class:OpenBabel::OBAngle
SortCode	src/canon.cpp	/^    static bool SortCode(const FullCode &code1, const FullCode &code2)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
SortCode2	src/canon.cpp	/^    static bool SortCode2(const std::pair<int, FullCode> &code1, const std::pair<int, FullCode> &code2)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
SortNeighLists2	src/formats/libinchi/ichimap2.c	/^int SortNeighLists2( int num_atoms, AT_RANK *nRank, NEIGH_LIST *NeighList, AT_RANK *nAtomNumber )$/;"	f
SortNeighLists3	src/formats/libinchi/ichimap2.c	/^int SortNeighLists3( int num_atoms, AT_RANK *nRank, NEIGH_LIST *NeighList, AT_RANK *nAtomNumber )$/;"	f
SortNeighListsBySymmAndCanonRank	src/formats/libinchi/ichimap2.c	/^void SortNeighListsBySymmAndCanonRank( int num_atoms, NEIGH_LIST *NeighList, const AT_RANK *nSymmRank, const AT_RANK *nCanonRank )$/;"	f
SortRings	include/openbabel/ring.h	/^    void    SortRings()$/;"	f	class:OpenBabel::OBRingSearch
SortStereoCenters	src/canon.cpp	/^      SortStereoCenters(const std::vector<unsigned int> &_labels) : labels(_labels) {}$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::SortStereoCenters
SortStereoCenters	src/canon.cpp	/^    struct SortStereoCenters$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
SortTautomerGroupsAndEndpoints	src/formats/libinchi/ichitaut.c	/^int SortTautomerGroupsAndEndpoints( T_GROUP_INFO *t_group_info, int num_atoms, int num_at_tg, AT_RANK *nRank )$/;"	f
SortVVInt	src/mol.cpp	/^  bool SortVVInt(const vector<int> &a,const vector<int> &b)$/;"	f	namespace:OpenBabel
SortedEquInfoToRanks	src/formats/libinchi/ichimap2.c	/^int SortedEquInfoToRanks( const AT_RANK* nSymmRank, AT_RANK* nRank, const AT_RANK* nAtomNumber, int num_atoms, int *bChanged )$/;"	f
SortedRanksToEquInfo	src/formats/libinchi/ichimap2.c	/^int SortedRanksToEquInfo( AT_RANK* nSymmRank, const AT_RANK* nRank, const AT_RANK* nAtomNumber, int num_atoms )$/;"	f
SpaceGroup	include/openbabel/math/spacegroup.h	/^  class OBAPI SpaceGroup$/;"	c	namespace:OpenBabel
SpaceGroup	src/math/spacegroup.cpp	/^  SpaceGroup::SpaceGroup():$/;"	f	class:OpenBabel::SpaceGroup
SpaceGroupName	src/formats/xml/cmlformat.cpp	/^    string SpaceGroupName;$/;"	m	class:OpenBabel::CMLFormat	file:
SpaceGroups	src/math/spacegroup.cpp	/^  SpaceGroups::SpaceGroups()$/;"	f	class:OpenBabel::SpaceGroups
SpaceGroups	src/math/spacegroup.cpp	/^  class SpaceGroups: public OBGlobalDataBase$/;"	c	namespace:OpenBabel	file:
SpeciesListed	src/formats/chemkinformat.cpp	/^  bool SpeciesListed;$/;"	m	class:OpenBabel::ChemKinFormat	file:
SpecificationURL	include/openbabel/format.h	/^    virtual const char* SpecificationURL() { return ""; }$/;"	f	class:OpenBabel::OBFormat
SpecificationURL	include/openbabel/inchiformat.h	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::InChIFormat
SpecificationURL	src/formats/CSRformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CSRFormat
SpecificationURL	src/formats/MCDLformat.cpp	/^  virtual const char* SpecificationURL(){return$/;"	f	class:OpenBabel::MCDLFormat
SpecificationURL	src/formats/MNAformat.cpp	/^			virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MNAFormat
SpecificationURL	src/formats/PQSformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PQSFormat
SpecificationURL	src/formats/abinitformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ABINITFormat
SpecificationURL	src/formats/acesformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::AcesInputFormat
SpecificationURL	src/formats/acesformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::AcesOutputFormat
SpecificationURL	src/formats/acrformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ACRFormat
SpecificationURL	src/formats/adfformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ADFInputFormat
SpecificationURL	src/formats/adfformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ADFOutputFormat
SpecificationURL	src/formats/adfformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OBT41Format
SpecificationURL	src/formats/alchemyformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::AlchemyFormat
SpecificationURL	src/formats/amberformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::AmberPrepFormat
SpecificationURL	src/formats/aoforceformat.cpp	/^    virtual const char* SpecificationURL() {$/;"	f	class:OpenBabel::AoforceFormat
SpecificationURL	src/formats/balstformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::BallStickFormat
SpecificationURL	src/formats/bgfformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::BGFFormat
SpecificationURL	src/formats/boxformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::BoxFormat
SpecificationURL	src/formats/cacaoformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CacaoFormat
SpecificationURL	src/formats/cacaoformat.cpp	/^    virtual const char* SpecificationURL(){return$/;"	f	class:OpenBabel::CacaoInternalFormat
SpecificationURL	src/formats/cacheformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CacheFormat
SpecificationURL	src/formats/carformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CARFormat
SpecificationURL	src/formats/castepformat.cpp	/^    virtual const char* SpecificationURL(){return "http:\/\/www.castep.org\/";};$/;"	f	class:OpenBabel::CASTEPFormat
SpecificationURL	src/formats/cccformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CCCFormat
SpecificationURL	src/formats/chem3dformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CHEM3D1Format
SpecificationURL	src/formats/chem3dformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CHEM3D2Format
SpecificationURL	src/formats/chemdrawcdx.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
SpecificationURL	src/formats/chemdrawct.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ChemDrawFormat
SpecificationURL	src/formats/chemtoolformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CHTFormat
SpecificationURL	src/formats/cifformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CIFFormat
SpecificationURL	src/formats/crkformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CRK2DFormat
SpecificationURL	src/formats/crkformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CRK3DFormat
SpecificationURL	src/formats/crystal09format.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::Crystal09Format
SpecificationURL	src/formats/cssrformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CSSRFormat
SpecificationURL	src/formats/daltonformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::DALTONInputFormat
SpecificationURL	src/formats/daltonformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::DALTONOutputFormat
SpecificationURL	src/formats/dlpolyformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::DlpolyConfigFormat
SpecificationURL	src/formats/dlpolyformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::DlpolyHISTORYFormat
SpecificationURL	src/formats/dmolformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::DMolFormat
SpecificationURL	src/formats/exampleformat.cpp	/^	virtual const char* SpecificationURL(){return$/;"	f	class:OpenBabel::XXXFormat
SpecificationURL	src/formats/exyzformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::EXYZFormat
SpecificationURL	src/formats/fastaformat.cpp	/^    virtual const char* SpecificationURL() {$/;"	f	class:OpenBabel::FASTAFormat
SpecificationURL	src/formats/featformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::FEATFormat
SpecificationURL	src/formats/fhformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::FenskeZmatFormat
SpecificationURL	src/formats/fhiaimsformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::FHIaimsFormat
SpecificationURL	src/formats/fpsformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::FPSFormat
SpecificationURL	src/formats/freefracformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::FreeFormFractionalFormat
SpecificationURL	src/formats/gamessformat.cpp	/^      virtual const char* SpecificationURL() {$/;"	f	class:OpenBabel::GAMESSInputFormat
SpecificationURL	src/formats/gamessformat.cpp	/^      virtual const char* SpecificationURL() {$/;"	f	class:OpenBabel::GAMESSOutputFormat
SpecificationURL	src/formats/gamessukformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GAMESSUKInputFormat
SpecificationURL	src/formats/gamessukformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GAMESSUKOutputFormat
SpecificationURL	src/formats/gausscubeformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OBGaussianCubeFormat
SpecificationURL	src/formats/gaussformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GaussianInputFormat
SpecificationURL	src/formats/gaussformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GaussianOutputFormat
SpecificationURL	src/formats/gausszmatformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GaussianZMatrixInputFormat
SpecificationURL	src/formats/genbankformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GenBankFormat
SpecificationURL	src/formats/ghemicalformat.cpp	/^      virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GhemicalFormat
SpecificationURL	src/formats/groformat.cpp	/^  virtual const char* SpecificationURL(){return$/;"	f	class:OpenBabel::GROFormat
SpecificationURL	src/formats/gromos96format.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::GROMOS96Format
SpecificationURL	src/formats/gulpformat.cpp	/^    virtual const char* SpecificationURL(){return "https:\/\/projects.ivec.org\/gulp\/";};$/;"	f	class:OpenBabel::GULPFormat
SpecificationURL	src/formats/hinformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::HINFormat
SpecificationURL	src/formats/jaguarformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::JaguarInputFormat
SpecificationURL	src/formats/jaguarformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::JaguarOutputFormat
SpecificationURL	src/formats/json/chemdoodlejsonformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ChemDoodleJSONFormat
SpecificationURL	src/formats/json/pubchemjsonformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PubChemJSONFormat
SpecificationURL	src/formats/lpmdformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::LpmdFormat
SpecificationURL	src/formats/mdffformat.cpp	/^    virtual const char* SpecificationURL(){return "https:\/\/code.google.com\/p\/mdff\/";};$/;"	f	class:OpenBabel::MDFFFormat
SpecificationURL	src/formats/mdlformat.cpp	/^      virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MDLFormat
SpecificationURL	src/formats/mmcifformat.cpp	/^   virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::mmCIFFormat
SpecificationURL	src/formats/mmodformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MacroModFormat
SpecificationURL	src/formats/mol2format.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MOL2Format
SpecificationURL	src/formats/moldenformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OBMoldenFormat
SpecificationURL	src/formats/molreport.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MolReportFormat
SpecificationURL	src/formats/mpdformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MPDFormat
SpecificationURL	src/formats/mpqcformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MPQCFormat
SpecificationURL	src/formats/mpqcformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MPQCInputFormat
SpecificationURL	src/formats/msiformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::MSIFormat
SpecificationURL	src/formats/msmsformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OBMSMSFormat
SpecificationURL	src/formats/nwchemformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::NWChemInputFormat
SpecificationURL	src/formats/nwchemformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::NWChemOutputFormat
SpecificationURL	src/formats/opendxformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
SpecificationURL	src/formats/orcaformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OrcaInputFormat
SpecificationURL	src/formats/orcaformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OrcaOutputFormat
SpecificationURL	src/formats/outformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::OutputFormat
SpecificationURL	src/formats/pcmodelformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PCModelFormat
SpecificationURL	src/formats/pdbformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PDBFormat
SpecificationURL	src/formats/pdbqtformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PDBQTFormat
SpecificationURL	src/formats/pointcloudformat.cpp	/^      virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PointCloudFormat
SpecificationURL	src/formats/posformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::POSFormat
SpecificationURL	src/formats/povrayformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PovrayFormat
SpecificationURL	src/formats/pqrformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PQRFormat
SpecificationURL	src/formats/pwscfformat.cpp	/^    virtual const char* SpecificationURL(){return "http:\/\/www.quantum-espresso.org";};$/;"	f	class:OpenBabel::PWscfFormat
SpecificationURL	src/formats/qchemformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::QChemInputFormat
SpecificationURL	src/formats/qchemformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::QChemOutputFormat
SpecificationURL	src/formats/reportformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ReportFormat
SpecificationURL	src/formats/shelxformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ShelXFormat
SpecificationURL	src/formats/siestaformat.cpp	/^    virtual const char* SpecificationURL(){return "http:\/\/departments.icmab.es\/leem\/siesta\/";};$/;"	f	class:OpenBabel::SIESTAFormat
SpecificationURL	src/formats/smilesformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::FIXFormat
SpecificationURL	src/formats/smilesformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::SMIBaseFormat
SpecificationURL	src/formats/smileyformat.cpp	/^      virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::SmileyFormat
SpecificationURL	src/formats/stlformat.cpp	/^      virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::STLFormat
SpecificationURL	src/formats/tinkerformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::TinkerFormat
SpecificationURL	src/formats/turbomoleformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::TurbomoleFormat
SpecificationURL	src/formats/unichemformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::UniChemFormat
SpecificationURL	src/formats/vaspformat.cpp	/^    virtual const char* SpecificationURL(){return "http:\/\/cms.mpi.univie.ac.at\/vasp\/vasp\/vasp.html";};$/;"	f	class:OpenBabel::VASPFormat
SpecificationURL	src/formats/viewmolformat.cpp	/^  virtual const char* SpecificationURL() \/\/optional$/;"	f	class:OpenBabel::ViewMolFormat
SpecificationURL	src/formats/xedformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::XEDFormat
SpecificationURL	src/formats/xml/cdxmlformat.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ChemDrawXMLFormat
SpecificationURL	src/formats/xml/cmlformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::CMLFormat
SpecificationURL	src/formats/xml/pubchem.cpp	/^  virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::PubChemFormat
SpecificationURL	src/formats/xsfformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::XSFFormat
SpecificationURL	src/formats/xtcformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::XTCFormat
SpecificationURL	src/formats/xyzformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::XYZFormat
SpecificationURL	src/formats/yasaraformat.cpp	/^    virtual const char* SpecificationURL(){return$/;"	f	class:OpenBabel::YOBFormat
SpecificationURL	src/formats/zindoformat.cpp	/^    virtual const char* SpecificationURL()$/;"	f	class:OpenBabel::ZINDOFormat
SpinData	include/openbabel/base.h	/^      SpinData =          13,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
SplitTime	src/formats/libinchi/runichi.c	/^void SplitTime( unsigned long ulTotalTime, int *hours, int *minutes, int *seconds, int *mseconds )$/;"	f
Sqrt	include/openbabel/obutil.h	/^    double Sqrt(double d2) const$/;"	f	class:OpenBabel::OBSqrtTbl
SquarePlanar	include/openbabel/stereo/stereo.h	/^      SquarePlanar        = (1<<2), \/\/!< Square-planar stereochemistry$/;"	e	enum:OpenBabel::OBStereo::Type
Sr	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Stack	src/chains.cpp	/^  static StackType Stack[STACKSIZE];$/;"	m	namespace:OpenBabel	file:
StackPtr	src/chains.cpp	/^  static int StackPtr;$/;"	m	namespace:OpenBabel	file:
StackType	src/chains.cpp	/^  } StackType;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::__anon73	file:
StandardLabels	src/formats/smilesformat.cpp	/^  void StandardLabels(OBMol *pMol, OBBitVec *frag_atoms,$/;"	f	namespace:OpenBabel
Start	include/openbabel/obutil.h	/^    void  Start()$/;"	f	class:OpenBabel::OBStopwatch
Start	include/openbabel/obutil.h	/^    void Start()$/;"	f	class:OpenBabel::OBStopwatch
StartErrorWrap	src/oberror.cpp	/^  bool OBMessageHandler::StartErrorWrap()$/;"	f	class:OpenBabel::OBMessageHandler
StartLogging	include/openbabel/oberror.h	/^      void StartLogging() { _logging = true; }$/;"	f	class:OpenBabel::OBMessageHandler
StartNumber	include/openbabel/obconversion.h	/^      unsigned int	  StartNumber;$/;"	m	class:OpenBabel::OBConversion
StartRule1	src/stereo/perception.cpp	/^  void StartRule1(const std::vector<unsigned int> &symmetry_classes, const std::vector<StereoRing> &rings,$/;"	f	namespace:OpenBabel
StatAccept	src/pointgroup.cpp	/^    long                   StatAccept       ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
StatDups	src/pointgroup.cpp	/^    long                   StatDups         ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
StatEarly	src/pointgroup.cpp	/^    long                   StatEarly        ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
StatOpt	src/pointgroup.cpp	/^    long                   StatOpt          ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
StatOrder	src/pointgroup.cpp	/^    long                   StatOrder        ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
StatPairs	src/pointgroup.cpp	/^    long                   StatPairs        ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
StatTotal	src/pointgroup.cpp	/^    long                   StatTotal        ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
State	src/canon.cpp	/^      State(const std::vector<unsigned int> &_symmetry_classes,$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::State
State	src/canon.cpp	/^    struct State$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
State	src/isomorphism.cpp	/^        State(Functor &_functor, const OBQuery *_query, const OBMol *_queried, const OBBitVec &mask)$/;"	f	struct:OpenBabel::VF2Mapper::State
State	src/isomorphism.cpp	/^      struct State {$/;"	s	class:OpenBabel::VF2Mapper	file:
StaticString	include/openbabel/json/json.h	/^      explicit StaticString( const char *czstring )$/;"	f	class:Json::StaticString
StaticString	include/openbabel/json/json.h	/^   class JSON_API StaticString$/;"	c	namespace:Json
SteepestDescent	src/forcefield.cpp	/^  void OBForceField::SteepestDescent(int steps, double econv, int method)$/;"	f	class:OpenBabel::OBForceField
SteepestDescentInitialize	src/forcefield.cpp	/^  void OBForceField::SteepestDescentInitialize(int steps, double econv, int method)$/;"	f	class:OpenBabel::OBForceField
SteepestDescentMecp	src/forcefield.cpp	/^  void OBForceField::SteepestDescentMecp(int steps, double econv, int method, OBForceField *pFF2, OBMol* mol2)$/;"	f	class:OpenBabel::OBForceField
SteepestDescentTakeNSteps	src/forcefield.cpp	/^  bool OBForceField::SteepestDescentTakeNSteps(int n)$/;"	f	class:OpenBabel::OBForceField
SteepestDescentTakeNStepsMecp	src/forcefield.cpp	/^  bool OBForceField::SteepestDescentTakeNStepsMecp(int n, OBForceField *pFF2, OBMol *mol2)$/;"	f	class:OpenBabel::OBForceField
Stereo	include/inchi/ichi.h	/^    INChI_Stereo *Stereo;$/;"	m	struct:tagINChI
Stereo	src/stereo/stereoutil.h	/^    typedef OBCisTransStereo Stereo;$/;"	t	struct:OpenBabel::OBStereoTypeTraits
Stereo	src/stereo/stereoutil.h	/^    typedef OBTetrahedralStereo Stereo; \/\/ The stereo data object$/;"	t	struct:OpenBabel::OBStereoTypeTraits
StereoBondStore	src/mcdlutil.cpp	/^  class StereoBondStore {$/;"	c	namespace:OpenBabel	file:
StereoCenter	src/canon.cpp	/^    struct StereoCenter$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
StereoData	include/openbabel/base.h	/^      StereoData =        27,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
StereoFlag	include/openbabel/atom.h	/^      enum StereoFlag {$/;"	g	class:OpenBabel::OBAtom
StereoFlag	include/openbabel/bond.h	/^      enum StereoFlag {$/;"	g	class:OpenBabel::OBBond
StereoFlags	include/inchi/inpdef.h	/^    AT_NUMB    StereoFlags;$/;"	m	struct:tagInfoAtomData
StereoFrom0D	src/stereo/perception.cpp	/^  void StereoFrom0D(OBMol *mol)$/;"	f	namespace:OpenBabel
StereoFrom2D	src/stereo/perception.cpp	/^  void StereoFrom2D(OBMol *mol, std::map<OBBond*, enum OBStereo::BondDirection> *updown, bool force)$/;"	f	namespace:OpenBabel
StereoFrom3D	src/stereo/perception.cpp	/^  void StereoFrom3D(OBMol *mol, bool force)$/;"	f	namespace:OpenBabel
StereoInverted	src/stereo/perception.cpp	/^  struct StereoInverted {$/;"	s	namespace:OpenBabel	file:
StereoIsotopic	include/inchi/ichi.h	/^    INChI_Stereo *StereoIsotopic;$/;"	m	struct:tagINChI
StereoOption	include/openbabel/spectrophore.h	/^         enum StereoOption {NoStereoSpecificProbes,$/;"	g	class:OpenBabel::OBSpectrophore
StereoRefToImplicit	src/stereo/perception.cpp	/^  void StereoRefToImplicit(OBMol& mol, OBStereo::Ref atomId) {$/;"	f	namespace:OpenBabel
StereoRing	src/stereo/perception.cpp	/^    StereoRing() : trueCount(0) {}$/;"	f	struct:OpenBabel::StereoRing
StereoRing	src/stereo/perception.cpp	/^  struct StereoRing$/;"	s	namespace:OpenBabel	file:
StereoRingBond	src/formats/smilesformat.cpp	/^    struct StereoRingBond$/;"	s	class:OpenBabel::OBSmilesParser	file:
StopErrorWrap	src/oberror.cpp	/^  bool OBMessageHandler::StopErrorWrap()$/;"	f	class:OpenBabel::OBMessageHandler
StopLogging	include/openbabel/oberror.h	/^      void StopLogging()  { _logging = false; }$/;"	f	class:OpenBabel::OBMessageHandler
StoredMolsReady	include/openbabel/obmolecformat.h	/^  static bool StoredMolsReady; \/\/!< Used in --separate option$/;"	m	class:OpenBabel::OBMoleculeFormat
StoredMolsReady	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::StoredMolsReady=false;$/;"	m	class:OpenBabel::OBMoleculeFormat	file:
StrFromINChI	include/inchi/ichirvrs.h	/^} StrFromINChI;$/;"	t	typeref:struct:tagStructFromInChI
StrLen	src/formats/povrayformat.cpp	33;"	d	file:
StrategyFiltered	src/zipstream.h	/^    StrategyFiltered = 1,$/;"	e	enum:zlib_stream::EStrategy
StrategyHuffmanOnly	src/zipstream.h	/^    StrategyHuffmanOnly = 2,$/;"	e	enum:zlib_stream::EStrategy
StreamState	include/openbabel/obconversion.h	/^          StreamState(): pStream(NULL) {}$/;"	f	struct:OpenBabel::OBConversion::StreamState
StreamState	include/openbabel/obconversion.h	/^      struct StreamState$/;"	s	class:OpenBabel::OBConversion
StrictFlag	src/chains.cpp	/^  static bool StrictFlag = false;$/;"	m	namespace:OpenBabel	file:
StripSalts	src/mol.cpp	/^  bool OBMol::StripSalts(int threshold)$/;"	f	class:OpenBabel::OBMol
StructData	include/inchi/inchi_dll_a.h	/^    STRUCT_DATA StructData;$/;"	m	struct:tagINCHIGEN_CONTROL
StyledStreamWriter	include/openbabel/json/json.h	/^   class JSON_API StyledStreamWriter$/;"	c	namespace:Json
StyledStreamWriter	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::StyledStreamWriter( std::string indentation )$/;"	f	class:Json::StyledStreamWriter
StyledWriter	include/openbabel/json/json.h	/^   class JSON_API StyledWriter: public Writer$/;"	c	namespace:Json
StyledWriter	src/formats/json/jsoncpp.cpp	/^StyledWriter::StyledWriter()$/;"	f	class:Json::StyledWriter
SubtractOrChangeAtHChargeBNS	src/formats/libinchi/ichi_bns.c	/^int SubtractOrChangeAtHChargeBNS( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms,$/;"	f
Sulfur	src/tautomer.cpp	/^      Sulfur = 16,$/;"	e	enum:OpenBabel::TautomerImpl::AtomNumber	file:
Sum	include/openbabel/conformersearch.h	/^      enum Convergence { Highest, Lowest, Sum, Average };$/;"	e	enum:OpenBabel::OBConformerScore::Convergence
SuperAtomTable	include/openbabel/alias.h	/^  typedef std::map<std::string, AliasItem> SuperAtomTable; \/\/key=alias left-form$/;"	t	class:OpenBabel::AliasData
SupportedInputFormat	include/openbabel/obconversion.h	/^      std::vector<std::string> SupportedInputFormat; \/\/\/< list of supported input format$/;"	m	class:OpenBabel::OBConversion
SupportedOutputFormat	include/openbabel/obconversion.h	/^      std::vector<std::string> SupportedOutputFormat; \/\/\/< list of supported output format$/;"	m	class:OpenBabel::OBConversion
Swab	src/rotamer.cpp	/^  int Swab(int i)$/;"	f	namespace:OpenBabel
SwabInt	src/rotamer.cpp	/^  const bool SwabInt = (STPTR[0]!=0);$/;"	m	namespace:OpenBabel	file:
Swap	src/builder.cpp	/^  bool OBBuilder::Swap(OBMol &mol, int idxA, int idxB, int idxC, int idxD)$/;"	f	class:OpenBabel::OBBuilder
SwapWithVector	src/builder.cpp	/^  bool OBBuilder::SwapWithVector(OBMol &mol, int idxA, int idxB, int idxC, const vector3 &newlocation)$/;"	f	class:OpenBabel::OBBuilder
SwitchAtomStereoAndIsotopicStereo	src/formats/libinchi/ichicans.c	/^void SwitchAtomStereoAndIsotopicStereo( sp_ATOM *at, int num_atoms, int *bSwitched )$/;"	f
SwitchEdge	include/inchi/ichi_bns.h	/^    Edge            *SwitchEdge; \/*[MAX_VERTEX];  a pair of vertices and an edge, implemented here as [*][2] array *\/$/;"	m	struct:BalancedNetworkData
SwitchEdge_IEdge	src/formats/libinchi/ichi_bns.c	419;"	d	file:
SwitchEdge_Vert1	src/formats/libinchi/ichi_bns.c	417;"	d	file:
SwitchEdge_Vert2	src/formats/libinchi/ichi_bns.c	418;"	d	file:
SymNum	include/openbabel/generic.h	/^   int                 SymNum;   \/\/!< Rotational Symmetry Number$/;"	m	class:OpenBabel::OBRotationData
Symbol	include/openbabel/pointgroup.h	/^      enum Symbol$/;"	g	class:OpenBabel::OBPointGroup
Symmetrize	src/pointgroup.cpp	/^  void OBPointGroup::Symmetrize(OBMol *mol)$/;"	f	class:OpenBabel::OBPointGroup
SymmetryCode	src/pointgroup.cpp	/^    const char *           SymmetryCode          ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
SymmetryData	include/openbabel/base.h	/^      SymmetryData =      15,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
SyntaxError	src/formats/smiley.h	/^      enum Type { SyntaxError, SemanticsError };$/;"	e	enum:Smiley::Exception::Type
SystemID	include/libxml/entities.h	/^    const xmlChar      *SystemID;	\/* URI for a SYSTEM or PUBLIC Entity *\/$/;"	m	struct:_xmlEntity
SystemID	include/libxml/tree.h	/^    const xmlChar               *SystemID;	\/* System identifier, if any *\/$/;"	m	struct:_xmlNotation
SystemID	include/libxml/tree.h	/^    const xmlChar *SystemID;	\/* URI for a SYSTEM or PUBLIC DTD *\/$/;"	m	struct:_xmlDtd
SystematicRotorSearch	src/forcefield.cpp	/^  void OBForceField::SystematicRotorSearch(unsigned int geomSteps, bool sampleRingBonds)$/;"	f	class:OpenBabel::OBForceField
SystematicRotorSearchInitialize	src/forcefield.cpp	/^  int OBForceField::SystematicRotorSearchInitialize(unsigned int geomSteps, bool sampleRingBonds)$/;"	f	class:OpenBabel::OBForceField
SystematicRotorSearchNextConformer	src/forcefield.cpp	/^  bool OBForceField::SystematicRotorSearchNextConformer(unsigned int geomSteps)$/;"	f	class:OpenBabel::OBForceField
T	include/openbabel/data.h	/^    double T()            { return _T; }$/;"	f	class:OpenBabel::OBAtomHOF
T	include/openbabel/pointgroup.h	/^        T, Th, Td, \/\/ 48 to 50$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
T	include/openbabel/residue.h	/^      T     = 27,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
T	src/formats/libinchi/ichinorm.c	326;"	d	file:
T	src/formats/libinchi/ichinorm.c	501;"	d	file:
T1111	src/stereo/stereoutil.h	/^    T1111 = 1111, \/\/ 1 symmetry class, duplictaed 4 times$/;"	e	enum:OpenBabel::NeighborSymmetryClasses
T1112	src/stereo/stereoutil.h	/^    T1112 = 1112, \/\/ 2 different symmetry classes, each class duplicated (2 times)$/;"	e	enum:OpenBabel::NeighborSymmetryClasses
T1122	src/stereo/stereoutil.h	/^    T1122 = 1122, \/\/ 2 different symmetry classes, 1 class duplicated (3 times)$/;"	e	enum:OpenBabel::NeighborSymmetryClasses
T1123	src/stereo/stereoutil.h	/^    T1123 = 1123, \/\/ 3 different symmetry classes, 1 class duplicated (2 times)$/;"	e	enum:OpenBabel::NeighborSymmetryClasses
T1234	src/stereo/stereoutil.h	/^    T1234 = 1234, \/\/ 4 different symmetry classes$/;"	e	enum:OpenBabel::NeighborSymmetryClasses
T2D_OKAY	src/formats/libinchi/ichister.c	325;"	d	file:
T2D_UNDF	src/formats/libinchi/ichister.c	327;"	d	file:
T2D_WARN	src/formats/libinchi/ichister.c	326;"	d	file:
T41GridData	src/formats/adfformat.cpp	/^        T41GridData() : valid( false ) {}$/;"	f	struct:OpenBabel::OBT41Format::T41GridData
T41GridData	src/formats/adfformat.cpp	/^    struct T41GridData$/;"	s	class:OpenBabel::OBT41Format	file:
TABLE_OF_ELEMENTS_SIZE	src/charges/eqeq.h	32;"	d
TARGET_API_LIB	include/inchi/mode.h	71;"	d
TARGET_ID_STRING	include/inchi/mode.h	190;"	d
TAUT_15_NON_RING	include/inchi/mode.h	370;"	d
TAUT_4PYRIDINOL_RINGS	include/inchi/mode.h	541;"	d
TAUT_IGNORE_EQL_ENDPOINTS	include/inchi/mode.h	544;"	d
TAUT_INI	include/inchi/mode.h	445;"	d
TAUT_NON	include/inchi/mode.h	443;"	d
TAUT_NUM	include/inchi/mode.h	442;"	d
TAUT_OTHER	include/inchi/mode.h	602;"	d
TAUT_OTHER	include/inchi/mode.h	604;"	d
TAUT_PYRAZOLE_RINGS	include/inchi/mode.h	542;"	d
TAUT_RINGS_ATTACH_CHAIN	include/inchi/mode.h	547;"	d
TAUT_TROPOLONE_5	include/inchi/mode.h	540;"	d
TAUT_TROPOLONE_7	include/inchi/mode.h	539;"	d
TAUT_YES	include/inchi/mode.h	444;"	d
TAUT_YES	src/formats/libinchi/ichiread.c	3305;"	d	file:
TAUT_YES	src/formats/libinchi/ichiread.c	3390;"	d	file:
TB1	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB10	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB11	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB12	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB13	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB14	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB15	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB16	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB17	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB18	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB19	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB2	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB20	src/formats/smiley.h	/^    TB11, TB12, TB13, TB14, TB15, TB16, TB17, TB18, TB19, TB20,$/;"	e	enum:Smiley::Chirality
TB3	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB4	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB5	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB6	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB7	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB8	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TB9	src/formats/smiley.h	/^    TB1, TB2, TB3, TB4, TB5, TB6, TB7, TB8, TB9, TB10,$/;"	e	enum:Smiley::Chirality
TBL_DRAW_PARMS	include/inchi/ichidrp.h	/^} TBL_DRAW_PARMS;$/;"	t	typeref:struct:tagTblDrawPatms
TBL_LABELS	include/inchi/ichidrp.h	/^typedef enum tagTblLabels{ ilSHOWN,  TDP_NUM_LBL} TBL_LABELS; \/*  labels *\/$/;"	t	typeref:enum:tagTblLabels
TBL_TYPES	include/inchi/ichidrp.h	/^typedef enum tagTblTypes {itBASIC, itISOTOPIC, itSTEREO, TDP_NUM_PAR} TBL_TYPES; \/*  types *\/$/;"	t	typeref:enum:tagTblTypes
TCGR_TYPE	include/inchi/ichirvrs.h	/^}TCGR_TYPE;$/;"	t	typeref:enum:tagTCGroupTypes
TCG_MeFlower0	include/inchi/ichirvrs.h	/^    TCG_MeFlower0, \/* BNS_VT_M_GROUP    0 *\/  \/* base *\/$/;"	e	enum:tagTCGroupTypes
TCG_MeFlower1	include/inchi/ichirvrs.h	/^    TCG_MeFlower1, \/* BNS_VT_M_GROUP    1 *\/$/;"	e	enum:tagTCGroupTypes
TCG_MeFlower2	include/inchi/ichirvrs.h	/^    TCG_MeFlower2, \/* BNS_VT_M_GROUP    2 *\/$/;"	e	enum:tagTCGroupTypes
TCG_MeFlower3	include/inchi/ichirvrs.h	/^    TCG_MeFlower3, \/* BNS_VT_M_GROUP    3 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Minus	include/inchi/ichirvrs.h	/^    TCG_Minus,     \/* BNS_VT_C_NEG_ALL  0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Minus0	include/inchi/ichirvrs.h	/^    TCG_Minus0,    \/* BNS_VT_C_NEG      0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Minus1	include/inchi/ichirvrs.h	/^    TCG_Minus1,    \/* BNS_VT_C_NEG      1 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Minus_C0	include/inchi/ichirvrs.h	/^    TCG_Minus_C0,  \/* BNS_VT_C_NEG_C    0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Minus_C1	include/inchi/ichirvrs.h	/^    TCG_Minus_C1,  \/* BNS_VT_C_NEG_C    1 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Minus_M0	include/inchi/ichirvrs.h	/^    TCG_Minus_M0,  \/* BNS_VT_C_NEG_M    0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Minus_M1	include/inchi/ichirvrs.h	/^    TCG_Minus_M1,  \/* BNS_VT_C_NEG_M    1 *\/$/;"	e	enum:tagTCGroupTypes
TCG_None	include/inchi/ichirvrs.h	/^    TCG_None = -1, \/* so far only ord=0 is used *\/$/;"	e	enum:tagTCGroupTypes
TCG_Plus	include/inchi/ichirvrs.h	/^    TCG_Plus,      \/* BNS_VT_C_POS_ALL  0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Plus0	include/inchi/ichirvrs.h	/^    TCG_Plus0 = 0, \/* BNS_VT_C_POS      0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Plus1	include/inchi/ichirvrs.h	/^    TCG_Plus1,     \/* BNS_VT_C_POS      1 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Plus_C0	include/inchi/ichirvrs.h	/^    TCG_Plus_C0,   \/* BNS_VT_C_POS_C    0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Plus_C1	include/inchi/ichirvrs.h	/^    TCG_Plus_C1,   \/* BNS_VT_C_POS_C    1 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Plus_M0	include/inchi/ichirvrs.h	/^    TCG_Plus_M0,   \/* BNS_VT_C_POS_M    0 *\/$/;"	e	enum:tagTCGroupTypes
TCG_Plus_M1	include/inchi/ichirvrs.h	/^    TCG_Plus_M1,   \/* BNS_VT_C_POS_M    1 *\/$/;"	e	enum:tagTCGroupTypes
TC_GROUP	include/inchi/ichirvrs.h	/^} TC_GROUP;$/;"	t	typeref:struct:tagTCGroup
TDDFT_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* TDDFT_CALCULATION_PATTERN = "TDDFT Module";$/;"	m	namespace:OpenBabel	file:
TDP_LEN_LBL	include/inchi/ichidrp.h	47;"	d
TDP_NUM_LBL	include/inchi/ichidrp.h	/^typedef enum tagTblLabels{ ilSHOWN,  TDP_NUM_LBL} TBL_LABELS; \/*  labels *\/$/;"	e	enum:tagTblLabels
TDP_NUM_PAR	include/inchi/ichidrp.h	/^typedef enum tagTblTypes {itBASIC, itISOTOPIC, itSTEREO, TDP_NUM_PAR} TBL_TYPES; \/*  types *\/$/;"	e	enum:tagTblTypes
TEST_REMOVE_S_ATOMS	include/inchi/mode.h	395;"	d
TEST_RENUMB_ATOMS	include/inchi/mode.h	460;"	d
TEST_RENUMB_ATOMS_SAVE_LONGEST	include/inchi/mode.h	463;"	d
TEST_RENUMB_NEIGH	include/inchi/mode.h	461;"	d
TEST_RENUMB_SWITCH	include/inchi/mode.h	462;"	d
TEditedMolecule	src/mcdlutil.cpp	/^    TEditedMolecule() : TSimpleMolecule() {$/;"	f	class:OpenBabel::TEditedMolecule
TEditedMolecule	src/mcdlutil.cpp	/^  class TEditedMolecule: public TSimpleMolecule {$/;"	c	namespace:OpenBabel	file:
TGNUMDA	include/inchi/ichitaut.h	/^} TGNUMDA;$/;"	t	typeref:enum:tagTG_NumDA
TGRF	include/inchi/ichirvrs.h	/^} TGRF;$/;"	t	typeref:enum:tagTgRestoreFlags
TGRF_MINUS_FIRST	include/inchi/ichirvrs.h	/^    TGRF_MINUS_FIRST = 1$/;"	e	enum:tagTgRestoreFlags
TGSO_CURR_ORDER	include/inchi/ichitaut.h	170;"	d
TGSO_SYMM_IORDER	include/inchi/ichitaut.h	172;"	d
TGSO_SYMM_IRANK	include/inchi/ichitaut.h	173;"	d
TGSO_SYMM_RANK	include/inchi/ichitaut.h	171;"	d
TGSO_TOTAL_LEN	include/inchi/ichitaut.h	174;"	d
TG_FLAG_1_5_TAUT	include/inchi/mode.h	824;"	d
TG_FLAG_ALLOW_NO_NEGTV_O	include/inchi/mode.h	800;"	d
TG_FLAG_ALLOW_NO_NEGTV_O_DONE	include/inchi/mode.h	838;"	d
TG_FLAG_ALL_SALT_DONE	include/inchi/mode.h	841;"	d
TG_FLAG_ALL_TAUTOMERIC	include/inchi/mode.h	803;"	d
TG_FLAG_ARSINE_STEREO	include/inchi/mode.h	819;"	d
TG_FLAG_CHECK_VALENCE_COORD	include/inchi/mode.h	810;"	d
TG_FLAG_CHECK_VALENCE_COORD_DONE	include/inchi/mode.h	846;"	d
TG_FLAG_DISCONNECT_COORD	include/inchi/mode.h	808;"	d
TG_FLAG_DISCONNECT_COORD_DONE	include/inchi/mode.h	845;"	d
TG_FLAG_DISCONNECT_SALTS	include/inchi/mode.h	796;"	d
TG_FLAG_DISCONNECT_SALTS_DONE	include/inchi/mode.h	834;"	d
TG_FLAG_FIX_ADJ_RADICALS	include/inchi/mode.h	816;"	d
TG_FLAG_FIX_ADJ_RADICALS_DONE	include/inchi/mode.h	854;"	d
TG_FLAG_FIX_ISO_FIXEDH_BUG	include/inchi/mode.h	827;"	d
TG_FLAG_FIX_ODD_THINGS_DONE	include/inchi/mode.h	848;"	d
TG_FLAG_FIX_SP3_BUG	include/inchi/mode.h	821;"	d
TG_FLAG_FIX_TERM_H_CHRG_BUG	include/inchi/mode.h	828;"	d
TG_FLAG_FOUND_ISOTOPIC_ATOM_DONE	include/inchi/mode.h	852;"	d
TG_FLAG_FOUND_ISOTOPIC_H_DONE	include/inchi/mode.h	851;"	d
TG_FLAG_FOUND_SALT_CHARGES_DONE	include/inchi/mode.h	850;"	d
TG_FLAG_HARD_ADD_REM_PROTONS	include/inchi/mode.h	813;"	d
TG_FLAG_H_ALREADY_REMOVED	include/inchi/mode.h	820;"	d
TG_FLAG_KETO_ENOL_TAUT	include/inchi/mode.h	823;"	d
TG_FLAG_MERGE_TAUT_SALTS	include/inchi/mode.h	801;"	d
TG_FLAG_MERGE_TAUT_SALTS_DONE	include/inchi/mode.h	839;"	d
TG_FLAG_MOVE_CHARGE_COORD_DONE	include/inchi/mode.h	847;"	d
TG_FLAG_MOVE_HPLUS2NEUTR	include/inchi/mode.h	811;"	d
TG_FLAG_MOVE_HPLUS2NEUTR_DONE	include/inchi/mode.h	832;"	d
TG_FLAG_MOVE_POS_CHARGES	include/inchi/mode.h	798;"	d
TG_FLAG_MOVE_POS_CHARGES_DONE	include/inchi/mode.h	836;"	d
TG_FLAG_PHOSPHINE_STEREO	include/inchi/mode.h	818;"	d
TG_FLAG_POINTED_EDGE_STEREO	include/inchi/mode.h	814;"	d
TG_FLAG_RECONNECT_COORD	include/inchi/mode.h	809;"	d
TG_FLAG_TEST_TAUT2_SALTS	include/inchi/mode.h	799;"	d
TG_FLAG_TEST_TAUT2_SALTS_DONE	include/inchi/mode.h	837;"	d
TG_FLAG_TEST_TAUT3_SALTS_DONE	include/inchi/mode.h	849;"	d
TG_FLAG_TEST_TAUT__ATOMS	include/inchi/mode.h	795;"	d
TG_FLAG_TEST_TAUT__ATOMS_DONE	include/inchi/mode.h	833;"	d
TG_FLAG_TEST_TAUT__SALTS	include/inchi/mode.h	797;"	d
TG_FLAG_TEST_TAUT__SALTS_DONE	include/inchi/mode.h	835;"	d
TG_FLAG_VARIABLE_PROTONS	include/inchi/mode.h	812;"	d
TG_NUM_DA	include/inchi/ichitaut.h	/^    TG_NUM_DA  \/* number of elements in an array *\/$/;"	e	enum:tagTG_NumDA
TG_Num_aH	include/inchi/ichitaut.h	/^    TG_Num_aH, \/* number of H acceptors that have H and no (-) (+a double bond) *\/$/;"	e	enum:tagTG_NumDA
TG_Num_aM	include/inchi/ichitaut.h	/^    TG_Num_aM, \/* number of H acceptors that have (-) and possibly H (+ one double bond) *\/$/;"	e	enum:tagTG_NumDA
TG_Num_aO	include/inchi/ichitaut.h	/^    TG_Num_aO, \/* number of H acceptors -C=O *\/$/;"	e	enum:tagTG_NumDA
TG_Num_dH	include/inchi/ichitaut.h	/^    TG_Num_dH, \/* number of H donors that have only H (all single bonds) *\/$/;"	e	enum:tagTG_NumDA
TG_Num_dM	include/inchi/ichitaut.h	/^    TG_Num_dM, \/* number of H donors that have (-)  (all single bonds) *\/$/;"	e	enum:tagTG_NumDA
TG_Num_dO	include/inchi/ichitaut.h	/^    TG_Num_dO, \/* number of H donors =C-OH or =C-O(-) *\/$/;"	e	enum:tagTG_NumDA
TGroupData	src/formats/libinchi/ichitaut.c	/^} TGroupData;$/;"	t	typeref:struct:tagTGroupData	file:
TH1	src/formats/smiley.h	/^    TH1, TH2,$/;"	e	enum:Smiley::Chirality
TH2	src/formats/smiley.h	/^    TH1, TH2,$/;"	e	enum:Smiley::Chirality
THR	include/openbabel/residue.h	/^      THR   =  5,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
THREEBODY	include/openbabel/kinetics.h	/^  enum reaction_type {ARRHENIUS=55555, LINDERMANN, TROE, SRI, THREEBODY};$/;"	e	enum:OpenBabel::OBRateData::reaction_type
TIME_STR_SIZE	src/formats/povrayformat.cpp	47;"	d	file:
TLA	src/formats/fastaformat.cpp	/^    char TLA[4];$/;"	m	struct:OpenBabel::residue_lookup_record	file:
TNI	include/inchi/ichitaut.h	/^} TNI;$/;"	t	typeref:struct:tagTautomerNormInfo
TOLOWER	src/strncasecmp.c	37;"	d	file:
TRACE_MEMORY_LEAKS	include/inchi/mode.h	907;"	d
TRACE_MEMORY_LEAKS	include/inchi/mode.h	909;"	d
TRACE_MEMORY_LEAKS	include/inchi/mode.h	912;"	d
TRACE_MEMORY_LEAKS	include/inchi/mode.h	915;"	d
TRACE_MEMORY_LEAKS	include/inchi/mode.h	964;"	d
TRACE_MEMORY_LEAKS	include/inchi/mode.h	965;"	d
TREAT_ATOM_AS_METAL	include/inchi/ichirvrs.h	289;"	d
TREE_IN_1	src/formats/libinchi/ichi_bns.c	267;"	d	file:
TREE_IN_2	src/formats/libinchi/ichi_bns.c	265;"	d	file:
TREE_IN_2BLOSS	src/formats/libinchi/ichi_bns.c	266;"	d	file:
TREE_IS_ON_SCANQ	src/formats/libinchi/ichi_bns.c	270;"	d	file:
TREE_IS_S_REACHABLE	src/formats/libinchi/ichi_bns.c	269;"	d	file:
TREE_MARK	src/formats/libinchi/ichi_bns.c	272;"	d	file:
TREE_NOT_IN_M	src/formats/libinchi/ichi_bns.c	264;"	d	file:
TROE	include/openbabel/kinetics.h	/^  enum reaction_type {ARRHENIUS=55555, LINDERMANN, TROE, SRI, THREEBODY};$/;"	e	enum:OpenBabel::OBRateData::reaction_type
TRP	include/openbabel/residue.h	/^      TRP   = 19,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
TSimpleMolecule	src/mcdlutil.cpp	/^    TSimpleMolecule() {$/;"	f	class:OpenBabel::TSimpleMolecule
TSimpleMolecule	src/mcdlutil.cpp	/^  class TSimpleMolecule {$/;"	c	namespace:OpenBabel	file:
TSingleAtom	src/mcdlutil.cpp	/^    TSingleAtom() {$/;"	f	class:OpenBabel::TSingleAtom
TSingleAtom	src/mcdlutil.cpp	/^  class  TSingleAtom  {$/;"	c	namespace:OpenBabel	file:
TSingleBond	src/mcdlutil.cpp	/^  class  TSingleBond  {$/;"	c	namespace:OpenBabel	file:
TYPE_AT	src/formats/libinchi/ichi_bns.c	8491;"	d	file:
TYPE_CN	src/formats/libinchi/ichi_bns.c	8223;"	d	file:
TYPE_CN	src/formats/libinchi/ichi_bns.c	8259;"	d	file:
TYPE_CN	src/formats/libinchi/ichi_bns.c	8334;"	d	file:
TYPE_CN	src/formats/libinchi/ichi_bns.c	8374;"	d	file:
TYPE_CN	src/formats/libinchi/ichi_bns.c	8490;"	d	file:
TYPE_T	src/formats/libinchi/ichi_bns.c	8222;"	d	file:
TYPE_T	src/formats/libinchi/ichi_bns.c	8258;"	d	file:
TYPE_T	src/formats/libinchi/ichi_bns.c	8333;"	d	file:
TYPE_T	src/formats/libinchi/ichi_bns.c	8373;"	d	file:
TYPE_T	src/formats/libinchi/ichi_bns.c	8489;"	d	file:
TYR	include/openbabel/residue.h	/^      TYR   = 15,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
T_BONDPOS	include/inchi/ichitaut.h	/^} T_BONDPOS;$/;"	t	typeref:struct:tagTautomerBondLocation
T_ENDPOINT	include/inchi/ichitaut.h	/^} T_ENDPOINT;$/;"	t	typeref:struct:tagTautomerEndpoint
T_GROUP	include/inchi/ichitaut.h	/^} T_GROUP;$/;"	t	typeref:struct:tagTautomerGroup
T_GROUP_HDR_LEN	include/inchi/ichitaut.h	106;"	d
T_GROUP_INFO	include/inchi/ichitaut.h	/^} T_GROUP_INFO;$/;"	t	typeref:struct:tagTautomerGroupsInfo
T_GROUP_ISOWT	include/inchi/ichitaut.h	/^typedef AT_ISO_SORT_KEY  T_GROUP_ISOWT; \/* must hold value up to T_GROUP_ISOWT_MULT^3-1 *\/$/;"	t
T_GROUP_ISOWT_MULT	include/inchi/ichitaut.h	115;"	d
T_NUM_ISOTOPIC	include/inchi/ichitaut.h	104;"	d
T_NUM_NO_ISOTOPIC	include/inchi/ichitaut.h	103;"	d
Ta	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
TagName	src/formats/chemdrawcdx.cpp	/^string CDXReader::TagName(map<CDXTag, string>& enummap, CDXTag tag)$/;"	f	class:OpenBabel::CDXReader
TagToken	src/formats/mmcifformat.cpp	/^     TagToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
Tanimoto	include/openbabel/fingerprint.h	/^  static double Tanimoto(const std::vector<unsigned int>& vec1, const unsigned int* p2)$/;"	f	class:OpenBabel::OBFingerprint
Tanimoto	src/bitvec.cpp	/^  double Tanimoto(const OBBitVec & bv1, const OBBitVec & bv2)$/;"	f	namespace:OpenBabel
Tanimoto	src/fingerprint.cpp	/^  double OBFingerprint::Tanimoto(const vector<unsigned int>& vec1, const vector<unsigned int>& vec2)$/;"	f	class:OpenBabel::OBFingerprint
TargetClassDescription	src/format.cpp	/^const char* OBFormat::TargetClassDescription()$/;"	f	class:OpenBabel::OBFormat
TargetClassDescription	src/formats/chemkinformat.cpp	/^  virtual const char* TargetClassDescription()$/;"	f	class:OpenBabel::ChemKinFormat
TargetClassDescription	src/formats/mdlformat.cpp	/^      virtual const char* TargetClassDescription() { return OBMol::ClassDescription(); }$/;"	f	class:OpenBabel::MDLFormat
TargetClassDescription	src/formats/pngformat.cpp	/^  virtual const char* TargetClassDescription()$/;"	f	class:OpenBabel::PNGFormat
TargetClassDescription	src/formats/rsmiformat.cpp	/^    virtual const char* TargetClassDescription()$/;"	f	class:OpenBabel::SmiReactFormat
TargetClassDescription	src/formats/rxnformat.cpp	/^  virtual const char* TargetClassDescription()$/;"	f	class:OpenBabel::RXNFormat
TargetClassDescription	src/formats/smilesformat.cpp	/^    virtual const char* TargetClassDescription(){return OBMol::ClassDescription();};$/;"	f	class:OpenBabel::SMIBaseFormat
TargetClassDescription	src/formats/xml/cmlreactformat.cpp	/^  virtual const char* TargetClassDescription()$/;"	f	class:OpenBabel::CMLReactFormat
TautomerFunctor	include/openbabel/tautomer.h	/^  class OBAPI TautomerFunctor$/;"	c	namespace:OpenBabel
TautomerImpl	src/tautomer.cpp	/^  struct TautomerImpl$/;"	s	namespace:OpenBabel	file:
Tb	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Tc	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Td	include/openbabel/pointgroup.h	/^        T, Th, Td, \/\/ 48 to 50$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
Te	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Tellurium	src/tautomer.cpp	/^      Tellurium = 52$/;"	e	enum:OpenBabel::TautomerImpl::AtomNumber	file:
TempFix_NH_NH_Bonds	src/formats/libinchi/ichi_bns.c	/^int TempFix_NH_NH_Bonds( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms )$/;"	f
Template	include/openbabel/chains.h	/^  typedef struct Template Template;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::Template
Template	src/chains.cpp	/^  typedef struct Template$/;"	s	namespace:OpenBabel	file:
Template	src/chains.cpp	/^  }    Template;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::Template	file:
TemplateRedraw	src/mcdlutil.cpp	/^  TemplateRedraw::TemplateRedraw(){$/;"	f	class:OpenBabel::TemplateRedraw
TemplateRedraw	src/mcdlutil.cpp	/^  class  TemplateRedraw  {$/;"	c	namespace:OpenBabel	file:
TestForAlias	src/formats/mdlformat.cpp	/^  bool MDLFormat::TestForAlias(const string& symbol, OBAtom* at, vector<pair<AliasData*,OBAtom*> >& aliases)$/;"	f	class:OpenBabel::MDLFormat
TetStereoFromParity	src/formats/mdlformat.cpp	/^  void MDLFormat::TetStereoFromParity(OBMol& mol, vector<MDLFormat::Parity> &parity, bool deleteExisting)$/;"	f	class:OpenBabel::MDLFormat
TetStereoToWedgeHash	src/stereo/perception.cpp	/^  bool TetStereoToWedgeHash(OBMol &mol,$/;"	f	namespace:OpenBabel
Tetragonal	include/openbabel/generic.h	/^                       Tetragonal,$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
Tetrahedral	include/openbabel/stereo/stereo.h	/^      Tetrahedral         = (1<<3), \/\/!< tetrahedral$/;"	e	enum:OpenBabel::OBStereo::Type
TetrahedralFrom0D	src/stereo/perception.cpp	/^  std::vector<OBTetrahedralStereo*> TetrahedralFrom0D(OBMol *mol,$/;"	f	namespace:OpenBabel
TetrahedralFrom2D	src/stereo/perception.cpp	/^  std::vector<OBTetrahedralStereo*> TetrahedralFrom2D(OBMol *mol,$/;"	f	namespace:OpenBabel
TetrahedralFrom3D	src/stereo/perception.cpp	/^  std::vector<OBTetrahedralStereo*> TetrahedralFrom3D(OBMol *mol,$/;"	f	namespace:OpenBabel
TextFormat	src/formats/textformat.cpp	/^  TextFormat()$/;"	f	class:OpenBabel::TextFormat
TextFormat	src/formats/textformat.cpp	/^class TextFormat : public OBFormat$/;"	c	namespace:OpenBabel	file:
TgDiffHChgFH	src/formats/libinchi/ichirvr3.c	/^} TgDiffHChgFH;$/;"	t	typeref:struct:tagTgDiffHChgFH	file:
Th	include/openbabel/pointgroup.h	/^        T, Th, Td, \/\/ 48 to 50$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
Th	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
TheobaldAlign	src/math/align.cpp	/^  void OBAlign::TheobaldAlign(const Eigen::MatrixXd &mtarget)$/;"	f	class:OpenBabel::OBAlign
ThermoData	include/openbabel/kinetics.h	/^const unsigned ThermoData = 55556;$/;"	m	namespace:OpenBabel
ThermoFormat	src/formats/thermoformat.cpp	/^  ThermoFormat()$/;"	f	class:OpenBabel::ThermoFormat
ThermoFormat	src/formats/thermoformat.cpp	/^class ThermoFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Theta	src/formats/fastaformat.cpp	/^    double x, r, Theta; \/\/ cylindrical polar co-ordinates$/;"	m	struct:OpenBabel::ResidueAtomRecord	file:
ThrowError	src/oberror.cpp	/^  void OBMessageHandler::ThrowError(OBError err, errorQualifier qualifier)$/;"	f	class:OpenBabel::OBMessageHandler
ThrowError	src/oberror.cpp	/^  void OBMessageHandler::ThrowError(const std::string &method,$/;"	f	class:OpenBabel::OBMessageHandler
ThrowError	src/obutil.cpp	/^  void ThrowError(char *str)$/;"	f	namespace:OpenBabel
ThrowError	src/obutil.cpp	/^  void ThrowError(std::string &str)$/;"	f	namespace:OpenBabel
Ti	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
TimeSeed	src/rand.cpp	/^  void OBRandom::TimeSeed()$/;"	f	class:OpenBabel::OBRandom
Timeout	src/canon.cpp	/^      Timeout(time_t _maxTime) : maxTime(_maxTime)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::Timeout
Timeout	src/canon.cpp	/^    struct Timeout$/;"	s	struct:OpenBabel::CanonicalLabelsImpl	file:
Timeout	src/kekulize.cpp	/^      Timeout(time_t _maxTime) : maxTime(_maxTime)$/;"	f	struct:OpenBabel::Kekulize::Timeout
Timeout	src/kekulize.cpp	/^    struct Timeout$/;"	s	namespace:OpenBabel::Kekulize	file:
TinkerFormat	src/formats/tinkerformat.cpp	/^    TinkerFormat()$/;"	f	class:OpenBabel::TinkerFormat
TinkerFormat	src/formats/tinkerformat.cpp	/^  class TinkerFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
TitleFilter	src/descriptors/filters.cpp	/^  TitleFilter(const char* ID) : OBDescriptor(ID){};$/;"	f	class:OpenBabel::TitleFilter
TitleFilter	src/descriptors/filters.cpp	/^class TitleFilter : public OBDescriptor$/;"	c	namespace:OpenBabel	file:
TitleFormat	src/formats/titleformat.cpp	/^	TitleFormat()$/;"	f	class:OpenBabel::TitleFormat
TitleFormat	src/formats/titleformat.cpp	/^class TitleFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Tl	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Tm	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
ToCansmilesString	src/formats/smilesformat.cpp	/^  void OBMol2Cansmi::ToCansmilesString(OBCanSmiNode *node,$/;"	f	class:OpenBabel::OBMol2Cansmi
ToConfig	include/openbabel/stereo/tetranonplanar.h	/^      static ConfigType ToConfig(const ConfigType &cfg, unsigned long from_or_towards,$/;"	f	class:OpenBabel::OBTetraNonPlanarStereo
ToConfig	include/openbabel/stereo/tetraplanar.h	/^      static ConfigType ToConfig(const ConfigType &cfg, unsigned long start,$/;"	f	class:OpenBabel::OBTetraPlanarStereo
ToInertialFrame	src/mol.cpp	/^  void OBMol::ToInertialFrame()$/;"	f	class:OpenBabel::OBMol
ToInertialFrame	src/mol.cpp	/^  void OBMol::ToInertialFrame(int conf,double *rmat)$/;"	f	class:OpenBabel::OBMol
ToLower	src/obutil.cpp	/^  void ToLower(char *cptr)$/;"	f	namespace:OpenBabel
ToLower	src/obutil.cpp	/^  void ToLower(std::string &s)$/;"	f	namespace:OpenBabel
ToNextFile	src/GUI/OBGUI.cpp	/^bool CFilenames::ToNextFile(int delta)$/;"	f	class:CFilenames
ToUpper	src/obutil.cpp	/^  void ToUpper(char *cptr)$/;"	f	namespace:OpenBabel
ToUpper	src/obutil.cpp	/^  void ToUpper(std::string &s)$/;"	f	namespace:OpenBabel
ToVecInt	src/bitvec.cpp	/^  void OBBitVec::ToVecInt(std::vector<int> & bit_offsets) const$/;"	f	class:OpenBabel::OBBitVec
Token	include/openbabel/json/json.h	/^      class Token$/;"	c	class:Json::Reader
Token	src/formats/mmcifformat.cpp	/^   struct Token$/;"	s	class:OpenBabel::CIFLexer	file:
TokenType	include/openbabel/json/json.h	/^      enum TokenType$/;"	g	class:Json::Reader
TokenType	src/formats/mmcifformat.cpp	/^   enum TokenType$/;"	g	class:OpenBabel::CIFLexer	file:
ToleranceFinal	src/pointgroup.cpp	/^    double                 ToleranceFinal        ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
TolerancePrimary	src/pointgroup.cpp	/^    double                 TolerancePrimary      ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
ToleranceSame	src/pointgroup.cpp	/^    double                 ToleranceSame         ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
Tolower	src/data.cpp	/^  void Tolower(string &s)$/;"	f	namespace:OpenBabel
TopLevelParse	src/formats/chemdrawcdx.cpp	/^bool ChemDrawBinaryXFormat::TopLevelParse$/;"	f	class:OpenBabel::ChemDrawBinaryXFormat
TorsionData	include/openbabel/base.h	/^      TorsionData =        9,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Toupper	src/data.cpp	/^  void Toupper(string &s)$/;"	f	namespace:OpenBabel
TraceNucleicChain	src/chains.cpp	/^  void OBChainsParser::TraceNucleicChain(OBMol &mol, unsigned int i, int r)$/;"	f	class:OpenBabel::OBChainsParser
TracePeptideChain	src/chains.cpp	/^  void OBChainsParser::TracePeptideChain(OBMol &mol, unsigned int i, int r)$/;"	f	class:OpenBabel::OBChainsParser
TrailingCharInBracketAtom	src/formats/smiley.h	/^    TrailingCharInBracketAtom = 8,$/;"	e	enum:Smiley::ErrorCode
TrailingDot	src/formats/smiley.h	/^    TrailingDot = 10,$/;"	e	enum:Smiley::ErrorCode
TransferArray	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::TransferArray(cmlArray& arr)$/;"	f	class:OpenBabel::CMLFormat
TransferElement	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::TransferElement(cmlArray& arr)$/;"	f	class:OpenBabel::CMLFormat
Transform	src/math/spacegroup.cpp	/^  list<vector3> SpaceGroup::Transform(const vector3 &v) const$/;"	f	class:OpenBabel::SpaceGroup
TransformsNeeded	src/formats/xml/cmlformat.cpp	/^    int CrystalScalarsNeeded, PropertyScalarsNeeded, TransformsNeeded;$/;"	m	class:OpenBabel::CMLFormat	file:
Translate	src/data.cpp	/^  bool OBTypeTable::Translate(char *to, const char *from)$/;"	f	class:OpenBabel::OBTypeTable
Translate	src/data.cpp	/^  bool OBTypeTable::Translate(string &to, const string &from)$/;"	f	class:OpenBabel::OBTypeTable
Translate	src/data.cpp	/^  std::string OBTypeTable::Translate(const string &from)$/;"	f	class:OpenBabel::OBTypeTable
Translate	src/mol.cpp	/^  void OBMol::Translate(const vector3 &v)$/;"	f	class:OpenBabel::OBMol
Translate	src/mol.cpp	/^  void OBMol::Translate(const vector3 &v, int nconf)$/;"	f	class:OpenBabel::OBMol
Transposition	src/formats/libinchi/ichican2.c	/^} Transposition;$/;"	t	typeref:struct:tagTransposition	file:
TranspositionCreate	src/formats/libinchi/ichican2.c	/^int TranspositionCreate( Transposition *p, int n )$/;"	f
TranspositionFree	src/formats/libinchi/ichican2.c	/^void TranspositionFree( Transposition *p )$/;"	f
TranspositionGetMcrAndFixSetAndUnorderedPartition	src/formats/libinchi/ichican2.c	/^void TranspositionGetMcrAndFixSetAndUnorderedPartition( Transposition *gamma, NodeSet *McrSet, NodeSet *FixSet, int n, int l, UnorderedPartition *p )$/;"	f
TraverseCycle	src/typer.cpp	/^  bool OBAromaticTyper::TraverseCycle(OBAtom *root, OBAtom *atom, OBBond *prev,$/;"	f	class:OpenBabel::OBAromaticTyper
TreatCreateINChIWarning	src/formats/libinchi/runichi.c	/^int TreatCreateINChIWarning(STRUCT_DATA *sd, INPUT_PARMS *ip, ORIG_ATOM_DATA *orig_inp_data, long num_inp,$/;"	f
TreatCreateOneComponentINChIError	src/formats/libinchi/runichi.c	/^int TreatCreateOneComponentINChIError(STRUCT_DATA *sd, INPUT_PARMS *ip, ORIG_ATOM_DATA *orig_inp_data,$/;"	f
TreatReadTheStructureErrors	src/formats/libinchi/runichi.c	/^int TreatReadTheStructureErrors(  STRUCT_DATA *sd, INPUT_PARMS *ip, int nLogMask,$/;"	f
Tree	include/inchi/ichi_bns.h	/^    S_CHAR          *Tree;       \/*[MAX_VERTEX];  indicates presence in ScanQ, T, T', s-reachability *\/$/;"	m	struct:BalancedNetworkData
Tree	src/confsearch.cpp	/^      typedef tree<PosePair> Tree;$/;"	t	class:OpenBabel::OBDiversePoses	file:
Tree_it	src/confsearch.cpp	/^      typedef tree<PosePair>::iterator Tree_it;$/;"	t	class:OpenBabel::OBDiversePoses	file:
Tree_sit	src/confsearch.cpp	/^      typedef tree<PosePair>::sibling_iterator Tree_sit;$/;"	t	class:OpenBabel::OBDiversePoses	file:
Triangle	src/formats/stlformat.cpp	/^    Triangle(vector3 x, vector3 y, vector3 z, uint16_t colour ) {$/;"	f	struct:OpenBabel::Triangle
Triangle	src/formats/stlformat.cpp	/^  struct Triangle {$/;"	s	namespace:OpenBabel	file:
TriangleSign	src/stereo/perception.cpp	/^  double TriangleSign(const vector3 &a, const vector3 &b, const vector3 &c)$/;"	f	namespace:OpenBabel
TriangleSmooth	src/distgeom.cpp	/^  void OBDistanceGeometry::TriangleSmooth(int iterations)$/;"	f	class:OpenBabel::OBDistanceGeometry
Triclinic	include/openbabel/generic.h	/^                       Triclinic,$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
TrigonalBipyramidal	include/openbabel/stereo/stereo.h	/^      TrigonalBipyramidal = (1<<5), \/\/!< Trigonal-bipyramidal stereochemistry$/;"	e	enum:OpenBabel::OBStereo::Type
Trim	src/tokenst.cpp	/^  std::string& Trim(std::string& txt)$/;"	f	namespace:OpenBabel
TroeParams	include/openbabel/kinetics.h	/^  double TroeParams[4];$/;"	m	class:OpenBabel::OBRateData
True	src/rand.cpp	45;"	d	file:
TurbomoleFormat	src/formats/turbomoleformat.cpp	/^    TurbomoleFormat()$/;"	f	class:OpenBabel::TurbomoleFormat
TurbomoleFormat	src/formats/turbomoleformat.cpp	/^class TurbomoleFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
TwoThirdsPI	src/obutil.cpp	774;"	d	file:
Type	include/openbabel/stereo/stereo.h	/^    enum Type {$/;"	g	struct:OpenBabel::OBStereo
Type	src/formats/json/jsoncpp.cpp	/^   typedef AllocatedType Type;$/;"	t	class:Json::BatchAllocator	file:
Type	src/formats/smiley.h	/^      enum Type { SyntaxError, SemanticsError };$/;"	g	class:Smiley::Exception
Type	src/stereo/stereoutil.h	/^      Type = OBStereo::CisTrans,$/;"	e	enum:OpenBabel::OBStereoTypeTraits::__anon92
Type	src/stereo/stereoutil.h	/^      Type = OBStereo::Tetrahedral \/\/ the stereo type$/;"	e	enum:OpenBabel::OBStereoTypeTraits::__anon91
Type	src/tautomer.cpp	/^    enum Type {$/;"	g	struct:OpenBabel::TautomerImpl	file:
TypeID	include/openbabel/chargemodel.h	/^    const char* TypeID(){return "charges";};$/;"	f	class:OpenBabel::OBChargeModel
TypeID	include/openbabel/descriptor.h	/^  const char* TypeID(){return "descriptors";};$/;"	f	class:OpenBabel::OBDescriptor
TypeID	include/openbabel/fingerprint.h	/^const char* TypeID()$/;"	f	class:OpenBabel::OBFingerprint
TypeID	include/openbabel/forcefield.h	/^    const char* TypeID()$/;"	f	class:OpenBabel::OBForceField
TypeID	include/openbabel/format.h	/^    const char* TypeID(){ return "formats"; }$/;"	f	class:OpenBabel::OBFormat
TypeID	include/openbabel/op.h	/^  virtual const char* TypeID(){ return "ops"; }$/;"	f	class:OpenBabel::OBOp
TypeID	include/openbabel/plugin.h	/^  virtual const char* TypeID(){ return "plugins"; }$/;"	f	class:OpenBabel::OBPlugin
TypeID	src/ops/loader.cpp	/^  const char* TypeID(){return "loaders";};$/;"	f	class:OpenBabel::OBLoader
U	include/openbabel/residue.h	/^      U     = 28,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
U	src/formats/smiley.h	/^    Fr, Ra, Ac, Th, Pa,  U, Np, Pu, Am, Cm, Bk, Cf, Es, Fm, Md, No, Lr, Rf, Db, Sg, Bh, Hs, Mt, Ds, Rg, Cn, Fl = 114, Lv = 116$/;"	e	enum:Smiley::Elements
UCINT	include/inchi/incomdef.h	123;"	d
UINT16	include/chemdrawcdx.h	/^typedef unsigned short int UINT16;$/;"	t
UINT16	include/inchi/ikey_base26.h	/^typedef unsigned short int UINT16;$/;"	t
UINT32	include/chemdrawcdx.h	/^typedef unsigned int UINT32;$/;"	t
UINT32	include/inchi/ikey_base26.h	/^typedef unsigned int UINT32;$/;"	t
UInt	include/openbabel/json/json-forwards.h	/^   typedef unsigned int UInt;$/;"	t	namespace:Json
UInt	include/openbabel/json/json.h	/^      typedef Json::UInt UInt;$/;"	t	class:Json::Value
UInt	include/openbabel/json/json.h	/^   typedef unsigned int UInt;$/;"	t	namespace:Json
UInt64	include/openbabel/json/json-forwards.h	/^   typedef unsigned __int64 UInt64;$/;"	t	namespace:Json
UInt64	include/openbabel/json/json-forwards.h	/^   typedef unsigned long long int UInt64;$/;"	t	namespace:Json
UInt64	include/openbabel/json/json.h	/^      typedef Json::UInt64 UInt64;$/;"	t	class:Json::Value
UInt64	include/openbabel/json/json.h	/^   typedef unsigned __int64 UInt64;$/;"	t	namespace:Json
UInt64	include/openbabel/json/json.h	/^   typedef unsigned long long int UInt64;$/;"	t	namespace:Json
UIntToStringBuffer	src/formats/json/jsoncpp.cpp	/^typedef char UIntToStringBuffer[uintToStringBufferSize];$/;"	t	namespace:Json	file:
UMap	src/ops/unique.cpp	/^  typedef map<std::string, std::string> UMap;$/;"	t	class:OpenBabel::OpUnique	file:
UMap	src/ops/unique.cpp	/^  typedef unordered_map<std::string, std::string> UMap;$/;"	t	class:OpenBabel::OpUnique	file:
UNALIGNED_OK	include/zconf.h	92;"	d
UNASSIGNED	src/kekulize.cpp	43;"	d	file:
UNDERIVATIZE	include/inchi/mode.h	373;"	d
UNK	include/openbabel/residue.h	/^      UNK   = 43,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
UNKNOWN	include/openbabel/generic.h	/^   enum RType{UNKNOWN, ASYMMETRIC, SYMMETRIC, LINEAR};$/;"	e	enum:OpenBabel::OBRotationData::RType
UNKNOWN	src/formats/gamessukformat.cpp	/^    enum RunType_t { UNKNOWN, SINGLEPOINT, OPTXYZ, OPTZMAT, SADDLE, FREQUENCIES };$/;"	e	enum:OpenBabel::GAMESSUKOutputFormat::RunType_t	file:
UNKNOWN_VALUE	src/formats/mmcifformat.cpp	/^ static const string UNKNOWN_VALUE = "?";$/;"	m	namespace:OpenBabel	file:
UNUSED	include/openbabel/base.h	33;"	d
UNUSED	include/openbabel/base.h	35;"	d
UNUSED	include/openbabel/base.h	37;"	d
UPLUS	include/openbabel/residue.h	/^      UPLUS = 29,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
URI	include/libxml/entities.h	/^    const xmlChar           *URI;	\/* the full URI as computed *\/$/;"	m	struct:_xmlEntity
URL	include/libxml/tree.h	/^    const xmlChar  *URL;	\/* The URI for that document *\/$/;"	m	struct:_xmlDoc
USER_ACTION_QUIT	include/inchi/ichierr.h	154;"	d
USE_ALLOCA	include/inchi/mode.h	1014;"	d
USE_AUX_RANKING	include/inchi/mode.h	632;"	d
USE_AUX_RANKING_ALL	include/inchi/mode.h	633;"	d
USE_DISTANCES_FOR_RANKING	include/inchi/mode.h	555;"	d
USE_DISTANCES_FOR_RANKING	include/inchi/mode.h	589;"	d
USE_DISTANCES_FOR_RANKING	include/inchi/mode.h	590;"	d
USE_ISO_SORT_KEY_HFIXED	include/inchi/mode.h	635;"	d
USE_SYMMETRY_TO_ACCELERATE	include/inchi/mode.h	697;"	d
U_CHAR	include/inchi/inchi_api.h	/^typedef unsigned char U_CHAR;$/;"	t
U_CHAR	include/inchi/incomdef.h	/^typedef unsigned char U_CHAR;$/;"	t
U_CHAR	include/inchi_api.h	/^typedef unsigned char U_CHAR;$/;"	t
U_INT_08	src/formats/libinchi/ichican2.c	/^typedef unsigned char  U_INT_08;$/;"	t	file:
U_INT_32	src/formats/libinchi/ichican2.c	/^typedef unsigned long  U_INT_32;$/;"	t	file:
U_LONG_LEN	include/inchi/ichicant.h	68;"	d
U_SHORT	include/inchi/ichicant.h	/^typedef unsigned short U_SHORT;$/;"	t
U_SHORT	include/inchi/inchi_api.h	/^typedef unsigned short U_SHORT;$/;"	t
U_SHORT	include/inchi/incomdef.h	/^typedef unsigned short U_SHORT;$/;"	t
U_SHORT	include/inchi_api.h	/^typedef unsigned short U_SHORT;$/;"	t
UnMarkDisconnectedComponents	src/formats/libinchi/ichinorm.c	/^int UnMarkDisconnectedComponents( ORIG_ATOM_DATA *orig_inp_data )$/;"	f
UnMarkOneComponent	src/formats/libinchi/ichinorm.c	/^int UnMarkOneComponent( inp_ATOM *at, int num_atoms )$/;"	f
UnMarkOtherIndicators	src/formats/libinchi/ichinorm.c	/^int UnMarkOtherIndicators( inp_ATOM *at, int num_atoms )$/;"	f
UnMarkRingSystemsInp	src/formats/libinchi/ichinorm.c	/^int UnMarkRingSystemsInp( inp_ATOM *at, int num_atoms )$/;"	f
UnaryOpWithoutArgument	src/formats/smiley.h	/^    UnaryOpWithoutArgument = 14,$/;"	e	enum:Smiley::ErrorCode
Unassigned	src/tautomer.cpp	/^      Unassigned,$/;"	e	enum:OpenBabel::TautomerImpl::Type	file:
Undefined	include/openbabel/generic.h	/^    enum LatticeType { Undefined,$/;"	e	enum:OpenBabel::OBUnitCell::LatticeType
Undefined	include/openbabel/grid.h	/^  typedef enum { Undefined = -1, PLP, ChemScore } score_t;$/;"	e	enum:OpenBabel::__anon43
UndefinedData	include/openbabel/base.h	/^      UndefinedData =      0,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
UniChemFormat	src/formats/unichemformat.cpp	/^    UniChemFormat()$/;"	f	class:OpenBabel::UniChemFormat
UniChemFormat	src/formats/unichemformat.cpp	/^class UniChemFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
UniqueStereoSpecificProbes	include/openbabel/spectrophore.h	/^                            UniqueStereoSpecificProbes,$/;"	e	enum:OpenBabel::OBSpectrophore::StereoOption
Unit	include/openbabel/data.h	/^    std::string Unit()    { return _unit; }$/;"	f	class:OpenBabel::OBAtomHOF
Unit	include/openbabel/griddata.h	/^    typedef enum { BOHR, ANGSTROM, OTHER } Unit;$/;"	t	class:OpenBabel::OBGridData	typeref:enum:OpenBabel::OBGridData::__anon44
UnitCell	include/openbabel/base.h	/^      UnitCell =          12,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
UnitNameToConversionFactor	src/data.cpp	/^  static double UnitNameToConversionFactor(const char* unit) {$/;"	f	namespace:OpenBabel
Unknown	include/openbabel/pointgroup.h	/^        Unknown \/\/ 59$/;"	e	enum:OpenBabel::OBPointGroup::Symbol
Unknown	src/formats/mdlformat.cpp	/^        NotStereo, Clockwise, AntiClockwise, Unknown$/;"	e	enum:OpenBabel::MDLFormat::Parity	file:
UnknownDir	include/openbabel/stereo/stereo.h	/^      UnknownDir =  4$/;"	e	enum:OpenBabel::OBStereo::BondDirection
UnknownSequence	src/formats/fastaformat.cpp	/^        UnknownSequence,$/;"	e	enum:OpenBabel::FASTAFormat::SequenceType	file:
UnknownSequence	src/formats/genbankformat.cpp	/^      UnknownSequence,$/;"	e	enum:OpenBabel::GenBankFormat::SequenceType	file:
UnknownToken	src/formats/mmcifformat.cpp	/^     UnknownToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
UnknownWinding	include/openbabel/stereo/stereo.h	/^      UnknownWinding = 3 \/\/!< The configuration is specified as unknown (squiggly line in depiction)$/;"	e	enum:OpenBabel::OBStereo::Winding
UnmarkAllUndefinedUnknownStereo	src/formats/libinchi/ichimak2.c	/^INCHI_MODE UnmarkAllUndefinedUnknownStereo( INChI_Stereo *Stereo, INCHI_MODE nUserMode )$/;"	f
UnmarkNonStereo	src/formats/libinchi/ichicans.c	/^int UnmarkNonStereo( sp_ATOM *at, int num_atoms, const AT_RANK *nRank, const AT_RANK *nAtomNumber, int bIsotopic )$/;"	f
UnmatchedBranchClosing	src/formats/smiley.h	/^    UnmatchedBranchClosing = 6,$/;"	e	enum:Smiley::ErrorCode
UnmatchedBranchOpening	src/formats/smiley.h	/^    UnmatchedBranchOpening = 5,$/;"	e	enum:Smiley::ErrorCode
UnmatchedRingBond	src/formats/smiley.h	/^    UnmatchedRingBond = 64,$/;"	e	enum:Smiley::ErrorCode
UnorderedPartition	src/formats/libinchi/ichican2.c	/^} UnorderedPartition;$/;"	t	typeref:struct:tagUnorderedPartition	file:
UnorderedPartitionCreate	src/formats/libinchi/ichican2.c	/^int UnorderedPartitionCreate( UnorderedPartition *p, int n )$/;"	f
UnorderedPartitionFree	src/formats/libinchi/ichican2.c	/^void UnorderedPartitionFree( UnorderedPartition *p )$/;"	f
UnorderedPartitionJoin	src/formats/libinchi/ichican2.c	/^int UnorderedPartitionJoin( UnorderedPartition *p1, UnorderedPartition *p2, int n )$/;"	f
UnorderedPartitionMakeDiscrete	src/formats/libinchi/ichican2.c	/^void UnorderedPartitionMakeDiscrete( UnorderedPartition *p, int n)$/;"	f
UnpackCoordinate	src/rotamer.cpp	/^  void UnpackCoordinate(double c[3],double max[3],int tmp)$/;"	f	namespace:OpenBabel
UnsetAromatic	include/openbabel/atom.h	/^      void UnsetAromatic()                { _flags &= (~(OB_AROMATIC_ATOM)); }$/;"	f	class:OpenBabel::OBAtom
UnsetAromatic	include/openbabel/bond.h	/^      void UnsetAromatic()  { UnsetFlag(OB_AROMATIC_BOND);}$/;"	f	class:OpenBabel::OBBond
UnsetAromaticPerceived	include/openbabel/mol.h	/^    void   UnsetAromaticPerceived()  { _flags &= (~(OB_AROMATIC_MOL));   }$/;"	f	class:OpenBabel::OBMol
UnsetDown	include/openbabel/bond.h	/^      void UnsetDown()      { UnsetFlag(OB_TORDOWN_BOND); }$/;"	f	class:OpenBabel::OBBond
UnsetFixAtom	src/forcefield.cpp	/^  void OBForceField::UnsetFixAtom()$/;"	f	class:OpenBabel::OBForceField
UnsetFlag	include/openbabel/bond.h	/^      void UnsetFlag(int flag) { _flags &= (~(flag)); }$/;"	f	class:OpenBabel::OBBond
UnsetFlag	include/openbabel/mol.h	/^    void   UnsetFlag(int flag)       { _flags &= (~(flag));              }$/;"	f	class:OpenBabel::OBMol
UnsetHash	include/openbabel/bond.h	/^      void UnsetHash()      { UnsetFlag(OB_HASH_BOND);    }$/;"	f	class:OpenBabel::OBBond
UnsetHydrogensAdded	include/openbabel/mol.h	/^    void   UnsetHydrogensAdded()       { UnsetFlag(OB_H_ADDED_MOL);     }$/;"	f	class:OpenBabel::OBMol
UnsetIgnoreAtom	src/forcefield.cpp	/^  void OBForceField::UnsetIgnoreAtom()$/;"	f	class:OpenBabel::OBForceField
UnsetImplicitValencePerceived	include/openbabel/mol.h	/^    void   UnsetImplicitValencePerceived(){_flags &= (~(OB_IMPVAL_MOL)); }$/;"	f	class:OpenBabel::OBMol
UnsetKeepRings	include/openbabel/builder.h	/^      void UnsetKeepRings() { _keeprings = false; }$/;"	f	class:OpenBabel::OBBuilder
UnsetKekule	include/openbabel/bond.h	/^      void UnsetKekule()$/;"	f	class:OpenBabel::OBBond
UnsetLSSRPerceived	include/openbabel/mol.h	/^    void   UnsetLSSRPerceived()  { _flags &= (~(OB_LSSR_MOL));   }$/;"	f	class:OpenBabel::OBMol
UnsetPartialChargesPerceived	include/openbabel/mol.h	/^    void   UnsetPartialChargesPerceived(){ _flags &= (~(OB_PCHARGE_MOL));}$/;"	f	class:OpenBabel::OBMol
UnsetRingTypesPerceived	include/openbabel/mol.h	/^    void   UnsetRingTypesPerceived()  { _flags &= (~(OB_RINGTYPES_MOL));   }$/;"	f	class:OpenBabel::OBMol
UnsetSSSRPerceived	include/openbabel/mol.h	/^    void   UnsetSSSRPerceived()  { _flags &= (~(OB_SSSR_MOL));   }$/;"	f	class:OpenBabel::OBMol
UnsetStereo	include/openbabel/atom.h	/^      void UnsetStereo()$/;"	f	class:OpenBabel::OBAtom
UnsetUp	include/openbabel/bond.h	/^      void UnsetUp()        { UnsetFlag(OB_TORUP_BOND);   }$/;"	f	class:OpenBabel::OBBond
UnsetWedge	include/openbabel/bond.h	/^      void UnsetWedge()     { UnsetFlag(OB_WEDGE_BOND);   }$/;"	f	class:OpenBabel::OBBond
Up	src/depict/depict.cpp	/^    Up,$/;"	e	enum:OpenBabel::__anon74	file:
UpBond	include/openbabel/stereo/stereo.h	/^      UpBond =      1,$/;"	e	enum:OpenBabel::OBStereo::BondDirection
UpDown	src/formats/smileyformat.cpp	/^    enum UpDown {$/;"	g	struct:OpenBabel::OpenBabelCallback	file:
UpOne	src/formats/pdbqtformat.cpp	/^    unsigned int UpOne() {if (parents.size()>=2) {return parents.at(parents.size()-2);} return 0;}$/;"	f	class:OpenBabel::branch
UpdateCompareLayers	src/formats/libinchi/ichican2.c	/^void UpdateCompareLayers( kLeast kLeastForLayer[], int hzz )$/;"	f
UpdateConformers	include/openbabel/forcefield.h	/^    bool UpdateConformers(OBMol &mol) { return GetConformers(mol); }$/;"	f	class:OpenBabel::OBForceField
UpdateConformersFromTree	src/confsearch.cpp	/^void UpdateConformersFromTree(OBMol* mol, vector<double> &energies, OBDiversePoses* divposes, bool verbose) {$/;"	f	namespace:OpenBabel
UpdateCoordinates	include/openbabel/forcefield.h	/^    bool UpdateCoordinates(OBMol &mol) {return GetCoordinates(mol); }$/;"	f	class:OpenBabel::OBForceField
UpdateCoords	src/math/align.cpp	/^  bool OBAlign::UpdateCoords(OBMol* target) {$/;"	f	class:OpenBabel::OBAlign
UpdateFullLinearCT	src/formats/libinchi/ichicano.c	/^int UpdateFullLinearCT( int num_atoms, int num_at_tg, sp_ATOM* at, AT_RANK *nRank, AT_RANK *nAtomNumber,$/;"	f
UpdateMcr	src/canon.cpp	/^    static void UpdateMcr(OBBitVec &mcr, Orbits &orbits, OBMol *mol, const std::vector<unsigned int> &bestLabels)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
UpdatePairsSimple	src/forcefield.cpp	/^  void OBForceField::UpdatePairsSimple()$/;"	f	class:OpenBabel::OBForceField
UserAction	src/formats/libinchi/runichi.c	/^int (*UserAction)(void)  = NULL; \/*  callback *\/$/;"	v
V	src/forcefields/forcefieldghemical.h	/^      double V, s, n, tor;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
V	src/forcefields/forcefielduff.h	/^      double V, tor, cosNPhi0;$/;"	m	class:OpenBabel::OBFFTorsionCalculationUFF
V	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
VAL	include/openbabel/residue.h	/^      VAL   =  4,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
VALUE_OCTET	include/inchi/ichirvrs.h	55;"	d
VAL_AT	include/inchi/ichirvrs.h	/^} VAL_AT;$/;"	t	typeref:struct:tagAtomIonPrperies
VAL_BASE	include/inchi/ichirvrs.h	154;"	d
VAL_LENGTH	include/inchi/ichirvrs.h	159;"	d
VAL_MAX_CHARGE	include/inchi/ichirvrs.h	156;"	d
VAL_MIN_CHARGE	include/inchi/ichirvrs.h	155;"	d
VAL_NEGAT_CHARGE	include/inchi/ichirvrs.h	160;"	d
VAL_NEUTR_CHARGE	include/inchi/ichirvrs.h	161;"	d
VAL_NEUTR_ORDER	include/inchi/ichirvrs.h	158;"	d
VAL_NUMBER	include/inchi/ichirvrs.h	157;"	d
VAL_POSIT_CHARGE	include/inchi/ichirvrs.h	162;"	d
VARIABLES	src/formats/gamessukformat.cpp	/^    enum ReadMode_t {CARTESIAN, ZMATRIX, VARIABLES, CONSTANTS, SKIP};$/;"	e	enum:OpenBabel::GAMESSUKFormat::ReadMode_t	file:
VASPFormat	src/formats/vaspformat.cpp	/^    VASPFormat()$/;"	f	class:OpenBabel::VASPFormat
VASPFormat	src/formats/vaspformat.cpp	/^  class VASPFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
VCF	include/inchi/ichirvrs.h	/^} VCF;$/;"	t	typeref:struct:tagVertCapFlow
VC_EXTRALEAN	src/dlhandler_win32.cpp	24;"	d	file:
VER103_DEFAULT_MODE	include/inchi/ichiparm.h	102;"	d
VERBOSE_VISITORS	include/OB-BGL/verbose_visitors.h	20;"	d
VER_STRING	src/formats/libinchi/ichiprt1.c	/^char VER_STRING[64];$/;"	v
VF	src/formats/libinchi/ichirvr1.c	/^} VF;$/;"	t	typeref:struct:tagVertexFlow	file:
VF2Mapper	src/isomorphism.cpp	/^      VF2Mapper(OBQuery *query) : OBIsomorphismMapper(query)$/;"	f	class:OpenBabel::VF2Mapper
VF2Mapper	src/isomorphism.cpp	/^  class VF2Mapper : public OBIsomorphismMapper$/;"	c	namespace:OpenBabel	file:
VF_USED_ALL	src/formats/libinchi/ichirvr1.c	3552;"	d	file:
VF_USED_IN	src/formats/libinchi/ichirvr1.c	3550;"	d	file:
VF_USED_OUT	src/formats/libinchi/ichirvr1.c	3551;"	d	file:
VIBRATIONS_TABLE_PATTERN	src/formats/nwchemformat.cpp	/^static const char* VIBRATIONS_TABLE_PATTERN = "P.Frequency";$/;"	m	namespace:OpenBabel	file:
Val	include/inchi/ichiring.h	/^    QINT_TYPE *Val;$/;"	m	struct:tagQieue
ValenceSum	src/mol.cpp	/^  static int ValenceSum(OBAtom *atom)$/;"	f	namespace:OpenBabel
Validate	include/openbabel/forcefield.h	/^    virtual bool Validate() { return false; }$/;"	f	class:OpenBabel::OBForceField
Validate	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::Validate ()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ValidateConjugateGradients	src/forcefield.cpp	/^  void OBForceField::ValidateConjugateGradients(int steps)$/;"	f	class:OpenBabel::OBForceField
ValidateGradientError	src/forcefield.cpp	/^  vector3 OBForceField::ValidateGradientError(vector3 &numgrad, vector3 &anagrad)$/;"	f	class:OpenBabel::OBForceField
ValidateGradients	include/openbabel/forcefield.h	/^    virtual bool ValidateGradients() { return false; }$/;"	f	class:OpenBabel::OBForceField
ValidateGradients	src/forcefields/forcefieldgaff.cpp	/^  bool OBForceFieldGaff::ValidateGradients ()$/;"	f	class:OpenBabel::OBForceFieldGaff
ValidateGradients	src/forcefields/forcefieldghemical.cpp	/^  bool OBForceFieldGhemical::ValidateGradients ()$/;"	f	class:OpenBabel::OBForceFieldGhemical
ValidateGradients	src/forcefields/forcefieldmmff94.cpp	/^  bool OBForceFieldMMFF94::ValidateGradients ()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
ValidateGradients	src/forcefields/forcefielduff.cpp	/^  bool OBForceFieldUFF::ValidateGradients ()$/;"	f	class:OpenBabel::OBForceFieldUFF
ValidateLineSearch	src/forcefield.cpp	/^  vector3 OBForceField::ValidateLineSearch(OBAtom *atom, vector3 &direction)$/;"	f	class:OpenBabel::OBForceField
ValidateSteepestDescent	src/forcefield.cpp	/^  void OBForceField::ValidateSteepestDescent(int steps)$/;"	f	class:OpenBabel::OBForceField
Value	include/openbabel/data.h	/^    double Value()        { return _value; }$/;"	f	class:OpenBabel::OBAtomHOF
Value	include/openbabel/json/json.h	/^   class JSON_API Value $/;"	c	namespace:Json
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( Int value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( Int64 value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( UInt value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( UInt64 value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( ValueType type )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( bool value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( const CppTL::ConstString &value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( const StaticString &value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( const Value &other )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( const char *beginValue, $/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( const char *value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( const std::string &value )$/;"	f	class:Json::Value
Value	src/formats/json/jsoncpp.cpp	/^Value::Value( double value )$/;"	f	class:Json::Value
ValueArrayAllocator	include/openbabel/json/json.h	/^   class JSON_API ValueArrayAllocator$/;"	c	namespace:Json
ValueConstIterator	include/openbabel/json/json.h	/^   class ValueConstIterator : public ValueIteratorBase$/;"	c	namespace:Json
ValueConstIterator	src/formats/json/jsoncpp.cpp	/^ValueConstIterator::ValueConstIterator( const Value::ObjectValues::iterator &current )$/;"	f	class:Json::ValueConstIterator
ValueConstIterator	src/formats/json/jsoncpp.cpp	/^ValueConstIterator::ValueConstIterator( const ValueInternalArray::IteratorState &state )$/;"	f	class:Json::ValueConstIterator
ValueConstIterator	src/formats/json/jsoncpp.cpp	/^ValueConstIterator::ValueConstIterator( const ValueInternalMap::IteratorState &state )$/;"	f	class:Json::ValueConstIterator
ValueConstIterator	src/formats/json/jsoncpp.cpp	/^ValueConstIterator::ValueConstIterator()$/;"	f	class:Json::ValueConstIterator
ValueHolder	include/openbabel/json/json.h	/^      union ValueHolder$/;"	u	class:Json::Value
ValueInternalArray	include/openbabel/json/json.h	/^   class JSON_API ValueInternalArray$/;"	c	namespace:Json
ValueInternalLink	include/openbabel/json/json.h	/^   class JSON_API ValueInternalLink$/;"	c	namespace:Json
ValueInternalMap	include/openbabel/json/json.h	/^   class JSON_API ValueInternalMap$/;"	c	namespace:Json
ValueIterator	include/openbabel/json/json.h	/^   class ValueIterator : public ValueIteratorBase$/;"	c	namespace:Json
ValueIterator	src/formats/json/jsoncpp.cpp	/^ValueIterator::ValueIterator( const Value::ObjectValues::iterator &current )$/;"	f	class:Json::ValueIterator
ValueIterator	src/formats/json/jsoncpp.cpp	/^ValueIterator::ValueIterator( const ValueConstIterator &other )$/;"	f	class:Json::ValueIterator
ValueIterator	src/formats/json/jsoncpp.cpp	/^ValueIterator::ValueIterator( const ValueInternalArray::IteratorState &state )$/;"	f	class:Json::ValueIterator
ValueIterator	src/formats/json/jsoncpp.cpp	/^ValueIterator::ValueIterator( const ValueInternalMap::IteratorState &state )$/;"	f	class:Json::ValueIterator
ValueIterator	src/formats/json/jsoncpp.cpp	/^ValueIterator::ValueIterator( const ValueIterator &other )$/;"	f	class:Json::ValueIterator
ValueIterator	src/formats/json/jsoncpp.cpp	/^ValueIterator::ValueIterator()$/;"	f	class:Json::ValueIterator
ValueIteratorBase	include/openbabel/json/json.h	/^   class ValueIteratorBase$/;"	c	namespace:Json
ValueIteratorBase	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::ValueIteratorBase( const Value::ObjectValues::iterator &current )$/;"	f	class:Json::ValueIteratorBase
ValueIteratorBase	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::ValueIteratorBase( const ValueInternalArray::IteratorState &state )$/;"	f	class:Json::ValueIteratorBase
ValueIteratorBase	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::ValueIteratorBase( const ValueInternalMap::IteratorState &state )$/;"	f	class:Json::ValueIteratorBase
ValueIteratorBase	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::ValueIteratorBase()$/;"	f	class:Json::ValueIteratorBase
ValueMapAllocator	include/openbabel/json/json.h	/^   class JSON_API ValueMapAllocator$/;"	c	namespace:Json
ValueOrKeyToken	src/formats/mmcifformat.cpp	/^     ValueOrKeyToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
ValueToken	src/formats/mmcifformat.cpp	/^     ValueToken,$/;"	e	enum:OpenBabel::CIFLexer::TokenType	file:
ValueType	include/openbabel/json/json.h	/^   enum ValueType$/;"	g	namespace:Json
VectorAdd	include/openbabel/forcefield.h	/^    static void VectorAdd(double *i, double *j, double *result)$/;"	f	class:OpenBabel::OBForceField
VectorAngle	src/forcefield.cpp	/^  double OBForceField::VectorAngle(double *pos_i, double *pos_j, double *pos_k)$/;"	f	class:OpenBabel::OBForceField
VectorAngleDerivative	src/forcefield.cpp	/^  double OBForceField::VectorAngleDerivative(double *pos_i, double *pos_j, double *pos_k,$/;"	f	class:OpenBabel::OBForceField
VectorAngleDerivative	src/forcefield.cpp	/^  double OBForceField::VectorAngleDerivative(vector3 &i, vector3 &j, vector3 &k)$/;"	f	class:OpenBabel::OBForceField
VectorBondDerivative	src/forcefield.cpp	/^  double OBForceField::VectorBondDerivative(double *pos_i, double *pos_j,$/;"	f	class:OpenBabel::OBForceField
VectorClear	include/openbabel/forcefield.h	/^    static void VectorClear(double *i)$/;"	f	class:OpenBabel::OBForceField
VectorCopy	include/openbabel/forcefield.h	/^    static void VectorCopy(double *from, double *to)$/;"	f	class:OpenBabel::OBForceField
VectorCross	include/openbabel/forcefield.h	/^    static void VectorCross(double *i, double *j, double *result)$/;"	f	class:OpenBabel::OBForceField
VectorData	include/openbabel/base.h	/^      VectorData =        25,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
VectorDistance	include/openbabel/forcefield.h	/^    static double VectorDistance(double *pos_i, double *pos_j)$/;"	f	class:OpenBabel::OBForceField
VectorDistanceDerivative	src/forcefield.cpp	/^  double OBForceField::VectorDistanceDerivative(const double* const pos_i, const double* const pos_j,$/;"	f	class:OpenBabel::OBForceField
VectorDivide	include/openbabel/forcefield.h	/^    static void VectorDivide(double *i, double n, double *result)$/;"	f	class:OpenBabel::OBForceField
VectorDot	include/openbabel/forcefield.h	/^    static double VectorDot(double *i, double *j)$/;"	f	class:OpenBabel::OBForceField
VectorLength	include/openbabel/forcefield.h	/^    static double VectorLength(double *i)$/;"	f	class:OpenBabel::OBForceField
VectorLengthDerivative	src/forcefield.cpp	/^  double OBForceField::VectorLengthDerivative(vector3 &a, vector3 &b)$/;"	f	class:OpenBabel::OBForceField
VectorMultiply	include/openbabel/forcefield.h	/^    static void VectorMultiply(const double* const i, const double n, double *result)$/;"	f	class:OpenBabel::OBForceField
VectorMultiply	include/openbabel/forcefield.h	/^    static void VectorMultiply(double *i, double n, double *result)$/;"	f	class:OpenBabel::OBForceField
VectorNormalize	include/openbabel/forcefield.h	/^    static void VectorNormalize(double *i)$/;"	f	class:OpenBabel::OBForceField
VectorOOP	src/forcefield.cpp	/^  double OBForceField::VectorOOP(double *pos_i, double *pos_j, double *pos_k, double *pos_l)$/;"	f	class:OpenBabel::OBForceField
VectorOOPDerivative	src/forcefield.cpp	/^  double OBForceField::VectorOOPDerivative(double *pos_i, double *pos_j, double *pos_k, double *pos_l,$/;"	f	class:OpenBabel::OBForceField
VectorOOPDerivative	src/forcefield.cpp	/^  double OBForceField::VectorOOPDerivative(vector3 &i, vector3 &j, vector3 &k, vector3 &l)$/;"	f	class:OpenBabel::OBForceField
VectorSelfMultiply	include/openbabel/forcefield.h	/^    static void VectorSelfMultiply(double *i, double n)$/;"	f	class:OpenBabel::OBForceField
VectorSubtract	include/openbabel/forcefield.h	/^    static void VectorSubtract(const double* const i, const double* const j, double *result)$/;"	f	class:OpenBabel::OBForceField
VectorSubtract	include/openbabel/forcefield.h	/^    static void VectorSubtract(double *i, double *j, double *result)$/;"	f	class:OpenBabel::OBForceField
VectorTorsion	src/forcefield.cpp	/^  double OBForceField::VectorTorsion(double *pos_i, double *pos_j, double *pos_k, double *pos_l)$/;"	f	class:OpenBabel::OBForceField
VectorTorsionDerivative	src/forcefield.cpp	/^  double OBForceField::VectorTorsionDerivative(double *pos_i, double *pos_j, double *pos_k, double *pos_l,$/;"	f	class:OpenBabel::OBForceField
VectorTorsionDerivative	src/forcefield.cpp	/^  double OBForceField::VectorTorsionDerivative(vector3 &i, vector3 &j, vector3 &k, vector3 &l)$/;"	f	class:OpenBabel::OBForceField
VectorsToMatrix	src/math/align.cpp	/^  void OBAlign::VectorsToMatrix(const vector<vector3> *pcoords, Eigen::MatrixXd &coords) {$/;"	f	class:OpenBabel::OBAlign
Vertex	include/inchi/ichi_bns.h	/^typedef S_SHORT  Vertex;$/;"	t
VertexFlow	include/inchi/ichi_bns.h	/^typedef S_SHORT VertexFlow;$/;"	t
Vertex_s	include/inchi/ichi_bns.h	141;"	d
Vertex_t	include/inchi/ichi_bns.h	142;"	d
VibrationData	include/openbabel/base.h	/^      VibrationData =     20,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
View	include/openbabel/stereo/stereo.h	/^    enum View$/;"	g	struct:OpenBabel::OBStereo
ViewFrom	include/openbabel/stereo/stereo.h	/^      ViewFrom = 1, \/\/!< view from the atom (id parameter) towards the center atom$/;"	e	enum:OpenBabel::OBStereo::View
ViewMolFormat	src/formats/viewmolformat.cpp	/^  ViewMolFormat()$/;"	f	class:OpenBabel::ViewMolFormat
ViewMolFormat	src/formats/viewmolformat.cpp	/^class ViewMolFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ViewTowards	include/openbabel/stereo/stereo.h	/^      ViewTowards = 2 \/\/!< view from center atom towards the atom (id paramater)$/;"	e	enum:OpenBabel::OBStereo::View
VirtualBondData	include/openbabel/base.h	/^      VirtualBondData =    7,$/;"	e	enum:OpenBabel::OBGenericDataType::__anon41
Visit	include/openbabel/atom.h	/^      bool Visit;$/;"	m	class:OpenBabel::OBAtom
Visit	include/openbabel/bond.h	/^      bool Visit;$/;"	m	class:OpenBabel::OBBond
Voltage	src/charges/qeq.h	/^  VectorXd Electronegativity, Voltage, Charge;$/;"	m	class:OpenBabel::QEqCharges
Voltage	src/charges/qtpie.h	/^  VectorXd Electronegativity, Voltage, Charge;$/;"	m	class:OpenBabel::QTPIECharges
VolumeSign	src/stereo/perception.cpp	/^  double VolumeSign(const vector3 &a, const vector3 &b, const vector3 &c, const vector3 &d)$/;"	f	namespace:OpenBabel
W	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
WARN_FAILED_ISOTOPIC	include/inchi/ichi.h	71;"	d
WARN_FAILED_ISOTOPIC_STEREO	include/inchi/ichi.h	72;"	d
WARN_FAILED_STEREO	include/inchi/ichi.h	70;"	d
WATER	include/openbabel/residue.h	/^      WATER        = 9$/;"	e	enum:OpenBabel::OBResidueProperty::__anon62
WIN32	include/zconf.h	73;"	d
WINDOWS	include/zconf.h	69;"	d
WITHOUT_TRIO	include/libxml/xmlversion.h	77;"	d
WITHOUT_TRIO	include/libxml/xmlwin32version.h	68;"	d
WITH_TRIO	include/libxml/xmlversion.h	85;"	d
WORDMASK	include/openbabel/bitvec.h	40;"	d
WORDROLL	include/openbabel/bitvec.h	38;"	d
WORDSIZE_OF_BITSIZE	include/openbabel/bitvec.h	42;"	d
WORSE_PARITY	include/inchi/mode.h	705;"	d
WORSE_PARITY	include/inchi/mode.h	710;"	d
WRITEBINARY	include/openbabel/format.h	37;"	d
WRITEONEONLY	include/openbabel/format.h	36;"	d
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnAbout(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnChangeFormat(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnConvert(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnCopyToInput(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnGetInputFile(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnGetOutputFile(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnHelp(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnInFormatInfo(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnOutFormatInfo(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnQuit(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/OBGUI.cpp	/^void OBGUIFrame::OnSaveInputText(wxCommandEvent& WXUNUSED(event))$/;"	f	class:OBGUIFrame
WXUNUSED	src/GUI/selformats.h	/^	void OnOK(wxCommandEvent& WXUNUSED(event))$/;"	f	class:SelFormatsDialog
WarningFlags	include/inchi/inchi_api.h	/^    unsigned long  WarningFlags[2][2]; \/* warnings, see INCHIDIFF in inchicmp.h *\/$/;"	m	struct:tagINCHI_OutputStruct
WarningFlags	include/inchi_api.h	/^    unsigned long  WarningFlags[2][2]; \/* warnings, see INCHIDIFF in inchicmp.h *\/$/;"	m	struct:tagINCHI_OutputStruct
Wedge	include/openbabel/bond.h	/^        Wedge       = (1<<2),  \/\/!< A solid black wedge in 2D representations -- i.e., "up" from the 2D plane$/;"	e	enum:OpenBabel::OBBond::StereoFlag
WedgeOrHash	include/openbabel/bond.h	/^        WedgeOrHash = (1<<11), \/\/!< The bond is either wedge or hash, this is a seperate flag!$/;"	e	enum:OpenBabel::OBBond::StereoFlag
WeightedRotorSearch	src/forcefield.cpp	/^  void OBForceField::WeightedRotorSearch(unsigned int conformers, unsigned int geomSteps,$/;"	f	class:OpenBabel::OBForceField
Winding	include/openbabel/stereo/stereo.h	/^    enum Winding {$/;"	g	struct:OpenBabel::OBStereo
WorksWith	include/openbabel/optransform.h	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpTransform
WorksWith	src/alias.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpGenAlias
WorksWith	src/ops/addfilename.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return true; } \/\/all OBBase objects$/;"	f	class:OpenBabel::OpAddFileName
WorksWith	src/ops/addinindex.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return true; } \/\/all objects$/;"	f	class:OpenBabel::OpAddInIndex
WorksWith	src/ops/addnonpolarh.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpAddNonPolarH
WorksWith	src/ops/addpolarh.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpAddPolarH
WorksWith	src/ops/canonical.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpCanonical
WorksWith	src/ops/changecell.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpChangeCell
WorksWith	src/ops/conformer.cpp	/^      virtual bool WorksWith(OBBase* pOb) const$/;"	f	class:OpenBabel::OpConformer
WorksWith	src/ops/delnonpolarh.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpDelNonPolarH
WorksWith	src/ops/delpolarh.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpDelPolarH
WorksWith	src/ops/fillUC.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpFillUC
WorksWith	src/ops/forcefield.cpp	/^      virtual bool WorksWith(OBBase* pOb) const$/;"	f	class:OpenBabel::OpEnergy
WorksWith	src/ops/forcefield.cpp	/^      virtual bool WorksWith(OBBase* pOb) const$/;"	f	class:OpenBabel::OpMinimize
WorksWith	src/ops/gen2D.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpGen2D
WorksWith	src/ops/gen3d.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpGen3D
WorksWith	src/ops/largest.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpLargest
WorksWith	src/ops/op2d.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::Op2D
WorksWith	src/ops/opalign.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpAlign
WorksWith	src/ops/opconfab.cpp	/^      virtual bool WorksWith(OBBase* pOb) const$/;"	f	class:OpenBabel::OpConfab
WorksWith	src/ops/ophighlight.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpHighlight
WorksWith	src/ops/opisomorph.h	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpNewS
WorksWith	src/ops/opsplit.cpp	/^  virtual bool WorksWith(OBBase* pOb)const { return true; } \/\/all OBBase objects$/;"	f	class:OpenBabel::OpSplit
WorksWith	src/ops/partialcharges.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpPartialCharge
WorksWith	src/ops/readconformers.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpReadConformers
WorksWith	src/ops/sort.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpSort
WorksWith	src/ops/unique.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpUnique
WorksWith	src/ops/xout.cpp	/^  virtual bool WorksWith(OBBase* pOb)const{ return dynamic_cast<OBMol*>(pOb)!=NULL; }$/;"	f	class:OpenBabel::OpExtraOut
WrapCartesianCoordinate	src/generic.cpp	/^  vector3 OBUnitCell::WrapCartesianCoordinate(vector3 cart) const$/;"	f	class:OpenBabel::OBUnitCell
WrapFractionalCoordinate	src/generic.cpp	/^  vector3 OBUnitCell::WrapFractionalCoordinate(vector3 frac) const$/;"	f	class:OpenBabel::OBUnitCell
Write	include/openbabel/grid.h	/^    virtual bool   Write(std::string)  {      return false;    }$/;"	f	class:OpenBabel::OBScoreGrid
Write	src/depict/asciipainter.cpp	/^  void ASCIIPainter::Write(std::ostream &ofs)$/;"	f	class:OpenBabel::ASCIIPainter
Write	src/obconversion.cpp	/^  bool OBConversion::Write(OBBase* pOb, ostream* pos)$/;"	f	class:OpenBabel::OBConversion
Write32	src/formats/pngformat.cpp	/^  void Write32(unsigned long val, ostream& ofs)$/;"	f	class:OpenBabel::PNGFormat	file:
WriteAngles	src/formats/reportformat.cpp	/^  void ReportFormat::WriteAngles(ostream &ofs,OBMol &mol)$/;"	f	class:OpenBabel::ReportFormat
WriteBondStereo	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::WriteBondStereo(OBBond* pbond, vector<string>& atomIDs)$/;"	f	class:OpenBabel::CMLFormat
WriteCRK	src/formats/crkformat.cpp	/^  void CRK2DFormat::WriteCRK(std::ostream &ofs,OBMol &mol,bool GroupCharges)$/;"	f	class:OpenBabel::CRK2DFormat
WriteCSRCoords	src/formats/CSRformat.cpp	/^  void CSRFormat::WriteCSRCoords(ostream &ofs,OBMol &mol)$/;"	f	class:OpenBabel::CSRFormat
WriteCSRHeader	src/formats/CSRformat.cpp	/^  void CSRFormat::WriteCSRHeader(ostream &ofs,OBMol &mol)$/;"	f	class:OpenBabel::CSRFormat
WriteCharges	src/formats/reportformat.cpp	/^  void ReportFormat::WriteCharges(ostream &ofs,OBMol &mol)$/;"	f	class:OpenBabel::ReportFormat
WriteChem3d	src/formats/chem3dformat.cpp	/^  bool CHEM3D1Format::WriteChem3d(ostream &ofs,OBMol &mol, const char *mol_typ)$/;"	f	class:OpenBabel::CHEM3D1Format
WriteChemObject	include/openbabel/format.h	/^    virtual bool WriteChemObject(OBConversion* \/*pConv*\/)$/;"	f	class:OpenBabel::OBFormat
WriteChemObject	include/openbabel/obmolecformat.h	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::OBMoleculeFormat
WriteChemObject	include/openbabel/xml.h	/^      virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::XMLMoleculeFormat
WriteChemObject	src/formats/chemkinformat.cpp	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat	file:
WriteChemObject	src/formats/copyformat.cpp	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::CopyFormat
WriteChemObject	src/formats/fastsearchformat.cpp	/^  bool FastSearchFormat::WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::FastSearchFormat
WriteChemObject	src/formats/nulformat.cpp	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::NulFormat
WriteChemObject	src/formats/png2format.cpp	/^bool PNG2Format::WriteChemObject(OBConversion* pConv) \/\/ Taken from svgformat.cpp$/;"	f	class:OpenBabel::PNG2Format
WriteChemObject	src/formats/pngformat.cpp	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::PNGFormat
WriteChemObject	src/formats/rsmiformat.cpp	/^    virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::SmiReactFormat
WriteChemObject	src/formats/rxnformat.cpp	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::RXNFormat
WriteChemObject	src/formats/svgformat.cpp	/^bool SVGFormat::WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::SVGFormat
WriteChemObject	src/formats/textformat.cpp	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::TextFormat
WriteChemObject	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::CMLFormat
WriteChemObject	src/formats/xml/cmlreactformat.cpp	/^bool CMLReactFormat::WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::CMLReactFormat
WriteChemObject	src/ops/deferred.h	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::DeferredFormat
WriteChemObject	src/ops/xout.cpp	/^  virtual bool WriteChemObject(OBConversion* pConv)$/;"	f	class:OpenBabel::ExtraFormat
WriteChemObjectImpl	src/obmolecformat.cpp	/^  bool OBMoleculeFormat::WriteChemObjectImpl(OBConversion* pConv, OBFormat* pFormat)$/;"	f	class:OpenBabel::OBMoleculeFormat
WriteChiral	src/formats/reportformat.cpp	/^  void ReportFormat::WriteChiral(ostream &ofs,OBMol &mol)$/;"	f	class:OpenBabel::ReportFormat
WriteConfig	src/GUI/selformats.h	/^	void WriteConfig(wxConfig& config) \/\/Called in OBGUIFrame::OnClose()$/;"	f	class:ActiveFormats
WriteCoord	src/formats/libinchi/ichimak2.c	/^void WriteCoord( char *str, double x )$/;"	f
WriteCrystal	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::WriteCrystal(OBMol& mol)$/;"	f	class:OpenBabel::CMLFormat
WriteDefs	src/depict/svgpainter.cpp	/^  void   SVGPainter::WriteDefs()$/;"	f	class:OpenBabel::SVGPainter
WriteDistanceMatrix	src/formats/reportformat.cpp	/^  void ReportFormat::WriteDistanceMatrix(ostream &ofs,OBMol &mol)$/;"	f	class:OpenBabel::ReportFormat
WriteFile	src/obconversion.cpp	/^  bool OBConversion::WriteFile(OBBase* pOb, string filePath)$/;"	f	class:OpenBabel::OBConversion
WriteFormula	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::WriteFormula(OBMol mol)$/;"	f	class:OpenBabel::CMLFormat
WriteHeader	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::WriteHeader(OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat
WriteHex	src/formats/fingerprintformat.cpp	/^  bool FingerprintFormat::WriteHex(ostream &ofs, vector<unsigned int> fptvec)$/;"	f	class:OpenBabel::FingerprintFormat
WriteImage	src/depict/cairopainter.cpp	/^  void CairoPainter::WriteImage(const std::string &filename)$/;"	f	class:OpenBabel::CairoPainter
WriteImage	src/depict/cairopainter.cpp	/^  void CairoPainter::WriteImage(std::ostream& ofs)$/;"	f	class:OpenBabel::CairoPainter
WriteImage	src/depict/svgpainter.cpp	/^  void SVGPainter::WriteImage(const std::string &filename)$/;"	f	class:OpenBabel::SVGPainter
WriteInChI	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::WriteInChI(OBMol& mol)$/;"	f	class:OpenBabel::CMLFormat
WriteMapList	src/parsmart.cpp	/^  void OBSmartsPattern::WriteMapList(ostream &ofs)$/;"	f	class:OpenBabel::OBSmartsPattern
WriteMetadataList	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::WriteMetadataList(OBMol& mol)$/;"	f	class:OpenBabel::CMLFormat
WriteMetadataList	src/formats/xml/cmlreactformat.cpp	/^  void CMLReactFormat::WriteMetadataList(OBReaction& react)$/;"	f	class:OpenBabel::CMLReactFormat
WriteMolecule	include/openbabel/format.h	/^    virtual bool WriteMolecule(OBBase* \/*pOb*\/, OBConversion* \/*pConv*\/)$/;"	f	class:OpenBabel::OBFormat
WriteMolecule	src/formats/APIInterface.cpp	/^	bool WriteMolecule(OBBase* , OBConversion* pConv)$/;"	f	class:OpenBabel::OBAPIInterface
WriteMolecule	src/formats/CSRformat.cpp	/^  bool CSRFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CSRFormat
WriteMolecule	src/formats/MCDLformat.cpp	/^bool MCDLFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MCDLFormat
WriteMolecule	src/formats/MNAformat.cpp	/^	bool MNAFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MNAFormat
WriteMolecule	src/formats/PQSformat.cpp	/^  bool PQSFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PQSFormat
WriteMolecule	src/formats/acesformat.cpp	/^  bool AcesInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::AcesInputFormat
WriteMolecule	src/formats/adfformat.cpp	/^    virtual bool WriteMolecule( OBBase* , OBConversion* )$/;"	f	class:OpenBabel::OBT41Format
WriteMolecule	src/formats/adfformat.cpp	/^  bool ADFInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ADFInputFormat
WriteMolecule	src/formats/alchemyformat.cpp	/^  bool AlchemyFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::AlchemyFormat
WriteMolecule	src/formats/asciiformat.cpp	/^bool ASCIIFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ASCIIFormat
WriteMolecule	src/formats/balstformat.cpp	/^  bool BallStickFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::BallStickFormat
WriteMolecule	src/formats/bgfformat.cpp	/^  bool BGFFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::BGFFormat
WriteMolecule	src/formats/boxformat.cpp	/^bool BoxFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::BoxFormat
WriteMolecule	src/formats/cacaoformat.cpp	/^  bool CacaoFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CacaoFormat
WriteMolecule	src/formats/cacaoformat.cpp	/^  bool CacaoInternalFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CacaoInternalFormat
WriteMolecule	src/formats/cacheformat.cpp	/^  bool CacheFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CacheFormat
WriteMolecule	src/formats/chem3dformat.cpp	/^  bool CHEM3D1Format::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CHEM3D1Format
WriteMolecule	src/formats/chem3dformat.cpp	/^  bool CHEM3D2Format::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CHEM3D2Format
WriteMolecule	src/formats/chemdrawct.cpp	/^  bool ChemDrawFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemDrawFormat
WriteMolecule	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat
WriteMolecule	src/formats/chemtoolformat.cpp	/^  bool CHTFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CHTFormat
WriteMolecule	src/formats/cifformat.cpp	/^  bool CIFFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CIFFormat
WriteMolecule	src/formats/confabreport.cpp	/^bool ConfabReport::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ConfabReport
WriteMolecule	src/formats/crkformat.cpp	/^  bool CRK2DFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CRK2DFormat
WriteMolecule	src/formats/crkformat.cpp	/^  bool CRK3DFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CRK3DFormat
WriteMolecule	src/formats/cssrformat.cpp	/^  bool CSSRFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CSSRFormat
WriteMolecule	src/formats/daltonformat.cpp	/^  bool DALTONInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DALTONInputFormat
WriteMolecule	src/formats/dlpolyformat.cpp	/^  bool DlpolyConfigFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DlpolyConfigFormat
WriteMolecule	src/formats/dmolformat.cpp	/^  bool DMolFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::DMolFormat
WriteMolecule	src/formats/exampleformat.cpp	/^bool XXXFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XXXFormat
WriteMolecule	src/formats/exyzformat.cpp	/^  bool EXYZFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::EXYZFormat
WriteMolecule	src/formats/fastaformat.cpp	/^  bool FASTAFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FASTAFormat
WriteMolecule	src/formats/featformat.cpp	/^  bool FEATFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FEATFormat
WriteMolecule	src/formats/fhformat.cpp	/^bool FenskeZmatFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FenskeZmatFormat
WriteMolecule	src/formats/fhiaimsformat.cpp	/^bool FHIaimsFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FHIaimsFormat
WriteMolecule	src/formats/fingerprintformat.cpp	/^  bool FingerprintFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FingerprintFormat
WriteMolecule	src/formats/fpsformat.cpp	/^bool FPSFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FPSFormat
WriteMolecule	src/formats/freefracformat.cpp	/^  bool FreeFormFractionalFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FreeFormFractionalFormat
WriteMolecule	src/formats/gamessformat.cpp	/^  bool GAMESSInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv) {$/;"	f	class:OpenBabel::GAMESSInputFormat
WriteMolecule	src/formats/gamessukformat.cpp	/^  bool GAMESSUKInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GAMESSUKInputFormat
WriteMolecule	src/formats/gausscubeformat.cpp	/^  bool OBGaussianCubeFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::OBGaussianCubeFormat
WriteMolecule	src/formats/gaussformat.cpp	/^  bool GaussianInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GaussianInputFormat
WriteMolecule	src/formats/gausszmatformat.cpp	/^  bool GaussianZMatrixInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GaussianZMatrixInputFormat
WriteMolecule	src/formats/ghemicalformat.cpp	/^  bool GhemicalFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GhemicalFormat
WriteMolecule	src/formats/groformat.cpp	/^bool GROFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GROFormat
WriteMolecule	src/formats/gromos96format.cpp	/^  bool GROMOS96Format::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::GROMOS96Format
WriteMolecule	src/formats/hinformat.cpp	/^  bool HINFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::HINFormat
WriteMolecule	src/formats/inchiformat.cpp	/^bool InChICompareFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::InChICompareFormat
WriteMolecule	src/formats/inchiformat.cpp	/^bool InChIFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::InChIFormat
WriteMolecule	src/formats/inchiformat.cpp	/^bool InChIKeyFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::InChIKeyFormat
WriteMolecule	src/formats/jaguarformat.cpp	/^  bool JaguarInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::JaguarInputFormat
WriteMolecule	src/formats/json/chemdoodlejsonformat.cpp	/^  bool ChemDoodleJSONFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemDoodleJSONFormat
WriteMolecule	src/formats/json/pubchemjsonformat.cpp	/^  bool PubChemJSONFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PubChemJSONFormat
WriteMolecule	src/formats/lmpdatformat.cpp	/^  bool LMPDATFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::LMPDATFormat
WriteMolecule	src/formats/lpmdformat.cpp	/^bool LpmdFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::LpmdFormat
WriteMolecule	src/formats/mdffformat.cpp	/^  bool MDFFFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MDFFFormat
WriteMolecule	src/formats/mdlformat.cpp	/^      virtual bool WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::SDFormat
WriteMolecule	src/formats/mdlformat.cpp	/^  bool MDLFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MDLFormat
WriteMolecule	src/formats/mmcifformat.cpp	/^ bool mmCIFFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::mmCIFFormat
WriteMolecule	src/formats/mmodformat.cpp	/^  bool MacroModFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MacroModFormat
WriteMolecule	src/formats/mol2format.cpp	/^  bool MOL2Format::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MOL2Format
WriteMolecule	src/formats/moldenformat.cpp	/^bool OBMoldenFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::OBMoldenFormat
WriteMolecule	src/formats/molproformat.cpp	/^  bool MolproInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MolproInputFormat
WriteMolecule	src/formats/molreport.cpp	/^  bool MolReportFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MolReportFormat
WriteMolecule	src/formats/mopacformat.cpp	/^  bool MOPACCARTFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MOPACCARTFormat
WriteMolecule	src/formats/mopacformat.cpp	/^  bool MOPACINTFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MOPACINTFormat
WriteMolecule	src/formats/mpdformat.cpp	/^  bool MPDFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MPDFormat
WriteMolecule	src/formats/mpqcformat.cpp	/^  bool MPQCInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::MPQCInputFormat
WriteMolecule	src/formats/msmsformat.cpp	/^bool OBMSMSFormat::WriteMolecule( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::OBMSMSFormat
WriteMolecule	src/formats/nulformat.cpp	/^  bool WriteMolecule(OBBase* \/*pOb*\/, OBConversion* \/*pConv*\/) { return false; }$/;"	f	class:OpenBabel::NulFormat
WriteMolecule	src/formats/nwchemformat.cpp	/^  bool NWChemInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::NWChemInputFormat
WriteMolecule	src/formats/opendxformat.cpp	/^  bool OBOpenDXCubeFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::OBOpenDXCubeFormat
WriteMolecule	src/formats/orcaformat.cpp	/^  bool OrcaInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::OrcaInputFormat
WriteMolecule	src/formats/painterformat.cpp	/^bool PainterFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PainterFormat
WriteMolecule	src/formats/pcmodelformat.cpp	/^  bool PCModelFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PCModelFormat
WriteMolecule	src/formats/pdbformat.cpp	/^  bool PDBFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PDBFormat
WriteMolecule	src/formats/pdbqtformat.cpp	/^  bool PDBQTFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PDBQTFormat
WriteMolecule	src/formats/png2format.cpp	/^bool PNG2Format::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PNG2Format
WriteMolecule	src/formats/pngformat.cpp	/^bool PNGFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PNGFormat
WriteMolecule	src/formats/pointcloudformat.cpp	/^  bool PointCloudFormat::WriteMolecule( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::PointCloudFormat
WriteMolecule	src/formats/povrayformat.cpp	/^  bool PovrayFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PovrayFormat
WriteMolecule	src/formats/pqrformat.cpp	/^  bool PQRFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::PQRFormat
WriteMolecule	src/formats/qchemformat.cpp	/^  bool QChemInputFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::QChemInputFormat
WriteMolecule	src/formats/reportformat.cpp	/^  bool ReportFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ReportFormat
WriteMolecule	src/formats/rsmiformat.cpp	/^  bool SmiReactFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::SmiReactFormat
WriteMolecule	src/formats/rxnformat.cpp	/^bool RXNFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::RXNFormat
WriteMolecule	src/formats/smilesformat.cpp	/^    virtual bool WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CANSMIFormat
WriteMolecule	src/formats/smilesformat.cpp	/^  bool FIXFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::FIXFormat
WriteMolecule	src/formats/smilesformat.cpp	/^  bool SMIBaseFormat::WriteMolecule(OBBase* pOb,OBConversion* pConv)$/;"	f	class:OpenBabel::SMIBaseFormat
WriteMolecule	src/formats/stlformat.cpp	/^  bool STLFormat::WriteMolecule( OBBase* pOb, OBConversion* pConv )$/;"	f	class:OpenBabel::STLFormat
WriteMolecule	src/formats/svgformat.cpp	/^bool SVGFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::SVGFormat
WriteMolecule	src/formats/thermoformat.cpp	/^bool ThermoFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ThermoFormat
WriteMolecule	src/formats/tinkerformat.cpp	/^  bool TinkerFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::TinkerFormat
WriteMolecule	src/formats/titleformat.cpp	/^bool TitleFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::TitleFormat
WriteMolecule	src/formats/turbomoleformat.cpp	/^bool TurbomoleFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::TurbomoleFormat
WriteMolecule	src/formats/unichemformat.cpp	/^bool UniChemFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::UniChemFormat
WriteMolecule	src/formats/vaspformat.cpp	/^  bool VASPFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::VASPFormat
WriteMolecule	src/formats/viewmolformat.cpp	/^bool ViewMolFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ViewMolFormat
WriteMolecule	src/formats/xedformat.cpp	/^bool XEDFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XEDFormat
WriteMolecule	src/formats/xml/cdxmlformat.cpp	/^bool ChemDrawXMLFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemDrawXMLFormat
WriteMolecule	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CMLFormat
WriteMolecule	src/formats/xml/cmlreactformat.cpp	/^bool CMLReactFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::CMLReactFormat
WriteMolecule	src/formats/xyzformat.cpp	/^  bool XYZFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::XYZFormat
WriteMolecule	src/formats/yasaraformat.cpp	/^bool YOBFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::YOBFormat
WriteMolecule	src/formats/zindoformat.cpp	/^  bool ZINDOFormat::WriteMolecule(OBBase* pOb, OBConversion* pConv)$/;"	f	class:OpenBabel::ZINDOFormat
WriteOrigAtomDataToSDfile	src/formats/libinchi/strutil.c	/^int WriteOrigAtomDataToSDfile(const ORIG_ATOM_DATA *inp_at_data, INCHI_IOSTREAM * fcb, const char* name, $/;"	f
WriteOrigAtoms	src/formats/libinchi/ichiprt1.c	/^int WriteOrigAtoms( int num_inp_atoms, inp_ATOM *at, int *i, char *szBuf, int buf_len, STRUCT_DATA *sd)$/;"	f
WriteOrigBonds	src/formats/libinchi/ichiprt1.c	/^int WriteOrigBonds( int num_inp_atoms, inp_ATOM *at, int *i, char *szBuf, int buf_len, STRUCT_DATA *sd)$/;"	f
WriteOrigCoord	src/formats/libinchi/ichiprt1.c	/^int WriteOrigCoord( int num_inp_atoms, MOL_COORD *szMolCoord, int *i, char *szBuf, int buf_len )$/;"	f
WriteOutput	src/formats/confabreport.cpp	/^void ConfabReport::WriteOutput(ostream& ofs)$/;"	f	class:OpenBabel::ConfabReport
WriteProperties	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::WriteProperties(OBMol& mol, bool& propertyListWritten)$/;"	f	class:OpenBabel::CMLFormat
WriteRateData	src/formats/xml/cmlreactformat.cpp	/^bool CMLReactFormat::WriteRateData(OBReaction* pReact, xmlChar* altprefix)$/;"	f	class:OpenBabel::CMLReactFormat
WriteReactionLine	src/formats/chemkinformat.cpp	/^bool ChemKinFormat::WriteReactionLine(OBReaction* pReact, OBConversion* pConv)$/;"	f	class:OpenBabel::ChemKinFormat
WriteRings	src/ring.cpp	/^  void OBRingSearch::WriteRings()$/;"	f	class:OpenBabel::OBRingSearch
WriteRotationData	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::WriteRotationData(OBMol& mol)$/;"	f	class:OpenBabel::CMLFormat
WriteSVG	src/formats/svgformat.cpp	/^bool SVGFormat::WriteSVG(OBConversion* pConv, vector<OBBase*>& molecules)$/;"	f	class:OpenBabel::SVGFormat
WriteScalarProperty	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::WriteScalarProperty(OBMol& mol,$/;"	f	class:OpenBabel::CMLFormat
WriteSize	src/formats/CSRformat.cpp	/^  void CSRFormat::WriteSize(int size,ostream &ofs)$/;"	f	class:OpenBabel::CSRFormat
WriteStream	src/formats/xml/xml.cpp	/^  int XMLConversion::WriteStream(void * context, const char * buffer, int len)$/;"	f	class:OpenBabel::XMLConversion
WriteString	src/obconversion.cpp	/^  std::string OBConversion::WriteString(OBBase* pOb, bool trimWhitespace)$/;"	f	class:OpenBabel::OBConversion
WriteThermo	src/formats/xml/cmlformat.cpp	/^  void CMLFormat::WriteThermo(OBMol& mol, bool& propertyListWritten)$/;"	f	class:OpenBabel::CMLFormat
WriteTitles	src/mol.cpp	/^  bool WriteTitles(ostream &ofs, OBMol &mol)$/;"	f	namespace:OpenBabel
WriteToSDfile	src/formats/libinchi/strutil.c	/^int WriteToSDfile( const INP_ATOM_DATA *inp_at_data, INCHI_IOSTREAM* fcb, const char* name, const char* comment,$/;"	f
WriteTorsions	src/formats/reportformat.cpp	/^  void ReportFormat::WriteTorsions(ostream &ofs,OBMol &mol)$/;"	f	class:OpenBabel::ReportFormat
WriteTree	src/formats/chemdrawcdx.cpp	/^OBText* CDXReader::WriteTree(const string& filename, unsigned wtoptions)$/;"	f	class:OpenBabel::CDXReader
WriteV3000	src/formats/mdlformat.cpp	/^  bool MDLFormat::WriteV3000(ostream& ofs,OBMol& mol, OBConversion* pConv)$/;"	f	class:OpenBabel::MDLFormat
WriteVibrationData	src/formats/xml/cmlformat.cpp	/^  bool CMLFormat::WriteVibrationData(OBMol& mol)$/;"	f	class:OpenBabel::CMLFormat
Writer	include/openbabel/json/json.h	/^   class JSON_API Writer$/;"	c	namespace:Json
XEDFormat	src/formats/xedformat.cpp	/^    XEDFormat()$/;"	f	class:OpenBabel::XEDFormat
XEDFormat	src/formats/xedformat.cpp	/^class XEDFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
XINCLUDE_FALLBACK	include/libxml/xinclude.h	48;"	d
XINCLUDE_HREF	include/libxml/xinclude.h	54;"	d
XINCLUDE_NODE	include/libxml/xinclude.h	42;"	d
XINCLUDE_NS	include/libxml/xinclude.h	30;"	d
XINCLUDE_OLD_NS	include/libxml/xinclude.h	36;"	d
XINCLUDE_PARSE	include/libxml/xinclude.h	60;"	d
XINCLUDE_PARSE_ENCODING	include/libxml/xinclude.h	78;"	d
XINCLUDE_PARSE_TEXT	include/libxml/xinclude.h	72;"	d
XINCLUDE_PARSE_XML	include/libxml/xinclude.h	66;"	d
XINCLUDE_PARSE_XPOINTER	include/libxml/xinclude.h	84;"	d
XLINK_ACTUATE_AUTO	include/libxml/xlink.h	/^    XLINK_ACTUATE_AUTO,$/;"	e	enum:__anon26
XLINK_ACTUATE_NONE	include/libxml/xlink.h	/^    XLINK_ACTUATE_NONE = 0,$/;"	e	enum:__anon26
XLINK_ACTUATE_ONREQUEST	include/libxml/xlink.h	/^    XLINK_ACTUATE_ONREQUEST$/;"	e	enum:__anon26
XLINK_SHOW_EMBED	include/libxml/xlink.h	/^    XLINK_SHOW_EMBED,$/;"	e	enum:__anon25
XLINK_SHOW_NEW	include/libxml/xlink.h	/^    XLINK_SHOW_NEW,$/;"	e	enum:__anon25
XLINK_SHOW_NONE	include/libxml/xlink.h	/^    XLINK_SHOW_NONE = 0,$/;"	e	enum:__anon25
XLINK_SHOW_REPLACE	include/libxml/xlink.h	/^    XLINK_SHOW_REPLACE$/;"	e	enum:__anon25
XLINK_TYPE_EXTENDED	include/libxml/xlink.h	/^    XLINK_TYPE_EXTENDED,$/;"	e	enum:__anon24
XLINK_TYPE_EXTENDED_SET	include/libxml/xlink.h	/^    XLINK_TYPE_EXTENDED_SET$/;"	e	enum:__anon24
XLINK_TYPE_NONE	include/libxml/xlink.h	/^    XLINK_TYPE_NONE = 0,$/;"	e	enum:__anon24
XLINK_TYPE_SIMPLE	include/libxml/xlink.h	/^    XLINK_TYPE_SIMPLE,$/;"	e	enum:__anon24
XMLBaseFormat	include/openbabel/xml.h	/^  class XMLBaseFormat : public OBFormat$/;"	c	namespace:OpenBabel
XMLCALL	include/libxml/xmlexports.h	106;"	d
XMLCALL	include/libxml/xmlexports.h	116;"	d
XMLCALL	include/libxml/xmlexports.h	128;"	d
XMLCALL	include/libxml/xmlexports.h	42;"	d
XMLCALL	include/libxml/xmlexports.h	50;"	d
XMLCALL	include/libxml/xmlexports.h	62;"	d
XMLCALL	include/libxml/xmlexports.h	72;"	d
XMLCALL	include/libxml/xmlexports.h	84;"	d
XMLCALL	include/libxml/xmlexports.h	94;"	d
XMLConversion	include/openbabel/xml.h	/^  class XMLConversion : public OBConversion$/;"	c	namespace:OpenBabel
XMLConversion	src/formats/xml/xml.cpp	/^  XMLConversion::XMLConversion(OBConversion* pConv)$/;"	f	class:OpenBabel::XMLConversion
XMLFormat	src/formats/xml/xmlformat.cpp	/^  XMLFormat()$/;"	f	class:OpenBabel::XMLFormat
XMLFormat	src/formats/xml/xmlformat.cpp	/^class XMLFormat : XMLBaseFormat$/;"	c	namespace:OpenBabel	file:
XMLMoleculeFormat	include/openbabel/xml.h	/^  class XMLMoleculeFormat : public XMLBaseFormat$/;"	c	namespace:OpenBabel
XMLPUBFUN	include/libxml/xmlexports.h	114;"	d
XMLPUBFUN	include/libxml/xmlexports.h	118;"	d
XMLPUBFUN	include/libxml/xmlexports.h	121;"	d
XMLPUBFUN	include/libxml/xmlexports.h	30;"	d
XMLPUBFUN	include/libxml/xmlexports.h	48;"	d
XMLPUBFUN	include/libxml/xmlexports.h	52;"	d
XMLPUBFUN	include/libxml/xmlexports.h	55;"	d
XMLPUBFUN	include/libxml/xmlexports.h	70;"	d
XMLPUBFUN	include/libxml/xmlexports.h	74;"	d
XMLPUBFUN	include/libxml/xmlexports.h	77;"	d
XMLPUBFUN	include/libxml/xmlexports.h	92;"	d
XMLPUBFUN	include/libxml/xmlexports.h	96;"	d
XMLPUBFUN	include/libxml/xmlexports.h	99;"	d
XMLPUBVAR	include/libxml/xmlexports.h	101;"	d
XMLPUBVAR	include/libxml/xmlexports.h	103;"	d
XMLPUBVAR	include/libxml/xmlexports.h	115;"	d
XMLPUBVAR	include/libxml/xmlexports.h	119;"	d
XMLPUBVAR	include/libxml/xmlexports.h	123;"	d
XMLPUBVAR	include/libxml/xmlexports.h	125;"	d
XMLPUBVAR	include/libxml/xmlexports.h	36;"	d
XMLPUBVAR	include/libxml/xmlexports.h	49;"	d
XMLPUBVAR	include/libxml/xmlexports.h	53;"	d
XMLPUBVAR	include/libxml/xmlexports.h	57;"	d
XMLPUBVAR	include/libxml/xmlexports.h	59;"	d
XMLPUBVAR	include/libxml/xmlexports.h	71;"	d
XMLPUBVAR	include/libxml/xmlexports.h	75;"	d
XMLPUBVAR	include/libxml/xmlexports.h	79;"	d
XMLPUBVAR	include/libxml/xmlexports.h	81;"	d
XMLPUBVAR	include/libxml/xmlexports.h	93;"	d
XMLPUBVAR	include/libxml/xmlexports.h	97;"	d
XML_ATTRIBUTE_CDATA	include/libxml/tree.h	/^    XML_ATTRIBUTE_CDATA = 1,$/;"	e	enum:__anon18
XML_ATTRIBUTE_DECL	include/libxml/tree.h	/^    XML_ATTRIBUTE_DECL=		16,$/;"	e	enum:__anon17
XML_ATTRIBUTE_ENTITIES	include/libxml/tree.h	/^    XML_ATTRIBUTE_ENTITIES,$/;"	e	enum:__anon18
XML_ATTRIBUTE_ENTITY	include/libxml/tree.h	/^    XML_ATTRIBUTE_ENTITY,$/;"	e	enum:__anon18
XML_ATTRIBUTE_ENUMERATION	include/libxml/tree.h	/^    XML_ATTRIBUTE_ENUMERATION,$/;"	e	enum:__anon18
XML_ATTRIBUTE_FIXED	include/libxml/tree.h	/^    XML_ATTRIBUTE_FIXED$/;"	e	enum:__anon19
XML_ATTRIBUTE_ID	include/libxml/tree.h	/^    XML_ATTRIBUTE_ID,$/;"	e	enum:__anon18
XML_ATTRIBUTE_IDREF	include/libxml/tree.h	/^    XML_ATTRIBUTE_IDREF	,$/;"	e	enum:__anon18
XML_ATTRIBUTE_IDREFS	include/libxml/tree.h	/^    XML_ATTRIBUTE_IDREFS,$/;"	e	enum:__anon18
XML_ATTRIBUTE_IMPLIED	include/libxml/tree.h	/^    XML_ATTRIBUTE_IMPLIED,$/;"	e	enum:__anon19
XML_ATTRIBUTE_NMTOKEN	include/libxml/tree.h	/^    XML_ATTRIBUTE_NMTOKEN,$/;"	e	enum:__anon18
XML_ATTRIBUTE_NMTOKENS	include/libxml/tree.h	/^    XML_ATTRIBUTE_NMTOKENS,$/;"	e	enum:__anon18
XML_ATTRIBUTE_NODE	include/libxml/tree.h	/^    XML_ATTRIBUTE_NODE=		2,$/;"	e	enum:__anon17
XML_ATTRIBUTE_NONE	include/libxml/tree.h	/^    XML_ATTRIBUTE_NONE = 1,$/;"	e	enum:__anon19
XML_ATTRIBUTE_NOTATION	include/libxml/tree.h	/^    XML_ATTRIBUTE_NOTATION$/;"	e	enum:__anon18
XML_ATTRIBUTE_REQUIRED	include/libxml/tree.h	/^    XML_ATTRIBUTE_REQUIRED,$/;"	e	enum:__anon19
XML_BUFFER_ALLOC_DOUBLEIT	include/libxml/tree.h	/^    XML_BUFFER_ALLOC_DOUBLEIT,$/;"	e	enum:__anon23
XML_BUFFER_ALLOC_EXACT	include/libxml/tree.h	/^    XML_BUFFER_ALLOC_EXACT,$/;"	e	enum:__anon23
XML_BUFFER_ALLOC_IMMUTABLE	include/libxml/tree.h	/^    XML_BUFFER_ALLOC_IMMUTABLE$/;"	e	enum:__anon23
XML_C14N_CREATE_CTXT	include/libxml/xmlerror.h	/^    XML_C14N_CREATE_CTXT = 1950,$/;"	e	enum:__anon29
XML_C14N_CREATE_STACK	include/libxml/xmlerror.h	/^    XML_C14N_CREATE_STACK, \/* 1952 *\/$/;"	e	enum:__anon29
XML_C14N_INVALID_NODE	include/libxml/xmlerror.h	/^    XML_C14N_INVALID_NODE, \/* 1953 *\/$/;"	e	enum:__anon29
XML_C14N_RELATIVE_NAMESPACE	include/libxml/xmlerror.h	/^    XML_C14N_RELATIVE_NAMESPACE, \/* 1955 *\/$/;"	e	enum:__anon29
XML_C14N_REQUIRES_UTF8	include/libxml/xmlerror.h	/^    XML_C14N_REQUIRES_UTF8, \/* 1951 *\/$/;"	e	enum:__anon29
XML_C14N_UNKNOW_NODE	include/libxml/xmlerror.h	/^    XML_C14N_UNKNOW_NODE, \/* 1954 *\/$/;"	e	enum:__anon29
XML_CAST_FPTR	include/libxml/hash.h	56;"	d
XML_CATALOGS_NAMESPACE	include/libxml/catalog.h	37;"	d
XML_CATALOG_ENTRY_BROKEN	include/libxml/xmlerror.h	/^    XML_CATALOG_ENTRY_BROKEN, \/* 1651 *\/$/;"	e	enum:__anon29
XML_CATALOG_MISSING_ATTR	include/libxml/xmlerror.h	/^    XML_CATALOG_MISSING_ATTR = 1650,$/;"	e	enum:__anon29
XML_CATALOG_NOT_CATALOG	include/libxml/xmlerror.h	/^    XML_CATALOG_NOT_CATALOG, \/* 1653 *\/$/;"	e	enum:__anon29
XML_CATALOG_PI	include/libxml/catalog.h	44;"	d
XML_CATALOG_PREFER_VALUE	include/libxml/xmlerror.h	/^    XML_CATALOG_PREFER_VALUE, \/* 1652 *\/$/;"	e	enum:__anon29
XML_CATALOG_RECURSION	include/libxml/xmlerror.h	/^    XML_CATALOG_RECURSION, \/* 1654 *\/$/;"	e	enum:__anon29
XML_CATA_ALLOW_ALL	include/libxml/catalog.h	/^    XML_CATA_ALLOW_ALL = 3$/;"	e	enum:__anon6
XML_CATA_ALLOW_DOCUMENT	include/libxml/catalog.h	/^    XML_CATA_ALLOW_DOCUMENT = 2,$/;"	e	enum:__anon6
XML_CATA_ALLOW_GLOBAL	include/libxml/catalog.h	/^    XML_CATA_ALLOW_GLOBAL = 1,$/;"	e	enum:__anon6
XML_CATA_ALLOW_NONE	include/libxml/catalog.h	/^    XML_CATA_ALLOW_NONE = 0,$/;"	e	enum:__anon6
XML_CATA_PREFER_NONE	include/libxml/catalog.h	/^    XML_CATA_PREFER_NONE = 0,$/;"	e	enum:__anon5
XML_CATA_PREFER_PUBLIC	include/libxml/catalog.h	/^    XML_CATA_PREFER_PUBLIC = 1,$/;"	e	enum:__anon5
XML_CATA_PREFER_SYSTEM	include/libxml/catalog.h	/^    XML_CATA_PREFER_SYSTEM$/;"	e	enum:__anon5
XML_CDATA_SECTION_NODE	include/libxml/tree.h	/^    XML_CDATA_SECTION_NODE=	4,$/;"	e	enum:__anon17
XML_CHAR_ENCODING_2022_JP	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_2022_JP=  19,\/* ISO-2022-JP *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_1	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_1=	10,\/* ISO-8859-1 ISO Latin 1 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_2	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_2=	11,\/* ISO-8859-2 ISO Latin 2 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_3	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_3=	12,\/* ISO-8859-3 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_4	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_4=	13,\/* ISO-8859-4 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_5	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_5=	14,\/* ISO-8859-5 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_6	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_6=	15,\/* ISO-8859-6 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_7	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_7=	16,\/* ISO-8859-7 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_8	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_8=	17,\/* ISO-8859-8 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_8859_9	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_9=	18,\/* ISO-8859-9 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_ASCII	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_ASCII=    22 \/* pure ASCII *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_EBCDIC	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_EBCDIC=	6, \/* EBCDIC uh! *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_ERROR	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_ERROR=   -1, \/* No char encoding detected *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_EUC_JP	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_EUC_JP=   21,\/* EUC-JP *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_NONE	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_NONE=	0, \/* No char encoding detected *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_SHIFT_JIS	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_SHIFT_JIS=20,\/* Shift_JIS *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UCS2	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS2=	9, \/* UCS-2 *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UCS4BE	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4BE=	5, \/* UCS-4 big endian *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UCS4LE	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4LE=	4, \/* UCS-4 little endian *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UCS4_2143	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4_2143=7, \/* UCS-4 unusual ordering *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UCS4_3412	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4_3412=8, \/* UCS-4 unusual ordering *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UTF16BE	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UTF16BE=	3, \/* UTF-16 big endian *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UTF16LE	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UTF16LE=	2, \/* UTF-16 little endian *\/$/;"	e	enum:__anon7
XML_CHAR_ENCODING_UTF8	include/libxml/encoding.h	/^    XML_CHAR_ENCODING_UTF8=	1, \/* UTF-8 *\/$/;"	e	enum:__anon7
XML_CHECK_ENTITY_TYPE	include/libxml/xmlerror.h	/^    XML_CHECK_ENTITY_TYPE, \/* 5012 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_ATTRIBUTE	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ATTRIBUTE, \/* 5001 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_CDATA	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_CDATA, \/* 5003 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_COMMENT	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_COMMENT, \/* 5007 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_DOCTYPE	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_DOCTYPE, \/* 5008 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_ELEMENT	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ELEMENT = 5000,$/;"	e	enum:__anon29
XML_CHECK_FOUND_ENTITY	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ENTITY, \/* 5005 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_ENTITYREF	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ENTITYREF, \/* 5004 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_FRAGMENT	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_FRAGMENT, \/* 5009 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_NOTATION	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_NOTATION, \/* 5010 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_PI	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_PI, \/* 5006 *\/$/;"	e	enum:__anon29
XML_CHECK_FOUND_TEXT	include/libxml/xmlerror.h	/^    XML_CHECK_FOUND_TEXT, \/* 5002 *\/$/;"	e	enum:__anon29
XML_CHECK_NAME_NOT_NULL	include/libxml/xmlerror.h	/^    XML_CHECK_NAME_NOT_NULL \/* 5037 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_ATTR	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_ATTR, \/* 5023 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_ATTR_DECL	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_ATTR_DECL, \/* 5024 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_DTD	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_DTD, \/* 5022 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_ELEM_DECL	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_ELEM_DECL, \/* 5025 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_ENTITY_DECL	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_ENTITY_DECL, \/* 5026 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_NCNAME	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_NCNAME, \/* 5034 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_NS_DECL	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_NS_DECL, \/* 5027 *\/$/;"	e	enum:__anon29
XML_CHECK_NOT_UTF8	include/libxml/xmlerror.h	/^    XML_CHECK_NOT_UTF8, \/* 5032 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_DICT	include/libxml/xmlerror.h	/^    XML_CHECK_NO_DICT, \/* 5033 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_DOC	include/libxml/xmlerror.h	/^    XML_CHECK_NO_DOC, \/* 5014 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_ELEM	include/libxml/xmlerror.h	/^    XML_CHECK_NO_ELEM, \/* 5016 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_HREF	include/libxml/xmlerror.h	/^    XML_CHECK_NO_HREF, \/* 5028 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_NAME	include/libxml/xmlerror.h	/^    XML_CHECK_NO_NAME, \/* 5015 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_NEXT	include/libxml/xmlerror.h	/^    XML_CHECK_NO_NEXT, \/* 5020 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_PARENT	include/libxml/xmlerror.h	/^    XML_CHECK_NO_PARENT, \/* 5013 *\/$/;"	e	enum:__anon29
XML_CHECK_NO_PREV	include/libxml/xmlerror.h	/^    XML_CHECK_NO_PREV, \/* 5018 *\/$/;"	e	enum:__anon29
XML_CHECK_NS_ANCESTOR	include/libxml/xmlerror.h	/^    XML_CHECK_NS_ANCESTOR, \/* 5031 *\/$/;"	e	enum:__anon29
XML_CHECK_NS_SCOPE	include/libxml/xmlerror.h	/^    XML_CHECK_NS_SCOPE, \/* 5030 *\/$/;"	e	enum:__anon29
XML_CHECK_OUTSIDE_DICT	include/libxml/xmlerror.h	/^    XML_CHECK_OUTSIDE_DICT, \/* 5035 *\/$/;"	e	enum:__anon29
XML_CHECK_UNKNOWN_NODE	include/libxml/xmlerror.h	/^    XML_CHECK_UNKNOWN_NODE, \/* 5011 *\/$/;"	e	enum:__anon29
XML_CHECK_WRONG_DOC	include/libxml/xmlerror.h	/^    XML_CHECK_WRONG_DOC, \/* 5017 *\/$/;"	e	enum:__anon29
XML_CHECK_WRONG_NAME	include/libxml/xmlerror.h	/^    XML_CHECK_WRONG_NAME, \/* 5036 *\/$/;"	e	enum:__anon29
XML_CHECK_WRONG_NEXT	include/libxml/xmlerror.h	/^    XML_CHECK_WRONG_NEXT, \/* 5021 *\/$/;"	e	enum:__anon29
XML_CHECK_WRONG_PARENT	include/libxml/xmlerror.h	/^    XML_CHECK_WRONG_PARENT,\/* 5029 *\/$/;"	e	enum:__anon29
XML_CHECK_WRONG_PREV	include/libxml/xmlerror.h	/^    XML_CHECK_WRONG_PREV, \/* 5019 *\/$/;"	e	enum:__anon29
XML_COMMENT_NODE	include/libxml/tree.h	/^    XML_COMMENT_NODE=		8,$/;"	e	enum:__anon17
XML_COMPLETE_ATTRS	include/libxml/parser.h	148;"	d
XML_CTXT_FINISH_DTD_0	include/libxml/valid.h	67;"	d
XML_CTXT_FINISH_DTD_1	include/libxml/valid.h	73;"	d
XML_DEFAULT_VERSION	include/libxml/parser.h	33;"	d
XML_DETECT_IDS	include/libxml/parser.h	139;"	d
XML_DOCB_DOCUMENT_NODE	include/libxml/tree.h	/^   ,XML_DOCB_DOCUMENT_NODE=	21$/;"	e	enum:__anon17
XML_DOCUMENT_FRAG_NODE	include/libxml/tree.h	/^    XML_DOCUMENT_FRAG_NODE=	11,$/;"	e	enum:__anon17
XML_DOCUMENT_NODE	include/libxml/tree.h	/^    XML_DOCUMENT_NODE=		9,$/;"	e	enum:__anon17
XML_DOCUMENT_TYPE_NODE	include/libxml/tree.h	/^    XML_DOCUMENT_TYPE_NODE=	10,$/;"	e	enum:__anon17
XML_DTD_ATTRIBUTE_DEFAULT	include/libxml/xmlerror.h	/^    XML_DTD_ATTRIBUTE_DEFAULT = 500,$/;"	e	enum:__anon29
XML_DTD_ATTRIBUTE_REDEFINED	include/libxml/xmlerror.h	/^    XML_DTD_ATTRIBUTE_REDEFINED, \/* 501 *\/$/;"	e	enum:__anon29
XML_DTD_ATTRIBUTE_VALUE	include/libxml/xmlerror.h	/^    XML_DTD_ATTRIBUTE_VALUE, \/* 502 *\/$/;"	e	enum:__anon29
XML_DTD_CONTENT_ERROR	include/libxml/xmlerror.h	/^    XML_DTD_CONTENT_ERROR, \/* 503 *\/$/;"	e	enum:__anon29
XML_DTD_CONTENT_MODEL	include/libxml/xmlerror.h	/^    XML_DTD_CONTENT_MODEL, \/* 504 *\/$/;"	e	enum:__anon29
XML_DTD_CONTENT_NOT_DETERMINIST	include/libxml/xmlerror.h	/^    XML_DTD_CONTENT_NOT_DETERMINIST, \/* 505 *\/$/;"	e	enum:__anon29
XML_DTD_DIFFERENT_PREFIX	include/libxml/xmlerror.h	/^    XML_DTD_DIFFERENT_PREFIX, \/* 506 *\/$/;"	e	enum:__anon29
XML_DTD_ELEM_DEFAULT_NAMESPACE	include/libxml/xmlerror.h	/^    XML_DTD_ELEM_DEFAULT_NAMESPACE, \/* 507 *\/$/;"	e	enum:__anon29
XML_DTD_ELEM_NAMESPACE	include/libxml/xmlerror.h	/^    XML_DTD_ELEM_NAMESPACE, \/* 508 *\/$/;"	e	enum:__anon29
XML_DTD_ELEM_REDEFINED	include/libxml/xmlerror.h	/^    XML_DTD_ELEM_REDEFINED, \/* 509 *\/$/;"	e	enum:__anon29
XML_DTD_EMPTY_NOTATION	include/libxml/xmlerror.h	/^    XML_DTD_EMPTY_NOTATION, \/* 510 *\/$/;"	e	enum:__anon29
XML_DTD_ENTITY_TYPE	include/libxml/xmlerror.h	/^    XML_DTD_ENTITY_TYPE, \/* 511 *\/$/;"	e	enum:__anon29
XML_DTD_ID_FIXED	include/libxml/xmlerror.h	/^    XML_DTD_ID_FIXED, \/* 512 *\/$/;"	e	enum:__anon29
XML_DTD_ID_REDEFINED	include/libxml/xmlerror.h	/^    XML_DTD_ID_REDEFINED, \/* 513 *\/$/;"	e	enum:__anon29
XML_DTD_ID_SUBSET	include/libxml/xmlerror.h	/^    XML_DTD_ID_SUBSET, \/* 514 *\/$/;"	e	enum:__anon29
XML_DTD_INVALID_CHILD	include/libxml/xmlerror.h	/^    XML_DTD_INVALID_CHILD, \/* 515 *\/$/;"	e	enum:__anon29
XML_DTD_INVALID_DEFAULT	include/libxml/xmlerror.h	/^    XML_DTD_INVALID_DEFAULT, \/* 516 *\/$/;"	e	enum:__anon29
XML_DTD_LOAD_ERROR	include/libxml/xmlerror.h	/^    XML_DTD_LOAD_ERROR, \/* 517 *\/$/;"	e	enum:__anon29
XML_DTD_MISSING_ATTRIBUTE	include/libxml/xmlerror.h	/^    XML_DTD_MISSING_ATTRIBUTE, \/* 518 *\/$/;"	e	enum:__anon29
XML_DTD_MIXED_CORRUPT	include/libxml/xmlerror.h	/^    XML_DTD_MIXED_CORRUPT, \/* 519 *\/$/;"	e	enum:__anon29
XML_DTD_MULTIPLE_ID	include/libxml/xmlerror.h	/^    XML_DTD_MULTIPLE_ID, \/* 520 *\/$/;"	e	enum:__anon29
XML_DTD_NODE	include/libxml/tree.h	/^    XML_DTD_NODE=		14,$/;"	e	enum:__anon17
XML_DTD_NOTATION_REDEFINED	include/libxml/xmlerror.h	/^    XML_DTD_NOTATION_REDEFINED, \/* 526 *\/$/;"	e	enum:__anon29
XML_DTD_NOTATION_VALUE	include/libxml/xmlerror.h	/^    XML_DTD_NOTATION_VALUE, \/* 527 *\/$/;"	e	enum:__anon29
XML_DTD_NOT_EMPTY	include/libxml/xmlerror.h	/^    XML_DTD_NOT_EMPTY, \/* 528 *\/$/;"	e	enum:__anon29
XML_DTD_NOT_PCDATA	include/libxml/xmlerror.h	/^    XML_DTD_NOT_PCDATA, \/* 529 *\/$/;"	e	enum:__anon29
XML_DTD_NOT_STANDALONE	include/libxml/xmlerror.h	/^    XML_DTD_NOT_STANDALONE, \/* 530 *\/$/;"	e	enum:__anon29
XML_DTD_NO_DOC	include/libxml/xmlerror.h	/^    XML_DTD_NO_DOC, \/* 521 *\/$/;"	e	enum:__anon29
XML_DTD_NO_DTD	include/libxml/xmlerror.h	/^    XML_DTD_NO_DTD, \/* 522 *\/$/;"	e	enum:__anon29
XML_DTD_NO_ELEM_NAME	include/libxml/xmlerror.h	/^    XML_DTD_NO_ELEM_NAME, \/* 523 *\/$/;"	e	enum:__anon29
XML_DTD_NO_PREFIX	include/libxml/xmlerror.h	/^    XML_DTD_NO_PREFIX, \/* 524 *\/$/;"	e	enum:__anon29
XML_DTD_NO_ROOT	include/libxml/xmlerror.h	/^    XML_DTD_NO_ROOT, \/* 525 *\/$/;"	e	enum:__anon29
XML_DTD_ROOT_NAME	include/libxml/xmlerror.h	/^    XML_DTD_ROOT_NAME, \/* 531 *\/$/;"	e	enum:__anon29
XML_DTD_STANDALONE_DEFAULTED	include/libxml/xmlerror.h	/^    XML_DTD_STANDALONE_DEFAULTED, \/* 538 *\/$/;"	e	enum:__anon29
XML_DTD_STANDALONE_WHITE_SPACE	include/libxml/xmlerror.h	/^    XML_DTD_STANDALONE_WHITE_SPACE, \/* 532 *\/$/;"	e	enum:__anon29
XML_DTD_UNKNOWN_ATTRIBUTE	include/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ATTRIBUTE, \/* 533 *\/$/;"	e	enum:__anon29
XML_DTD_UNKNOWN_ELEM	include/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ELEM, \/* 534 *\/$/;"	e	enum:__anon29
XML_DTD_UNKNOWN_ENTITY	include/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ENTITY, \/* 535 *\/$/;"	e	enum:__anon29
XML_DTD_UNKNOWN_ID	include/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ID, \/* 536 *\/$/;"	e	enum:__anon29
XML_DTD_UNKNOWN_NOTATION	include/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_NOTATION, \/* 537 *\/$/;"	e	enum:__anon29
XML_DTD_XMLID_TYPE	include/libxml/xmlerror.h	/^    XML_DTD_XMLID_TYPE, \/* 540 *\/$/;"	e	enum:__anon29
XML_DTD_XMLID_VALUE	include/libxml/xmlerror.h	/^    XML_DTD_XMLID_VALUE, \/* 539 *\/$/;"	e	enum:__anon29
XML_ELEMENT_CONTENT_ELEMENT	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_ELEMENT,$/;"	e	enum:__anon20
XML_ELEMENT_CONTENT_MULT	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_MULT,$/;"	e	enum:__anon21
XML_ELEMENT_CONTENT_ONCE	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_ONCE = 1,$/;"	e	enum:__anon21
XML_ELEMENT_CONTENT_OPT	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_OPT,$/;"	e	enum:__anon21
XML_ELEMENT_CONTENT_OR	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_OR$/;"	e	enum:__anon20
XML_ELEMENT_CONTENT_PCDATA	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_PCDATA = 1,$/;"	e	enum:__anon20
XML_ELEMENT_CONTENT_PLUS	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_PLUS$/;"	e	enum:__anon21
XML_ELEMENT_CONTENT_SEQ	include/libxml/tree.h	/^    XML_ELEMENT_CONTENT_SEQ,$/;"	e	enum:__anon20
XML_ELEMENT_DECL	include/libxml/tree.h	/^    XML_ELEMENT_DECL=		15,$/;"	e	enum:__anon17
XML_ELEMENT_NODE	include/libxml/tree.h	/^    XML_ELEMENT_NODE=		1,$/;"	e	enum:__anon17
XML_ELEMENT_TYPE_ANY	include/libxml/tree.h	/^    XML_ELEMENT_TYPE_ANY,$/;"	e	enum:__anon22
XML_ELEMENT_TYPE_ELEMENT	include/libxml/tree.h	/^    XML_ELEMENT_TYPE_ELEMENT$/;"	e	enum:__anon22
XML_ELEMENT_TYPE_EMPTY	include/libxml/tree.h	/^    XML_ELEMENT_TYPE_EMPTY = 1,$/;"	e	enum:__anon22
XML_ELEMENT_TYPE_MIXED	include/libxml/tree.h	/^    XML_ELEMENT_TYPE_MIXED,$/;"	e	enum:__anon22
XML_ELEMENT_TYPE_UNDEFINED	include/libxml/tree.h	/^    XML_ELEMENT_TYPE_UNDEFINED = 0,$/;"	e	enum:__anon22
XML_ENTITY_DECL	include/libxml/tree.h	/^    XML_ENTITY_DECL=		17,$/;"	e	enum:__anon17
XML_ENTITY_NODE	include/libxml/tree.h	/^    XML_ENTITY_NODE=		6,$/;"	e	enum:__anon17
XML_ENTITY_REF_NODE	include/libxml/tree.h	/^    XML_ENTITY_REF_NODE=	5,$/;"	e	enum:__anon17
XML_ERR_ATTLIST_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_ATTLIST_NOT_FINISHED, \/* 51 *\/$/;"	e	enum:__anon29
XML_ERR_ATTLIST_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_ATTLIST_NOT_STARTED, \/* 50 *\/$/;"	e	enum:__anon29
XML_ERR_ATTRIBUTE_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_NOT_FINISHED, \/* 40 *\/$/;"	e	enum:__anon29
XML_ERR_ATTRIBUTE_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_NOT_STARTED, \/* 39 *\/$/;"	e	enum:__anon29
XML_ERR_ATTRIBUTE_REDEFINED	include/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_REDEFINED, \/* 42 *\/$/;"	e	enum:__anon29
XML_ERR_ATTRIBUTE_WITHOUT_VALUE	include/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_WITHOUT_VALUE, \/* 41 *\/$/;"	e	enum:__anon29
XML_ERR_CDATA_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_CDATA_NOT_FINISHED, \/* 63 *\/$/;"	e	enum:__anon29
XML_ERR_CHARREF_AT_EOF	include/libxml/xmlerror.h	/^    XML_ERR_CHARREF_AT_EOF, \/* 10 *\/$/;"	e	enum:__anon29
XML_ERR_CHARREF_IN_DTD	include/libxml/xmlerror.h	/^    XML_ERR_CHARREF_IN_DTD, \/* 13 *\/$/;"	e	enum:__anon29
XML_ERR_CHARREF_IN_EPILOG	include/libxml/xmlerror.h	/^    XML_ERR_CHARREF_IN_EPILOG, \/* 12 *\/$/;"	e	enum:__anon29
XML_ERR_CHARREF_IN_PROLOG	include/libxml/xmlerror.h	/^    XML_ERR_CHARREF_IN_PROLOG, \/* 11 *\/$/;"	e	enum:__anon29
XML_ERR_COMMENT_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_COMMENT_NOT_FINISHED, \/* 45 *\/$/;"	e	enum:__anon29
XML_ERR_CONDSEC_INVALID	include/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_INVALID, \/* 83 *\/$/;"	e	enum:__anon29
XML_ERR_CONDSEC_INVALID_KEYWORD	include/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_INVALID_KEYWORD, \/* 95 *\/$/;"	e	enum:__anon29
XML_ERR_CONDSEC_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_NOT_FINISHED, \/* 59 *\/$/;"	e	enum:__anon29
XML_ERR_CONDSEC_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_NOT_STARTED, \/* 58 *\/$/;"	e	enum:__anon29
XML_ERR_DOCTYPE_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_DOCTYPE_NOT_FINISHED, \/* 61 *\/$/;"	e	enum:__anon29
XML_ERR_DOCUMENT_EMPTY	include/libxml/xmlerror.h	/^    XML_ERR_DOCUMENT_EMPTY, \/* 4 *\/$/;"	e	enum:__anon29
XML_ERR_DOCUMENT_END	include/libxml/xmlerror.h	/^    XML_ERR_DOCUMENT_END, \/* 5 *\/$/;"	e	enum:__anon29
XML_ERR_DOCUMENT_START	include/libxml/xmlerror.h	/^    XML_ERR_DOCUMENT_START, \/* 3 *\/$/;"	e	enum:__anon29
XML_ERR_ELEMCONTENT_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_ELEMCONTENT_NOT_FINISHED, \/* 55 *\/$/;"	e	enum:__anon29
XML_ERR_ELEMCONTENT_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_ELEMCONTENT_NOT_STARTED, \/* 54 *\/$/;"	e	enum:__anon29
XML_ERR_ENCODING_NAME	include/libxml/xmlerror.h	/^    XML_ERR_ENCODING_NAME, \/* 79 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITYREF_AT_EOF	include/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_AT_EOF, \/* 14 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITYREF_IN_DTD	include/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_IN_DTD, \/* 17 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITYREF_IN_EPILOG	include/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_IN_EPILOG, \/* 16 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITYREF_IN_PROLOG	include/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_IN_PROLOG, \/* 15 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITYREF_NO_NAME	include/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_NO_NAME, \/* 22 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITYREF_SEMICOL_MISSING	include/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_SEMICOL_MISSING, \/* 23 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_BOUNDARY	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_BOUNDARY, \/* 90 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_CHAR_ERROR	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_CHAR_ERROR, \/* 87 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_IS_EXTERNAL	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_IS_EXTERNAL, \/* 29 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_IS_PARAMETER	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_IS_PARAMETER, \/* 30 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_LOOP	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_LOOP, \/* 89 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_NOT_FINISHED, \/* 37 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_NOT_STARTED, \/* 36 *\/$/;"	e	enum:__anon29
XML_ERR_ENTITY_PE_INTERNAL	include/libxml/xmlerror.h	/^    XML_ERR_ENTITY_PE_INTERNAL, \/* 88 *\/$/;"	e	enum:__anon29
XML_ERR_EQUAL_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_EQUAL_REQUIRED, \/* 75 *\/$/;"	e	enum:__anon29
XML_ERR_ERROR	include/libxml/xmlerror.h	/^    XML_ERR_ERROR = 2,		\/* A recoverable error *\/$/;"	e	enum:__anon27
XML_ERR_EXTRA_CONTENT	include/libxml/xmlerror.h	/^    XML_ERR_EXTRA_CONTENT, \/* 86 *\/$/;"	e	enum:__anon29
XML_ERR_EXT_ENTITY_STANDALONE	include/libxml/xmlerror.h	/^    XML_ERR_EXT_ENTITY_STANDALONE, \/* 82 *\/$/;"	e	enum:__anon29
XML_ERR_EXT_SUBSET_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_EXT_SUBSET_NOT_FINISHED, \/* 60 *\/$/;"	e	enum:__anon29
XML_ERR_FATAL	include/libxml/xmlerror.h	/^    XML_ERR_FATAL = 3		\/* A fatal error *\/$/;"	e	enum:__anon27
XML_ERR_GT_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_GT_REQUIRED, \/* 73 *\/$/;"	e	enum:__anon29
XML_ERR_HYPHEN_IN_COMMENT	include/libxml/xmlerror.h	/^    XML_ERR_HYPHEN_IN_COMMENT, \/* 80 *\/$/;"	e	enum:__anon29
XML_ERR_INTERNAL_ERROR	include/libxml/xmlerror.h	/^    XML_ERR_INTERNAL_ERROR, \/* 1 *\/$/;"	e	enum:__anon29
XML_ERR_INVALID_CHAR	include/libxml/xmlerror.h	/^    XML_ERR_INVALID_CHAR, \/* 9 *\/$/;"	e	enum:__anon29
XML_ERR_INVALID_CHARREF	include/libxml/xmlerror.h	/^    XML_ERR_INVALID_CHARREF, \/* 8 *\/$/;"	e	enum:__anon29
XML_ERR_INVALID_DEC_CHARREF	include/libxml/xmlerror.h	/^    XML_ERR_INVALID_DEC_CHARREF, \/* 7 *\/$/;"	e	enum:__anon29
XML_ERR_INVALID_ENCODING	include/libxml/xmlerror.h	/^    XML_ERR_INVALID_ENCODING, \/* 81 *\/$/;"	e	enum:__anon29
XML_ERR_INVALID_HEX_CHARREF	include/libxml/xmlerror.h	/^    XML_ERR_INVALID_HEX_CHARREF, \/* 6 *\/$/;"	e	enum:__anon29
XML_ERR_INVALID_URI	include/libxml/xmlerror.h	/^    XML_ERR_INVALID_URI, \/* 91 *\/$/;"	e	enum:__anon29
XML_ERR_LITERAL_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_LITERAL_NOT_FINISHED, \/* 44 *\/$/;"	e	enum:__anon29
XML_ERR_LITERAL_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_LITERAL_NOT_STARTED, \/* 43 *\/$/;"	e	enum:__anon29
XML_ERR_LTSLASH_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_LTSLASH_REQUIRED, \/* 74 *\/$/;"	e	enum:__anon29
XML_ERR_LT_IN_ATTRIBUTE	include/libxml/xmlerror.h	/^    XML_ERR_LT_IN_ATTRIBUTE, \/* 38 *\/$/;"	e	enum:__anon29
XML_ERR_LT_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_LT_REQUIRED, \/* 72 *\/$/;"	e	enum:__anon29
XML_ERR_MISPLACED_CDATA_END	include/libxml/xmlerror.h	/^    XML_ERR_MISPLACED_CDATA_END, \/* 62 *\/$/;"	e	enum:__anon29
XML_ERR_MISSING_ENCODING	include/libxml/xmlerror.h	/^    XML_ERR_MISSING_ENCODING, \/* 101 *\/$/;"	e	enum:__anon29
XML_ERR_MIXED_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_MIXED_NOT_FINISHED, \/* 53 *\/$/;"	e	enum:__anon29
XML_ERR_MIXED_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_MIXED_NOT_STARTED, \/* 52 *\/$/;"	e	enum:__anon29
XML_ERR_NAME_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_NAME_REQUIRED, \/* 68 *\/$/;"	e	enum:__anon29
XML_ERR_NMTOKEN_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_NMTOKEN_REQUIRED, \/* 67 *\/$/;"	e	enum:__anon29
XML_ERR_NONE	include/libxml/xmlerror.h	/^    XML_ERR_NONE = 0,$/;"	e	enum:__anon27
XML_ERR_NOTATION_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_NOTATION_NOT_FINISHED, \/* 49 *\/$/;"	e	enum:__anon29
XML_ERR_NOTATION_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_NOTATION_NOT_STARTED, \/* 48 *\/$/;"	e	enum:__anon29
XML_ERR_NOT_WELL_BALANCED	include/libxml/xmlerror.h	/^    XML_ERR_NOT_WELL_BALANCED, \/* 85 *\/$/;"	e	enum:__anon29
XML_ERR_NO_DTD	include/libxml/xmlerror.h	/^    XML_ERR_NO_DTD, \/* 94 *\/$/;"	e	enum:__anon29
XML_ERR_NO_MEMORY	include/libxml/xmlerror.h	/^    XML_ERR_NO_MEMORY, \/* 2 *\/$/;"	e	enum:__anon29
XML_ERR_NS_DECL_ERROR	include/libxml/xmlerror.h	/^    XML_ERR_NS_DECL_ERROR, \/* 35 *\/$/;"	e	enum:__anon29
XML_ERR_OK	include/libxml/xmlerror.h	/^    XML_ERR_OK = 0,$/;"	e	enum:__anon29
XML_ERR_PCDATA_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_PCDATA_REQUIRED, \/* 69 *\/$/;"	e	enum:__anon29
XML_ERR_PEREF_AT_EOF	include/libxml/xmlerror.h	/^    XML_ERR_PEREF_AT_EOF, \/* 18 *\/$/;"	e	enum:__anon29
XML_ERR_PEREF_IN_EPILOG	include/libxml/xmlerror.h	/^    XML_ERR_PEREF_IN_EPILOG, \/* 20 *\/$/;"	e	enum:__anon29
XML_ERR_PEREF_IN_INT_SUBSET	include/libxml/xmlerror.h	/^    XML_ERR_PEREF_IN_INT_SUBSET, \/* 21 *\/$/;"	e	enum:__anon29
XML_ERR_PEREF_IN_PROLOG	include/libxml/xmlerror.h	/^    XML_ERR_PEREF_IN_PROLOG, \/* 19 *\/$/;"	e	enum:__anon29
XML_ERR_PEREF_NO_NAME	include/libxml/xmlerror.h	/^    XML_ERR_PEREF_NO_NAME, \/* 24 *\/$/;"	e	enum:__anon29
XML_ERR_PEREF_SEMICOL_MISSING	include/libxml/xmlerror.h	/^    XML_ERR_PEREF_SEMICOL_MISSING, \/* 25 *\/$/;"	e	enum:__anon29
XML_ERR_PI_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_PI_NOT_FINISHED, \/* 47 *\/$/;"	e	enum:__anon29
XML_ERR_PI_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_PI_NOT_STARTED, \/* 46 *\/$/;"	e	enum:__anon29
XML_ERR_PUBID_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_PUBID_REQUIRED, \/* 71 *\/$/;"	e	enum:__anon29
XML_ERR_RESERVED_XML_NAME	include/libxml/xmlerror.h	/^    XML_ERR_RESERVED_XML_NAME, \/* 64 *\/$/;"	e	enum:__anon29
XML_ERR_SEPARATOR_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_SEPARATOR_REQUIRED, \/* 66 *\/$/;"	e	enum:__anon29
XML_ERR_SPACE_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_SPACE_REQUIRED, \/* 65 *\/$/;"	e	enum:__anon29
XML_ERR_STANDALONE_VALUE	include/libxml/xmlerror.h	/^    XML_ERR_STANDALONE_VALUE, \/* 78 *\/$/;"	e	enum:__anon29
XML_ERR_STRING_NOT_CLOSED	include/libxml/xmlerror.h	/^    XML_ERR_STRING_NOT_CLOSED, \/* 34 *\/$/;"	e	enum:__anon29
XML_ERR_STRING_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_STRING_NOT_STARTED, \/* 33 *\/$/;"	e	enum:__anon29
XML_ERR_TAG_NAME_MISMATCH	include/libxml/xmlerror.h	/^    XML_ERR_TAG_NAME_MISMATCH, \/* 76 *\/$/;"	e	enum:__anon29
XML_ERR_TAG_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_TAG_NOT_FINISHED, \/* 77 *\/$/;"	e	enum:__anon29
XML_ERR_UNDECLARED_ENTITY	include/libxml/xmlerror.h	/^    XML_ERR_UNDECLARED_ENTITY, \/* 26 *\/$/;"	e	enum:__anon29
XML_ERR_UNKNOWN_ENCODING	include/libxml/xmlerror.h	/^    XML_ERR_UNKNOWN_ENCODING, \/* 31 *\/$/;"	e	enum:__anon29
XML_ERR_UNPARSED_ENTITY	include/libxml/xmlerror.h	/^    XML_ERR_UNPARSED_ENTITY, \/* 28 *\/$/;"	e	enum:__anon29
XML_ERR_UNSUPPORTED_ENCODING	include/libxml/xmlerror.h	/^    XML_ERR_UNSUPPORTED_ENCODING, \/* 32 *\/$/;"	e	enum:__anon29
XML_ERR_URI_FRAGMENT	include/libxml/xmlerror.h	/^    XML_ERR_URI_FRAGMENT, \/* 92 *\/$/;"	e	enum:__anon29
XML_ERR_URI_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_URI_REQUIRED, \/* 70 *\/$/;"	e	enum:__anon29
XML_ERR_VALUE_REQUIRED	include/libxml/xmlerror.h	/^    XML_ERR_VALUE_REQUIRED, \/* 84 *\/$/;"	e	enum:__anon29
XML_ERR_VERSION_MISSING	include/libxml/xmlerror.h	/^    XML_ERR_VERSION_MISSING, \/* 96 *\/$/;"	e	enum:__anon29
XML_ERR_WARNING	include/libxml/xmlerror.h	/^    XML_ERR_WARNING = 1,	\/* A simple warning *\/$/;"	e	enum:__anon27
XML_ERR_XMLDECL_NOT_FINISHED	include/libxml/xmlerror.h	/^    XML_ERR_XMLDECL_NOT_FINISHED, \/* 57 *\/$/;"	e	enum:__anon29
XML_ERR_XMLDECL_NOT_STARTED	include/libxml/xmlerror.h	/^    XML_ERR_XMLDECL_NOT_STARTED, \/* 56 *\/$/;"	e	enum:__anon29
XML_EXTERNAL_GENERAL_PARSED_ENTITY	include/libxml/entities.h	/^    XML_EXTERNAL_GENERAL_PARSED_ENTITY = 2,$/;"	e	enum:__anon8
XML_EXTERNAL_GENERAL_UNPARSED_ENTITY	include/libxml/entities.h	/^    XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = 3,$/;"	e	enum:__anon8
XML_EXTERNAL_PARAMETER_ENTITY	include/libxml/entities.h	/^    XML_EXTERNAL_PARAMETER_ENTITY = 5,$/;"	e	enum:__anon8
XML_FROM_C14N	include/libxml/xmlerror.h	/^    XML_FROM_C14N,	\/* The Canonicalization module *\/$/;"	e	enum:__anon28
XML_FROM_CATALOG	include/libxml/xmlerror.h	/^    XML_FROM_CATALOG,	\/* The Catalog module *\/$/;"	e	enum:__anon28
XML_FROM_CHECK	include/libxml/xmlerror.h	/^    XML_FROM_CHECK,	\/* The error checking module *\/$/;"	e	enum:__anon28
XML_FROM_DATATYPE	include/libxml/xmlerror.h	/^    XML_FROM_DATATYPE,	\/* The W3C XML Schemas Datatype module *\/$/;"	e	enum:__anon28
XML_FROM_DTD	include/libxml/xmlerror.h	/^    XML_FROM_DTD,	\/* The XML DTD validation with parser context*\/$/;"	e	enum:__anon28
XML_FROM_FTP	include/libxml/xmlerror.h	/^    XML_FROM_FTP,	\/* The FTP module *\/$/;"	e	enum:__anon28
XML_FROM_HTML	include/libxml/xmlerror.h	/^    XML_FROM_HTML,	\/* The HTML parser *\/$/;"	e	enum:__anon28
XML_FROM_HTTP	include/libxml/xmlerror.h	/^    XML_FROM_HTTP,	\/* The HTTP module *\/$/;"	e	enum:__anon28
XML_FROM_IO	include/libxml/xmlerror.h	/^    XML_FROM_IO,	\/* The Input\/Output stack *\/$/;"	e	enum:__anon28
XML_FROM_MEMORY	include/libxml/xmlerror.h	/^    XML_FROM_MEMORY,	\/* The memory allocator *\/$/;"	e	enum:__anon28
XML_FROM_MODULE	include/libxml/xmlerror.h	/^    XML_FROM_MODULE	\/* The dynamically loaded module module*\/$/;"	e	enum:__anon28
XML_FROM_NAMESPACE	include/libxml/xmlerror.h	/^    XML_FROM_NAMESPACE,	\/* The XML Namespace module *\/$/;"	e	enum:__anon28
XML_FROM_NONE	include/libxml/xmlerror.h	/^    XML_FROM_NONE = 0,$/;"	e	enum:__anon28
XML_FROM_OUTPUT	include/libxml/xmlerror.h	/^    XML_FROM_OUTPUT,	\/* The serialization code *\/$/;"	e	enum:__anon28
XML_FROM_PARSER	include/libxml/xmlerror.h	/^    XML_FROM_PARSER,	\/* The XML parser *\/$/;"	e	enum:__anon28
XML_FROM_REGEXP	include/libxml/xmlerror.h	/^    XML_FROM_REGEXP,	\/* The regular expressions module *\/$/;"	e	enum:__anon28
XML_FROM_RELAXNGP	include/libxml/xmlerror.h	/^    XML_FROM_RELAXNGP,	\/* The Relax-NG parser module *\/$/;"	e	enum:__anon28
XML_FROM_RELAXNGV	include/libxml/xmlerror.h	/^    XML_FROM_RELAXNGV,	\/* The Relax-NG validator module *\/$/;"	e	enum:__anon28
XML_FROM_SCHEMASP	include/libxml/xmlerror.h	/^    XML_FROM_SCHEMASP,	\/* The W3C XML Schemas parser module *\/$/;"	e	enum:__anon28
XML_FROM_SCHEMASV	include/libxml/xmlerror.h	/^    XML_FROM_SCHEMASV,	\/* The W3C XML Schemas validation module *\/$/;"	e	enum:__anon28
XML_FROM_TREE	include/libxml/xmlerror.h	/^    XML_FROM_TREE,	\/* The tree module *\/$/;"	e	enum:__anon28
XML_FROM_VALID	include/libxml/xmlerror.h	/^    XML_FROM_VALID,	\/* The XML DTD validation with valid context *\/$/;"	e	enum:__anon28
XML_FROM_WRITER	include/libxml/xmlerror.h	/^    XML_FROM_WRITER,	\/* The xmlwriter module *\/$/;"	e	enum:__anon28
XML_FROM_XINCLUDE	include/libxml/xmlerror.h	/^    XML_FROM_XINCLUDE,	\/* The XInclude processing *\/$/;"	e	enum:__anon28
XML_FROM_XPATH	include/libxml/xmlerror.h	/^    XML_FROM_XPATH,	\/* The XPath module *\/$/;"	e	enum:__anon28
XML_FROM_XPOINTER	include/libxml/xmlerror.h	/^    XML_FROM_XPOINTER,	\/* The XPointer module *\/$/;"	e	enum:__anon28
XML_FROM_XSLT	include/libxml/xmlerror.h	/^    XML_FROM_XSLT,	\/* The XSLT engine from libxslt *\/$/;"	e	enum:__anon28
XML_FTP_ACCNT	include/libxml/xmlerror.h	/^    XML_FTP_ACCNT, \/* 2002 *\/$/;"	e	enum:__anon29
XML_FTP_EPSV_ANSWER	include/libxml/xmlerror.h	/^    XML_FTP_EPSV_ANSWER, \/* 2001 *\/$/;"	e	enum:__anon29
XML_FTP_PASV_ANSWER	include/libxml/xmlerror.h	/^    XML_FTP_PASV_ANSWER = 2000,$/;"	e	enum:__anon29
XML_FTP_URL_SYNTAX	include/libxml/xmlerror.h	/^    XML_FTP_URL_SYNTAX, \/* 2003 *\/$/;"	e	enum:__anon29
XML_GET_CONTENT	include/libxml/tree.h	465;"	d
XML_GET_LINE	include/libxml/tree.h	473;"	d
XML_HTML_DOCUMENT_NODE	include/libxml/tree.h	/^    XML_HTML_DOCUMENT_NODE=	13,$/;"	e	enum:__anon17
XML_HTML_STRUCURE_ERROR	include/libxml/xmlerror.h	/^    XML_HTML_STRUCURE_ERROR = 800,$/;"	e	enum:__anon29
XML_HTML_UNKNOWN_TAG	include/libxml/xmlerror.h	/^    XML_HTML_UNKNOWN_TAG, \/* 801 *\/$/;"	e	enum:__anon29
XML_HTTP_UNKNOWN_HOST	include/libxml/xmlerror.h	/^    XML_HTTP_UNKNOWN_HOST, \/* 2022 *\/$/;"	e	enum:__anon29
XML_HTTP_URL_SYNTAX	include/libxml/xmlerror.h	/^    XML_HTTP_URL_SYNTAX = 2020,$/;"	e	enum:__anon29
XML_HTTP_USE_IP	include/libxml/xmlerror.h	/^    XML_HTTP_USE_IP, \/* 2021 *\/$/;"	e	enum:__anon29
XML_INTERNAL_GENERAL_ENTITY	include/libxml/entities.h	/^    XML_INTERNAL_GENERAL_ENTITY = 1,$/;"	e	enum:__anon8
XML_INTERNAL_PARAMETER_ENTITY	include/libxml/entities.h	/^    XML_INTERNAL_PARAMETER_ENTITY = 4,$/;"	e	enum:__anon8
XML_INTERNAL_PREDEFINED_ENTITY	include/libxml/entities.h	/^    XML_INTERNAL_PREDEFINED_ENTITY = 6$/;"	e	enum:__anon8
XML_IO_BUFFER_FULL	include/libxml/xmlerror.h	/^    XML_IO_BUFFER_FULL, \/* 1548 *\/$/;"	e	enum:__anon29
XML_IO_EACCES	include/libxml/xmlerror.h	/^    XML_IO_EACCES, \/* 1501 *\/$/;"	e	enum:__anon29
XML_IO_EADDRINUSE	include/libxml/xmlerror.h	/^    XML_IO_EADDRINUSE, \/* 1554 *\/$/;"	e	enum:__anon29
XML_IO_EAFNOSUPPORT	include/libxml/xmlerror.h	/^    XML_IO_EAFNOSUPPORT, \/* 1556 *\/$/;"	e	enum:__anon29
XML_IO_EAGAIN	include/libxml/xmlerror.h	/^    XML_IO_EAGAIN, \/* 1502 *\/$/;"	e	enum:__anon29
XML_IO_EALREADY	include/libxml/xmlerror.h	/^    XML_IO_EALREADY, \/* 1555 *\/$/;"	e	enum:__anon29
XML_IO_EBADF	include/libxml/xmlerror.h	/^    XML_IO_EBADF, \/* 1503 *\/$/;"	e	enum:__anon29
XML_IO_EBADMSG	include/libxml/xmlerror.h	/^    XML_IO_EBADMSG, \/* 1504 *\/$/;"	e	enum:__anon29
XML_IO_EBUSY	include/libxml/xmlerror.h	/^    XML_IO_EBUSY, \/* 1505 *\/$/;"	e	enum:__anon29
XML_IO_ECANCELED	include/libxml/xmlerror.h	/^    XML_IO_ECANCELED, \/* 1506 *\/$/;"	e	enum:__anon29
XML_IO_ECHILD	include/libxml/xmlerror.h	/^    XML_IO_ECHILD, \/* 1507 *\/$/;"	e	enum:__anon29
XML_IO_ECONNREFUSED	include/libxml/xmlerror.h	/^    XML_IO_ECONNREFUSED, \/* 1552 *\/$/;"	e	enum:__anon29
XML_IO_EDEADLK	include/libxml/xmlerror.h	/^    XML_IO_EDEADLK, \/* 1508 *\/$/;"	e	enum:__anon29
XML_IO_EDOM	include/libxml/xmlerror.h	/^    XML_IO_EDOM, \/* 1509 *\/$/;"	e	enum:__anon29
XML_IO_EEXIST	include/libxml/xmlerror.h	/^    XML_IO_EEXIST, \/* 1510 *\/$/;"	e	enum:__anon29
XML_IO_EFAULT	include/libxml/xmlerror.h	/^    XML_IO_EFAULT, \/* 1511 *\/$/;"	e	enum:__anon29
XML_IO_EFBIG	include/libxml/xmlerror.h	/^    XML_IO_EFBIG, \/* 1512 *\/$/;"	e	enum:__anon29
XML_IO_EINPROGRESS	include/libxml/xmlerror.h	/^    XML_IO_EINPROGRESS, \/* 1513 *\/$/;"	e	enum:__anon29
XML_IO_EINTR	include/libxml/xmlerror.h	/^    XML_IO_EINTR, \/* 1514 *\/$/;"	e	enum:__anon29
XML_IO_EINVAL	include/libxml/xmlerror.h	/^    XML_IO_EINVAL, \/* 1515 *\/$/;"	e	enum:__anon29
XML_IO_EIO	include/libxml/xmlerror.h	/^    XML_IO_EIO, \/* 1516 *\/$/;"	e	enum:__anon29
XML_IO_EISCONN	include/libxml/xmlerror.h	/^    XML_IO_EISCONN, \/* 1551 *\/$/;"	e	enum:__anon29
XML_IO_EISDIR	include/libxml/xmlerror.h	/^    XML_IO_EISDIR, \/* 1517 *\/$/;"	e	enum:__anon29
XML_IO_EMFILE	include/libxml/xmlerror.h	/^    XML_IO_EMFILE, \/* 1518 *\/$/;"	e	enum:__anon29
XML_IO_EMLINK	include/libxml/xmlerror.h	/^    XML_IO_EMLINK, \/* 1519 *\/$/;"	e	enum:__anon29
XML_IO_EMSGSIZE	include/libxml/xmlerror.h	/^    XML_IO_EMSGSIZE, \/* 1520 *\/$/;"	e	enum:__anon29
XML_IO_ENAMETOOLONG	include/libxml/xmlerror.h	/^    XML_IO_ENAMETOOLONG, \/* 1521 *\/$/;"	e	enum:__anon29
XML_IO_ENCODER	include/libxml/xmlerror.h	/^    XML_IO_ENCODER, \/* 1544 *\/$/;"	e	enum:__anon29
XML_IO_ENETUNREACH	include/libxml/xmlerror.h	/^    XML_IO_ENETUNREACH, \/* 1553 *\/$/;"	e	enum:__anon29
XML_IO_ENFILE	include/libxml/xmlerror.h	/^    XML_IO_ENFILE, \/* 1522 *\/$/;"	e	enum:__anon29
XML_IO_ENODEV	include/libxml/xmlerror.h	/^    XML_IO_ENODEV, \/* 1523 *\/$/;"	e	enum:__anon29
XML_IO_ENOENT	include/libxml/xmlerror.h	/^    XML_IO_ENOENT, \/* 1524 *\/$/;"	e	enum:__anon29
XML_IO_ENOEXEC	include/libxml/xmlerror.h	/^    XML_IO_ENOEXEC, \/* 1525 *\/$/;"	e	enum:__anon29
XML_IO_ENOLCK	include/libxml/xmlerror.h	/^    XML_IO_ENOLCK, \/* 1526 *\/$/;"	e	enum:__anon29
XML_IO_ENOMEM	include/libxml/xmlerror.h	/^    XML_IO_ENOMEM, \/* 1527 *\/$/;"	e	enum:__anon29
XML_IO_ENOSPC	include/libxml/xmlerror.h	/^    XML_IO_ENOSPC, \/* 1528 *\/$/;"	e	enum:__anon29
XML_IO_ENOSYS	include/libxml/xmlerror.h	/^    XML_IO_ENOSYS, \/* 1529 *\/$/;"	e	enum:__anon29
XML_IO_ENOTDIR	include/libxml/xmlerror.h	/^    XML_IO_ENOTDIR, \/* 1530 *\/$/;"	e	enum:__anon29
XML_IO_ENOTEMPTY	include/libxml/xmlerror.h	/^    XML_IO_ENOTEMPTY, \/* 1531 *\/$/;"	e	enum:__anon29
XML_IO_ENOTSOCK	include/libxml/xmlerror.h	/^    XML_IO_ENOTSOCK, \/* 1550 *\/$/;"	e	enum:__anon29
XML_IO_ENOTSUP	include/libxml/xmlerror.h	/^    XML_IO_ENOTSUP, \/* 1532 *\/$/;"	e	enum:__anon29
XML_IO_ENOTTY	include/libxml/xmlerror.h	/^    XML_IO_ENOTTY, \/* 1533 *\/$/;"	e	enum:__anon29
XML_IO_ENXIO	include/libxml/xmlerror.h	/^    XML_IO_ENXIO, \/* 1534 *\/$/;"	e	enum:__anon29
XML_IO_EPERM	include/libxml/xmlerror.h	/^    XML_IO_EPERM, \/* 1535 *\/$/;"	e	enum:__anon29
XML_IO_EPIPE	include/libxml/xmlerror.h	/^    XML_IO_EPIPE, \/* 1536 *\/$/;"	e	enum:__anon29
XML_IO_ERANGE	include/libxml/xmlerror.h	/^    XML_IO_ERANGE, \/* 1537 *\/$/;"	e	enum:__anon29
XML_IO_EROFS	include/libxml/xmlerror.h	/^    XML_IO_EROFS, \/* 1538 *\/$/;"	e	enum:__anon29
XML_IO_ESPIPE	include/libxml/xmlerror.h	/^    XML_IO_ESPIPE, \/* 1539 *\/$/;"	e	enum:__anon29
XML_IO_ESRCH	include/libxml/xmlerror.h	/^    XML_IO_ESRCH, \/* 1540 *\/$/;"	e	enum:__anon29
XML_IO_ETIMEDOUT	include/libxml/xmlerror.h	/^    XML_IO_ETIMEDOUT, \/* 1541 *\/$/;"	e	enum:__anon29
XML_IO_EXDEV	include/libxml/xmlerror.h	/^    XML_IO_EXDEV, \/* 1542 *\/$/;"	e	enum:__anon29
XML_IO_FLUSH	include/libxml/xmlerror.h	/^    XML_IO_FLUSH, \/* 1545 *\/$/;"	e	enum:__anon29
XML_IO_LOAD_ERROR	include/libxml/xmlerror.h	/^    XML_IO_LOAD_ERROR, \/* 1549 *\/$/;"	e	enum:__anon29
XML_IO_NETWORK_ATTEMPT	include/libxml/xmlerror.h	/^    XML_IO_NETWORK_ATTEMPT, \/* 1543 *\/$/;"	e	enum:__anon29
XML_IO_NO_INPUT	include/libxml/xmlerror.h	/^    XML_IO_NO_INPUT, \/* 1547 *\/$/;"	e	enum:__anon29
XML_IO_UNKNOWN	include/libxml/xmlerror.h	/^    XML_IO_UNKNOWN = 1500,$/;"	e	enum:__anon29
XML_IO_WRITE	include/libxml/xmlerror.h	/^    XML_IO_WRITE, \/* 1546 *\/$/;"	e	enum:__anon29
XML_LOCAL_NAMESPACE	include/libxml/tree.h	298;"	d
XML_MAX_NAMELEN	include/libxml/parserInternals.h	39;"	d
XML_MODULE_CLOSE	include/libxml/xmlerror.h	/^    XML_MODULE_CLOSE, \/* 4901 *\/$/;"	e	enum:__anon29
XML_MODULE_LAZY	include/libxml/xmlmodule.h	/^    XML_MODULE_LAZY = 1,	\/* lazy binding *\/$/;"	e	enum:__anon30
XML_MODULE_LOCAL	include/libxml/xmlmodule.h	/^    XML_MODULE_LOCAL= 2		\/* local binding *\/$/;"	e	enum:__anon30
XML_MODULE_OPEN	include/libxml/xmlerror.h	/^    XML_MODULE_OPEN = 4900, \/* 4900 *\/$/;"	e	enum:__anon29
XML_NAMESPACE_DECL	include/libxml/tree.h	/^    XML_NAMESPACE_DECL=		18,$/;"	e	enum:__anon17
XML_NOTATION_NODE	include/libxml/tree.h	/^    XML_NOTATION_NODE=		12,$/;"	e	enum:__anon17
XML_NS_ERR_ATTRIBUTE_REDEFINED	include/libxml/xmlerror.h	/^    XML_NS_ERR_ATTRIBUTE_REDEFINED, \/* 203 *\/$/;"	e	enum:__anon29
XML_NS_ERR_QNAME	include/libxml/xmlerror.h	/^    XML_NS_ERR_QNAME, \/* 202 *\/$/;"	e	enum:__anon29
XML_NS_ERR_UNDEFINED_NAMESPACE	include/libxml/xmlerror.h	/^    XML_NS_ERR_UNDEFINED_NAMESPACE, \/* 201 *\/$/;"	e	enum:__anon29
XML_NS_ERR_XML_NAMESPACE	include/libxml/xmlerror.h	/^    XML_NS_ERR_XML_NAMESPACE = 200,$/;"	e	enum:__anon29
XML_PARSER_ATTRIBUTE_VALUE	include/libxml/parser.h	/^    XML_PARSER_ATTRIBUTE_VALUE,	\/* within an attribute value *\/$/;"	e	enum:__anon9
XML_PARSER_CDATA_SECTION	include/libxml/parser.h	/^    XML_PARSER_CDATA_SECTION,	\/* within a CDATA section *\/$/;"	e	enum:__anon9
XML_PARSER_COMMENT	include/libxml/parser.h	/^    XML_PARSER_COMMENT,		\/* within a comment *\/$/;"	e	enum:__anon9
XML_PARSER_CONTENT	include/libxml/parser.h	/^    XML_PARSER_CONTENT,		\/* within the content *\/$/;"	e	enum:__anon9
XML_PARSER_DEFAULTATTRS	include/libxml/xmlreader.h	/^    XML_PARSER_DEFAULTATTRS = 2,$/;"	e	enum:__anon32
XML_PARSER_DTD	include/libxml/parser.h	/^    XML_PARSER_DTD,		\/* within some DTD content *\/$/;"	e	enum:__anon9
XML_PARSER_END_TAG	include/libxml/parser.h	/^    XML_PARSER_END_TAG,		\/* within a closing tag *\/$/;"	e	enum:__anon9
XML_PARSER_ENTITY_DECL	include/libxml/parser.h	/^    XML_PARSER_ENTITY_DECL,	\/* within an entity declaration *\/$/;"	e	enum:__anon9
XML_PARSER_ENTITY_VALUE	include/libxml/parser.h	/^    XML_PARSER_ENTITY_VALUE,	\/* within an entity value in a decl *\/$/;"	e	enum:__anon9
XML_PARSER_EOF	include/libxml/parser.h	/^    XML_PARSER_EOF = -1,	\/* nothing is to be parsed *\/$/;"	e	enum:__anon9
XML_PARSER_EPILOG	include/libxml/parser.h	/^    XML_PARSER_EPILOG, 		\/* the Misc* after the last end tag *\/$/;"	e	enum:__anon9
XML_PARSER_IGNORE	include/libxml/parser.h	/^    XML_PARSER_IGNORE,		\/* within an IGNORED section *\/$/;"	e	enum:__anon9
XML_PARSER_LOADDTD	include/libxml/xmlreader.h	/^    XML_PARSER_LOADDTD = 1,$/;"	e	enum:__anon32
XML_PARSER_MISC	include/libxml/parser.h	/^    XML_PARSER_MISC,		\/* Misc* before int subset *\/$/;"	e	enum:__anon9
XML_PARSER_PI	include/libxml/parser.h	/^    XML_PARSER_PI,		\/* Within a processing instruction *\/$/;"	e	enum:__anon9
XML_PARSER_PROLOG	include/libxml/parser.h	/^    XML_PARSER_PROLOG,		\/* Misc* after internal subset *\/$/;"	e	enum:__anon9
XML_PARSER_PUBLIC_LITERAL	include/libxml/parser.h	/^    XML_PARSER_PUBLIC_LITERAL 	\/* within a PUBLIC value *\/$/;"	e	enum:__anon9
XML_PARSER_SEVERITY_ERROR	include/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_ERROR = 4$/;"	e	enum:__anon33
XML_PARSER_SEVERITY_VALIDITY_ERROR	include/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_VALIDITY_ERROR = 2,$/;"	e	enum:__anon33
XML_PARSER_SEVERITY_VALIDITY_WARNING	include/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_VALIDITY_WARNING = 1,$/;"	e	enum:__anon33
XML_PARSER_SEVERITY_WARNING	include/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_WARNING = 3,$/;"	e	enum:__anon33
XML_PARSER_START	include/libxml/parser.h	/^    XML_PARSER_START = 0,	\/* nothing has been parsed *\/$/;"	e	enum:__anon9
XML_PARSER_START_TAG	include/libxml/parser.h	/^    XML_PARSER_START_TAG,	\/* within a start tag *\/$/;"	e	enum:__anon9
XML_PARSER_SUBST_ENTITIES	include/libxml/xmlreader.h	/^    XML_PARSER_SUBST_ENTITIES = 4$/;"	e	enum:__anon32
XML_PARSER_SYSTEM_LITERAL	include/libxml/parser.h	/^    XML_PARSER_SYSTEM_LITERAL,	\/* within a SYSTEM value *\/$/;"	e	enum:__anon9
XML_PARSER_VALIDATE	include/libxml/xmlreader.h	/^    XML_PARSER_VALIDATE = 3,$/;"	e	enum:__anon32
XML_PARSE_DOM	include/libxml/parser.h	/^    XML_PARSE_DOM = 1,$/;"	e	enum:__anon10
XML_PARSE_DTDATTR	include/libxml/parser.h	/^    XML_PARSE_DTDATTR	= 1<<3,	\/* default DTD attributes *\/$/;"	e	enum:__anon11
XML_PARSE_DTDLOAD	include/libxml/parser.h	/^    XML_PARSE_DTDLOAD	= 1<<2,	\/* load the external subset *\/$/;"	e	enum:__anon11
XML_PARSE_DTDVALID	include/libxml/parser.h	/^    XML_PARSE_DTDVALID	= 1<<4,	\/* validate with the DTD *\/$/;"	e	enum:__anon11
XML_PARSE_NOBLANKS	include/libxml/parser.h	/^    XML_PARSE_NOBLANKS	= 1<<8,	\/* remove blank nodes *\/$/;"	e	enum:__anon11
XML_PARSE_NOCDATA	include/libxml/parser.h	/^    XML_PARSE_NOCDATA	= 1<<14,\/* merge CDATA as text nodes *\/$/;"	e	enum:__anon11
XML_PARSE_NODICT	include/libxml/parser.h	/^    XML_PARSE_NODICT	= 1<<12,\/* Do not reuse the context dictionnary *\/$/;"	e	enum:__anon11
XML_PARSE_NOENT	include/libxml/parser.h	/^    XML_PARSE_NOENT	= 1<<1,	\/* substitute entities *\/$/;"	e	enum:__anon11
XML_PARSE_NOERROR	include/libxml/parser.h	/^    XML_PARSE_NOERROR	= 1<<5,	\/* suppress error reports *\/$/;"	e	enum:__anon11
XML_PARSE_NONET	include/libxml/parser.h	/^    XML_PARSE_NONET	= 1<<11,\/* Forbid network access *\/$/;"	e	enum:__anon11
XML_PARSE_NOWARNING	include/libxml/parser.h	/^    XML_PARSE_NOWARNING	= 1<<6,	\/* suppress warning reports *\/$/;"	e	enum:__anon11
XML_PARSE_NOXINCNODE	include/libxml/parser.h	/^    XML_PARSE_NOXINCNODE= 1<<15 \/* do not generate XINCLUDE START\/END nodes *\/$/;"	e	enum:__anon11
XML_PARSE_NSCLEAN	include/libxml/parser.h	/^    XML_PARSE_NSCLEAN	= 1<<13,\/* remove redundant namespaces declarations *\/$/;"	e	enum:__anon11
XML_PARSE_PEDANTIC	include/libxml/parser.h	/^    XML_PARSE_PEDANTIC	= 1<<7,	\/* pedantic error reporting *\/$/;"	e	enum:__anon11
XML_PARSE_PUSH_DOM	include/libxml/parser.h	/^    XML_PARSE_PUSH_DOM = 3,$/;"	e	enum:__anon10
XML_PARSE_PUSH_SAX	include/libxml/parser.h	/^    XML_PARSE_PUSH_SAX = 4,$/;"	e	enum:__anon10
XML_PARSE_READER	include/libxml/parser.h	/^    XML_PARSE_READER = 5$/;"	e	enum:__anon10
XML_PARSE_RECOVER	include/libxml/parser.h	/^    XML_PARSE_RECOVER	= 1<<0,	\/* recover on errors *\/$/;"	e	enum:__anon11
XML_PARSE_SAX	include/libxml/parser.h	/^    XML_PARSE_SAX = 2,$/;"	e	enum:__anon10
XML_PARSE_SAX1	include/libxml/parser.h	/^    XML_PARSE_SAX1	= 1<<9,	\/* use the SAX1 interface internally *\/$/;"	e	enum:__anon11
XML_PARSE_UNKNOWN	include/libxml/parser.h	/^    XML_PARSE_UNKNOWN = 0,$/;"	e	enum:__anon10
XML_PARSE_XINCLUDE	include/libxml/parser.h	/^    XML_PARSE_XINCLUDE	= 1<<10,\/* Implement XInclude substitition  *\/$/;"	e	enum:__anon11
XML_PI_NODE	include/libxml/tree.h	/^    XML_PI_NODE=		7,$/;"	e	enum:__anon17
XML_READER_TYPE_ATTRIBUTE	include/libxml/xmlreader.h	/^    XML_READER_TYPE_ATTRIBUTE = 2,$/;"	e	enum:__anon34
XML_READER_TYPE_CDATA	include/libxml/xmlreader.h	/^    XML_READER_TYPE_CDATA = 4,$/;"	e	enum:__anon34
XML_READER_TYPE_COMMENT	include/libxml/xmlreader.h	/^    XML_READER_TYPE_COMMENT = 8,$/;"	e	enum:__anon34
XML_READER_TYPE_DOCUMENT	include/libxml/xmlreader.h	/^    XML_READER_TYPE_DOCUMENT = 9,$/;"	e	enum:__anon34
XML_READER_TYPE_DOCUMENT_FRAGMENT	include/libxml/xmlreader.h	/^    XML_READER_TYPE_DOCUMENT_FRAGMENT = 11,$/;"	e	enum:__anon34
XML_READER_TYPE_DOCUMENT_TYPE	include/libxml/xmlreader.h	/^    XML_READER_TYPE_DOCUMENT_TYPE = 10,$/;"	e	enum:__anon34
XML_READER_TYPE_ELEMENT	include/libxml/xmlreader.h	/^    XML_READER_TYPE_ELEMENT = 1,$/;"	e	enum:__anon34
XML_READER_TYPE_END_ELEMENT	include/libxml/xmlreader.h	/^    XML_READER_TYPE_END_ELEMENT = 15,$/;"	e	enum:__anon34
XML_READER_TYPE_END_ENTITY	include/libxml/xmlreader.h	/^    XML_READER_TYPE_END_ENTITY = 16,$/;"	e	enum:__anon34
XML_READER_TYPE_ENTITY	include/libxml/xmlreader.h	/^    XML_READER_TYPE_ENTITY = 6,$/;"	e	enum:__anon34
XML_READER_TYPE_ENTITY_REFERENCE	include/libxml/xmlreader.h	/^    XML_READER_TYPE_ENTITY_REFERENCE = 5,$/;"	e	enum:__anon34
XML_READER_TYPE_NONE	include/libxml/xmlreader.h	/^    XML_READER_TYPE_NONE = 0,$/;"	e	enum:__anon34
XML_READER_TYPE_NOTATION	include/libxml/xmlreader.h	/^    XML_READER_TYPE_NOTATION = 12,$/;"	e	enum:__anon34
XML_READER_TYPE_PROCESSING_INSTRUCTION	include/libxml/xmlreader.h	/^    XML_READER_TYPE_PROCESSING_INSTRUCTION = 7,$/;"	e	enum:__anon34
XML_READER_TYPE_SIGNIFICANT_WHITESPACE	include/libxml/xmlreader.h	/^    XML_READER_TYPE_SIGNIFICANT_WHITESPACE = 14,$/;"	e	enum:__anon34
XML_READER_TYPE_TEXT	include/libxml/xmlreader.h	/^    XML_READER_TYPE_TEXT = 3,$/;"	e	enum:__anon34
XML_READER_TYPE_WHITESPACE	include/libxml/xmlreader.h	/^    XML_READER_TYPE_WHITESPACE = 13,$/;"	e	enum:__anon34
XML_READER_TYPE_XML_DECLARATION	include/libxml/xmlreader.h	/^    XML_READER_TYPE_XML_DECLARATION = 17$/;"	e	enum:__anon34
XML_REGEXP_COMPILE_ERROR	include/libxml/xmlerror.h	/^    XML_REGEXP_COMPILE_ERROR = 1450,$/;"	e	enum:__anon29
XML_RELAXNGP_CRNG	include/libxml/relaxng.h	/^    XML_RELAXNGP_CRNG = 2$/;"	e	enum:__anon13
XML_RELAXNGP_FREE_DOC	include/libxml/relaxng.h	/^    XML_RELAXNGP_FREE_DOC = 1,$/;"	e	enum:__anon13
XML_RELAXNGP_NONE	include/libxml/relaxng.h	/^    XML_RELAXNGP_NONE = 0,$/;"	e	enum:__anon13
XML_RELAXNG_ERR_ATTREXTRANS	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTREXTRANS,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ATTRNAME	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRNAME,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ATTRNONS	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRNONS,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ATTRVALID	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRVALID,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ATTRWRONGNS	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRWRONGNS,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_CONTENTVALID	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_CONTENTVALID,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_DATAELEM	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_DATAELEM,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_DATATYPE	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_DATATYPE,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_DUPID	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_DUPID,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ELEMEXTRANS	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMEXTRANS,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ELEMNAME	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMNAME,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ELEMNONS	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMNONS,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ELEMNOTEMPTY	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMNOTEMPTY,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ELEMWRONG	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMWRONG,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_ELEMWRONGNS	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMWRONGNS,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_EXTRACONTENT	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_EXTRACONTENT,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_EXTRADATA	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_EXTRADATA,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_INTEREXTRA	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTEREXTRA,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_INTERNAL	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTERNAL,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_INTERNODATA	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTERNODATA,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_INTERSEQ	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTERSEQ,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_INVALIDATTR	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INVALIDATTR,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_LACKDATA	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LACKDATA,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_LIST	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LIST,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_LISTELEM	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LISTELEM,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_LISTEMPTY	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LISTEMPTY,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_LISTEXTRA	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LISTEXTRA,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_MEMORY	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_MEMORY,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_NODEFINE	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NODEFINE,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_NOELEM	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOELEM,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_NOGRAMMAR	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOGRAMMAR,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_NOSTATE	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOSTATE,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_NOTELEM	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOTELEM,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_TEXTWRONG	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TEXTWRONG$/;"	e	enum:__anon12
XML_RELAXNG_ERR_TYPE	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TYPE,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_TYPECMP	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TYPECMP,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_TYPEVAL	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TYPEVAL,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_VALELEM	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_VALELEM,$/;"	e	enum:__anon12
XML_RELAXNG_ERR_VALUE	include/libxml/relaxng.h	/^    XML_RELAXNG_ERR_VALUE,$/;"	e	enum:__anon12
XML_RELAXNG_OK	include/libxml/relaxng.h	/^    XML_RELAXNG_OK = 0,$/;"	e	enum:__anon12
XML_RNGP_ANYNAME_ATTR_ANCESTOR	include/libxml/xmlerror.h	/^    XML_RNGP_ANYNAME_ATTR_ANCESTOR = 1000,$/;"	e	enum:__anon29
XML_RNGP_ATTRIBUTE_CHILDREN	include/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_CHILDREN, \/* 1002 *\/$/;"	e	enum:__anon29
XML_RNGP_ATTRIBUTE_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_CONTENT, \/* 1003 *\/$/;"	e	enum:__anon29
XML_RNGP_ATTRIBUTE_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_EMPTY, \/* 1004 *\/$/;"	e	enum:__anon29
XML_RNGP_ATTRIBUTE_NOOP	include/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_NOOP, \/* 1005 *\/$/;"	e	enum:__anon29
XML_RNGP_ATTR_CONFLICT	include/libxml/xmlerror.h	/^    XML_RNGP_ATTR_CONFLICT, \/* 1001 *\/$/;"	e	enum:__anon29
XML_RNGP_CHOICE_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_CHOICE_CONTENT, \/* 1006 *\/$/;"	e	enum:__anon29
XML_RNGP_CHOICE_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_CHOICE_EMPTY, \/* 1007 *\/$/;"	e	enum:__anon29
XML_RNGP_CREATE_FAILURE	include/libxml/xmlerror.h	/^    XML_RNGP_CREATE_FAILURE, \/* 1008 *\/$/;"	e	enum:__anon29
XML_RNGP_DATA_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_DATA_CONTENT, \/* 1009 *\/$/;"	e	enum:__anon29
XML_RNGP_DEFINE_CREATE_FAILED	include/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_CREATE_FAILED, \/* 1011 *\/$/;"	e	enum:__anon29
XML_RNGP_DEFINE_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_EMPTY, \/* 1012 *\/$/;"	e	enum:__anon29
XML_RNGP_DEFINE_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_MISSING, \/* 1013 *\/$/;"	e	enum:__anon29
XML_RNGP_DEFINE_NAME_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_NAME_MISSING, \/* 1014 *\/$/;"	e	enum:__anon29
XML_RNGP_DEF_CHOICE_AND_INTERLEAVE	include/libxml/xmlerror.h	/^    XML_RNGP_DEF_CHOICE_AND_INTERLEAVE, \/* 1010 *\/$/;"	e	enum:__anon29
XML_RNGP_ELEMENT_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_CONTENT, \/* 1018 *\/$/;"	e	enum:__anon29
XML_RNGP_ELEMENT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_EMPTY, \/* 1017 *\/$/;"	e	enum:__anon29
XML_RNGP_ELEMENT_NAME	include/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_NAME, \/* 1019 *\/$/;"	e	enum:__anon29
XML_RNGP_ELEMENT_NO_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_NO_CONTENT, \/* 1020 *\/$/;"	e	enum:__anon29
XML_RNGP_ELEM_CONTENT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_ELEM_CONTENT_EMPTY, \/* 1015 *\/$/;"	e	enum:__anon29
XML_RNGP_ELEM_CONTENT_ERROR	include/libxml/xmlerror.h	/^    XML_RNGP_ELEM_CONTENT_ERROR, \/* 1016 *\/$/;"	e	enum:__anon29
XML_RNGP_ELEM_TEXT_CONFLICT	include/libxml/xmlerror.h	/^    XML_RNGP_ELEM_TEXT_CONFLICT, \/* 1021 *\/$/;"	e	enum:__anon29
XML_RNGP_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_EMPTY, \/* 1022 *\/$/;"	e	enum:__anon29
XML_RNGP_EMPTY_CONSTRUCT	include/libxml/xmlerror.h	/^    XML_RNGP_EMPTY_CONSTRUCT, \/* 1023 *\/$/;"	e	enum:__anon29
XML_RNGP_EMPTY_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_EMPTY_CONTENT, \/* 1024 *\/$/;"	e	enum:__anon29
XML_RNGP_EMPTY_NOT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_EMPTY_NOT_EMPTY, \/* 1025 *\/$/;"	e	enum:__anon29
XML_RNGP_ERROR_TYPE_LIB	include/libxml/xmlerror.h	/^    XML_RNGP_ERROR_TYPE_LIB, \/* 1026 *\/$/;"	e	enum:__anon29
XML_RNGP_EXCEPT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_EMPTY, \/* 1027 *\/$/;"	e	enum:__anon29
XML_RNGP_EXCEPT_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_MISSING, \/* 1028 *\/$/;"	e	enum:__anon29
XML_RNGP_EXCEPT_MULTIPLE	include/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_MULTIPLE, \/* 1029 *\/$/;"	e	enum:__anon29
XML_RNGP_EXCEPT_NO_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_NO_CONTENT, \/* 1030 *\/$/;"	e	enum:__anon29
XML_RNGP_EXTERNALREF_EMTPY	include/libxml/xmlerror.h	/^    XML_RNGP_EXTERNALREF_EMTPY, \/* 1031 *\/$/;"	e	enum:__anon29
XML_RNGP_EXTERNALREF_RECURSE	include/libxml/xmlerror.h	/^    XML_RNGP_EXTERNALREF_RECURSE, \/* 1033 *\/$/;"	e	enum:__anon29
XML_RNGP_EXTERNAL_REF_FAILURE	include/libxml/xmlerror.h	/^    XML_RNGP_EXTERNAL_REF_FAILURE, \/* 1032 *\/$/;"	e	enum:__anon29
XML_RNGP_FORBIDDEN_ATTRIBUTE	include/libxml/xmlerror.h	/^    XML_RNGP_FORBIDDEN_ATTRIBUTE, \/* 1034 *\/$/;"	e	enum:__anon29
XML_RNGP_FOREIGN_ELEMENT	include/libxml/xmlerror.h	/^    XML_RNGP_FOREIGN_ELEMENT, \/* 1035 *\/$/;"	e	enum:__anon29
XML_RNGP_GRAMMAR_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_CONTENT, \/* 1036 *\/$/;"	e	enum:__anon29
XML_RNGP_GRAMMAR_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_EMPTY, \/* 1037 *\/$/;"	e	enum:__anon29
XML_RNGP_GRAMMAR_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_MISSING, \/* 1038 *\/$/;"	e	enum:__anon29
XML_RNGP_GRAMMAR_NO_START	include/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_NO_START, \/* 1039 *\/$/;"	e	enum:__anon29
XML_RNGP_GROUP_ATTR_CONFLICT	include/libxml/xmlerror.h	/^    XML_RNGP_GROUP_ATTR_CONFLICT, \/* 1040 *\/$/;"	e	enum:__anon29
XML_RNGP_HREF_ERROR	include/libxml/xmlerror.h	/^    XML_RNGP_HREF_ERROR, \/* 1041 *\/$/;"	e	enum:__anon29
XML_RNGP_INCLUDE_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_INCLUDE_EMPTY, \/* 1042 *\/$/;"	e	enum:__anon29
XML_RNGP_INCLUDE_FAILURE	include/libxml/xmlerror.h	/^    XML_RNGP_INCLUDE_FAILURE, \/* 1043 *\/$/;"	e	enum:__anon29
XML_RNGP_INCLUDE_RECURSE	include/libxml/xmlerror.h	/^    XML_RNGP_INCLUDE_RECURSE, \/* 1044 *\/$/;"	e	enum:__anon29
XML_RNGP_INTERLEAVE_ADD	include/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_ADD, \/* 1045 *\/$/;"	e	enum:__anon29
XML_RNGP_INTERLEAVE_CREATE_FAILED	include/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_CREATE_FAILED, \/* 1046 *\/$/;"	e	enum:__anon29
XML_RNGP_INTERLEAVE_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_EMPTY, \/* 1047 *\/$/;"	e	enum:__anon29
XML_RNGP_INTERLEAVE_NO_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_NO_CONTENT, \/* 1048 *\/$/;"	e	enum:__anon29
XML_RNGP_INVALID_DEFINE_NAME	include/libxml/xmlerror.h	/^    XML_RNGP_INVALID_DEFINE_NAME, \/* 1049 *\/$/;"	e	enum:__anon29
XML_RNGP_INVALID_URI	include/libxml/xmlerror.h	/^    XML_RNGP_INVALID_URI, \/* 1050 *\/$/;"	e	enum:__anon29
XML_RNGP_INVALID_VALUE	include/libxml/xmlerror.h	/^    XML_RNGP_INVALID_VALUE, \/* 1051 *\/$/;"	e	enum:__anon29
XML_RNGP_MISSING_HREF	include/libxml/xmlerror.h	/^    XML_RNGP_MISSING_HREF, \/* 1052 *\/$/;"	e	enum:__anon29
XML_RNGP_NAME_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_NAME_MISSING, \/* 1053 *\/$/;"	e	enum:__anon29
XML_RNGP_NEED_COMBINE	include/libxml/xmlerror.h	/^    XML_RNGP_NEED_COMBINE, \/* 1054 *\/$/;"	e	enum:__anon29
XML_RNGP_NOTALLOWED_NOT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_NOTALLOWED_NOT_EMPTY, \/* 1055 *\/$/;"	e	enum:__anon29
XML_RNGP_NSNAME_ATTR_ANCESTOR	include/libxml/xmlerror.h	/^    XML_RNGP_NSNAME_ATTR_ANCESTOR, \/* 1056 *\/$/;"	e	enum:__anon29
XML_RNGP_NSNAME_NO_NS	include/libxml/xmlerror.h	/^    XML_RNGP_NSNAME_NO_NS, \/* 1057 *\/$/;"	e	enum:__anon29
XML_RNGP_PARAM_FORBIDDEN	include/libxml/xmlerror.h	/^    XML_RNGP_PARAM_FORBIDDEN, \/* 1058 *\/$/;"	e	enum:__anon29
XML_RNGP_PARAM_NAME_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_PARAM_NAME_MISSING, \/* 1059 *\/$/;"	e	enum:__anon29
XML_RNGP_PARENTREF_CREATE_FAILED	include/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_CREATE_FAILED, \/* 1060 *\/$/;"	e	enum:__anon29
XML_RNGP_PARENTREF_NAME_INVALID	include/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NAME_INVALID, \/* 1061 *\/$/;"	e	enum:__anon29
XML_RNGP_PARENTREF_NOT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NOT_EMPTY, \/* 1064 *\/$/;"	e	enum:__anon29
XML_RNGP_PARENTREF_NO_NAME	include/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NO_NAME, \/* 1062 *\/$/;"	e	enum:__anon29
XML_RNGP_PARENTREF_NO_PARENT	include/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NO_PARENT, \/* 1063 *\/$/;"	e	enum:__anon29
XML_RNGP_PARSE_ERROR	include/libxml/xmlerror.h	/^    XML_RNGP_PARSE_ERROR, \/* 1065 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME, \/* 1066 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_ATTR_ATTR	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_ATTR_ATTR, \/* 1067 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_ATTR_ELEM	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_ATTR_ELEM, \/* 1068 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_ATTR	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ATTR, \/* 1069 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_ELEM	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ELEM, \/* 1070 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_EMPTY, \/* 1071 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_GROUP	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_GROUP, \/* 1072 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE, \/* 1073 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_LIST	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_LIST, \/* 1074 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_ONEMORE	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ONEMORE, \/* 1075 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_REF	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_REF, \/* 1076 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_DATA_EXCEPT_TEXT	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_TEXT, \/* 1077 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_LIST_ATTR	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_ATTR, \/* 1078 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_LIST_ELEM	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_ELEM, \/* 1079 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_LIST_INTERLEAVE	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_INTERLEAVE, \/* 1080 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_LIST_LIST	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_LIST, \/* 1081 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_LIST_REF	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_REF, \/* 1082 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_LIST_TEXT	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_TEXT, \/* 1083 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME, \/* 1084 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME, \/* 1085 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_ONEMORE_GROUP_ATTR	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_ONEMORE_GROUP_ATTR, \/* 1086 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR, \/* 1087 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_ATTR	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_ATTR, \/* 1088 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_DATA	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_DATA, \/* 1089 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_EMPTY, \/* 1090 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_GROUP	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_GROUP, \/* 1091 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_INTERLEAVE	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_INTERLEAVE, \/* 1092 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_LIST	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_LIST, \/* 1093 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_ONEMORE	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_ONEMORE, \/* 1094 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_TEXT	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_TEXT, \/* 1095 *\/$/;"	e	enum:__anon29
XML_RNGP_PAT_START_VALUE	include/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_VALUE, \/* 1096 *\/$/;"	e	enum:__anon29
XML_RNGP_PREFIX_UNDEFINED	include/libxml/xmlerror.h	/^    XML_RNGP_PREFIX_UNDEFINED, \/* 1097 *\/$/;"	e	enum:__anon29
XML_RNGP_REF_CREATE_FAILED	include/libxml/xmlerror.h	/^    XML_RNGP_REF_CREATE_FAILED, \/* 1098 *\/$/;"	e	enum:__anon29
XML_RNGP_REF_CYCLE	include/libxml/xmlerror.h	/^    XML_RNGP_REF_CYCLE, \/* 1099 *\/$/;"	e	enum:__anon29
XML_RNGP_REF_NAME_INVALID	include/libxml/xmlerror.h	/^    XML_RNGP_REF_NAME_INVALID, \/* 1100 *\/$/;"	e	enum:__anon29
XML_RNGP_REF_NOT_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_REF_NOT_EMPTY, \/* 1103 *\/$/;"	e	enum:__anon29
XML_RNGP_REF_NO_DEF	include/libxml/xmlerror.h	/^    XML_RNGP_REF_NO_DEF, \/* 1101 *\/$/;"	e	enum:__anon29
XML_RNGP_REF_NO_NAME	include/libxml/xmlerror.h	/^    XML_RNGP_REF_NO_NAME, \/* 1102 *\/$/;"	e	enum:__anon29
XML_RNGP_START_CHOICE_AND_INTERLEAVE	include/libxml/xmlerror.h	/^    XML_RNGP_START_CHOICE_AND_INTERLEAVE, \/* 1104 *\/$/;"	e	enum:__anon29
XML_RNGP_START_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_START_CONTENT, \/* 1105 *\/$/;"	e	enum:__anon29
XML_RNGP_START_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_START_EMPTY, \/* 1106 *\/$/;"	e	enum:__anon29
XML_RNGP_START_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_START_MISSING, \/* 1107 *\/$/;"	e	enum:__anon29
XML_RNGP_TEXT_EXPECTED	include/libxml/xmlerror.h	/^    XML_RNGP_TEXT_EXPECTED, \/* 1108 *\/$/;"	e	enum:__anon29
XML_RNGP_TEXT_HAS_CHILD	include/libxml/xmlerror.h	/^    XML_RNGP_TEXT_HAS_CHILD, \/* 1109 *\/$/;"	e	enum:__anon29
XML_RNGP_TYPE_MISSING	include/libxml/xmlerror.h	/^    XML_RNGP_TYPE_MISSING, \/* 1110 *\/$/;"	e	enum:__anon29
XML_RNGP_TYPE_NOT_FOUND	include/libxml/xmlerror.h	/^    XML_RNGP_TYPE_NOT_FOUND, \/* 1111 *\/$/;"	e	enum:__anon29
XML_RNGP_TYPE_VALUE	include/libxml/xmlerror.h	/^    XML_RNGP_TYPE_VALUE, \/* 1112 *\/$/;"	e	enum:__anon29
XML_RNGP_UNKNOWN_ATTRIBUTE	include/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_ATTRIBUTE, \/* 1113 *\/$/;"	e	enum:__anon29
XML_RNGP_UNKNOWN_COMBINE	include/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_COMBINE, \/* 1114 *\/$/;"	e	enum:__anon29
XML_RNGP_UNKNOWN_CONSTRUCT	include/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_CONSTRUCT, \/* 1115 *\/$/;"	e	enum:__anon29
XML_RNGP_UNKNOWN_TYPE_LIB	include/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_TYPE_LIB, \/* 1116 *\/$/;"	e	enum:__anon29
XML_RNGP_URI_FRAGMENT	include/libxml/xmlerror.h	/^    XML_RNGP_URI_FRAGMENT, \/* 1117 *\/$/;"	e	enum:__anon29
XML_RNGP_URI_NOT_ABSOLUTE	include/libxml/xmlerror.h	/^    XML_RNGP_URI_NOT_ABSOLUTE, \/* 1118 *\/$/;"	e	enum:__anon29
XML_RNGP_VALUE_EMPTY	include/libxml/xmlerror.h	/^    XML_RNGP_VALUE_EMPTY, \/* 1119 *\/$/;"	e	enum:__anon29
XML_RNGP_VALUE_NO_CONTENT	include/libxml/xmlerror.h	/^    XML_RNGP_VALUE_NO_CONTENT, \/* 1120 *\/$/;"	e	enum:__anon29
XML_RNGP_XMLNS_NAME	include/libxml/xmlerror.h	/^    XML_RNGP_XMLNS_NAME, \/* 1121 *\/$/;"	e	enum:__anon29
XML_RNGP_XML_NS	include/libxml/xmlerror.h	/^    XML_RNGP_XML_NS, \/* 1122 *\/$/;"	e	enum:__anon29
XML_SAVE_CHAR_INVALID	include/libxml/xmlerror.h	/^    XML_SAVE_CHAR_INVALID, \/* 1401 *\/$/;"	e	enum:__anon29
XML_SAVE_FORMAT	include/libxml/xmlsave.h	/^    XML_SAVE_FORMAT     = 1<<0	\/* format save output *\/$/;"	e	enum:__anon35
XML_SAVE_NOT_UTF8	include/libxml/xmlerror.h	/^    XML_SAVE_NOT_UTF8 = 1400,$/;"	e	enum:__anon29
XML_SAVE_NO_DOCTYPE	include/libxml/xmlerror.h	/^    XML_SAVE_NO_DOCTYPE, \/* 1402 *\/$/;"	e	enum:__anon29
XML_SAVE_UNKNOWN_ENCODING	include/libxml/xmlerror.h	/^    XML_SAVE_UNKNOWN_ENCODING, \/* 1403 *\/$/;"	e	enum:__anon29
XML_SAX2_MAGIC	include/libxml/parser.h	657;"	d
XML_SCHEMAP_ATTRFORMDEFAULT_VALUE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ATTRFORMDEFAULT_VALUE, \/* 1701 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ATTRGRP_NONAME_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ATTRGRP_NONAME_NOREF, \/* 1702 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ATTR_NONAME_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ATTR_NONAME_NOREF, \/* 1703 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_AU_PROPS_CORRECT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_AU_PROPS_CORRECT_2, \/* 3078 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_A_PROPS_CORRECT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_A_PROPS_CORRECT_2, \/* 3079 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF, \/* 1704 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_CT_EXTENDS_1_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_1, \/* 3063 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_CT_EXTENDS_1_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_3, \/* 1800 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_DERIVED_OK_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_DERIVED_OK_2_1, \/* 3031 *\/ $/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_DERIVED_OK_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_DERIVED_OK_2_2, \/* 3032 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_1_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_1, \/* 3011 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_1_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_2, \/* 3012 *\/    $/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1, \/* 3013 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2, \/* 3014 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_1, \/* 3015 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1, \/* 3016 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2, \/* 3017 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1, \/* 3018 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2, \/* 3019 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3, \/* 3020 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4, \/* 3021 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5, \/* 3022 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_1, \/* 3023 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1, \/* 3024 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2, \/* 3025 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1, \/* 3027 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2, \/* 3026 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3, \/* 3028 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4, \/* 3029 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5, \/* 3030 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_VALID_DEFAULT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_1, \/* 3058 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_VALID_DEFAULT_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_1, \/* 3059 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1, \/* 3060 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2, \/* 3061 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_CT_PROPS_CORRECT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_1, \/* 1782 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_CT_PROPS_CORRECT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_2, \/* 1783 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_CT_PROPS_CORRECT_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_3, \/* 1784 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_CT_PROPS_CORRECT_4	include/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_4, \/* 1785 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_CT_PROPS_CORRECT_5	include/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_5, \/* 1786 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_CVC_SIMPLE_TYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_CVC_SIMPLE_TYPE, \/* 3062 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DEF_AND_PREFIX	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DEF_AND_PREFIX, \/* 1768 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1, \/* 1787 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1, \/* 1788 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2, \/* 1789 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3, \/* 3077 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2, \/* 1790 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3, \/* 1791 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1, \/* 1797 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2, \/* 1798 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3, \/* 1799 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ELEMFORMDEFAULT_VALUE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ELEMFORMDEFAULT_VALUE, \/* 1705 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ELEM_DEFAULT_FIXED	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ELEM_DEFAULT_FIXED, \/* 1755 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ELEM_NONAME_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ELEM_NONAME_NOREF, \/* 1706 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_EXTENSION_NO_BASE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_EXTENSION_NO_BASE, \/* 1707 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_E_PROPS_CORRECT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_2, \/* 3045 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_E_PROPS_CORRECT_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_3, \/* 3046 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_E_PROPS_CORRECT_4	include/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_4, \/* 3047 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_E_PROPS_CORRECT_5	include/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_5, \/* 3048 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_E_PROPS_CORRECT_6	include/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_6, \/* 3049 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_FACET_NO_VALUE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_FACET_NO_VALUE, \/* 1708 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_FAILED_BUILD_IMPORT	include/libxml/xmlerror.h	/^    XML_SCHEMAP_FAILED_BUILD_IMPORT, \/* 1709 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_FAILED_LOAD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_FAILED_LOAD, \/* 1757 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_FAILED_PARSE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_FAILED_PARSE, \/* 1766 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_GROUP_NONAME_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_GROUP_NONAME_NOREF, \/* 1710 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI	include/libxml/xmlerror.h	/^    XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI, \/* 1711 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_IMPORT_REDEFINE_NSNAME	include/libxml/xmlerror.h	/^    XML_SCHEMAP_IMPORT_REDEFINE_NSNAME, \/* 1712 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI	include/libxml/xmlerror.h	/^    XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI, \/* 1713 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI, \/* 1770 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI, \/* 1771 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INTERNAL	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INTERNAL, \/* 3069 non-W3C *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE, \/* 1793 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_ATTR_COMBINATION	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_COMBINATION, \/* 1777 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION, \/* 1778 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_ATTR_NAME	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_NAME, \/* 1780 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_ATTR_USE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_USE, \/* 1774 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_BOOLEAN	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_BOOLEAN, \/* 1714 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_ENUM	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ENUM, \/* 1715 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_FACET	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_FACET, \/* 1716 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_FACET_VALUE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_FACET_VALUE, \/* 1717 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_MAXOCCURS	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_MAXOCCURS, \/* 1718 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_MINOCCURS	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_MINOCCURS, \/* 1719 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_REF_AND_SUBTYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_REF_AND_SUBTYPE, \/* 1720 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_INVALID_WHITE_SPACE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_WHITE_SPACE, \/* 1721 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_MG_PROPS_CORRECT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_MG_PROPS_CORRECT_1, \/* 3074 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_MG_PROPS_CORRECT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_MG_PROPS_CORRECT_2, \/* 3075 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD, \/* 1779 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NOATTR_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NOATTR_NOREF, \/* 1722 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NOROOT	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NOROOT, \/* 1759 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NOTATION_NO_NAME	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NOTATION_NO_NAME, \/* 1723 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NOTHING_TO_PARSE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NOTHING_TO_PARSE, \/* 1758 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NOTYPE_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NOTYPE_NOREF, \/* 1724 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NOT_DETERMINISTIC	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NOT_DETERMINISTIC, \/* 3070 non-W3C *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NOT_SCHEMA	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NOT_SCHEMA, \/* 1772 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NO_XMLNS	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NO_XMLNS, \/* 3056 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_NO_XSI	include/libxml/xmlerror.h	/^    XML_SCHEMAP_NO_XSI, \/* 3057 *\/      $/;"	e	enum:__anon29
XML_SCHEMAP_PREFIX_UNDEFINED	include/libxml/xmlerror.h	/^    XML_SCHEMAP_PREFIX_UNDEFINED = 1700,$/;"	e	enum:__anon29
XML_SCHEMAP_P_PROPS_CORRECT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_1, \/* 3042 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_P_PROPS_CORRECT_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_2_1, \/* 3043 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_P_PROPS_CORRECT_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_2_2, \/* 3044 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_RECURSIVE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_RECURSIVE, \/* 1775 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REDEFINED_ATTR	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ATTR, \/* 1764 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REDEFINED_ATTRGROUP	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ATTRGROUP, \/* 1763 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REDEFINED_ELEMENT	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ELEMENT, \/* 1762 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REDEFINED_GROUP	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_GROUP, \/* 1760 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REDEFINED_NOTATION	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_NOTATION, \/* 1765 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REDEFINED_TYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_TYPE, \/* 1761 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REF_AND_CONTENT	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REF_AND_CONTENT, \/* 1781 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REF_AND_SUBTYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REF_AND_SUBTYPE, \/* 1725 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_REGEXP_INVALID	include/libxml/xmlerror.h	/^    XML_SCHEMAP_REGEXP_INVALID, \/* 1756 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_RESTRICTION_NONAME_NOREF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_RESTRICTION_NONAME_NOREF, \/* 1726 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_S4S_ATTR_INVALID_VALUE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_INVALID_VALUE, \/* 3037 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_S4S_ATTR_MISSING	include/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_MISSING, \/* 3036 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED	include/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED, \/* 3035 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_S4S_ELEM_MISSING	include/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ELEM_MISSING, \/* 3034 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED	include/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED, \/* 3033 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SIMPLETYPE_NONAME	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SIMPLETYPE_NONAME, \/* 1727 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_1, \/* 3051 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_2, \/* 3052 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_3_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_3_1, \/* 3053 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_3_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_3_2, \/* 3054 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_4	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_4, \/* 3055 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1, \/* 3071 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2, \/* 3072 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3, \/* 3073 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_CT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_CT_1, \/* 3076 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ELEMENT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_1, \/* 3038 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ELEMENT_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_2_1, \/* 3039 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ELEMENT_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_2_2, \/* 3040 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_ELEMENT_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_3, \/* 3041 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_IMPORT_1_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_1_1, \/* 3064 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_IMPORT_1_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_1_2, \/* 3065 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_IMPORT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2, \/* 3066 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_IMPORT_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2_1, \/* 3067 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_IMPORT_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2_2, \/* 3068 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_IMPORT_3_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_3_1, \/* 1795 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_IMPORT_3_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_3_2, \/* 1796 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_INCLUDE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_INCLUDE, \/* 3050 *\/    $/;"	e	enum:__anon29
XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE, \/* 3006 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_RESOLVE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_RESOLVE, \/* 3004 *\/ $/;"	e	enum:__anon29
XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE, \/* 3005 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_SIMPLE_TYPE_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = 3000,$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_SIMPLE_TYPE_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_2, \/* 3001 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_SIMPLE_TYPE_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_3, \/* 3002 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_SIMPLE_TYPE_4	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_4, \/* 3003 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES, \/* 3007 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ST_PROPS_CORRECT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_1, \/* 3008 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ST_PROPS_CORRECT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_2, \/* 3009 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_ST_PROPS_CORRECT_3	include/libxml/xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_3, \/* 3010 *\/     $/;"	e	enum:__anon29
XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE, \/* 1776 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_TYPE_AND_SUBTYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_TYPE_AND_SUBTYPE, \/* 1728 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNION_NOT_EXPRESSIBLE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNION_NOT_EXPRESSIBLE, \/* 1794 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_ALL_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ALL_CHILD, \/* 1729 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD, \/* 1730 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD, \/* 1732 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP, \/* 1733 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_ATTR_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTR_CHILD, \/* 1731 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_BASE_TYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_BASE_TYPE, \/* 1734 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_CHOICE_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_CHOICE_CHILD, \/* 1735 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD, \/* 1736 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD, \/* 1737 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_ELEM_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ELEM_CHILD, \/* 1738 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD, \/* 1739 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_FACET_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_FACET_CHILD, \/* 1740 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_FACET_TYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_FACET_TYPE, \/* 1741 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_GROUP_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_GROUP_CHILD, \/* 1742 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_IMPORT_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_IMPORT_CHILD, \/* 1743 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD, \/* 1769 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_LIST_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_LIST_CHILD, \/* 1744 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_MEMBER_TYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_MEMBER_TYPE, \/* 1773 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_NOTATION_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_NOTATION_CHILD, \/* 1745 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_PREFIX	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_PREFIX, \/* 1767 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD, \/* 1746 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_REF	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_REF, \/* 1747 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD, \/* 1748 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD, \/* 1749 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD, \/* 1750 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD, \/* 1751 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD, \/* 1752 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_TYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_TYPE, \/* 1753 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_UNKNOWN_UNION_CHILD	include/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_UNION_CHILD, \/* 1754 *\/$/;"	e	enum:__anon29
XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER	include/libxml/xmlerror.h	/^    XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER, \/* 1792 *\/$/;"	e	enum:__anon29
XML_SCHEMAS_ANYATTR_LAX	include/libxml/schemasInternals.h	164;"	d
XML_SCHEMAS_ANYATTR_SKIP	include/libxml/schemasInternals.h	157;"	d
XML_SCHEMAS_ANYATTR_STRICT	include/libxml/schemasInternals.h	171;"	d
XML_SCHEMAS_ANYSIMPLETYPE	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_ANYSIMPLETYPE$/;"	e	enum:__anon14
XML_SCHEMAS_ANYTYPE	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_ANYTYPE,$/;"	e	enum:__anon14
XML_SCHEMAS_ANYURI	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_ANYURI,$/;"	e	enum:__anon14
XML_SCHEMAS_ANY_LAX	include/libxml/schemasInternals.h	184;"	d
XML_SCHEMAS_ANY_SKIP	include/libxml/schemasInternals.h	177;"	d
XML_SCHEMAS_ANY_STRICT	include/libxml/schemasInternals.h	191;"	d
XML_SCHEMAS_ATTRGROUP_GLOBAL	include/libxml/schemasInternals.h	327;"	d
XML_SCHEMAS_ATTRGROUP_MARKED	include/libxml/schemasInternals.h	333;"	d
XML_SCHEMAS_ATTRGROUP_WILDCARD_BUILDED	include/libxml/schemasInternals.h	321;"	d
XML_SCHEMAS_ATTR_FIXED	include/libxml/schemasInternals.h	235;"	d
XML_SCHEMAS_ATTR_GLOBAL	include/libxml/schemasInternals.h	216;"	d
XML_SCHEMAS_ATTR_INTERNAL_RESOLVED	include/libxml/schemasInternals.h	229;"	d
XML_SCHEMAS_ATTR_NSDEFAULT	include/libxml/schemasInternals.h	222;"	d
XML_SCHEMAS_ATTR_USE_OPTIONAL	include/libxml/schemasInternals.h	210;"	d
XML_SCHEMAS_ATTR_USE_PROHIBITED	include/libxml/schemasInternals.h	198;"	d
XML_SCHEMAS_ATTR_USE_REQUIRED	include/libxml/schemasInternals.h	204;"	d
XML_SCHEMAS_BASE64BINARY	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_BASE64BINARY,$/;"	e	enum:__anon14
XML_SCHEMAS_BLOCK_DEFAULT_EXTENSION	include/libxml/schemasInternals.h	804;"	d
XML_SCHEMAS_BLOCK_DEFAULT_RESTRICTION	include/libxml/schemasInternals.h	810;"	d
XML_SCHEMAS_BLOCK_DEFAULT_SUBSTITUTION	include/libxml/schemasInternals.h	816;"	d
XML_SCHEMAS_BOOLEAN	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_BOOLEAN,$/;"	e	enum:__anon14
XML_SCHEMAS_BYTE	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_BYTE,$/;"	e	enum:__anon14
XML_SCHEMAS_DATE	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_DATE,$/;"	e	enum:__anon14
XML_SCHEMAS_DATETIME	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_DATETIME,$/;"	e	enum:__anon14
XML_SCHEMAS_DECIMAL	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_DECIMAL,$/;"	e	enum:__anon14
XML_SCHEMAS_DOUBLE	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_DOUBLE,$/;"	e	enum:__anon14
XML_SCHEMAS_DURATION	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_DURATION,$/;"	e	enum:__anon14
XML_SCHEMAS_ELEM_ABSTRACT	include/libxml/schemasInternals.h	600;"	d
XML_SCHEMAS_ELEM_BLOCK_ABSENT	include/libxml/schemasInternals.h	639;"	d
XML_SCHEMAS_ELEM_BLOCK_EXTENSION	include/libxml/schemasInternals.h	645;"	d
XML_SCHEMAS_ELEM_BLOCK_RESTRICTION	include/libxml/schemasInternals.h	651;"	d
XML_SCHEMAS_ELEM_BLOCK_SUBSTITUTION	include/libxml/schemasInternals.h	657;"	d
XML_SCHEMAS_ELEM_CIRCULAR	include/libxml/schemasInternals.h	633;"	d
XML_SCHEMAS_ELEM_DEFAULT	include/libxml/schemasInternals.h	588;"	d
XML_SCHEMAS_ELEM_FINAL_ABSENT	include/libxml/schemasInternals.h	663;"	d
XML_SCHEMAS_ELEM_FINAL_EXTENSION	include/libxml/schemasInternals.h	669;"	d
XML_SCHEMAS_ELEM_FINAL_RESTRICTION	include/libxml/schemasInternals.h	675;"	d
XML_SCHEMAS_ELEM_FIXED	include/libxml/schemasInternals.h	594;"	d
XML_SCHEMAS_ELEM_GLOBAL	include/libxml/schemasInternals.h	582;"	d
XML_SCHEMAS_ELEM_INTERNAL_RESOLVED	include/libxml/schemasInternals.h	627;"	d
XML_SCHEMAS_ELEM_NILLABLE	include/libxml/schemasInternals.h	576;"	d
XML_SCHEMAS_ELEM_NSDEFAULT	include/libxml/schemasInternals.h	620;"	d
XML_SCHEMAS_ELEM_REF	include/libxml/schemasInternals.h	613;"	d
XML_SCHEMAS_ELEM_TOPLEVEL	include/libxml/schemasInternals.h	607;"	d
XML_SCHEMAS_ENTITIES	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_ENTITIES,$/;"	e	enum:__anon14
XML_SCHEMAS_ENTITY	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_ENTITY,$/;"	e	enum:__anon14
XML_SCHEMAS_ERR_	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_ATTRINVALID	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ATTRINVALID,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_ATTRUNKNOWN	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ATTRUNKNOWN,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_CONSTRUCT	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_CONSTRUCT,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_ELEMCONT	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ELEMCONT,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_EXTRACONTENT	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_EXTRACONTENT,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_FACET	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_FACET,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_HAVEDEFAULT	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_HAVEDEFAULT,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_INTERNAL	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_INTERNAL,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_INVALIDATTR	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_INVALIDATTR,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_INVALIDELEM	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_INVALIDELEM,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_ISABSTRACT	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ISABSTRACT,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_MISSING	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_MISSING,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOROLLBACK	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOROLLBACK,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOROOT	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOROOT	= 1,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOTDETERMINIST	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTDETERMINIST,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOTEMPTY	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTEMPTY,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOTNILLABLE	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTNILLABLE,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOTSIMPLE	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTSIMPLE,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOTTOPLEVEL	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTTOPLEVEL,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_NOTYPE	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTYPE,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_OK	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_OK		= 0,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_UNDECLAREDELEM	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_UNDECLAREDELEM,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_VALUE	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_VALUE,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_WRONGELEM	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_WRONGELEM,$/;"	e	enum:__anon36
XML_SCHEMAS_ERR_XXX	include/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_XXX$/;"	e	enum:__anon36
XML_SCHEMAS_FACET_COLLAPSE	include/libxml/schemasInternals.h	733;"	d
XML_SCHEMAS_FACET_PRESERVE	include/libxml/schemasInternals.h	721;"	d
XML_SCHEMAS_FACET_REPLACE	include/libxml/schemasInternals.h	727;"	d
XML_SCHEMAS_FACET_UNKNOWN	include/libxml/schemasInternals.h	715;"	d
XML_SCHEMAS_FINAL_DEFAULT_EXTENSION	include/libxml/schemasInternals.h	780;"	d
XML_SCHEMAS_FINAL_DEFAULT_LIST	include/libxml/schemasInternals.h	792;"	d
XML_SCHEMAS_FINAL_DEFAULT_RESTRICTION	include/libxml/schemasInternals.h	786;"	d
XML_SCHEMAS_FINAL_DEFAULT_UNION	include/libxml/schemasInternals.h	798;"	d
XML_SCHEMAS_FLOAT	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_FLOAT,$/;"	e	enum:__anon14
XML_SCHEMAS_GDAY	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_GDAY,$/;"	e	enum:__anon14
XML_SCHEMAS_GMONTH	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_GMONTH,$/;"	e	enum:__anon14
XML_SCHEMAS_GMONTHDAY	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_GMONTHDAY,$/;"	e	enum:__anon14
XML_SCHEMAS_GYEAR	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_GYEAR,$/;"	e	enum:__anon14
XML_SCHEMAS_GYEARMONTH	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_GYEARMONTH,$/;"	e	enum:__anon14
XML_SCHEMAS_HEXBINARY	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_HEXBINARY,$/;"	e	enum:__anon14
XML_SCHEMAS_ID	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_ID,$/;"	e	enum:__anon14
XML_SCHEMAS_IDREF	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_IDREF,$/;"	e	enum:__anon14
XML_SCHEMAS_IDREFS	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_IDREFS,$/;"	e	enum:__anon14
XML_SCHEMAS_INCLUDING_CONVERT_NS	include/libxml/schemasInternals.h	823;"	d
XML_SCHEMAS_INT	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_INT,$/;"	e	enum:__anon14
XML_SCHEMAS_INTEGER	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_INTEGER,$/;"	e	enum:__anon14
XML_SCHEMAS_LANGUAGE	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_LANGUAGE,$/;"	e	enum:__anon14
XML_SCHEMAS_LONG	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_LONG,$/;"	e	enum:__anon14
XML_SCHEMAS_NAME	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NAME,$/;"	e	enum:__anon14
XML_SCHEMAS_NCNAME	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NCNAME,$/;"	e	enum:__anon14
XML_SCHEMAS_NINTEGER	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NINTEGER,$/;"	e	enum:__anon14
XML_SCHEMAS_NMTOKEN	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NMTOKEN,$/;"	e	enum:__anon14
XML_SCHEMAS_NMTOKENS	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NMTOKENS,$/;"	e	enum:__anon14
XML_SCHEMAS_NNINTEGER	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NNINTEGER,$/;"	e	enum:__anon14
XML_SCHEMAS_NORMSTRING	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NORMSTRING,$/;"	e	enum:__anon14
XML_SCHEMAS_NOTATION	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NOTATION,$/;"	e	enum:__anon14
XML_SCHEMAS_NPINTEGER	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_NPINTEGER,$/;"	e	enum:__anon14
XML_SCHEMAS_PINTEGER	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_PINTEGER,$/;"	e	enum:__anon14
XML_SCHEMAS_QNAME	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_QNAME,$/;"	e	enum:__anon14
XML_SCHEMAS_QUALIF_ATTR	include/libxml/schemasInternals.h	774;"	d
XML_SCHEMAS_QUALIF_ELEM	include/libxml/schemasInternals.h	768;"	d
XML_SCHEMAS_SHORT	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_SHORT,$/;"	e	enum:__anon14
XML_SCHEMAS_STRING	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_STRING,$/;"	e	enum:__anon14
XML_SCHEMAS_TIME	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_TIME,$/;"	e	enum:__anon14
XML_SCHEMAS_TOKEN	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_TOKEN,$/;"	e	enum:__anon14
XML_SCHEMAS_TYPE_ABSTRACT	include/libxml/schemasInternals.h	505;"	d
XML_SCHEMAS_TYPE_BLOCK_DEFAULT	include/libxml/schemasInternals.h	487;"	d
XML_SCHEMAS_TYPE_BLOCK_EXTENSION	include/libxml/schemasInternals.h	493;"	d
XML_SCHEMAS_TYPE_BLOCK_RESTRICTION	include/libxml/schemasInternals.h	499;"	d
XML_SCHEMAS_TYPE_BUILTIN_PRIMITIVE	include/libxml/schemasInternals.h	474;"	d
XML_SCHEMAS_TYPE_DERIVATION_METHOD_EXTENSION	include/libxml/schemasInternals.h	395;"	d
XML_SCHEMAS_TYPE_DERIVATION_METHOD_RESTRICTION	include/libxml/schemasInternals.h	401;"	d
XML_SCHEMAS_TYPE_FACETSNEEDVALUE	include/libxml/schemasInternals.h	511;"	d
XML_SCHEMAS_TYPE_FINAL_DEFAULT	include/libxml/schemasInternals.h	468;"	d
XML_SCHEMAS_TYPE_FINAL_EXTENSION	include/libxml/schemasInternals.h	444;"	d
XML_SCHEMAS_TYPE_FINAL_LIST	include/libxml/schemasInternals.h	456;"	d
XML_SCHEMAS_TYPE_FINAL_RESTRICTION	include/libxml/schemasInternals.h	450;"	d
XML_SCHEMAS_TYPE_FINAL_UNION	include/libxml/schemasInternals.h	462;"	d
XML_SCHEMAS_TYPE_GLOBAL	include/libxml/schemasInternals.h	407;"	d
XML_SCHEMAS_TYPE_INTERNAL_INVALID	include/libxml/schemasInternals.h	523;"	d
XML_SCHEMAS_TYPE_INTERNAL_RESOLVED	include/libxml/schemasInternals.h	517;"	d
XML_SCHEMAS_TYPE_MARKED	include/libxml/schemasInternals.h	480;"	d
XML_SCHEMAS_TYPE_MIXED	include/libxml/schemasInternals.h	389;"	d
XML_SCHEMAS_TYPE_OWNED_ATTR_WILDCARD	include/libxml/schemasInternals.h	414;"	d
XML_SCHEMAS_TYPE_VARIETY_ABSENT	include/libxml/schemasInternals.h	420;"	d
XML_SCHEMAS_TYPE_VARIETY_ATOMIC	include/libxml/schemasInternals.h	438;"	d
XML_SCHEMAS_TYPE_VARIETY_LIST	include/libxml/schemasInternals.h	426;"	d
XML_SCHEMAS_TYPE_VARIETY_UNION	include/libxml/schemasInternals.h	432;"	d
XML_SCHEMAS_UBYTE	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_UBYTE,$/;"	e	enum:__anon14
XML_SCHEMAS_UINT	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_UINT,$/;"	e	enum:__anon14
XML_SCHEMAS_ULONG	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_ULONG,$/;"	e	enum:__anon14
XML_SCHEMAS_UNKNOWN	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_UNKNOWN = 0,$/;"	e	enum:__anon14
XML_SCHEMAS_USHORT	include/libxml/schemasInternals.h	/^    XML_SCHEMAS_USHORT,$/;"	e	enum:__anon14
XML_SCHEMAS_WILDCARD_COMPLETE	include/libxml/schemasInternals.h	283;"	d
XML_SCHEMAV_ATTRINVALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_ATTRINVALID, \/* 1821 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_ATTRUNKNOWN	include/libxml/xmlerror.h	/^    XML_SCHEMAV_ATTRUNKNOWN, \/* 1820 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CONSTRUCT	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CONSTRUCT, \/* 1817 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ATTRIBUTE_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_1, \/* 1861 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ATTRIBUTE_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_2, \/* 1862 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ATTRIBUTE_3	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_3, \/* 1863 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ATTRIBUTE_4	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_4, \/* 1864 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_AU	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_AU, \/* 1874 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_1, \/* 1873 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1, \/* 1841 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2, \/* 1842 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3, \/* 1843 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4, \/* 1844 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1, \/* 1865 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1, \/* 1866 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2, \/* 1867 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_4	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_4, \/* 1868 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1, \/* 1869 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2, \/* 1870 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1, \/* 1824 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2, \/* 1825 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3, \/* 1826 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_1, \/* 1845 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_2, \/* 1846 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_3_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_1, \/* 1847 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_3_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_2_1, \/* 1848 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_3_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_2_2, \/* 1849 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_4_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_1, \/* 1850 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_4_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_2, \/* 1851 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_4_3	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_3, \/* 1852 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_5_1_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_1_1, \/* 1853 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_5_1_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_1_2, \/* 1854 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_5_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_1, \/* 1855 *\/  $/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_5_2_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_1, \/* 1856 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_5_2_2_2_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_2_1, \/* 1857 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_5_2_2_2_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_2_2, \/* 1858 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_6	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_6, \/* 1859 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ELT_7	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_7, \/* 1860 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_ENUMERATION_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ENUMERATION_VALID, \/* 1840 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_FACET_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_FACET_VALID, \/* 1829 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID, \/* 1838 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_IDC	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_IDC, \/* 1877 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_LENGTH_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_LENGTH_VALID, \/* 1830 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID, \/* 1836 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID, \/* 1834 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_MAXLENGTH_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MAXLENGTH_VALID, \/* 1832 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID, \/* 1835 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_MININCLUSIVE_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MININCLUSIVE_VALID, \/* 1833 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_MINLENGTH_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MINLENGTH_VALID, \/* 1831 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_PATTERN_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_PATTERN_VALID, \/* 1839 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_TOTALDIGITS_VALID	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TOTALDIGITS_VALID, \/* 1837 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_TYPE_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_1, \/* 1875 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_TYPE_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_2, \/* 1876 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_TYPE_3_1_1	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_3_1_1, \/* 1827 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_TYPE_3_1_2	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_3_1_2, \/* 1828 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_CVC_WILDCARD	include/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_WILDCARD, \/* 1878 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING	include/libxml/xmlerror.h	/^    XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING, \/* 1872 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_ELEMCONT	include/libxml/xmlerror.h	/^    XML_SCHEMAV_ELEMCONT, \/* 1810 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_ELEMENT_CONTENT	include/libxml/xmlerror.h	/^    XML_SCHEMAV_ELEMENT_CONTENT, \/* 1871 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_EXTRACONTENT	include/libxml/xmlerror.h	/^    XML_SCHEMAV_EXTRACONTENT, \/* 1813 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_FACET	include/libxml/xmlerror.h	/^    XML_SCHEMAV_FACET, \/* 1823 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_HAVEDEFAULT	include/libxml/xmlerror.h	/^    XML_SCHEMAV_HAVEDEFAULT, \/* 1811 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_INTERNAL	include/libxml/xmlerror.h	/^    XML_SCHEMAV_INTERNAL, \/* 1818 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_INVALIDATTR	include/libxml/xmlerror.h	/^    XML_SCHEMAV_INVALIDATTR, \/* 1814 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_INVALIDELEM	include/libxml/xmlerror.h	/^    XML_SCHEMAV_INVALIDELEM, \/* 1815 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_ISABSTRACT	include/libxml/xmlerror.h	/^    XML_SCHEMAV_ISABSTRACT, \/* 1808 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_MISSING	include/libxml/xmlerror.h	/^    XML_SCHEMAV_MISSING, \/* 1804 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_NOROLLBACK	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOROLLBACK, \/* 1807 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_NOROOT	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOROOT = 1801,$/;"	e	enum:__anon29
XML_SCHEMAV_NOTDETERMINIST	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTDETERMINIST, \/* 1816 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_NOTEMPTY	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTEMPTY, \/* 1809 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_NOTNILLABLE	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTNILLABLE, \/* 1812 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_NOTSIMPLE	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTSIMPLE, \/* 1819 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_NOTTOPLEVEL	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTTOPLEVEL, \/* 1803 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_NOTYPE	include/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTYPE, \/* 1806 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_UNDECLAREDELEM	include/libxml/xmlerror.h	/^    XML_SCHEMAV_UNDECLAREDELEM, \/* 1802 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_VALUE	include/libxml/xmlerror.h	/^    XML_SCHEMAV_VALUE, \/* 1822 *\/$/;"	e	enum:__anon29
XML_SCHEMAV_WRONGELEM	include/libxml/xmlerror.h	/^    XML_SCHEMAV_WRONGELEM, \/* 1805 *\/$/;"	e	enum:__anon29
XML_SCHEMA_CONTENT_ANY	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_ANY$/;"	e	enum:__anon16
XML_SCHEMA_CONTENT_BASIC	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_BASIC,$/;"	e	enum:__anon16
XML_SCHEMA_CONTENT_ELEMENTS	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_ELEMENTS,$/;"	e	enum:__anon16
XML_SCHEMA_CONTENT_EMPTY	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_EMPTY = 1,$/;"	e	enum:__anon16
XML_SCHEMA_CONTENT_MIXED	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_MIXED,$/;"	e	enum:__anon16
XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS, \/* obsolete, not used *\/$/;"	e	enum:__anon16
XML_SCHEMA_CONTENT_SIMPLE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_SIMPLE,$/;"	e	enum:__anon16
XML_SCHEMA_CONTENT_UNKNOWN	include/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_UNKNOWN = 0,$/;"	e	enum:__anon16
XML_SCHEMA_EXTRA_QNAMEREF	include/libxml/schemasInternals.h	/^    XML_SCHEMA_EXTRA_QNAMEREF = 2000$/;"	e	enum:__anon15
XML_SCHEMA_FACET_ENUMERATION	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_ENUMERATION,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_FRACTIONDIGITS	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_FRACTIONDIGITS,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_LENGTH	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_LENGTH,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_MAXEXCLUSIVE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MAXEXCLUSIVE,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_MAXINCLUSIVE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MAXINCLUSIVE,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_MAXLENGTH	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MAXLENGTH,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_MINEXCLUSIVE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MINEXCLUSIVE,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_MININCLUSIVE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MININCLUSIVE = 1000,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_MINLENGTH	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MINLENGTH,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_PATTERN	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_PATTERN,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_TOTALDIGITS	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_TOTALDIGITS,$/;"	e	enum:__anon15
XML_SCHEMA_FACET_WHITESPACE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_WHITESPACE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_ALL	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ALL,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_ANY	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ANY,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_ANY_ATTRIBUTE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ANY_ATTRIBUTE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_ATTRIBUTE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_ATTRIBUTEGROUP	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTEGROUP,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_BASIC	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_BASIC = 1, \/* A built-in datatype *\/$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_CHOICE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_CHOICE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_COMPLEX	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_COMPLEX,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_COMPLEX_CONTENT	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_COMPLEX_CONTENT,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_ELEMENT	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ELEMENT,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_EXTENSION	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_EXTENSION,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_FACET	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_FACET,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_GROUP	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_GROUP,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_IDC_KEY	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_KEY,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_IDC_KEYREF	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_KEYREF,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_IDC_UNIQUE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_UNIQUE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_LIST	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_LIST,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_NOTATION	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_NOTATION,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_PARTICLE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_PARTICLE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_RESTRICTION	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_RESTRICTION,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_SEQUENCE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_SEQUENCE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_SIMPLE	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_SIMPLE,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_SIMPLE_CONTENT	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_SIMPLE_CONTENT,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_UNION	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_UNION,$/;"	e	enum:__anon15
XML_SCHEMA_TYPE_UR	include/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_UR,$/;"	e	enum:__anon15
XML_SCHEMA_VAL_VC_I_CREATE	include/libxml/xmlschemas.h	/^    XML_SCHEMA_VAL_VC_I_CREATE			= 1<<0$/;"	e	enum:__anon37
XML_SCHEMA_WHITESPACE_COLLAPSE	include/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_COLLAPSE = 3$/;"	e	enum:__anon38
XML_SCHEMA_WHITESPACE_PRESERVE	include/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_PRESERVE = 1,$/;"	e	enum:__anon38
XML_SCHEMA_WHITESPACE_REPLACE	include/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_REPLACE = 2,$/;"	e	enum:__anon38
XML_SCHEMA_WHITESPACE_UNKNOWN	include/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_UNKNOWN = 0,$/;"	e	enum:__anon38
XML_SKIP_IDS	include/libxml/parser.h	156;"	d
XML_SUBSTITUTE_BOTH	include/libxml/parserInternals.h	477;"	d
XML_SUBSTITUTE_NONE	include/libxml/parserInternals.h	459;"	d
XML_SUBSTITUTE_PEREF	include/libxml/parserInternals.h	471;"	d
XML_SUBSTITUTE_REF	include/libxml/parserInternals.h	465;"	d
XML_TEXTREADER_MODE_CLOSED	include/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_CLOSED = 4,$/;"	e	enum:__anon31
XML_TEXTREADER_MODE_EOF	include/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_EOF =3,$/;"	e	enum:__anon31
XML_TEXTREADER_MODE_ERROR	include/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_ERROR = 2,$/;"	e	enum:__anon31
XML_TEXTREADER_MODE_INITIAL	include/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_INITIAL = 0,$/;"	e	enum:__anon31
XML_TEXTREADER_MODE_INTERACTIVE	include/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_INTERACTIVE = 1,$/;"	e	enum:__anon31
XML_TEXTREADER_MODE_READING	include/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_READING = 5$/;"	e	enum:__anon31
XML_TEXT_NODE	include/libxml/tree.h	/^    XML_TEXT_NODE=		3,$/;"	e	enum:__anon17
XML_TREE_INVALID_DEC	include/libxml/xmlerror.h	/^    XML_TREE_INVALID_DEC, \/* 1301 *\/$/;"	e	enum:__anon29
XML_TREE_INVALID_HEX	include/libxml/xmlerror.h	/^    XML_TREE_INVALID_HEX = 1300,$/;"	e	enum:__anon29
XML_TREE_UNTERMINATED_ENTITY	include/libxml/xmlerror.h	/^    XML_TREE_UNTERMINATED_ENTITY, \/* 1302 *\/$/;"	e	enum:__anon29
XML_WAR_CATALOG_PI	include/libxml/xmlerror.h	/^    XML_WAR_CATALOG_PI, \/* 93 *\/$/;"	e	enum:__anon29
XML_WAR_LANG_VALUE	include/libxml/xmlerror.h	/^    XML_WAR_LANG_VALUE, \/* 98 *\/$/;"	e	enum:__anon29
XML_WAR_NS_URI	include/libxml/xmlerror.h	/^    XML_WAR_NS_URI, \/* 99 *\/$/;"	e	enum:__anon29
XML_WAR_NS_URI_RELATIVE	include/libxml/xmlerror.h	/^    XML_WAR_NS_URI_RELATIVE, \/* 100 *\/$/;"	e	enum:__anon29
XML_WAR_UNDECLARED_ENTITY	include/libxml/xmlerror.h	/^    XML_WAR_UNDECLARED_ENTITY, \/* 27 *\/$/;"	e	enum:__anon29
XML_WAR_UNKNOWN_VERSION	include/libxml/xmlerror.h	/^    XML_WAR_UNKNOWN_VERSION, \/* 97 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_BUILD_FAILED	include/libxml/xmlerror.h	/^    XML_XINCLUDE_BUILD_FAILED, \/* 1609 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_DEPRECATED_NS	include/libxml/xmlerror.h	/^    XML_XINCLUDE_DEPRECATED_NS, \/* 1617 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_END	include/libxml/tree.h	/^    XML_XINCLUDE_END=		20$/;"	e	enum:__anon17
XML_XINCLUDE_ENTITY_DEF_MISMATCH	include/libxml/xmlerror.h	/^    XML_XINCLUDE_ENTITY_DEF_MISMATCH, \/* 1602 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_FALLBACKS_IN_INCLUDE	include/libxml/xmlerror.h	/^    XML_XINCLUDE_FALLBACKS_IN_INCLUDE, \/* 1615 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE	include/libxml/xmlerror.h	/^    XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE, \/* 1616 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_FRAGMENT_ID	include/libxml/xmlerror.h	/^    XML_XINCLUDE_FRAGMENT_ID, \/* 1618 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_HREF_URI	include/libxml/xmlerror.h	/^    XML_XINCLUDE_HREF_URI, \/* 1605 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_INCLUDE_IN_INCLUDE	include/libxml/xmlerror.h	/^    XML_XINCLUDE_INCLUDE_IN_INCLUDE, \/* 1614 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_INVALID_CHAR	include/libxml/xmlerror.h	/^    XML_XINCLUDE_INVALID_CHAR, \/* 1608 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_MULTIPLE_ROOT	include/libxml/xmlerror.h	/^    XML_XINCLUDE_MULTIPLE_ROOT, \/* 1611 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_NO_FALLBACK	include/libxml/xmlerror.h	/^    XML_XINCLUDE_NO_FALLBACK, \/* 1604 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_NO_HREF	include/libxml/xmlerror.h	/^    XML_XINCLUDE_NO_HREF, \/* 1603 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_PARSE_VALUE	include/libxml/xmlerror.h	/^    XML_XINCLUDE_PARSE_VALUE, \/* 1601 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_RECURSION	include/libxml/xmlerror.h	/^    XML_XINCLUDE_RECURSION=1600,$/;"	e	enum:__anon29
XML_XINCLUDE_START	include/libxml/tree.h	/^    XML_XINCLUDE_START=		19,$/;"	e	enum:__anon17
XML_XINCLUDE_TEXT_DOCUMENT	include/libxml/xmlerror.h	/^    XML_XINCLUDE_TEXT_DOCUMENT, \/* 1607 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_TEXT_FRAGMENT	include/libxml/xmlerror.h	/^    XML_XINCLUDE_TEXT_FRAGMENT, \/* 1606 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_UNKNOWN_ENCODING	include/libxml/xmlerror.h	/^    XML_XINCLUDE_UNKNOWN_ENCODING, \/* 1610 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_XPTR_FAILED	include/libxml/xmlerror.h	/^    XML_XINCLUDE_XPTR_FAILED, \/* 1612 *\/$/;"	e	enum:__anon29
XML_XINCLUDE_XPTR_RESULT	include/libxml/xmlerror.h	/^    XML_XINCLUDE_XPTR_RESULT, \/* 1613 *\/$/;"	e	enum:__anon29
XML_XML_ID	include/libxml/tree.h	71;"	d
XML_XML_NAMESPACE	include/libxml/tree.h	63;"	d
XML_XPATH_ENCODING_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_ENCODING_ERROR, \/* 1220 *\/$/;"	e	enum:__anon29
XML_XPATH_EXPRESSION_OK	include/libxml/xmlerror.h	/^    XML_XPATH_EXPRESSION_OK = 1200,$/;"	e	enum:__anon29
XML_XPATH_EXPR_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_EXPR_ERROR, \/* 1207 *\/$/;"	e	enum:__anon29
XML_XPATH_INVALID_ARITY	include/libxml/xmlerror.h	/^    XML_XPATH_INVALID_ARITY, \/* 1212 *\/$/;"	e	enum:__anon29
XML_XPATH_INVALID_CHAR_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_INVALID_CHAR_ERROR, \/* 1221 *\/$/;"	e	enum:__anon29
XML_XPATH_INVALID_CTXT_POSITION	include/libxml/xmlerror.h	/^    XML_XPATH_INVALID_CTXT_POSITION, \/* 1214 *\/$/;"	e	enum:__anon29
XML_XPATH_INVALID_CTXT_SIZE	include/libxml/xmlerror.h	/^    XML_XPATH_INVALID_CTXT_SIZE, \/* 1213 *\/$/;"	e	enum:__anon29
XML_XPATH_INVALID_OPERAND	include/libxml/xmlerror.h	/^    XML_XPATH_INVALID_OPERAND, \/* 1210 *\/$/;"	e	enum:__anon29
XML_XPATH_INVALID_PREDICATE_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_INVALID_PREDICATE_ERROR, \/* 1206 *\/$/;"	e	enum:__anon29
XML_XPATH_INVALID_TYPE	include/libxml/xmlerror.h	/^    XML_XPATH_INVALID_TYPE, \/* 1211 *\/$/;"	e	enum:__anon29
XML_XPATH_MEMORY_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_MEMORY_ERROR, \/* 1215 *\/$/;"	e	enum:__anon29
XML_XPATH_NUMBER_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_NUMBER_ERROR, \/* 1201 *\/$/;"	e	enum:__anon29
XML_XPATH_START_LITERAL_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_START_LITERAL_ERROR, \/* 1203 *\/$/;"	e	enum:__anon29
XML_XPATH_UNCLOSED_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_UNCLOSED_ERROR, \/* 1208 *\/$/;"	e	enum:__anon29
XML_XPATH_UNDEF_PREFIX_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_UNDEF_PREFIX_ERROR, \/* 1219 *\/$/;"	e	enum:__anon29
XML_XPATH_UNDEF_VARIABLE_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_UNDEF_VARIABLE_ERROR, \/* 1205 *\/$/;"	e	enum:__anon29
XML_XPATH_UNFINISHED_LITERAL_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_UNFINISHED_LITERAL_ERROR, \/* 1202 *\/$/;"	e	enum:__anon29
XML_XPATH_UNKNOWN_FUNC_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_UNKNOWN_FUNC_ERROR, \/* 1209 *\/$/;"	e	enum:__anon29
XML_XPATH_VARIABLE_REF_ERROR	include/libxml/xmlerror.h	/^    XML_XPATH_VARIABLE_REF_ERROR, \/* 1204 *\/$/;"	e	enum:__anon29
XML_XPTR_CHILDSEQ_START	include/libxml/xmlerror.h	/^    XML_XPTR_CHILDSEQ_START, \/* 1901 *\/$/;"	e	enum:__anon29
XML_XPTR_EVAL_FAILED	include/libxml/xmlerror.h	/^    XML_XPTR_EVAL_FAILED, \/* 1902 *\/$/;"	e	enum:__anon29
XML_XPTR_EXTRA_OBJECTS	include/libxml/xmlerror.h	/^    XML_XPTR_EXTRA_OBJECTS, \/* 1903 *\/$/;"	e	enum:__anon29
XML_XPTR_RESOURCE_ERROR	include/libxml/xmlerror.h	/^    XML_XPTR_RESOURCE_ERROR, \/* 1217 *\/$/;"	e	enum:__anon29
XML_XPTR_SUB_RESOURCE_ERROR	include/libxml/xmlerror.h	/^    XML_XPTR_SUB_RESOURCE_ERROR, \/* 1218 *\/$/;"	e	enum:__anon29
XML_XPTR_SYNTAX_ERROR	include/libxml/xmlerror.h	/^    XML_XPTR_SYNTAX_ERROR, \/* 1216 *\/$/;"	e	enum:__anon29
XML_XPTR_UNKNOWN_SCHEME	include/libxml/xmlerror.h	/^    XML_XPTR_UNKNOWN_SCHEME = 1900, $/;"	e	enum:__anon29
XPATH_BOOLEAN	include/libxml/xpath.h	/^    XPATH_BOOLEAN = 2,$/;"	e	enum:__anon40
XPATH_ENCODING_ERROR	include/libxml/xpath.h	/^    XPATH_ENCODING_ERROR,$/;"	e	enum:__anon39
XPATH_EXPRESSION_OK	include/libxml/xpath.h	/^    XPATH_EXPRESSION_OK = 0,$/;"	e	enum:__anon39
XPATH_EXPR_ERROR	include/libxml/xpath.h	/^    XPATH_EXPR_ERROR,$/;"	e	enum:__anon39
XPATH_INVALID_ARITY	include/libxml/xpath.h	/^    XPATH_INVALID_ARITY,$/;"	e	enum:__anon39
XPATH_INVALID_CHAR_ERROR	include/libxml/xpath.h	/^    XPATH_INVALID_CHAR_ERROR,$/;"	e	enum:__anon39
XPATH_INVALID_CTXT	include/libxml/xpath.h	/^    XPATH_INVALID_CTXT$/;"	e	enum:__anon39
XPATH_INVALID_CTXT_POSITION	include/libxml/xpath.h	/^    XPATH_INVALID_CTXT_POSITION,$/;"	e	enum:__anon39
XPATH_INVALID_CTXT_SIZE	include/libxml/xpath.h	/^    XPATH_INVALID_CTXT_SIZE,$/;"	e	enum:__anon39
XPATH_INVALID_OPERAND	include/libxml/xpath.h	/^    XPATH_INVALID_OPERAND,$/;"	e	enum:__anon39
XPATH_INVALID_PREDICATE_ERROR	include/libxml/xpath.h	/^    XPATH_INVALID_PREDICATE_ERROR,$/;"	e	enum:__anon39
XPATH_INVALID_TYPE	include/libxml/xpath.h	/^    XPATH_INVALID_TYPE,$/;"	e	enum:__anon39
XPATH_LOCATIONSET	include/libxml/xpath.h	/^    XPATH_LOCATIONSET = 7,$/;"	e	enum:__anon40
XPATH_MEMORY_ERROR	include/libxml/xpath.h	/^    XPATH_MEMORY_ERROR,$/;"	e	enum:__anon39
XPATH_NODESET	include/libxml/xpath.h	/^    XPATH_NODESET = 1,$/;"	e	enum:__anon40
XPATH_NUMBER	include/libxml/xpath.h	/^    XPATH_NUMBER = 3,$/;"	e	enum:__anon40
XPATH_NUMBER_ERROR	include/libxml/xpath.h	/^    XPATH_NUMBER_ERROR,$/;"	e	enum:__anon39
XPATH_POINT	include/libxml/xpath.h	/^    XPATH_POINT = 5,$/;"	e	enum:__anon40
XPATH_RANGE	include/libxml/xpath.h	/^    XPATH_RANGE = 6,$/;"	e	enum:__anon40
XPATH_START_LITERAL_ERROR	include/libxml/xpath.h	/^    XPATH_START_LITERAL_ERROR,$/;"	e	enum:__anon39
XPATH_STRING	include/libxml/xpath.h	/^    XPATH_STRING = 4,$/;"	e	enum:__anon40
XPATH_UNCLOSED_ERROR	include/libxml/xpath.h	/^    XPATH_UNCLOSED_ERROR,$/;"	e	enum:__anon39
XPATH_UNDEFINED	include/libxml/xpath.h	/^    XPATH_UNDEFINED = 0,$/;"	e	enum:__anon40
XPATH_UNDEF_PREFIX_ERROR	include/libxml/xpath.h	/^    XPATH_UNDEF_PREFIX_ERROR,$/;"	e	enum:__anon39
XPATH_UNDEF_VARIABLE_ERROR	include/libxml/xpath.h	/^    XPATH_UNDEF_VARIABLE_ERROR,$/;"	e	enum:__anon39
XPATH_UNFINISHED_LITERAL_ERROR	include/libxml/xpath.h	/^    XPATH_UNFINISHED_LITERAL_ERROR,$/;"	e	enum:__anon39
XPATH_UNKNOWN_FUNC_ERROR	include/libxml/xpath.h	/^    XPATH_UNKNOWN_FUNC_ERROR,$/;"	e	enum:__anon39
XPATH_USERS	include/libxml/xpath.h	/^    XPATH_USERS = 8,$/;"	e	enum:__anon40
XPATH_VARIABLE_REF_ERROR	include/libxml/xpath.h	/^    XPATH_VARIABLE_REF_ERROR,$/;"	e	enum:__anon39
XPATH_XSLT_TREE	include/libxml/xpath.h	/^    XPATH_XSLT_TREE = 9  \/* An XSLT value tree, non modifiable *\/$/;"	e	enum:__anon40
XPTR_RESOURCE_ERROR	include/libxml/xpath.h	/^    XPTR_RESOURCE_ERROR,$/;"	e	enum:__anon39
XPTR_SUB_RESOURCE_ERROR	include/libxml/xpath.h	/^    XPTR_SUB_RESOURCE_ERROR,$/;"	e	enum:__anon39
XPTR_SYNTAX_ERROR	include/libxml/xpath.h	/^    XPTR_SYNTAX_ERROR,$/;"	e	enum:__anon39
XP_ERROR	include/libxml/xpathInternals.h	256;"	d
XP_ERROR0	include/libxml/xpathInternals.h	265;"	d
XSFFormat	src/formats/xsfformat.cpp	/^    XSFFormat()$/;"	f	class:OpenBabel::XSFFormat
XSFFormat	src/formats/xsfformat.cpp	/^  class XSFFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
XTCFormat	src/formats/xtcformat.cpp	/^    XTCFormat()$/;"	f	class:OpenBabel::XTCFormat
XTCFormat	src/formats/xtcformat.cpp	/^  class XTCFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
XXXFormat	src/formats/exampleformat.cpp	/^  XXXFormat()$/;"	f	class:OpenBabel::XXXFormat
XXXFormat	src/formats/exampleformat.cpp	/^class XXXFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
XYZFormat	src/formats/xyzformat.cpp	/^    XYZFormat()$/;"	f	class:OpenBabel::XYZFormat
XYZFormat	src/formats/xyzformat.cpp	/^  class XYZFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
XYZ_COORD	include/inchi/ichirvrs.h	/^} XYZ_COORD;$/;"	t	typeref:struct:tagXYZCoord
X_REF	src/formats/libinchi/ichiprt1.c	/^} X_REF;$/;"	t	typeref:struct:tagXmlEntityRef	file:
Xe	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
Y	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
YG	include/openbabel/residue.h	/^      YG    = 39,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
YOBFormat	src/formats/yasaraformat.cpp	/^    YOBFormat()$/;"	f	class:OpenBabel::YOBFormat
YOBFormat	src/formats/yasaraformat.cpp	/^class YOBFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
Yb	src/formats/smiley.h	/^    Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta,  W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn,$/;"	e	enum:Smiley::Elements
Z	src/charges/eem.cpp	/^    int Z;$/;"	m	struct:OpenBabel::EEMParameter	file:
Z2MNAZ	src/formats/MNAformat.cpp	/^	MNAZ MNAFormat::Z2MNAZ(unsigned int Z)$/;"	f	class:OpenBabel::MNAFormat
ZCONF_H	include/zconf.h	9;"	d
ZEROATOMSOK	include/openbabel/format.h	34;"	d
ZERO_ANGLE	src/formats/libinchi/ichister.c	410;"	d	file:
ZERO_ATW_DIFF	include/inchi/incomdef.h	119;"	d
ZERO_FLOAT	src/formats/libinchi/ichister.c	74;"	d	file:
ZERO_LENGTH	src/formats/libinchi/ichister.c	73;"	d	file:
ZEXPORT	include/zconf.h	225;"	d
ZEXPORT	include/zconf.h	237;"	d
ZEXPORT	include/zconf.h	240;"	d
ZEXPORT	include/zconf.h	250;"	d
ZEXPORTVA	include/zconf.h	227;"	d
ZEXPORTVA	include/zconf.h	229;"	d
ZEXPORTVA	include/zconf.h	238;"	d
ZEXPORTVA	include/zconf.h	241;"	d
ZEXPORTVA	include/zconf.h	253;"	d
ZEXTERN	include/zconf.h	208;"	d
ZEXTERN	include/zconf.h	210;"	d
ZEXTERN	include/zconf.h	247;"	d
ZINDOFormat	src/formats/zindoformat.cpp	/^    ZINDOFormat()$/;"	f	class:OpenBabel::ZINDOFormat
ZINDOFormat	src/formats/zindoformat.cpp	/^  class ZINDOFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
ZLIB_H	include/zlib.h	32;"	d
ZLIB_VERNUM	include/zlib.h	41;"	d
ZLIB_VERSION	include/zlib.h	40;"	d
ZMATRIX	src/formats/gamessukformat.cpp	/^    enum ReadMode_t {CARTESIAN, ZMATRIX, VARIABLES, CONSTANTS, SKIP};$/;"	e	enum:OpenBabel::GAMESSUKFormat::ReadMode_t	file:
ZTS_CALCULATION_PATTERN	src/formats/nwchemformat.cpp	/^static const char* ZTS_CALCULATION_PATTERN = "@ String method.";$/;"	m	namespace:OpenBabel	file:
ZTS_CONVERGED_PATTERN	src/formats/nwchemformat.cpp	/^static const char* ZTS_CONVERGED_PATTERN = "@ The string calculation converged";$/;"	m	namespace:OpenBabel	file:
ZTYPE_3D	src/formats/libinchi/ichister.c	60;"	d	file:
ZTYPE_DOWN	src/formats/libinchi/ichister.c	57;"	d	file:
ZTYPE_EITHER	src/formats/libinchi/ichister.c	61;"	d	file:
ZTYPE_NONE	src/formats/libinchi/ichister.c	58;"	d	file:
ZTYPE_UP	src/formats/libinchi/ichister.c	59;"	d	file:
Z_ASCII	include/zlib.h	198;"	d
Z_BEST_COMPRESSION	include/zlib.h	185;"	d
Z_BEST_SPEED	include/zlib.h	184;"	d
Z_BINARY	include/zlib.h	196;"	d
Z_BLOCK	include/zlib.h	167;"	d
Z_BUF_ERROR	include/zlib.h	177;"	d
Z_DATA_ERROR	include/zlib.h	175;"	d
Z_DEFAULT_COMPRESSION	include/zlib.h	186;"	d
Z_DEFAULT_STRATEGY	include/zlib.h	193;"	d
Z_DEFLATED	include/zlib.h	202;"	d
Z_ERRNO	include/zlib.h	173;"	d
Z_FILTERED	include/zlib.h	189;"	d
Z_FINISH	include/zlib.h	166;"	d
Z_FIXED	include/zlib.h	192;"	d
Z_FULL_FLUSH	include/zlib.h	165;"	d
Z_HUFFMAN_ONLY	include/zlib.h	190;"	d
Z_MEM_ERROR	include/zlib.h	176;"	d
Z_NEED_DICT	include/zlib.h	172;"	d
Z_NO_COMPRESSION	include/zlib.h	183;"	d
Z_NO_FLUSH	include/zlib.h	162;"	d
Z_NULL	include/zlib.h	205;"	d
Z_OK	include/zlib.h	170;"	d
Z_PARTIAL_FLUSH	include/zlib.h	163;"	d
Z_RLE	include/zlib.h	191;"	d
Z_STREAM_END	include/zlib.h	171;"	d
Z_STREAM_ERROR	include/zlib.h	174;"	d
Z_SYNC_FLUSH	include/zlib.h	164;"	d
Z_TEXT	include/zlib.h	197;"	d
Z_UNKNOWN	include/zlib.h	199;"	d
Z_VERSION_ERROR	include/zlib.h	178;"	d
Zn	src/formats/smiley.h	/^     K, Ca,                                                         Sc, Ti,  V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr,$/;"	e	enum:Smiley::Elements
Zr	src/formats/smiley.h	/^    Rb, Sr,                                                          Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te,  I, Xe,$/;"	e	enum:Smiley::Elements
_1MA	include/openbabel/residue.h	/^      _1MA  = 32,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
_1MG	include/openbabel/residue.h	/^      _1MG  = 34,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
_2MG	include/openbabel/residue.h	/^      _2MG  = 35,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
_5MC	include/openbabel/residue.h	/^      _5MC  = 32,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
_5MU	include/openbabel/residue.h	/^      _5MU  = 41,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
_7MG	include/openbabel/residue.h	/^      _7MG  = 37,$/;"	e	enum:OpenBabel::OBResidueIndex::__anon61
_ARENeg	include/openbabel/data.h	/^      double _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;$/;"	m	class:OpenBabel::OBElement
_ARRAY_LIST_H_	src/formats/ArrayList.h	25;"	d
_ArrayList	src/formats/ArrayList.h	/^typedef struct _ArrayList {$/;"	s
_AtomExpr	include/openbabel/parsmart.h	/^  typedef union _AtomExpr {$/;"	u	namespace:OpenBabel
_BondExpr	include/openbabel/parsmart.h	/^  typedef union _BondExpr {$/;"	u	namespace:OpenBabel
_ByteCode	src/chains.cpp	/^  typedef union _ByteCode$/;"	u	namespace:OpenBabel	file:
_CRT_SECURE_NO_DEPRECATE	src/formats/libinchi/sha2.c	41;"	d	file:
_HI	include/inchi/ichicant.h	64;"	d
_H_CDXConstants	include/chemdrawcdx.h	19;"	d
_IS_EOF	include/inchi/ichierr.h	48;"	d
_IS_ERROR	include/inchi/ichierr.h	45;"	d
_IS_FATAL	include/inchi/ichierr.h	46;"	d
_IS_OKAY	include/inchi/ichierr.h	43;"	d
_IS_SKIP	include/inchi/ichierr.h	49;"	d
_IS_UNKNOWN	include/inchi/ichierr.h	47;"	d
_IS_WARNING	include/inchi/ichierr.h	44;"	d
_LIBICONV_H	include/iconv.h	22;"	d
_LIBICONV_H	src/formats/xml/iconv.h	22;"	d
_LIBICONV_VERSION	include/iconv.h	24;"	d
_LIBICONV_VERSION	src/formats/xml/iconv.h	24;"	d
_LO	include/inchi/ichicant.h	65;"	d
_LookingForNamespace	include/openbabel/xml.h	/^      bool _LookingForNamespace;$/;"	m	class:OpenBabel::XMLConversion
_NBaseCoords	include/openbabel/rotamer.h	/^    unsigned int                         _NBaseCoords;$/;"	m	class:OpenBabel::OBRotamerList
_PORTABLE_SNPRINTF_H_	src/snprintf.h	2;"	d
_REENTRANT	include/libxml/xmlexports.h	108;"	d
_REENTRANT	include/libxml/xmlexports.h	64;"	d
_REENTRANT	include/libxml/xmlexports.h	86;"	d
_Rcov	include/openbabel/data.h	/^      double _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;$/;"	m	class:OpenBabel::OBElement
_Rvdw	include/openbabel/data.h	/^      double _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;$/;"	m	class:OpenBabel::OBElement
_SHA2_H	include/inchi/sha2.h	47;"	d
_SYMMETRY_ELEMENT_	src/pointgroup.cpp	/^    struct _SYMMETRY_ELEMENT_ {$/;"	s	class:OpenBabel::PointGroupPrivate	file:
_SkipNextRead	include/openbabel/xml.h	/^      bool _SkipNextRead;$/;"	m	class:OpenBabel::XMLConversion
_SpaceGroup	src/formats/xml/cmlformat.cpp	/^    SpaceGroup _SpaceGroup;$/;"	m	class:OpenBabel::CMLFormat	file:
_SpaceGroups	src/math/spacegroup.cpp	/^  static SpaceGroups _SpaceGroups;$/;"	m	namespace:OpenBabel	file:
_T	include/openbabel/data.h	/^    double _T,_value;$/;"	m	class:OpenBabel::OBAtomHOF
_V	include/openbabel/generic.h	/^    double _x,_y,_z,_V;$/;"	m	class:OpenBabel::OBFreeGridPoint
_Xfixed	include/openbabel/forcefield.h	/^    OBBitVec	_Xfixed;$/;"	m	class:OpenBabel::OBFFConstraints
_Yfixed	include/openbabel/forcefield.h	/^    OBBitVec	_Yfixed;$/;"	m	class:OpenBabel::OBFFConstraints
_ZIPSTREAM_H_	src/zipstream.h	35;"	d
_Zfixed	include/openbabel/forcefield.h	/^    OBBitVec	_Zfixed;$/;"	m	class:OpenBabel::OBFFConstraints
__DEBUG_MEMORY_ALLOC__	include/libxml/xmlmemory.h	13;"	d
__DEBUG_XML__	include/libxml/debugXML.h	12;"	d
__DOCB_PARSER_H__	include/libxml/DOCBparser.h	12;"	d
__EQEQ__H_	src/charges/eqeq.h	20;"	d
__EXTR_CT_H__	include/inchi/extr_ct.h	41;"	d
__HTML_PARSER_H__	include/libxml/HTMLparser.h	14;"	d
__HTML_TREE_H__	include/libxml/HTMLtree.h	12;"	d
__ICHIRVRS_H__	include/inchi/ichirvrs.h	41;"	d
__ICHITIME_H__	include/inchi/ichitime.h	41;"	d
__IKEY_BASE26_H__	include/inchi/ikey_base26.h	41;"	d
__INCHICANO_H__	include/inchi/ichicano.h	41;"	d
__INCHICANT_H__	include/inchi/ichicant.h	41;"	d
__INCHICMP_H__	include/inchi/inchicmp.h	41;"	d
__INCHICOMN_H__	include/inchi/ichicomn.h	41;"	d
__INCHIDRP_H__	include/inchi/ichidrp.h	41;"	d
__INCHIERR_H__	include/inchi/ichierr.h	41;"	d
__INCHIMAIN_H__	include/inchi/ichimain.h	41;"	d
__INCHIMAKE_H__	include/inchi/ichimake.h	41;"	d
__INCHINORM_H__	include/inchi/ichinorm.h	41;"	d
__INCHIRING_H__	include/inchi/ichiring.h	41;"	d
__INCHISTER_H__	include/inchi/ichister.h	41;"	d
__INCHITAUT_H__	include/inchi/ichitaut.h	41;"	d
__INCHI_BNS_H___	include/inchi/ichi_bns.h	41;"	d
__INCHI_COMPAT_H__	include/inchi/ichicomp.h	41;"	d
__INCHI_DLL_A_H__	include/inchi/inchi_dll_a.h	40;"	d
__INCHI_DLL_MAIN_H__	include/inchi/inchi_dll_main.h	40;"	d
__INCHI_H__	include/inchi/ichi.h	41;"	d
__INCOMDEF_H__	include/inchi/incomdef.h	46;"	d
__INHCH_API_H__	include/inchi/inchi_api.h	41;"	d
__INHCH_API_H__	include/inchi_api.h	42;"	d
__INPDEF_H__	include/inchi/inpdef.h	42;"	d
__MODE_H__	include/inchi/mode.h	43;"	d
__MYTOLOWER	src/formats/libinchi/ichiprt2.c	1502;"	d	file:
__MYTOLOWER	src/formats/libinchi/ichiprt2.c	1538;"	d	file:
__MYTOLOWER	src/formats/libinchi/util.c	1113;"	d	file:
__NANO_FTP_H__	include/libxml/nanoftp.h	12;"	d
__NANO_HTTP_H__	include/libxml/nanohttp.h	12;"	d
__QEQ__H_	src/charges/qeq.h	20;"	d
__QTPIE__H__	src/charges/qtpie.h	20;"	d
__STRUTIL_H__	include/inchi/strutil.h	41;"	d
__UTIL_H__	include/inchi/util.h	41;"	d
__XML_AUTOMATA_H__	include/libxml/xmlautomata.h	11;"	d
__XML_C14N_H__	include/libxml/c14n.h	18;"	d
__XML_CATALOG_H__	include/libxml/catalog.h	18;"	d
__XML_CHAR_ENCODING_H__	include/libxml/encoding.h	23;"	d
__XML_CHVALID_H__	include/libxml/chvalid.h	15;"	d
__XML_DICT_H__	include/libxml/dict.h	12;"	d
__XML_ENTITIES_H__	include/libxml/entities.h	12;"	d
__XML_ERROR_H__	include/libxml/xmlerror.h	13;"	d
__XML_EXPORTS_H__	include/libxml/xmlexports.h	11;"	d
__XML_GLOBALS_H	include/libxml/globals.h	15;"	d
__XML_HASH_H__	include/libxml/hash.h	12;"	d
__XML_IO_H__	include/libxml/xmlIO.h	11;"	d
__XML_LINK_INCLUDE__	include/libxml/list.h	12;"	d
__XML_MODULE_H__	include/libxml/xmlmodule.h	12;"	d
__XML_PARSER_H__	include/libxml/parser.h	11;"	d
__XML_PARSER_INTERNALS_H__	include/libxml/parserInternals.h	13;"	d
__XML_PATTERN_H__	include/libxml/pattern.h	12;"	d
__XML_REGEXP_H__	include/libxml/xmlregexp.h	12;"	d
__XML_RELAX_NG__	include/libxml/relaxng.h	11;"	d
__XML_SAX2_H__	include/libxml/SAX2.h	13;"	d
__XML_SAX_H__	include/libxml/SAX.h	13;"	d
__XML_SCHEMA_H__	include/libxml/xmlschemas.h	13;"	d
__XML_SCHEMA_INTERNALS_H__	include/libxml/schemasInternals.h	13;"	d
__XML_SCHEMA_TYPES_H__	include/libxml/xmlschemastypes.h	13;"	d
__XML_STRING_H__	include/libxml/xmlstring.h	12;"	d
__XML_THREADS_H__	include/libxml/threads.h	12;"	d
__XML_TREE_H__	include/libxml/tree.h	13;"	d
__XML_UNICODE_H__	include/libxml/xmlunicode.h	16;"	d
__XML_URI_H__	include/libxml/uri.h	12;"	d
__XML_VALID_H__	include/libxml/valid.h	12;"	d
__XML_VERSION_H__	include/libxml/xmlversion.h	11;"	d
__XML_VERSION_H__	include/libxml/xmlwin32version.h	12;"	d
__XML_XINCLUDE_H__	include/libxml/xinclude.h	14;"	d
__XML_XLINK_H__	include/libxml/xlink.h	11;"	d
__XML_XMLREADER_H__	include/libxml/xmlreader.h	11;"	d
__XML_XMLSAVE_H__	include/libxml/xmlsave.h	11;"	d
__XML_XMLWRITER_H__	include/libxml/xmlwriter.h	12;"	d
__XML_XPATH_H__	include/libxml/xpath.h	20;"	d
__XML_XPATH_INTERNALS_H__	include/libxml/xpathInternals.h	13;"	d
__XML_XPTR_H__	include/libxml/xpointer.h	18;"	d
___INCHISIZE_H__	include/inchi/ichisize.h	41;"	d
__isascii	include/inchi/ichicomp.h	63;"	d
__wrap_memcpy	src/memcpy.c	/^void *__wrap_memcpy(void *dest, const void *src, size_t n)$/;"	f
_a	include/openbabel/forcefield.h	/^    std::string _a, _b, _c, _d;$/;"	m	class:OpenBabel::OBFFParameter
_a	include/openbabel/internalcoord.h	/^    OBAtom *_a;   \/\/!< First connection for this atom (i.e., distance)$/;"	m	class:OpenBabel::OBInternalCoord
_aakey	include/openbabel/residue.h	/^    unsigned int              _aakey; \/\/!< Amino Acid key ID -- see SetResidueKeys()$/;"	m	class:OpenBabel::OBResidue
_accuracy	include/openbabel/spectrophore.h	/^         AccuracyOption       _accuracy;$/;"	m	class:OpenBabel::OBSpectrophore
_addDescToTitle	src/ops/largest.cpp	/^  bool _addDescToTitle;$/;"	m	class:OpenBabel::OpLargest	file:
_addDescToTitle	src/ops/sort.cpp	/^  bool _addDescToTitle;$/;"	m	class:OpenBabel::OpSort	file:
_added_footer	src/zipstream.h	/^    bool _added_footer;$/;"	m	class:zlib_stream::basic_zip_ostream
_ads	include/openbabel/generic.h	/^    std::vector<triple<OBAtom*,OBAtom*,double> > _ads;$/;"	m	class:OpenBabel::OBTorsion
_agent	include/openbabel/reaction.h	/^  obsharedptr<OBMol> _agent;$/;"	m	class:OpenBabel::OBReaction
_alias	include/openbabel/alias.h	/^  std::string _alias;$/;"	m	class:OpenBabel::AliasData
_align	src/ops/opalign.cpp	/^  OBAlign _align;$/;"	m	class:OpenBabel::OpAlign	file:
_alphaHOMO	include/openbabel/generic.h	/^    unsigned int _alphaHOMO;               \/\/!< Highest occupied molecular orbital for _alphaOrbitals$/;"	m	class:OpenBabel::OBOrbitalData
_alphaOrbitals	include/openbabel/generic.h	/^    std::vector<OBOrbital> _alphaOrbitals; \/\/!< List of orbitals. In case of unrestricted calculations, this contains the alpha spin-orbitals$/;"	m	class:OpenBabel::OBOrbitalData
_ang	include/openbabel/internalcoord.h	/^    double  _ang; \/\/!< Angle between this, _a, and _b (i.e., _a is the vertex)$/;"	m	class:OpenBabel::OBInternalCoord
_angle	include/openbabel/obiter.h	/^    std::vector<unsigned int> _angle;$/;"	m	class:OpenBabel::OBMolAngleIter
_anglecalculations	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFAngleCalculationGaff>         _anglecalculations;$/;"	m	class:OpenBabel::OBForceFieldGaff
_anglecalculations	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFAngleCalculationGhemical>         _anglecalculations;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_anglecalculations	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFAngleCalculationMMFF94>         _anglecalculations;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_anglecalculations	src/forcefields/forcefielduff.h	/^    std::vector<OBFFAngleCalculationUFF>         _anglecalculations;$/;"	m	class:OpenBabel::OBForceFieldUFF
_angles	include/openbabel/generic.h	/^    std::vector<OBAngle> _angles;$/;"	m	class:OpenBabel::OBAngleData
_aromNH	src/formats/smilesformat.cpp	/^    std::vector<bool> _aromNH;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_atmorder	src/formats/smilesformat.cpp	/^    std::vector<int> _atmorder;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_atom	include/openbabel/generic.h	/^    OBAtom *_atom;$/;"	m	class:OpenBabel::OBExternalBond
_atom	include/openbabel/ring.h	/^    OBAtom  *_atom; \/\/!< Atom represented by this node in the tree$/;"	m	class:OpenBabel::OBRTree
_atom	src/formats/smilesformat.cpp	/^    OBAtom *_atom,*_parent;$/;"	m	class:OpenBabel::OBCanSmiNode	file:
_atom4refc	include/openbabel/generic.h	/^    std::vector<unsigned int> _atom4refc; \/\/!< calcvolume references$/;"	m	class:OpenBabel::OBChiralData
_atom4refo	include/openbabel/generic.h	/^    std::vector<unsigned int> _atom4refo; \/\/!< output atom references$/;"	m	class:OpenBabel::OBChiralData
_atom4refs	include/openbabel/generic.h	/^    std::vector<unsigned int> _atom4refs; \/\/!< input atom references$/;"	m	class:OpenBabel::OBChiralData
_atomIds	include/openbabel/mol.h	/^    std::vector<OBAtom*>          _atomIds;    	\/\/!< vector of atoms indexed by id$/;"	m	class:OpenBabel::OBMol
_atom_site_Cartn_x	src/formats/mmcifformat.cpp	/^     _atom_site_Cartn_x, \/\/ The x coordinate in angstroms$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_Cartn_y	src/formats/mmcifformat.cpp	/^     _atom_site_Cartn_y, \/\/ The y coordinate in angstroms$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_Cartn_z	src/formats/mmcifformat.cpp	/^     _atom_site_Cartn_z, \/\/ The z coordinate in angstroms$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_fract_x	src/formats/mmcifformat.cpp	/^     _atom_site_fract_x, \/\/ The x coordinate specified as a fraction of _cell_length_a$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_fract_y	src/formats/mmcifformat.cpp	/^     _atom_site_fract_y, \/\/ The y coordinate specified as a fraction of _cell_length_b$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_fract_z	src/formats/mmcifformat.cpp	/^     _atom_site_fract_z, \/\/ The z coordinate specified as a fraction of _cell_length_c$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_label	src/formats/mmcifformat.cpp	/^     _atom_site_label, \/\/ The atomic label if more detailed label info unavailable$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_label_asym_id	src/formats/mmcifformat.cpp	/^     _atom_site_label_asym_id, \/\/ The unique chain id$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_label_atom_id	src/formats/mmcifformat.cpp	/^     _atom_site_label_atom_id, \/\/ The atomic label within the residue$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_label_comp_id	src/formats/mmcifformat.cpp	/^     _atom_site_label_comp_id, \/\/ The residue abbreviation, e.g. ILE$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_label_entity_id	src/formats/mmcifformat.cpp	/^     _atom_site_label_entity_id, \/\/ The chain entity number of the residue, e.g. 2$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_label_seq_id	src/formats/mmcifformat.cpp	/^     _atom_site_label_seq_id, \/\/ The sequence number of the residue, within the chain, e.g. 12$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_occupancy	src/formats/mmcifformat.cpp	/^     _atom_site_occupancy,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_site_type_symbol	src/formats/mmcifformat.cpp	/^     _atom_site_type_symbol, \/\/ Atomic symbol, e.g. C$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_type_oxidation_number	src/formats/mmcifformat.cpp	/^     _atom_type_oxidation_number,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atom_type_symbol	src/formats/mmcifformat.cpp	/^     _atom_type_symbol,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_atomhof	include/openbabel/data.h	/^    std::vector<OBAtomHOF> _atomhof;$/;"	m	class:OpenBabel::OBAtomicHeatOfFormationTable
_atomid	include/openbabel/residue.h	/^    std::vector<std::string>  _atomid;\/\/!< Residue atom text IDs$/;"	m	class:OpenBabel::OBResidue
_atoms	include/openbabel/residue.h	/^    std::vector<OBAtom*>      _atoms; \/\/!< List of OBAtom in this residue$/;"	m	class:OpenBabel::OBResidue
_attr	include/openbabel/base.h	/^    std::string  _attr;  \/\/!< attribute tag (e.g., "UnitCell", "Comment" or "Author")$/;"	m	class:OpenBabel::OBGenericData
_aut	include/openbabel/math/align.h	/^    Automorphisms _aut;$/;"	m	class:OpenBabel::OBAlign
_autoFormalCharge	include/openbabel/mol.h	/^    bool                          _autoFormalCharge;\/\/!< Assign formal charges automatically$/;"	m	class:OpenBabel::OBMol
_autoPartialCharge	include/openbabel/mol.h	/^    bool                          _autoPartialCharge;\/\/!< Assign partial charges automatically$/;"	m	class:OpenBabel::OBMol
_avisit	src/formats/smilesformat.cpp	/^    vector<bool>            _avisit;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_b	include/openbabel/forcefield.h	/^    std::string _a, _b, _c, _d;$/;"	m	class:OpenBabel::OBFFParameter
_b	include/openbabel/internalcoord.h	/^    OBAtom *_b;   \/\/!< Second reference atom (i.e., angle)$/;"	m	class:OpenBabel::OBInternalCoord
_bc	include/openbabel/generic.h	/^    std::pair<OBAtom*,OBAtom*> _bc;$/;"	m	class:OpenBabel::OBTorsion
_bcdigit	src/formats/smilesformat.cpp	/^    unsigned int _bcdigit; \/\/ Unused unless option "R" is specified$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_beginProbe	include/openbabel/spectrophore.h	/^         unsigned int         _beginProbe;$/;"	m	class:OpenBabel::OBSpectrophore
_betaHOMO	include/openbabel/generic.h	/^    unsigned int _betaHOMO;                \/\/!< Highest occupied for _betaOrbitals (if needed)$/;"	m	class:OpenBabel::OBOrbitalData
_betaOrbitals	include/openbabel/generic.h	/^    std::vector<OBOrbital> _betaOrbitals;  \/\/!< Only used if needed (e.g., unrestricted calculations)$/;"	m	class:OpenBabel::OBOrbitalData
_bgn	include/openbabel/bond.h	/^      OBAtom                     *_bgn;   \/\/!< I connect one node$/;"	m	class:OpenBabel::OBBond
_bgn	include/openbabel/generic.h	/^    int _bgn;$/;"	m	class:OpenBabel::OBVirtualBond
_bgn	include/openbabel/phmodel.h	/^    OBSmartsPattern _bgn,_end;$/;"	m	class:OpenBabel::OBChemTsfm
_bitcount	src/fingerprints/finger3.cpp	/^  int _bitcount;$/;"	m	class:OpenBabel::PatternFP	file:
_blue	include/openbabel/data.h	/^      double _red, _green, _blue;$/;"	m	class:OpenBabel::OBElement
_bond	include/openbabel/generic.h	/^    OBBond *_bond;$/;"	m	class:OpenBabel::OBExternalBond
_bond	include/openbabel/rotor.h	/^    OBBond *_bond; \/\/!< the bond associated with this rotor$/;"	m	class:OpenBabel::OBRotor
_bondIds	include/openbabel/mol.h	/^    std::vector<OBBond*>          _bondIds;     \/\/!< vector of bonds$/;"	m	class:OpenBabel::OBMol
_bondcalculations	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFBondCalculationGaff>          _bondcalculations;$/;"	m	class:OpenBabel::OBForceFieldGaff
_bondcalculations	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFBondCalculationGhemical>          _bondcalculations;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_bondcalculations	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFBondCalculationMMFF94>          _bondcalculations;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_bondcalculations	src/forcefields/forcefielduff.h	/^    std::vector<OBFFBondCalculationUFF>          _bondcalculations;$/;"	m	class:OpenBabel::OBForceFieldUFF
_bonds	include/openbabel/ring.h	/^    std::vector<OBBond*> _bonds; \/\/!< the internal list of closure bonds (deprecated)$/;"	m	class:OpenBabel::OBRingSearch
_boxPoint	include/openbabel/spectrophore.h	/^         }                    _boxPoint[12];$/;"	m	class:OpenBabel::OBSpectrophore	typeref:struct:OpenBabel::OBSpectrophore::__anon64
_buf	include/openbabel/xml.h	/^      xmlOutputBufferPtr _buf;$/;"	m	class:OpenBabel::XMLConversion
_buf	src/formats/chemdrawcdx.cpp	/^  std::string _buf;$/;"	m	class:OpenBabel::CDXReader	file:
_buffer	include/openbabel/parsmart.h	/^    char *_buffer;$/;"	m	class:OpenBabel::OBSmartsPattern
_buffer	src/formats/smilesformat.cpp	/^    char                    _buffer[BUFF_SIZE];$/;"	m	class:OpenBabel::OBSmilesParser	file:
_buffer	src/zipstream.h	/^    char_vector_type    _buffer;$/;"	m	class:zlib_stream::basic_unzip_streambuf
_buffer	src/zipstream.h	/^    char_vector_type    _buffer;$/;"	m	class:zlib_stream::basic_zip_streambuf
_bvisit	src/formats/smilesformat.cpp	/^    vector<bool>            _bvisit;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_c	include/openbabel/atom.h	/^      double                      **_c;         \/\/!< coordinate array in double*$/;"	m	class:OpenBabel::OBAtom
_c	include/openbabel/forcefield.h	/^    std::string _a, _b, _c, _d;$/;"	m	class:OpenBabel::OBFFParameter
_c	include/openbabel/internalcoord.h	/^    OBAtom *_c;   \/\/!< Third reference atom (i.e., dihedral \/ torsion angle)$/;"	m	class:OpenBabel::OBInternalCoord
_c	include/openbabel/mol.h	/^    double                        *_c;	        \/\/!< coordinate array$/;"	m	class:OpenBabel::OBMol
_c	include/openbabel/rotamer.h	/^    std::vector<double*>                 _c;$/;"	m	class:OpenBabel::OBRotamerList
_cairopainter	src/formats/png2format.cpp	/^    CairoPainter _cairopainter; \/\/now local variable in WriteMolecule()$/;"	m	class:OpenBabel::PNG2Format	file:
_calculateProperties	src/spectrophore.cpp	/^OBSpectrophore::_calculateProperties(OpenBabel::OBMol* mol)$/;"	f	class:OpenBabel::OBSpectrophore
_callDo	src/ops/deferred.h	/^  bool _callDo;$/;"	m	class:OpenBabel::DeferredFormat
_canonLabels	src/graphsym.cpp	/^      std::vector<unsigned int> _canonLabels;$/;"	m	class:OpenBabel::OBGraphSymPrivate	file:
_canonicalOutput	src/formats/smilesformat.cpp	/^    bool          _canonicalOutput; \/\/ regular or canonical SMILES$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_canorder	src/formats/smilesformat.cpp	/^    std::string       _canorder;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_cell_angle_alpha	src/formats/mmcifformat.cpp	/^     _cell_angle_alpha, \/\/ Unit-cell angle alpha in degrees$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_cell_angle_beta	src/formats/mmcifformat.cpp	/^     _cell_angle_beta, \/\/ Unit-cell angle beta in degrees$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_cell_angle_gamma	src/formats/mmcifformat.cpp	/^     _cell_angle_gamma, \/\/ Unit-cell angle gamma in degrees$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_cell_length_a	src/formats/mmcifformat.cpp	/^     _cell_length_a, \/\/ Unit-cell length a in Angstroms$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_cell_length_b	src/formats/mmcifformat.cpp	/^     _cell_length_b, \/\/ Unit-cell length b in Angstroms$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_cell_length_c	src/formats/mmcifformat.cpp	/^     _cell_length_c, \/\/ Unit-cell length c in Angstroms$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chain	include/openbabel/residue.h	/^    char                      _chain; \/\/!< Chain ID$/;"	m	class:OpenBabel::OBResidue
_charge	include/openbabel/data.h	/^    int _charge;$/;"	m	class:OpenBabel::OBAtomHOF
_chargeCenter	src/charges/eqeq.h	/^  int _chargeCenter[TABLE_OF_ELEMENTS_SIZE + 1]; \/\/ Common charge of metallic ions$/;"	m	class:OpenBabel::EQEqCharges
_chemical_formula_analytical	src/formats/mmcifformat.cpp	/^     _chemical_formula_analytical,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chemical_formula_iupac	src/formats/mmcifformat.cpp	/^     _chemical_formula_iupac,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chemical_formula_moiety	src/formats/mmcifformat.cpp	/^     _chemical_formula_moiety,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chemical_formula_structural	src/formats/mmcifformat.cpp	/^     _chemical_formula_structural,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chemical_name_common	src/formats/mmcifformat.cpp	/^     _chemical_name_common,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chemical_name_mineral	src/formats/mmcifformat.cpp	/^     _chemical_name_mineral,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chemical_name_structure_type	src/formats/mmcifformat.cpp	/^     _chemical_name_structure_type,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_chemical_name_systematic	src/formats/mmcifformat.cpp	/^     _chemical_name_systematic,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_child_bonds	src/formats/smilesformat.cpp	/^    std::vector<OBBond*> _child_bonds;$/;"	m	class:OpenBabel::OBCanSmiNode	file:
_child_nodes	src/formats/smilesformat.cpp	/^    std::vector<OBCanSmiNode*> _child_nodes;$/;"	m	class:OpenBabel::OBCanSmiNode	file:
_chiralLonePair	src/formats/smilesformat.cpp	/^    map<unsigned int, char> _chiralLonePair; \/\/ for atoms with potential chiral lone pairs, remember when the l.p. was encountered$/;"	m	class:OpenBabel::OBSmilesParser	file:
_cidx	include/openbabel/atom.h	/^      unsigned int                  _cidx;      \/\/!< index into coordinate array$/;"	m	class:OpenBabel::OBAtom
_cistrans	src/formats/smilesformat.cpp	/^    std::vector<OBCisTransStereo> _cistrans, _unvisited_cistrans;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_classdata	src/formats/smilesformat.cpp	/^    OBAtomClassData _classdata; \/\/ to hold atom class data like [C:2]$/;"	m	class:OpenBabel::OBSmilesParser	file:
_colnames	include/openbabel/data.h	/^      std::vector<std::string> _colnames;$/;"	m	class:OpenBabel::OBTypeTable
_color	include/openbabel/alias.h	/^  std::string _color;$/;"	m	class:OpenBabel::AliasData
_comment	include/openbabel/reaction.h	/^  std::string _comment;$/;"	m	class:OpenBabel::OBReaction
_constraints	include/openbabel/forcefield.h	/^    static OBFFConstraints _constraints; \/\/!< Constraints$/;"	m	class:OpenBabel::OBForceField
_constraints	include/openbabel/forcefield.h	/^    std::vector<OBFFConstraint> _constraints;$/;"	m	class:OpenBabel::OBFFConstraints
_constraints	src/forcefield.cpp	/^  OBFFConstraints OBForceField::_constraints = OBFFConstraints(); \/\/ define static data variable$/;"	m	class:OpenBabel::OBForceField	file:
_contribsHeavy	include/openbabel/groupcontrib.h	/^  std::vector<std::pair<OBSmartsPattern*, double> > _contribsHeavy; \/\/! heavy atom contributions$/;"	m	class:OpenBabel::OBGroupContrib
_contribsHydrogen	include/openbabel/groupcontrib.h	/^  std::vector<std::pair<OBSmartsPattern*, double> > _contribsHydrogen; \/\/!  hydrogen contributions$/;"	m	class:OpenBabel::OBGroupContrib
_coor	include/openbabel/spectrophore.h	/^         double**             _coor;$/;"	m	class:OpenBabel::OBSpectrophore
_count	src/formats/pngformat.cpp	/^  int _count; \/\/number of chemical objects converted$/;"	m	class:OpenBabel::PNGFormat	file:
_crc	src/zipstream.h	/^    unsigned long       _crc;$/;"	m	class:zlib_stream::basic_unzip_streambuf
_crc	src/zipstream.h	/^    unsigned long       _crc;$/;"	m	class:zlib_stream::basic_zip_streambuf
_cs	include/openbabel/rotor.h	/^    std::vector<std::vector<double> > _sn,_cs,_t; \/\/!< the rotation matrix (see Precalc())$/;"	m	class:OpenBabel::OBRotor
_cstep	include/openbabel/forcefield.h	/^    int 	_cstep, _nsteps; \/\/!< Used for conjugate gradients and steepest descent(Initialize and TakeNSteps)$/;"	m	class:OpenBabel::OBForceField
_current_conformer	include/openbabel/forcefield.h	/^    int 	_current_conformer; \/\/!< used to hold i for current conformer (needed by UpdateConformers)$/;"	m	class:OpenBabel::OBForceField
_cutoff	include/openbabel/forcefield.h	/^    bool 	_cutoff; \/\/!< true = cut-off enabled$/;"	m	class:OpenBabel::OBForceField
_d	include/openbabel/distgeom.h	/^    DistanceGeometryPrivate  *_d;    \/\/!< Internal private data, including bounds matrix$/;"	m	class:OpenBabel::OBDistanceGeometry
_d	include/openbabel/forcefield.h	/^    std::string _a, _b, _c, _d;$/;"	m	class:OpenBabel::OBFFParameter
_d	include/openbabel/parsmart.h	/^    OBSmartsPrivate                *_d;        \/\/!< Internal data storage for future expansion$/;"	m	class:OpenBabel::OBSmartsPattern
_data	include/openbabel/generic.h	/^    std::string _data;$/;"	m	class:OpenBabel::OBCommentData
_dataLoaded	include/openbabel/optransform.h	/^  bool _dataLoaded;$/;"	m	class:OpenBabel::OpTransform
_dataptr	include/openbabel/data.h	/^      const char  *_dataptr;\/\/!< Default data table if file is unreadable$/;"	m	class:OpenBabel::OBGlobalDataBase
_debug	include/openbabel/groupcontrib.h	/^  bool _debug;$/;"	m	class:OpenBabel::OBGroupContrib
_delta	include/openbabel/rotor.h	/^    double              _delta;  \/\/!< (optional) the resolution of a dihedral step in degrees$/;"	m	class:OpenBabel::OBRotorRule
_depth	include/openbabel/obiter.h	/^    std::vector<int>     _depth;$/;"	m	class:OpenBabel::OBMolAtomBFSIter
_depth	include/openbabel/obiter.h	/^    std::vector<int>     _depth;$/;"	m	class:OpenBabel::OBMolBondBFSIter
_desc	include/openbabel/data.h	/^      std::string _element,_method,_desc,_unit;$/;"	m	class:OpenBabel::OBAtomHOF
_descr	include/openbabel/groupcontrib.h	/^  const char* _descr;$/;"	m	class:OpenBabel::OBGroupContrib
_descr	include/openbabel/optransform.h	/^  const char* _descr;$/;"	m	class:OpenBabel::OpTransform
_descr	src/descriptors/cmpdfilter.cpp	/^  const char* _descr;$/;"	m	class:OpenBabel::CompoundFilter	file:
_descr	src/descriptors/smartsdescriptors.cpp	/^    const char* _descr;$/;"	m	class:OpenBabel::SmartsDescriptor	file:
_descr	src/ops/loader.cpp	/^  const char* _descr;$/;"	m	class:OpenBabel::OBDefine	file:
_description	src/charges/eem.cpp	/^    std::string _description;$/;"	m	class:OpenBabel::EEMCharges	file:
_dffv	include/openbabel/rotor.h	/^    std::vector<int> _dffv;         \/\/!< Distance from fixed$/;"	m	class:OpenBabel::OBRotorList
_dimension	include/openbabel/mol.h	/^    unsigned short int            _dimension;   \/\/!< Dimensionality of coordinates$/;"	m	class:OpenBabel::OBMol
_dir	include/openbabel/data.h	/^      std::string  _dir;		\/\/!< Data directory for file if _envvar fails$/;"	m	class:OpenBabel::OBGlobalDataBase
_dpar	include/openbabel/forcefield.h	/^    std::vector<double> _dpar;$/;"	m	class:OpenBabel::OBFFParameter
_dst	include/openbabel/internalcoord.h	/^    double  _dst; \/\/!< Distance between this atom and _a$/;"	m	class:OpenBabel::OBInternalCoord
_e_n1	include/openbabel/forcefield.h	/^    double 	_econv, _gconv, _e_n1; \/\/!< Used for conjugate gradients and steepest descent(Initialize and TakeNSteps)$/;"	m	class:OpenBabel::OBForceField
_econv	include/openbabel/forcefield.h	/^    double 	_econv, _gconv, _e_n1; \/\/!< Used for conjugate gradients and steepest descent(Initialize and TakeNSteps)$/;"	m	class:OpenBabel::OBForceField
_elAffinity	include/openbabel/data.h	/^      double _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;$/;"	m	class:OpenBabel::OBElement
_elNeg	include/openbabel/data.h	/^      double _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;$/;"	m	class:OpenBabel::OBElement
_ele	include/openbabel/atom.h	/^      unsigned char                 _ele;       \/\/!< atomic number (type unsigned char to minimize space -- allows for 0..255 elements)$/;"	m	class:OpenBabel::OBAtom
_electrostaticcalculations	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFElectrostaticCalculationGaff> _electrostaticcalculations;$/;"	m	class:OpenBabel::OBForceFieldGaff
_electrostaticcalculations	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFElectrostaticCalculationGhemical> _electrostaticcalculations;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_electrostaticcalculations	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFElectrostaticCalculationMMFF94> _electrostaticcalculations;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_electrostaticcalculations	src/forcefields/forcefielduff.h	/^    std::vector<OBFFElectrostaticCalculationUFF> _electrostaticcalculations;$/;"	m	class:OpenBabel::OBForceFieldUFF
_element	include/openbabel/data.h	/^      std::string _element,_method,_desc,_unit;$/;"	m	class:OpenBabel::OBAtomHOF
_element	include/openbabel/data.h	/^      std::vector<OBElement*> _element;$/;"	m	class:OpenBabel::OBElementTable
_elepairs	include/openbabel/forcefield.h	/^    OBBitVec	_elepairs; \/\/!< Electrostatic pairs that should be calculated$/;"	m	class:OpenBabel::OBForceField
_embedlevel	include/openbabel/xml.h	/^      int _embedlevel;$/;"	m	class:OpenBabel::XMLBaseFormat
_end	include/openbabel/bond.h	/^      OBAtom                     *_end;   \/\/!< to another node$/;"	m	class:OpenBabel::OBBond
_end	include/openbabel/generic.h	/^    int _end;$/;"	m	class:OpenBabel::OBVirtualBond
_end	include/openbabel/phmodel.h	/^    OBSmartsPattern _bgn,_end;$/;"	m	class:OpenBabel::OBChemTsfm
_endProbe	include/openbabel/spectrophore.h	/^         unsigned int         _endProbe;$/;"	m	class:OpenBabel::OBSpectrophore
_endatom	src/formats/smilesformat.cpp	/^    OBAtom* _endatom;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_energies	include/openbabel/forcefield.h	/^    std::vector<double> _energies; \/\/!< used to hold the energies for all conformers$/;"	m	class:OpenBabel::OBForceField
_energy	include/openbabel/generic.h	/^    double       _energy;         \/\/!< in electron volts$/;"	m	class:OpenBabel::OBOrbital
_energy	include/openbabel/mol.h	/^    double                        _energy;      \/\/!< heat of formation$/;"	m	class:OpenBabel::OBMol
_envvar	include/openbabel/data.h	/^      std::string  _envvar;	\/\/!< Environment variable to check first$/;"	m	class:OpenBabel::OBGlobalDataBase
_err	src/zipstream.h	/^    int                 _err;$/;"	m	class:zlib_stream::basic_unzip_streambuf
_err	src/zipstream.h	/^    int                 _err;$/;"	m	class:zlib_stream::basic_zip_streambuf
_errorMsg	include/openbabel/oberror.h	/^      std::string _errorMsg;$/;"	m	class:OpenBabel::OBError
_evalatoms	include/openbabel/rotor.h	/^    OBBitVec _fixedatoms,_fixedbonds, _evalatoms; \/\/!< fixed atoms\/bonds$/;"	m	class:OpenBabel::OBRotor
_expandedatoms	include/openbabel/alias.h	/^  std::vector<unsigned long> _expandedatoms; \/\/atom ids (not idxs)$/;"	m	class:OpenBabel::AliasData
_explanation	include/openbabel/oberror.h	/^      std::string _explanation;$/;"	m	class:OpenBabel::OBError
_extbond	src/formats/smilesformat.cpp	/^    vector<ExternalBond>    _extbond;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_factor	include/openbabel/forcefield.h	/^    double _factor;$/;"	m	class:OpenBabel::OBFFConstraints
_fail	include/openbabel/math/align.h	/^    bool _fail;$/;"	m	class:OpenBabel::OBAlign
_fcharge	include/openbabel/atom.h	/^      short                         _fcharge;   \/\/!< formal charge$/;"	m	class:OpenBabel::OBAtom
_fermi	include/openbabel/generic.h	/^    double _fermi;$/;"	m	class:OpenBabel::OBDOSData
_ffangleparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _ffangleparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_ffangleparams	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFParameter> _ffangleparams;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_ffangleparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _ffangleparams; \/\/ a = atom 1 of angle abc$/;"	m	class:OpenBabel::OBForceFieldMM2
_ffangleparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffangleparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffbndkparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffbndkparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffbondparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _ffbondparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_ffbondparams	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFParameter> _ffbondparams;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_ffbondparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _ffbondparams; \/\/ a = atom 1 of bond$/;"	m	class:OpenBabel::OBForceFieldMM2
_ffbondparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffbondparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffchargeparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _ffchargeparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_ffchargeparams	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFParameter> _ffchargeparams;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_ffchgparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffchgparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffdefparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffdefparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffdfsbparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffdfsbparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffdipoleparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _ffdipoleparams;    \/\/ a = atom 1$/;"	m	class:OpenBabel::OBForceFieldMM2
_ffhbondparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _ffhbondparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_ffoopparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _ffoopparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_ffoopparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffoopparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffoutplanebendparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _ffoutplanebendparams; \/\/ a = atom b        a$/;"	m	class:OpenBabel::OBForceFieldMM2
_ffparams	src/forcefields/forcefielduff.h	/^    std::vector<OBFFParameter> _ffparams;$/;"	m	class:OpenBabel::OBForceFieldUFF
_ffpbciparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffpbciparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffpropArom	src/forcefields/forcefieldmmff94.h	/^      OBBitVec			 _ffpropArom;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffpropLin	src/forcefields/forcefieldmmff94.h	/^      OBBitVec			 _ffpropLin;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffpropPilp	src/forcefields/forcefieldmmff94.h	/^      OBBitVec			 _ffpropPilp;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffpropSbmb	src/forcefields/forcefieldmmff94.h	/^      OBBitVec			 _ffpropSbmb;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffpropparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _ffpropparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_ffpropparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffpropparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffstrbndparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffstrbndparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffstretchbendparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _ffstretchbendparams; \/\/ a = atom$/;"	m	class:OpenBabel::OBForceFieldMM2
_fftorsionparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _fftorsionparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_fftorsionparams	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFParameter> _fftorsionparams;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_fftorsionparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _fftorsionparams; \/\/ a = atom 1 of torsion$/;"	m	class:OpenBabel::OBForceFieldMM2
_fftorsionparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _fftorsionparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffvdwparams	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFParameter> _ffvdwparams;$/;"	m	class:OpenBabel::OBForceFieldGaff
_ffvdwparams	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFParameter> _ffvdwparams;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_ffvdwparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _ffvdwparams;    \/\/ a = atom 1$/;"	m	class:OpenBabel::OBForceFieldMM2
_ffvdwparams	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFParameter> _ffvdwparams;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_ffvdwprparams	src/forcefields/forcefieldmm2.h	/^      std::vector<OBFFParameter> _ffvdwprparams;  \/\/ a = atom 1 of pair$/;"	m	class:OpenBabel::OBForceFieldMM2
_fgbonds	include/openbabel/bondtyper.h	/^    std::vector<std::pair<OBSmartsPattern*, std::vector<int> > >	_fgbonds;$/;"	m	class:OpenBabel::OBBondTyper
_filename	include/openbabel/data.h	/^      std::string  _filename;\/\/!< File to search for$/;"	m	class:OpenBabel::OBGlobalDataBase
_filename	include/openbabel/groupcontrib.h	/^  const char* _filename;$/;"	m	class:OpenBabel::OBGroupContrib
_filename	include/openbabel/optransform.h	/^  const char* _filename;$/;"	m	class:OpenBabel::OpTransform
_filename	src/ops/loader.cpp	/^  const char* _filename;$/;"	m	class:OpenBabel::OBDefine	file:
_filterStreamBuf	include/openbabel/oberror.h	/^      std::streambuf        *_filterStreamBuf;$/;"	m	class:OpenBabel::OBMessageHandler
_fixAtom	include/openbabel/forcefield.h	/^    static unsigned int _fixAtom; \/\/!< SetFixAtom()\/UnsetFixAtom()$/;"	m	class:OpenBabel::OBForceField
_fixAtom	src/forcefield.cpp	/^  unsigned int OBForceField::_fixAtom = 0; \/\/ define static data variable$/;"	m	class:OpenBabel::OBForceField	file:
_fixed	include/openbabel/forcefield.h	/^    OBBitVec	_fixed;$/;"	m	class:OpenBabel::OBFFConstraints
_fixedatoms	include/openbabel/rotor.h	/^    OBBitVec _fixedatoms, _fixedbonds; \/\/!< Bit vector of fixed (i.e., invariant) atoms$/;"	m	class:OpenBabel::OBRotorList
_fixedatoms	include/openbabel/rotor.h	/^    OBBitVec _fixedatoms,_fixedbonds, _evalatoms; \/\/!< fixed atoms\/bonds$/;"	m	class:OpenBabel::OBRotor
_fixedbonds	include/openbabel/rotor.h	/^    OBBitVec _fixedatoms, _fixedbonds; \/\/!< Bit vector of fixed (i.e., invariant) atoms$/;"	m	class:OpenBabel::OBRotorList
_fixedbonds	include/openbabel/rotor.h	/^    OBBitVec _fixedatoms,_fixedbonds, _evalatoms; \/\/!< fixed atoms\/bonds$/;"	m	class:OpenBabel::OBRotor
_flags	include/openbabel/atom.h	/^      unsigned short                _flags;     \/\/!< bitwise flags (e.g. aromaticity)$/;"	m	class:OpenBabel::OBAtom
_flags	include/openbabel/bond.h	/^      unsigned short int          _flags; \/\/!< Any flags for this bond$/;"	m	class:OpenBabel::OBBond
_flags	include/openbabel/mol.h	/^    int                           _flags;	\/\/!< bitfield of flags$/;"	m	class:OpenBabel::OBMol
_flags	src/fingerprints/finger2.cpp	/^  unsigned int _flags;$/;"	m	class:OpenBabel::fingerprint2	file:
_flags	src/fingerprints/fingerecfp.cpp	/^  unsigned int _flags;$/;"	m	class:OpenBabel::fingerprintECFP	file:
_frag_atoms	include/openbabel/math/align.h	/^    OBBitVec _frag_atoms;$/;"	m	class:OpenBabel::OBAlign
_frag_atoms	src/graphsym.cpp	/^      OBBitVec _frag_atoms;$/;"	m	class:OpenBabel::OBGraphSymPrivate	file:
_fragments	include/openbabel/builder.h	/^      static std::vector<std::pair<OBSmartsPattern*, std::vector<vector3> > > _fragments;$/;"	m	class:OpenBabel::OBBuilder
_fragments	src/builder.cpp	/^  std::vector<std::pair<OBSmartsPattern*, std::vector<vector3> > > OBBuilder::_fragments;$/;"	m	class:OpenBabel::OBBuilder	file:
_from	include/openbabel/data.h	/^      int             _from,_to;$/;"	m	class:OpenBabel::OBTypeTable
_gconv	include/openbabel/forcefield.h	/^    double 	_econv, _gconv, _e_n1; \/\/!< Used for conjugate gradients and steepest descent(Initialize and TakeNSteps)$/;"	m	class:OpenBabel::OBForceField
_getBox	src/spectrophore.cpp	/^OBSpectrophore::_getBox(double** c)$/;"	f	class:OpenBabel::OBSpectrophore
_getEnergies	src/spectrophore.cpp	/^OBSpectrophore::_getEnergies(double** c, double* e)$/;"	f	class:OpenBabel::OBSpectrophore
_getMoleculeData	src/spectrophore.cpp	/^OBSpectrophore::_getMoleculeData(OpenBabel::OBMol* mol)$/;"	f	class:OpenBabel::OBSpectrophore
_grad1	include/openbabel/forcefield.h	/^    double 	*_grad1; \/\/!< Used for conjugate gradients and steepest descent(Initialize and TakeNSteps)$/;"	m	class:OpenBabel::OBForceField
_gradientPtr	include/openbabel/forcefield.h	/^    double	*_gradientPtr; \/\/!< pointer to the gradients (used by AddGradient(), minimization functions, ...)$/;"	m	class:OpenBabel::OBForceField
_graphicmap	src/formats/chemdrawcdx.cpp	/^  std::map<CDXObjectID, graphicType> _graphicmap;$/;"	m	class:OpenBabel::ChemDrawBinaryXFormat	file:
_green	include/openbabel/data.h	/^      double _red, _green, _blue;$/;"	m	class:OpenBabel::OBElement
_gridtype	include/openbabel/grid.h	/^    int _gridtype;$/;"	m	class:OpenBabel::OBProxGrid
_groupmap	src/formats/chemdrawcdx.cpp	/^  std::map<CDXObjectID, std::vector<CDXObjectID> > _groupmap;$/;"	m	class:OpenBabel::ChemDrawBinaryXFormat	file:
_growbond	include/openbabel/parsmart.h	/^    std::vector<bool>          		  _growbond; \/\/!< \\deprecated (Not used)$/;"	m	class:OpenBabel::OBSmartsPattern
_gsv	include/openbabel/molchrg.h	/^  std::vector <GasteigerState*> _gsv; \/\/!< vector of internal GasteigerState (for each atom)$/;"	m	class:OpenBabel::OBGastChrg
_gzip_crc	src/zipstream.h	/^    long _gzip_crc;$/;"	m	class:zlib_stream::basic_zip_istream
_gzip_data_size	src/zipstream.h	/^    long _gzip_data_size;$/;"	m	class:zlib_stream::basic_zip_istream
_halfSpace	include/openbabel/grid.h	/^    double _halfSpace;        \/\/!< half of the grid spacing$/;"	m	class:OpenBabel::OBFloatGrid
_hasInputPngFile	src/formats/pngformat.cpp	/^  bool _hasInputPngFile;$/;"	m	class:OpenBabel::PNGFormat	file:
_hetatm	include/openbabel/residue.h	/^    std::vector<bool>         _hetatm;\/\/!< Is a given atom a HETAM$/;"	m	class:OpenBabel::OBResidue
_htmlElemDesc	include/libxml/HTMLparser.h	/^struct _htmlElemDesc {$/;"	s
_htmlEntityDesc	include/libxml/HTMLparser.h	/^struct _htmlEntityDesc {$/;"	s
_hyb	include/openbabel/atom.h	/^      unsigned short                _hyb;       \/\/!< hybridization$/;"	m	class:OpenBabel::OBAtom
_i	include/openbabel/obiter.h	/^    std::vector<OBAtom*>::iterator _i;$/;"	m	class:OpenBabel::OBMolAtomIter
_i	include/openbabel/obiter.h	/^    std::vector<OBAtom*>::iterator _i;$/;"	m	class:OpenBabel::OBMolPairIter
_i	include/openbabel/obiter.h	/^    std::vector<OBAtom*>::iterator _i;$/;"	m	class:OpenBabel::OBResidueAtomIter
_i	include/openbabel/obiter.h	/^    std::vector<OBBond*>::iterator _i;$/;"	m	class:OpenBabel::OBAtomAtomIter
_i	include/openbabel/obiter.h	/^    std::vector<OBBond*>::iterator _i;$/;"	m	class:OpenBabel::OBAtomBondIter
_i	include/openbabel/obiter.h	/^    std::vector<OBBond*>::iterator _i;$/;"	m	class:OpenBabel::OBMolBondIter
_i	include/openbabel/obiter.h	/^    std::vector<OBResidue*>::iterator _i;$/;"	m	class:OpenBabel::OBResidueIter
_i	include/openbabel/obiter.h	/^    std::vector<OBRing*>::iterator _i;$/;"	m	class:OpenBabel::OBMolRingIter
_i	include/openbabel/obiter.h	/^    std::vector<std::vector<unsigned int> >::iterator _i;$/;"	m	class:OpenBabel::OBMolAngleIter
_i	include/openbabel/obiter.h	/^    std::vector<std::vector<unsigned int> >::iterator _i;$/;"	m	class:OpenBabel::OBMolTorsionIter
_id	include/openbabel/atom.h	/^      unsigned long                 _id;        \/\/!< unique id$/;"	m	class:OpenBabel::OBAtom
_id	include/openbabel/bond.h	/^      unsigned long                 _id;        \/\/!< unique id$/;"	m	class:OpenBabel::OBBond
_id	include/openbabel/plugin.h	/^  const char* _id;$/;"	m	class:OpenBabel::OBPlugin
_idx	include/openbabel/atom.h	/^      unsigned int                  _idx;       \/\/!< unique node index (GetIdx(), SetIdx())$/;"	m	class:OpenBabel::OBAtom
_idx	include/openbabel/bond.h	/^      unsigned int                _idx;   \/\/!< Unique edge index used by GetIdx() and SetIdx()$/;"	m	class:OpenBabel::OBBond
_idx	include/openbabel/generic.h	/^    int     _idx;$/;"	m	class:OpenBabel::OBExternalBond
_idx	include/openbabel/residue.h	/^    unsigned int              _idx;   \/\/!< Residue index (i.e., internal index in an OBMol)$/;"	m	class:OpenBabel::OBResidue
_idx	include/openbabel/rotor.h	/^    int _idx; \/\/!< the index in an OBRotorList$/;"	m	class:OpenBabel::OBRotor
_ignoreAtom	include/openbabel/forcefield.h	/^    static unsigned int _ignoreAtom; \/\/!< SetIgnoreAtom()\/UnsetIgnoreAtom()$/;"	m	class:OpenBabel::OBForceField
_ignoreAtom	src/forcefield.cpp	/^  unsigned int OBForceField::_ignoreAtom = 0; \/\/ define static data variable$/;"	m	class:OpenBabel::OBForceField	file:
_ignored	include/openbabel/forcefield.h	/^    OBBitVec	_ignored;$/;"	m	class:OpenBabel::OBFFConstraints
_imag	include/openbabel/rotor.h	/^    double _imag, _refang; \/\/!< inverse magnitude and reference angle (see Precompute())$/;"	m	class:OpenBabel::OBRotor
_impval	include/openbabel/atom.h	/^      char                          _impval;    \/\/!< implicit valence$/;"	m	class:OpenBabel::OBAtom
_inWrapStreamBuf	include/openbabel/oberror.h	/^      std::streambuf        *_inWrapStreamBuf;$/;"	m	class:OpenBabel::OBMessageHandler
_inc	include/openbabel/grid.h	/^    double _inc;$/;"	m	class:OpenBabel::OBProxGrid
_inchimap	src/ops/unique.cpp	/^  UMap _inchimap;$/;"	m	class:OpenBabel::OpUnique	file:
_includeH	include/openbabel/math/align.h	/^    bool _includeH;$/;"	m	class:OpenBabel::OBAlign
_incr	include/openbabel/obutil.h	/^    double _max,_incr,*_tbl;$/;"	m	class:OpenBabel::OBSqrtTbl
_index	include/openbabel/fingerprint.h	/^  FptIndex   _index;$/;"	m	class:OpenBabel::FastSearch
_indexstream	include/openbabel/fingerprint.h	/^  std::ostream* _indexstream;$/;"	m	class:OpenBabel::FastSearchIndexer
_init	include/openbabel/data.h	/^      bool         _init;		\/\/!< Whether the data been read already$/;"	m	class:OpenBabel::OBGlobalDataBase
_init	include/openbabel/forcefield.h	/^    bool 	_init; \/\/!< Used to make sure we only parse the parameter file once, when needed$/;"	m	class:OpenBabel::OBForceField
_init	src/forcefields/forcefieldmm2.h	/^      bool _init; \/\/!< Used to only initialize and read parameters once$/;"	m	class:OpenBabel::OBForceFieldMM2
_initiateSpectrophore	src/spectrophore.cpp	/^OBSpectrophore::_initiateSpectrophore(double* e, double* s)$/;"	f	class:OpenBabel::OBSpectrophore
_inputCount	src/ops/opsplit.cpp	/^  int _inputCount;$/;"	m	class:OpenBabel::OpSplit	file:
_input_buffer	src/zipstream.h	/^    byte_vector_type    _input_buffer;$/;"	m	class:zlib_stream::basic_unzip_streambuf
_insertioncode	include/openbabel/residue.h	/^    char                _insertioncode;\/\/!<PBB insertion code$/;"	m	class:OpenBabel::OBResidue
_instances	src/ops/loader.cpp	/^  std::vector<OBPlugin*> _instances;$/;"	m	class:OpenBabel::OBDefine	file:
_interGroup	include/openbabel/forcefield.h	/^    std::vector<OBBitVec> _interGroup; \/\/!< groups for which intra-molecular interactions should be calculated$/;"	m	class:OpenBabel::OBForceField
_interGroups	include/openbabel/forcefield.h	/^    std::vector<std::pair<OBBitVec, OBBitVec> > _interGroups; \/\/!< groups for which intra-molecular$/;"	m	class:OpenBabel::OBForceField
_internals	include/openbabel/mol.h	/^    std::vector<OBInternalCoord*> _internals;   \/\/!< Internal Coordinates (if applicable)$/;"	m	class:OpenBabel::OBMol
_intraGroup	include/openbabel/forcefield.h	/^    std::vector<OBBitVec> _intraGroup; \/\/!< groups for which intra-molecular interactions should be calculated$/;"	m	class:OpenBabel::OBForceField
_inv	src/ops/unique.cpp	/^  bool _inv;$/;"	m	class:OpenBabel::OpUnique	file:
_inv_spa	include/openbabel/grid.h	/^    double _spacing,_inv_spa; \/\/!< spacing between grid points and its inverse$/;"	m	class:OpenBabel::OBFloatGrid
_invmag	include/openbabel/rotor.h	/^    std::vector<double> _invmag; \/\/!< the inverse magnitudes (see Precalc)$/;"	m	class:OpenBabel::OBRotor
_ionizations	src/charges/eqeq.h	/^  double _ionizations[TABLE_OF_ELEMENTS_SIZE + 1][9]; \/\/ Electron affinity + 8x ionizations of elements$/;"	m	class:OpenBabel::EQEqCharges
_ionize	include/openbabel/data.h	/^      double _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;$/;"	m	class:OpenBabel::OBElement
_ipar	include/openbabel/forcefield.h	/^    std::vector<int>    _ipar;$/;"	m	class:OpenBabel::OBFFParameter
_is_gzip	src/zipstream.h	/^    bool              _is_gzip;$/;"	m	class:zlib_stream::basic_unzip_streambuf
_is_gzip	src/zipstream.h	/^    bool _is_gzip;$/;"	m	class:zlib_stream::basic_zip_ostream
_isotope	include/openbabel/atom.h	/^      unsigned short                _isotope;   \/\/!< isotope (0 = most abundant)$/;"	m	class:OpenBabel::OBAtom
_isotopes	include/openbabel/data.h	/^      std::vector<std::vector<std::pair <unsigned int, double> > > _isotopes;$/;"	m	class:OpenBabel::OBIsotopeTable
_istream	src/zipstream.h	/^    istream_reference   _istream;$/;"	m	class:zlib_stream::basic_unzip_streambuf
_isup	src/formats/smilesformat.cpp	/^    std::map<OBBond *, bool> _isup;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_ival	include/openbabel/grid.h	/^    int   *_ival;             \/\/!< for integer values (deprecated)$/;"	m	class:OpenBabel::OBFloatGrid
_j	include/openbabel/obiter.h	/^    std::vector<OBAtom*>::iterator _j;$/;"	m	class:OpenBabel::OBMolPairIter
_jmol	include/openbabel/obmolecformat.h	/^  static OBMol* _jmol; \/\/!< Accumulates molecules with the -j option$/;"	m	class:OpenBabel::OBMoleculeFormat
_jmol	src/obmolecformat.cpp	/^  OBMol* OBMoleculeFormat::_jmol;$/;"	m	class:OpenBabel::OBMoleculeFormat	file:
_kappa	src/charges/eem.cpp	/^    double _kappa;$/;"	m	class:OpenBabel::EEMCharges	file:
_keepdups	src/fingerprints/fingerecfp.cpp	/^  bool _keepdups;$/;"	m	class:OpenBabel::fingerprintECFP	file:
_keeprings	include/openbabel/builder.h	/^      bool _keeprings;$/;"	m	class:OpenBabel::OBBuilder
_lastpos	include/openbabel/xml.h	/^      std::streampos  _requestedpos, _lastpos;$/;"	m	class:OpenBabel::XMLConversion
_lattice	include/openbabel/generic.h	/^    LatticeType _lattice;$/;"	m	class:OpenBabel::OBUnitCell
_len	src/formats/chemdrawcdx.cpp	/^  UINT16 _len;$/;"	m	class:OpenBabel::CDXReader	file:
_level	include/openbabel/oberror.h	/^      obMessageLevel _level;$/;"	m	class:OpenBabel::OBError
_lfsr	src/confsearch.cpp	/^    unsigned int _range, _lfsr, _poly;$/;"	m	class:OpenBabel::LFSR	file:
_linecount	include/openbabel/data.h	/^      int             _linecount;$/;"	m	class:OpenBabel::OBTypeTable
_linesearch	include/openbabel/forcefield.h	/^    int         _linesearch; \/\/!< LineSearch type$/;"	m	class:OpenBabel::OBForceField
_loadParameters	src/charges/eem.cpp	/^  void EEMCharges::_loadParameters()$/;"	f	class:OpenBabel::EEMCharges
_logbuf	include/openbabel/forcefield.h	/^    char 	_logbuf[BUFF_SIZE+1]; \/\/!< Temporary buffer for logfile output$/;"	m	class:OpenBabel::OBForceField
_logging	include/openbabel/oberror.h	/^      bool                   _logging;$/;"	m	class:OpenBabel::OBMessageHandler
_loglvl	include/openbabel/forcefield.h	/^    int 	_loglvl; \/\/!< Log level for output$/;"	m	class:OpenBabel::OBForceField
_logos	include/openbabel/forcefield.h	/^    std::ostream* _logos; \/\/!< Output for logfile$/;"	m	class:OpenBabel::OBForceField
_luDecompose	src/charges/eem.cpp	/^  EEMCharges::_luDecompose(double** A, std::vector<int>& I, unsigned int dim)$/;"	f	class:OpenBabel::EEMCharges
_luDecompose	src/spectrophore.cpp	/^OBSpectrophore::_luDecompose(double** A, std::vector<int>& I, unsigned int dim)$/;"	f	class:OpenBabel::OBSpectrophore
_luSolve	src/charges/eem.cpp	/^  EEMCharges::_luSolve(double** A, std::vector<int>& I, double* B, unsigned int dim)$/;"	f	class:OpenBabel::EEMCharges
_luSolve	src/spectrophore.cpp	/^OBSpectrophore::_luSolve(double** A, std::vector<int>& I, double* B, unsigned int dim)$/;"	f	class:OpenBabel::OBSpectrophore
_mOrient	include/openbabel/generic.h	/^    matrix3x3 _mOrient;\/\/ Orientation matrix$/;"	m	class:OpenBabel::OBUnitCell
_mOrtho	include/openbabel/generic.h	/^    matrix3x3 _mOrtho;\/\/ Orthogonal matrix of column vectors$/;"	m	class:OpenBabel::OBUnitCell
_macroText	src/descriptors/cmpdfilter.cpp	/^  const string _macroText;$/;"	m	class:OpenBabel::CompoundFilter	file:
_map	include/openbabel/atomclass.h	/^  std::map<int,int> _map; \/\/index is atom index; value is class$/;"	m	class:OpenBabel::OBAtomClassData
_map	include/openbabel/parsmart.h	/^    std::vector<int>  _map;$/;"	m	class:OpenBabel::OBSSMatch
_mass	include/openbabel/data.h	/^      double _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;$/;"	m	class:OpenBabel::OBElement
_matrix	include/openbabel/generic.h	/^    matrix3x3            _matrix; \/\/!< 3x3 matrix to be stored$/;"	m	class:OpenBabel::OBMatrixData
_max	include/openbabel/obutil.h	/^    double _max,_incr,*_tbl;$/;"	m	class:OpenBabel::OBSqrtTbl
_max	src/griddata.cpp	/^    double           _max;$/;"	m	class:OpenBabel::GridDataPrivate	file:
_maxEntries	include/openbabel/oberror.h	/^      unsigned int           _maxEntries;$/;"	m	class:OpenBabel::OBMessageHandler
_maxbonds	include/openbabel/data.h	/^      int _maxbonds;$/;"	m	class:OpenBabel::OBElement
_maxinc	include/openbabel/grid.h	/^    int _nxinc,_nyinc,_nzinc,_maxinc;$/;"	m	class:OpenBabel::OBProxGrid
_messageCount	include/openbabel/oberror.h	/^      unsigned int           _messageCount[5];$/;"	m	class:OpenBabel::OBMessageHandler
_messageList	include/openbabel/oberror.h	/^      std::deque<OBError>    _messageList;$/;"	m	class:OpenBabel::OBMessageHandler
_method	include/openbabel/data.h	/^      std::string _element,_method,_desc,_unit;$/;"	m	class:OpenBabel::OBAtomHOF
_method	include/openbabel/math/align.h	/^    enum AlignMethod _method;$/;"	m	class:OpenBabel::OBAlign	typeref:enum:OpenBabel::OBAlign::AlignMethod
_method	include/openbabel/oberror.h	/^      std::string _method;$/;"	m	class:OpenBabel::OBError
_midx	include/openbabel/grid.h	/^    double _midz,_midx,_midy; \/\/!< center of grid in world coordinates$/;"	m	class:OpenBabel::OBFloatGrid
_midy	include/openbabel/grid.h	/^    double _midz,_midx,_midy; \/\/!< center of grid in world coordinates$/;"	m	class:OpenBabel::OBFloatGrid
_midz	include/openbabel/grid.h	/^    double _midz,_midx,_midy; \/\/!< center of grid in world coordinates$/;"	m	class:OpenBabel::OBFloatGrid
_min	src/griddata.cpp	/^    double           _min;$/;"	m	class:OpenBabel::GridDataPrivate	file:
_mlist	include/openbabel/parsmart.h	/^    std::vector<std::vector<int> >	_mlist;    \/\/!< The list of matches$/;"	m	class:OpenBabel::OBSmartsPattern
_mlist	include/openbabel/phmodel.h	/^    std::vector<std::vector<int> >                      _mlist;$/;"	m	class:OpenBabel::OBPhModel
_mlist	include/openbabel/typer.h	/^    std::vector<std::vector<int> >     _mlist;$/;"	m	class:OpenBabel::OBAromaticTyper
_mlist	include/openbabel/typer.h	/^  std::vector<std::vector<int> >                           _mlist; \/\/!< match list for atom typing$/;"	m	class:OpenBabel::OBAtomTyper
_mlist	include/openbabel/typer.h	/^  std::vector<std::vector<int> >                           _mlist; \/\/!< match list for atom typing$/;"	m	class:OpenBabel::OBRingTyper
_mod	include/openbabel/mol.h	/^    unsigned short int            _mod;	        \/\/!< Number of nested calls to BeginModify()$/;"	m	class:OpenBabel::OBMol
_mol	include/openbabel/distgeom.h	/^    OBMol                     _mol;$/;"	m	class:OpenBabel::OBDistanceGeometry
_mol	include/openbabel/forcefield.h	/^    OBMol 	_mol; \/\/!< Molecule to be evaluated or minimized$/;"	m	class:OpenBabel::OBForceField
_mol	include/openbabel/parsmart.h	/^    OBMol       *_mol;$/;"	m	class:OpenBabel::OBSSMatch
_mol	src/pointgroup.cpp	/^    OBMol  *               _mol;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
_molmap	src/formats/chemdrawcdx.cpp	/^  std::map<CDXObjectID, OBMol*> _molmap;$/;"	m	class:OpenBabel::ChemDrawBinaryXFormat	file:
_mref	include/openbabel/math/align.h	/^    Eigen::MatrixXd _mref, _mtarget;$/;"	m	class:OpenBabel::OBAlign
_mtarget	include/openbabel/math/align.h	/^    Eigen::MatrixXd _mref, _mtarget;$/;"	m	class:OpenBabel::OBAlign
_mullikenSymbol	include/openbabel/generic.h	/^    std::string  _mullikenSymbol; \/\/!< symmetry designation$/;"	m	class:OpenBabel::OBOrbital
_multiplicity	include/openbabel/data.h	/^    int _multiplicity;$/;"	m	class:OpenBabel::OBAtomHOF
_nAtoms	include/openbabel/spectrophore.h	/^         unsigned int         _nAtoms;$/;"	m	class:OpenBabel::OBSpectrophore
_name	include/openbabel/data.h	/^      std::string _name;$/;"	m	class:OpenBabel::OBElement
_natoms	include/openbabel/mol.h	/^    unsigned int                  _natoms;      \/\/!< Number of atoms$/;"	m	class:OpenBabel::OBMol
_nbits	include/openbabel/fingerprint.h	/^  int _nbits;$/;"	m	class:OpenBabel::FastSearchIndexer
_nbits	src/formats/fpsformat.cpp	/^    int _nbits;$/;"	m	class:OpenBabel::FPSFormat	file:
_nbonds	include/openbabel/mol.h	/^    unsigned int                  _nbonds;      \/\/!< Number of bonds$/;"	m	class:OpenBabel::OBMol
_ncols	include/openbabel/data.h	/^      unsigned int    _ncols,_nrows;$/;"	m	class:OpenBabel::OBTypeTable
_ncols	src/formats/png2format.cpp	/^    int _ncols, _nrows, _nmax;$/;"	m	class:OpenBabel::PNG2Format	file:
_ncols	src/formats/svgformat.cpp	/^  int _ncols, _nrows, _nmax;$/;"	m	class:OpenBabel::SVGFormat	file:
_ncoords	include/openbabel/forcefield.h	/^    unsigned int _ncoords; \/\/!< Number of coordinates for conjugate gradients$/;"	m	class:OpenBabel::OBForceField
_ndups	src/ops/unique.cpp	/^  unsigned _ndups;$/;"	m	class:OpenBabel::OpUnique	file:
_newidx	include/openbabel/math/align.h	/^    vector<unsigned int> _newidx;$/;"	m	class:OpenBabel::OBAlign
_nmax	src/formats/png2format.cpp	/^    int _ncols, _nrows, _nmax;$/;"	m	class:OpenBabel::PNG2Format	file:
_nmax	src/formats/svgformat.cpp	/^  int _ncols, _nrows, _nmax;$/;"	m	class:OpenBabel::SVGFormat	file:
_nmols	src/ops/largest.cpp	/^  unsigned _nmols;$/;"	m	class:OpenBabel::OpLargest	file:
_noStereo	src/descriptors/cansmidescriptor.cpp	/^  bool _noStereo;$/;"	m	class:OpenBabel::CanSmiles	file:
_normalization	include/openbabel/spectrophore.h	/^         NormalizationOption  _normalization;$/;"	m	class:OpenBabel::OBSpectrophore
_notVisited	include/openbabel/obiter.h	/^    OBBitVec             _notVisited;$/;"	m	class:OpenBabel::OBMolAtomBFSIter
_notVisited	include/openbabel/obiter.h	/^    OBBitVec             _notVisited;$/;"	m	class:OpenBabel::OBMolAtomDFSIter
_notVisited	include/openbabel/obiter.h	/^    OBBitVec             _notVisited;$/;"	m	class:OpenBabel::OBMolBondBFSIter
_nrows	include/openbabel/data.h	/^      unsigned int    _ncols,_nrows;$/;"	m	class:OpenBabel::OBTypeTable
_nrows	src/formats/png2format.cpp	/^    int _ncols, _nrows, _nmax;$/;"	m	class:OpenBabel::PNG2Format	file:
_nrows	src/formats/svgformat.cpp	/^  int _ncols, _nrows, _nmax;$/;"	m	class:OpenBabel::SVGFormat	file:
_nsteps	include/openbabel/forcefield.h	/^    int 	_cstep, _nsteps; \/\/!< Used for conjugate gradients and steepest descent(Initialize and TakeNSteps)$/;"	m	class:OpenBabel::OBForceField
_num	include/openbabel/data.h	/^      int _num;$/;"	m	class:OpenBabel::OBElement
_numberOfProbes	include/openbabel/spectrophore.h	/^         unsigned int         _numberOfProbes;$/;"	m	class:OpenBabel::OBSpectrophore
_nxinc	include/openbabel/grid.h	/^    int _nxinc,_nyinc,_nzinc,_maxinc;$/;"	m	class:OpenBabel::OBProxGrid
_nyinc	include/openbabel/grid.h	/^    int _nxinc,_nyinc,_nzinc,_maxinc;$/;"	m	class:OpenBabel::OBProxGrid
_nzinc	include/openbabel/grid.h	/^    int _nxinc,_nyinc,_nzinc,_maxinc;$/;"	m	class:OpenBabel::OBProxGrid
_objects	src/formats/png2format.cpp	/^    vector<OBBase*> _objects;$/;"	m	class:OpenBabel::PNG2Format	file:
_objects	src/formats/svgformat.cpp	/^  vector<OBBase*> _objects;$/;"	m	class:OpenBabel::SVGFormat	file:
_obvec	src/ops/deferred.h	/^  std::vector<OBBase*> _obvec;$/;"	m	class:OpenBabel::DeferredFormat
_occupation	include/openbabel/generic.h	/^    double       _occupation;     \/\/!< usually 0, 1, or 2, but can be fractional (e.g., solid-state calcs)$/;"	m	class:OpenBabel::OBOrbital
_offset	include/openbabel/generic.h	/^    vector3 _offset;$/;"	m	class:OpenBabel::OBUnitCell
_offset	src/formats/xml/cdxmlformat.cpp	/^  int _offset; \/\/ used to ensure that atoms have different ids.$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
_oopcalculations	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFOOPCalculationGaff>      _oopcalculations;$/;"	m	class:OpenBabel::OBForceFieldGaff
_oopcalculations	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFOOPCalculationMMFF94>           _oopcalculations;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_oopcalculations	src/forcefields/forcefielduff.h	/^    std::vector<OBFFOOPCalculationUFF>           _oopcalculations;$/;"	m	class:OpenBabel::OBForceFieldUFF
_openShell	include/openbabel/generic.h	/^    bool _openShell;                       \/\/!< Whether we store both alpha and beta spin-orbitals (i.e., a restricted open-shell or unrestricted calc.)$/;"	m	class:OpenBabel::OBOrbitalData
_optionText	src/ops/opsplit.cpp	/^  std::string _optionText, _outExt, _outPath;$/;"	m	class:OpenBabel::OpSplit	file:
_ord	include/openbabel/generic.h	/^    int _ord;$/;"	m	class:OpenBabel::OBVirtualBond
_order	include/openbabel/bond.h	/^      char                        _order; \/\/!< Bond order (1, 2, 3, 5=aromatic)$/;"	m	class:OpenBabel::OBBond
_order	src/formats/smilesformat.cpp	/^    int _order;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_oricoor	include/openbabel/spectrophore.h	/^         double**             _oricoor;$/;"	m	class:OpenBabel::OBSpectrophore
_orient	src/spectrophore.cpp	/^OBSpectrophore::_orient(void)$/;"	f	class:OpenBabel::OBSpectrophore
_origLogLevel	include/openbabel/forcefield.h	/^    int 	_origLogLevel;$/;"	m	class:OpenBabel::OBForceField
_ostream	src/zipstream.h	/^    ostream_reference   _ostream;$/;"	m	class:zlib_stream::basic_zip_streambuf
_outExt	src/ops/opsplit.cpp	/^  std::string _optionText, _outExt, _outPath;$/;"	m	class:OpenBabel::OpSplit	file:
_outPath	src/ops/opsplit.cpp	/^  std::string _optionText, _outExt, _outPath;$/;"	m	class:OpenBabel::OpSplit	file:
_outputLevel	include/openbabel/oberror.h	/^      obMessageLevel         _outputLevel;$/;"	m	class:OpenBabel::OBMessageHandler
_outputStream	include/openbabel/oberror.h	/^      std::ostream          *_outputStream;$/;"	m	class:OpenBabel::OBMessageHandler
_output_buffer	src/zipstream.h	/^    byte_vector_type    _output_buffer;$/;"	m	class:zlib_stream::basic_zip_streambuf
_pChargeModel	src/ops/partialcharges.cpp	/^  OBChargeModel *_pChargeModel;$/;"	m	class:OpenBabel::OpPartialCharge	file:
_pConv	include/openbabel/xml.h	/^      OBConversion* _pConv;$/;"	m	class:OpenBabel::XMLConversion
_pConv	src/ops/largest.cpp	/^  OBConversion* _pConv;$/;"	m	class:OpenBabel::OpLargest	file:
_pDefault	include/openbabel/xml.h	/^      static XMLBaseFormat* _pDefault;$/;"	m	class:OpenBabel::XMLConversion
_pDefault	src/formats/xml/xml.cpp	/^  XMLBaseFormat* XMLConversion::_pDefault=NULL;$/;"	m	class:OpenBabel::XMLConversion	file:
_pDesc	include/openbabel/obmolecformat.h	/^  static OBDescriptor* _pDesc;$/;"	m	class:OpenBabel::OBMoleculeFormat
_pDesc	src/ops/largest.cpp	/^  OBDescriptor* _pDesc;$/;"	m	class:OpenBabel::OpLargest	file:
_pDesc	src/ops/opsplit.cpp	/^  OBDescriptor* _pDesc;$/;"	m	class:OpenBabel::OpSplit	file:
_pDesc	src/ops/sort.cpp	/^  OBDescriptor* _pDesc;$/;"	m	class:OpenBabel::OpSort	file:
_pDesc	src/ops/sort.cpp	/^  OBDescriptor* _pDesc;$/;"	m	struct:OpenBabel::Order	file:
_pDesc	src/ops/unique.cpp	/^  OBDescriptor* _pDesc;$/;"	m	class:OpenBabel::OpUnique	file:
_pDescOption	src/ops/sort.cpp	/^  std::string _pDescOption;$/;"	m	class:OpenBabel::OpSort	file:
_pExtraConv	src/ops/xout.cpp	/^  OBConversion *_pOrigConv, *_pExtraConv;$/;"	m	class:OpenBabel::ExtraFormat	file:
_pFP	include/openbabel/fingerprint.h	/^  OBFingerprint* _pFP;$/;"	m	class:OpenBabel::FastSearch
_pFP	include/openbabel/fingerprint.h	/^  OBFingerprint* _pFP;$/;"	m	class:OpenBabel::FastSearchIndexer
_pFP	src/formats/fpsformat.cpp	/^    OBFingerprint* _pFP;$/;"	m	class:OpenBabel::FPSFormat	file:
_pOp	src/ops/deferred.h	/^  OBOp* _pOp;$/;"	m	class:OpenBabel::DeferredFormat
_pOpIsoM	src/ops/opalign.cpp	/^  OpNewS* _pOpIsoM;  \/\/the address of the -s option or NULL if it is not used$/;"	m	class:OpenBabel::OpAlign	file:
_pOrigConv	src/ops/xout.cpp	/^  OBConversion *_pOrigConv, *_pExtraConv;$/;"	m	class:OpenBabel::ExtraFormat	file:
_pOut	src/formats/xml/cmlreactformat.cpp	/^  ostream* _pOut;\/\/used on output to save the original output stream$/;"	m	class:OpenBabel::CMLReactFormat	file:
_pRD	src/formats/xml/cmlreactformat.cpp	/^  OBRateData* _pRD; \/\/used on input$/;"	m	class:OpenBabel::CMLReactFormat	file:
_pRealOutFormat	src/ops/deferred.h	/^  OBFormat* _pRealOutFormat;$/;"	m	class:OpenBabel::DeferredFormat
_pac	src/formats/smilesformat.cpp	/^    OBAtomClassData* _pac;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_pair	include/openbabel/obiter.h	/^    std::vector<unsigned int> _pair;$/;"	m	class:OpenBabel::OBMolPairIter
_pairfreq	include/openbabel/forcefield.h	/^    int 	_pairfreq; \/\/!< The frequence to update non-bonded pairs$/;"	m	class:OpenBabel::OBForceField
_parFile	include/openbabel/forcefield.h	/^    std::string	_parFile; \/\/! < parameter file name$/;"	m	class:OpenBabel::OBForceField
_param	src/ops/largest.cpp	/^  std::string _param;$/;"	m	class:OpenBabel::OpLargest	file:
_paramFileLoaded	src/charges/eqeq.h	/^static bool _paramFileLoaded = false; \/\/ Flipped after parameter file is loaded$/;"	v
_parameters	src/charges/eem.cpp	/^    std::vector<struct EEMParameter> _parameters;$/;"	m	class:OpenBabel::EEMCharges	file:
_parameters	src/charges/qeq.h	/^  std::vector< Vector3d > _parameters;$/;"	m	class:OpenBabel::QEqCharges
_parameters	src/charges/qtpie.h	/^  std::vector< Vector3d > _parameters;$/;"	m	class:OpenBabel::QTPIECharges
_parameters_file	src/charges/eem.cpp	/^    std::string _parameters_file;$/;"	m	class:OpenBabel::EEMCharges	file:
_parent	include/openbabel/atom.h	/^      OBMol                        *_parent;    \/\/!< parent molecule (if any)$/;"	m	class:OpenBabel::OBAtom
_parent	include/openbabel/bond.h	/^      OBMol                      *_parent;\/\/!< The molecule which contains me (if any)$/;"	m	class:OpenBabel::OBBond
_parent	include/openbabel/obiter.h	/^    OBAtom *_parent;$/;"	m	class:OpenBabel::OBAtomAtomIter
_parent	include/openbabel/obiter.h	/^    OBAtom *_parent;$/;"	m	class:OpenBabel::OBAtomBondIter
_parent	include/openbabel/obiter.h	/^    OBMol               *_parent;$/;"	m	class:OpenBabel::OBMolAtomBFSIter
_parent	include/openbabel/obiter.h	/^    OBMol               *_parent;$/;"	m	class:OpenBabel::OBMolAtomDFSIter
_parent	include/openbabel/obiter.h	/^    OBMol               *_parent;$/;"	m	class:OpenBabel::OBMolBondBFSIter
_parent	include/openbabel/obiter.h	/^    OBMol     *_parent;$/;"	m	class:OpenBabel::OBMolAngleIter
_parent	include/openbabel/obiter.h	/^    OBMol *_parent;$/;"	m	class:OpenBabel::OBMolAtomIter
_parent	include/openbabel/obiter.h	/^    OBMol *_parent;$/;"	m	class:OpenBabel::OBMolBondIter
_parent	include/openbabel/obiter.h	/^    OBMol *_parent;$/;"	m	class:OpenBabel::OBMolPairIter
_parent	include/openbabel/obiter.h	/^    OBMol *_parent;$/;"	m	class:OpenBabel::OBMolRingIter
_parent	include/openbabel/obiter.h	/^    OBMol *_parent;$/;"	m	class:OpenBabel::OBMolTorsionIter
_parent	include/openbabel/obiter.h	/^    OBMol *_parent;$/;"	m	class:OpenBabel::OBResidueIter
_parent	include/openbabel/obiter.h	/^    OBResidue *_parent;$/;"	m	class:OpenBabel::OBResidueAtomIter
_parent	include/openbabel/ring.h	/^    OBMol *_parent; \/\/!< parent molecule for this ring$/;"	m	class:OpenBabel::OBRing
_parent	src/formats/smilesformat.cpp	/^    OBAtom *_atom,*_parent;$/;"	m	class:OpenBabel::OBCanSmiNode	file:
_pat	include/openbabel/parsmart.h	/^    Pattern                        *_pat;      \/\/!< The parsed SMARTS pattern$/;"	m	class:OpenBabel::OBSmartsPattern
_pat	include/openbabel/parsmart.h	/^    const Pattern     *_pat;$/;"	m	class:OpenBabel::OBSSMatch
_path	include/openbabel/ring.h	/^    std::vector<int> _path; \/\/!< the path of this ring (i.e., the atom indexes)$/;"	m	class:OpenBabel::OBRing
_path	src/formats/smilesformat.cpp	/^    vector<int>             _path;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_pathset	include/openbabel/ring.h	/^    OBBitVec _pathset;      \/\/!< the path of this ring as a redundant bit vector$/;"	m	class:OpenBabel::OBRing
_pats	src/fingerprints/finger3.cpp	/^  vector<pattern> _pats;$/;"	m	class:OpenBabel::PatternFP	file:
_patternsfile	src/fingerprints/finger3.cpp	/^  string _patternsfile;$/;"	m	class:OpenBabel::PatternFP	file:
_pcharge	include/openbabel/atom.h	/^      double                        _pcharge;   \/\/!< partial charge$/;"	m	class:OpenBabel::OBAtom
_pconv	src/formats/smilesformat.cpp	/^    OBConversion* _pconv;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_percise	src/confsearch.cpp	/^      bool _percise;$/;"	m	class:OpenBabel::OBDiversePoses	file:
_pindex	include/openbabel/fingerprint.h	/^  FptIndex*		_pindex;$/;"	m	class:OpenBabel::FastSearchIndexer
_pmol	include/openbabel/xml.h	/^      OBMol* _pmol;$/;"	m	class:OpenBabel::XMLMoleculeFormat
_pmol	src/graphsym.cpp	/^      OBMol* _pmol;$/;"	m	class:OpenBabel::OBGraphSymPrivate	file:
_pointGroup	include/openbabel/generic.h	/^    std::string _pointGroup;$/;"	m	class:OpenBabel::OBSymmetryData
_points	include/openbabel/generic.h	/^    std::vector<OBFreeGridPoint*> _points;  \/\/!< coordinates with accompanying float values$/;"	m	class:OpenBabel::OBFreeGrid
_poly	src/confsearch.cpp	/^    unsigned int _range, _lfsr, _poly;$/;"	m	class:OpenBabel::LFSR	file:
_polynomials	src/confsearch.cpp	/^    static const unsigned int _polynomials[31];$/;"	m	class:OpenBabel::LFSR	file:
_polynomials	src/confsearch.cpp	/^  const unsigned int LFSR::_polynomials[31] = {0x3, 0x6, 0xc, 0x14, 0x30, 0x60, 0xb8, 0x110, 0x240, 0x500,$/;"	m	class:OpenBabel::LFSR	file:
_possibleCause	include/openbabel/oberror.h	/^      std::string _possibleCause;$/;"	m	class:OpenBabel::OBError
_preact	src/formats/xml/cmlreactformat.cpp	/^  OBReaction* _preact;$/;"	m	class:OpenBabel::CMLReactFormat	file:
_pref	include/openbabel/math/align.h	/^    const vector<vector3> *_pref;$/;"	m	class:OpenBabel::OBAlign
_prefix	include/openbabel/xml.h	/^      std::string _prefix;$/;"	m	class:OpenBabel::XMLBaseFormat
_prefmol	include/openbabel/math/align.h	/^    const OBMol* _prefmol;$/;"	m	class:OpenBabel::OBAlign
_prev	src/formats/smilesformat.cpp	/^    int _prev;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_private	include/libxml/entities.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlEntity
_private	include/libxml/parser.h	/^    void              *_private;      \/* For user data, libxml won't touch it *\/$/;"	m	struct:_xmlParserCtxt
_private	include/libxml/parser.h	/^    void *_private;$/;"	m	struct:_xmlSAXHandler
_private	include/libxml/schemasInternals.h	/^    void *_private;        \/* unused by the library for users or bindings *\/$/;"	m	struct:_xmlSchema
_private	include/libxml/tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlAttribute
_private	include/libxml/tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlElement
_private	include/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlAttr
_private	include/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDoc
_private	include/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDtd
_private	include/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlNode
_private	include/libxml/tree.h	/^    void           *_private;   \/* application data *\/$/;"	m	struct:_xmlNs
_probe	include/openbabel/spectrophore.h	/^         }                    _probe[48];$/;"	m	class:OpenBabel::OBSpectrophore	typeref:struct:OpenBabel::OBSpectrophore::__anon63
_products	include/openbabel/reaction.h	/^  std::vector<obsharedptr<OBMol> > _products;$/;"	m	class:OpenBabel::OBReaction
_prop	src/ops/largest.cpp	/^  std::string _prop;$/;"	m	class:OpenBabel::OpLargest	file:
_property	include/openbabel/spectrophore.h	/^         double**             _property;$/;"	m	class:OpenBabel::OBSpectrophore
_prv	include/openbabel/ring.h	/^    OBRTree *_prv;  \/\/!< Previous (parent) entry in an OBRing tree$/;"	m	class:OpenBabel::OBRTree
_ptarget	include/openbabel/math/align.h	/^    const vector<vector3> *_ptarget;$/;"	m	class:OpenBabel::OBAlign
_ptargetmol	include/openbabel/math/align.h	/^    const OBMol* _ptargetmol;$/;"	m	class:OpenBabel::OBAlign
_ptext	src/formats/svgformat.cpp	/^  OBText* _ptext;$/;"	m	class:OpenBabel::SVGFormat	file:
_ptr	include/openbabel/obiter.h	/^    OBAtom              *_ptr;$/;"	m	class:OpenBabel::OBMolAtomBFSIter
_ptr	include/openbabel/obiter.h	/^    OBAtom              *_ptr;$/;"	m	class:OpenBabel::OBMolAtomDFSIter
_ptr	include/openbabel/obiter.h	/^    OBAtom    *_ptr;$/;"	m	class:OpenBabel::OBResidueAtomIter
_ptr	include/openbabel/obiter.h	/^    OBAtom *_ptr;$/;"	m	class:OpenBabel::OBAtomAtomIter
_ptr	include/openbabel/obiter.h	/^    OBAtom *_ptr;$/;"	m	class:OpenBabel::OBMolAtomIter
_ptr	include/openbabel/obiter.h	/^    OBBond              *_ptr;$/;"	m	class:OpenBabel::OBMolBondBFSIter
_ptr	include/openbabel/obiter.h	/^    OBBond *_ptr;$/;"	m	class:OpenBabel::OBAtomBondIter
_ptr	include/openbabel/obiter.h	/^    OBBond *_ptr;$/;"	m	class:OpenBabel::OBMolBondIter
_ptr	include/openbabel/obiter.h	/^    OBResidue *_ptr;$/;"	m	class:OpenBabel::OBResidueIter
_ptr	include/openbabel/obiter.h	/^    OBRing *_ptr;$/;"	m	class:OpenBabel::OBMolRingIter
_ptr	src/formats/smilesformat.cpp	/^    char *_ptr;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_pxmlConv	include/openbabel/xml.h	/^      XMLConversion* _pxmlConv;$/;"	m	class:OpenBabel::XMLBaseFormat
_queue	include/openbabel/obiter.h	/^    std::queue<OBAtom *> _queue;$/;"	m	class:OpenBabel::OBMolAtomBFSIter
_queue	include/openbabel/obiter.h	/^    std::queue<OBBond *> _queue;$/;"	m	class:OpenBabel::OBMolBondBFSIter
_quiet	include/openbabel/rotor.h	/^    bool                       _quiet;  \/\/!< Control debugging output from GetRotorIncrements()$/;"	m	class:OpenBabel::OBRotorRules
_quiet	include/openbabel/rotor.h	/^    bool _quiet;                    \/\/!< Control debugging output$/;"	m	class:OpenBabel::OBRotorList
_radians	include/openbabel/generic.h	/^    double                  _radians;$/;"	m	class:OpenBabel::OBAngle
_radii	include/openbabel/spectrophore.h	/^         double*              _radii;$/;"	m	class:OpenBabel::OBSpectrophore
_radius	src/fingerprints/fingerecfp.cpp	/^  unsigned int _radius;$/;"	m	class:OpenBabel::fingerprintECFP	file:
_range	src/confsearch.cpp	/^    unsigned int _range, _lfsr, _poly;$/;"	m	class:OpenBabel::LFSR	file:
_rclose	src/formats/smilesformat.cpp	/^    vector<RingClosureBond> _rclose;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_reactants	include/openbabel/reaction.h	/^  std::vector<obsharedptr<OBMol> > _reactants;$/;"	m	class:OpenBabel::OBReaction
_reader	include/openbabel/xml.h	/^      xmlTextReaderPtr _reader;$/;"	m	class:OpenBabel::XMLConversion
_ready	include/openbabel/math/align.h	/^    bool _ready;$/;"	m	class:OpenBabel::OBAlign
_realOutFormat	src/ops/opsplit.cpp	/^  OBFormat* _realOutFormat;$/;"	m	class:OpenBabel::OpSplit	file:
_red	include/openbabel/data.h	/^      double _red, _green, _blue;$/;"	m	class:OpenBabel::OBElement
_ref	include/openbabel/rotor.h	/^    int                 _ref[4]; \/\/!< Reference atoms specifying the dihedral angle (as integers), numbered from 1 inside the SMARTS pattern$/;"	m	class:OpenBabel::OBRotorRule
_ref	include/openbabel/rotor.h	/^    std::vector<int> _ref, _torsion; \/\/!< indexes for atom coordinates (from 0, multiplied by 3)$/;"	m	class:OpenBabel::OBRotor
_refMol	src/ops/opalign.cpp	/^  OBMol _refMol;$/;"	m	class:OpenBabel::OpAlign	file:
_ref_centr	include/openbabel/math/align.h	/^    Eigen::Vector3d _ref_centr, _target_centr;$/;"	m	class:OpenBabel::OBAlign
_refang	include/openbabel/rotor.h	/^    double _imag, _refang; \/\/!< inverse magnitude and reference angle (see Precompute())$/;"	m	class:OpenBabel::OBRotor
_refmol_coords	include/openbabel/math/align.h	/^    vector<vector3> _refmol_coords;$/;"	m	class:OpenBabel::OBAlign
_refvec	src/ops/opalign.cpp	/^  std::vector<vector3> _refvec;$/;"	m	class:OpenBabel::OpAlign	file:
_rele	include/openbabel/forcefield.h	/^    double 	_rele; \/\/!< Electrostatic cut-off distance$/;"	m	class:OpenBabel::OBForceField
_removesym	include/openbabel/rotor.h	/^    bool _removesym;                \/\/!< Control removal of symmetric rotations$/;"	m	class:OpenBabel::OBRotorList
_reportDup	src/ops/unique.cpp	/^  bool _reportDup;$/;"	m	class:OpenBabel::OpUnique	file:
_requestedpos	include/openbabel/xml.h	/^      std::streampos  _requestedpos, _lastpos;$/;"	m	class:OpenBabel::XMLConversion
_resatoms	include/openbabel/data.h	/^      std::vector<std::vector<std::string> >            _resatoms;$/;"	m	class:OpenBabel::OBResidueData
_resbonds	include/openbabel/data.h	/^      std::vector<std::vector<std::pair<std::string,int> > > _resbonds;$/;"	m	class:OpenBabel::OBResidueData
_residue	include/openbabel/atom.h	/^      OBResidue                    *_residue;   \/\/!< parent residue (if applicable)$/;"	m	class:OpenBabel::OBAtom
_residue	include/openbabel/mol.h	/^    std::vector<OBResidue*>       _residue;     \/\/!< Residue information (if applicable)$/;"	m	class:OpenBabel::OBMol
_reskey	include/openbabel/residue.h	/^    unsigned int              _reskey;\/\/!< Residue key ID -- see SetResidueKeys()$/;"	m	class:OpenBabel::OBResidue
_resname	include/openbabel/data.h	/^      std::vector<std::string>                          _resname;$/;"	m	class:OpenBabel::OBResidueData
_resname	include/openbabel/residue.h	/^    std::string               _resname;\/\/!<Residue text name$/;"	m	class:OpenBabel::OBResidue
_resnum	include/openbabel/data.h	/^      int                                               _resnum;$/;"	m	class:OpenBabel::OBResidueData
_resnum	include/openbabel/residue.h	/^    std::string               _resnum;\/\/!< Residue number (i.e., in file) 23, 1B, etc.$/;"	m	class:OpenBabel::OBResidue
_resolution	include/openbabel/spectrophore.h	/^         double               _resolution;$/;"	m	class:OpenBabel::OBSpectrophore
_result	include/openbabel/math/align.h	/^    Eigen::MatrixXd _result;$/;"	m	class:OpenBabel::OBAlign
_rev	src/ops/largest.cpp	/^  bool _rev;$/;"	m	class:OpenBabel::OpLargest	file:
_rev	src/ops/sort.cpp	/^  bool _rev;$/;"	m	class:OpenBabel::OpSort	file:
_rev	src/ops/sort.cpp	/^  bool _rev;$/;"	m	struct:OpenBabel::Order	file:
_reversible	include/openbabel/reaction.h	/^  bool _reversible;$/;"	m	class:OpenBabel::OBReaction
_right_form	include/openbabel/alias.h	/^  std::string _right_form;$/;"	m	class:OpenBabel::AliasData
_ringRotors	include/openbabel/rotor.h	/^    bool _ringRotors;               \/\/!< Are there ring rotors$/;"	m	class:OpenBabel::OBRotorList
_rings	include/openbabel/obiter.h	/^    OBRingData *_rings;$/;"	m	class:OpenBabel::OBMolRingIter
_rings	include/openbabel/rotor.h	/^    std::vector<OBRing *> _rings; \/\/!< the parent ring (if this is a rotor in a ring)$/;"	m	class:OpenBabel::OBRotor
_ringtyp	include/openbabel/typer.h	/^  std::vector<std::pair<OBSmartsPattern*,std::string> >    _ringtyp; \/\/!< ring type rules$/;"	m	class:OpenBabel::OBRingTyper
_rlist	include/openbabel/ring.h	/^    std::vector<OBRing*> _rlist; \/\/!< the internal list of rings$/;"	m	class:OpenBabel::OBRingSearch
_rmsd	include/openbabel/math/align.h	/^    double _rmsd;$/;"	m	class:OpenBabel::OBAlign
_root	include/openbabel/typer.h	/^    std::vector<bool>             _root;$/;"	m	class:OpenBabel::OBAromaticTyper
_rotMatrix	include/openbabel/math/align.h	/^    Eigen::MatrixXd _rotMatrix;$/;"	m	class:OpenBabel::OBAlign
_rotateX	src/spectrophore.cpp	/^OBSpectrophore::_rotateX(double** oc, double** nc, const double c, const double s)$/;"	f	class:OpenBabel::OBSpectrophore
_rotateY	src/spectrophore.cpp	/^OBSpectrophore::_rotateY(double** oc, double** nc, const double c, const double s)$/;"	f	class:OpenBabel::OBSpectrophore
_rotateZ	src/spectrophore.cpp	/^OBSpectrophore::_rotateZ(double** oc, double** nc, const double c, const double s)$/;"	f	class:OpenBabel::OBSpectrophore
_rotationStepList	include/openbabel/spectrophore.h	/^         std::vector<int>     _rotationStepList;$/;"	m	class:OpenBabel::OBSpectrophore
_rotatoms	include/openbabel/rotor.h	/^    std::vector<int> _rotatoms; \/\/!< the atoms to rotate$/;"	m	class:OpenBabel::OBRotor
_rotor	include/openbabel/rotor.h	/^    std::vector<OBRotor*> _rotor;   \/\/!< List of individual OBRotor torsions$/;"	m	class:OpenBabel::OBRotorList
_rr	include/openbabel/rotor.h	/^    OBRotorRules _rr;               \/\/!< Database of rotatable bonds and dihedral angles to test$/;"	m	class:OpenBabel::OBRotorList
_rvdw	include/openbabel/forcefield.h	/^    double 	_rvdw; \/\/!< VDW cut-off distance$/;"	m	class:OpenBabel::OBForceField
_s	include/openbabel/rotor.h	/^    std::string         _s;      \/\/!< Text of the SMARTS pattern$/;"	m	class:OpenBabel::OBRotorRule
_scale	src/formats/xml/cdxmlformat.cpp	/^  double _scale; \/\/ current scale$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
_selmap	src/ops/largest.cpp	/^  std::multimap<double, OBBase*> _selmap;$/;"	m	class:OpenBabel::OpLargest	file:
_serialMap	include/openbabel/generic.h	/^    std::map<int, OBAtom*> _serialMap; \/\/!< map between serial num$/;"	m	class:OpenBabel::OBSerialNums
_sernum	include/openbabel/residue.h	/^    std::vector<unsigned int> _sernum;\/\/!< List of serial numbers$/;"	m	class:OpenBabel::OBResidue
_set	include/openbabel/bitvec.h	/^      word_vector	_set;$/;"	m	class:OpenBabel::OBBitVec
_setBox	src/spectrophore.cpp	/^OBSpectrophore::_setBox(void)$/;"	f	class:OpenBabel::OBSpectrophore
_size	include/openbabel/bitvec.h	/^      size_t _size; \/\/was unsigned$/;"	m	class:OpenBabel::OBBitVec
_smarts	src/descriptors/smartsdescriptors.cpp	/^    const char* _smarts;$/;"	m	class:OpenBabel::SmartsDescriptor	file:
_sn	include/openbabel/rotor.h	/^    std::vector<std::vector<double> > _sn,_cs,_t; \/\/!< the rotation matrix (see Precalc())$/;"	m	class:OpenBabel::OBRotor
_solveMatrix	src/charges/eem.cpp	/^  EEMCharges::_solveMatrix(double** A, double* B, unsigned int dim)$/;"	f	class:OpenBabel::EEMCharges
_solveMatrix	src/spectrophore.cpp	/^OBSpectrophore::_solveMatrix(double** A, double* B, unsigned int dim)$/;"	f	class:OpenBabel::OBSpectrophore
_source	include/openbabel/base.h	/^    DataOrigin   _source;\/\/!< source of data for accounting$/;"	m	class:OpenBabel::OBGenericData
_sp	include/openbabel/patty.h	/^    std::vector<OBSmartsPattern*> _sp;$/;"	m	class:OpenBabel::patty
_sp	include/openbabel/rotor.h	/^    OBSmartsPattern*    _sp;     \/\/!< The SMARTS pattern for the rotation rule$/;"	m	class:OpenBabel::OBRotorRule
_sp2sp2	include/openbabel/rotor.h	/^    std::vector<double>        _sp2sp2; \/\/!< Default dihedral angles to check for generic sp2 - sp2 hybridized rotatable bonds (in radians)$/;"	m	class:OpenBabel::OBRotorRules
_sp3sp2	include/openbabel/rotor.h	/^    std::vector<double>        _sp3sp2; \/\/!< Default dihedral angles to check for generic sp3 - sp2 hybridized rotatable bonds (in radians)$/;"	m	class:OpenBabel::OBRotorRules
_sp3sp3	include/openbabel/rotor.h	/^    std::vector<double>        _sp3sp3; \/\/!< Default dihedral angles to check for generic sp3 - sp3 hybridized rotatable bonds (in radians)$/;"	m	class:OpenBabel::OBRotorRules
_spaceGroup	include/openbabel/generic.h	/^    const SpaceGroup* _spaceGroup;$/;"	m	class:OpenBabel::OBUnitCell
_spaceGroup	include/openbabel/generic.h	/^    std::string _spaceGroup;$/;"	m	class:OpenBabel::OBSymmetryData
_spaceGroupName	include/openbabel/generic.h	/^    std::string _spaceGroupName;$/;"	m	class:OpenBabel::OBUnitCell
_space_group_IT_number	src/formats/mmcifformat.cpp	/^     _space_group_IT_number,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_space_group_name_H_M_alt	src/formats/mmcifformat.cpp	/^     _space_group_name_H_M_alt,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_space_group_name_Hall	src/formats/mmcifformat.cpp	/^     _space_group_name_Hall,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_spacing	include/openbabel/grid.h	/^    double _spacing,_inv_spa; \/\/!< spacing between grid points and its inverse$/;"	m	class:OpenBabel::OBFloatGrid
_spectro	include/openbabel/spectrophore.h	/^         std::vector<double>  _spectro;$/;"	m	class:OpenBabel::OBSpectrophore
_spinmultiplicity	include/openbabel/atom.h	/^      short                         _spinmultiplicity;\/\/!< atomic spin, e.g., 2 for radical  1 or 3 for carbene$/;"	m	class:OpenBabel::OBAtom
_spmol	src/formats/xml/cmlreactformat.cpp	/^  obsharedptr<OBMol> _spmol;$/;"	m	class:OpenBabel::CMLReactFormat	file:
_squarePlanarMap	src/formats/smilesformat.cpp	/^    map<OBAtom*, OBSquarePlanarStereo::Config*> _squarePlanarMap;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_ss	src/fingerprints/finger2.cpp	/^  stringstream _ss;$/;"	m	class:OpenBabel::fingerprint2	file:
_ss	src/fingerprints/fingerecfp.cpp	/^  stringstream _ss;$/;"	m	class:OpenBabel::fingerprintECFP	file:
_ss	src/formats/chemdrawcdx.cpp	/^  std::stringstream _ss;$/;"	m	class:OpenBabel::CDXReader	file:
_stack	include/openbabel/obiter.h	/^    std::stack<OBAtom *> _stack;$/;"	m	class:OpenBabel::OBMolAtomDFSIter
_startatom	src/formats/smilesformat.cpp	/^    OBAtom* _startatom;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_stereo	include/openbabel/generic.h	/^    int _stereo;$/;"	m	class:OpenBabel::OBVirtualBond
_stereoFlag	include/openbabel/spectrophore.h	/^         StereoOption         _stereoFlag;$/;"	m	class:OpenBabel::OBSpectrophore
_stereoUnits	src/graphsym.cpp	/^      OBStereoUnitSet _stereoUnits;$/;"	m	class:OpenBabel::OBGraphSymPrivate	file:
_stereorbond	src/formats/smilesformat.cpp	/^    map<OBBond*, StereoRingBond> _stereorbond; \/\/ Remember info on the stereo ring closure bonds$/;"	m	class:OpenBabel::OBSmilesParser	file:
_stext	src/ops/opalign.cpp	/^  std::string _stext;\/\/the -s option parameters$/;"	m	class:OpenBabel::OpAlign	file:
_str	include/openbabel/parsmart.h	/^    std::string				              _str;      \/\/!< The string of the SMARTS expression$/;"	m	class:OpenBabel::OBSmartsPattern
_strbndcalculations	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFStrBndCalculationMMFF94>        _strbndcalculations;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_strcasestr	src/formats/gausszmatformat.cpp	/^_strcasestr(const char *s, const char *pattern)$/;"	f
_strdup	src/formats/libinchi/util.c	/^char *_strdup( const char *string )$/;"	f
_strnset	src/formats/libinchi/util.c	/^char *_strnset( char *s, int val, size_t length )$/;"	f
_subdir	include/openbabel/data.h	/^      std::string  _subdir;	\/\/!< Subdirectory (if using environment variable)$/;"	m	class:OpenBabel::OBGlobalDataBase
_suggestedRemedy	include/openbabel/oberror.h	/^      std::string _suggestedRemedy;$/;"	m	class:OpenBabel::OBError
_swapRows	src/charges/eem.cpp	/^  EEMCharges::_swapRows(double* _pMatrix, unsigned int i, unsigned int j)$/;"	f	class:OpenBabel::EEMCharges
_swapRows	src/charges/eem.cpp	/^  EEMCharges::_swapRows(double** _pMatrix, unsigned int i, unsigned int j, unsigned int nCols)$/;"	f	class:OpenBabel::EEMCharges
_swapRows	src/spectrophore.cpp	/^OBSpectrophore::_swapRows(double* _pMatrix, unsigned int i, unsigned int j)$/;"	f	class:OpenBabel::OBSpectrophore
_swapRows	src/spectrophore.cpp	/^OBSpectrophore::_swapRows(double** _pMatrix, unsigned int i, unsigned int j, unsigned int nCols)$/;"	f	class:OpenBabel::OBSpectrophore
_symbol	include/openbabel/data.h	/^      char _symbol[4];$/;"	m	class:OpenBabel::OBElement
_symmetries	src/griddata.cpp	/^    int              _symmetries;$/;"	m	class:OpenBabel::GridDataPrivate	file:
_symmetry	include/openbabel/math/align.h	/^    bool _symmetry;$/;"	m	class:OpenBabel::OBAlign
_symmetry_Int_Tables_number	src/formats/mmcifformat.cpp	/^     _symmetry_Int_Tables_number,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_symmetry_equiv_pos_as_xyz	src/formats/mmcifformat.cpp	/^     _symmetry_equiv_pos_as_xyz,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_symmetry_space_group_name_H_M	src/formats/mmcifformat.cpp	/^     _symmetry_space_group_name_H_M,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_symmetry_space_group_name_Hall	src/formats/mmcifformat.cpp	/^     _symmetry_space_group_name_Hall,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
_t	include/openbabel/rotor.h	/^    std::vector<std::vector<double> > _sn,_cs,_t; \/\/!< the rotation matrix (see Precalc())$/;"	m	class:OpenBabel::OBRotor
_table	include/openbabel/data.h	/^      std::vector<std::vector<std::string> > _table;$/;"	m	class:OpenBabel::OBTypeTable
_target_centr	include/openbabel/math/align.h	/^    Eigen::Vector3d _ref_centr, _target_centr;$/;"	m	class:OpenBabel::OBAlign
_targetmol_coords	include/openbabel/math/align.h	/^    vector<vector3> _targetmol_coords;$/;"	m	class:OpenBabel::OBAlign
_tbl	include/openbabel/obutil.h	/^    double _max,_incr,*_tbl;$/;"	m	class:OpenBabel::OBSqrtTbl
_temp	include/openbabel/forcefield.h	/^    double 	_temp; \/\/!< Molecular dynamics temperature in Kelvin$/;"	m	class:OpenBabel::OBForceField
_tempAtom	src/formats/xml/cdxmlformat.cpp	/^  OBAtom _tempAtom; \/\/!< A temporary atom as the atom tag is read$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
_tempback	src/formats/chemdrawcdx.cpp	/^  CDXObjectID _tempback;$/;"	m	class:OpenBabel::CDXReader	file:
_termini	include/openbabel/generic.h	/^    std::pair<OBAtom*,OBAtom*>  _termini;$/;"	m	class:OpenBabel::OBAngle
_tetrahedralMap	src/formats/smilesformat.cpp	/^    map<OBAtom*, OBTetrahedralStereo::Config*> _tetrahedralMap; \/\/ map of tetrahedral atoms and their data$/;"	m	class:OpenBabel::OBSmilesParser	file:
_text	src/formats/xml/cmlreactformat.cpp	/^  string _text; \/\/used on output to delay text so it can be after reactions$/;"	m	class:OpenBabel::CMLReactFormat	file:
_text	src/ops/loader.cpp	/^  std::vector<std::vector<std::string> > _text;$/;"	m	class:OpenBabel::OBDefine	file:
_textlines	include/openbabel/optransform.h	/^  std::vector<std::string> _textlines;$/;"	m	class:OpenBabel::OpTransform
_textpos	src/formats/svgformat.cpp	/^  string::size_type _textpos;$/;"	m	class:OpenBabel::SVGFormat	file:
_timestep	include/openbabel/forcefield.h	/^    double 	_timestep; \/\/!< Molecular dynamics time step in picoseconds$/;"	m	class:OpenBabel::OBForceField
_title	include/openbabel/mol.h	/^    std::string                   _title;     	\/\/!< Molecule title$/;"	m	class:OpenBabel::OBMol
_title	include/openbabel/reaction.h	/^  std::string _title;$/;"	m	class:OpenBabel::OBReaction
_to	include/openbabel/data.h	/^      int             _from,_to;$/;"	m	class:OpenBabel::OBTypeTable
_tor	include/openbabel/internalcoord.h	/^    double  _tor; \/\/!< Torsional\/dihedral angle between this, _a, _b, and _c$/;"	m	class:OpenBabel::OBInternalCoord
_torsion	include/openbabel/obiter.h	/^    std::vector<unsigned int> _torsion;$/;"	m	class:OpenBabel::OBMolTorsionIter
_torsion	include/openbabel/rotor.h	/^    std::vector<int> _ref, _torsion; \/\/!< indexes for atom coordinates (from 0, multiplied by 3)$/;"	m	class:OpenBabel::OBRotor
_torsionAngles	include/openbabel/rotor.h	/^    std::vector<double> _torsionAngles;  \/\/!< torsion resolution$/;"	m	class:OpenBabel::OBRotor
_torsioncalculations	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFTorsionCalculationGaff>       _torsioncalculations;$/;"	m	class:OpenBabel::OBForceFieldGaff
_torsioncalculations	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFTorsionCalculationGhemical>       _torsioncalculations;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_torsioncalculations	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFTorsionCalculationMMFF94>       _torsioncalculations;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_torsioncalculations	src/forcefields/forcefielduff.h	/^    std::vector<OBFFTorsionCalculationUFF>       _torsioncalculations;$/;"	m	class:OpenBabel::OBForceFieldUFF
_torsions	include/openbabel/generic.h	/^    std::vector<OBTorsion> _torsions;$/;"	m	class:OpenBabel::OBTorsionData
_totalCharge	include/openbabel/mol.h	/^    int				  _totalCharge; \/\/!< Total charge on the molecule$/;"	m	class:OpenBabel::OBMol
_totalSpin	include/openbabel/mol.h	/^    unsigned int                  _totalSpin;   \/\/!< Total spin on the molecule (if not specified, assumes lowest possible spin)$/;"	m	class:OpenBabel::OBMol
_transforms	include/openbabel/optransform.h	/^  std::vector<OBChemTsfm> _transforms;$/;"	m	class:OpenBabel::OpTransform
_trunc	src/ops/unique.cpp	/^  std::string _trunc;$/;"	m	class:OpenBabel::OpUnique	file:
_ts	include/openbabel/reaction.h	/^  obsharedptr<OBMol> _ts;$/;"	m	class:OpenBabel::OBReaction
_type	include/openbabel/atom.h	/^      char                          _type[OBATOM_TYPE_LEN];   \/\/!< atomic type$/;"	m	class:OpenBabel::OBAtom
_type	include/openbabel/base.h	/^    unsigned int _type;  \/\/!< attribute type -- declared for each subclass$/;"	m	class:OpenBabel::OBGenericData
_type	include/openbabel/ring.h	/^    char _type[30];   \/\/!< ring type$/;"	m	class:OpenBabel::OBRing
_type	src/charges/eem.cpp	/^    std::string _type;$/;"	m	class:OpenBabel::EEMCharges	file:
_uatoms	include/openbabel/parsmart.h	/^    bool        *_uatoms;$/;"	m	class:OpenBabel::OBSSMatch
_uatoms	src/formats/smilesformat.cpp	/^    OBBitVec _uatoms,_ubonds;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_ubonds	src/formats/smilesformat.cpp	/^    OBBitVec _uatoms,_ubonds;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_unit	include/openbabel/data.h	/^      std::string _element,_method,_desc,_unit;$/;"	m	class:OpenBabel::OBAtomHOF
_unit	src/griddata.cpp	/^    OBGridData::Unit _unit;$/;"	m	class:OpenBabel::GridDataPrivate	file:
_unrestricted	src/griddata.cpp	/^    bool             _unrestricted;$/;"	m	class:OpenBabel::GridDataPrivate	file:
_unvisited_cistrans	src/formats/smilesformat.cpp	/^    std::vector<OBCisTransStereo> _cistrans, _unvisited_cistrans;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_unzipped_component_bytes	src/zipstream.h	/^    unsigned long       _unzipped_component_bytes; \/\/keep track of bytes that were in separately zipped sections for seeking purposes$/;"	m	class:zlib_stream::basic_unzip_streambuf
_upDownMap	src/formats/smilesformat.cpp	/^    map<OBBond*, char> _upDownMap; \/\/ store the '\/' & '\\' as they occured in smiles$/;"	m	class:OpenBabel::OBSmilesParser	file:
_updateSpectrophore	src/spectrophore.cpp	/^OBSpectrophore::_updateSpectrophore(double* ENERGY, double* SPHORE)$/;"	f	class:OpenBabel::OBSpectrophore
_updown	src/formats/smilesformat.cpp	/^    char _updown;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_v	include/openbabel/atom.h	/^      mutable vector3               _v;         \/\/!< coordinate vector$/;"	m	class:OpenBabel::OBAtom
_vData	include/openbabel/generic.h	/^    std::vector<std::string>                 _vData;$/;"	m	class:OpenBabel::OBConformerData
_vDensities	include/openbabel/generic.h	/^    std::vector<double>  _vDensities;$/;"	m	class:OpenBabel::OBDOSData
_vDimension	include/openbabel/generic.h	/^    std::vector<unsigned short>              _vDimension;$/;"	m	class:OpenBabel::OBConformerData
_vDisplace	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > >    _vDisplace;$/;"	m	class:OpenBabel::OBConformerData
_vEDipole	include/openbabel/generic.h	/^    std::vector<double>  _vEDipole;$/;"	m	class:OpenBabel::OBElectronicTransitionData
_vEnergies	include/openbabel/generic.h	/^    std::vector<double>                      _vEnergies;$/;"	m	class:OpenBabel::OBConformerData
_vEnergies	include/openbabel/generic.h	/^    std::vector<double>  _vEnergies;$/;"	m	class:OpenBabel::OBDOSData
_vForces	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > >    _vForces;$/;"	m	class:OpenBabel::OBConformerData
_vForces	include/openbabel/generic.h	/^    std::vector<double>  _vForces;$/;"	m	class:OpenBabel::OBElectronicTransitionData
_vFrequencies	include/openbabel/generic.h	/^    std::vector<double>  _vFrequencies;$/;"	m	class:OpenBabel::OBVibrationData
_vIntegration	include/openbabel/generic.h	/^    std::vector<double>  _vIntegration;$/;"	m	class:OpenBabel::OBDOSData
_vIntensities	include/openbabel/generic.h	/^    std::vector<double>  _vIntensities;$/;"	m	class:OpenBabel::OBVibrationData
_vLx	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > > _vLx;$/;"	m	class:OpenBabel::OBVibrationData
_vRamanActivities	include/openbabel/generic.h	/^    std::vector<double>  _vRamanActivities;$/;"	m	class:OpenBabel::OBVibrationData
_vRotatoryStrengthsLength	include/openbabel/generic.h	/^    std::vector<double>  _vRotatoryStrengthsLength;$/;"	m	class:OpenBabel::OBElectronicTransitionData
_vRotatoryStrengthsVelocity	include/openbabel/generic.h	/^    std::vector<double>  _vRotatoryStrengthsVelocity;$/;"	m	class:OpenBabel::OBElectronicTransitionData
_vVelocity	include/openbabel/generic.h	/^    std::vector< std::vector< vector3 > >    _vVelocity;$/;"	m	class:OpenBabel::OBConformerData
_vWavelengths	include/openbabel/generic.h	/^    std::vector<double>  _vWavelengths;$/;"	m	class:OpenBabel::OBElectronicTransitionData
_vadel	include/openbabel/phmodel.h	/^    std::vector<int>                            _vadel;$/;"	m	class:OpenBabel::OBChemTsfm
_validSetup	include/openbabel/forcefield.h	/^    bool 	_validSetup; \/\/!< was the last call to Setup succesfull$/;"	m	class:OpenBabel::OBForceField
_vals	include/openbabel/rotor.h	/^    std::vector<double> _vals;   \/\/!< At least one torsion angle (in radians) to evaluate$/;"	m	class:OpenBabel::OBRotorRule
_value	include/openbabel/data.h	/^    double _T,_value;$/;"	m	class:OpenBabel::OBAtomHOF
_value	include/openbabel/generic.h	/^    ValueT _value; \/\/!< The data for this key\/value pair$/;"	m	class:OpenBabel::OBPairTemplate
_value	include/openbabel/generic.h	/^    std::string _value; \/\/!< The data for this key\/value pair$/;"	m	class:OpenBabel::OBPairData
_values	include/OB-BGL/mol_graph.h	/^    boost::shared_ptr< std::vector< value_type > > _values;$/;"	m	class:OBAtomMap
_values	include/OB-BGL/mol_graph.h	/^    boost::shared_ptr< std::vector< value_type > > _values;$/;"	m	class:OBBondMap
_values	include/openbabel/grid.h	/^    std::vector<double> _values;   \/\/!< floating point values$/;"	m	class:OpenBabel::OBFloatGrid
_vangle	include/openbabel/obiter.h	/^    std::vector<std::vector<unsigned int> > _vangle;$/;"	m	class:OpenBabel::OBMolAngleIter
_vatmtmp	include/openbabel/data.h	/^      std::vector<std::string>                          _vatmtmp;$/;"	m	class:OpenBabel::OBResidueData
_vatom	include/openbabel/mol.h	/^    std::vector<OBAtom*>          _vatom;      	\/\/!< vector of atoms$/;"	m	class:OpenBabel::OBMol
_vbdel	include/openbabel/phmodel.h	/^    std::vector<std::pair<int,int> >            _vbdel;$/;"	m	class:OpenBabel::OBChemTsfm
_vbond	include/openbabel/atom.h	/^      std::vector<OBBond*>          _vbond;     \/\/!< bonds to this atom -- assumed to be one of the endpoints$/;"	m	class:OpenBabel::OBAtom
_vbond	include/openbabel/mol.h	/^    std::vector<OBBond*>          _vbond;      	\/\/!< vector of bonds$/;"	m	class:OpenBabel::OBMol
_vbond	include/openbabel/phmodel.h	/^    std::vector<std::pair<std::pair<int,int>,int> >  _vbond;$/;"	m	class:OpenBabel::OBChemTsfm
_vchrg	include/openbabel/phmodel.h	/^    std::vector<std::pair<int,int> >            _vchrg;$/;"	m	class:OpenBabel::OBChemTsfm
_vconf	include/openbabel/mol.h	/^    std::vector<double*>          _vconf;       \/\/!< vector of conformers$/;"	m	class:OpenBabel::OBMol
_vdata	include/openbabel/base.h	/^      std::vector<OBGenericData*> _vdata; \/\/!< Custom data$/;"	m	class:OpenBabel::OBBase
_vdata	include/openbabel/generic.h	/^    std::vector<OBGenericData *> _vdata;$/;"	m	class:OpenBabel::OBSetData
_vdwcalculations	src/forcefields/forcefieldgaff.h	/^      std::vector<OBFFVDWCalculationGaff>           _vdwcalculations;$/;"	m	class:OpenBabel::OBForceFieldGaff
_vdwcalculations	src/forcefields/forcefieldghemical.h	/^      std::vector<OBFFVDWCalculationGhemical>           _vdwcalculations;$/;"	m	class:OpenBabel::OBForceFieldGhemical
_vdwcalculations	src/forcefields/forcefieldmmff94.h	/^      std::vector<OBFFVDWCalculationMMFF94>           _vdwcalculations;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
_vdwcalculations	src/forcefields/forcefielduff.h	/^    std::vector<OBFFVDWCalculationUFF>           _vdwcalculations;$/;"	m	class:OpenBabel::OBForceFieldUFF
_vdwpairs	include/openbabel/forcefield.h	/^    OBBitVec	_vdwpairs; \/\/!< VDW pairs that should be calculated$/;"	m	class:OpenBabel::OBForceField
_vec	include/openbabel/generic.h	/^   vector3            _vec; \/\/!< 3D vector to be stored$/;"	m	class:OpenBabel::OBVectorData
_vele	include/openbabel/phmodel.h	/^    std::vector<std::pair<int,int> >            _vele;$/;"	m	class:OpenBabel::OBChemTsfm
_velec	include/openbabel/typer.h	/^    std::vector<std::pair<int,int> >   _velec;   \/\/!< # electrons an atom contributes$/;"	m	class:OpenBabel::OBAromaticTyper
_velocityPtr	include/openbabel/forcefield.h	/^    double 	*_velocityPtr; \/\/!< pointer to the velocities$/;"	m	class:OpenBabel::OBForceField
_verange	include/openbabel/typer.h	/^    std::vector<std::pair<int,int> >   _verange; \/\/!< min and max number of electrons$/;"	m	class:OpenBabel::OBAromaticTyper
_version	src/fingerprints/finger3.cpp	/^  string _version;$/;"	m	class:OpenBabel::PatternFP	file:
_vertex	include/openbabel/generic.h	/^    OBAtom                *_vertex;$/;"	m	class:OpenBabel::OBAngle
_vexbnd	include/openbabel/generic.h	/^    std::vector<OBExternalBond> _vexbnd;$/;"	m	class:OpenBabel::OBExternalBondData
_vexttyp	include/openbabel/typer.h	/^  std::vector<std::pair<OBSmartsPattern*,std::string> >    _vexttyp; \/\/!< external atom type rules$/;"	m	class:OpenBabel::OBAtomTyper
_vimpval	include/openbabel/typer.h	/^  std::vector<std::pair<OBSmartsPattern*,int> >            _vimpval; \/\/!< internal implicit valence rules$/;"	m	class:OpenBabel::OBAtomTyper
_vinthyb	include/openbabel/typer.h	/^  std::vector<std::pair<OBSmartsPattern*,int> >            _vinthyb; \/\/!< internal hybridization rules$/;"	m	class:OpenBabel::OBAtomTyper
_visit	include/openbabel/typer.h	/^    std::vector<bool>             _visit;$/;"	m	class:OpenBabel::OBAromaticTyper
_vopen	src/formats/smilesformat.cpp	/^    std::vector<OBBondClosureInfo> _vopen;$/;"	m	class:OpenBabel::OBMol2Cansmi	file:
_vpKa	include/openbabel/phmodel.h	/^    std::vector<double>                                 _vpKa;$/;"	m	class:OpenBabel::OBPhModel
_vpa	include/openbabel/typer.h	/^    std::vector<bool>             _vpa;   \/\/!< potentially aromatic atoms$/;"	m	class:OpenBabel::OBAromaticTyper
_vprev	src/formats/smilesformat.cpp	/^    vector<int>             _vprev;$/;"	m	class:OpenBabel::OBSmilesParser	file:
_vr	include/openbabel/generic.h	/^    std::vector<OBRing*> _vr;$/;"	m	class:OpenBabel::OBRingData
_vr	include/openbabel/rotor.h	/^      std::vector<rotor_digit> _vr;$/;"	m	class:OBRotorKeys
_vr	include/openbabel/rotor.h	/^    std::vector<OBRotorRule*>  _vr;     \/\/!< Database of specific OBRotorRules defined by SMARTS patterns$/;"	m	class:OpenBabel::OBRotorRules
_vres	include/openbabel/rotamer.h	/^    std::vector<std::vector<double> >    _vres;$/;"	m	class:OpenBabel::OBRotamerList
_vringTors	include/openbabel/rotamer.h	/^    std::vector<std::vector<double> >    _vringTors;$/;"	m	class:OpenBabel::OBRotamerList
_vrings	include/openbabel/rotamer.h	/^    std::vector<std::vector<int> >       _vrings;$/;"	m	class:OpenBabel::OBRotamerList
_vrotamer	include/openbabel/rotamer.h	/^    std::vector<unsigned char*>          _vrotamer;$/;"	m	class:OpenBabel::OBRotamerList
_vrotor	include/openbabel/rotamer.h	/^    std::vector<std::pair<OBAtom**,std::vector<int> > > _vrotor;$/;"	m	class:OpenBabel::OBRotamerList
_vschrg	include/openbabel/phmodel.h	/^    std::vector<std::pair<OBSmartsPattern*,std::vector<double> > > _vschrg;$/;"	m	class:OpenBabel::OBPhModel
_vsp	include/openbabel/typer.h	/^    std::vector<OBSmartsPattern*> _vsp;   \/\/!< SMARTS of potentially aromatic atoms$/;"	m	class:OpenBabel::OBAromaticTyper
_vsym2	include/openbabel/rotor.h	/^    std::vector<std::pair<OBSmartsPattern*,std::pair<int,int> > > _vsym2;$/;"	m	class:OpenBabel::OBRotorList
_vsym3	include/openbabel/rotor.h	/^    std::vector<std::pair<OBSmartsPattern*,std::pair<int,int> > > _vsym3;$/;"	m	class:OpenBabel::OBRotorList
_vtmp	include/openbabel/data.h	/^      std::vector<std::pair<std::string,int> >          _vtmp;$/;"	m	class:OpenBabel::OBResidueData
_vtorsion	include/openbabel/obiter.h	/^    std::vector<std::vector<unsigned int> > _vtorsion;$/;"	m	class:OpenBabel::OBMolTorsionIter
_vtsfm	include/openbabel/phmodel.h	/^    std::vector<OBChemTsfm*>                            _vtsfm;$/;"	m	class:OpenBabel::OBPhModel
_vx	include/openbabel/math/vector3.h	/^    double _vx, _vy, _vz ;$/;"	m	class:OpenBabel::vector3
_vy	include/openbabel/math/vector3.h	/^    double _vx, _vy, _vz ;$/;"	m	class:OpenBabel::vector3
_vz	include/openbabel/math/vector3.h	/^    double _vx, _vy, _vz ;$/;"	m	class:OpenBabel::vector3
_writer	include/openbabel/xml.h	/^      xmlTextWriterPtr _writer;$/;"	m	class:OpenBabel::XMLConversion
_x	include/openbabel/generic.h	/^    double _x,_y,_z,_V;$/;"	m	class:OpenBabel::OBFreeGridPoint
_xAxis	include/openbabel/grid.h	/^    vector3 _xAxis, _yAxis, _zAxis;$/;"	m	class:OpenBabel::OBFloatGrid
_xdim	include/openbabel/grid.h	/^    int _ydim,_xdim,_zdim;    \/\/!< grid dimensions$/;"	m	class:OpenBabel::OBFloatGrid
_xlinkHandler	include/libxml/xlink.h	/^struct _xlinkHandler {$/;"	s
_xmax	include/openbabel/grid.h	/^    double _xmin,_xmax,_ymin,_ymax,_zmin,_zmax; \/\/!< the min\/max axes in XYZ axes (i.e., the box)$/;"	m	class:OpenBabel::OBGrid
_xmin	include/openbabel/grid.h	/^    double _xmin,_xmax,_ymin,_ymax,_zmin,_zmax; \/\/!< the min\/max axes in XYZ axes (i.e., the box)$/;"	m	class:OpenBabel::OBGrid
_xmlAttr	include/libxml/tree.h	/^struct _xmlAttr {$/;"	s
_xmlAttribute	include/libxml/tree.h	/^struct _xmlAttribute {$/;"	s
_xmlBuffer	include/libxml/tree.h	/^struct _xmlBuffer {$/;"	s
_xmlChLRange	include/libxml/chvalid.h	/^struct _xmlChLRange {$/;"	s
_xmlChRangeGroup	include/libxml/chvalid.h	/^struct _xmlChRangeGroup {$/;"	s
_xmlChSRange	include/libxml/chvalid.h	/^struct _xmlChSRange {$/;"	s
_xmlCharEncodingHandler	include/libxml/encoding.h	/^struct _xmlCharEncodingHandler {$/;"	s
_xmlDoc	include/libxml/tree.h	/^struct _xmlDoc {$/;"	s
_xmlDtd	include/libxml/tree.h	/^struct _xmlDtd {$/;"	s
_xmlElement	include/libxml/tree.h	/^struct _xmlElement {$/;"	s
_xmlElementContent	include/libxml/tree.h	/^struct _xmlElementContent {$/;"	s
_xmlEntity	include/libxml/entities.h	/^struct _xmlEntity {$/;"	s
_xmlEnumeration	include/libxml/tree.h	/^struct _xmlEnumeration {$/;"	s
_xmlError	include/libxml/xmlerror.h	/^struct _xmlError {$/;"	s
_xmlGlobalState	include/libxml/globals.h	/^struct _xmlGlobalState $/;"	s
_xmlID	include/libxml/tree.h	/^struct _xmlID {$/;"	s
_xmlLocationSet	include/libxml/xpointer.h	/^struct _xmlLocationSet {$/;"	s
_xmlNode	include/libxml/tree.h	/^struct _xmlNode {$/;"	s
_xmlNodeSet	include/libxml/xpath.h	/^struct _xmlNodeSet {$/;"	s
_xmlNotation	include/libxml/tree.h	/^struct _xmlNotation {$/;"	s
_xmlNs	include/libxml/tree.h	/^struct _xmlNs {$/;"	s
_xmlOutputBuffer	include/libxml/xmlIO.h	/^struct _xmlOutputBuffer {$/;"	s
_xmlParserCtxt	include/libxml/parser.h	/^struct _xmlParserCtxt {$/;"	s
_xmlParserInput	include/libxml/parser.h	/^struct _xmlParserInput {$/;"	s
_xmlParserInputBuffer	include/libxml/xmlIO.h	/^struct _xmlParserInputBuffer {$/;"	s
_xmlParserNodeInfo	include/libxml/parser.h	/^struct _xmlParserNodeInfo {$/;"	s
_xmlParserNodeInfoSeq	include/libxml/parser.h	/^struct _xmlParserNodeInfoSeq {$/;"	s
_xmlRef	include/libxml/tree.h	/^struct _xmlRef {$/;"	s
_xmlSAXHandler	include/libxml/parser.h	/^struct _xmlSAXHandler {$/;"	s
_xmlSAXHandlerV1	include/libxml/parser.h	/^struct _xmlSAXHandlerV1 {$/;"	s
_xmlSAXLocator	include/libxml/parser.h	/^struct _xmlSAXLocator {$/;"	s
_xmlSchema	include/libxml/schemasInternals.h	/^struct _xmlSchema {$/;"	s
_xmlSchemaAnnot	include/libxml/schemasInternals.h	/^struct _xmlSchemaAnnot {$/;"	s
_xmlSchemaAttribute	include/libxml/schemasInternals.h	/^struct _xmlSchemaAttribute {$/;"	s
_xmlSchemaAttributeGroup	include/libxml/schemasInternals.h	/^struct _xmlSchemaAttributeGroup {$/;"	s
_xmlSchemaAttributeLink	include/libxml/schemasInternals.h	/^struct _xmlSchemaAttributeLink {$/;"	s
_xmlSchemaElement	include/libxml/schemasInternals.h	/^struct _xmlSchemaElement {$/;"	s
_xmlSchemaFacet	include/libxml/schemasInternals.h	/^struct _xmlSchemaFacet {$/;"	s
_xmlSchemaFacetLink	include/libxml/schemasInternals.h	/^struct _xmlSchemaFacetLink {$/;"	s
_xmlSchemaNotation	include/libxml/schemasInternals.h	/^struct _xmlSchemaNotation {$/;"	s
_xmlSchemaType	include/libxml/schemasInternals.h	/^struct _xmlSchemaType {$/;"	s
_xmlSchemaTypeLink	include/libxml/schemasInternals.h	/^struct _xmlSchemaTypeLink {$/;"	s
_xmlSchemaWildcard	include/libxml/schemasInternals.h	/^struct _xmlSchemaWildcard {$/;"	s
_xmlSchemaWildcardNs	include/libxml/schemasInternals.h	/^struct _xmlSchemaWildcardNs {$/;"	s
_xmlShellCtxt	include/libxml/debugXML.h	/^struct _xmlShellCtxt {$/;"	s
_xmlURI	include/libxml/uri.h	/^struct _xmlURI {$/;"	s
_xmlValidCtxt	include/libxml/valid.h	/^struct _xmlValidCtxt {$/;"	s
_xmlXPathAxis	include/libxml/xpath.h	/^struct _xmlXPathAxis {$/;"	s
_xmlXPathContext	include/libxml/xpath.h	/^struct _xmlXPathContext {$/;"	s
_xmlXPathFunct	include/libxml/xpath.h	/^struct _xmlXPathFunct {$/;"	s
_xmlXPathObject	include/libxml/xpath.h	/^struct _xmlXPathObject {$/;"	s
_xmlXPathParserContext	include/libxml/xpath.h	/^struct _xmlXPathParserContext {$/;"	s
_xmlXPathType	include/libxml/xpath.h	/^struct _xmlXPathType {$/;"	s
_xmlXPathVariable	include/libxml/xpath.h	/^struct _xmlXPathVariable {$/;"	s
_y	include/openbabel/generic.h	/^    double _x,_y,_z,_V;$/;"	m	class:OpenBabel::OBFreeGridPoint
_yAxis	include/openbabel/grid.h	/^    vector3 _xAxis, _yAxis, _zAxis;$/;"	m	class:OpenBabel::OBFloatGrid
_ydim	include/openbabel/grid.h	/^    int _ydim,_xdim,_zdim;    \/\/!< grid dimensions$/;"	m	class:OpenBabel::OBFloatGrid
_ymax	include/openbabel/grid.h	/^    double _xmin,_xmax,_ymin,_ymax,_zmin,_zmax; \/\/!< the min\/max axes in XYZ axes (i.e., the box)$/;"	m	class:OpenBabel::OBGrid
_ymin	include/openbabel/grid.h	/^    double _xmin,_xmax,_ymin,_ymax,_zmin,_zmax; \/\/!< the min\/max axes in XYZ axes (i.e., the box)$/;"	m	class:OpenBabel::OBGrid
_z	include/openbabel/generic.h	/^    double _x,_y,_z,_V;$/;"	m	class:OpenBabel::OBFreeGridPoint
_zAxis	include/openbabel/grid.h	/^    vector3 _xAxis, _yAxis, _zAxis;$/;"	m	class:OpenBabel::OBFloatGrid
_zdim	include/openbabel/grid.h	/^    int _ydim,_xdim,_zdim;    \/\/!< grid dimensions$/;"	m	class:OpenBabel::OBFloatGrid
_zip_stream	src/zipstream.h	/^    z_stream            _zip_stream;$/;"	m	class:zlib_stream::basic_unzip_streambuf
_zip_stream	src/zipstream.h	/^    z_stream            _zip_stream;$/;"	m	class:zlib_stream::basic_zip_streambuf
_zmax	include/openbabel/grid.h	/^    double _xmin,_xmax,_ymin,_ymax,_zmin,_zmax; \/\/!< the min\/max axes in XYZ axes (i.e., the box)$/;"	m	class:OpenBabel::OBGrid
_zmin	include/openbabel/grid.h	/^    double _xmin,_xmax,_ymin,_ymax,_zmin,_zmax; \/\/!< the min\/max axes in XYZ axes (i.e., the box)$/;"	m	class:OpenBabel::OBGrid
a	include/openbabel/forcefield.h	/^    OBAtom *a, *b, *c, *d;$/;"	m	class:OpenBabel::OBFFConstraint
a	include/openbabel/forcefield.h	/^    OBAtom *a, *b;$/;"	m	class:OpenBabel::OBFFCalculation2
a	include/openbabel/forcefield.h	/^    int         a, b, c, d;$/;"	m	class:OpenBabel::OBFFParameter
a	include/openbabel/molchrg.h	/^    double a, b, c;$/;"	m	class:OpenBabel::GasteigerState
a	include/openbabel/rand.h	/^    unsigned int m,a,c;$/;"	m	class:OpenBabel::OBRandom
a	src/formats/stlformat.cpp	/^    vector3 a, b, c;$/;"	m	struct:OpenBabel::Triangle	file:
aDA	src/forcefields/forcefieldmmff94.h	/^      int aDA, bDA; \/\/ hydrogen donor\/acceptor (A=1, D=2, neither=0)$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
aSTested	src/mcdlutil.cpp	/^    std::vector<int> aSTested;$/;"	m	class:OpenBabel::TEditedMolecule	file:
aSymb	src/mcdlutil.cpp	/^  const string aSymb[NELEMMCDL] = {"0",$/;"	m	namespace:OpenBabel	file:
a_expterm	src/forcefields/forcefieldmm2.h	/^      double a_expterm, b_expterm, c_expterm;$/;"	m	class:OpenBabel::OBForceFieldMM2
aalloc	include/openbabel/parsmart.h	/^    int aalloc,acount;$/;"	m	struct:OpenBabel::__anon56
abctol	src/formats/libinchi/ichiprt2.c	/^long abctol( const char *szString, char **q )$/;"	f
abort	src/isomorphism.cpp	/^        bool abort;$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
ac	src/mcdlutil.cpp	/^    short int ac[CONNMAX];$/;"	m	class:OpenBabel::TSingleAtom	file:
accele	src/formats/lpmdformat.cpp	/^  std::vector< vector3 > accele;$/;"	m	class:OpenBabel::LpmdFormat	file:
acount	include/openbabel/parsmart.h	/^    int aalloc,acount;$/;"	m	struct:OpenBabel::__anon56
active	src/GUI/selformats.h	/^	wxString& active;$/;"	m	class:SelFormatsDialog
add	src/canon.cpp	/^      inline void add(OBAtom *atom) { atoms.push_back(atom); }$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::PartialCode
add	src/canon.cpp	/^      inline void add(OBAtom *fromAtom, OBAtom *atom)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::PartialCode
add	src/canon.cpp	/^      inline void add(OBBond *bond) { bonds.push_back(bond); }$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::PartialCode
add2crc32	src/formats/libinchi/ichican2.c	/^unsigned long add2crc32( unsigned long crc32, AT_NUMB n )$/;"	f
add3	src/formats/libinchi/ichister.c	/^double* add3( const double a[], const double b[], double result[] )$/;"	f
addArrayListElement	src/formats/ArrayList.c	/^void addArrayListElement (ArrayList *array, void *elem){$/;"	f
addAsTemplate	src/mcdlutil.cpp	/^  void TEditedMolecule::addAsTemplate(TEditedMolecule& fragmentMol, int thisAN, int smAN, int thisBN, int smBN, bool isAddition) {$/;"	f	class:OpenBabel::TEditedMolecule
addAtom	src/formats/smiley.h	/^      void addAtom(int element, bool aromatic = false, int isotope = -1, int hCount = -1, int charge = 0, int atomClass = 0)$/;"	f	class:Smiley::Parser
addAtom	src/formats/smiley.h	/^    void addAtom(int element, bool aromatic, int isotope, int hCount, int charge, int atomClass) {}$/;"	f	struct:Smiley::CallbackBase
addAtom	src/formats/smiley.h	/^    void addAtom(int element, bool aromatic, int isotope, int hCount, int charge, int atomClass)$/;"	f	struct:Smiley::PrintCallback
addAtom	src/formats/smileyformat.cpp	/^    void addAtom(int element, bool aromatic, int isotope, int hCount, int charge, int atomClass)$/;"	f	struct:OpenBabel::OpenBabelCallback
addAtom	src/mcdlutil.cpp	/^  void TSimpleMolecule::addAtom(TSingleAtom * sa){$/;"	f	class:OpenBabel::TSimpleMolecule
addAtom	src/mcdlutil.cpp	/^  void TSimpleMolecule::addAtom(int na, int charge, double rx, double ry) {$/;"	f	class:OpenBabel::TSimpleMolecule
addBond	src/formats/smiley.h	/^      void addBond(int source, int target, int order, bool isUp, bool isDown, int rnum = 0)$/;"	f	class:Smiley::Parser
addBond	src/formats/smiley.h	/^    void addBond(int source, int target, int order, bool isUp, bool isDown) {}$/;"	f	struct:Smiley::CallbackBase
addBond	src/formats/smiley.h	/^    void addBond(int source, int target, int order, bool isUp, bool isDown)$/;"	f	struct:Smiley::PrintCallback
addBond	src/formats/smileyformat.cpp	/^    void addBond(int source, int target, int order, bool isUp, bool isDown)$/;"	f	struct:OpenBabel::OpenBabelCallback
addBond	src/mcdlutil.cpp	/^  void TSimpleMolecule::addBond(TSingleBond * sb){$/;"	f	class:OpenBabel::TSimpleMolecule
addBond	src/mcdlutil.cpp	/^  void TSimpleMolecule::addBond(int tb, int at1, int at2){$/;"	f	class:OpenBabel::TSimpleMolecule
addChildValues_	include/openbabel/json/json.h	/^      bool addChildValues_;$/;"	m	class:Json::StyledStreamWriter
addChildValues_	include/openbabel/json/json.h	/^      bool addChildValues_;$/;"	m	class:Json::StyledWriter
addComment	src/formats/json/jsoncpp.cpp	/^Reader::addComment( Location begin, $/;"	f	class:Json::Reader
addError	src/formats/json/jsoncpp.cpp	/^Reader::addError( const std::string &message, $/;"	f	class:Json::Reader
addErrorAndRecover	src/formats/json/jsoncpp.cpp	/^Reader::addErrorAndRecover( const std::string &message, $/;"	f	class:Json::Reader
addFragment	src/mcdlutil.cpp	/^  int TEditedMolecule::addFragment(TEditedMolecule & eMolecule, int naDEF, int cha, int chb,$/;"	f	class:OpenBabel::TEditedMolecule
addFragment	src/mcdlutil.cpp	/^  void addFragment(OBMol * molecule, OBMol * fragment, int molAN, int fragAN, int molBN, int fragBN, bool isAddition) {$/;"	f	namespace:OpenBabel
addHydrogens	src/ops/opisomorph.h	/^  bool addHydrogens;   \/\/The SMARTS contained one or more #1 to explicitly find hydrogen$/;"	m	class:OpenBabel::OpNewS
addNbrs	src/canon.cpp	/^  void addNbrs(OBBitVec &fragment, OBAtom *atom, const OBBitVec &mask, const std::vector<OBBond*> &metalloceneBonds)$/;"	f	namespace:OpenBabel
addNbrs	src/formats/smilesformat.cpp	/^  void addNbrs(OBBitVec &fragment, OBAtom *atom, const OBBitVec &mask)$/;"	f	namespace:OpenBabel
addNbrs	src/stereo/perception.cpp	/^  void addNbrs(OBBitVec &fragment, OBAtom *atom, OBAtom *skip)$/;"	f	namespace:OpenBabel
addOrganicSubsetAtom	src/formats/smiley.h	/^    void addOrganicSubsetAtom(int element, bool aromatic) {}$/;"	f	struct:Smiley::CallbackBase
addOrganicSubsetAtom	src/formats/smiley.h	/^    void addOrganicSubsetAtom(int element, bool aromatic)$/;"	f	struct:Smiley::PrintCallback
addPathInArg	src/formats/json/jsoncpp.cpp	/^Path::addPathInArg( const std::string &path, $/;"	f	class:Json::Path
addZeroeth	src/mcdlutil.cpp	/^  std::string addZeroeth(std::string instring, std::string stringAdd) {$/;"	f	namespace:OpenBabel
add_DT_to_num_H	src/formats/libinchi/ichinorm.c	/^int add_DT_to_num_H( int num_atoms, inp_ATOM *at )$/;"	f
add_bond	src/formats/fastaformat.cpp	/^  void add_bond(OBMol * pmol, OBAtom * from, OBAtom * to, int bond_order)$/;"	f	namespace:OpenBabel
add_footer	src/zipstreamimpl.h	/^basic_zip_ostream<charT,traits>& basic_zip_ostream<charT, traits>::add_footer(void)$/;"	f	class:basic_zip_ostream
add_header	src/zipstreamimpl.h	/^basic_zip_ostream<charT,traits>& basic_zip_ostream<charT, traits>::add_header(void)$/;"	f	class:basic_zip_ostream
add_inp_ATOM	src/formats/libinchi/ichinorm.c	/^int add_inp_ATOM( inp_ATOM *at, int len_at, int len_cur, inp_ATOM *add, int len_add )$/;"	f
add_residue	src/formats/fastaformat.cpp	/^  void add_residue(OBMol * pmol, OBResidue * res, double offset_x, double offset_Theta, unsigned long & serial_no, ResidueRecord * res_rec, int resBondFromOffset, ptrAtom & resBondFrom, bool create_bonds, bool bond_orders)$/;"	f	namespace:OpenBabel
add_to_da	src/formats/libinchi/ichinorm.c	/^int add_to_da( DERIV_AT *da, DERIV_AT *add )$/;"	f
add_unique_pairdata_to_mol	src/formats/gaussformat.cpp	/^  static void add_unique_pairdata_to_mol(OpenBabel::OBMol *mol,$/;"	f	namespace:OpenBabel
added_charge	include/inchi/ichirvrs.h	/^    int      added_charge;      \/* charge added to the c-groups *\/$/;"	m	struct:tagAllTCGroups
adjacent_iterator	include/OB-BGL/mol_graph.h	/^        adjacent_iterator () {};$/;"	f	class:boost::graph_traits::adjacent_iterator
adjacent_iterator	include/OB-BGL/mol_graph.h	/^        adjacent_iterator( OpenBabel::OBBondIterator i, OpenBabel::OBAtom* a ) : $/;"	f	class:boost::graph_traits::adjacent_iterator
adjacent_iterator	include/OB-BGL/mol_graph.h	/^        adjacent_iterator( const adjacent_iterator& i ) : $/;"	f	class:boost::graph_traits::adjacent_iterator
adjacent_iterator	include/OB-BGL/mol_graph.h	/^    class adjacent_iterator$/;"	c	struct:boost::graph_traits
adjacent_vertices	include/OB-BGL/mol_graph.h	/^  adjacent_vertices ( graph_traits< OpenBabel::OBMol >::vertex_descriptor& v,$/;"	f	namespace:boost
adjusted	src/mcdlutil.cpp	/^    int adjusted[CONNMAX];$/;"	m	struct:OpenBabel::adjustedlist	file:
adjustedlist	src/mcdlutil.cpp	/^  typedef struct adjustedlist{$/;"	s	namespace:OpenBabel	file:
adjustedlist	src/mcdlutil.cpp	/^  } adjustedlist;$/;"	t	namespace:OpenBabel	typeref:struct:OpenBabel::adjustedlist	file:
adler	include/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	include/zconf.h	41;"	d
advance	src/formats/mmcifformat.cpp	/^   void advance()$/;"	f	class:OpenBabel::CIFLexer
aindx	src/formats/mdffformat.cpp	/^  class aindx$/;"	c	namespace:OpenBabel	file:
aliasMode	src/depict/depict.cpp	/^      bool       aliasMode;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
align	src/formats/confabreport.cpp	/^  OBAlign align;$/;"	m	class:OpenBabel::ConfabReport	file:
alkaly	src/mcdlutil.cpp	/^  const int alkaly[NALKALYATOMS] ={3,11,19,37,55};$/;"	m	namespace:OpenBabel	file:
alkalyEarth	src/mcdlutil.cpp	/^  const int alkalyEarth[NALKALYEARTHATOMS] ={4,12,20,38,56};$/;"	m	namespace:OpenBabel	file:
all	src/formats/json/jsoncpp.cpp	/^Features::all()$/;"	f	class:Json::Features
allAboutCycles	src/mcdlutil.cpp	/^  void TSimpleMolecule::allAboutCycles() {$/;"	f	class:OpenBabel::TSimpleMolecule
allAtAtom	src/mcdlutil.cpp	/^  int TSingleAtom::allAtAtom() {$/;"	f	class:OpenBabel::TSingleAtom
allExplicit	include/openbabel/depict/depict.h	/^        allExplicit          = 0x0400$/;"	e	enum:OpenBabel::OBDepict::OptionType
allInchi	include/openbabel/inchiformat.h	/^  nSet allInchi;$/;"	m	class:OpenBabel::InChIFormat
allQueryPresent	src/mcdlutil.cpp	/^  bool TEditedMolecule::allQueryPresent(const std::vector<int> qA, const std::vector<int> qB,$/;"	f	class:OpenBabel::TEditedMolecule
all_atoms	src/formats/pdbqtformat.cpp	/^    void all_atoms(OBMol& mol) {clear(); rigid_with.insert(0); for (unsigned int i=1; i <= mol.NumAtoms(); i++) {atoms.push_back(i);}}$/;"	f	class:OpenBabel::branch
alloc	include/libxml/tree.h	/^    xmlBufferAllocationScheme alloc; \/* The realloc method *\/$/;"	m	struct:_xmlBuffer
alloc_	include/openbabel/tree/tree.hh	/^		tree_node_allocator alloc_;$/;"	m	class:tree
alloc_func	include/zconf.h	46;"	d
alloc_func	include/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
alloc_symmetry_element	src/pointgroup.cpp	/^    alloc_symmetry_element( void )$/;"	f	class:OpenBabel::PointGroupPrivate
allocate	src/formats/json/jsoncpp.cpp	/^   AllocatedType *allocate()$/;"	f	class:Json::BatchAllocator
allocateBatch	src/formats/json/jsoncpp.cpp	/^   static BatchInfo *allocateBatch( unsigned int objectsPerPage )$/;"	f	class:Json::BatchAllocator	file:
allocatedSize	src/formats/ArrayList.h	/^   int allocatedSize;$/;"	m	struct:_ArrayList
allowComments_	include/openbabel/json/json.h	/^      bool allowComments_;$/;"	m	class:Json::Features
alpha	include/openbabel/depict/painter.h	/^    double red, green, blue, alpha;$/;"	m	struct:OpenBabel::OBColor
alpha_a	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
alpha_b	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
alpha_share	include/openbabel/conformersearch.h	/^      double alpha_share;	\/\/!< The alpha parameter in sharing function$/;"	m	class:OpenBabel::OBConformerSearch
alt_path	include/inchi/ichi_bns.h	/^    BNS_ALT_PATH  *alt_path;           \/* current altp[] element *\/$/;"	m	struct:BalancedNetworkStructure
alternate	src/mcdlutil.cpp	/^  int alternate(OBMol * pmol, const std::vector<int> nH, std::vector<int>& bondOrders) {$/;"	f	namespace:OpenBabel
alternate	src/mcdlutil.cpp	/^  int alternate(const std::vector<int> aPosition,const std::vector<int> aCharge,$/;"	f	namespace:OpenBabel
altloc	src/formats/yasaraformat.cpp	/^  uint16 altloc;$/;"	m	struct:OpenBabel::atomid	file:
altp	include/inchi/ichi_bns.h	/^    BNS_ALT_PATH  *altp[BN_MAX_ALTP];  \/* keep alt. paths *\/$/;"	m	struct:BalancedNetworkStructure
always	include/openbabel/oberror.h	/^  enum errorQualifier {always, onceOnly};$/;"	e	enum:OpenBabel::errorQualifier
am	include/libxml/valid.h	/^    void                     *am;$/;"	m	struct:_xmlValidCtxt
am	include/libxml/valid.h	/^    xmlAutomataPtr            am;     \/* the automata *\/$/;"	m	struct:_xmlValidCtxt
analizeParity	src/mcdlutil.cpp	/^  int analizeParity(string data) {$/;"	f	namespace:OpenBabel
analizeParityBond	src/mcdlutil.cpp	/^  int analizeParityBond(string data) {$/;"	f	namespace:OpenBabel
analyzeOK	src/mcdlutil.cpp	/^  static bool analyzeOK(const std::vector<int> iA1,const std::vector<int> iA2, const std::vector<int> nH,$/;"	f	namespace:OpenBabel
ancestor	include/libxml/xpath.h	/^    xmlNodePtr         ancestor;	\/* used for walking preceding axis *\/$/;"	m	struct:_xmlXPathParserContext
angle	src/forcefields/forcefieldmmff94.h	/^      double koop, angle;$/;"	m	class:OpenBabel::OBFFOOPCalculationMMFF94
angle	src/forcefields/forcefielduff.h	/^      double koop, angle;$/;"	m	class:OpenBabel::OBFFOOPCalculationUFF
angle_sextic	src/forcefields/forcefieldmm2.h	/^      double angleunit, angle_sextic;$/;"	m	class:OpenBabel::OBForceFieldMM2
angleunit	src/forcefields/forcefieldmm2.h	/^      double angleunit, angle_sextic;$/;"	m	class:OpenBabel::OBForceFieldMM2
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchema
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttribute
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttributeGroup
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaElement
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaFacet
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaNotation
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaType
annot	include/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaWildcard
anum	src/mcdlutil.cpp	/^    string anum;$/;"	m	class:OpenBabel::TSingleAtom	file:
any	include/libxml/schemasInternals.h	/^    int any; \/* Indicates if the ns constraint is of ##any *\/$/;"	m	struct:_xmlSchemaWildcard
any	include/openbabel/base.h	/^    any,                 \/\/!< Undefined or unspecified (default)$/;"	e	enum:OpenBabel::DataOrigin
append	src/formats/json/jsoncpp.cpp	/^Value::append( const Value &value )$/;"	f	class:Json::Value
append_child	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::append_child(iter position)$/;"	f	class:tree
append_child	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::append_child(iter position, const T& x)$/;"	f	class:tree
append_child	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::append_child(iter position, iter other)$/;"	f	class:tree
append_children	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::append_children(iter position, sibling_iterator from, sibling_iterator to)$/;"	f	class:tree
areDuplicateAtoms	src/generic.cpp	/^  bool areDuplicateAtoms (vector3 v1, vector3 v2)$/;"	f	namespace:OpenBabel
areDuplicateAtoms2	src/ops/fillUC.cpp	/^bool areDuplicateAtoms2(vector3 v1, vector3 v2)$/;"	f	namespace:OpenBabel
are_3_vect_in_one_plane	src/formats/libinchi/ichister.c	/^int are_3_vect_in_one_plane( double at_coord[][3], double min_sine)$/;"	f
are_4at_in_one_plane	src/formats/libinchi/ichister.c	/^int are_4at_in_one_plane( double at_coord[][3], double min_sine)$/;"	f
are_alt_bonds	src/formats/libinchi/ichiqueu.c	/^int are_alt_bonds( U_CHAR *bonds, int len )$/;"	f
arg	include/openbabel/parsmart.h	/^      union _AtomExpr *arg;$/;"	m	struct:OpenBabel::_AtomExpr::__anon50	typeref:union:OpenBabel::_AtomExpr::__anon50::_AtomExpr
arg	include/openbabel/parsmart.h	/^      union _BondExpr *arg;$/;"	m	struct:OpenBabel::_BondExpr::__anon52	typeref:union:OpenBabel::_BondExpr::__anon52::_BondExpr
arg	src/formats/smiley.h	/^        SmartsAtomExpr *arg;$/;"	m	struct:Smiley::SmartsAtomExpr::__anon80::__anon83
arg	src/formats/smiley.h	/^      SmartsBondExpr *arg;$/;"	m	struct:Smiley::SmartsBondExpr::__anon85
args_	include/openbabel/json/json.h	/^      Args args_;$/;"	m	class:Json::Path
aromatic	src/mcdlutil.cpp	/^  bool TSimpleMolecule::aromatic(int cycleSize, const std::vector<int> bondList,$/;"	f	class:OpenBabel::TSimpleMolecule
aromtyper	include/openbabel/mol.h	/^  EXTERN  OBAromaticTyper  aromtyper;$/;"	m	namespace:OpenBabel
aromtyper	src/typer.cpp	/^  OBAromaticTyper  aromtyper;$/;"	m	namespace:OpenBabel	file:
arrangeFragments	src/mcdlutil.cpp	/^  void TemplateRedraw::arrangeFragments(std::vector<PartFragmentDefinition *>& list, int fragNo, double aspOptimal) {$/;"	f	class:OpenBabel::TemplateRedraw
arrangeMolecules	src/mcdlutil.cpp	/^  void TemplateRedraw::arrangeMolecules(std::vector<PartFragmentDefinition *>& extendedList, double aspOptimal) {$/;"	f	class:OpenBabel::TemplateRedraw
arrayValue	include/openbabel/json/json.h	/^      arrayValue,    \/\/\/< array value (ordered list)$/;"	e	enum:Json::ValueType
array_	include/openbabel/json/json.h	/^         ValueInternalArray *array_;$/;"	m	struct:Json::ValueInternalArray::IteratorState
array_	include/openbabel/json/json.h	/^         ValueInternalArray *array_;$/;"	m	union:Json::Value::ValueHolder
array_	include/openbabel/json/json.h	/^         ValueInternalArray::IteratorState array_;$/;"	m	union:Json::ValueIteratorBase::__anon47
asBool	src/formats/json/jsoncpp.cpp	/^Value::asBool() const$/;"	f	class:Json::Value
asCString	src/formats/json/jsoncpp.cpp	/^Value::asCString() const$/;"	f	class:Json::Value
asConstString	src/formats/json/jsoncpp.cpp	/^Value::asConstString() const$/;"	f	class:Json::Value
asDouble	src/formats/json/jsoncpp.cpp	/^Value::asDouble() const$/;"	f	class:Json::Value
asFloat	src/formats/json/jsoncpp.cpp	/^Value::asFloat() const$/;"	f	class:Json::Value
asInt	src/formats/json/jsoncpp.cpp	/^Value::asInt() const$/;"	f	class:Json::Value
asInt64	src/formats/json/jsoncpp.cpp	/^Value::asInt64() const$/;"	f	class:Json::Value
asLargestInt	src/formats/json/jsoncpp.cpp	/^Value::asLargestInt() const$/;"	f	class:Json::Value
asLargestUInt	src/formats/json/jsoncpp.cpp	/^Value::asLargestUInt() const$/;"	f	class:Json::Value
asString	src/formats/json/jsoncpp.cpp	/^Value::asString() const$/;"	f	class:Json::Value
asUInt	src/formats/json/jsoncpp.cpp	/^Value::asUInt() const$/;"	f	class:Json::Value
asUInt64	src/formats/json/jsoncpp.cpp	/^Value::asUInt64() const$/;"	f	class:Json::Value
as_number	src/formats/mmcifformat.cpp	/^     double  as_number() const$/;"	f	struct:OpenBabel::CIFLexer::Token
as_text	src/formats/mmcifformat.cpp	/^     string as_text;$/;"	m	struct:OpenBabel::CIFLexer::Token	file:
as_unsigned	src/formats/mmcifformat.cpp	/^     unsigned long  as_unsigned() const$/;"	f	struct:OpenBabel::CIFLexer::Token
ascent	include/openbabel/depict/painter.h	/^    double ascent, descent;$/;"	m	struct:OpenBabel::OBFontMetrics
asnprintf	src/snprintf.c	/^int asnprintf (char **ptr, size_t str_m, const char *fmt, \/*args*\/ ...)$/;"	f
asprintf	src/snprintf.c	/^int asprintf(char **ptr, const char *fmt, \/*args*\/ ...)$/;"	f
assign	src/chains.cpp	/^    AssignStruct assign;  \/\/!< Assign - assign residue name, atom name and bond type to output$/;"	m	union:OpenBabel::_ByteCode	file:
assign	src/mcdlutil.cpp	/^    void assign(const PartFragmentDefinition source) {$/;"	f	class:OpenBabel::PartFragmentDefinition
assignCharges	src/formats/MCDLformat.cpp	/^  void MCDLFormat::assignCharges(const std::vector <int> aPosition, const std::vector <int> iA1,$/;"	f	class:OpenBabel::MCDLFormat
assign_rules	src/patty.cpp	/^  void patty::assign_rules(std::vector<std::string> &rules)$/;"	f	class:OpenBabel::patty
assign_types	src/patty.cpp	/^  void patty::assign_types(OBMol &mol, std::vector<std::string> &atm_typ)$/;"	f	class:OpenBabel::patty
assign_types	src/patty.cpp	/^  void patty::assign_types(OBMol &mol,vector<int> &atm_typ)$/;"	f	class:OpenBabel::patty
assigned	src/tautomer.cpp	/^      OBAtom *assigned;$/;"	m	struct:OpenBabel::TautomerImpl::Level	file:
astereo	src/mcdlutil.cpp	/^    short int astereo;   \/*=0 - no stereo, =1 - R, = 2 -S,  = 3 - unknown*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
asymmetricDoubleBond	include/openbabel/depict/depict.h	/^        asymmetricDoubleBond = 0x0200,$/;"	e	enum:OpenBabel::OBDepict::OptionType
at	include/inchi/ichirvrs.h	/^    inp_ATOM        *at;  \/* length = num_atoms + num_deleted_H, zero pint struct for BNS->struct conversion *\/$/;"	m	struct:tagStructFromInChI
at	include/inchi/inchi_api.h	/^    NORM_ATOM *at;                  \/* atom list *\/$/;"	m	struct:tagNormAtomData
at	include/inchi/inchi_dll_a.h	/^    sp_ATOM  *at[TAUT_NUM];$/;"	m	struct:tagCOMPONENT_TREAT_INFO
at	include/inchi/inpdef.h	/^    inf_ATOM  *at;$/;"	m	struct:tagInfoAtomData
at	include/inchi/inpdef.h	/^    inp_ATOM *at;$/;"	m	struct:tagCompositeAtomData
at	include/inchi/inpdef.h	/^    inp_ATOM *at;$/;"	m	struct:tagInputAtomData
at	include/inchi/inpdef.h	/^    inp_ATOM *at;$/;"	m	struct:tagOrigAtom
at	include/inchi_api.h	/^    NORM_ATOM *at;                  \/* atom list *\/$/;"	m	struct:tagNormAtomData
at	src/forcefields/forcefieldmmff94.h	/^      int at; \/\/angletype (ATIJK)$/;"	m	class:OpenBabel::OBFFAngleCalculationMMFF94
at	src/forcefields/forcefielduff.h	/^      int at; \/\/angletype (ATIJK)$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
at	src/formats/libinchi/ichinorm.c	/^    AT_NUMB at[2];  \/* at[0] < at[1] *\/$/;"	m	struct:tagAtPair	file:
at	src/mcdlutil.cpp	/^    short int at[2];     \/*Bond definition-atoms number in array ATOM*\/$/;"	m	class:OpenBabel::TSingleBond	file:
at2	include/inchi/ichirvrs.h	/^    inp_ATOM        *at2; \/* length = num_atoms + num_deleted_H, the conversion result *\/$/;"	m	struct:tagStructFromInChI
at_fixed_bonds	include/inchi/inchi_api.h	/^    NORM_ATOM *at_fixed_bonds;      \/* atom list with added or removed protons only *\/$/;"	m	struct:tagNormAtomData
at_fixed_bonds	include/inchi/inpdef.h	/^    inp_ATOM *at_fixed_bonds; \/* tautomeric case, added or removed H *\/$/;"	m	struct:tagInputAtomData
at_fixed_bonds	include/inchi_api.h	/^    NORM_ATOM *at_fixed_bonds;      \/* atom list with added or removed protons only *\/$/;"	m	struct:tagNormAtomData
at_no	include/inchi/ichitaut.h	/^    AT_RANK       at_no;$/;"	m	struct:tagDfsPath
at_num	include/inchi/extr_ct.h	/^    AT_NUMB        at_num;$/;"	m	struct:tagIsotopicAtom
at_num	include/inchi/extr_ct.h	/^    AT_NUMB        at_num;$/;"	m	struct:tagStereoCarb
at_num1	include/inchi/extr_ct.h	/^    AT_NUMB        at_num1;$/;"	m	struct:tagStereoDble
at_num2	include/inchi/extr_ct.h	/^    AT_NUMB        at_num2;$/;"	m	struct:tagStereoDble
at_string	include/inchi/inpdef.h	/^    char      at_string[ATOM_INFO_LEN];$/;"	m	struct:tagAtomParmsForDrawing
at_type	include/inchi/inchi_api.h	/^    AT_NUMBR      at_type;                  \/* ATT_NONE, ATT_ACIDIC, etc. See InChI normalization code *\/$/;"	m	struct:tagNormAtom
at_type	include/inchi/inpdef.h	/^    AT_NUMB       at_type;                 \/* ATT_NONE, ATT_ACIDIC *\/$/;"	m	struct:tagInputAtom
at_type	include/inchi_api.h	/^    AT_NUMBR      at_type;                  \/* ATT_NONE, ATT_ACIDIC, etc. See InChI normalization code *\/$/;"	m	struct:tagNormAtom
atm_t_prop	src/formats/mdffformat.cpp	/^    atm_t_prop(): num_of_atoms(0), atom_symbol(""), atom_charge(0.0) {};$/;"	f	struct:OpenBabel::atm_t_prop
atm_t_prop	src/formats/mdffformat.cpp	/^  struct atm_t_prop$/;"	s	namespace:OpenBabel	file:
atnumber	include/inchi/ichitaut.h	/^    AT_NUMB   atnumber;$/;"	m	struct:tagChargeCandidate
atnumber	include/inchi/ichitaut.h	/^    AT_NUMB   atnumber;$/;"	m	struct:tagSaltChargeCandidate
atom	include/inchi/ichirvrs.h	/^    inp_ATOM   *atom;      \/* the whole restored structure made out of all components *\/$/;"	m	struct:tagInputInChI
atom	include/inchi/inchi_api.h	/^    inchi_Atom     *atom;         \/* array of num_atoms elements *\/$/;"	m	struct:tagINCHI_Input
atom	include/inchi/inchi_api.h	/^    inchi_Atom     *atom;         \/* array of num_atoms elements *\/$/;"	m	struct:tagINCHI_OutputStruct
atom	include/inchi_api.h	/^    inchi_Atom     *atom;         \/* array of num_atoms elements *\/$/;"	m	struct:tagINCHI_Input
atom	include/inchi_api.h	/^    inchi_Atom     *atom;         \/* array of num_atoms elements *\/$/;"	m	struct:tagINCHI_OutputStruct
atom	include/openbabel/parsmart.h	/^    AtomSpec *atom;$/;"	m	struct:OpenBabel::__anon56
atom	src/chains.cpp	/^    int atom,bond;$/;"	m	struct:OpenBabel::__anon73	file:
atom	src/formats/fastaformat.cpp	/^    ResidueAtomRecord  atom[48];$/;"	m	struct:OpenBabel::ResidueRecord	file:
atom	src/formats/yasaraformat.cpp	/^{ uint32 atom;$/;"	m	struct:OpenBabel::atomid	file:
atomBondChange	src/mcdlutil.cpp	/^  void TEditedMolecule::atomBondChange() {$/;"	f	class:OpenBabel::TEditedMolecule
atomClass	src/formats/smiley.h	/^    int atomClass;$/;"	m	struct:Smiley::SmartsAtom
atomCopy	src/mcdlutil.cpp	/^  void TSingleAtom::atomCopy(TSingleAtom * source) {$/;"	f	class:OpenBabel::TSingleAtom
atomDistanceMetric	src/mcdlutil.cpp	/^  double TSimpleMolecule::atomDistanceMetric(int an) {$/;"	f	class:OpenBabel::TSimpleMolecule
atomEquivalent	src/mcdlutil.cpp	/^  bool TSingleAtom::atomEquivalent(TSingleAtom * structure, TSingleAtom * query,$/;"	f	class:OpenBabel::TSingleAtom
atomNumber	include/inchi/ichirvrs.h	/^    AT_NUMB atomNumber;$/;"	m	struct:tagAtomsCmpTwoFixedH
atomNumber	include/inchi/ichirvrs.h	/^    AT_NUMB atomNumber;$/;"	m	struct:tagAtomsCmpTwoMobileH
atomPrimitive	src/formats/smiley.h	/^    void atomPrimitive(int type, int value) {}$/;"	f	struct:Smiley::CallbackBase
atomPrimitive	src/formats/smiley.h	/^    void atomPrimitive(int type, int value)$/;"	f	struct:Smiley::PrintCallback
atomPrimitiveCallback	src/formats/smiley.h	/^      bool atomPrimitiveCallback(int type, int &value, int defaultValue,$/;"	f	class:Smiley::Parser
atomRingToBondRing	src/ring.cpp	/^  std::vector<unsigned int> atomRingToBondRing(OBMol *mol, const std::vector<int> &atoms)$/;"	f	namespace:OpenBabel
atom_charge	src/formats/mdffformat.cpp	/^    double atom_charge;$/;"	m	struct:OpenBabel::atm_t_prop	file:
atom_etab_num	src/formats/mdffformat.cpp	/^    int atom_etab_num;$/;"	m	struct:OpenBabel::atm_t_prop	file:
atom_index	src/formats/mdffformat.cpp	/^    int atom_index;$/;"	m	class:OpenBabel::aindx	file:
atom_number	src/formats/libinchi/ichirvr2.c	/^    AT_NUMB atom_number;$/;"	m	struct:tagMobileHGroups	file:
atom_site	src/formats/mmcifformat.cpp	/^     atom_site,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
atom_symbol	src/formats/mdffformat.cpp	/^    string atom_symbol;$/;"	m	struct:OpenBabel::atm_t_prop	file:
atom_type	src/formats/mmcifformat.cpp	/^     atom_type,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
atom_type_pVA	src/formats/libinchi/ichirvr2.c	/^    AT_NUMB atom_type_pVA;$/;"	m	struct:tagMobileHGroups	file:
atomicNum	src/formats/adfformat.cpp	/^        int atomicNum;$/;"	m	struct:OpenBabel::OBT41Format::AtomData	file:
atomid	src/chains.cpp	/^    int *atomid;$/;"	m	struct:OpenBabel::__anon72	file:
atomid	src/chains.cpp	/^    int atomid,elem;$/;"	m	struct:OpenBabel::__anon68	file:
atomid	src/formats/yasaraformat.cpp	/^struct atomid                      \/* The order of the fields is not important *\/$/;"	s	namespace:OpenBabel	file:
atomids	include/openbabel/chains.h	/^      std::vector<int>            atomids;$/;"	m	class:OpenBabel::OBChainsParser
atomreftype	include/openbabel/generic.h	/^  enum atomreftype{$/;"	g	namespace:OpenBabel
atoms	src/canon.cpp	/^      std::vector<OBAtom*> atoms;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::PartialCode	file:
atoms	src/formats/pdbqtformat.cpp	/^    vector <int> atoms;$/;"	m	class:OpenBabel::branch	file:
atoms	src/formats/smilesformat.cpp	/^      vector<OBAtom*> atoms;$/;"	m	struct:OpenBabel::OBSmilesParser::StereoRingBond	file:
atoms	src/formats/smiley.h	/^    std::vector<SmartsAtom> atoms;$/;"	m	struct:Smiley::Smarts
atoms	src/formats/xml/cdxmlformat.cpp	/^  map <int, int> atoms; \/\/ maps chemdraw atom id to openbabel idx.$/;"	m	class:OpenBabel::ChemDrawXMLFormat	file:
atomtyper	include/openbabel/mol.h	/^  EXTERN  OBAtomTyper      atomtyper;$/;"	m	namespace:OpenBabel
atomtyper	src/typer.cpp	/^  OBAtomTyper      atomtyper;$/;"	m	namespace:OpenBabel	file:
attallocs	include/libxml/parser.h	/^    int               *attallocs;     \/* which attribute were allocated *\/$/;"	m	struct:_xmlParserCtxt
attr	include/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *attr;\/* the linked attribute *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttribute
attr	include/libxml/tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlID
attr	include/libxml/tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlRef
attrDecl	include/libxml/schemasInternals.h	/^    xmlHashTablePtr attrDecl;$/;"	m	struct:_xmlSchema
attrgrpDecl	include/libxml/schemasInternals.h	/^    xmlHashTablePtr attrgrpDecl;$/;"	m	struct:_xmlSchema
attributeDecl	include/libxml/parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandler
attributeDecl	include/libxml/parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandlerV1
attributeDeclSAXFunc	include/libxml/parser.h	/^typedef void (*attributeDeclSAXFunc)(void *ctx,$/;"	t
attributeSAXFunc	include/libxml/parser.h	/^typedef void (*attributeSAXFunc) (void *ctx,$/;"	t
attributeUses	include/libxml/schemasInternals.h	/^    xmlSchemaAttributeLinkPtr attributeUses;$/;"	m	struct:_xmlSchemaType
attributeWildcard	include/libxml/schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaAttributeGroup
attributeWildcard	include/libxml/schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaType
attributes	include/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes;$/;"	m	struct:_xmlSchemaAttributeGroup
attributes	include/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes;$/;"	m	struct:_xmlSchemaElement
attributes	include/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes;$/;"	m	struct:_xmlSchemaType
attributes	include/libxml/tree.h	/^    void          *attributes;  \/* Hash table for attributes if any *\/$/;"	m	struct:_xmlDtd
attributes	include/libxml/tree.h	/^    xmlAttributePtr   attributes;	\/* List of the declared attributes *\/$/;"	m	struct:_xmlElement
attrs_depr	include/libxml/HTMLparser.h	/^    const char** attrs_depr;		\/* Additional deprecated attributes *\/$/;"	m	struct:_htmlElemDesc
attrs_opt	include/libxml/HTMLparser.h	/^    const char** attrs_opt;		\/* Optional Attributes *\/$/;"	m	struct:_htmlElemDesc
attrs_req	include/libxml/HTMLparser.h	/^    const char** attrs_req;		\/* Required attributes *\/$/;"	m	struct:_htmlElemDesc
atts	include/libxml/parser.h	/^    const xmlChar *   *atts;          \/* array for the attributes callbacks *\/$/;"	m	struct:_xmlParserCtxt
attsDefault	include/libxml/parser.h	/^    xmlHashTablePtr    attsDefault;   \/* defaulted attributes if any *\/$/;"	m	struct:_xmlParserCtxt
attsSpecial	include/libxml/parser.h	/^    xmlHashTablePtr    attsSpecial;   \/* non-CDATA attributes if any *\/$/;"	m	struct:_xmlParserCtxt
atype	include/libxml/tree.h	/^    xmlAttributeType       atype;	\/* The attribute type *\/$/;"	m	struct:_xmlAttribute
atype	include/libxml/tree.h	/^    xmlAttributeType atype;     \/* the attribute type if validating *\/$/;"	m	struct:_xmlAttr
authority	include/libxml/uri.h	/^    char *authority;	\/* the authority part *\/$/;"	m	struct:_xmlURI
avail_in	include/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	include/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
averageBondLength	src/mcdlutil.cpp	/^  double TSimpleMolecule::averageBondLength() {$/;"	f	class:OpenBabel::TSimpleMolecule
axis	include/libxml/xpath.h	/^    xmlXPathAxisPtr axis;		\/* Array of defined axis *\/$/;"	m	struct:_xmlXPathContext
b	include/inchi/ichicant.h	/^    ATOM_INVARIANT_BYTES b;$/;"	m	struct:tagAtomInvariant
b	include/openbabel/forcefield.h	/^    OBAtom *a, *b, *c, *d;$/;"	m	class:OpenBabel::OBFFConstraint
b	include/openbabel/forcefield.h	/^    OBAtom *a, *b;$/;"	m	class:OpenBabel::OBFFCalculation2
b	include/openbabel/forcefield.h	/^    int         a, b, c, d;$/;"	m	class:OpenBabel::OBFFParameter
b	include/openbabel/molchrg.h	/^    double a, b, c;$/;"	m	class:OpenBabel::GasteigerState
b	src/fingerprints/fingerecfp.cpp	/^  std::vector<unsigned int> b[4]; \/\/ for duplicate removal as described in paper?$/;"	m	struct:OpenBabel::AtomInfo	file:
b	src/formats/stlformat.cpp	/^    vector3 a, b, c;$/;"	m	struct:OpenBabel::Triangle	file:
bAbcNumbers	include/inchi/ichidrp.h	/^    int             bAbcNumbers;$/;"	m	struct:tagInputParms
bAddNewVertex	src/formats/libinchi/ichi_bns.c	/^int bAddNewVertex( BN_STRUCT *pBNS, int nVertDoubleBond, int nCap, int nFlow, int nMaxAdjEdges, int *nDots )$/;"	f
bAddStCapToAVertex	src/formats/libinchi/ichi_bns.c	/^int bAddStCapToAVertex( BN_STRUCT *pBNS, Vertex v1, Vertex v2, VertexFlow *nOldCapVertSingleBond, int *nDots, int bAdjacentDonors )$/;"	f
bAllowEmptyStructure	include/inchi/ichidrp.h	/^    int             bAllowEmptyStructure;$/;"	m	struct:tagInputParms
bAlwaysOutput	src/formats/libinchi/ichiprt1.c	/^    int  bAlwaysOutput;$/;"	m	struct:tagInchiTag	file:
bAmbiguousStereo	include/inchi/extr_ct.h	/^    S_CHAR bAmbiguousStereo;$/;"	m	struct:tagAtom
bAmbiguousStereo	include/inchi/inchi_api.h	/^    S_CHAR        bAmbiguousStereo;         \/* flag of detected stereo ambiguity *\/$/;"	m	struct:tagNormAtom
bAmbiguousStereo	include/inchi/inpdef.h	/^    S_CHAR        bAmbiguousStereo;$/;"	m	struct:tagInputAtom
bAmbiguousStereo	include/inchi_api.h	/^    S_CHAR        bAmbiguousStereo;         \/* flag of detected stereo ambiguity *\/$/;"	m	struct:tagNormAtom
bAtomHasValence3	src/formats/libinchi/ichister.c	/^int bAtomHasValence3( char *elname, S_CHAR charge, S_CHAR radical )$/;"	f
bAtomUsedForStereo	include/inchi/ichicant.h	/^    S_CHAR           *bAtomUsedForStereo;  \/* 0 if not a stereo atom or during a canon. rank being mapped on this atom; *\/$/;"	m	struct:tagCanonStat
bBit	src/formats/libinchi/ichican2.c	/^static bitWord *bBit = NULL;$/;"	v	file:
bCalcInChIHash	include/inchi/ichidrp.h	/^    int             bCalcInChIHash;$/;"	m	struct:tagInputParms
bCanAtomBeAStereoCenter	src/formats/libinchi/ichister.c	/^int bCanAtomBeAStereoCenter( char *elname, S_CHAR charge, S_CHAR radical )$/;"	f
bCanAtomBeMiddleAllene	src/formats/libinchi/ichister.c	/^int bCanAtomBeMiddleAllene( char *elname, S_CHAR charge, S_CHAR radical )$/;"	f
bCanAtomBeTerminalAllene	src/formats/libinchi/ichister.c	/^int bCanAtomBeTerminalAllene( char *elname, S_CHAR charge, S_CHAR radical )$/;"	f
bCanAtomHaveAStereoBond	src/formats/libinchi/ichister.c	/^int bCanAtomHaveAStereoBond( char *elname, S_CHAR charge, S_CHAR radical )$/;"	f
bCanBeACPoint	src/formats/libinchi/ichitaut.c	/^int bCanBeACPoint( inp_ATOM *at, S_CHAR cCharge, S_CHAR cChangeValence, S_CHAR neutral_bonds_valence,$/;"	f
bCanInpAtomBeAStereoCenter	src/formats/libinchi/ichister.c	/^int bCanInpAtomBeAStereoCenter( inp_ATOM *at, int cur_at, int bPointedEdgeStereo )$/;"	f
bCanonIsFinerThanEquitablePartition	src/formats/libinchi/ichican2.c	/^int bCanonIsFinerThanEquitablePartition( int num_atoms, sp_ATOM* at, AT_RANK *nSymmRank )$/;"	f
bChangeFlow	include/inchi/ichi_bns.h	/^    int bChangeFlow;      \/* actually change flow *\/$/;"	m	struct:BalancedNetworkStructure
bCheckUnusualValences	src/formats/libinchi/runichi.c	/^int bCheckUnusualValences( ORIG_ATOM_DATA *orig_at_data, int bAddIsoH, char *pStrErrStruct )$/;"	f
bChiral	include/inchi/inchi_api.h	/^    int          bChiral; \/* 1 => the structure was marked as chiral, 2=> not chiral, 0=> not marked *\/$/;"	m	struct:tagInchiInpData
bChiral	include/inchi_api.h	/^    int          bChiral; \/* 1 => the structure was marked as chiral, 2=> not chiral, 0=> not marked *\/$/;"	m	struct:tagInchiInpData
bChiralFlag	include/inchi/ichidrp.h	/^    int             bChiralFlag;$/;"	m	struct:tagInputParms
bChiralFlag	include/inchi/ichimain.h	/^    int           bChiralFlag;$/;"	m	struct:tagStructData
bCmpIsotopicStereo	include/inchi/ichicant.h	/^    int               bCmpIsotopicStereo; \/* 0 => no stereo to invert;$/;"	m	struct:tagCanonStat
bCmpStereo	include/inchi/ichicant.h	/^    int               bCmpStereo;         \/* 0 => no stereo to invert;$/;"	m	struct:tagCanonStat
bCompareComponents	include/inchi/ichidrp.h	/^    int             bCompareComponents; \/* see flags CMP_COMPONENTS, etc. *\/$/;"	m	struct:tagInputParms
bCtPredecessors	include/inchi/ichidrp.h	/^    int             bCtPredecessors;$/;"	m	struct:tagInputParms
bCutVertex	include/inchi/extr_ct.h	/^    S_CHAR    bCutVertex;$/;"	m	struct:tagAtom
bCutVertex	include/inchi/inchi_api.h	/^    S_CHAR  bCutVertex;                    \/* is the atom a cut-vertex or not *\/$/;"	m	struct:tagNormAtom
bCutVertex	include/inchi/inpdef.h	/^    S_CHAR  bCutVertex;$/;"	m	struct:tagInputAtom
bCutVertex	include/inchi_api.h	/^    S_CHAR  bCutVertex;                    \/* is the atom a cut-vertex or not *\/$/;"	m	struct:tagNormAtom
bCutVertex	src/formats/libinchi/ichinorm.c	/^    S_CHAR     bCutVertex;$/;"	m	struct:tagTreeAtom	file:
bCutVertexAltBns	src/formats/libinchi/ichi_bns.c	9252;"	d	file:
bDA	src/forcefields/forcefieldmmff94.h	/^      int aDA, bDA; \/\/ hydrogen donor\/acceptor (A=1, D=2, neither=0)$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
bDeleted	include/inchi/ichi.h	/^    int      bDeleted;$/;"	m	struct:tagINChI
bDeleted	include/inchi/ichi.h	/^    int     bDeleted;$/;"	m	struct:tagINChI_Aux
bDeleted	include/inchi/ichirvrs.h	/^    char        bDeleted;  \/* InChI component marked as Deleted, means a proton in Mobile-H layer *\/$/;"	m	struct:tagStructFromInChI
bDeleted	include/inchi/inchi_api.h	/^    int       bDeleted;             \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bDeleted	include/inchi/inpdef.h	/^    int       bDeleted;    \/* unused *\/$/;"	m	struct:tagCompositeAtomData
bDeleted	include/inchi/inpdef.h	/^    int       bDeleted;$/;"	m	struct:tagInputAtomData
bDeleted	include/inchi_api.h	/^    int       bDeleted;             \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bDisconnectCoord	include/inchi/inpdef.h	/^    int bDisconnectCoord;  \/* 0 if no disconnection needed else (Num Implicit H to disconnect)+1 *\/$/;"	m	struct:tagOrigAtom
bDisconnectSalts	include/inchi/inpdef.h	/^    int bDisconnectSalts;  \/* whether salt disconnection is possible *\/$/;"	m	struct:tagOrigAtom
bDisplay	include/inchi/ichidrp.h	/^    int             bDisplay;$/;"	m	struct:tagInputParms
bDisplayCompositeResults	include/inchi/ichidrp.h	/^    int             bDisplayCompositeResults;$/;"	m	struct:tagInputParms
bDisplayEachComponentINChI	include/inchi/ichidrp.h	/^    int             bDisplayEachComponentINChI;$/;"	m	struct:tagInputParms
bDisplayIfRestoreWarnings	include/inchi/ichidrp.h	/^    int             bDisplayIfRestoreWarnings; \/* InChI->Struct debug *\/$/;"	m	struct:tagInputParms
bDoNotAddH	include/inchi/ichidrp.h	/^    int             bDoNotAddH;$/;"	m	struct:tagInputParms
bDoNotAddH	src/formats/libinchi/util.c	/^     int     bDoNotAddH;   \/* InChI does not add implicit H to atoms that have bDoNotAddH != 0 *\/$/;"	m	struct:tagElData	file:
bDoNotMergeNonTautAtom	src/formats/libinchi/ichitaut.c	/^int bDoNotMergeNonTautAtom(inp_ATOM *at, int at_no)$/;"	f
bDoubleBondSquare	include/inchi/ichicant.h	/^    int               bDoubleBondSquare; \/* 0 or 2 *\/$/;"	m	struct:tagCanonStat
bDrawTbl	include/inchi/ichidrp.h	/^    int    bDrawTbl;$/;"	m	struct:tagTblDrawPatms
bDrawingLabelLeftShift	include/inchi/inpdef.h	50;"	d
bEsc	include/inchi/ichidrp.h	/^    int       bEsc;$/;"	m	struct:tagReturnedDrawParms
bExists	include/inchi/inchi_api.h	/^    int       bExists;              \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bExists	include/inchi/inpdef.h	/^    int       bExists;$/;"	m	struct:tagCompositeAtomData
bExists	include/inchi/inpdef.h	/^    int       bExists;$/;"	m	struct:tagInputAtomData
bExists	include/inchi_api.h	/^    int       bExists;              \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bExistsAltPath	src/formats/libinchi/ichi_bns.c	/^int bExistsAltPath( BN_STRUCT *pBNS, BN_DATA *pBD, BN_AATG *pAATG, inp_ATOM *at, int num_atoms,$/;"	f
bExistsAnyAltPath	src/formats/libinchi/ichi_bns.c	/^int bExistsAnyAltPath( BN_STRUCT *pBNS, BN_DATA *pBD, inp_ATOM *at, int num_atoms,$/;"	f
bExtract	include/inchi/ichi.h	/^    int bExtract;$/;"	m	struct:tagINChI
bExtract	include/inchi/ichicant.h	/^    int               bExtract;          \/* for debug only *\/$/;"	m	struct:tagCanonStat
bExtract	include/inchi/ichimain.h	/^    int           bExtract;$/;"	m	struct:tagStructData
bExtract	include/inchi/ichirvrs.h	/^    int        bExtract; \/* for debugging *\/$/;"	m	struct:tagStructFromInChI
bExtract	include/inchi/inpdef.h	/^    int bExtract;$/;"	m	struct:tagOrigAtom
bExtract	src/formats/libinchi/runichi.c	/^    int bExtract;$/;"	m	struct:tagRenumbData	file:
bFindCumuleneChain	src/formats/libinchi/ichirvr2.c	/^int bFindCumuleneChain( inp_ATOM *at, AT_NUMB i1, AT_NUMB i2, AT_NUMB nCumulene[], int nMaxLen )$/;"	f
bFirstCT	include/inchi/ichicant.h	/^    int                  bFirstCT;$/;"	m	struct:tagCanonStat
bFixNonUniformDraw	include/inchi/ichidrp.h	/^    int             bFixNonUniformDraw; \/* correct non-uniformly drawn oxoanions and amidinium cations. *\/$/;"	m	struct:tagInputParms
bFixStereoBonds	include/inchi/ichirvrs.h	/^    int bFixStereoBonds;       \/* 1=> forbid stereogenic double bonds from changing *\/$/;"	m	struct:tagStructRestoreMode
bFixedHExists	include/inchi/ichirvrs.h	/^    char        bFixedHExists; \/* fixed-H InChI exists or not *\/$/;"	m	struct:tagStructFromInChI
bFixedHLayerExistsRevrs	include/inchi/ichirvrs.h	/^    char   bFixedHLayerExistsRevrs;$/;"	m	struct:tagStructCmpTwoFixedH
bFixedHLayerExistsRevrs	include/inchi/ichirvrs.h	/^    char   bFixedHLayerExistsRevrs;$/;"	m	struct:tagStructCmpTwoMobileH
bForbiddenEdge	include/inchi/ichirvrs.h	/^    S_CHAR  bForbiddenEdge;$/;"	m	struct:tagEdgeCapFlow
bGetMolfileNumber	include/inchi/ichidrp.h	/^    int             bGetMolfileNumber;  \/* read molfile number from the name line like "Structure #22" *\/$/;"	m	struct:tagInputParms
bGetSdfileId	include/inchi/ichidrp.h	/^    int             bGetSdfileId;$/;"	m	struct:tagInputParms
bHasAcidicHydrogen	src/formats/libinchi/ichi_bns.c	/^int bHasAcidicHydrogen( inp_ATOM *at, int i )$/;"	f
bHasAcidicMinus	src/formats/libinchi/ichi_bns.c	/^int bHasAcidicMinus( inp_ATOM *at, int i )$/;"	f
bHasChargedNeighbor	src/formats/libinchi/ichi_bns.c	/^int bHasChargedNeighbor( inp_ATOM *at, int iat )$/;"	f
bHasDifference	include/inchi/ichirvrs.h	/^    char   bHasDifference;$/;"	m	struct:tagStructCmpTwoFixedH
bHasDifference	include/inchi/ichirvrs.h	/^    char   bHasDifference;$/;"	m	struct:tagStructCmpTwoMobileH
bHasEquString	src/formats/libinchi/ichiprt2.c	/^int bHasEquString( AT_NUMB *LinearCT, int nLenCT )$/;"	f
bHasIsotopicAtoms	include/inchi/inchi_dll_a.h	/^    int bHasIsotopicAtoms;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
bHasIsotopicInTautomerGroups	include/inchi/ichicant.h	/^    int               bHasIsotopicInTautomerGroups;$/;"	m	struct:tagCanonStat
bHasIsotopicLayer	include/inchi/inchi_api.h	/^    int       bHasIsotopicLayer;$/;"	m	struct:tagNormAtomData
bHasIsotopicLayer	include/inchi/inpdef.h	/^    int       bHasIsotopicLayer;$/;"	m	struct:tagCompositeAtomData
bHasIsotopicLayer	include/inchi/inpdef.h	/^    int       bHasIsotopicLayer;$/;"	m	struct:tagInputAtomData
bHasIsotopicLayer	include/inchi_api.h	/^    int       bHasIsotopicLayer;$/;"	m	struct:tagNormAtomData
bHasIsotopicTautGroups	include/inchi/ichitaut.h	/^    int bHasIsotopicTautGroups;$/;"	m	struct:tagAtomSizes
bHasMetalAtom	src/formats/libinchi/strutil.c	/^int bHasMetalAtom( ORIG_ATOM_DATA *orig_inp_data )$/;"	f
bHasOrigInfo	src/formats/libinchi/ichiprt2.c	/^int bHasOrigInfo( ORIG_INFO *OrigInfo, int num_atoms )$/;"	f
bHasOtherExchangableH	src/formats/libinchi/ichi_bns.c	/^int bHasOtherExchangableH ( inp_ATOM *at, int i )$/;"	f
bHasStereoOrEquToStereo	include/inchi/extr_ct.h	/^    S_CHAR bHasStereoOrEquToStereo;$/;"	m	struct:tagAtom
bHasStereoOrEquToStereo2	include/inchi/extr_ct.h	/^    S_CHAR bHasStereoOrEquToStereo2;$/;"	m	struct:tagAtom
bHas_N_V	src/formats/libinchi/ichirvr3.c	/^int bHas_N_V( inp_ATOM *at2, int num_atoms )$/;"	f
bHeteroAtomMayHaveXchgIsoH	src/formats/libinchi/strutil.c	/^int bHeteroAtomMayHaveXchgIsoH( inp_ATOM *atom, int iat )$/;"	f
bINChIOutputOptions	include/inchi/ichidrp.h	/^    int             bINChIOutputOptions; \/* !(ip->bINChIOutputOptions & INCHI_OUT_PLAIN_TEXT) *\/$/;"	m	struct:tagInputParms
bIgnoreIsotopic	include/inchi/ichicant.h	/^    int               bIgnoreIsotopic;$/;"	m	struct:tagCanonStat
bIgnoreIsotopic	include/inchi/ichitaut.h	/^    int       bIgnoreIsotopic;$/;"	m	struct:tagTautomerGroupsInfo
bIgnoreIsotopic	include/inchi/ichitaut.h	/^    int bIgnoreIsotopic;$/;"	m	struct:tagAtomSizes
bIgnoreVertexNonTACN_atom	src/formats/libinchi/ichi_bns.c	/^int bIgnoreVertexNonTACN_atom( BN_STRUCT* pBNS, Vertex u, Vertex v )$/;"	f
bIgnoreVertexNonTACN_group	src/formats/libinchi/ichi_bns.c	/^int bIgnoreVertexNonTACN_group( BN_STRUCT* pBNS, Vertex v, Vertex w, Edge *SwitchEdge )$/;"	f
bInChIHasReconnectedMetal	src/formats/libinchi/ichiread.c	/^int bInChIHasReconnectedMetal( INChI *pInChI )$/;"	f
bInchiTimeIsOver	include/inchi/ichitime.h	83;"	d
bInchiTimeIsOver	src/formats/libinchi/ichicano.c	/^int bInchiTimeIsOver( inchiTime *TickEnd )$/;"	f
bInchiTimeIsOver	src/formats/libinchi/ichicano.c	/^int bInchiTimeIsOver( inchiTime *TickStart )$/;"	f
bIngnoreUnchanged	include/inchi/ichidrp.h	/^    int             bIngnoreUnchanged;$/;"	m	struct:tagInputParms
bInpAtomHasRequirdNeigh	src/formats/libinchi/ichister.c	/^int bInpAtomHasRequirdNeigh ( inp_ATOM *at, int cur_at, int RequirdNeighType, int NumDbleBonds )$/;"	f
bInpInchiComponentDeleted	src/formats/libinchi/ichiread.c	/^int bInpInchiComponentDeleted( InpInChI *pOneInput, int iInChI, int bMobileH, int k )$/;"	f
bInpInchiComponentExists	src/formats/libinchi/ichiread.c	/^int bInpInchiComponentExists( InpInChI *pOneInput, int iInChI, int bMobileH, int k )$/;"	f
bInterrupted	src/formats/libinchi/inchi_dll.c	/^int bInterrupted = 0;$/;"	v
bIsAggressiveDeprotonation	src/formats/libinchi/ichi_bns.c	/^int bIsAggressiveDeprotonation( BN_STRUCT* pBNS, Vertex v, Vertex w, Edge *SwitchEdge )$/;"	f
bIsAmmoniumSalt	src/formats/libinchi/strutil.c	/^int bIsAmmoniumSalt( inp_ATOM *at, int i, int *piO, int *pk, S_CHAR *num_explicit_H ) $/;"	f
bIsAtomTypeHard	src/formats/libinchi/ichi_bns.c	/^int bIsAtomTypeHard( inp_ATOM *at, int endpoint, int nType, int nMask, int nCharge )$/;"	f
bIsBnsEndpoint	src/formats/libinchi/ichi_bns.c	/^int bIsBnsEndpoint( BN_STRUCT *pBNS, int v )$/;"	f
bIsCenterPointStrict	src/formats/libinchi/ichiqueu.c	/^int bIsCenterPointStrict( inp_ATOM *atom, int iat )$/;"	f
bIsHDonorAccAtomType	src/formats/libinchi/ichi_bns.c	/^int bIsHDonorAccAtomType( inp_ATOM *at, int endpoint, int *cSubType )$/;"	f
bIsHardRemHCandidate	src/formats/libinchi/ichi_bns.c	/^int bIsHardRemHCandidate(  inp_ATOM *at, int i, int *cSubType )$/;"	f
bIsIsotopic	include/inchi/ichi.h	/^    int        bIsIsotopic;        \/* filled out even though isotopic has not been requested *\/$/;"	m	struct:tagINChI_Aux
bIsMetalSalt	src/formats/libinchi/strutil.c	/^int bIsMetalSalt( inp_ATOM *at, int i ) $/;"	f
bIsMetalToDisconnect	src/formats/libinchi/strutil.c	/^int bIsMetalToDisconnect(inp_ATOM *at, int i, int bCheckMetalValence)$/;"	f
bIsNegAtomType	src/formats/libinchi/ichi_bns.c	/^int bIsNegAtomType( inp_ATOM *at, int endpoint, int *cSubType )$/;"	f
bIsOxide	src/formats/libinchi/ichister.c	/^int bIsOxide( inp_ATOM  *at, int cur_at )$/;"	f
bIsRemovedHfromNHaion	src/formats/libinchi/ichi_bns.c	/^int bIsRemovedHfromNHaion( BN_STRUCT* pBNS, Vertex u, Vertex v )$/;"	f
bIsSp3LayerNotEmpty	src/formats/libinchi/ichiread.c	/^int bIsSp3LayerNotEmpty( INChI *pInpInChI[], int bMobileH, int bIso, int nNumComponents )$/;"	f
bIsStructChiral	src/formats/libinchi/runichi.c	/^int bIsStructChiral( PINChI2 *pINChI2[INCHI_NUM], int num_components[] )$/;"	f
bIsSuitableHeteroInpAtom	src/formats/libinchi/ichister.c	/^int bIsSuitableHeteroInpAtom( inp_ATOM  *at )$/;"	f
bIsTautomeric	include/inchi/ichi.h	/^    int        bIsTautomeric;      \/* filled out even though tautomeric has not been requested; non-zero if taut exists *\/$/;"	m	struct:tagINChI_Aux
bIsUnsatCarbonInASmallRing	src/formats/libinchi/ichirvr5.c	/^int bIsUnsatCarbonInASmallRing( inp_ATOM *at2, VAL_AT *pVA, int iat, BFS_Q *pbfsq, int min_ring_size )$/;"	f
bIsoMayBeArranged	src/formats/libinchi/ichiread.c	/^int bIsoMayBeArranged( int bInchi2Struct, int iso_diff[NUM_H_ISOTOPES], REM_PROTONS nNumProtons[INCHI_NUM][TAUT_NUM],$/;"	f
bIsotopic	include/inchi/ichirvrs.h	/^    char          bIsotopic;$/;"	m	struct:tagStructFromInChI
bKeepSymmRank	include/inchi/ichicant.h	/^    int                  bKeepSymmRank;$/;"	m	struct:tagCanonStat
bKey	src/descriptors/inchidescriptor.cpp	/^  bool bKey;$/;"	m	class:OpenBabel::InChIFilter	file:
bLibInchiSemaphore	src/formats/libinchi/inchi_dll.c	/^int bLibInchiSemaphore = 0;$/;"	v
bMatchOnePrefix	include/inchi/ichiparm.h	/^static int bMatchOnePrefix( int len, char *str, int lenPrefix[],$/;"	f
bMayBeACationInMobileHLayer	src/formats/libinchi/ichirvr1.c	/^int bMayBeACationInMobileHLayer( inp_ATOM *at, VAL_AT *pVA, int iat, int bMobileH )$/;"	f
bMayDisconnectMetals	src/formats/libinchi/strutil.c	/^int bMayDisconnectMetals( ORIG_ATOM_DATA *orig_inp_data, int bCheckMetalValence, INCHI_MODE *bTautFlagsDone )$/;"	f
bMayHaveStereo	include/inchi/ichitaut.h	/^    int bMayHaveStereo;$/;"	m	struct:tagAtomSizes
bMayHaveStereo	include/inchi/inchi_dll_a.h	/^    int bMayHaveStereo;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
bMergeAllInputStructures	include/inchi/ichidrp.h	/^    int             bMergeAllInputStructures;$/;"	m	struct:tagInputParms
bMetalAddFlower	include/inchi/ichirvrs.h	/^    int bMetalAddFlower;       \/* 1 => allow adjustable metal valence and charge; 0=> use std charge\/valence *\/$/;"	m	struct:tagStructRestoreMode
bMobileH	include/inchi/ichirvrs.h	/^    char        bMobileH;$/;"	m	struct:tagStructFromInChI
bNeedToTestTheFlow	src/formats/libinchi/ichi_bns.c	/^int bNeedToTestTheFlow( int bond_type, int nTestFlow, int bTestForNonStereoBond )$/;"	f
bNoStructLabels	include/inchi/ichidrp.h	/^    int             bNoStructLabels;$/;"	m	struct:tagInputParms
bNormalizationFlags	include/inchi/ichi.h	/^    INCHI_MODE  bNormalizationFlags;    \/* t_group_info->tni.bNormalizationFlags *\/$/;"	m	struct:tagINChI_Aux
bNormalizationFlags	include/inchi/ichitaut.h	/^    INCHI_MODE   bNormalizationFlags;$/;"	m	struct:tagTautomerNormInfo
bNormalizationFlags	include/inchi/inchi_api.h	/^    INCHI_MODES bNormalizationFlags;\/* for internal use *\/$/;"	m	struct:tagNormAtomData
bNormalizationFlags	include/inchi/inpdef.h	/^    INCHI_MODE  bNormalizationFlags;$/;"	m	struct:tagInputAtomData
bNormalizationFlags	include/inchi/inpdef.h	/^    INCHI_MODE  bNormalizationFlags[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagNormCanonFlags
bNormalizationFlags	include/inchi_api.h	/^    INCHI_MODES bNormalizationFlags;\/* for internal use *\/$/;"	m	struct:tagNormAtomData
bNotASimplePath	include/inchi/ichi_bns.h	/^    int bNotASimplePath;  \/* alternating path traversed same bond 2 times in opposite directions *\/$/;"	m	struct:BalancedNetworkStructure
bNumHeterAtomHasIsotopicH	src/formats/libinchi/strutil.c	/^int bNumHeterAtomHasIsotopicH( inp_ATOM *atom, int num_atoms )$/;"	f
bOUTPUT_ONE_STRUCT_TIME	include/inchi/mode.h	432;"	d
bOUTPUT_ONE_STRUCT_TIME	include/inchi/mode.h	563;"	d
bOUTPUT_ONE_STRUCT_TIME	include/inchi/mode.h	564;"	d
bOrigAtom	include/inchi/ichidrp.h	/^    int            bOrigAtom;$/;"	m	struct:tagDrawParmsSettings
bPointedEdgeStereo	include/inchi/inchi_dll_a.h	/^    int bPointedEdgeStereo;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
bPostProcessed	include/inchi/ichirvrs.h	/^    int   bPostProcessed; \/* recalculate after add\/remove protons *\/$/;"	m	struct:tagStructFromInChI
bPreprocessed	include/inchi/inpdef.h	/^    int bPreprocessed[INCHI_NUM];$/;"	m	struct:tagOrigAtom
bRELEASE_VERSION	include/inchi/mode.h	254;"	d
bRELEASE_VERSION	include/inchi/mode.h	256;"	d
bREUSE_INCHI	include/inchi/mode.h	425;"	d
bRadChangesAtomType	src/formats/libinchi/ichi_bns.c	/^int bRadChangesAtomType( BN_STRUCT *pBNS, BN_DATA *pBD, Vertex v, Vertex v_1, Vertex v_2 )$/;"	f
bRadSrchMode	include/inchi/ichi_bns.h	/^    BRS_MODE        bRadSrchMode; \/* 1 => connect fict. vertices-radicals to the accessible atoms *\/$/;"	m	struct:BalancedNetworkData
bRankUsedForStereo	include/inchi/ichicant.h	/^    S_CHAR           *bRankUsedForStereo;  \/* canon. rank used for stereo mapping *\/$/;"	m	struct:tagCanonStat
bReadInChIOptions	include/inchi/ichidrp.h	/^    int             bReadInChIOptions;$/;"	m	struct:tagInputParms
bRenumbErr	src/formats/libinchi/runichi.c	/^    int            nRet2, c1, c2, nComp, bRenumbErr;$/;"	m	struct:tagRenumbData	file:
bRestoreBnsAfterCheckAltPath	src/formats/libinchi/ichi_bns.c	/^int bRestoreBnsAfterCheckAltPath( BN_STRUCT *pBNS, ALT_PATH_CHANGES *apc, int bChangeFlow )$/;"	f
bRestoreFlowAfterCheckOneBond	src/formats/libinchi/ichi_bns.c	/^int bRestoreFlowAfterCheckOneBond( BN_STRUCT *pBNS, BNS_FLOW_CHANGES *fcd )$/;"	f
bRevInchiComponentDeleted	src/formats/libinchi/ichiread.c	/^int bRevInchiComponentDeleted( StrFromINChI *pStruct, int iInChI, int bMobileH, int k )$/;"	f
bRevInchiComponentExists	src/formats/libinchi/ichiread.c	/^int bRevInchiComponentExists( StrFromINChI *pStruct, int iInChI, int bMobileH, int k )$/;"	f
bRing2Chain	include/inchi/ichidrp.h	/^    int             bRing2Chain;$/;"	m	struct:tagInputParms
bSTested	src/mcdlutil.cpp	/^    std::vector<int> bSTested;$/;"	m	class:OpenBabel::TEditedMolecule	file:
bSTestedStore	src/mcdlutil.cpp	/^    std::vector<int> bSTestedStore;$/;"	m	class:OpenBabel::TEditedMolecule	file:
bSaveAllGoodStructsAsProblem	include/inchi/ichidrp.h	/^    int             bSaveAllGoodStructsAsProblem;$/;"	m	struct:tagInputParms
bSaveWarningStructsAsProblem	include/inchi/ichidrp.h	/^    int             bSaveWarningStructsAsProblem;$/;"	m	struct:tagInputParms
bSavedInINCHI_LIB	include/inchi/inpdef.h	/^    int bSavedInINCHI_LIB[INCHI_NUM];$/;"	m	struct:tagOrigAtom
bSetBnsToCheckAltPath	src/formats/libinchi/ichi_bns.c	/^int bSetBnsToCheckAltPath( BN_STRUCT *pBNS, int nVertDoubleBond, int nVertSingleBond, AT_NUMB type, $/;"	f
bSetBondsAfterCheckOneBond	src/formats/libinchi/ichi_bns.c	/^int bSetBondsAfterCheckOneBond( BN_STRUCT *pBNS, BNS_FLOW_CHANGES *fcd, int nTestFlow, inp_ATOM *at, int num_atoms, int bChangeFlow0 )$/;"	f
bSetFlowToCheckOneBond	src/formats/libinchi/ichi_bns.c	/^int bSetFlowToCheckOneBond( BN_STRUCT *pBNS, int iedge, int flow, BNS_FLOW_CHANGES *fcd )$/;"	f
bSetNew	src/formats/libinchi/ichi_bns.c	/^    S_CHAR     bSetNew[2];         \/* indicators whether to remove vertices *\/$/;"	m	struct:tagAltPathChanges	file:
bSetOldCapsVert	src/formats/libinchi/ichi_bns.c	/^    S_CHAR     bSetOldCapsVert[2]; \/* number of caps to restore, including st-cap *\/$/;"	m	struct:tagAltPathChanges	file:
bStereoIsBetter	include/inchi/ichicant.h	/^    int                  bStereoIsBetter;$/;"	m	struct:tagCanonStat
bStereoRemovesMetalFlag	include/inchi/ichirvrs.h	/^    int bStereoRemovesMetalFlag;  \/* 1=> treat stereogenic atoms and atoms connected by a stereo bond as non-metals *\/$/;"	m	struct:tagStructRestoreMode
bTautFlags	include/inchi/ichi.h	/^    INCHI_MODE  bTautFlags;             \/* t_group_info->bTautFlags *\/$/;"	m	struct:tagINChI_Aux
bTautFlags	include/inchi/ichidrp.h	/^    INCHI_MODE      bTautFlags;$/;"	m	struct:tagInputParms
bTautFlags	include/inchi/ichimain.h	/^    INCHI_MODE     bTautFlags[INCHI_NUM];     \/* reconnected does not have TG_FLAG_DISCONNECT_COORD_DONE flag *\/$/;"	m	struct:tagStructData
bTautFlags	include/inchi/ichitaut.h	/^    INCHI_MODE bTautFlags;      $/;"	m	struct:tagTautomerGroupsInfo
bTautFlags	include/inchi/inchi_api.h	/^    INCHI_MODES bTautFlags;         \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bTautFlags	include/inchi/inchi_dll_a.h	/^    INCHI_MODE bTautFlags;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
bTautFlags	include/inchi/inpdef.h	/^    INCHI_MODE  bTautFlags;$/;"	m	struct:tagInputAtomData
bTautFlags	include/inchi/inpdef.h	/^    INCHI_MODE  bTautFlags[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagNormCanonFlags
bTautFlags	include/inchi_api.h	/^    INCHI_MODES bTautFlags;         \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bTautFlagsDone	include/inchi/ichi.h	/^    INCHI_MODE  bTautFlagsDone;         \/* t_group_info->bTautFlagsDone *\/$/;"	m	struct:tagINChI_Aux
bTautFlagsDone	include/inchi/ichidrp.h	/^    INCHI_MODE      bTautFlagsDone;$/;"	m	struct:tagInputParms
bTautFlagsDone	include/inchi/ichimain.h	/^    INCHI_MODE     bTautFlagsDone[INCHI_NUM]; \/* reconnected does not have TG_FLAG_DISCONNECT_COORD_DONE flag *\/$/;"	m	struct:tagStructData
bTautFlagsDone	include/inchi/ichitaut.h	/^    INCHI_MODE bTautFlagsDone;      $/;"	m	struct:tagTautomerGroupsInfo
bTautFlagsDone	include/inchi/inchi_api.h	/^    INCHI_MODES bTautFlagsDone;     \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bTautFlagsDone	include/inchi/inchi_dll_a.h	/^    INCHI_MODE bTautFlagsDone;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
bTautFlagsDone	include/inchi/inpdef.h	/^    INCHI_MODE  bTautFlagsDone;$/;"	m	struct:tagInputAtomData
bTautFlagsDone	include/inchi/inpdef.h	/^    INCHI_MODE  bTautFlagsDone[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagNormCanonFlags
bTautFlagsDone	include/inchi_api.h	/^    INCHI_MODES bTautFlagsDone;     \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bTautPreprocessed	include/inchi/inchi_api.h	/^    int       bTautPreprocessed;    \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bTautPreprocessed	include/inchi/inpdef.h	/^    int       bTautPreprocessed;$/;"	m	struct:tagInputAtomData
bTautPreprocessed	include/inchi_api.h	/^    int       bTautPreprocessed;    \/* for internal use *\/$/;"	m	struct:tagNormAtomData
bTautomeric	include/inchi/inchi_api.h	/^    int       bTautomeric;$/;"	m	struct:tagNormAtomData
bTautomeric	include/inchi/inpdef.h	/^    int       bTautomeric;$/;"	m	struct:tagCompositeAtomData
bTautomeric	include/inchi/inpdef.h	/^    int       bTautomeric;$/;"	m	struct:tagInputAtomData
bTautomeric	include/inchi_api.h	/^    int       bTautomeric;$/;"	m	struct:tagNormAtomData
bTrivialInv	include/inchi/ichi.h	/^    int         bTrivialInv;  \/* 1=> nCompInv2Abs!= 0 && Inverted = Abs stereo with inverted parities 1<-->2 *\/$/;"	m	struct:tagINChI_Stereo
bUnderivatize	include/inchi/ichidrp.h	/^    int             bUnderivatize;$/;"	m	struct:tagInputParms
bUniqueAtNbrFromMappingRank	src/formats/libinchi/ichimap1.c	/^int bUniqueAtNbrFromMappingRank( AT_RANK **pRankStack, AT_RANK nAtRank, AT_NUMB *nAtNumber )$/;"	f
bUsed	src/formats/libinchi/ichirvr1.c	/^    Vertex     bUsed; \/* indicates the charge edge belongs to already processed atom *\/$/;"	m	struct:tagVertexFlow	file:
bUsed0DParity	include/inchi/ichirvrs.h	/^    S_CHAR        bUsed0DParity;          \/* bit=1 => stereobond; bit=2 => stereocenter *\/$/;"	m	struct:tagInpAtomAddParities
bUsed0DParity	include/inchi/inchi_api.h	/^    S_CHAR        bUsed0DParity;            \/* bit=1 => stereobond; bit=2 => stereocenter *\/$/;"	m	struct:tagNormAtom
bUsed0DParity	include/inchi/inpdef.h	/^    S_CHAR        bUsed0DParity;          \/* bit=1 => stereobond; bit=2 => stereocenter *\/$/;"	m	struct:tagInputAtom
bUsed0DParity	include/inchi_api.h	/^    S_CHAR        bUsed0DParity;            \/* bit=1 => stereobond; bit=2 => stereocenter *\/$/;"	m	struct:tagNormAtom
bUserQuit	include/inchi/ichimain.h	/^    int           bUserQuit;$/;"	m	struct:tagStructData
bUserQuitComponent	include/inchi/ichimain.h	/^    int           bUserQuitComponent;$/;"	m	struct:tagStructData
bUserQuitComponentDisplay	include/inchi/ichimain.h	/^    int           bUserQuitComponentDisplay;$/;"	m	struct:tagStructData
bXmlStarted	include/inchi/ichidrp.h	/^    int             bXmlStarted;$/;"	m	struct:tagInputParms
bXmlStructStarted	include/inchi/ichimain.h	/^    int           bXmlStructStarted;$/;"	m	struct:tagStructData
b_expterm	src/forcefields/forcefieldmm2.h	/^      double a_expterm, b_expterm, c_expterm;$/;"	m	class:OpenBabel::OBForceFieldMM2
b_parity	include/inchi/ichi.h	/^    S_CHAR     *b_parity;   \/* possibly stereogenic bond parities$/;"	m	struct:tagINChI_Stereo
back_edge	include/OB-BGL/verbose_visitors.h	/^    void back_edge(Edge u, const Graph& g)$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
backtrackDepth	src/canon.cpp	/^      unsigned int backtrackDepth;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
backup	src/formats/mmcifformat.cpp	/^   void backup(size_t count)$/;"	f	class:OpenBabel::CIFLexer
backup	src/formats/mmcifformat.cpp	/^   void backup(size_t count, char next)$/;"	f	class:OpenBabel::CIFLexer
balloc	include/openbabel/parsmart.h	/^    int balloc,bcount;$/;"	m	struct:OpenBabel::__anon56
base	include/libxml/parser.h	/^    const xmlChar *base;              \/* Base of the array to parse *\/$/;"	m	struct:_xmlParserInput
base	include/libxml/schemasInternals.h	/^    const xmlChar *base;$/;"	m	struct:_xmlSchemaType
base	include/libxml/schemasInternals.h	/^    xmlSchemaTypePtr base; \/* obsolete, not used *\/$/;"	m	struct:_xmlSchemaAttribute
base	include/libxml/xpath.h	/^    const xmlChar *base;			\/* the full expression *\/$/;"	m	struct:_xmlXPathParserContext
base26_checksum	src/formats/libinchi/ikey_base26.c	/^char base26_checksum(const char *str)$/;"	f
base26_dublet_for_bits_28_to_36	src/formats/libinchi/ikey_base26.c	/^const char* base26_dublet_for_bits_28_to_36(unsigned char *a)$/;"	f
base26_dublet_for_bits_56_to_64	src/formats/libinchi/ikey_base26.c	/^const char* base26_dublet_for_bits_56_to_64(unsigned char *a)$/;"	f
base26_triplet_1	src/formats/libinchi/ikey_base26.c	/^const char* base26_triplet_1(const unsigned char *a)$/;"	f
base26_triplet_2	src/formats/libinchi/ikey_base26.c	/^const char* base26_triplet_2(const unsigned char *a)$/;"	f
base26_triplet_3	src/formats/libinchi/ikey_base26.c	/^const char* base26_triplet_3(const unsigned char *a)$/;"	f
base26_triplet_4	src/formats/libinchi/ikey_base26.c	/^const char* base26_triplet_4(const unsigned char *a)$/;"	f
baseNs	include/libxml/schemasInternals.h	/^    const xmlChar *baseNs;$/;"	m	struct:_xmlSchemaType
baseType	include/libxml/schemasInternals.h	/^    xmlSchemaTypePtr baseType;$/;"	m	struct:_xmlSchemaType
baseindent	include/openbabel/xml.h	/^      int baseindent, ind;$/;"	m	class:OpenBabel::XMLBaseFormat
basic_unzip_streambuf	src/zipstream.h	/^class basic_unzip_streambuf :$/;"	c	namespace:zlib_stream
basic_unzip_streambuf	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::basic_unzip_streambuf(istream_reference istream,$/;"	f	class:basic_unzip_streambuf
basic_zip_istream	src/zipstream.h	/^class basic_zip_istream :$/;"	c	namespace:zlib_stream
basic_zip_istream	src/zipstreamimpl.h	/^basic_zip_istream<charT, traits>::basic_zip_istream(istream_reference istream,$/;"	f	class:basic_zip_istream
basic_zip_ostream	src/zipstream.h	/^class basic_zip_ostream :$/;"	c	namespace:zlib_stream
basic_zip_ostream	src/zipstreamimpl.h	/^basic_zip_ostream<charT, traits>::basic_zip_ostream(ostream_reference ostream,$/;"	f	class:basic_zip_ostream
basic_zip_streambuf	src/zipstream.h	/^class basic_zip_streambuf : public std::basic_streambuf<charT, traits>$/;"	c	namespace:zlib_stream
basic_zip_streambuf	src/zipstreamimpl.h	/^basic_zip_streambuf<charT, traits>::basic_zip_streambuf(ostream_reference ostream,$/;"	f	class:basic_zip_streambuf
basisformat	src/formats/daltonformat.cpp	/^    BasisFormat_t basisformat;$/;"	m	class:OpenBabel::DALTONInputFormat	file:
batches_	src/formats/json/jsoncpp.cpp	/^   BatchInfo *batches_;$/;"	m	class:Json::BatchAllocator	file:
bcount	include/openbabel/parsmart.h	/^    int balloc,bcount;$/;"	m	struct:OpenBabel::__anon56
bcount	src/chains.cpp	/^    int bcount;$/;"	m	struct:OpenBabel::__anon68	file:
begin	include/openbabel/math/vector3.h	/^    const_iterator begin() const { return &_vx; }$/;"	f	class:OpenBabel::vector3
begin	include/openbabel/math/vector3.h	/^    iterator begin() { return &_vx; }$/;"	f	class:OpenBabel::vector3
begin	include/openbabel/stereo/bindings.h	/^    unsigned long begin, end;$/;"	m	struct:OpenBabel::OBCisTransConfig
begin	include/openbabel/stereo/cistrans.h	/^      unsigned long begin, end; \/\/<! The double bond begin and end ids.$/;"	m	struct:OpenBabel::OBCisTransStereo::Config
begin	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator tree<T, tree_node_allocator>::begin() const$/;"	f	class:tree
begin	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::begin(const iterator_base& pos) const$/;"	f	class:tree
begin	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::iterator_base::begin() const$/;"	f	class:tree::iterator_base
begin	src/formats/json/jsoncpp.cpp	/^Value::begin() const$/;"	f	class:Json::Value
begin	src/formats/json/jsoncpp.cpp	/^Value::begin()$/;"	f	class:Json::Value
begin_	include/openbabel/json/json.h	/^      Location begin_;$/;"	m	class:Json::Reader
begin_breadth_first	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::breadth_first_queued_iterator tree<T, tree_node_allocator>::begin_breadth_first() const$/;"	f	class:tree
begin_fixed	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator tree<T, tree_node_allocator>::begin_fixed(const iterator_base& pos, unsigned int dp) const$/;"	f	class:tree
begin_is_source	include/OB-BGL/mol_graph.h	/^        bool begin_is_source; \/\/ a dereferenced out_edge_iterator$/;"	m	class:boost::graph_traits::edge_descriptor
begin_leaf	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator tree<T, tree_node_allocator>::begin_leaf() const$/;"	f	class:tree
begin_leaf	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator tree<T, tree_node_allocator>::begin_leaf(const iterator_base& top) const$/;"	f	class:tree
begin_line	include/libxml/parser.h	/^  unsigned long begin_line;$/;"	m	struct:_xmlParserNodeInfo
begin_pos	include/libxml/parser.h	/^  unsigned long begin_pos;$/;"	m	struct:_xmlParserNodeInfo
begin_post	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator tree<T, tree_node_allocator>::begin_post() const$/;"	f	class:tree
bfactor	src/formats/yasaraformat.cpp	/^  float bfactor;$/;"	m	struct:OpenBabel::atomid	file:
bflags	src/chains.cpp	/^    int *bflags;$/;"	m	struct:OpenBabel::__anon72	file:
bin	include/openbabel/parsmart.h	/^      bin;$/;"	m	union:OpenBabel::_AtomExpr	typeref:struct:OpenBabel::_AtomExpr::__anon51
bin	include/openbabel/parsmart.h	/^      bin;$/;"	m	union:OpenBabel::_BondExpr	typeref:struct:OpenBabel::_BondExpr::__anon53
bin_AuxTautTrans	src/formats/libinchi/ichiprt3.c	/^int bin_AuxTautTrans(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2,$/;"	f
binary	src/formats/smiley.h	/^      } binary;$/;"	m	union:Smiley::SmartsAtomExpr::__anon80	typeref:struct:Smiley::SmartsAtomExpr::__anon80::__anon84
binary	src/formats/smiley.h	/^    } binary;$/;"	m	struct:Smiley::SmartsBondExpr	typeref:struct:Smiley::SmartsBondExpr::__anon86
binvals	src/formats/confabreport.cpp	/^  vector<double> binvals;$/;"	m	class:OpenBabel::ConfabReport	file:
bitWord	include/inchi/ichi_bns.h	/^typedef U_SHORT  bitWord;$/;"	t
bit_or	include/openbabel/fingerprint.h	/^  struct bit_or$/;"	s	class:OpenBabel::OBFingerprint
bitindex	src/fingerprints/finger3.cpp	/^    int bitindex;$/;"	m	struct:OpenBabel::PatternFP::pattern	file:
bitmasks	include/openbabel/chains.h	/^      std::vector<unsigned short> bitmasks;$/;"	m	class:OpenBabel::OBChainsParser
bits	include/inchi/ichirvrs.h	/^             int     bits;$/;"	m	struct:tagChargeNodeList
bits	src/formats/libinchi/ichinorm.c	/^    AtTypeBitmap bits;$/;"	m	union:tagAtTypeUnion	file:
bitsoff	src/bitvec.cpp	/^  static unsigned int bitsoff[SETWORD] =$/;"	m	namespace:OpenBabel	file:
bitsperint	include/openbabel/fingerprint.h	/^  static const unsigned int bitsperint;\/\/ = 8 * sizeof(unsigned int);$/;"	m	class:OpenBabel::OBFingerprint
bitsperint	src/fingerprint.cpp	/^  const unsigned int OBFingerprint::bitsperint = 8 * sizeof(unsigned int);$/;"	m	class:OpenBabel::OBFingerprint	file:
bitword	include/inchi/ichi_bns.h	/^    bitWord **bitword;$/;"	m	struct:tagNodeSet
bitword	src/formats/libinchi/ichican2.c	/^    bitWord **bitword;$/;"	m	struct:tagNodeSet	file:
blDenominator	src/mcdlutil.cpp	53;"	d	file:
black_target	include/OB-BGL/verbose_visitors.h	/^    void black_target( edge e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
blue	include/openbabel/depict/painter.h	/^    double red, green, blue, alpha;$/;"	m	struct:OpenBabel::OBColor
blue	src/isomorphism.cpp	/^  static const char *blue   = "\\033[1;34m";$/;"	m	namespace:OpenBabel	file:
bn	src/mcdlutil.cpp	/^    int bn,w;$/;"	m	class:OpenBabel::StereoBondStore	file:
bond	include/OB-BGL/mol_graph.h	/^        OpenBabel::OBBond* bond;$/;"	m	class:boost::graph_traits::edge_descriptor
bond	include/openbabel/parsmart.h	/^    BondSpec *bond;$/;"	m	struct:OpenBabel::__anon56
bond	src/chains.cpp	/^    int atom,bond;$/;"	m	struct:OpenBabel::__anon73	file:
bond	src/formats/fastaformat.cpp	/^    ResidueBondRecord  bond[48];$/;"	m	struct:OpenBabel::ResidueRecord	file:
bond	src/formats/smilesformat.cpp	/^    OBBond *bond;$/;"	m	class:OpenBabel::OBBondClosureInfo	file:
bondColor	src/depict/depict.cpp	/^      OBColor    bondColor;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
bondConversion	src/mcdlutil.cpp	/^  int TSingleBond::bondConversion() {$/;"	f	class:OpenBabel::TSingleBond
bondCopy	src/mcdlutil.cpp	/^  void TSingleBond::bondCopy(TSingleBond * source) {$/;"	f	class:OpenBabel::TSingleBond
bondEnlarge	src/mcdlutil.cpp	/^  void TSimpleMolecule::bondEnlarge(int bN) {$/;"	f	class:OpenBabel::TSimpleMolecule
bondEquivalent	src/mcdlutil.cpp	/^  bool TSingleBond::bondEquivalent(TSingleBond * sBond, TSingleBond * qBond){$/;"	f	class:OpenBabel::TSingleBond
bondEquivalent	src/mcdlutil.cpp	/^  bool bondEquivalent(int bn1, int bn2, const std::vector<int> eqList, TSimpleMolecule & sm) {$/;"	f	namespace:OpenBabel
bondLength	src/depict/depict.cpp	/^      double     bondLength;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
bondLength	src/mcdlutil.cpp	/^  double TSimpleMolecule::bondLength(int index) {$/;"	f	class:OpenBabel::TSimpleMolecule
bondPrimitive	src/formats/smiley.h	/^    void bondPrimitive(int type) {}$/;"	f	struct:Smiley::CallbackBase
bondPrimitive	src/formats/smiley.h	/^    void bondPrimitive(int type)$/;"	f	struct:Smiley::PrintCallback
bondSpacing	src/depict/depict.cpp	/^      double     bondSpacing;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
bondUnitVector	src/mcdlutil.cpp	/^  void TSimpleMolecule::bondUnitVector(int bn, double& xv, double& yv) {$/;"	f	class:OpenBabel::TSimpleMolecule
bondValence	src/mcdlutil.cpp	/^  const int bondValence[NBONDTYPES] = {1,2,3,1,1,0,0,0,1,1,1};$/;"	m	namespace:OpenBabel	file:
bondWidth	src/depict/depict.cpp	/^      double     bondWidth;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
bond_connect	src/formats/fastaformat.cpp	/^    size_t  bond_connect; \/\/ the zero-based index of the residue atom to bond from$/;"	m	struct:OpenBabel::HelixParameters	file:
bond_cubic	src/forcefields/forcefieldmm2.h	/^      double bondunit, bond_cubic, bond_quartic;$/;"	m	class:OpenBabel::OBForceFieldMM2
bond_order	src/charges/eem.cpp	/^    int bond_order;$/;"	m	struct:OpenBabel::EEMParameter	file:
bond_order	src/formats/fastaformat.cpp	/^    int bond_order;$/;"	m	struct:OpenBabel::ResidueBondRecord	file:
bond_pos	include/inchi/ichitaut.h	/^    S_CHAR        bond_pos;$/;"	m	struct:tagDfsPath
bond_quartic	src/forcefields/forcefieldmm2.h	/^      double bondunit, bond_cubic, bond_quartic;$/;"	m	class:OpenBabel::OBForceFieldMM2
bond_stereo	include/inchi/inchi_api.h	/^    S_CHAR        bond_stereo[MAXVAL];      \/* 1=Up,4=Either,6=Down (this atom is at the pointing wedge)$/;"	m	struct:tagNormAtom
bond_stereo	include/inchi/inchi_api.h	/^    S_CHAR  bond_stereo[MAXVAL];  \/* inchi_BondStereo2D; negative if the *\/$/;"	m	struct:tagInchiAtom
bond_stereo	include/inchi/inpdef.h	/^    S_CHAR        bond_stereo[MAXVAL];     \/* 1=Up,4=Either,6=Down; this atom is at the pointing wedge,$/;"	m	struct:tagInputAtom
bond_stereo	include/inchi_api.h	/^    S_CHAR        bond_stereo[MAXVAL];      \/* 1=Up,4=Either,6=Down (this atom is at the pointing wedge)$/;"	m	struct:tagNormAtom
bond_stereo	include/inchi_api.h	/^    S_CHAR  bond_stereo[MAXVAL];  \/* inchi_BondStereo2D; negative if the *\/$/;"	m	struct:tagInchiAtom
bond_type	include/inchi/extr_ct.h	/^    U_CHAR bond_type[MAXVAL];$/;"	m	struct:tagAtom
bond_type	include/inchi/ichitaut.h	/^    U_CHAR        bond_type;$/;"	m	struct:tagDfsPath
bond_type	include/inchi/inchi_api.h	/^    S_CHAR  bond_type[MAXVAL];    \/* inchi_BondType *\/$/;"	m	struct:tagInchiAtom
bond_type	include/inchi/inchi_api.h	/^    U_CHAR        bond_type[MAXVAL];        \/* 1=single, 2=double, 3=triple, 4=1\/2 (bond order is 1 or 2) *\/$/;"	m	struct:tagNormAtom
bond_type	include/inchi/inpdef.h	/^    U_CHAR        bond_type[MAXVAL];       \/* 1..4; 4="aromatic", should be discouraged on input *\/$/;"	m	struct:tagInputAtom
bond_type	include/inchi_api.h	/^    S_CHAR  bond_type[MAXVAL];    \/* inchi_BondType *\/$/;"	m	struct:tagInchiAtom
bond_type	include/inchi_api.h	/^    U_CHAR        bond_type[MAXVAL];        \/* 1=single, 2=double, 3=triple, 4=1\/2 (bond order is 1 or 2) *\/$/;"	m	struct:tagNormAtom
bond_type	src/formats/libinchi/ichicans.c	/^    U_CHAR        bond_type;   \/*  *2 all same, not a real bond type *\/$/;"	m	struct:tagStereoBondNeighbor	file:
bond_type	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  bond_type;$/;"	m	struct:tagMobileHGroups	file:
bonds	src/canon.cpp	/^      std::vector<OBBond*> bonds;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::PartialCode	file:
bonds	src/formats/smiley.h	/^    std::vector<SmartsBond> bonds;$/;"	m	struct:Smiley::Smarts
bondsOverlapped	src/mcdlutil.cpp	/^  bool TSimpleMolecule::bondsOverlapped(int bN1, int bN2, double delta) {$/;"	f	class:OpenBabel::TSimpleMolecule
bonds_valence	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  bonds_valence;$/;"	m	struct:tagMobileHGroups	file:
bonds_valence_non_metal	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  bonds_valence_non_metal;$/;"	m	struct:tagMobileHGroups	file:
bondtyper	src/bondtyper.cpp	/^  OBBondTyper  bondtyper;$/;"	m	namespace:OpenBabel	file:
bondunit	src/forcefields/forcefieldmm2.h	/^      double bondunit, bond_cubic, bond_quartic;$/;"	m	class:OpenBabel::OBForceFieldMM2
bool_	include/openbabel/json/json.h	/^         bool bool_;$/;"	m	union:Json::Value::ValueHolder
booleanValue	include/openbabel/json/json.h	/^      booleanValue,  \/\/\/< bool value$/;"	e	enum:Json::ValueType
boolval	include/libxml/xpath.h	/^    int boolval;$/;"	m	struct:_xmlXPathObject
boost	include/OB-BGL/mol_graph.h	/^namespace boost \/\/ cannot specialize boost::graph_traits outside namespace$/;"	n
boost	include/OB-BGL/mol_graph.h	/^namespace boost {$/;"	n
bottom	src/mcdlutil.cpp	/^    double left,top,right,bottom;$/;"	m	class:OpenBabel::Rect	file:
bounds	src/distgeom.cpp	/^    Eigen::MatrixXf bounds, preMet;$/;"	m	class:OpenBabel::DistanceGeometryPrivate	file:
branch	src/formats/pdbqtformat.cpp	/^    branch() {clear();}$/;"	f	class:OpenBabel::branch
branch	src/formats/pdbqtformat.cpp	/^  class branch$/;"	c	namespace:OpenBabel	file:
breadth_first_iterator	include/openbabel/tree/tree.hh	/^		typedef breadth_first_queued_iterator breadth_first_iterator;$/;"	t	class:tree
breadth_first_queued_iterator	include/openbabel/tree/tree.hh	/^		class breadth_first_queued_iterator : public iterator_base {$/;"	c	class:tree
breadth_first_queued_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::breadth_first_queued_iterator::breadth_first_queued_iterator()$/;"	f	class:tree::breadth_first_queued_iterator
breadth_first_queued_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::breadth_first_queued_iterator::breadth_first_queued_iterator(const iterator_base& other)$/;"	f	class:tree::breadth_first_queued_iterator
breadth_first_queued_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::breadth_first_queued_iterator::breadth_first_queued_iterator(tree_node *tn)$/;"	f	class:tree::breadth_first_queued_iterator
breakeven_point	src/snprintf.c	344;"	d	file:
breakeven_point	src/snprintf.c	347;"	d	file:
breakeven_point	src/snprintf.c	350;"	d	file:
breakeven_point	src/snprintf.c	353;"	d	file:
breakeven_point	src/snprintf.c	361;"	d	file:
bstereo	src/mcdlutil.cpp	/^    short int bstereo;   \/* =0 - no, =1 - E , = 2 - Z, =3 E\/Z*\/$/;"	m	class:OpenBabel::TSingleBond	file:
bstereo_refs	src/mcdlutil.cpp	/^    vector<unsigned long> bstereo_refs;$/;"	m	class:OpenBabel::TSingleBond	file:
bswap_16	src/formats/chemdrawcdx.cpp	/^static inline unsigned short bswap_16(unsigned short x) {$/;"	f	file:
bswap_16	src/formats/fpsformat.cpp	/^static inline unsigned short bswap_16(unsigned short x) {$/;"	f	namespace:OpenBabel
bswap_32	src/formats/chemdrawcdx.cpp	/^static inline unsigned int bswap_32(unsigned int x) {$/;"	f	file:
bswap_32	src/formats/fpsformat.cpp	/^static inline unsigned int bswap_32(unsigned int x) {$/;"	f	namespace:OpenBabel
bswap_64	src/formats/chemdrawcdx.cpp	/^static inline unsigned long long bswap_64(unsigned long long x) {$/;"	f	file:
bt	src/forcefields/forcefieldghemical.h	/^      int bt; \/\/ bondtype (BTIJ)$/;"	m	class:OpenBabel::OBFFBondCalculationGhemical
bt	src/forcefields/forcefieldmmff94.h	/^      int bt; \/\/ bondtype (BTIJ)$/;"	m	class:OpenBabel::OBFFBondCalculationMMFF94
bt	src/forcefields/forcefielduff.h	/^      double bt; \/\/ bond order (e.g., 1.41 for amide)$/;"	m	class:OpenBabel::OBFFBondCalculationUFF
bucketIndex_	include/openbabel/json/json.h	/^         BucketIndex bucketIndex_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
bucketsSize_	include/openbabel/json/json.h	/^      BucketIndex bucketsSize_;$/;"	m	class:Json::ValueInternalMap
buckets_	include/openbabel/json/json.h	/^      ValueInternalLink *buckets_;$/;"	m	class:Json::ValueInternalMap
buf	include/libxml/parser.h	/^    xmlParserInputBufferPtr buf;      \/* UTF-8 encoded buffer *\/$/;"	m	struct:_xmlParserInput
buffer	include/inchi/sha2.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m	struct:__anon2
buffer	include/libxml/parser.h	/^  xmlParserNodeInfo* buffer;$/;"	m	struct:_xmlParserNodeInfoSeq
buffer	include/libxml/xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer
buffer	include/libxml/xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 or ISOLatin *\/$/;"	m	struct:_xmlOutputBuffer
buffer	src/formats/dlpolyformat.cpp	/^    char buffer[BUFF_SIZE];$/;"	m	class:OpenBabel::DlpolyInputReader	file:
buffer	src/formats/gamessukformat.cpp	/^    char buffer[BUFF_SIZE];$/;"	m	class:OpenBabel::GAMESSUKFormat	file:
buffer	src/formats/lpmdformat.cpp	/^  char buffer[BUFF_SIZE];$/;"	m	class:OpenBabel::LpmdFormat	file:
buffer_	src/formats/json/jsoncpp.cpp	/^      AllocatedType buffer_[objectPerAllocation];$/;"	m	struct:Json::BatchAllocator::BatchInfo	file:
builtInType	include/libxml/schemasInternals.h	/^    int builtInType;$/;"	m	struct:_xmlSchemaType
bwAtoms	include/openbabel/depict/depict.h	/^        bwAtoms              = 0x0001,$/;"	e	enum:OpenBabel::OBDepict::OptionType
bypass_sdf_data_items	include/inchi/lreadmol.h	/^int bypass_sdf_data_items( FILE* inp, long *cas_reg_no, char* comment,$/;"	f
byte_buffer_type	src/zipstream.h	/^    typedef byte_type* byte_buffer_type;$/;"	t	class:zlib_stream::basic_unzip_streambuf
byte_buffer_type	src/zipstream.h	/^    typedef byte_type* byte_buffer_type;$/;"	t	class:zlib_stream::basic_zip_streambuf
byte_type	src/zipstream.h	/^    typedef unsigned char byte_type;$/;"	t	class:zlib_stream::basic_unzip_streambuf
byte_type	src/zipstream.h	/^    typedef unsigned char byte_type;$/;"	t	class:zlib_stream::basic_zip_streambuf
byte_vector_type	src/zipstream.h	/^    typedef std::vector<byte_type> byte_vector_type;$/;"	t	class:zlib_stream::basic_unzip_streambuf
byte_vector_type	src/zipstream.h	/^    typedef std::vector<byte_type> byte_vector_type;$/;"	t	class:zlib_stream::basic_zip_streambuf
bytesToIEND	src/formats/pngformat.cpp	/^  unsigned bytesToIEND; \/\/number of bytes upto but not including the IEND chunk.$/;"	m	class:OpenBabel::PNGFormat	file:
c	include/openbabel/forcefield.h	/^    OBAtom *a, *b, *c, *d;$/;"	m	class:OpenBabel::OBFFConstraint
c	include/openbabel/forcefield.h	/^    OBAtom *c;$/;"	m	class:OpenBabel::OBFFCalculation3
c	include/openbabel/forcefield.h	/^    int         a, b, c, d;$/;"	m	class:OpenBabel::OBFFParameter
c	include/openbabel/molchrg.h	/^    double a, b, c;$/;"	m	class:OpenBabel::GasteigerState
c	include/openbabel/rand.h	/^    unsigned int m,a,c;$/;"	m	class:OpenBabel::OBRandom
c	src/formats/libinchi/ichiread.c	/^    int   c;$/;"	m	struct:tagLine	file:
c	src/formats/stlformat.cpp	/^    vector3 a, b, c;$/;"	m	struct:OpenBabel::Triangle	file:
c0	src/forcefields/forcefielduff.h	/^      double c0, c1, c2;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
c0	src/forcefields/forcefielduff.h	/^      double c0, c1, c2;$/;"	m	class:OpenBabel::OBFFOOPCalculationUFF
c1	include/libxml/tree.h	/^    struct _xmlElementContent *c1;	\/* first child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent
c1	src/forcefields/forcefielduff.h	/^      double c0, c1, c2;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
c1	src/forcefields/forcefielduff.h	/^      double c0, c1, c2;$/;"	m	class:OpenBabel::OBFFOOPCalculationUFF
c1	src/formats/libinchi/runichi.c	/^    int            nRet2, c1, c2, nComp, bRenumbErr;$/;"	m	struct:tagRenumbData	file:
c2	include/libxml/tree.h	/^    struct _xmlElementContent *c2;	\/* second child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent
c2	src/forcefields/forcefielduff.h	/^      double c0, c1, c2;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
c2	src/forcefields/forcefielduff.h	/^      double c0, c1, c2;$/;"	m	class:OpenBabel::OBFFOOPCalculationUFF
c2	src/formats/libinchi/runichi.c	/^    int            nRet2, c1, c2, nComp, bRenumbErr;$/;"	m	struct:tagRenumbData	file:
c26	src/formats/libinchi/ikey_base26.c	/^static const char *c26 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";     \/* added const 2007-09-26 DT *\/$/;"	v	file:
c2at	include/inchi/ichirvrs.h	/^    CMP2FHATOMS c2at[MAX_DIFF_FIXH];$/;"	m	struct:tagStructCmpTwoFixedH
c2at	include/inchi/ichirvrs.h	/^    CMP2MHATOMS c2at[MAX_DIFF_FIXH];$/;"	m	struct:tagStructCmpTwoMobileH
c2f	src/formats/cifformat.cpp	/^  void CIFData::c2f(float &x,float &y, float &z)$/;"	f	class:OpenBabel::CIFData
cAcceptor	include/inchi/ichitaut.h	/^    S_CHAR cAcceptor;$/;"	m	struct:tagEndpointInfo
cAtomicNumber	include/inchi/ichicant.h	/^    S_CHAR cAtomicNumber;$/;"	m	struct:tagAtomInvariantBytes
cChangeValence	src/formats/libinchi/ichitaut.c	/^    S_CHAR  cChangeValence; \/* charge increases valence by this value *\/$/;"	m	struct:tagChargeType	file:
cCharge	include/inchi/ichi.h	/^    S_CHAR cCharge;$/;"	m	struct:tagOrigInfo
cChargeType	src/formats/libinchi/ichitaut.c	/^    S_CHAR  cChargeType;    \/* different types are treated separately *\/$/;"	m	struct:tagChargeType	file:
cDoNotAddH	include/inchi/ichirvrs.h	/^    char   cDoNotAddH;         \/* InChI does not add H to this element *\/$/;"	m	struct:tagAtomIonPrperies
cDonor	include/inchi/ichitaut.h	/^    S_CHAR cDonor;$/;"	m	struct:tagEndpointInfo
cFlags	include/inchi/extr_ct.h	/^    S_CHAR cFlags;$/;"	m	struct:tagAtom
cFlags	include/inchi/inchi_api.h	/^    S_CHAR        cFlags;                   \/* AT_FLAG_ISO_H_POINT: atom may have exchangeable isotopic H *\/$/;"	m	struct:tagNormAtom
cFlags	include/inchi/inpdef.h	/^    S_CHAR        cFlags;                  \/* AT_FLAG_ISO_H_POINT *\/$/;"	m	struct:tagInputAtom
cFlags	include/inchi/inpdef.h	/^    S_CHAR    cFlags;                  \/* AT_FLAG_ISO_H_POINT *\/$/;"	m	struct:tagAtomParmsForDrawing
cFlags	include/inchi_api.h	/^    S_CHAR        cFlags;                   \/* AT_FLAG_ISO_H_POINT: atom may have exchangeable isotopic H *\/$/;"	m	struct:tagNormAtom
cGroupType	include/inchi/ichitaut.h	/^    U_CHAR    cGroupType;$/;"	m	struct:tagChargeGroup
cHighlightTheAtom	include/inchi/inpdef.h	/^    S_CHAR    cHighlightTheAtom;$/;"	m	struct:tagAtomParmsForDrawing
cInitCharge	include/inchi/ichirvrs.h	/^    S_CHAR cInitCharge;        \/* initial charge on the atom (not included in ChargeStruct *\/$/;"	m	struct:tagAtomIonPrperies
cInitFlowToMetal	include/inchi/ichirvrs.h	/^    char   cInitFlowToMetal;    \/* sum of init flow to metal atoms *\/$/;"	m	struct:tagAtomIonPrperies
cInitFreeValences	include/inchi/ichirvrs.h	/^    char   cInitFreeValences;  \/* number of 'dots' to connect; charges are marked separately *\/$/;"	m	struct:tagAtomIonPrperies
cInitOrigValenceToMetal	include/inchi/ichirvrs.h	/^    char   cInitOrigValenceToMetal; \/* sum of init bond orders to metal atoms *\/$/;"	m	struct:tagAtomIonPrperies
cInitValenceToMetal	include/inchi/ichirvrs.h	/^    char   cInitValenceToMetal; \/* sum of init adjusted bond orders to metal atoms *\/$/;"	m	struct:tagAtomIonPrperies
cKetoEnolCode	include/inchi/ichitaut.h	/^    S_CHAR cKetoEnolCode; \/* 1 => carbon, 2 => oxygen *\/ \/* post v.1 feature *\/$/;"	m	struct:tagEndpointInfo
cMaxFlowToMetal	include/inchi/ichirvrs.h	/^    char   cMaxFlowToMetal;    \/* max total edge flow to metal atoms *\/$/;"	m	struct:tagAtomIonPrperies
cMetal	include/inchi/ichirvrs.h	/^    char   cMetal;             \/* the element is a metal *\/$/;"	m	struct:tagAtomIonPrperies
cMetal	include/inchi/ichirvrs.h	/^    char   cMetal;$/;"	m	struct:tagChargeChangeCandidate
cMinRingSize	include/inchi/ichirvrs.h	/^    char   cMinRingSize;       \/* min ring size for atoms that have 2 bonds only *\/$/;"	m	struct:tagAtomIonPrperies
cMobile	include/inchi/ichitaut.h	/^    S_CHAR cMobile;$/;"	m	struct:tagEndpointInfo
cMoveableCharge	include/inchi/ichitaut.h	/^    S_CHAR cMoveableCharge;$/;"	m	struct:tagEndpointInfo
cNeutralBondsValence	include/inchi/ichitaut.h	/^    S_CHAR cNeutralBondsValence;$/;"	m	struct:tagEndpointInfo
cNotExactlyHillOrderNumber	include/inchi/ichicant.h	/^    S_CHAR cNotExactlyHillOrderNumber;$/;"	m	struct:tagAtomInvariantBytes
cNumBondsToMetal	include/inchi/ichirvrs.h	/^    char   cNumBondsToMetal;   \/* number of bonds to metal *\/$/;"	m	struct:tagAtomIonPrperies
cNumBondsToMetal	include/inchi/ichirvrs.h	/^    char   cNumBondsToMetal;$/;"	m	struct:tagChargeChangeCandidate
cNumChargeStates	include/inchi/ichirvrs.h	/^    char   cNumChargeStates;$/;"	m	struct:tagChargeChangeCandidate
cNumValenceElectrons	include/inchi/ichirvrs.h	/^    char   cNumValenceElectrons;$/;"	m	struct:tagAtomIonPrperies
cNumValenceElectrons	include/inchi/ichirvrs.h	/^    char   cNumValenceElectrons;$/;"	m	struct:tagChargeChangeCandidate
cNum_tautomer	include/inchi/ichicant.h	/^    AT_RANK         cNum_tautomer;        \/* 0 or for tautomer endpoint: number of endpoints in the group *\/$/;"	m	struct:tagAtomInvariant
cNum_tautomer_iso	include/inchi/ichicant.h	/^    AT_RANK         cNum_tautomer_iso[T_NUM_ISOTOPIC]; \/* 0 or numbers from t_group *\/$/;"	m	struct:tagAtomInvariant
cNum_tautomer_num	include/inchi/ichicant.h	/^    AT_RANK         cNum_tautomer_num[T_NUM_NO_ISOTOPIC]; \/* 0 or numbers from t_gtroup *\/$/;"	m	struct:tagAtomInvariant
cNumberOfAttachedHydrogens	include/inchi/ichicant.h	/^    S_CHAR cNumberOfAttachedHydrogens;$/;"	m	struct:tagAtomInvariantBytes
cNumberOfConnections	include/inchi/ichicant.h	/^    S_CHAR cNumberOfConnections;$/;"	m	struct:tagAtomInvariantBytes
cPAIR	src/formats/libinchi/ichitaut.c	2078;"	d	file:
cPeriodicNumber	include/inchi/ichirvrs.h	/^    U_CHAR cPeriodicNumber;  \/* number in Periodic Table of elements *\/$/;"	m	struct:tagAtomIonPrperies
cPeriodicRowNumber	include/inchi/ichirvrs.h	/^    char   cPeriodicRowNumber;$/;"	m	struct:tagAtomIonPrperies
cPeriodicRowNumber	include/inchi/ichirvrs.h	/^    char   cPeriodicRowNumber;$/;"	m	struct:tagChargeChangeCandidate
cRadical	include/inchi/ichi.h	/^    S_CHAR cRadical;       \/* 0=none, 1=doublet, 2=triplet, 3=unknown *\/$/;"	m	struct:tagOrigInfo
cSource	include/inchi/ichirvrs.h	/^    S_CHAR  *cSource;$/;"	m	struct:tagBfsQueue
cStereoBondNumber	include/inchi/inpdef.h	/^    S_CHAR    cStereoBondNumber[MAX_STEREO_BONDS];$/;"	m	struct:tagAtomParmsForDrawing
cStereoBondParity	include/inchi/inpdef.h	/^    S_CHAR    cStereoBondParity[MAX_STEREO_BONDS];$/;"	m	struct:tagAtomParmsForDrawing
cStereoBondWarning	include/inchi/inpdef.h	/^    S_CHAR    cStereoBondWarning[MAX_STEREO_BONDS];$/;"	m	struct:tagAtomParmsForDrawing
cStereoCenterParity	include/inchi/inpdef.h	/^    S_CHAR    cStereoCenterParity;$/;"	m	struct:tagAtomParmsForDrawing
cUnusualValence	include/inchi/ichi.h	/^    S_CHAR cUnusualValence; \/* see get_unusual_el_valence() *\/$/;"	m	struct:tagOrigInfo
cValence	src/formats/libinchi/util.c	/^     S_CHAR  cValence[NUM_ATOM_CHARGES][MAX_NUM_VALENCES];$/;"	m	struct:tagElData	file:
c_candidate	include/inchi/ichitaut.h	/^    C_CANDIDATE *c_candidate;$/;"	m	struct:tagChargeGroupsInfo
c_expterm	src/forcefields/forcefieldmm2.h	/^      double a_expterm, b_expterm, c_expterm;$/;"	m	class:OpenBabel::OBForceFieldMM2
c_group	include/inchi/ichitaut.h	/^    C_GROUP *c_group;$/;"	m	struct:tagChargeGroupsInfo
c_point	include/inchi/inchi_api.h	/^    AT_NUMBR      c_point;                  \/* id of a positive charge group *\/$/;"	m	struct:tagNormAtom
c_point	include/inchi/inpdef.h	/^    AT_NUMB       c_point;                 \/* id of a positive charge group *\/$/;"	m	struct:tagInputAtom
c_point	include/inchi_api.h	/^    AT_NUMBR      c_point;                  \/* id of a positive charge group *\/$/;"	m	struct:tagNormAtom
c_str	include/openbabel/json/json.h	/^      const char *c_str() const$/;"	f	class:Json::StaticString
c_str	src/formats/json/jsoncpp.cpp	/^Value::CZString::c_str() const$/;"	f	class:Json::Value::CZString
calc_rms	src/obutil.cpp	/^  double calc_rms(double *r,double *f, unsigned int N)$/;"	f	namespace:OpenBabel
calcvolume	include/openbabel/generic.h	/^    calcvolume  \/\/!<$/;"	e	enum:OpenBabel::atomreftype
call_fill_crc32_data	src/formats/libinchi/ichican2.c	/^static call_fill_crc32_data = 1;$/;"	v	file:
call_functor	include/OB-BGL/mol_graph.h	/^call_functor(functor func, Tag) {$/;"	f	namespace:boost
can_be_a_stereo_atom_with_isotopic_H	src/formats/libinchi/ichister.c	/^int can_be_a_stereo_atom_with_isotopic_H( inp_ATOM *at, int cur_at )$/;"	f
can_be_a_stereo_atom_with_isotopic_H	src/formats/libinchi/ichister.c	/^int can_be_a_stereo_atom_with_isotopic_H( inp_ATOM *at, int cur_at, int bPointedEdgeStereo )$/;"	f
can_be_a_stereo_bond_with_isotopic_H	src/formats/libinchi/ichister.c	/^int can_be_a_stereo_bond_with_isotopic_H( inp_ATOM *at, int cur_at, INCHI_MODE nMode )$/;"	f
canon_passed	include/inchi/inchi_dll_a.h	/^    int             canon_passed;$/;"	m	struct:tagINCHIGEN_CONTROL
canon_rank	include/inchi/ichicomn.h	/^    AT_RANK canon_rank;  \/* min. canon. number *\/$/;"	m	struct:tagEquNeigh
canonizeCycle	src/mcdlutil.cpp	/^  void TSimpleMolecule::canonizeCycle(int ringSize, std::vector<int> & bondList) {$/;"	f	class:OpenBabel::TSimpleMolecule
canonizeMCDL	src/mcdlutil.cpp	/^  int canonizeMCDL(const std::string atomBlock, std::vector<std::string> & structureList) {$/;"	f	namespace:OpenBabel
cap	include/inchi/ichi_bns.h	/^    EdgeFlow   cap;$/;"	m	struct:tagBNS_FLOW_CHANGES
cap	include/inchi/ichi_bns.h	/^  EdgeFlow  cap;                            \/* Edge capacity *\/$/;"	m	struct:BnsEdge
cap	include/inchi/ichi_bns.h	/^  VertexFlow cap;                            \/* Edge capacity *\/$/;"	m	struct:BnsStEdge
cap	include/inchi/ichirvrs.h	/^    S_CHAR  cap;$/;"	m	struct:tagEdgeCapFlow
cap	include/inchi/ichirvrs.h	/^    S_CHAR  cap;$/;"	m	struct:tagVertCapFlow
cap0	include/inchi/ichi_bns.h	/^  EdgeFlow  cap0;                           \/* Initial edge capacity *\/$/;"	m	struct:BnsEdge
cap0	include/inchi/ichi_bns.h	/^  VertexFlow cap0;                           \/* Initial edge capacity *\/$/;"	m	struct:BnsStEdge
cap_st1	include/inchi/ichi_bns.h	/^    VertexFlow cap_st1;$/;"	m	struct:tagBNS_FLOW_CHANGES
cap_st2	include/inchi/ichi_bns.h	/^    VertexFlow cap_st2;$/;"	m	struct:tagBNS_FLOW_CHANGES
card_found	src/formats/PQSformat.cpp	/^  bool card_found(char *s)$/;"	f	namespace:OpenBabel
catalogs	include/libxml/parser.h	/^    void              *catalogs;      \/* document's own catalog *\/$/;"	m	struct:_xmlParserCtxt
category	include/OB-BGL/mol_graph.h	/^    typedef boost::read_write_property_map_tag category;$/;"	t	class:OBAtomMap
category	include/OB-BGL/mol_graph.h	/^    typedef boost::read_write_property_map_tag category;$/;"	t	class:OBBondMap
cdataBlock	include/libxml/parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandler
cdataBlock	include/libxml/parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandlerV1
cdataBlockSAXFunc	include/libxml/parser.h	/^typedef void (*cdataBlockSAXFunc) ($/;"	t
cdecl_CheckINCHI	src/formats/libinchi/inchi_dll.c	/^int cdecl_CheckINCHI(const char *szINCHI, const int strict)$/;"	f
cdecl_CheckINCHIKey	src/formats/libinchi/ikey_dll.c	/^int cdecl_CheckINCHIKey(const char *szINCHIKey,const int strict)$/;"	f
cdecl_FreeINCHI	src/formats/libinchi/inchi_dll.c	/^void cdecl_FreeINCHI( inchi_Output *out )$/;"	f
cdecl_FreeStdINCHI	src/formats/libinchi/inchi_dll.c	/^void cdecl_FreeStdINCHI( inchi_Output *out )$/;"	f
cdecl_FreeStructFromINCHI	src/formats/libinchi/inchi_dll.c	/^void cdecl_FreeStructFromINCHI( inchi_OutputStruct *outStruct )$/;"	f
cdecl_FreeStructFromStdINCHI	src/formats/libinchi/inchi_dll.c	/^void cdecl_FreeStructFromStdINCHI( inchi_OutputStruct *outStruct )$/;"	f
cdecl_Free_inchi_Input	src/formats/libinchi/inchi_dll.c	/^void cdecl_Free_inchi_Input( inchi_Input *pInp )$/;"	f
cdecl_Free_std_inchi_Input	src/formats/libinchi/inchi_dll.c	/^void cdecl_Free_std_inchi_Input( inchi_Input *pInp )$/;"	f
cdecl_GetINCHI	src/formats/libinchi/inchi_dll.c	/^int cdecl_GetINCHI( inchi_Input *inp, inchi_Output *out )$/;"	f
cdecl_GetINCHIKeyFromINCHI	src/formats/libinchi/ikey_dll.c	/^int cdecl_GetINCHIKeyFromINCHI(const char* szINCHISource, $/;"	f
cdecl_GetINCHIfromINCHI	src/formats/libinchi/inchi_dll.c	/^int cdecl_GetINCHIfromINCHI( inchi_InputINCHI *inpInChI, inchi_Output *out )$/;"	f
cdecl_GetStdINCHI	src/formats/libinchi/inchi_dll.c	/^int cdecl_GetStdINCHI( inchi_Input *inp, inchi_Output *out )$/;"	f
cdecl_GetStdINCHIKeyFromStdINCHI	src/formats/libinchi/ikey_dll.c	/^int cdecl_GetStdINCHIKeyFromStdINCHI(const char* szINCHISource, char* szINCHIKey)$/;"	f
cdecl_GetStringLength	src/formats/libinchi/inchi_dll.c	/^int cdecl_GetStringLength( char *p )$/;"	f
cdecl_GetStructFromINCHI	src/formats/libinchi/inchi_dll.c	/^int cdecl_GetStructFromINCHI( inchi_InputINCHI *inpInChI, inchi_OutputStruct *outStruct )$/;"	f
cdecl_GetStructFromStdINCHI	src/formats/libinchi/inchi_dll.c	/^int cdecl_GetStructFromStdINCHI( inchi_InputINCHI *inpInChI, inchi_OutputStruct *outStruct )$/;"	f
cdecl_Get_inchi_Input_FromAuxInfo	src/formats/libinchi/inchi_dll.c	/^int cdecl_Get_inchi_Input_FromAuxInfo( char *szInchiAuxInfo, $/;"	f
cdecl_Get_std_inchi_Input_FromAuxInfo	src/formats/libinchi/inchi_dll.c	/^int cdecl_Get_std_inchi_Input_FromAuxInfo( char *szInchiAuxInfo, $/;"	f
cdecl_INCHIGEN_Create	src/formats/libinchi/inchi_dll_a.c	/^INCHIGEN_HANDLE cdecl_INCHIGEN_Create(void) $/;"	f
cdecl_INCHIGEN_Destroy	src/formats/libinchi/inchi_dll_a.c	/^void cdecl_INCHIGEN_Destroy( INCHIGEN_HANDLE HGen ) $/;"	f
cdecl_INCHIGEN_DoCanonicalization	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_INCHIGEN_DoCanonicalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
cdecl_INCHIGEN_DoNormalization	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_INCHIGEN_DoNormalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
cdecl_INCHIGEN_DoSerialization	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_INCHIGEN_DoSerialization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Output * pResults ) $/;"	f
cdecl_INCHIGEN_Reset	src/formats/libinchi/inchi_dll_a.c	/^void cdecl_INCHIGEN_Reset( INCHIGEN_HANDLE HGen , INCHIGEN_DATA *pGenData, inchi_Output *pResults) $/;"	f
cdecl_INCHIGEN_Setup	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_INCHIGEN_Setup( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Input * pInp) $/;"	f
cdecl_STDINCHIGEN_Create	src/formats/libinchi/inchi_dll_a.c	/^INCHIGEN_HANDLE cdecl_STDINCHIGEN_Create(void) $/;"	f
cdecl_STDINCHIGEN_Destroy	src/formats/libinchi/inchi_dll_a.c	/^void cdecl_STDINCHIGEN_Destroy( INCHIGEN_HANDLE HGen ) $/;"	f
cdecl_STDINCHIGEN_DoCanonicalization	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_STDINCHIGEN_DoCanonicalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
cdecl_STDINCHIGEN_DoNormalization	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_STDINCHIGEN_DoNormalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
cdecl_STDINCHIGEN_DoSerialization	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_STDINCHIGEN_DoSerialization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Output * pResults ) $/;"	f
cdecl_STDINCHIGEN_Reset	src/formats/libinchi/inchi_dll_a.c	/^void cdecl_STDINCHIGEN_Reset( INCHIGEN_HANDLE HGen , INCHIGEN_DATA *pGenData, inchi_Output *pResults) $/;"	f
cdecl_STDINCHIGEN_Setup	src/formats/libinchi/inchi_dll_a.c	/^int cdecl_STDINCHIGEN_Setup( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Input * pInp) $/;"	f
cell	include/openbabel/grid.h	/^    std::vector<std::vector<int> > cell;$/;"	m	class:OpenBabel::OBProxGrid
cell	src/formats/mmcifformat.cpp	/^     cell,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
center	include/openbabel/stereo/bindings.h	/^    unsigned long center;$/;"	m	struct:OpenBabel::OBSquarePlanarConfig
center	include/openbabel/stereo/bindings.h	/^    unsigned long center;$/;"	m	struct:OpenBabel::OBTetrahedralConfig
center	include/openbabel/stereo/squareplanar.h	/^      unsigned long center; \/\/<! The central atom id.$/;"	m	struct:OpenBabel::OBSquarePlanarStereo::Config
center	include/openbabel/stereo/tetrahedral.h	/^      unsigned long center; \/\/<! The center (chiral) atom id.$/;"	m	struct:OpenBabel::OBTetrahedralStereo::Config
center_coords	src/obutil.cpp	/^  vector3 center_coords(double *c, unsigned int size)$/;"	f	namespace:OpenBabel
central_atom	include/inchi/inchi_api.h	/^    AT_NUM  central_atom;   \/* central tetrahedral atom or a central *\/$/;"	m	struct:tagINCHIStereo0D
central_atom	include/inchi_api.h	/^    AT_NUM  central_atom;   \/* central tetrahedral atom or a central *\/$/;"	m	struct:tagINCHIStereo0D
chain_marker	src/formats/MNAformat.cpp	/^			static string const chain_marker;$/;"	m	class:OpenBabel::MNAFormat	file:
chain_marker	src/formats/MNAformat.cpp	/^	string const MNAFormat::chain_marker = "-";$/;"	m	class:OpenBabel::MNAFormat	file:
chains	include/openbabel/chains.h	/^      std::vector<char>           chains;$/;"	m	class:OpenBabel::OBChainsParser
chainsparser	include/openbabel/mol.h	/^  EXTERN  OBChainsParser   chainsparser;$/;"	m	namespace:OpenBabel
chainsparser	src/chains.cpp	/^  OBChainsParser chainsparser;$/;"	m	namespace:OpenBabel	file:
changeParity	src/mcdlutil.cpp	/^  std::string changeParity(std::string data) {$/;"	f	namespace:OpenBabel
changeParityBond	src/mcdlutil.cpp	/^  std::string changeParityBond(std::string data) {$/;"	f	namespace:OpenBabel
change_sign3	src/formats/libinchi/ichister.c	/^double* change_sign3( const double a[], double result[] )$/;"	f
char_type	src/zipstream.h	/^    typedef char          char_type;$/;"	t	class:zlib_stream::basic_unzip_streambuf
char_type	src/zipstream.h	/^    typedef char          char_type;$/;"	t	class:zlib_stream::basic_zip_streambuf
char_type	src/zipstream.h	/^    typedef char char_type;$/;"	t	class:zlib_stream::basic_zip_ostream
char_vector_type	src/zipstream.h	/^    typedef std::vector<char_type> char_vector_type;$/;"	t	class:zlib_stream::basic_unzip_streambuf
char_vector_type	src/zipstream.h	/^    typedef std::vector<char_type> char_vector_type;$/;"	t	class:zlib_stream::basic_zip_streambuf
characters	include/libxml/parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandler
characters	include/libxml/parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandlerV1
charactersSAXFunc	include/libxml/parser.h	/^typedef void (*charactersSAXFunc) (void *ctx,$/;"	t
charf	include/zconf.h	/^typedef char  FAR charf;$/;"	t
charf	include/zconf.h	54;"	d
charge	include/inchi/extr_ct.h	/^    S_CHAR charge;$/;"	m	struct:tagAtom
charge	include/inchi/ichirvrs.h	/^    S_CHAR        charge;$/;"	m	struct:tagStructFromInChI
charge	include/inchi/inchi_api.h	/^    S_CHAR        charge;                   \/* charge *\/$/;"	m	struct:tagNormAtom
charge	include/inchi/inchi_api.h	/^    S_CHAR  charge;               \/* positive or negative; 0 => no charge *\/$/;"	m	struct:tagInchiAtom
charge	include/inchi/inpdef.h	/^    S_CHAR        charge;                  \/* charge *\/$/;"	m	struct:tagInputAtom
charge	include/inchi_api.h	/^    S_CHAR        charge;                   \/* charge *\/$/;"	m	struct:tagNormAtom
charge	include/inchi_api.h	/^    S_CHAR  charge;               \/* positive or negative; 0 => no charge *\/$/;"	m	struct:tagInchiAtom
charge	src/formats/adfformat.cpp	/^        double charge;$/;"	m	struct:OpenBabel::OBT41Format::AtomData	file:
charge	src/formats/libinchi/ichitaut.c	/^    S_CHAR  charge;$/;"	m	struct:tagChargeType	file:
chargeConversion	src/mcdlutil.cpp	/^  int TSingleAtom::chargeConversion() {$/;"	f	class:OpenBabel::TSingleAtom
chargeDeltaValency	src/mcdlutil.cpp	/^  int TSingleAtom::chargeDeltaValency(int atomNo) {$/;"	f	class:OpenBabel::TSingleAtom
chargeVal	src/mcdlutil.cpp	/^  const int chargeVal[NELEMMCDL] = {  \/\/0 - dummy$/;"	m	namespace:OpenBabel	file:
charge_on_atoms	include/inchi/ichirvrs.h	/^    int      charge_on_atoms;   \/* charge permanently sitting on atoms *\/$/;"	m	struct:tagAllTCGroups
charset	include/libxml/parser.h	/^    int                charset;       \/* encoding of the in-memory content$/;"	m	struct:_xmlParserCtxt
charset	include/libxml/tree.h	/^    int             charset;    \/* encoding of the in-memory content$/;"	m	struct:_xmlDoc
check	src/pointgroup.cpp	/^    int     (*check)( void ) ;        \/* Additional verification routine, not used  *\/$/;"	m	struct:OpenBabel::__anon89	file:
checkBonds	src/isomorphism.cpp	/^      bool checkBonds(State &state, OBQueryAtom *queryAtom)$/;"	f	class:OpenBabel::VF2Mapper
checkColumns	src/formats/orcaformat.cpp	/^  string OrcaOutputFormat::checkColumns(string checkBuffer)$/;"	f	class:OpenBabel::OrcaOutputFormat
checkForMap	src/isomorphism.cpp	/^      bool checkForMap(State &state)$/;"	f	class:OpenBabel::VF2Mapper
checkIndex	include/libxml/parser.h	/^    long            checkIndex;       \/* used by progressive parsing lookup *\/$/;"	m	struct:_xmlParserCtxt
checkLigands	src/stereo/perception.cpp	/^  bool checkLigands(const Type &currentPara, const OBStereoUnitSet &units)$/;"	f	namespace:OpenBabel
checkNextChar	src/formats/smiley.h	/^      bool checkNextChar(char chr)$/;"	f	class:Smiley::Parser
checkOverlapped	src/mcdlutil.cpp	/^  bool TSimpleMolecule::checkOverlapped() {$/;"	f	class:OpenBabel::TSimpleMolecule
check_crc	src/zipstreamimpl.h	/^basic_zip_istream<charT, traits>::check_crc(void)$/;"	f	class:basic_zip_istream
check_data_size	src/zipstreamimpl.h	/^basic_zip_istream<charT, traits>::check_data_size(void) const$/;"	f	class:basic_zip_istream
check_header	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::check_header(void)$/;"	f	class:basic_unzip_streambuf
check_transform_order	src/pointgroup.cpp	/^    check_transform_order( SYMMETRY_ELEMENT *elem )$/;"	f	class:OpenBabel::PointGroupPrivate
check_transform_quality	src/pointgroup.cpp	/^    check_transform_quality( SYMMETRY_ELEMENT *elem )$/;"	f	class:OpenBabel::PointGroupPrivate
checkerboard	src/formats/povrayformat.cpp	/^    bool sky, sphere, trans_texture, checkerboard;$/;"	m	class:OpenBabel::PovrayFormat	file:
chem_bonds_valence	include/inchi/extr_ct.h	/^    S_CHAR chem_bonds_valence; \/* 8-24-00 to treat tautomer centerpoints, etc. *\/$/;"	m	struct:tagAtom
chem_bonds_valence	include/inchi/inchi_api.h	/^    S_CHAR        chem_bonds_valence;       \/* sum of bond types (1,2,3); type 4 needs special treatment *\/$/;"	m	struct:tagNormAtom
chem_bonds_valence	include/inchi/inpdef.h	/^    S_CHAR        chem_bonds_valence;      \/* sum of bond types (type 4 needs special treatment) *\/$/;"	m	struct:tagInputAtom
chem_bonds_valence	include/inchi_api.h	/^    S_CHAR        chem_bonds_valence;       \/* sum of bond types (1,2,3); type 4 needs special treatment *\/$/;"	m	struct:tagNormAtom
chem_valence	include/inchi/ichirvrs.h	/^    char   chem_valence;$/;"	m	struct:tagChargeChangeCandidate
chemical	src/formats/mmcifformat.cpp	/^     chemical,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
chemical_formula	src/formats/mmcifformat.cpp	/^     chemical_formula,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
chi	include/openbabel/molchrg.h	/^    double chi;$/;"	m	class:OpenBabel::GasteigerState
child	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::child(const iterator_base& it, unsigned int num)$/;"	f	class:tree
childValues_	include/openbabel/json/json.h	/^      ChildValues childValues_;$/;"	m	class:Json::StyledStreamWriter
childValues_	include/openbabel/json/json.h	/^      ChildValues childValues_;$/;"	m	class:Json::StyledWriter
children	include/libxml/entities.h	/^    struct _xmlNode    *children;	\/* First child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
children	include/libxml/tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
children	include/libxml/tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
children	include/libxml/tree.h	/^    struct _xmlNode *children;	\/* parent->childs link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
children	include/libxml/tree.h	/^    struct _xmlNode *children;	\/* the document tree *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
children	include/libxml/tree.h	/^    struct _xmlNode *children;	\/* the value of the property *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode
children	include/libxml/tree.h	/^    struct _xmlNode *children;	\/* the value of the property link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
children	src/formats/pdbqtformat.cpp	/^    set <unsigned int> children;$/;"	m	class:OpenBabel::branch	file:
chiral	src/formats/smiley.h	/^        Chirality chiral;$/;"	m	struct:Smiley::Parser::ChiralInfo
chiral	src/formats/smiley.h	/^    bool chiral;$/;"	m	struct:Smiley::Smarts
chiral	src/formats/smiley.h	/^    bool chiral;$/;"	m	struct:Smiley::SmartsAtom
chiralWatch	src/formats/smilesformat.cpp	/^    bool chiralWatch; \/\/ set when a tetrahedral atom is read$/;"	m	class:OpenBabel::OBSmilesParser	file:
chiral_flag	include/openbabel/parsmart.h	/^    int chiral_flag;$/;"	m	struct:OpenBabel::__anon55
ci_char_traits	src/formats/cifformat.cpp	/^  struct ci_char_traits : public std::char_traits<char>$/;"	s	namespace:OpenBabel	file:
ci_string	src/formats/cifformat.cpp	/^  typedef std::basic_string<char, ci_char_traits> ci_string;$/;"	t	namespace:OpenBabel	file:
classifyCisTransNbrSymClasses	src/stereo/perception.cpp	/^  int classifyCisTransNbrSymClasses(const std::vector<unsigned int> &symClasses, OBBond *doubleBond, OBAtom *atom)$/;"	f	namespace:OpenBabel
classifyTetrahedralNbrSymClasses	src/stereo/perception.cpp	/^  int classifyTetrahedralNbrSymClasses(const std::vector<unsigned int> &symClasses, OBAtom *atom)$/;"	f	namespace:OpenBabel
clean_charge_val	src/formats/libinchi/ichirvr1.c	/^int clean_charge_val( CHARGE_VAL *pChargeVal, int len, inp_ATOM *atom, VAL_AT *pVA,$/;"	f
clean_paired_atoms	src/pointgroup.cpp	/^    void clean_paired_atoms(SYMMETRY_ELEMENT *elem)$/;"	f	class:OpenBabel::PointGroupPrivate
cleanup	include/libxml/uri.h	/^    int  cleanup;	\/* parsing potentially unclean URI *\/$/;"	m	struct:_xmlURI
clear	include/openbabel/forcefield.h	/^    void clear ()$/;"	f	class:OpenBabel::OBFFParameter
clear	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::clear()$/;"	f	class:tree
clear	src/formats/json/jsoncpp.cpp	/^Value::clear()$/;"	f	class:Json::Value
clear	src/formats/pdbqtformat.cpp	/^    void clear() {done=false; index=0; depth=0; connecting_atom_parent=0; connecting_atom_branch=0;$/;"	f	class:OpenBabel::branch
clear	src/formats/smiley.h	/^    void clear() {}$/;"	f	struct:Smiley::CallbackBase
clear	src/formats/smiley.h	/^    void clear()$/;"	f	struct:Smiley::PrintCallback
clear	src/formats/smileyformat.cpp	/^    void clear()$/;"	f	struct:OpenBabel::OpenBabelCallback
clear	src/mcdlutil.cpp	/^  void TSimpleMolecule::clear() {$/;"	f	class:OpenBabel::TSimpleMolecule
clear	src/mcdlutil.cpp	/^  void TemplateRedraw::clear() {$/;"	f	class:OpenBabel::TemplateRedraw
clearArrayList	src/formats/ArrayList.c	/^void clearArrayList(ArrayList *array){$/;"	f
clear_t_group_info	src/formats/libinchi/ichirvr1.c	/^void clear_t_group_info( T_GROUP_INFO *ti )$/;"	f
clockTime	include/inchi/ichitime.h	/^    clock_t clockTime;$/;"	m	struct:tagInchiTime
clockTime	include/inchi/ichitime.h	/^    unsigned long  clockTime; \/* Time in seconds since midnight (00:00:00), January 1, 1970;$/;"	m	struct:tagInchiTime
clone	src/mcdlutil.cpp	/^  TSingleAtom * TSingleAtom::clone() {$/;"	f	class:OpenBabel::TSingleAtom
clone	src/mcdlutil.cpp	/^  TSingleBond * TSingleBond::clone() {$/;"	f	class:OpenBabel::TSingleBond
close_nbor_list	src/formats/MNAformat.cpp	/^			static string const close_nbor_list;$/;"	m	class:OpenBabel::MNAFormat	file:
close_nbor_list	src/formats/MNAformat.cpp	/^	string const MNAFormat::close_nbor_list = ")";$/;"	m	class:OpenBabel::MNAFormat	file:
closecallback	include/libxml/xmlIO.h	/^    xmlInputCloseCallback  closecallback;$/;"	m	struct:_xmlParserInputBuffer
closecallback	include/libxml/xmlIO.h	/^    xmlOutputCloseCallback  closecallback;$/;"	m	struct:_xmlOutputBuffer
closecurly_	include/openbabel/json/customwriter.h	/^      std::string closecurly_;$/;"	m	class:Json::CustomWriter
closesquare_	include/openbabel/json/customwriter.h	/^      std::string closesquare_;$/;"	m	class:Json::CustomWriter
closindex	include/openbabel/parsmart.h	/^    int       closindex;$/;"	m	struct:OpenBabel::__anon57
closord	include/openbabel/parsmart.h	/^    BondExpr *closord[100];$/;"	m	struct:OpenBabel::__anon57
closure	include/openbabel/parsmart.h	/^    int       closure[100];$/;"	m	struct:OpenBabel::__anon57
cmlArray	src/formats/xml/cmlformat.cpp	/^    typedef vector< vector< pair<string,string> > > cmlArray;$/;"	t	class:OpenBabel::CMLFormat	file:
cmlBondOrAtom	src/formats/xml/cmlformat.cpp	/^    vector< pair<string,string> > cmlBondOrAtom; \/\/for cml1 only$/;"	m	class:OpenBabel::CMLFormat	file:
cmp_charge_val	src/formats/libinchi/ichirvr1.c	/^int cmp_charge_val( const void *a1, const void *a2 )$/;"	f
cmp_components	src/formats/libinchi/strutil.c	/^int cmp_components( const void *a1, const void *a2 )$/;"	f
cmp_iso_atw_diff_component_no	src/formats/libinchi/ichinorm.c	/^int cmp_iso_atw_diff_component_no( const void *a1, const void *a2 )$/;"	f
cmp_r2c_atpair	src/formats/libinchi/ichinorm.c	/^int cmp_r2c_atpair( const void *p1, const void *p2 )$/;"	f
cmp_rad_endpoints	src/formats/libinchi/ichi_bns.c	/^int cmp_rad_endpoints( const void *a1, const void *a2 )$/;"	f
cnEN	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnEN[6] = {$/;"	v
cnList	src/formats/libinchi/ichirvr1.c	/^MY_CONST CN_LIST cnList[] = {$/;"	v
cnListIndex	include/inchi/ichirvrs.h	/^    S_CHAR cnListIndex;        \/* (index in the cnList) + 1; 0 => none *\/$/;"	m	struct:tagAtomIonPrperies
cnListIndexMe	include/inchi/ichirvrs.h	465;"	d
cnListIndexMe	src/formats/libinchi/ichirvr1.c	514;"	d	file:
cnListNumEl	src/formats/libinchi/ichirvr1.c	/^int cnListNumEl = (int)(sizeof(cnList)\/sizeof(cnList[0]));$/;"	v
cnMN	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnMN[2] = {$/;"	v
cnMNP	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnMNP[3] = {$/;"	v
cnM_	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnM_[1] = {$/;"	v
cnM_	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnM_[2] = {$/;"	v
cnMe	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnMe[5] = {$/;"	v
cnNE	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnNE[5] = {$/;"	v
cnNEN	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnNEN[6] = {$/;"	v
cnNM	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnNM[3] = {$/;"	v
cnNMN	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnNMN[5] = {$/;"	v
cnNP	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnNP[2] = {$/;"	v
cnNPN	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnNPN[5] = {$/;"	v
cnNPNP	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnNPNP[5] = {$/;"	v
cnN_	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnN_[1] = {$/;"	v
cnPN	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnPN[3] = {$/;"	v
cnPNM	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnPNM[4] = {$/;"	v
cnPNM	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnPNM[5] = {$/;"	v
cnPNP	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnPNP[5] = {$/;"	v
cnPNPN	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnPNPN[5] = {$/;"	v
cnP_	src/formats/libinchi/ichirvr1.c	/^MY_CONST C_NODE cnP_[2] = {$/;"	v
cn_bits_EN	include/inchi/ichirvrs.h	452;"	d
cn_bits_M	include/inchi/ichirvrs.h	441;"	d
cn_bits_MN	include/inchi/ichirvrs.h	459;"	d
cn_bits_MNP	include/inchi/ichirvrs.h	450;"	d
cn_bits_M_	include/inchi/ichirvrs.h	461;"	d
cn_bits_Me	include/inchi/ichirvrs.h	463;"	d
cn_bits_N	include/inchi/ichirvrs.h	439;"	d
cn_bits_NE	include/inchi/ichirvrs.h	454;"	d
cn_bits_NEN	include/inchi/ichirvrs.h	455;"	d
cn_bits_NM	include/inchi/ichirvrs.h	458;"	d
cn_bits_NMN	include/inchi/ichirvrs.h	453;"	d
cn_bits_NP	include/inchi/ichirvrs.h	456;"	d
cn_bits_NPN	include/inchi/ichirvrs.h	448;"	d
cn_bits_NPNP	include/inchi/ichirvrs.h	447;"	d
cn_bits_N_	include/inchi/ichirvrs.h	462;"	d
cn_bits_P	include/inchi/ichirvrs.h	440;"	d
cn_bits_PN	include/inchi/ichirvrs.h	457;"	d
cn_bits_PNM	include/inchi/ichirvrs.h	451;"	d
cn_bits_PNM	src/formats/libinchi/ichirvr1.c	263;"	d	file:
cn_bits_PNP	include/inchi/ichirvrs.h	449;"	d
cn_bits_PNPN	include/inchi/ichirvrs.h	446;"	d
cn_bits_P_	include/inchi/ichirvrs.h	460;"	d
cn_bits_shift	include/inchi/ichirvrs.h	442;"	d
cnt	src/formats/xtcformat.cpp	/^    unsigned int cnt;$/;"	m	class:OpenBabel::XTCFormat	file:
code	include/libxml/xmlerror.h	/^    int		code;	\/* The error code, e.g. an xmlParserError *\/$/;"	m	struct:_xmlError
code	src/canon.cpp	/^      PartialCode code;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
code	src/canon.cpp	/^      std::vector<unsigned short> code;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::FullCode	file:
code	src/formats/fastaformat.cpp	/^    char code;$/;"	m	struct:OpenBabel::residue_lookup_record	file:
codePointToUTF8	src/formats/json/jsoncpp.cpp	/^codePointToUTF8(unsigned int cp)$/;"	f	namespace:Json
col	include/libxml/parser.h	/^    int col;                          \/* Current column *\/$/;"	m	struct:_xmlParserInput
col	src/formats/stlformat.cpp	/^    uint16_t col;$/;"	m	struct:OpenBabel::Triangle	file:
collectComments_	include/openbabel/json/json.h	/^      bool collectComments_;$/;"	m	class:Json::Reader
colon_	include/openbabel/json/customwriter.h	/^      std::string colon_;$/;"	m	class:Json::CustomWriter
color	include/openbabel/alias.h	/^    std::string color;$/;"	m	struct:OpenBabel::AliasData::AliasItem
comm_max	include/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
comma_	include/openbabel/json/customwriter.h	/^      std::string comma_;$/;"	m	class:Json::CustomWriter
comment	include/libxml/parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandler
comment	include/libxml/parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandlerV1
comment	include/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
comment	src/formats/chemkinformat.cpp	/^  string comment;$/;"	m	class:OpenBabel::ChemKinFormat	file:
commentAfter	include/openbabel/json/json.h	/^      commentAfter,             \/\/\/< a comment on the line after a value (only make sense for root value)$/;"	e	enum:Json::CommentPlacement
commentAfterOnSameLine	include/openbabel/json/json.h	/^      commentAfterOnSameLine,   \/\/\/< a comment just after a value on the same line$/;"	e	enum:Json::CommentPlacement
commentBefore	include/openbabel/json/json.h	/^      commentBefore = 0,        \/\/\/< a comment placed on the line before a value$/;"	e	enum:Json::CommentPlacement
commentSAXFunc	include/libxml/parser.h	/^typedef void (*commentSAXFunc) (void *ctx,$/;"	t
comment_	include/openbabel/json/json.h	/^         char *comment_;$/;"	m	struct:Json::Value::CommentInfo
commentsBefore_	include/openbabel/json/json.h	/^      std::string commentsBefore_;$/;"	m	class:Json::Reader
comments_	include/openbabel/json/json.h	/^      CommentInfo *comments_;$/;"	m	class:Json::Value
comp	include/libxml/xpath.h	/^    xmlXPathCompExprPtr comp;		\/* the precompiled expression *\/$/;"	m	struct:_xmlXPathParserContext
comp_	include/openbabel/tree/tree.hh	/^				StrictWeakOrdering comp_;$/;"	m	class:tree::compare_nodes
comp_AT_NUMB	src/formats/libinchi/ichister.c	/^int comp_AT_NUMB( const void* a1, const void* a2)$/;"	f
comp_AT_RANK	src/formats/libinchi/ichisort.c	/^int comp_AT_RANK( const void* a1, const void* a2)$/;"	f
comp_candidates	src/formats/libinchi/ichitaut.c	/^int comp_candidates( const void *a1, const void *a2 )$/;"	f
comp_cc_cand	src/formats/libinchi/ichirvr1.c	/^int comp_cc_cand( const void *a1, const void *a2 )$/;"	f
compare	src/formats/cifformat.cpp	/^  int ci_char_traits::compare(const char* s1,const char* s2,size_t n )$/;"	f	class:OpenBabel::ci_char_traits
compare	src/formats/json/jsoncpp.cpp	/^Value::compare( const Value &other ) const$/;"	f	class:Json::Value
compareAtoms	src/mcdlutil.cpp	/^  bool compareAtoms(int a1, int a2, const std::vector<std::vector<int> *> aeqList) {$/;"	f	namespace:OpenBabel
compareStringsNumbers	src/mcdlutil.cpp	/^  int compareStringsNumbers(string s1, string s2) {$/;"	f	namespace:OpenBabel
compare_NeighLists	src/formats/libinchi/ichisort.c	/^int compare_NeighLists( const NEIGH_LIST *op1,  const NEIGH_LIST *op2 )$/;"	f
compare_axes	src/pointgroup.cpp	/^    compare_axes( const void *a, const void *b )$/;"	f	class:OpenBabel::PointGroupPrivate
compare_nodes	include/openbabel/tree/tree.hh	/^				compare_nodes(StrictWeakOrdering comp) : comp_(comp) {};$/;"	f	class:tree::compare_nodes
compare_nodes	include/openbabel/tree/tree.hh	/^		class compare_nodes {$/;"	c	class:tree
compare_sort_items	src/formats/vaspformat.cpp	/^      compare_sort_items(const std::vector<int> &_custom_sort_nums, bool _num_sort):$/;"	f	class:OpenBabel::VASPFormat::compare_sort_items
compare_sort_items	src/formats/vaspformat.cpp	/^    class compare_sort_items$/;"	c	class:OpenBabel::VASPFormat	file:
comparechar	src/ops/opisomorph.h	/^  char comparechar;$/;"	m	class:OpenBabel::OpNewS
component	include/inchi/inchi_api.h	/^    AT_NUMBR      component;                \/* number of the structure component > 0 *\/$/;"	m	struct:tagNormAtom
component	include/inchi/inpdef.h	/^    AT_NUMB       component;               \/* number of the structure component > 0 *\/$/;"	m	struct:tagInputAtom
component	include/inchi_api.h	/^    AT_NUMBR      component;                \/* number of the structure component > 0 *\/$/;"	m	struct:tagNormAtom
composite_norm_data	include/inchi/inchi_dll_a.h	/^    COMP_ATOM_DATA  composite_norm_data[INCHI_NUM][TAUT_NUM+1]; $/;"	m	struct:tagINCHIGEN_CONTROL
compress	include/zconf.h	37;"	d
compress2	include/zconf.h	38;"	d
compressBound	include/zconf.h	39;"	d
compressed	include/libxml/xmlIO.h	/^    int	compressed;	    \/* -1=unknown, 0=not compressed, 1=compressed *\/$/;"	m	struct:_xmlParserInputBuffer
compression	include/libxml/tree.h	/^    int             compression;\/* level of zlib compression *\/$/;"	m	struct:_xmlDoc
compute	src/stereo/perception.cpp	/^    static std::vector<Entry> compute(OBMol *mol, const std::vector<unsigned int> &symClasses,$/;"	f	struct:OpenBabel::StereoInverted
computeDistance	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::computeDistance( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
conditional_add	src/formats/pointcloudformat.cpp	/^  bool conditional_add( vector<vector3> &list, vector3 point, double density_r ) {$/;"	f	namespace:OpenBabel
conf_cutoff	src/ops/opconfab.cpp	/^      unsigned int conf_cutoff;$/;"	m	class:OpenBabel::OpConfab	file:
connecting_atom_branch	src/formats/pdbqtformat.cpp	/^    unsigned int connecting_atom_branch;$/;"	m	class:OpenBabel::branch	file:
connecting_atom_parent	src/formats/pdbqtformat.cpp	/^    unsigned int connecting_atom_parent;$/;"	m	class:OpenBabel::branch	file:
const	include/zconf.h	124;"	d
const_iterator	include/openbabel/json/json.h	/^      typedef ValueConstIterator const_iterator;$/;"	t	class:Json::Value
const_iterator	include/openbabel/math/vector3.h	/^    typedef const double* const_iterator;$/;"	t	class:OpenBabel::vector3
constraint_value	include/openbabel/forcefield.h	/^    double factor, constraint_value;$/;"	m	class:OpenBabel::OBFFConstraint
constring	src/formats/MCDLformat.cpp	/^  string MCDLFormat::constring(int conntab [MAXBONDS][4], char * tstr)$/;"	f	class:OpenBabel::MCDLFormat
construct_c_matrix	src/chiral.cpp	/^  void construct_c_matrix(OBMol &mol,std::vector<std::vector<double > > &m)$/;"	f	namespace:OpenBabel
construct_g_matrix	src/chiral.cpp	/^  void construct_g_matrix(OBMol &mol, std::vector<std::vector<double> > &m)$/;"	f	namespace:OpenBabel
construct_mol	src/formats/fchkformat.cpp	/^  void FCHKFormat::construct_mol(OBMol * const pmol,$/;"	f	class:OpenBabel::FCHKFormat
constructor	include/openbabel/tree/tree.hh	/^void constructor(T1* p)$/;"	f	namespace:kp
constructor	include/openbabel/tree/tree.hh	/^void constructor(T1* p, T2& val)$/;"	f	namespace:kp
consumed	include/libxml/parser.h	/^    unsigned long consumed;           \/* How many xmlChars already consumed *\/$/;"	m	struct:_xmlParserInput
contModel	include/libxml/schemasInternals.h	/^    xmlRegexpPtr contModel;$/;"	m	struct:_xmlSchemaElement
contModel	include/libxml/schemasInternals.h	/^    xmlRegexpPtr contModel;$/;"	m	struct:_xmlSchemaType
contModel	include/libxml/tree.h	/^    void	      *contModel;$/;"	m	struct:_xmlElement
contModel	include/libxml/tree.h	/^    xmlRegexpPtr       contModel;	\/* the validating regexp *\/$/;"	m	struct:_xmlElement
containsAtLeast_1true_1para	src/stereo/perception.cpp	/^  bool containsAtLeast_1true_1para(OBAtom *ligandAtom, OBAtom *skip, const OBStereoUnitSet &units)$/;"	f	namespace:OpenBabel
containsAtLeast_1true_2para	src/stereo/perception.cpp	/^  bool containsAtLeast_1true_2para(OBAtom *ligandAtom, OBAtom *atom, const OBStereoUnitSet &units)$/;"	f	namespace:OpenBabel
containsAtLeast_2true_2paraAssemblies	src/stereo/perception.cpp	/^  bool containsAtLeast_2true_2paraAssemblies(OBAtom *ligandAtom, OBAtom *atom, const OBStereoUnitSet &units, const std::vector<OBBitVec> &mergedRings)$/;"	f	namespace:OpenBabel
containsControlCharacter	src/formats/json/jsoncpp.cpp	/^static bool containsControlCharacter( const char* str )$/;"	f	namespace:Json
containsNewLine	src/formats/json/jsoncpp.cpp	/^containsNewLine( Reader::Location begin, $/;"	f	namespace:Json
content	include/libxml/entities.h	/^    xmlChar             *content;	\/* content or ndata if unparsed *\/$/;"	m	struct:_xmlEntity
content	include/libxml/schemasInternals.h	/^    xmlNodePtr content;         \/* the annotation *\/$/;"	m	struct:_xmlSchemaAnnot
content	include/libxml/tree.h	/^    xmlChar         *content;   \/* the content *\/$/;"	m	struct:_xmlNode
content	include/libxml/tree.h	/^    xmlChar *content;		\/* The buffer content UTF8 *\/$/;"	m	struct:_xmlBuffer
content	include/libxml/tree.h	/^    xmlElementContentPtr content;	\/* the allowed element content *\/$/;"	m	struct:_xmlElement
contentType	include/libxml/schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaElement
contentType	include/libxml/schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaType
contentTypeDef	include/libxml/schemasInternals.h	/^    xmlSchemaTypePtr contentTypeDef;$/;"	m	struct:_xmlSchemaType
context	include/libxml/xmlIO.h	/^    void*                   context;$/;"	m	struct:_xmlOutputBuffer
context	include/libxml/xmlIO.h	/^    void*                  context;$/;"	m	struct:_xmlParserInputBuffer
context	include/libxml/xpath.h	/^    xmlXPathContextPtr  context;	\/* the evaluation context *\/$/;"	m	struct:_xmlXPathParserContext
contextSize	include/libxml/xpath.h	/^    int contextSize;			\/* the context size *\/$/;"	m	struct:_xmlXPathContext
conv	include/libxml/xmlIO.h	/^    xmlBufferPtr conv;      \/* if encoder != NULL buffer for output *\/$/;"	m	struct:_xmlOutputBuffer
conv_3to1	src/formats/fastaformat.cpp	/^  FASTAFormat::conv_3to1(const std::string & three) const$/;"	f	class:OpenBabel::FASTAFormat
convert_matrix_f	src/matrix.cpp	/^bool convert_matrix_f(double *src, std::vector<std::vector<double> > &dst,$/;"	f	namespace:OpenBabel
convert_matrix_f	src/matrix.cpp	/^bool convert_matrix_f(std::vector<std::vector<double> > &src, double *dst)$/;"	f	namespace:OpenBabel
convert_matrix_f_ff	src/matrix.cpp	/^bool convert_matrix_f_ff(double *src, double **dst, int rows, int cols)$/;"	f	namespace:OpenBabel
convert_matrix_ff	src/matrix.cpp	/^bool convert_matrix_ff(double **src, std::vector<std::vector<double> > &dst,$/;"	f	namespace:OpenBabel
convert_matrix_ff	src/matrix.cpp	/^bool convert_matrix_ff(std::vector<std::vector<double> > &src, double **dst)$/;"	f	namespace:OpenBabel
convert_matrix_ff_f	src/matrix.cpp	/^bool convert_matrix_ff_f(double **src, double *dst, int rows, int cols)$/;"	f	namespace:OpenBabel
coord	src/forcefields/forcefielduff.h	/^      int coord, n;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
coord	src/formats/adfformat.cpp	/^        double coord[ 3 ];$/;"	m	struct:OpenBabel::OBT41Format::AtomData	file:
coordinatesPrepare	src/mcdlutil.cpp	/^  int TemplateRedraw::coordinatesPrepare(TEditedMolecule& sm, int kk, int anTemplateNo) {$/;"	f	class:OpenBabel::TemplateRedraw
copper	src/mcdlutil.cpp	/^  const int copper[NCOPPERATOMS] ={29,47,79};$/;"	m	namespace:OpenBabel	file:
copy	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::copy( const SelfType &other )$/;"	f	class:Json::ValueIteratorBase
copy3	src/formats/libinchi/ichister.c	/^double* copy3( const double a[], double result[] )$/;"	f
copy_	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::copy_(const tree<T, tree_node_allocator>& other)$/;"	f	class:tree
correctDblBondStereo	src/mcdlutil.cpp	/^  bool TSimpleMolecule::correctDblBondStereo() {$/;"	f	class:OpenBabel::TSimpleMolecule
correctOverlapped	src/mcdlutil.cpp	/^  int TSimpleMolecule::correctOverlapped() {$/;"	f	class:OpenBabel::TSimpleMolecule
cosNPhi0	src/forcefields/forcefielduff.h	/^      double V, tor, cosNPhi0;$/;"	m	class:OpenBabel::OBFFTorsionCalculationUFF
cosT0	src/forcefields/forcefielduff.h	/^      double cosT0; \/\/ cos theta0$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
cosine	src/forcefields/forcefieldmmff94.h	/^      double v1, v2, v3, tor, cosine;$/;"	m	class:OpenBabel::OBFFTorsionCalculationMMFF94
count	src/chains.cpp	/^    BinOpStruct count;    \/\/!< Count - test the number of eval bonds$/;"	m	union:OpenBabel::_ByteCode	file:
count	src/chains.cpp	/^    short count;     \/\/!< expected valence for this atom type$/;"	m	struct:OpenBabel::Template	file:
count_assigned_bonds	src/kekulize.cpp	/^  int count_assigned_bonds(std::vector<OBBond *> &bondsThisRing,$/;"	f	namespace:OpenBabel
count_one_bond_atoms	src/formats/libinchi/ichinorm.c	/^int count_one_bond_atoms( inp_ATOM *at, DERIV_AT *da, int start, int ord, char cFlags, int *bFound )$/;"	f
counter	include/libxml/schemasInternals.h	/^    int counter; \/* used to give ononymous components unique names *\/$/;"	m	struct:_xmlSchema
counter	src/locale.cpp	/^    unsigned int counter; \/\/ Reference counter -- ensures balance in SetLocale\/RestoreLocale calls$/;"	m	class:OpenBabel::OBLocalePrivate	file:
crc32	include/zconf.h	42;"	d
crc32_data	src/formats/libinchi/ichican2.c	/^static U_INT_32 crc32_data[256];$/;"	v	file:
createOrthoVector	src/math/vector3.cpp	/^  bool vector3::createOrthoVector(vector3 &res) const$/;"	f	class:OpenBabel::vector3
createStereoLists	src/mcdlutil.cpp	/^  void createStereoLists(OBMol * pmol, std::vector<int>& bondStereoList, std::vector<int>& atomStereoList, std::vector<int>& eqList) {$/;"	f	namespace:OpenBabel
credits	src/snprintf.c	/^static char credits[] = "\\n\\$/;"	v	file:
cromium	src/mcdlutil.cpp	/^  const int cromium[NCHROMIUMATOMS] ={24,42,74};$/;"	m	namespace:OpenBabel	file:
cross	src/math/vector3.cpp	/^  OBAPI vector3 cross ( const vector3& v1, const vector3& v2 )$/;"	f	namespace:OpenBabel
cross_prod3	src/formats/libinchi/ichister.c	/^double* cross_prod3( const double a[], const double b[], double result[] )$/;"	f
csm	src/formats/vaspformat.cpp	/^      std::vector<int> csm;$/;"	m	class:OpenBabel::VASPFormat::compare_sort_items	file:
cstr_	include/openbabel/json/json.h	/^         const char *cstr_;$/;"	m	class:Json::Value::CZString
cti	include/inchi/inchi_dll_a.h	/^                    *cti[INCHI_NUM];$/;"	m	struct:tagINCHIGEN_CONTROL
ctxt	include/libxml/xmlerror.h	/^    void       *ctxt;   \/* the parser context if available *\/$/;"	m	struct:_xmlError
cube	src/charges/qtpie.h	34;"	d
cumulene_len	src/formats/libinchi/ichicans.c	/^    U_CHAR        cumulene_len; \/*  high nimble bits: (cumulene length - 1) *\/$/;"	m	struct:tagStereoBondNeighbor	file:
cur	include/libxml/parser.h	/^    const xmlChar *cur;               \/* Current char being parsed *\/$/;"	m	struct:_xmlParserInput
cur	include/libxml/xpath.h	/^    const xmlChar *cur;			\/* the current char being parsed *\/$/;"	m	struct:_xmlXPathParserContext
cur_fptr	include/inchi/inpdef.h	/^    int        cur_fptr;  \/* input: k-1 to read the kth struct, k = 1, 2, 3,...; left unchanged; struct number := cur_fptr+1 *\/$/;"	m	struct:tagStructFptrs
cur_len	include/inchi/ichicant.h	/^    int       cur_len;  \/* currently used length *\/$/;"	m	struct:tagCurTree
currentBatch_	src/formats/json/jsoncpp.cpp	/^   BatchInfo *currentBatch_;$/;"	m	class:Json::BatchAllocator	file:
currentItemIndex_	include/openbabel/json/json.h	/^         unsigned int currentItemIndex_;$/;"	m	struct:Json::ValueInternalArray::IteratorState
currentMolIndex	src/formats/json/chemdoodlejsonformat.cpp	/^    int currentMolIndex;$/;"	m	class:OpenBabel::ChemDoodleJSONFormat	file:
currentMolIndex	src/formats/json/pubchemjsonformat.cpp	/^    int currentMolIndex;$/;"	m	class:OpenBabel::PubChemJSONFormat	file:
currentPageIndex_	include/openbabel/json/json.h	/^         Value **currentPageIndex_;$/;"	m	struct:Json::ValueInternalArray::IteratorState
currentValue	src/formats/json/jsoncpp.cpp	/^Reader::currentValue()$/;"	f	class:Json::Reader
current_	include/openbabel/json/json.h	/^      Location current_;$/;"	m	class:Json::Reader
current_	include/openbabel/json/json.h	/^      Value::ObjectValues::iterator current_;$/;"	m	class:Json::ValueIteratorBase
currentpos	src/zipstreamimpl.h	/^  basic_unzip_streambuf<charT, traits>::currentpos()$/;"	f	class:basic_unzip_streambuf
currvalence	src/mcdlutil.cpp	/^    short int currvalence;$/;"	m	class:OpenBabel::TSingleAtom	file:
cut_ring_to_chain	src/formats/libinchi/ichinorm.c	/^int cut_ring_to_chain( inp_ATOM *at, R2C_AT *da, int iZ )$/;"	f
cutoff	src/confsearch.cpp	/^      const double cutoff;$/;"	m	class:OpenBabel::OBDiversePoses	file:
cutoff_passed	src/formats/confabreport.cpp	/^  unsigned int cutoff_passed;$/;"	m	class:OpenBabel::ConfabReport	file:
cycle_edge	include/OB-BGL/verbose_visitors.h	/^    void cycle_edge( edge e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
d	include/openbabel/depict/depict.h	/^      OBDepictPrivate * d;$/;"	m	class:OpenBabel::OBDepict
d	include/openbabel/forcefield.h	/^    OBAtom *a, *b, *c, *d;$/;"	m	class:OpenBabel::OBFFConstraint
d	include/openbabel/forcefield.h	/^    OBAtom *d;$/;"	m	class:OpenBabel::OBFFCalculation4
d	include/openbabel/forcefield.h	/^    int         a, b, c, d;$/;"	m	class:OpenBabel::OBFFParameter
d	include/openbabel/graphsym.h	/^      OBGraphSymPrivate * const d;$/;"	m	class:OpenBabel::OBGraphSym
d	include/openbabel/griddata.h	/^    GridDataPrivate *const d;$/;"	m	class:OpenBabel::OBGridData
d	include/openbabel/locale.h	/^    OBLocalePrivate* d;$/;"	m	class:OpenBabel::OBLocale
d	include/openbabel/pointgroup.h	/^      PointGroupPrivate *d;$/;"	m	class:OpenBabel::OBPointGroup
d	include/openbabel/rand.h	/^    DoubleType d;$/;"	m	class:OpenBabel::OBRandom
d26	src/formats/libinchi/ikey_base26.c	/^static char d26[][3] = $/;"	v	file:
dAtMass	src/formats/libinchi/util.c	/^     double  dAtMass;      \/* exact mw of the most abundant isotope *\/$/;"	m	struct:tagElData	file:
dGroupSize	include/inchi/ichicant.h	/^    double    dGroupSize;$/;"	m	struct:tagCanonCounts
data	include/openbabel/tree/tree.hh	/^		T data;$/;"	m	class:tree_node_
data	src/chains.cpp	/^    const char *data; \/\/!< pseudo-SMILES definition of side-chain$/;"	m	struct:OpenBabel::__anon67	file:
data	src/formats/ArrayList.h	/^   void **data;$/;"	m	struct:_ArrayList
data	src/formats/chemdrawcdx.cpp	/^stringstream& CDXReader::data()$/;"	f	class:OpenBabel::CDXReader
data_type	include/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
datafilename	include/openbabel/fingerprint.h	/^  char datafilename[256];   \/\/\/<the data that this is an index to$/;"	m	struct:OpenBabel::FptIndexHeader
db	src/mcdlutil.cpp	/^    short int db;        \/*Ring\/Chain conditions*\/$/;"	m	class:OpenBabel::TSingleBond	file:
debug	include/openbabel/patty.h	/^    bool debug;$/;"	m	class:OpenBabel::patty
debug	src/distgeom.cpp	/^    bool debug;$/;"	m	class:OpenBabel::DistanceGeometryPrivate	file:
debugNode	include/libxml/xpath.h	/^    xmlNodePtr debugNode;		\/* the source node XSLT *\/$/;"	m	struct:_xmlXPathContext
debug_off	include/openbabel/patty.h	/^    void debug_off()$/;"	f	class:OpenBabel::patty
debug_on	include/openbabel/patty.h	/^    void debug_on()$/;"	f	class:OpenBabel::patty
decodeDouble	src/formats/json/jsoncpp.cpp	/^Reader::decodeDouble( Token &token )$/;"	f	class:Json::Reader
decodeNumber	src/formats/json/jsoncpp.cpp	/^Reader::decodeNumber( Token &token )$/;"	f	class:Json::Reader
decodeString	src/formats/json/jsoncpp.cpp	/^Reader::decodeString( Token &token )$/;"	f	class:Json::Reader
decodeString	src/formats/json/jsoncpp.cpp	/^Reader::decodeString( Token &token, std::string &decoded )$/;"	f	class:Json::Reader
decodeUnicodeCodePoint	src/formats/json/jsoncpp.cpp	/^Reader::decodeUnicodeCodePoint( Token &token, $/;"	f	class:Json::Reader
decodeUnicodeEscapeSequence	src/formats/json/jsoncpp.cpp	/^Reader::decodeUnicodeEscapeSequence( Token &token, $/;"	f	class:Json::Reader
decrement	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::decrement()$/;"	f	class:Json::ValueIteratorBase
def	include/libxml/tree.h	/^    xmlAttributeDefault      def;	\/* the default *\/$/;"	m	struct:_xmlAttribute
defA	src/mcdlutil.cpp	/^  void TSimpleMolecule::defA(int& currNumDef, int atomClean, int sPN, int baseCycle, std::vector<int>& atomDefine, const std::vector<int> listAtomClean,$/;"	f	class:OpenBabel::TSimpleMolecule
defC	src/mcdlutil.cpp	/^  void TSimpleMolecule::defC(int& currNumDef, int baseCycle, int atomClean, std::vector<int>& cycleDefine,$/;"	f	class:OpenBabel::TSimpleMolecule
defVal	include/libxml/schemasInternals.h	/^    xmlSchemaValPtr defVal;$/;"	m	struct:_xmlSchemaAttribute
defVal	include/libxml/schemasInternals.h	/^    xmlSchemaValPtr defVal;$/;"	m	struct:_xmlSchemaElement
defValue	include/libxml/schemasInternals.h	/^    const xmlChar *defValue;$/;"	m	struct:_xmlSchemaAttribute
defaultValue	include/libxml/tree.h	/^    const xmlChar  *defaultValue;	\/* or the default value *\/$/;"	m	struct:_xmlAttribute
defaultsubelt	include/libxml/HTMLparser.h	/^    const char* defaultsubelt;	\/* subelement for suggested auto-repair$/;"	m	struct:_htmlElemDesc
defineAtomConn	src/mcdlutil.cpp	/^  void TSimpleMolecule::defineAtomConn() {$/;"	f	class:OpenBabel::TSimpleMolecule
defineBondConn	src/mcdlutil.cpp	/^  void TSimpleMolecule::defineBondConn(neighbourlist *bondConnection) {$/;"	f	class:OpenBabel::TSimpleMolecule
defined_NEIGH_LIST	include/inchi/ichicant.h	72;"	d
deflate	include/zconf.h	17;"	d
deflateBound	include/zconf.h	27;"	d
deflateCopy	include/zconf.h	24;"	d
deflateEnd	include/zconf.h	18;"	d
deflateInit	include/zlib.h	1331;"	d
deflateInit2	include/zlib.h	1335;"	d
deflateInit2_	include/zconf.h	22;"	d
deflateInit_	include/zconf.h	16;"	d
deflateParams	include/zconf.h	26;"	d
deflatePrime	include/zconf.h	28;"	d
deflateReset	include/zconf.h	25;"	d
deflateSetDictionary	include/zconf.h	23;"	d
degree_size_type	include/OB-BGL/mol_graph.h	/^    typedef int   degree_size_type;$/;"	t	struct:boost::graph_traits
deleteAtom	src/mcdlutil.cpp	/^  void TSimpleMolecule::deleteAtom(int index) {$/;"	f	class:OpenBabel::TSimpleMolecule
deleteBond	src/mcdlutil.cpp	/^  void TSimpleMolecule::deleteBond(int index) {$/;"	f	class:OpenBabel::TSimpleMolecule
deleteIntElement	src/mcdlutil.cpp	/^  void deleteIntElement(std::vector<int> * source, int index) {$/;"	f	namespace:OpenBabel
delete_mol_data	include/inchi/lreadmol.h	/^MOL_DATA* delete_mol_data( MOL_DATA* mol_data )$/;"	f
delta	src/forcefields/forcefieldgaff.h	/^      double kr, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGaff
delta	src/forcefields/forcefieldgaff.h	/^      double kth, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGaff
delta	src/forcefields/forcefieldghemical.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGhemical
delta	src/forcefields/forcefieldghemical.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGhemical
delta	src/forcefields/forcefieldmmff94.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationMMFF94
delta	src/forcefields/forcefieldmmff94.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationMMFF94
delta	src/forcefields/forcefielduff.h	/^      double ka, theta0, theta, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
delta	src/forcefields/forcefielduff.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationUFF
delta_In	src/formats/libinchi/ichirvr1.c	/^    EdgeFlow   delta_In;$/;"	m	struct:tagVertexFlow	file:
delta_Out	src/formats/libinchi/ichirvr1.c	/^    EdgeFlow   delta_Out;$/;"	m	struct:tagVertexFlow	file:
delta_rab	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
delta_rbc	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
delta_theta	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
denom	include/openbabel/molchrg.h	/^    double denom;$/;"	m	class:OpenBabel::GasteigerState
depr	include/libxml/HTMLparser.h	/^    char depr;          \/* Is this a deprecated element ? *\/$/;"	m	struct:_htmlElemDesc
depth	include/libxml/parser.h	/^    int                depth;         \/* to prevent entity substitution loops *\/$/;"	m	struct:_xmlParserCtxt
depth	include/openbabel/tree/tree.hh	/^int tree<T, tree_node_allocator>::depth(const iterator_base& it)$/;"	f	class:tree
depth	include/openbabel/tree/tree.hh	/^int tree<T, tree_node_allocator>::depth(const iterator_base& it, const iterator_base& root)$/;"	f	class:tree
depth	src/formats/chemdrawcdx.cpp	/^  int depth;$/;"	m	class:OpenBabel::CDXReader	file:
depth	src/formats/pdbqtformat.cpp	/^    unsigned int depth;$/;"	m	class:OpenBabel::branch	file:
deref	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::deref() const$/;"	f	class:Json::ValueIteratorBase
desc	include/libxml/HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlElemDesc
desc	include/libxml/HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlEntityDesc
descend_all	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::post_order_iterator::descend_all()$/;"	f	class:tree::post_order_iterator
descent	include/openbabel/depict/painter.h	/^    double ascent, descent;$/;"	m	struct:OpenBabel::OBFontMetrics
description	src/fingerprints/finger3.cpp	/^    string description;$/;"	m	struct:OpenBabel::PatternFP::pattern	file:
description	src/ops/largest.cpp	/^  std::string description;$/;"	m	class:OpenBabel::OpLargest	file:
destroy_symmetry_element	src/pointgroup.cpp	/^    destroy_symmetry_element( SYMMETRY_ELEMENT *elem )$/;"	f	class:OpenBabel::PointGroupPrivate
destructor	include/openbabel/tree/tree.hh	/^void destructor(T1* p)$/;"	f	namespace:kp
detail	include/openbabel/mol.h	/^  namespace detail {$/;"	n	namespace:OpenBabel
detail	src/zipstream.h	/^namespace detail$/;"	n	namespace:zlib_stream
detect_r2c_Zatom	src/formats/libinchi/ichinorm.c	/^int detect_r2c_Zatom( inp_ATOM *at, R2C_AT *da, int iZ )$/;"	f
detect_unusual_el_valence	src/formats/libinchi/util.c	/^int detect_unusual_el_valence( int nPeriodicNum, int charge, int radical, int bonds_valence, int num_H, int num_bonds )$/;"	f
determinant	src/math/matrix3x3.cpp	/^  double matrix3x3::determinant(void) const$/;"	f	class:OpenBabel::matrix3x3
determineBondsOrder	src/mcdlutil.cpp	/^  static int determineBondsOrder(const std::vector<int> iA1, const std::vector<int> iA2,$/;"	f	namespace:OpenBabel
dict	include/libxml/parser.h	/^    xmlDictPtr         dict;          \/* dictionnary for the parser *\/$/;"	m	struct:_xmlParserCtxt
dict	include/libxml/schemasInternals.h	/^    xmlDictPtr      dict;$/;"	m	struct:_xmlSchema
dict	include/libxml/tree.h	/^    struct _xmlDict *dict;      \/* dict used to allocate names or NULL *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDict
dict	include/libxml/xpath.h	/^    xmlDictPtr dict;			\/* dictionnary if any *\/$/;"	m	struct:_xmlXPathContext
dictNames	include/libxml/parser.h	/^    int               dictNames;    \/* Use dictionary names for the tree *\/$/;"	m	struct:_xmlParserCtxt
dielectric	src/forcefields/forcefieldmm2.h	/^      double dielectric;$/;"	m	class:OpenBabel::OBForceFieldMM2
diff3	src/formats/libinchi/ichister.c	/^double* diff3( const double a[], const double b[], double result[] )$/;"	f
diff_pos_H_at	include/inchi/strutil.h	/^    AT_NUMB diff_pos_H_at[ICR_MAX_DIFF_FIXED_H];  \/* non-tautomeric H *\/$/;"	m	struct:tagInChICompareResults
diff_pos_H_nH	include/inchi/strutil.h	/^    S_CHAR  diff_pos_H_nH[ICR_MAX_DIFF_FIXED_H];$/;"	m	struct:tagInChICompareResults
difference_type	include/OB-BGL/mol_graph.h	/^        typedef OpenBabel::OBBondIterator::difference_type difference_type;$/;"	t	class:boost::graph_traits::adjacent_iterator
difference_type	include/OB-BGL/mol_graph.h	/^        typedef OpenBabel::OBBondIterator::difference_type difference_type;$/;"	t	class:boost::graph_traits::out_edge_iterator
difference_type	include/openbabel/json/json.h	/^      typedef int difference_type;$/;"	t	class:Json::ValueConstIterator
difference_type	include/openbabel/json/json.h	/^      typedef int difference_type;$/;"	t	class:Json::ValueIterator
difference_type	include/openbabel/json/json.h	/^      typedef int difference_type;$/;"	t	class:Json::ValueIteratorBase
difference_type	include/openbabel/math/vector3.h	/^    typedef std::ptrdiff_t difference_type;$/;"	t	class:OpenBabel::vector3
difference_type	include/openbabel/tree/tree.hh	/^				typedef ptrdiff_t                       difference_type;$/;"	t	class:tree::iterator_base
digit	src/formats/smilesformat.cpp	/^      int digit;$/;"	m	struct:OpenBabel::OBSmilesParser::ExternalBond	file:
digit	src/formats/smilesformat.cpp	/^      int digit;$/;"	m	struct:OpenBabel::OBSmilesParser::RingClosureBond	file:
dim	src/formats/xml/pubchem.cpp	/^	int dim;$/;"	m	class:OpenBabel::PubChemFormat	file:
directBondAss	src/mcdlutil.cpp	/^  void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, bool const* const* beq,$/;"	f	class:OpenBabel::TEditedMolecule
directed_category	include/OB-BGL/mol_graph.h	/^    typedef undirected_tag       directed_category;$/;"	t	struct:boost::graph_traits
direction	src/pointgroup.cpp	/^      double  direction[ DIMENSION ] ;$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
directory	include/libxml/parser.h	/^    char           *directory;        \/* the data directory *\/$/;"	m	struct:_xmlParserCtxt
directory	include/libxml/parser.h	/^    const char *directory;            \/* the directory\/base of the file *\/$/;"	m	struct:_xmlParserInput
disableAllExceptions	src/formats/smiley.h	/^      void disableAllExceptions()$/;"	f	class:Smiley::Parser
disableExceptions	src/formats/smiley.h	/^      void disableExceptions(ErrorCode exceptions)$/;"	f	class:Smiley::Parser
disableSAX	include/libxml/parser.h	/^    int             disableSAX;       \/* SAX callbacks are disabled *\/$/;"	m	struct:_xmlParserCtxt
discover_vertex	include/OB-BGL/verbose_visitors.h	/^    void discover_vertex( vertex e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
discover_vertex	include/OB-BGL/verbose_visitors.h	/^    void discover_vertex(Vertex u, const Graph& g)$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
dist3D	src/formats/libinchi/strutil.c	/^double dist3D( inp_ATOM *at1, inp_ATOM *at2 )$/;"	f
distSq	include/openbabel/math/vector3.h	/^    double distSq(const vector3 &vv) const$/;"	f	class:OpenBabel::vector3
distance	src/pointgroup.cpp	/^      double  distance ;$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
do_not_add_H	src/formats/libinchi/util.c	/^int do_not_add_H( int nPeriodicNum )$/;"	f
doc	include/libxml/debugXML.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlShellCtxt
doc	include/libxml/entities.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDoc
doc	include/libxml/schemasInternals.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlSchema
doc	include/libxml/tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDoc
doc	include/libxml/tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDoc
doc	include/libxml/tree.h	/^    struct _xmlDoc   *doc;	\/* The document holding the ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlDoc
doc	include/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* autoreference to itself *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDoc
doc	include/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlDoc
doc	include/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc
doc	include/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlDoc
doc	include/libxml/valid.h	/^    xmlDocPtr              doc;       \/* the document *\/$/;"	m	struct:_xmlValidCtxt
doc	include/libxml/xpath.h	/^    xmlDocPtr doc;			\/* The current document *\/$/;"	m	struct:_xmlXPathContext
docbDefaultSAXHandler	include/libxml/globals.h	/^	xmlSAXHandlerV1 docbDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState
docbDefaultSAXHandler	include/libxml/globals.h	/^XMLPUBVAR xmlSAXHandlerV1 docbDefaultSAXHandler;$/;"	v
docbDefaultSAXHandler	include/libxml/globals.h	214;"	d
docbDefaultSAXHandler	include/libxml/globals.h	43;"	d
docbDocPtr	include/libxml/DOCBparser.h	/^typedef xmlDocPtr docbDocPtr;$/;"	t
docbParserCtxt	include/libxml/DOCBparser.h	/^typedef xmlParserCtxt docbParserCtxt;$/;"	t
docbParserCtxtPtr	include/libxml/DOCBparser.h	/^typedef xmlParserCtxtPtr docbParserCtxtPtr;$/;"	t
docbParserInput	include/libxml/DOCBparser.h	/^typedef xmlParserInput docbParserInput;$/;"	t
docbParserInputPtr	include/libxml/DOCBparser.h	/^typedef xmlParserInputPtr docbParserInputPtr;$/;"	t
docbSAXHandler	include/libxml/DOCBparser.h	/^typedef xmlSAXHandler docbSAXHandler;$/;"	t
docbSAXHandlerPtr	include/libxml/DOCBparser.h	/^typedef xmlSAXHandlerPtr docbSAXHandlerPtr;$/;"	t
docdict	include/libxml/parser.h	/^    int                docdict;       \/* use strings from dict to build tree *\/$/;"	m	struct:_xmlParserCtxt
document_	include/openbabel/json/customwriter.h	/^      std::string document_;$/;"	m	class:Json::CustomWriter
document_	include/openbabel/json/json.h	/^      std::ostream* document_;$/;"	m	class:Json::StyledStreamWriter
document_	include/openbabel/json/json.h	/^      std::string document_;$/;"	m	class:Json::FastWriter
document_	include/openbabel/json/json.h	/^      std::string document_;$/;"	m	class:Json::Reader
document_	include/openbabel/json/json.h	/^      std::string document_;$/;"	m	class:Json::StyledWriter
domain	include/libxml/xmlerror.h	/^    int		domain;	\/* What part of the library raised this error *\/$/;"	m	struct:_xmlError
done	include/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
done	src/formats/pdbqtformat.cpp	/^    bool done;$/;"	m	class:OpenBabel::branch	file:
dot	include/openbabel/math/vector3.h	/^  inline OBAPI double dot ( const vector3& v1, const vector3& v2 )$/;"	f	namespace:OpenBabel
dot_prod3	src/formats/libinchi/ichister.c	/^double dot_prod3( const double a[], const double b[] )$/;"	f
dot_prodchar3	src/formats/libinchi/ichister.c	/^int dot_prodchar3( const S_CHAR a[], const S_CHAR b[] )$/;"	f
dp	include/inchi/ichidrp.h	/^    DRAW_PARMS      dp;$/;"	m	struct:tagInputParms
drawAllC	include/openbabel/depict/depict.h	/^        drawAllC             = 0x0020,$/;"	e	enum:OpenBabel::OBDepict::OptionType
drawTermC	include/openbabel/depict/depict.h	/^        drawTermC            = 0x0010,$/;"	e	enum:OpenBabel::OBDepict::OptionType
dst	include/openbabel/parsmart.h	/^    int src,dst;$/;"	m	struct:OpenBabel::__anon54
dst	src/chains.cpp	/^    int src,dst;$/;"	m	struct:OpenBabel::__anon69	file:
dtd	include/libxml/HTMLparser.h	/^    char dtd;           \/* 1: only in Loose DTD, 2: only Frameset one *\/$/;"	m	struct:_htmlElemDesc
dummy	include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state
dummy_inchi_dll_main	src/formats/libinchi/inchi_dll_main.c	/^int dummy_inchi_dll_main=0;  \/* avoid empty module to keep C compiler happy *\/$/;"	v
duplicate	include/openbabel/json/json.h	/^            duplicate,$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
duplicateOnCopy	include/openbabel/json/json.h	/^            duplicateOnCopy$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
duplicateStringValue	src/formats/json/jsoncpp.cpp	/^duplicateStringValue( const char *value, $/;"	f	namespace:Json
dynamic_niches	include/openbabel/conformersearch.h	/^      std::vector<std::vector <int> > dynamic_niches; \/\/!< The dynamically found niches$/;"	m	class:OpenBabel::OBConformerSearch
e	include/inchi/ichirvrs.h	/^    ECF e[MAX_CN_VAL];$/;"	m	struct:tagChargeNodes
e	src/fingerprints/fingerecfp.cpp	/^  unsigned int e[5]; \/\/ hashcodes for ecfp0, 2, 4... This will segfault at ECFP12$/;"	m	struct:OpenBabel::AtomInfo	file:
eV	src/charges/qeq.h	/^const double eV = 3.67493245e-2;$/;"	v
eV	src/charges/qtpie.h	/^const double eV = 3.67493245e-2;$/;"	v
e_In	src/formats/libinchi/ichirvr1.c	/^    EdgeIndex  e_In;$/;"	m	struct:tagVertexFlow	file:
e_Out	src/formats/libinchi/ichirvr1.c	/^    EdgeIndex  e_Out;$/;"	m	struct:tagVertexFlow	file:
e_inchi_calloc	include/inchi/mode.h	932;"	d
e_inchi_calloc	include/inchi/mode.h	993;"	d
e_inchi_free	include/inchi/mode.h	933;"	d
e_inchi_free	include/inchi/mode.h	996;"	d
e_inchi_malloc	include/inchi/mode.h	931;"	d
e_inchi_malloc	include/inchi/mode.h	990;"	d
edge	include/inchi/ichi_bns.h	/^    BNS_EDGE      *edge;  \/* edges *\/$/;"	m	struct:BalancedNetworkStructure
edge_descriptor	include/OB-BGL/mol_graph.h	/^        edge_descriptor( OpenBabel::OBBond* a = 0, bool b = true )$/;"	f	class:boost::graph_traits::edge_descriptor
edge_descriptor	include/OB-BGL/mol_graph.h	/^    class edge_descriptor$/;"	c	struct:boost::graph_traits
edge_forbidden_mask	include/inchi/ichi_bns.h	/^    S_CHAR         edge_forbidden_mask;$/;"	m	struct:BalancedNetworkStructure
edge_iterator	include/OB-BGL/mol_graph.h	/^    typedef OpenBabel::OBBondIterator  edge_iterator;$/;"	t	struct:boost::graph_traits
edge_parallel_category	include/OB-BGL/mol_graph.h	/^    typedef disallow_parallel_edge_tag edge_parallel_category;$/;"	t	struct:boost::graph_traits
edges	include/OB-BGL/mol_graph.h	/^  edges( const OpenBabel::OBMol& m )$/;"	f	namespace:boost
edges_cap	include/inchi/ichirvrs.h	/^    int edges_cap;$/;"	m	struct:tagTCGroup
edges_flow	include/inchi/ichirvrs.h	/^    int edges_flow;$/;"	m	struct:tagTCGroup
edges_size_type	include/OB-BGL/mol_graph.h	/^    typedef int   edges_size_type;$/;"	t	struct:boost::graph_traits
el_number	include/inchi/extr_ct.h	/^    U_CHAR el_number;  \/* periodic table number = charge of the nucleus = number of the protons *\/$/;"	m	struct:tagAtom
el_number	include/inchi/ichirvrs.h	/^    U_CHAR el_number;$/;"	m	struct:tagChargeChangeCandidate
el_number	include/inchi/inchi_api.h	/^    U_CHAR        el_number;                \/* number of the element in the Periodic Table *\/$/;"	m	struct:tagNormAtom
el_number	include/inchi/inpdef.h	/^    U_CHAR        el_number;               \/* number of the element in the Periodic Table *\/$/;"	m	struct:tagInputAtom
el_number	include/inchi_api.h	/^    U_CHAR        el_number;                \/* number of the element in the Periodic Table *\/$/;"	m	struct:tagNormAtom
el_number_B	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_B;$/;"	v	file:
el_number_Br	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_Br;$/;"	v	file:
el_number_C	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_C;$/;"	v	file:
el_number_Cl	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_Cl;$/;"	v	file:
el_number_F	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_F;$/;"	v	file:
el_number_I	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_I;$/;"	v	file:
el_number_N	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_N;$/;"	v	file:
el_number_O	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_O;$/;"	v	file:
el_number_P	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_P;$/;"	v	file:
el_number_S	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_S;$/;"	v	file:
el_number_Si	src/formats/libinchi/ichinorm.c	/^static U_CHAR el_number_Si;$/;"	v	file:
ele	include/openbabel/math/matrix3x3.h	/^      double ele[3][3];$/;"	m	class:OpenBabel::matrix3x3
elem	include/libxml/tree.h	/^    const xmlChar          *elem;	\/* Element holding the attribute *\/$/;"	m	struct:_xmlAttribute
elem	src/chains.cpp	/^    BinOpStruct elem;     \/\/!< Element - test the element of current atom$/;"	m	union:OpenBabel::_ByteCode	file:
elem	src/chains.cpp	/^    int atomid,elem;$/;"	m	struct:OpenBabel::__anon68	file:
elem	src/chains.cpp	/^    short elem;      \/\/!< atomic number of this element$/;"	m	struct:OpenBabel::Template	file:
elemDecl	include/libxml/schemasInternals.h	/^    xmlHashTablePtr elemDecl;$/;"	m	struct:_xmlSchema
element	include/inchi/extr_ct.h	/^     char element[3];$/;"	m	struct:AtData
element	include/inchi/ichicant.h	/^     char element[3];$/;"	m	struct:tagAtData_dch
elementDecl	include/libxml/parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandler
elementDecl	include/libxml/parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandlerV1
elementDeclSAXFunc	include/libxml/parser.h	/^typedef void (*elementDeclSAXFunc)(void *ctx,$/;"	t
elements	include/libxml/tree.h	/^    void          *elements;    \/* Hash table for elements if any *\/$/;"	m	struct:_xmlDtd
elname	include/inchi/extr_ct.h	/^    char elname[ATOM_EL_LEN];$/;"	m	struct:tagAtom
elname	include/inchi/inchi_api.h	/^    char          elname[ATOM_EL_LEN];      \/* chem. element name *\/$/;"	m	struct:tagNormAtom
elname	include/inchi/inchi_api.h	/^    char    elname[ATOM_EL_LEN];  \/* zero-terminated chemical element name:*\/$/;"	m	struct:tagInchiAtom
elname	include/inchi/inpdef.h	/^    char          elname[ATOM_EL_LEN]; \/* chem. element name *\/$/;"	m	struct:tagInputAtom
elname	include/inchi_api.h	/^    char          elname[ATOM_EL_LEN];      \/* chem. element name *\/$/;"	m	struct:tagNormAtom
elname	include/inchi_api.h	/^    char    elname[ATOM_EL_LEN];  \/* zero-terminated chemical element name:*\/$/;"	m	struct:tagInchiAtom
elname	src/formats/libinchi/ichitaut.c	/^    char    elname[3];$/;"	m	struct:tagChargeType	file:
empty	include/libxml/HTMLparser.h	/^    char empty;         \/* Is this an empty element ? *\/$/;"	m	struct:_htmlElemDesc
empty	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::empty() const$/;"	f	class:tree
empty	src/formats/json/jsoncpp.cpp	/^Value::empty() const$/;"	f	class:Json::Value
enableAllExceptions	src/formats/smiley.h	/^      void enableAllExceptions()$/;"	f	class:Smiley::Parser
enableExceptions	src/formats/smiley.h	/^      void enableExceptions(ErrorCode exceptions)$/;"	f	class:Smiley::Parser
enableYAMLCompatibility	src/formats/json/jsoncpp.cpp	/^FastWriter::enableYAMLCompatibility()$/;"	f	class:Json::FastWriter
encoder	include/libxml/xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlOutputBuffer
encoder	include/libxml/xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer
encoder	src/mcdlutil.cpp	/^  int TSingleAtom::encoder() {$/;"	f	class:OpenBabel::TSingleAtom
encoding	include/libxml/parser.h	/^    const xmlChar   *encoding;        \/* the declared encoding, if any *\/$/;"	m	struct:_xmlParserCtxt
encoding	include/libxml/parser.h	/^    const xmlChar *encoding;          \/* the encoding string for entity *\/$/;"	m	struct:_xmlParserInput
encoding	include/libxml/tree.h	/^    const xmlChar  *encoding;   \/* external initial encoding, if any *\/$/;"	m	struct:_xmlDoc
end	include/libxml/parser.h	/^    const xmlChar *end;               \/* end of the array to parse *\/$/;"	m	struct:_xmlParserInput
end	include/openbabel/math/vector3.h	/^    const_iterator end() const { return &_vx + 3; }$/;"	f	class:OpenBabel::vector3
end	include/openbabel/math/vector3.h	/^    iterator end() { return &_vx + 3; }$/;"	f	class:OpenBabel::vector3
end	include/openbabel/stereo/bindings.h	/^    unsigned long begin, end;$/;"	m	struct:OpenBabel::OBCisTransConfig
end	include/openbabel/stereo/cistrans.h	/^      unsigned long begin, end; \/\/<! The double bond begin and end ids.$/;"	m	struct:OpenBabel::OBCisTransStereo::Config
end	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator tree<T, tree_node_allocator>::end() const$/;"	f	class:tree
end	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::end(const iterator_base& pos) const$/;"	f	class:tree
end	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::iterator_base::end() const$/;"	f	class:tree::iterator_base
end	src/formats/json/jsoncpp.cpp	/^Value::end() const$/;"	f	class:Json::Value
end	src/formats/json/jsoncpp.cpp	/^Value::end()$/;"	f	class:Json::Value
endDocument	include/libxml/parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandler
endDocument	include/libxml/parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandlerV1
endDocumentSAXFunc	include/libxml/parser.h	/^typedef void (*endDocumentSAXFunc) (void *ctx);$/;"	t
endElement	include/libxml/parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandler
endElement	include/libxml/parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandlerV1
endElementNs	include/libxml/parser.h	/^    endElementNsSAX2Func endElementNs;$/;"	m	struct:_xmlSAXHandler
endElementNsSAX2Func	include/libxml/parser.h	/^typedef void (*endElementNsSAX2Func)   (void *ctx,$/;"	t
endElementSAXFunc	include/libxml/parser.h	/^typedef void (*endElementSAXFunc) (void *ctx,$/;"	t
endRingBond	src/formats/smiley.h	/^    void endRingBond(int number, int index) {}$/;"	f	struct:Smiley::CallbackBase
endTag	include/libxml/HTMLparser.h	/^    char endTag;        \/* Whether the end tag can be implied *\/$/;"	m	struct:_htmlElemDesc
end_	include/openbabel/json/json.h	/^         Location end_;$/;"	m	class:Json::Reader::Token
end_	include/openbabel/json/json.h	/^      Location end_;$/;"	m	class:Json::Reader
end_	src/formats/json/jsoncpp.cpp	/^      AllocatedType *end_;$/;"	m	struct:Json::BatchAllocator::BatchInfo	file:
end_breadth_first	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::breadth_first_queued_iterator tree<T, tree_node_allocator>::end_breadth_first() const$/;"	f	class:tree
end_fixed	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator tree<T, tree_node_allocator>::end_fixed(const iterator_base& pos, unsigned int dp) const$/;"	f	class:tree
end_leaf	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator tree<T, tree_node_allocator>::end_leaf() const$/;"	f	class:tree
end_leaf	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator tree<T, tree_node_allocator>::end_leaf(const iterator_base& top) const$/;"	f	class:tree
end_line	include/libxml/parser.h	/^  unsigned long end_line;$/;"	m	struct:_xmlParserNodeInfo
end_pos	include/libxml/parser.h	/^  unsigned long end_pos;$/;"	m	struct:_xmlParserNodeInfo
end_post	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator tree<T, tree_node_allocator>::end_post() const$/;"	f	class:tree
endp_in1_only	include/inchi/strutil.h	/^    AT_NUMB endp_in1_only[ICR_MAX_ENDP_IN1_ONLY]; \/* endpoint canonical number = index+1 *\/$/;"	m	struct:tagInChICompareResults
endp_in2_only	include/inchi/strutil.h	/^    AT_NUMB endp_in2_only[ICR_MAX_ENDP_IN2_ONLY]; \/* endpoint canonical number = index+1 *\/$/;"	m	struct:tagInChICompareResults
endpoint	include/inchi/extr_ct.h	/^    AT_NUMB endpoint;  \/* tautomer analysis. If != 0 then the hydrogens & (-)charge are in the tautomer group. *\/$/;"	m	struct:tagAtom
endpoint	include/inchi/ichirvrs.h	/^    AT_NUMB      *endpoint; \/* from original InChI[1] in case of Fixed-H only *\/$/;"	m	struct:tagStructFromInChI
endpoint	include/inchi/ichitaut.h	/^    AT_NUMB   endpoint; \/* MAX_ATOMS+1 => found alt path to the candidate *\/$/;"	m	struct:tagSaltChargeCandidate
endpoint	include/inchi/inchi_api.h	/^    AT_NUMBR      endpoint;                 \/* id of a tautomeric group *\/$/;"	m	struct:tagNormAtom
endpoint	include/inchi/inpdef.h	/^    AT_NUMB       endpoint;                \/* id of a tautomeric group *\/$/;"	m	struct:tagInputAtom
endpoint	include/inchi_api.h	/^    AT_NUMBR      endpoint;                 \/* id of a tautomeric group *\/$/;"	m	struct:tagNormAtom
endpoint_valence	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  endpoint_valence;$/;"	m	struct:tagMobileHGroups	file:
endptInChI	include/inchi/ichirvrs.h	/^    AT_NUMB endptInChI;$/;"	m	struct:tagAtomsCmpTwoFixedH
endptInChI	include/inchi/ichirvrs.h	/^    AT_NUMB endptInChI;$/;"	m	struct:tagAtomsCmpTwoMobileH
endptRevrs	include/inchi/ichirvrs.h	/^    AT_NUMB endptRevrs;$/;"	m	struct:tagAtomsCmpTwoFixedH
endptRevrs	include/inchi/ichirvrs.h	/^    AT_NUMB endptRevrs;$/;"	m	struct:tagAtomsCmpTwoMobileH
energy	include/openbabel/forcefield.h	/^    double energy;$/;"	m	class:OpenBabel::OBFFCalculation2
energy_cutoff	src/ops/opconfab.cpp	/^      double energy_cutoff;$/;"	m	class:OpenBabel::OpConfab	file:
energy_map	include/openbabel/conformersearch.h	/^      mapRotorEnergy energy_map;$/;"	m	class:OpenBabel::OBEnergyConformerScore
energy_map	include/openbabel/conformersearch.h	/^      mapRotorEnergy energy_map;$/;"	m	class:OpenBabel::OBMinimizingEnergyConformerScore
energy_ncompute	include/openbabel/conformersearch.h	/^      long unsigned int energy_ncompute;$/;"	m	class:OpenBabel::OBEnergyConformerScore
energy_ncompute	include/openbabel/conformersearch.h	/^      long unsigned int energy_ncompute;$/;"	m	class:OpenBabel::OBMinimizingEnergyConformerScore
energy_nrequest	include/openbabel/conformersearch.h	/^      long unsigned int energy_nrequest;$/;"	m	class:OpenBabel::OBEnergyConformerScore
energy_nrequest	include/openbabel/conformersearch.h	/^      long unsigned int energy_nrequest;$/;"	m	class:OpenBabel::OBMinimizingEnergyConformerScore
entities	include/libxml/tree.h	/^    void          *entities;    \/* Hash table for entities if any *\/$/;"	m	struct:_xmlDtd
entity	include/libxml/parser.h	/^    xmlParserInputPtr  entity;        \/* used to check entities boundaries *\/$/;"	m	struct:_xmlParserCtxt
entityDecl	include/libxml/parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandler
entityDecl	include/libxml/parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandlerV1
entityDeclSAXFunc	include/libxml/parser.h	/^typedef void (*entityDeclSAXFunc) (void *ctx,$/;"	t
enumerator	src/mcdlutil.cpp	/^    int enumerator;$/;"	m	class:OpenBabel::TSingleAtom	file:
enumerator	src/mcdlutil.cpp	/^    int enumerator;$/;"	m	class:OpenBabel::TSingleBond	file:
eol	src/formats/adfformat.cpp	/^    void eol( istream& is ) const { string s; getline( is, s ); getline( is, s ); }$/;"	f	class:OpenBabel::OBT41Format	file:
epsilon	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
eq	src/formats/cifformat.cpp	/^  bool ci_char_traits::eq( char c1, char c2 )$/;"	f	class:OpenBabel::ci_char_traits
equ2	src/formats/libinchi/ichican2.c	/^    AT_NUMB *equ2; \/* mcr *\/$/;"	m	struct:tagUnorderedPartition	file:
equal	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::equal(const iter& one_, const iter& two, const iter& three_) const$/;"	f	class:tree
equal	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::equal(const iter& one_, const iter& two, const iter& three_, BinaryPredicate fun) const$/;"	f	class:tree
equal_subtree	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::equal_subtree(const iter& one_, const iter& two_) const$/;"	f	class:tree
equal_subtree	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::equal_subtree(const iter& one_, const iter& two_, BinaryPredicate fun) const$/;"	f	class:tree
equilArrow	src/formats/chemdrawcdx.cpp	/^  enum graphicType {none, equilArrow};$/;"	e	enum:OpenBabel::ChemDrawBinaryXFormat::graphicType	file:
equivalenceList	src/mcdlutil.cpp	/^  void equivalenceList(OBMol * pmol,  std::vector<int>& eqList) {$/;"	f	namespace:OpenBabel
equivalenceList	src/mcdlutil.cpp	/^  void equivalenceList(const std::vector<int> aPosition,const std::vector<int> aCharge,$/;"	f	namespace:OpenBabel
equivalentAtoms	src/pointgroup.cpp	/^    bool equivalentAtoms(OBAtom &a1, OBAtom &a2)$/;"	f	class:OpenBabel::PointGroupPrivate
erase	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::erase(iter it)$/;"	f	class:tree
erase_children	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::erase_children(const iterator_base& it)$/;"	f	class:tree
erf	include/openbabel/math/erf.h	/^inline double erf(double x)$/;"	f	namespace:temperf
erfc	include/openbabel/math/erf.h	/^inline double erfc(double x)$/;"	f	namespace:temperf
errNo	include/libxml/parser.h	/^    int errNo;                        \/* error code *\/$/;"	m	struct:_xmlParserCtxt
error	include/libxml/parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandler
error	include/libxml/parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandlerV1
error	include/libxml/valid.h	/^    xmlValidityErrorFunc error;		\/* the callback in case of errors *\/$/;"	m	struct:_xmlValidCtxt
error	include/libxml/xmlIO.h	/^    int error;$/;"	m	struct:_xmlOutputBuffer
error	include/libxml/xmlIO.h	/^    int error;$/;"	m	struct:_xmlParserInputBuffer
error	include/libxml/xpath.h	/^    int error;				\/* error code *\/$/;"	m	struct:_xmlXPathParserContext
error	include/libxml/xpath.h	/^    xmlStructuredErrorFunc error;       \/* the callback in case of errors *\/$/;"	m	struct:_xmlXPathContext
errorCode	src/formats/smiley.h	/^      ErrorCode errorCode() const$/;"	f	class:Smiley::Exception
errorMsg	src/formats/dlpolyformat.cpp	/^    std::stringstream errorMsg;$/;"	m	class:OpenBabel::DlpolyInputReader	file:
errorMsg	src/formats/gamessukformat.cpp	/^    stringstream errorMsg;$/;"	m	class:OpenBabel::GAMESSUKFormat	file:
errorQualifier	include/openbabel/oberror.h	/^  enum errorQualifier {always, onceOnly};$/;"	g	namespace:OpenBabel
errorSAXFunc	include/libxml/parser.h	/^typedef void (*errorSAXFunc) (void *ctx,$/;"	t
errors_	include/openbabel/json/json.h	/^      Errors errors_;$/;"	m	class:Json::Reader
establish_pairs	src/pointgroup.cpp	/^    establish_pairs( SYMMETRY_ELEMENT *elem )$/;"	f	class:OpenBabel::PointGroupPrivate
eta	src/charges/eqeq.h	/^const double eta = 50; \/\/ Ewald splitting parameter$/;"	v
etab	include/openbabel/mol.h	/^  EXTERN  OBElementTable   etab;$/;"	m	namespace:OpenBabel
etab	src/data.cpp	/^  OBElementTable   etab;$/;"	m	namespace:OpenBabel	file:
etype	include/libxml/entities.h	/^    xmlEntityType          etype;	\/* The entity type *\/$/;"	m	struct:_xmlEntity
etype	include/libxml/tree.h	/^    xmlElementTypeVal      etype;	\/* The type *\/$/;"	m	struct:_xmlElement
eval	src/chains.cpp	/^    MonOpStruct eval;     \/\/!< Eval - push current neighbors onto the stack$/;"	m	union:OpenBabel::_ByteCode	file:
eval_horn_NR_corrxn	src/math/align.cpp	/^  static double eval_horn_NR_corrxn(const vector<double> &c, const double x)$/;"	f	namespace:OpenBabel
eval_optimization_target_function	src/pointgroup.cpp	/^    eval_optimization_target_function( SYMMETRY_ELEMENT *elem, int *finish )$/;"	f	class:OpenBabel::PointGroupPrivate
event_filter	include/OB-BGL/mol_graph.h	/^    typedef Tag event_filter;$/;"	t	struct:boost::functor_caller
event_filter	include/OB-BGL/mol_graph.h	/^    typedef Tag event_filter;$/;"	t	struct:boost::recorder
exactAtom	src/mcdlutil.cpp	/^  const int exactAtom[NEXACTATOMS]={6,14,5,50,82,8,16,34,52,7,15,33,51,9,17,35,53,32,13,26,80};$/;"	m	namespace:OpenBabel	file:
examine_edge	include/OB-BGL/verbose_visitors.h	/^    void examine_edge( edge e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
examine_edge	include/OB-BGL/verbose_visitors.h	/^    void examine_edge(Edge u, const Graph& g)$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
examine_vertex	include/OB-BGL/verbose_visitors.h	/^    void examine_vertex( vertex e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
expandKekulize	src/kekulize.cpp	/^  bool expandKekulize(OBMol *mol, int bond_idx,$/;"	f	namespace:OpenBabel
expand_cycle	src/kekulize.cpp	/^  int expand_cycle (OBMol *mol, OBAtom *atom, OBBitVec &avisit, OBBitVec &cvisit,$/;"	f	namespace:OpenBabel
expand_kekulize	src/kekulize.cpp	/^  bool OBMol::expand_kekulize(int bond_idx,$/;"	f	class:OpenBabel::OBMol
expand_kekulize_lssr	src/kekulize.cpp	/^  bool expand_kekulize_lssr(OBMol *mol,$/;"	f	namespace:OpenBabel
expandcycle	src/kekulize.cpp	/^  bool OBMol::expandcycle (OBAtom *atom, OBBitVec &avisit, const OBBitVec &potAromBonds)$/;"	f	class:OpenBabel::OBMol
expectToken	src/formats/json/jsoncpp.cpp	/^Reader::expectToken( TokenType type, Token &token, const char *message )$/;"	f	class:Json::Reader
expr	include/openbabel/parsmart.h	/^    AtomExpr *expr;$/;"	m	struct:OpenBabel::__anon55
expr	include/openbabel/parsmart.h	/^    BondExpr *expr;$/;"	m	struct:OpenBabel::__anon54
expr	src/formats/smiley.h	/^    SmartsAtomExpr *expr;$/;"	m	struct:Smiley::SmartsAtom
expr	src/formats/smiley.h	/^    SmartsBondExpr *expr;$/;"	m	struct:Smiley::SmartsBond
extSubSystem	include/libxml/parser.h	/^    xmlChar *          extSubSystem;  \/* SYSTEM ID of external subset *\/$/;"	m	struct:_xmlParserCtxt
extSubURI	include/libxml/parser.h	/^    xmlChar *          extSubURI;     \/* URI of external subset *\/$/;"	m	struct:_xmlParserCtxt
extSubset	include/libxml/tree.h	/^    struct _xmlDtd  *extSubset;	\/* the document external subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd
extend	src/formats/ArrayList.c	/^static void extend (ArrayList *array){$/;"	f	file:
extended	include/libxml/xlink.h	/^    xlinkExtendedLinkFunk extended;$/;"	m	struct:_xlinkHandler
external	include/libxml/parser.h	/^    int              external;        \/* are we parsing an external entity *\/$/;"	m	struct:_xmlParserCtxt
external	include/openbabel/base.h	/^    external,            \/\/!< Added by an external program$/;"	e	enum:OpenBabel::DataOrigin
externalSubset	include/libxml/parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandler
externalSubset	include/libxml/parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandlerV1
externalSubsetSAXFunc	include/libxml/parser.h	/^typedef void (*externalSubsetSAXFunc) (void *ctx,$/;"	t
extra	include/libxml/tree.h	/^    unsigned short   extra;	\/* extra data for XPath\/XSLT *\/$/;"	m	struct:_xmlNode
extra	include/libxml/xpath.h	/^    void *extra;                        \/* needed for XSLT *\/$/;"	m	struct:_xmlXPathContext
extra	include/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_	include/openbabel/json/json.h	/^         Location extra_;$/;"	m	class:Json::Reader::ErrorInfo
extra_len	include/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	include/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
extractFragment	src/mcdlutil.cpp	/^  TEditedMolecule * TEditedMolecule::extractFragment(int atomN, std::vector<int> * enumerator) {$/;"	f	class:OpenBabel::TEditedMolecule
extract_ChargeRadical	src/formats/libinchi/util.c	/^int extract_ChargeRadical( char *elname, int *pnRadical, int *pnCharge )$/;"	f
extract_H_atoms	src/formats/libinchi/util.c	/^int extract_H_atoms( char *elname, S_CHAR num_iso_H[] )$/;"	f
extract_cas_rn	include/inchi/lreadmol.h	/^long extract_cas_rn( char *line )$/;"	f
extract_inchi_substring	src/formats/libinchi/util.c	/^void extract_inchi_substring(char ** buf, const char *str, size_t slen)$/;"	f
extract_thermo	src/formats/gaussformat.cpp	/^  static int extract_thermo(OpenBabel::OBMol *mol,string method,double temperature,$/;"	f	namespace:OpenBabel
extract_thermochemistry	src/data_utilities.cpp	/^bool extract_thermochemistry(OpenBabel::OBMol  &mol,$/;"	f	namespace:OpenBabel
f	include/inchi/mode.h	/^    FILE* f;$/;"	m	struct:tagOutputStream
f2c	src/formats/cifformat.cpp	/^  void CIFData::f2c(float &x,float &y, float &z)$/;"	f	class:OpenBabel::CIFData
fAtom	src/mcdlutil.cpp	/^    std::vector<TSingleAtom*> fAtom;$/;"	m	class:OpenBabel::TSimpleMolecule	file:
fBond	src/mcdlutil.cpp	/^    std::vector<TSingleBond*> fBond;$/;"	m	class:OpenBabel::TSimpleMolecule	file:
fIOPT10	src/mcdlutil.cpp	/^    bool fIOPT10;   \/\/charge sensitivite$/;"	m	class:OpenBabel::TEditedMolecule	file:
fIOPT11	src/mcdlutil.cpp	/^    bool fIOPT11;   \/\/isotopes difference$/;"	m	class:OpenBabel::TEditedMolecule	file:
fIOPT12	src/mcdlutil.cpp	/^    int  fIOPT12;   \/\/stereo bond change$/;"	m	class:OpenBabel::TEditedMolecule	file:
fIOPT13	src/mcdlutil.cpp	/^    bool fIOPT13;   \/\/semipolar bond as double$/;"	m	class:OpenBabel::TEditedMolecule	file:
fIncludedList	src/mcdlutil.cpp	/^    std::vector<int>* fIncludedList;$/;"	m	class:OpenBabel::TEditedMolecule	file:
fIsQueryPrepare	src/mcdlutil.cpp	/^    bool queryStereoQ,fIsQueryPrepare;$/;"	m	class:OpenBabel::TEditedMolecule	file:
fNumAllChgT	src/formats/libinchi/ichirvr3.c	88;"	d	file:
fNumNNegChgN	src/formats/libinchi/ichirvr3.c	85;"	d	file:
fNumNNegChgO	src/formats/libinchi/ichirvr3.c	84;"	d	file:
fNumNNeutrlH	src/formats/libinchi/ichirvr3.c	86;"	d	file:
fNumNPosChgH	src/formats/libinchi/ichirvr3.c	82;"	d	file:
fNumNPosChgU	src/formats/libinchi/ichirvr3.c	83;"	d	file:
fNumRNegChgN	src/formats/libinchi/ichirvr3.c	79;"	d	file:
fNumRNegChgO	src/formats/libinchi/ichirvr3.c	78;"	d	file:
fNumRNeutrlH	src/formats/libinchi/ichirvr3.c	80;"	d	file:
fNumRPosChgH	src/formats/libinchi/ichirvr3.c	76;"	d	file:
fNumRPosChgU	src/formats/libinchi/ichirvr3.c	77;"	d	file:
fPtrEnd	include/inchi/ichimain.h	/^    long          fPtrEnd;    \/* or number of errors *\/$/;"	m	struct:tagStructData
fPtrStart	include/inchi/ichimain.h	/^    long          fPtrStart;  \/* or number of processed structures *\/$/;"	m	struct:tagStructData
fablockstart	src/formats/MCDLformat.cpp	/^  string fablockstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
facet	include/libxml/schemasInternals.h	/^    xmlSchemaFacetPtr facet;\/* the linked facet *\/$/;"	m	struct:_xmlSchemaFacetLink
facetSet	include/libxml/schemasInternals.h	/^    xmlSchemaFacetLinkPtr facetSet;$/;"	m	struct:_xmlSchemaType
facets	include/libxml/schemasInternals.h	/^    xmlSchemaFacetPtr facets;$/;"	m	struct:_xmlSchemaType
factor	include/openbabel/forcefield.h	/^    double factor, constraint_value;$/;"	m	class:OpenBabel::OBFFConstraint
fast_alloc	include/inchi/mode.h	1025;"	d
fast_alloc	include/inchi/mode.h	1028;"	d
fast_free	include/inchi/mode.h	1026;"	d
fast_free	include/inchi/mode.h	1029;"	d
fast_memcpy	src/snprintf.c	364;"	d	file:
fast_memset	src/snprintf.c	371;"	d	file:
fatalError	include/libxml/parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandler
fatalError	include/libxml/parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandlerV1
fatalErrorSAXFunc	include/libxml/parser.h	/^typedef void (*fatalErrorSAXFunc) (void *ctx,$/;"	t
fbblockstart	src/formats/MCDLformat.cpp	/^  string fbblockstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fchargeblockstart	src/formats/MCDLformat.cpp	/^  string fchargeblockstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fchstart	src/formats/MCDLformat.cpp	/^  string fchstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fcond	src/chains.cpp	/^    union _ByteCode *fcond;$/;"	m	struct:OpenBabel::__anon71	typeref:union:OpenBabel::__anon71::_ByteCode	file:
features_	include/openbabel/json/json.h	/^      Features features_;$/;"	m	class:Json::Reader
feet	include/openbabel/tree/tree.hh	/^		tree_node *head, *feet;    \/\/ head\/feet are always dummy; if an iterator points to them it is invalid$/;"	m	class:tree
file	include/libxml/xmlerror.h	/^    char       *file;	\/* the filename *\/$/;"	m	struct:_xmlError
fileMenu	src/GUI/OBGUI.h	/^  wxMenu* fileMenu;$/;"	m	class:OBGUIFrame
file_line	src/formats/lpmdformat.cpp	/^  int file_line;$/;"	m	class:OpenBabel::LpmdFormat	file:
fileformatInput	include/openbabel/base.h	/^    fileformatInput,     \/\/!< Read from an input file$/;"	e	enum:OpenBabel::DataOrigin
filename	include/libxml/debugXML.h	/^    char *filename;$/;"	m	struct:_xmlShellCtxt
filename	include/libxml/parser.h	/^    const char *filename;             \/* The file analyzed, if any *\/$/;"	m	struct:_xmlParserInput
fill_crc32_data	src/formats/libinchi/ichican2.c	/^void fill_crc32_data()$/;"	f
fill_input_buffer	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::fill_input_buffer(void)$/;"	f	class:basic_unzip_streambuf
final_parity	include/inchi/extr_ct.h	/^    S_CHAR final_parity;   \/* defined by equivalence ranks *\/$/;"	m	struct:tagAtom
final_parity2	include/inchi/extr_ct.h	/^    S_CHAR final_parity2;  \/* defined by equivalence ranks, incl. due to terminal isotopic H *\/$/;"	m	struct:tagAtom
finalize	include/openbabel/lineend.h	/^  void finalize( std::streambuf& ) {}$/;"	f	class:OpenBabel::LineEndingExtractor
finalstr	src/formats/MCDLformat.cpp	/^  string  finalstr;$/;"	m	class:OpenBabel::MCDLFormat	file:
find	src/formats/cifformat.cpp	/^  const char* ci_char_traits::find( const char* s, int n, char a )$/;"	f	class:OpenBabel::ci_char_traits
findAlternateSinglets	src/mcdlutil.cpp	/^  static int findAlternateSinglets(const std::vector<int>iA1, const std::vector<int>iA2, const std::vector<int> nH,$/;"	f	namespace:OpenBabel
findArrayListElement	src/formats/ArrayList.c	/^void *findArrayListElement(const ArrayList *array, const void *item, int (*comparator)(const void *item1, const void *item2)){$/;"	f
findAtomWithSymmetryClass	src/stereo/perception.cpp	/^  OBAtom* findAtomWithSymmetryClass(OBAtom *atom, unsigned int symClass, const std::vector<unsigned int> &symClasses)$/;"	f	namespace:OpenBabel
findCenterAndNormal	src/ring.cpp	/^  bool OBRing::findCenterAndNormal(vector3 & center, vector3 &norm1, vector3 &norm2)$/;"	f	class:OpenBabel::OBRing
findDuplicatedSymmetryClass	src/stereo/perception.cpp	/^  unsigned int findDuplicatedSymmetryClass(OBAtom *atom, const std::vector<unsigned int> &symClasses)$/;"	f	namespace:OpenBabel
findDuplicatedSymmetryClasses	src/stereo/perception.cpp	/^  std::vector<unsigned int> findDuplicatedSymmetryClasses(OBAtom *atom, const std::vector<unsigned int> &symClasses)$/;"	f	namespace:OpenBabel
findDuplicatedSymmetryClasses	src/stereo/perception.cpp	/^  void findDuplicatedSymmetryClasses(OBAtom *atom, const std::vector<unsigned int> &symClasses,$/;"	f	namespace:OpenBabel
findEigenvectorsIfSymmetric	src/math/matrix3x3.cpp	/^  matrix3x3 matrix3x3::findEigenvectorsIfSymmetric(vector3 &eigenvals) const$/;"	f	class:OpenBabel::matrix3x3
findFiles	src/dlhandler_unix.cpp	/^int DLHandler::findFiles (std::vector <std::string>& file_list,$/;"	f	class:DLHandler
findFiles	src/dlhandler_unix.cpp	/^int DLHandler::findFiles (std::vector<std::string>& file_list,$/;"	f	class:DLHandler
findFiles	src/dlhandler_win32.cpp	/^int DLHandler :: findFiles (std::vector<std::string>& file_list,const std::string &filename)$/;"	f	class:DLHandler
findFiles	src/dlhandler_win32.cpp	/^int DLHandler :: findFiles (std::vector<std::string>& file_list,const std::string &pattern,const std::string &path)$/;"	f	class:DLHandler
findIndexOfArrayListElement	src/formats/ArrayList.c	/^int findIndexOfArrayListElement(const ArrayList *array, const void *item, int (*comparator)(const void *item1, const void *item2)){$/;"	f
findMatchingBracket	src/formats/smiley.h	/^      std::size_t findMatchingBracket(const std::string &open, const std::string &close, std::size_t pos = 0)$/;"	f	class:Smiley::Parser
findMetalloceneBonds	src/canon.cpp	/^  void findMetalloceneBonds(std::vector<OBBond*> &bonds, OBMol *mol, const std::vector<unsigned int> &symmetry_classes)$/;"	f	namespace:OpenBabel
findStartAtoms	src/canon.cpp	/^    static std::vector<OBAtom*> findStartAtoms(OBMol *mol, const OBBitVec &fragment, const std::vector<unsigned int> &symmetry_classes)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
find_atoms_with_parity	src/formats/libinchi/ichicans.c	/^int find_atoms_with_parity( sp_ATOM *at, S_CHAR *visited, int from_atom, int cur_atom )$/;"	f
find_c2_axes	src/pointgroup.cpp	/^    find_c2_axes(void)$/;"	f	class:OpenBabel::PointGroupPrivate
find_center_of_something	src/pointgroup.cpp	/^    find_center_of_something( void )$/;"	f	class:OpenBabel::PointGroupPrivate
find_higher_axes	src/pointgroup.cpp	/^    find_higher_axes(void)$/;"	f	class:OpenBabel::PointGroupPrivate
find_improper_axes	src/pointgroup.cpp	/^    find_improper_axes(void)$/;"	f	class:OpenBabel::PointGroupPrivate
find_infinity_axis	src/pointgroup.cpp	/^    find_infinity_axis(void)$/;"	f	class:OpenBabel::PointGroupPrivate
find_inversion_centers	src/pointgroup.cpp	/^    find_inversion_centers(void)$/;"	f	class:OpenBabel::PointGroupPrivate
find_planes	src/pointgroup.cpp	/^    find_planes(void)$/;"	f	class:OpenBabel::PointGroupPrivate
find_symmetry_elements	src/pointgroup.cpp	/^    find_symmetry_elements( void )$/;"	f	class:OpenBabel::PointGroupPrivate
fingerprint2	src/fingerprints/finger2.cpp	/^	fingerprint2(const char* ID, bool IsDefault=false)$/;"	f	class:OpenBabel::fingerprint2
fingerprint2	src/fingerprints/finger2.cpp	/^class fingerprint2 : public OBFingerprint$/;"	c	namespace:OpenBabel	file:
fingerprintECFP	src/fingerprints/fingerecfp.cpp	/^	fingerprintECFP(const char* ID, bool IsDefault=false,$/;"	f	class:OpenBabel::fingerprintECFP
fingerprintECFP	src/fingerprints/fingerecfp.cpp	/^class fingerprintECFP : public OBFingerprint$/;"	c	namespace:OpenBabel	file:
finishDtd	include/libxml/valid.h	/^    unsigned int     finishDtd;       \/* finished validating the Dtd ? *\/$/;"	m	struct:_xmlValidCtxt
finish_vertex	include/OB-BGL/verbose_visitors.h	/^    void finish_vertex( vertex e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
finish_vertex	include/OB-BGL/verbose_visitors.h	/^    void finish_vertex(Vertex u, const Graph& g)$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
finished	src/zipstreamimpl.h	/^void basic_zip_ostream<charT, traits>::finished(void)$/;"	f	class:basic_zip_ostream
first	include/openbabel/obutil.h	/^      T1 first;$/;"	m	struct:OpenBabel::quad
first	include/openbabel/obutil.h	/^      T1 first;$/;"	m	struct:OpenBabel::triple
first	src/formats/libinchi/ichican2.c	/^    int       first; \/* index of the first cell element in Partition::AtNumber[] *\/$/;"	m	struct:tagCell	file:
firstID	include/openbabel/inchiformat.h	/^  string firstID;$/;"	m	class:OpenBabel::InChIFormat
firstInchi	include/openbabel/inchiformat.h	/^  string firstInchi;$/;"	m	class:OpenBabel::InChIFormat
first_child	include/openbabel/tree/tree.hh	/^	   tree_node_<T> *first_child, *last_child;$/;"	m	class:tree_node_
first_struct_number	include/inchi/ichidrp.h	/^    long            first_struct_number;$/;"	m	struct:tagInputParms
first_type	include/openbabel/obutil.h	/^      typedef T1 first_type;$/;"	t	struct:OpenBabel::quad
first_type	include/openbabel/obutil.h	/^      typedef T1 first_type;$/;"	t	struct:OpenBabel::triple
firstfp	src/formats/fingerprintformat.cpp	/^    vector<unsigned int> firstfp;$/;"	m	class:OpenBabel::FingerprintFormat	file:
firstmatch	src/ops/opisomorph.h	/^  std::vector<int> firstmatch; \/\/Idxes of first match by SMARTS or OBIsomorphismMapper$/;"	m	class:OpenBabel::OpNewS
firstname	src/formats/fingerprintformat.cpp	/^    string firstname;$/;"	m	class:OpenBabel::FingerprintFormat	file:
fixRhombohedralSpaceGroupReader	src/formats/pdbformat.cpp	/^  static void fixRhombohedralSpaceGroupReader(string &strHM)$/;"	f	namespace:OpenBabel
fixRhombohedralSpaceGroupWriter	src/formats/pdbformat.cpp	/^  static void fixRhombohedralSpaceGroupWriter(string &strHM)$/;"	f	namespace:OpenBabel
fix_isofixedh	include/inchi/inchi_dll_a.h	/^    int fix_isofixedh; \/*^^^ 04-12-2008 *\/$/;"	m	struct:tagCOMPONENT_TREAT_INFO
fix_odd_things	src/formats/libinchi/strutil.c	/^int fix_odd_things( int num_atoms, inp_ATOM *at, int bFixBug, int bFixNonUniformDraw )$/;"	f
fix_special_bonds	src/formats/libinchi/ichi_bns.c	/^int fix_special_bonds( BN_STRUCT *pBNS, inp_ATOM *at, int num_atoms, int forbidden_mask )$/;"	f
fix_termhchrg	include/inchi/inchi_dll_a.h	/^    int fix_termhchrg; \/*^^^ 07-06-2008 *\/$/;"	m	struct:tagCOMPONENT_TREAT_INFO
fixed	include/libxml/schemasInternals.h	/^    int fixed;$/;"	m	struct:_xmlSchemaFacet
fixed_H	include/inchi/ichirvrs.h	/^    S_CHAR       *fixed_H;  \/* from original InChI[0] in case of Fixed-H only *\/$/;"	m	struct:tagStructFromInChI
fixed_H_at1_more	include/inchi/strutil.h	/^    AT_NUMB fixed_H_at1_more[ICR_MAX_DIFF_FIXED_H];  \/* extra fixed_H *\/$/;"	m	struct:tagInChICompareResults
fixed_H_at2_more	include/inchi/strutil.h	/^    AT_NUMB fixed_H_at2_more[ICR_MAX_DIFF_FIXED_H];  \/* missed fixed_H *\/$/;"	m	struct:tagInChICompareResults
fixed_H_nH1_more	include/inchi/strutil.h	/^    S_CHAR  fixed_H_nH1_more[ICR_MAX_DIFF_FIXED_H];$/;"	m	struct:tagInChICompareResults
fixed_H_nH2_more	include/inchi/strutil.h	/^    S_CHAR  fixed_H_nH2_more[ICR_MAX_DIFF_FIXED_H];$/;"	m	struct:tagInChICompareResults
fixed_depth_iterator	include/openbabel/tree/tree.hh	/^		class fixed_depth_iterator : public iterator_base {$/;"	c	class:tree
fixed_depth_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::fixed_depth_iterator::fixed_depth_iterator()$/;"	f	class:tree::fixed_depth_iterator
fixed_depth_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::fixed_depth_iterator::fixed_depth_iterator(const fixed_depth_iterator& other)$/;"	f	class:tree::fixed_depth_iterator
fixed_depth_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::fixed_depth_iterator::fixed_depth_iterator(const iterator_base& other)$/;"	f	class:tree::fixed_depth_iterator
fixed_depth_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::fixed_depth_iterator::fixed_depth_iterator(const sibling_iterator& other)$/;"	f	class:tree::fixed_depth_iterator
fixed_depth_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::fixed_depth_iterator::fixed_depth_iterator(tree_node *tn)$/;"	f	class:tree::fixed_depth_iterator
flag	src/chains.cpp	/^    int flag;        \/\/!< binary flag representing this atom type$/;"	m	struct:OpenBabel::Template	file:
flag	src/chains.cpp	/^    int flag;$/;"	m	struct:OpenBabel::__anon69	file:
flagAvailable	include/openbabel/json/json.h	/^         flagAvailable = 0,$/;"	e	enum:Json::ValueInternalLink::InternalFlags
flagUsed	include/openbabel/json/json.h	/^         flagUsed = 1$/;"	e	enum:Json::ValueInternalLink::InternalFlags
flags	include/inchi/strutil.h	/^    INCHI_MODE flags;$/;"	m	struct:tagInChICompareResults
flags	include/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchema
flags	include/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttribute
flags	include/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttributeGroup
flags	include/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaElement
flags	include/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaType
flags	include/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaWildcard
flags	include/openbabel/chains.h	/^      std::vector<unsigned char>  flags;$/;"	m	class:OpenBabel::OBChainsParser
flags	src/formats/yasaraformat.cpp	/^  uint32 flags;                    \/* Use the same MOB_ masks as mobatom *\/$/;"	m	struct:OpenBabel::atomid	file:
flatten	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::flatten(iter position)$/;"	f	class:tree
flipSmall	src/mcdlutil.cpp	/^  void TSimpleMolecule::flipSmall(int cHB) {$/;"	f	class:OpenBabel::TSimpleMolecule
floatGrid	src/griddata.cpp	/^    OBFloatGrid  floatGrid;$/;"	m	class:OpenBabel::GridDataPrivate	file:
floatval	include/libxml/xpath.h	/^    double floatval;$/;"	m	struct:_xmlXPathObject
flow	include/inchi/ichi_bns.h	/^    EdgeFlow   flow;$/;"	m	struct:tagBNS_FLOW_CHANGES
flow	include/inchi/ichi_bns.h	/^    VertexFlow   flow[2];$/;"	m	union:BnsAltPath
flow	include/inchi/ichi_bns.h	/^  EdgeFlow  flow;                           \/* Edge flow *\/$/;"	m	struct:BnsEdge
flow	include/inchi/ichi_bns.h	/^  VertexFlow flow;                           \/* Edge flow *\/$/;"	m	struct:BnsStEdge
flow	include/inchi/ichirvrs.h	/^    S_CHAR  flow;$/;"	m	struct:tagEdgeCapFlow
flow	include/inchi/ichirvrs.h	/^    S_CHAR  flow;$/;"	m	struct:tagVertCapFlow
flow0	include/inchi/ichi_bns.h	/^  EdgeFlow  flow0;                          \/* Initial flow *\/$/;"	m	struct:BnsEdge
flow0	include/inchi/ichi_bns.h	/^  VertexFlow flow0;                          \/* Initial edge flow *\/$/;"	m	struct:BnsStEdge
flow_st1	include/inchi/ichi_bns.h	/^    VertexFlow flow_st1;$/;"	m	struct:tagBNS_FLOW_CHANGES
flow_st2	include/inchi/ichi_bns.h	/^    VertexFlow flow_st2;$/;"	m	struct:tagBNS_FLOW_CHANGES
flush	src/zipstreamimpl.h	/^std::streamsize basic_zip_streambuf<charT, traits>::flush(void)$/;"	f	class:basic_zip_streambuf
fnastart	src/formats/MCDLformat.cpp	/^  string fnastart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fnbstart	src/formats/MCDLformat.cpp	/^  string fnbstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fontFamily	src/depict/depict.cpp	/^      std::string fontFamily;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
fontSize	include/openbabel/depict/painter.h	/^    int    fontSize;$/;"	m	struct:OpenBabel::OBFontMetrics
fontSize	src/depict/depict.cpp	/^      int        fontSize, subscriptSize;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
forbidden	include/inchi/ichi_bns.h	/^  S_CHAR    forbidden;$/;"	m	struct:BnsEdge
forbidden	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  forbidden;$/;"	m	struct:tagMobileHGroups	file:
force_a	include/openbabel/forcefield.h	/^    double force_a[3], force_b[3];$/;"	m	class:OpenBabel::OBFFCalculation2
force_ab_a	src/forcefields/forcefieldmmff94.h	/^      double force_ab_a[3], force_ab_b[3], force_bc_b[3], force_bc_c[3];$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
force_ab_b	src/forcefields/forcefieldmmff94.h	/^      double force_ab_a[3], force_ab_b[3], force_bc_b[3], force_bc_c[3];$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
force_abc_a	src/forcefields/forcefieldmmff94.h	/^      double force_abc_a[3], force_abc_b[3], force_abc_c[3];$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
force_abc_b	src/forcefields/forcefieldmmff94.h	/^      double force_abc_a[3], force_abc_b[3], force_abc_c[3];$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
force_abc_c	src/forcefields/forcefieldmmff94.h	/^      double force_abc_a[3], force_abc_b[3], force_abc_c[3];$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
force_b	include/openbabel/forcefield.h	/^    double force_a[3], force_b[3];$/;"	m	class:OpenBabel::OBFFCalculation2
force_bc_b	src/forcefields/forcefieldmmff94.h	/^      double force_ab_a[3], force_ab_b[3], force_bc_b[3], force_bc_c[3];$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
force_bc_c	src/forcefields/forcefieldmmff94.h	/^      double force_ab_a[3], force_ab_b[3], force_bc_b[3], force_bc_c[3];$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
force_c	include/openbabel/forcefield.h	/^    double force_c[3];$/;"	m	class:OpenBabel::OBFFCalculation3
force_d	include/openbabel/forcefield.h	/^    double force_d[3];$/;"	m	class:OpenBabel::OBFFCalculation4
forces	src/forcefields/forcefieldmm2.h	/^      std::vector<vector3> forces; \/\/ used to hold forces on each atom$/;"	m	class:OpenBabel::OBForceFieldMM2
forces	src/formats/dlpolyformat.cpp	/^    std::vector< vector3 > forces;$/;"	m	class:OpenBabel::DlpolyInputReader	file:
forces	src/formats/lpmdformat.cpp	/^  std::vector< vector3 > forces;$/;"	m	class:OpenBabel::LpmdFormat	file:
forward_or_cross_edge	include/OB-BGL/verbose_visitors.h	/^    void forward_or_cross_edge(Edge u, const Graph& g)$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
fourth	include/openbabel/obutil.h	/^      T4 fourth;$/;"	m	struct:OpenBabel::quad
fourth_type	include/openbabel/obutil.h	/^      typedef T4 fourth_type;$/;"	t	struct:OpenBabel::quad
fpid	include/openbabel/fingerprint.h	/^  char fpid[16];            \/\/\/<ID of the fingerprint type$/;"	m	struct:OpenBabel::FptIndexHeader
fprint_digest	src/formats/libinchi/ikey_dll.c	/^void fprint_digest(FILE* fw, const char *header, unsigned char *a)$/;"	f
fprintf2	include/inchi/ichiparm.h	2405;"	d
fptdata	include/openbabel/fingerprint.h	/^  std::vector<unsigned int> fptdata;$/;"	m	struct:OpenBabel::FptIndex
fptr	include/inchi/inpdef.h	/^    INCHI_FPTR *fptr;      \/* input:  fptr[cur_fptr]   = file pointer to the structure to read *\/$/;"	m	struct:tagStructFptrs
fradstart	src/formats/MCDLformat.cpp	/^  string fradstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fragFirstAtomNo	src/mcdlutil.cpp	/^    int fragID1,fragID2,fragID3,fragFirstAtomNo;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragHeight	src/mcdlutil.cpp	/^    double fragWidth,fragHeight,fragTop,fragLeft;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragID1	src/mcdlutil.cpp	/^    int fragID1,fragID2,fragID3,fragFirstAtomNo;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragID2	src/mcdlutil.cpp	/^    int fragID1,fragID2,fragID3,fragFirstAtomNo;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragID3	src/mcdlutil.cpp	/^    int fragID1,fragID2,fragID3,fragFirstAtomNo;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragIndex	src/mcdlutil.cpp	/^    int fragIndex;$/;"	m	class:OpenBabel::TSingleAtom	file:
fragLeft	src/mcdlutil.cpp	/^    double fragWidth,fragHeight,fragTop,fragLeft;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragTop	src/mcdlutil.cpp	/^    double fragWidth,fragHeight,fragTop,fragLeft;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragWidth	src/mcdlutil.cpp	/^    double fragWidth,fragHeight,fragTop,fragLeft;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragment	include/libxml/uri.h	/^    char *fragment;	\/* the fragment identifier *\/$/;"	m	struct:_xmlURI
fragment	src/canon.cpp	/^      const OBBitVec &fragment;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
fragmentCount	src/mcdlutil.cpp	/^    int fragmentCount;$/;"	m	class:OpenBabel::PartFragmentDefinition	file:
fragmentSearch	src/mcdlutil.cpp	/^  bool TEditedMolecule::fragmentSearch(TEditedMolecule * molecule1, std::vector<int>* bondLabel) {$/;"	f	class:OpenBabel::TEditedMolecule
fragmentSearch	src/mcdlutil.cpp	/^  bool fragmentSearch(OBMol * query, OBMol * structure) {$/;"	f	namespace:OpenBabel
fragmentSearch	src/mcdlutil.cpp	/^  bool fragmentSearch(const std::vector<int> aPositionQuery, const std::vector<int> iA1Query,$/;"	f	namespace:OpenBabel
fragmentSecond	src/mcdlutil.cpp	/^  int TSimpleMolecule::fragmentSecond(int sphere, int att, int secAt, const std::vector<int> a,$/;"	f	class:OpenBabel::TSimpleMolecule
fragset	src/fingerprints/finger2.cpp	/^	Fset fragset;$/;"	m	class:OpenBabel::fingerprint2	file:
free	include/libxml/parser.h	/^    xmlParserInputDeallocate free;    \/* function to deallocate the base *\/$/;"	m	struct:_xmlParserInput
freeAttrs	include/libxml/parser.h	/^    xmlAttrPtr        freeAttrs;    \/* List of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt
freeAttrsNr	include/libxml/parser.h	/^    int               freeAttrsNr;  \/* number of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt
freeElems	include/libxml/parser.h	/^    xmlNodePtr        freeElems;    \/* List of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt
freeElemsNr	include/libxml/parser.h	/^    int               freeElemsNr;  \/* number of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt
freeHead_	src/formats/json/jsoncpp.cpp	/^   AllocatedType *freeHead_;$/;"	m	class:Json::BatchAllocator	file:
free_func	include/zconf.h	47;"	d
free_func	include/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
free_t_group_info	src/formats/libinchi/ichitaut.c	/^int free_t_group_info( T_GROUP_INFO *t_group_info )$/;"	f
from	include/openbabel/stereo/tetrahedral.h	/^        unsigned long from; \/\/<! The viewing from atom id.$/;"	m	union:OpenBabel::OBTetrahedralStereo::Config::__anon66
from	src/canon.cpp	/^      std::vector<unsigned short> from;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::PartialCode	file:
from_at	include/inchi/ichicomn.h	/^    AT_RANK from_at;  \/* from_at neighbor # which has min. canon. number and can be mapped on any of the above to_at[] *\/$/;"	m	struct:tagEquNeigh
from_idx	src/formats/fastaformat.cpp	/^    size_t from_idx, to_idx;$/;"	m	struct:OpenBabel::ResidueBondRecord	file:
from_or_towards	include/openbabel/stereo/bindings.h	/^    unsigned long from_or_towards;$/;"	m	struct:OpenBabel::OBTetrahedralConfig
from_string	src/formats/dlpolyformat.cpp	/^    bool from_string(T& t, const std::string& s,$/;"	f	class:OpenBabel::DlpolyInputReader
from_string	src/formats/gamessukformat.cpp	/^    bool from_string(T& t, const std::string& s,$/;"	f	class:OpenBabel::GAMESSUKFormat
from_string	src/formats/lpmdformat.cpp	/^  bool from_string(T& t, const std::string& s, std::ios_base& (*f)(std::ios_base&))$/;"	f	class:OpenBabel::LpmdFormat
fromatom	src/formats/smilesformat.cpp	/^    OBAtom *fromatom;     \/\/ first atom in SMILES order$/;"	m	class:OpenBabel::OBBondClosureInfo	file:
fs	src/formats/fastsearchformat.cpp	/^    FastSearch fs;$/;"	m	class:OpenBabel::FastSearchFormat	file:
fsastart	src/formats/MCDLformat.cpp	/^  string fsastart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fsastart	src/mcdlutil.cpp	/^  const string fsastart="{SA:";$/;"	m	namespace:OpenBabel	file:
fsbstart	src/formats/MCDLformat.cpp	/^  string fsbstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
fsbstart	src/mcdlutil.cpp	/^  const string fsbstart="{SB:";$/;"	m	namespace:OpenBabel	file:
fsi	src/formats/fastsearchformat.cpp	/^    FastSearchIndexer* fsi;$/;"	m	class:OpenBabel::FastSearchFormat	file:
fstereobondstart	src/formats/MCDLformat.cpp	/^  string fstereobondstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
ftcn	include/inchi/ichicant.h	/^    FTCN                 ftcn[TAUT_NUM];$/;"	m	struct:tagBaseCanonNumbering
ftitlestart	src/formats/MCDLformat.cpp	/^  string ftitlestart;$/;"	m	class:OpenBabel::MCDLFormat	file:
ftpDataCallback	include/libxml/nanoftp.h	/^typedef void (*ftpDataCallback) (void *userData,$/;"	t
ftpListCallback	include/libxml/nanoftp.h	/^typedef void (*ftpListCallback) (void *userData,$/;"	t
func	include/libxml/xpath.h	/^    xmlXPathAxisFunc func;		\/* the search function *\/$/;"	m	struct:_xmlXPathAxis
func	include/libxml/xpath.h	/^    xmlXPathConvertFunc func;		\/* the conversion function *\/$/;"	m	struct:_xmlXPathType
func	include/libxml/xpath.h	/^    xmlXPathEvalFunc func;		\/* the evaluation function *\/$/;"	m	struct:_xmlXPathFunct
funcHash	include/libxml/xpath.h	/^    xmlHashTablePtr funcHash;		\/* Hash table of defined funcs *\/$/;"	m	struct:_xmlXPathContext
funcLookupData	include/libxml/xpath.h	/^    void *funcLookupData;		\/* function lookup data *\/$/;"	m	struct:_xmlXPathContext
funcLookupFunc	include/libxml/xpath.h	/^    xmlXPathFuncLookupFunc funcLookupFunc;\/* function lookup func *\/$/;"	m	struct:_xmlXPathContext
function	include/libxml/xpath.h	/^    const xmlChar *function;$/;"	m	struct:_xmlXPathContext
functionURI	include/libxml/xpath.h	/^    const xmlChar *functionURI;$/;"	m	struct:_xmlXPathContext
functor	src/isomorphism.cpp	/^        Functor &functor;$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
functor_caller	include/OB-BGL/mol_graph.h	/^    functor_caller(functor f) : m_func(f) { }$/;"	f	struct:boost::functor_caller
functor_caller	include/OB-BGL/mol_graph.h	/^struct functor_caller$/;"	s	namespace:boost
fuzzyWrapFractionalCoordinate	src/ops/fillUC.cpp	/^vector3 fuzzyWrapFractionalCoordinate (vector3 coord)$/;"	f	namespace:OpenBabel
fzcoorstart	src/formats/MCDLformat.cpp	/^  string fzcoorstart;$/;"	m	class:OpenBabel::MCDLFormat	file:
gDfs4CT_nCurrentAtom	src/formats/libinchi/ichimake.c	/^static int        gDfs4CT_nCurrentAtom;$/;"	v	file:
gDfs4CT_nDfsNumber	src/formats/libinchi/ichimake.c	/^static AT_NUMB   *gDfs4CT_nDfsNumber;$/;"	v	file:
gDfs4CT_nNumDescendants	src/formats/libinchi/ichimake.c	/^static AT_NUMB   *gDfs4CT_nNumDescendants;$/;"	v	file:
gamma	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFOOPCalculationGaff
gamma	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGaff
generateDiagram	src/mcdlutil.cpp	/^  void generateDiagram(OBMol * pmol) {$/;"	f	namespace:OpenBabel
generateDiagram	src/mcdlutil.cpp	/^  void generateDiagram(OBMol * pmol, std::ostream & ofs) {$/;"	f	namespace:OpenBabel
generateDiagram	src/mcdlutil.cpp	/^  void generateDiagram(const std::vector<int> iA1, const std::vector<int> iA2,$/;"	f	namespace:OpenBabel
generate_sequence	src/formats/fastaformat.cpp	/^  void generate_sequence(const std::string & sequence, OBMol * pmol, unsigned long chain_no, const HelixParameters & helix, const char * IUPAC_codes, ResidueRecord * Residues, double & offset_x, double & offset_Theta, unsigned long & serial_no, bool create_bonds, bool bond_orders)$/;"	f	namespace:OpenBabel
geomList	src/formats/gamessukformat.cpp	/^    vector<string> tokens, geomList; \/\/ list of lines and list of tokens on a line$/;"	m	class:OpenBabel::GAMESSUKOutputFormat	file:
get	include/OB-BGL/mol_graph.h	/^typename map_t::value_type get( map_t& map, typename map_t::key_type key )$/;"	f
get	src/formats/json/jsoncpp.cpp	/^Value::get( ArrayIndex index, $/;"	f	class:Json::Value
get	src/formats/json/jsoncpp.cpp	/^Value::get( const CppTL::ConstString &key,$/;"	f	class:Json::Value
get	src/formats/json/jsoncpp.cpp	/^Value::get( const char *key, $/;"	f	class:Json::Value
get	src/formats/json/jsoncpp.cpp	/^Value::get( const std::string &key,$/;"	f	class:Json::Value
getArrayListElement	src/formats/ArrayList.c	/^void *getArrayListElement (const ArrayList *array, int index){$/;"	f
getAtom	src/mcdlutil.cpp	/^  TSingleAtom * TSimpleMolecule::getAtom(int index) {$/;"	f	class:OpenBabel::TSimpleMolecule
getAtomMCDL	src/mcdlutil.cpp	/^  std::string getAtomMCDL(OBMol * pmol, int ntatoms, const std::vector<int> ix, const std::vector<int> aNumber, const std::vector<int> atomStereoList, const std::vector<int> eqList) {$/;"	f	namespace:OpenBabel
getAtomSymbol	src/mcdlutil.cpp	/^  std::string getAtomSymbol(TSimpleMolecule & sm, int atAtom) {$/;"	f	namespace:OpenBabel
getAtomSymbol	src/mcdlutil.cpp	/^  std::string getAtomSymbol(TSimpleMolecule & sm, int atAtom, int atEx, int priority, string ndData) {$/;"	f	namespace:OpenBabel
getBond	src/mcdlutil.cpp	/^  TSingleBond * TSimpleMolecule::getBond(int index) {$/;"	f	class:OpenBabel::TSimpleMolecule
getBondMCDL	src/mcdlutil.cpp	/^  std::string getBondMCDL(OBMol * pmol, int nbStore, int ntatoms, const std::vector<int> ix, const std::vector<int> aNumber, int bonds[MAXBONDS][4], const std::vector<int> bondStereoList, const std::vector<int> eqList) {$/;"	f	namespace:OpenBabel
getColumnNumber	include/libxml/parser.h	/^    int (*getColumnNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator
getComment	src/formats/json/jsoncpp.cpp	/^Value::getComment( CommentPlacement placement ) const$/;"	f	class:Json::Value
getConvDirectory	src/dlhandler_unix.cpp	/^bool DLHandler::getConvDirectory(string& convPath)$/;"	f	class:DLHandler
getConvDirectory	src/dlhandler_win32.cpp	/^bool DLHandler::getConvDirectory(string& convPath)$/;"	f	class:DLHandler
getDescriptor	src/canon.cpp	/^      int getDescriptor(const std::vector<unsigned int> &symmetry_classes, const std::vector<unsigned int> &labels) const$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::StereoCenter
getEntity	include/libxml/parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandler
getEntity	include/libxml/parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandlerV1
getEntitySAXFunc	include/libxml/parser.h	/^typedef xmlEntityPtr (*getEntitySAXFunc) (void *ctx,$/;"	t
getFormatFilePattern	src/dlhandler_unix.cpp	/^const char* DLHandler::getFormatFilePattern()$/;"	f	class:DLHandler
getFormatFilePattern	src/dlhandler_win32.cpp	/^const char* DLHandler::getFormatFilePattern()$/;"	f	class:DLHandler
getFormatedErrorMessages	src/formats/json/jsoncpp.cpp	/^Reader::getFormatedErrorMessages() const$/;"	f	class:Json::Reader
getFormattedErrorMessages	src/formats/json/jsoncpp.cpp	/^Reader::getFormattedErrorMessages() const$/;"	f	class:Json::Reader
getFragment	src/canon.cpp	/^  OBBitVec getFragment(OBAtom *atom, OBAtom *skip, const OBBitVec &mask)$/;"	f	namespace:OpenBabel
getFragment	src/canon.cpp	/^  OBBitVec getFragment(OBAtom *atom, const OBBitVec &mask, const std::vector<OBBond*> &metalloceneBonds = std::vector<OBBond*>())$/;"	f	namespace:OpenBabel
getFragment	src/formats/smilesformat.cpp	/^  OBBitVec getFragment(OBAtom *atom, const OBBitVec &mask)$/;"	f	namespace:OpenBabel
getFragment	src/stereo/perception.cpp	/^  OBBitVec getFragment(OBAtom *atom, OBAtom *skip)$/;"	f	namespace:OpenBabel
getFragments	src/fingerprints/finger2.cpp	/^void fingerprint2::getFragments(vector<int> levels, vector<int> curfrag,$/;"	f	class:OpenBabel::fingerprint2
getInChIChar	src/formats/libinchi/ichiread.c	/^int getInChIChar( INCHI_IOSTREAM *pInp )$/;"	f
getInchiErrName	src/formats/libinchi/ichiread.c	/^const char *getInchiErrName(int nErr)$/;"	f
getInchiStateReadErr	src/formats/libinchi/ichiread.c	/^const char *getInchiStateReadErr(int stat)$/;"	f
getInteger	src/ops/conformer.cpp	/^  void getInteger(const std::string &str, int &value)$/;"	f	namespace:OpenBabel
getLabel	src/canon.cpp	/^      inline unsigned int getLabel(const StereoCenter &c) const$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::SortStereoCenters
getLineNumber	include/libxml/parser.h	/^    int (*getLineNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator
getLocationLineAndColumn	src/formats/json/jsoncpp.cpp	/^Reader::getLocationLineAndColumn( Location location ) const$/;"	f	class:Json::Reader
getLocationLineAndColumn	src/formats/json/jsoncpp.cpp	/^Reader::getLocationLineAndColumn( Location location,$/;"	f	class:Json::Reader
getMCDL	src/formats/MCDLformat.cpp	/^  string MCDLFormat::getMCDL(OBMol* pmol, bool includeCoordinates) {$/;"	f	class:OpenBabel::MCDLFormat
getMemberNames	src/formats/json/jsoncpp.cpp	/^Value::getMemberNames() const$/;"	f	class:Json::Value
getMolTitle	src/formats/MCDLformat.cpp	/^  string MCDLFormat::getMolTitle(string & line) {$/;"	f	class:OpenBabel::MCDLFormat
getMolfile	src/mcdlutil.cpp	/^  void TSimpleMolecule::getMolfile(std::ostream & data) {$/;"	f	class:OpenBabel::TSimpleMolecule
getNH	src/mcdlutil.cpp	/^  int TSimpleMolecule::getNH(int atomNo) {$/;"	f	class:OpenBabel::TSimpleMolecule
getNextChar	src/formats/json/jsoncpp.cpp	/^Reader::getNextChar()$/;"	f	class:Json::Reader
getParameterEntity	include/libxml/parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandler
getParameterEntity	include/libxml/parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandlerV1
getParameterEntitySAXFunc	include/libxml/parser.h	/^typedef xmlEntityPtr (*getParameterEntitySAXFunc) (void *ctx,$/;"	t
getPublicId	include/libxml/parser.h	/^    const xmlChar *(*getPublicId)(void *ctx);$/;"	m	struct:_xmlSAXLocator
getSeparator	src/dlhandler_unix.cpp	/^char DLHandler::getSeparator()$/;"	f	class:DLHandler
getSeparator	src/dlhandler_win32.cpp	/^char DLHandler::getSeparator()$/;"	f	class:DLHandler
getSeparator	src/formats/xml/cmlformat.cpp	/^  std::string getSeparator()$/;"	f	namespace:OpenBabel
getSystemId	include/libxml/parser.h	/^    const xmlChar *(*getSystemId)(void *ctx);$/;"	m	struct:_xmlSAXLocator
getTimeStr	src/formats/fpsformat.cpp	/^string FPSFormat::getTimeStr()$/;"	f	class:OpenBabel::FPSFormat
getTimestr	src/formats/xml/cmlformat.cpp	/^  string CMLFormat::getTimestr()$/;"	f	class:OpenBabel::CMLFormat
getValence	src/mcdlutil.cpp	/^  int TSingleBond::getValence() {$/;"	f	class:OpenBabel::TSingleBond
get_allowed_stereo_bond_type	src/formats/libinchi/ichister.c	/^int get_allowed_stereo_bond_type( int bond_type )$/;"	f
get_atw	src/formats/libinchi/util.c	/^int get_atw(const char *elname)$/;"	f
get_atw_from_elnum	src/formats/libinchi/util.c	/^int get_atw_from_elnum( int nAtNum )$/;"	f
get_bonds_of_ring	src/kekulize.cpp	/^  void get_bonds_of_ring(OBMol *mol, OBRing *ring, std::vector<OBBond *> &ring_bonds) {$/;"	f	namespace:OpenBabel
get_bonds_valences	src/formats/libinchi/ichirvr1.c	/^int get_bonds_valences( int nPeriodicNum, int bonds_valence, int num_H, VAL_AT *pVA )$/;"	f
get_crc	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::get_crc(void) const$/;"	f	class:basic_unzip_streambuf
get_crc	src/zipstreamimpl.h	/^basic_zip_streambuf<charT, traits>:: get_crc(void) const$/;"	f	class:basic_zip_streambuf
get_crc_table	include/zconf.h	43;"	d
get_el_number	src/formats/libinchi/util.c	/^int get_el_number( const char* elname )$/;"	f
get_el_type	src/formats/libinchi/util.c	/^int get_el_type( int nPeriodicNum )$/;"	f
get_el_valence	src/formats/libinchi/util.c	/^int get_el_valence( int nPeriodicNum, int charge, int val_num )$/;"	f
get_endpoint_valence	src/formats/libinchi/ichitaut.c	/^int get_endpoint_valence( U_CHAR el_number )$/;"	f
get_endpoint_valence_KET	src/formats/libinchi/ichitaut.c	/^int get_endpoint_valence_KET( U_CHAR el_number )$/;"	f
get_gzip_crc	src/zipstreamimpl.h	/^basic_zip_istream<charT, traits>::get_gzip_crc(void) const$/;"	f	class:basic_zip_istream
get_gzip_data_size	src/zipstreamimpl.h	/^basic_zip_istream<charT, traits>::get_gzip_data_size(void) const$/;"	f	class:basic_zip_istream
get_iat_number	src/formats/libinchi/strutil.c	/^int get_iat_number( int el_number, const int el_num[], int el_num_len )$/;"	f
get_in_size	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::get_in_size(void) const$/;"	f	class:basic_unzip_streambuf
get_in_size	src/zipstreamimpl.h	/^basic_zip_streambuf<charT, traits>::get_in_size(void) const$/;"	f	class:basic_zip_streambuf
get_istream	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::get_istream(void)$/;"	f	class:basic_unzip_streambuf
get_num_H	src/formats/libinchi/util.c	/^int get_num_H (const char* elname, int inp_num_H, S_CHAR inp_num_iso_H[],$/;"	f
get_opposite_sb_atom	src/formats/libinchi/ichister.c	/^int get_opposite_sb_atom( inp_ATOM *at, int cur_atom, int icur2nxt, int *pnxt_atom, int *pinxt2cur, int *pinxt_sb_parity_ord )$/;"	f
get_ostream	src/zipstreamimpl.h	/^basic_zip_streambuf<charT, traits>::get_ostream(void) const$/;"	f	class:basic_zip_streambuf
get_out_size	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::get_out_size(void) const$/;"	f	class:basic_unzip_streambuf
get_out_size	src/zipstreamimpl.h	/^basic_zip_streambuf<charT, traits>::get_out_size(void) const$/;"	f	class:basic_zip_streambuf
get_pVA_atom_type	src/formats/libinchi/ichirvr1.c	/^int get_pVA_atom_type( VAL_AT *pVA, inp_ATOM *at, int iat, int bond_type )$/;"	f
get_params	src/pointgroup.cpp	/^    get_params( SYMMETRY_ELEMENT *elem, double values[] )$/;"	f	class:OpenBabel::PointGroupPrivate
get_periodic_table_number	src/formats/libinchi/util.c	/^int get_periodic_table_number( const char* elname )$/;"	f
get_rmat	src/obutil.cpp	/^  void get_rmat(double *rvec,double *r,double *f,int size)$/;"	f	namespace:OpenBabel
get_roots_3_3	src/obutil.cpp	/^  static int get_roots_3_3(double mat[3][3], double roots[3])$/;"	f	namespace:OpenBabel
get_sp_element_type	src/formats/libinchi/ichirvr1.c	/^int get_sp_element_type( int nPeriodicNumber, int *nRow )$/;"	f
get_state	include/openbabel/rotor.h	/^    int get_state()$/;"	f	class:OpenBabel::rotor_digit
get_traversed_deriv_type	src/formats/libinchi/ichinorm.c	/^int get_traversed_deriv_type( inp_ATOM *at, DERIV_AT *da, int k, DERIV_AT *da1, char cFlags )$/;"	f
get_unusual_el_valence	src/formats/libinchi/util.c	/^int get_unusual_el_valence( int nPeriodicNum, int charge, int radical, int bonds_valence, int num_H, int num_bonds )$/;"	f
get_xtra_hash_major_hex	src/formats/libinchi/ikey_base26.c	/^void get_xtra_hash_major_hex(const unsigned char *a, char* szXtra)$/;"	f
get_xtra_hash_minor_hex	src/formats/libinchi/ikey_base26.c	/^void get_xtra_hash_minor_hex(const unsigned char *a, char* szXtra)$/;"	f
get_z_coord	src/formats/libinchi/ichister.c	/^double get_z_coord( inp_ATOM* at, int cur_atom, int neigh_no,  int *nType, int bPointedEdgeStereo )$/;"	f
get_zerr	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::get_zerr(void) const$/;"	f	class:basic_unzip_streambuf
get_zerr	src/zipstreamimpl.h	/^int basic_zip_streambuf<charT, traits>::get_zerr(void) const$/;"	f	class:basic_zip_streambuf
get_zip_stream	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::get_zip_stream(void)$/;"	f	class:basic_unzip_streambuf
getdelta	src/depict/asciipainter.cpp	/^  int getdelta(int x, int y, int x2, int y2)$/;"	f	namespace:OpenBabel
getorden	src/kekulize.cpp	/^  int OBMol::getorden( OBAtom *atom)$/;"	f	class:OpenBabel::OBMol
getsymbols	src/depict/asciipainter.cpp	/^  string getsymbols(int x, int y, int x2, int y2)$/;"	f	namespace:OpenBabel
good	src/formats/mmcifformat.cpp	/^   bool good() const$/;"	f	class:OpenBabel::CIFLexer
grada	include/openbabel/forcefield.h	/^    vector3 grada, gradb, gradc, gradd;$/;"	m	class:OpenBabel::OBFFConstraint
gradb	include/openbabel/forcefield.h	/^    vector3 grada, gradb, gradc, gradd;$/;"	m	class:OpenBabel::OBFFConstraint
gradc	include/openbabel/forcefield.h	/^    vector3 grada, gradb, gradc, gradd;$/;"	m	class:OpenBabel::OBFFConstraint
gradd	include/openbabel/forcefield.h	/^    vector3 grada, gradb, gradc, gradd;$/;"	m	class:OpenBabel::OBFFConstraint
graph_traits	include/OB-BGL/mol_graph.h	/^  struct graph_traits< OpenBabel::OBMol > $/;"	s	namespace:boost
graphicType	src/formats/chemdrawcdx.cpp	/^  enum graphicType {none, equilArrow};$/;"	g	class:OpenBabel::ChemDrawBinaryXFormat	file:
gray_target	include/OB-BGL/verbose_visitors.h	/^    void gray_target( edge e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
green	include/openbabel/depict/painter.h	/^    double red, green, blue, alpha;$/;"	m	struct:OpenBabel::OBColor
green	src/isomorphism.cpp	/^  static const char *green  = "\\033[1;32m";$/;"	m	namespace:OpenBabel	file:
gridtype	include/openbabel/grid.h	/^    score_t gridtype;$/;"	m	class:OpenBabel::OBScoreGrid
groupDecl	include/libxml/schemasInternals.h	/^    xmlHashTablePtr groupDecl;$/;"	m	struct:_xmlSchema
groupRedraw	src/mcdlutil.cpp	/^  int OBMCDL groupRedraw(OBMol * pmol, int bondN, int atomN, bool atomNInGroup) {$/;"	f	namespace:OpenBabel
group_name	src/pointgroup.cpp	/^    const char *  group_name ;        \/* Canonical group name                        *\/$/;"	m	struct:OpenBabel::__anon89	file:
group_number	src/formats/libinchi/ichirvr2.c	/^    AT_NUMB group_number;$/;"	m	struct:tagMobileGroupList	file:
group_number	src/formats/libinchi/ichirvr2.c	/^    AT_NUMB group_number;$/;"	m	struct:tagMobileHGroups	file:
grow	include/openbabel/parsmart.h	/^    bool grow;$/;"	m	struct:OpenBabel::__anon54
grow	src/formats/smiley.h	/^    bool grow;$/;"	m	struct:Smiley::SmartsBond
gsEmpty	src/formats/libinchi/runichi.c	/^const char gsEmpty[]   = "";$/;"	v
gsEqual	src/formats/libinchi/runichi.c	/^const char gsEqual[]   = "=";$/;"	v
gsMissing	src/formats/libinchi/runichi.c	/^const char gsMissing[] = "is missing";$/;"	v
gsSpace	src/formats/libinchi/runichi.c	/^const char gsSpace[]   = " ";$/;"	v
gtd	src/mcdlutil.cpp	/^    int gtd;        \/*Depth of atom in molecule according to GTD*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
gzFile	include/zlib.h	/^typedef voidp gzFile;$/;"	t
gz_ascii_flag	src/zipstream.h	/^    const int gz_ascii_flag =  0x01; \/* bit 0 set: file probably ascii text *\/$/;"	m	namespace:zlib_stream::detail
gz_comment	src/zipstream.h	/^    const int gz_comment    =  0x10; \/* bit 4 set: file comment present *\/$/;"	m	namespace:zlib_stream::detail
gz_extra_field	src/zipstream.h	/^    const int gz_extra_field = 0x04; \/* bit 2 set: extra field present *\/$/;"	m	namespace:zlib_stream::detail
gz_head_crc	src/zipstream.h	/^    const int gz_head_crc    = 0x02; \/* bit 1 set: header CRC present *\/$/;"	m	namespace:zlib_stream::detail
gz_header	include/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	include/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	include/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
gz_magic	src/zipstream.h	/^    const int gz_magic[2] = {0x1f, 0x8b}; \/* gzip magic header *\/$/;"	m	namespace:zlib_stream::detail
gz_orig_name	src/zipstream.h	/^    const int gz_orig_name  =  0x08; \/* bit 3 set: original file name present *\/$/;"	m	namespace:zlib_stream::detail
gz_reserved	src/zipstream.h	/^    const int gz_reserved   =  0xE0; \/* bits 5..7: reserved *\/$/;"	m	namespace:zlib_stream::detail
hVal	src/mcdlutil.cpp	/^	const int hVal[NELEMMCDL] = {$/;"	m	namespace:OpenBabel	file:
half_stereo_bond_action	src/formats/libinchi/ichister.c	/^int half_stereo_bond_action( int nParity, int bUnknown, int bIsotopic, int vABParityUnknown )$/;"	f
half_stereo_bond_parity	src/formats/libinchi/ichister.c	/^int half_stereo_bond_parity( inp_ATOM *at, int cur_at, inp_ATOM *at_removed_H, $/;"	f
halogens	src/mcdlutil.cpp	/^  const int halogens[NHALOGENS] = {9,17,35,53,85};$/;"	m	namespace:OpenBabel	file:
hasComment	src/formats/json/jsoncpp.cpp	/^Value::hasComment( CommentPlacement placement ) const$/;"	f	class:Json::Value
hasCommentForValue	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::hasCommentForValue( const Value &value )$/;"	f	class:Json::StyledStreamWriter
hasCommentForValue	src/formats/json/jsoncpp.cpp	/^StyledWriter::hasCommentForValue( const Value &value )$/;"	f	class:Json::StyledWriter
hasExplicitH	include/openbabel/parsmart.h	/^    bool hasExplicitH;$/;"	m	struct:OpenBabel::__anon56
hasExternalSubset	include/libxml/parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandler
hasExternalSubset	include/libxml/parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandlerV1
hasExternalSubset	include/libxml/parser.h	/^    int     hasExternalSubset;        \/* reference and external subset *\/$/;"	m	struct:_xmlParserCtxt
hasExternalSubsetSAXFunc	include/libxml/parser.h	/^typedef int (*hasExternalSubsetSAXFunc) (void *ctx);$/;"	t
hasInternalSubset	include/libxml/parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandler
hasInternalSubset	include/libxml/parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandlerV1
hasInternalSubsetSAXFunc	include/libxml/parser.h	/^typedef int (*hasInternalSubsetSAXFunc) (void *ctx);$/;"	t
hasOverlapped	src/mcdlutil.cpp	/^  int TSimpleMolecule::hasOverlapped(double delta, bool findFirst) {$/;"	f	class:OpenBabel::TSimpleMolecule
hasPErefs	include/libxml/parser.h	/^    int             hasPErefs;        \/* the internal subset has PE refs *\/$/;"	m	struct:_xmlParserCtxt
has_atom_pair	src/formats/libinchi/ichinorm.c	/^int has_atom_pair( R2C_ATPAIR *ap, int num_ap, AT_NUMB at1, AT_NUMB at2 )$/;"	f
has_leftover_electrons	src/kekulize.cpp	/^  bool has_leftover_electrons(OBMol *mol, std::vector<int> &atomState)$/;"	f	namespace:OpenBabel
has_leftover_electrons	src/kekulize.cpp	/^  bool has_leftover_electrons(OBMol *mol, std::vector<int> &atomState,$/;"	f	namespace:OpenBabel
has_no_leftover_electrons	src/kekulize.cpp	/^  bool OBMol::has_no_leftover_electrons(std::vector<int> &atomState)$/;"	f	class:OpenBabel::OBMol
has_other_ion_in_sphere_2	src/formats/libinchi/util.c	/^int has_other_ion_in_sphere_2(inp_ATOM *at, int iat, int iat_ion_neigh, const char *el, int el_len )$/;"	f
has_other_ion_neigh	src/formats/libinchi/util.c	/^int has_other_ion_neigh( inp_ATOM *at, int iat, int iat_ion_neigh, const char *el, int el_len )$/;"	f
hash	src/formats/libinchi/ichican2.c	/^    CtHash   *hash;$/;"	m	struct:tagCTable	file:
hash_mark_bit	src/formats/libinchi/ichican2.c	/^CtHash hash_mark_bit;$/;"	v
hcounts	include/openbabel/chains.h	/^      std::vector<char>           hcounts;$/;"	m	class:OpenBabel::OBChainsParser
hcrc	include/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
head	include/openbabel/tree/tree.hh	/^		tree_node *head, *feet;    \/\/ head\/feet are always dummy; if an iterator points to them it is invalid$/;"	m	class:tree
head_initialise_	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::head_initialise_()$/;"	f	class:tree
header	include/openbabel/fingerprint.h	/^  FptIndexHeader header;$/;"	m	struct:OpenBabel::FptIndex
header	src/formats/yasaraformat.cpp	/^{ unsigned char header[4];$/;"	m	struct:OpenBabel::mobatom	file:
headerlength	include/openbabel/fingerprint.h	/^  unsigned int headerlength;\/\/\/<offset to data: sizeof(FptIndexHeader)$/;"	m	struct:OpenBabel::FptIndexHeader
headers	src/formats/lpmdformat.cpp	/^  std::vector<std::string> headers; \/\/Header information.$/;"	m	class:OpenBabel::LpmdFormat	file:
heavyMetals	src/mcdlutil.cpp	/^  const int heavyMetals[NHEAVY_METALS] = {$/;"	m	namespace:OpenBabel	file:
height	include/openbabel/depict/painter.h	/^    double width, height;$/;"	m	struct:OpenBabel::OBFontMetrics
helpMenu	src/GUI/OBGUI.h	/^  wxMenu* helpMenu;$/;"	m	class:OBGUIFrame
here	include/libxml/xpath.h	/^    xmlNodePtr here;			\/* for here() *\/$/;"	m	struct:_xmlXPathContext
hetero	src/mcdlutil.cpp	/^  const int hetero[NHETERO] = {7,8,14,15,16,33,34,51,52,84};$/;"	m	namespace:OpenBabel	file:
hetflags	include/openbabel/chains.h	/^      std::vector<bool>           hetflags;$/;"	m	class:OpenBabel::OBChainsParser
hi	include/openbabel/rand.h	/^    unsigned int hi;$/;"	m	struct:OpenBabel::__anon58
hi_0	src/charges/eqeq.h	/^const double hi_0 = -2.0; \/\/ Electron affinity of hydrogen used in EQeq paper$/;"	v
high	include/libxml/chvalid.h	/^    unsigned int	high;$/;"	m	struct:_xmlChLRange
high	include/libxml/chvalid.h	/^    unsigned short	high;$/;"	m	struct:_xmlChSRange
how_many_atoms_moved	src/formats/pdbqtformat.cpp	/^    unsigned int how_many_atoms_moved;$/;"	m	class:OpenBabel::branch	file:
href	include/libxml/tree.h	/^    const xmlChar *href;	\/* URL for the namespace *\/$/;"	m	struct:_xmlNs
html	include/libxml/parser.h	/^    int                  html;        \/* an HTML(1)\/Docbook(2) document *\/$/;"	m	struct:_xmlParserCtxt
htmlDefaultSAXHandler	include/libxml/globals.h	/^	xmlSAXHandlerV1 htmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState
htmlDefaultSAXHandler	include/libxml/globals.h	/^XMLPUBVAR xmlSAXHandlerV1 htmlDefaultSAXHandler;$/;"	v
htmlDefaultSAXHandler	include/libxml/globals.h	224;"	d
htmlDefaultSAXHandler	include/libxml/globals.h	44;"	d
htmlDefaultSubelement	include/libxml/HTMLparser.h	271;"	d
htmlDocPtr	include/libxml/HTMLparser.h	/^typedef xmlDocPtr htmlDocPtr;$/;"	t
htmlElemDesc	include/libxml/HTMLparser.h	/^typedef struct _htmlElemDesc htmlElemDesc;$/;"	t	typeref:struct:_htmlElemDesc
htmlElemDescPtr	include/libxml/HTMLparser.h	/^typedef htmlElemDesc *htmlElemDescPtr;$/;"	t
htmlElementAllowedHereDesc	include/libxml/HTMLparser.h	282;"	d
htmlEntityDesc	include/libxml/HTMLparser.h	/^typedef struct _htmlEntityDesc htmlEntityDesc;$/;"	t	typeref:struct:_htmlEntityDesc
htmlEntityDescPtr	include/libxml/HTMLparser.h	/^typedef htmlEntityDesc *htmlEntityDescPtr;$/;"	t
htmlNodePtr	include/libxml/HTMLparser.h	/^typedef xmlNodePtr htmlNodePtr;$/;"	t
htmlParserCtxt	include/libxml/HTMLparser.h	/^typedef xmlParserCtxt htmlParserCtxt;$/;"	t
htmlParserCtxtPtr	include/libxml/HTMLparser.h	/^typedef xmlParserCtxtPtr htmlParserCtxtPtr;$/;"	t
htmlParserInput	include/libxml/HTMLparser.h	/^typedef xmlParserInput htmlParserInput;$/;"	t
htmlParserInputPtr	include/libxml/HTMLparser.h	/^typedef xmlParserInputPtr htmlParserInputPtr;$/;"	t
htmlParserNodeInfo	include/libxml/HTMLparser.h	/^typedef xmlParserNodeInfo htmlParserNodeInfo;$/;"	t
htmlParserOption	include/libxml/HTMLparser.h	/^} htmlParserOption;$/;"	t	typeref:enum:__anon3
htmlRequiredAttrs	include/libxml/HTMLparser.h	290;"	d
htmlSAXHandler	include/libxml/HTMLparser.h	/^typedef xmlSAXHandler htmlSAXHandler;$/;"	t
htmlSAXHandlerPtr	include/libxml/HTMLparser.h	/^typedef xmlSAXHandlerPtr htmlSAXHandlerPtr;$/;"	t
htmlStatus	include/libxml/HTMLparser.h	/^} htmlStatus ;$/;"	t	typeref:enum:__anon4
hydrogenValency	src/mcdlutil.cpp	/^  int hydrogenValency(int na) {   \/\/Hydrogen valency$/;"	f	namespace:OpenBabel
hydrogens	src/confsearch.cpp	/^      OBBitVec hydrogens;$/;"	m	class:OpenBabel::OBDiversePoses	file:
i	include/openbabel/rand.h	/^    unsigned int i;$/;"	m	class:OpenBabel::OBRandom
i	src/formats/libinchi/ichican2.c	/^    int i;$/;"	m	struct:tagkLeast	file:
i	src/formats/libinchi/ichirvr3.c	/^    short i[fNumAllChgT]; \/* all indices *\/$/;"	m	struct:tagTgDiffHChgFH	file:
iALTP_END_ATOM	include/inchi/ichi_bns.h	/^        iALTP_END_ATOM,   \/* 4 *\/$/;"	e	enum:tagAltPathConst
iALTP_FLOW	include/inchi/ichi_bns.h	/^        iALTP_FLOW,       \/* 1 *\/$/;"	e	enum:tagAltPathConst
iALTP_HDR_LEN	include/inchi/ichi_bns.h	/^        iALTP_HDR_LEN = iALTP_NEIGHBOR$/;"	e	enum:tagAltPathConst
iALTP_MAX_LEN	include/inchi/ichi_bns.h	/^        iALTP_MAX_LEN,    \/* 0 *\/$/;"	e	enum:tagAltPathConst
iALTP_NEIGHBOR	include/inchi/ichi_bns.h	/^        iALTP_NEIGHBOR,   \/* 5 *\/$/;"	e	enum:tagAltPathConst
iALTP_PATH_LEN	include/inchi/ichi_bns.h	/^        iALTP_PATH_LEN,   \/* 2 *\/$/;"	e	enum:tagAltPathConst
iALTP_START_ATOM	include/inchi/ichi_bns.h	/^        iALTP_START_ATOM, \/* 3 *\/$/;"	e	enum:tagAltPathConst
iAtNoOffset	include/inchi/ichirvrs.h	/^    int      iAtNoOffset;       \/* first atom number -- always 0 for now *\/$/;"	m	struct:tagAllTCGroups
iComponent	include/inchi/ichirvrs.h	/^    int      iComponent;        \/* component number *\/$/;"	m	struct:tagAllTCGroups
iINCHI	include/inchi/ichirvrs.h	/^    char        iINCHI;$/;"	m	struct:tagStructFromInChI
iInchiRec	include/inchi/ichirvrs.h	/^    char        iInchiRec; \/* index in the original InChI array *\/$/;"	m	struct:tagStructFromInChI
iMobileH	include/inchi/ichirvrs.h	/^    char        iMobileH;  \/* index in the original InChI array *\/$/;"	m	struct:tagStructFromInChI
iWeight	include/inchi/ichitaut.h	/^    T_GROUP_ISOWT iWeight;   \/* isotopic "weight" = T_GROUP_ISOWT_MULT*(T_GROUP_ISOWT_MULT*num_T + num_D)+num_1H; *\/$/;"	m	struct:tagTautomerGroup
ia	include/openbabel/forcefield.h	/^    int type, ia, ib, ic, id;$/;"	m	class:OpenBabel::OBFFConstraint
iat	include/inchi/ichirvrs.h	/^    Vertex iat;$/;"	m	struct:tagChargeChangeCandidate
ib	include/openbabel/forcefield.h	/^    int type, ia, ib, ic, id;$/;"	m	class:OpenBabel::OBFFConstraint
ic	include/openbabel/forcefield.h	/^    int type, ia, ib, ic, id;$/;"	m	class:OpenBabel::OBFFConstraint
iconv	include/iconv.h	80;"	d
iconv	src/formats/xml/iconv.h	80;"	d
iconv_close	include/iconv.h	86;"	d
iconv_close	src/formats/xml/iconv.h	86;"	d
iconv_in	include/libxml/encoding.h	/^    iconv_t                    iconv_in;$/;"	m	struct:_xmlCharEncodingHandler
iconv_open	include/iconv.h	70;"	d
iconv_open	src/formats/xml/iconv.h	70;"	d
iconv_out	include/libxml/encoding.h	/^    iconv_t                    iconv_out;$/;"	m	struct:_xmlCharEncodingHandler
iconv_t	include/iconv.h	/^typedef void* iconv_t;$/;"	t
iconv_t	include/iconv.h	45;"	d
iconv_t	include/iconv.h	46;"	d
iconv_t	src/formats/xml/iconv.h	/^typedef void* iconv_t;$/;"	t
iconv_t	src/formats/xml/iconv.h	45;"	d
iconv_t	src/formats/xml/iconv.h	46;"	d
iconvctl	include/iconv.h	96;"	d
iconvctl	src/formats/xml/iconv.h	96;"	d
iconvlist	include/iconv.h	107;"	d
iconvlist	src/formats/xml/iconv.h	107;"	d
id	include/libxml/parser.h	/^    int id;                           \/* an unique identifier for the entity *\/$/;"	m	struct:_xmlParserInput
id	include/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchema
id	include/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaAttribute
id	include/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaAttributeGroup
id	include/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaElement
id	include/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaFacet
id	include/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaType
id	include/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaWildcard
id	include/openbabel/forcefield.h	/^    int type, ia, ib, ic, id;$/;"	m	class:OpenBabel::OBFFConstraint
id	include/openbabel/stereo/stereo.h	/^    unsigned long id; \/\/! the atom\/bond (depends on type) unique id$/;"	m	struct:OpenBabel::OBStereoUnit
id	src/stereo/perception.cpp	/^      unsigned long id;$/;"	m	struct:OpenBabel::StereoRing::ParaAtom	file:
id	src/stereo/perception.cpp	/^      unsigned long id;$/;"	m	struct:OpenBabel::StereoRing::ParaBond	file:
idcDef	include/libxml/schemasInternals.h	/^    xmlHashTablePtr idcDef;$/;"	m	struct:_xmlSchema
idcs	include/libxml/schemasInternals.h	/^    void *idcs;$/;"	m	struct:_xmlSchemaElement
ident	src/chains.cpp	/^    BinOpStruct ident;    \/\/!< Ident - test the atom for backbone identity$/;"	m	union:OpenBabel::_ByteCode	file:
identifier	include/libxml/schemasInternals.h	/^    const xmlChar *identifier;$/;"	m	struct:_xmlSchemaNotation
identify_point_group	src/pointgroup.cpp	/^    const char *identify_point_group( void )$/;"	f	class:OpenBabel::PointGroupPrivate
identify_sdf_label	include/inchi/lreadmol.h	/^int identify_sdf_label( char* inp_line, const char *pSdfLabel )$/;"	f
identityCodes	src/canon.cpp	/^      std::vector<FullCode> identityCodes;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
ids	include/libxml/tree.h	/^    void           *ids;        \/* Hash table for ID attributes if any *\/$/;"	m	struct:_xmlDoc
ids	src/formats/chemdrawcdx.cpp	/^  std::vector<CDXObjectID> ids;$/;"	m	class:OpenBabel::CDXReader	file:
idx	src/fingerprints/fingerecfp.cpp	/^  unsigned int idx;$/;"	m	struct:OpenBabel::NborInfo	file:
idx1	src/kekulize.cpp	/^      size_t idx1;$/;"	m	struct:OpenBabel::Kekulize::stateDiff_t	file:
idx2	src/kekulize.cpp	/^      size_t idx2;$/;"	m	struct:OpenBabel::Kekulize::stateDiff_t	file:
idx_a	include/openbabel/forcefield.h	/^    int idx_a, idx_b;$/;"	m	class:OpenBabel::OBFFCalculation2
idx_b	include/openbabel/forcefield.h	/^    int idx_a, idx_b;$/;"	m	class:OpenBabel::OBFFCalculation2
idx_c	include/openbabel/forcefield.h	/^    int idx_c;$/;"	m	class:OpenBabel::OBFFCalculation3
idx_d	include/openbabel/forcefield.h	/^    int idx_d;$/;"	m	class:OpenBabel::OBFFCalculation4
idxb	src/kekulize.cpp	/^      size_t idxb;$/;"	m	struct:OpenBabel::Kekulize::stateDiff_t	file:
iedge	include/inchi/ichi_bns.h	/^    BNS_IEDGE     *iedge;$/;"	m	struct:BalancedNetworkStructure
iedge	include/inchi/ichi_bns.h	/^    BNS_IEDGE  iedge;$/;"	m	struct:tagBNS_FLOW_CHANGES
iedge	include/inchi/ichi_bns.h	/^  BNS_IEDGE  *iedge;                       \/* 6 a pointer to the array of edge indexes adjacent to this vertex *\/$/;"	m	struct:BnsVertex
ifs	src/formats/chemdrawcdx.cpp	/^  std::istream& ifs;$/;"	m	class:OpenBabel::CDXReader	file:
ignorableWhitespace	include/libxml/parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandler
ignorableWhitespace	include/libxml/parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandlerV1
ignorableWhitespaceSAXFunc	include/libxml/parser.h	/^typedef void (*ignorableWhitespaceSAXFunc) (void *ctx,$/;"	t
ignore	src/tokenst.cpp	/^  std::istream& ignore(std::istream& ifs, const std::string& txt)$/;"	f	namespace:OpenBabel
iiEQU	include/inchi/ichimake.h	86;"	d
iiEmpty	include/inchi/ichimake.h	103;"	d
iiEq2INV	include/inchi/ichimake.h	101;"	d
iiEq2ISO	include/inchi/ichimake.h	100;"	d
iiEq2NONTAUT	include/inchi/ichimake.h	99;"	d
iiNUMB	include/inchi/ichimake.h	85;"	d
iiSTEREO	include/inchi/ichimake.h	83;"	d
iiSTEREO_INV	include/inchi/ichimake.h	84;"	d
iitISO	include/inchi/ichimake.h	92;"	d
iitNONTAUT	include/inchi/ichimake.h	93;"	d
ilSHOWN	include/inchi/ichidrp.h	/^typedef enum tagTblLabels{ ilSHOWN,  TDP_NUM_LBL} TBL_LABELS; \/*  labels *\/$/;"	e	enum:tagTblLabels
imcon	src/formats/dlpolyformat.cpp	/^    int levcfg,imcon;$/;"	m	class:OpenBabel::DlpolyInputReader	file:
implementAtomStereo	src/mcdlutil.cpp	/^  void implementAtomStereo(std::vector<int>& iA1, std::vector<int>& iA2, std::vector<int>& stereoBonds, const std::vector<double>rx, const std::vector<double> ry, int acount, int bcount, std::string astereo) {$/;"	f	namespace:OpenBabel
implementBondStereo	src/mcdlutil.cpp	/^  void implementBondStereo(const std::vector<int> iA1, const std::vector<int> iA2, std::vector<double>& rx, std::vector<double>& ry, int acount, int bcount, std::string bstereo) {$/;"	f	namespace:OpenBabel
implicitHydrogen	src/formats/smiley.h	/^  inline int implicitHydrogen()$/;"	f	namespace:Smiley
in	src/formats/json/jsoncpp.cpp	/^in( Reader::Char c, Reader::Char c1, Reader::Char c2, Reader::Char c3, Reader::Char c4 )$/;"	f	namespace:Json
in	src/formats/json/jsoncpp.cpp	/^in( Reader::Char c, Reader::Char c1, Reader::Char c2, Reader::Char c3, Reader::Char c4, Reader::Char c5 )$/;"	f	namespace:Json
inBondArray	src/formats/xml/cmlformat.cpp	/^    bool inBondArray; \/\/for cml1 only$/;"	m	class:OpenBabel::CMLFormat	file:
inFormatGzip	include/openbabel/obconversion.h	/^      bool inFormatGzip;$/;"	m	class:OpenBabel::OBConversion
inFormula	src/formats/xml/cmlformat.cpp	/^    bool inFormula;$/;"	m	class:OpenBabel::CMLFormat	file:
inIdx	src/stereo/perception.cpp	/^        unsigned int inIdx, outIdx;$/;"	m	union:OpenBabel::StereoRing::ParaAtom::__anon90	file:
inIdx	src/stereo/perception.cpp	/^      unsigned int inIdx, outIdx;$/;"	m	struct:OpenBabel::StereoRing::ParaBond	file:
inRoot	src/formats/json/chemdoodlejsonformat.cpp	/^    Json::Value inRoot;$/;"	m	class:OpenBabel::ChemDoodleJSONFormat	file:
inRoot	src/formats/json/pubchemjsonformat.cpp	/^    Json::Value inRoot;$/;"	m	class:OpenBabel::PubChemJSONFormat	file:
inSubset	include/libxml/parser.h	/^    int               inSubset;       \/* Parsing is in int 1\/ext 2 subset *\/$/;"	m	struct:_xmlParserCtxt
in_func	include/zconf.h	48;"	d
in_func	include/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
inchiTime	include/inchi/ichitime.h	/^} inchiTime;$/;"	t	typeref:struct:tagInchiTime
inchi_Atom	include/inchi/aux2atom.h	197;"	d
inchi_Atom	include/inchi/inchi_api.h	/^}inchi_Atom;$/;"	t	typeref:struct:tagInchiAtom
inchi_Atom	include/inchi_api.h	/^}inchi_Atom;$/;"	t	typeref:struct:tagInchiAtom
inchi_BondStereo2D	include/inchi/inchi_api.h	/^} inchi_BondStereo2D;$/;"	t	typeref:enum:tagINCHIBondStereo2D
inchi_BondStereo2D	include/inchi_api.h	/^} inchi_BondStereo2D;$/;"	t	typeref:enum:tagINCHIBondStereo2D
inchi_BondType	include/inchi/inchi_api.h	/^} inchi_BondType;$/;"	t	typeref:enum:tagINCHIBondType
inchi_BondType	include/inchi_api.h	/^} inchi_BondType;$/;"	t	typeref:enum:tagINCHIBondType
inchi_Input	include/inchi/inchi_api.h	/^}inchi_Input;$/;"	t	typeref:struct:tagINCHI_Input
inchi_Input	include/inchi_api.h	/^}inchi_Input;$/;"	t	typeref:struct:tagINCHI_Input
inchi_InputINCHI	include/inchi/inchi_api.h	/^} inchi_InputINCHI;$/;"	t	typeref:struct:tagINCHI_InputINCHI
inchi_InputINCHI	include/inchi_api.h	/^} inchi_InputINCHI;$/;"	t	typeref:struct:tagINCHI_InputINCHI
inchi_NUMH2	include/inchi/aux2atom.h	201;"	d
inchi_NUMH2	include/inchi/aux2atom.h	2349;"	d
inchi_NUMH2	include/inchi/aux2atom.h	2359;"	d
inchi_NUMH2	include/inchi/aux2atom.h	57;"	d
inchi_Output	include/inchi/inchi_api.h	/^} inchi_Output;$/;"	t	typeref:struct:tagINCHI_Output
inchi_Output	include/inchi_api.h	/^} inchi_Output;$/;"	t	typeref:struct:tagINCHI_Output
inchi_OutputStruct	include/inchi/inchi_api.h	/^}inchi_OutputStruct;$/;"	t	typeref:struct:tagINCHI_OutputStruct
inchi_OutputStruct	include/inchi_api.h	/^}inchi_OutputStruct;$/;"	t	typeref:struct:tagINCHI_OutputStruct
inchi_Radical	include/inchi/inchi_api.h	/^} inchi_Radical;$/;"	t	typeref:enum:tagINCHIRadical
inchi_Radical	include/inchi_api.h	/^} inchi_Radical;$/;"	t	typeref:enum:tagINCHIRadical
inchi_Ret_BUSY	include/inchi/inchi_api.h	/^    inchi_Ret_BUSY    =  5  \/* Previuos call to InChI has not returned yet *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_BUSY	include/inchi_api.h	/^    inchi_Ret_BUSY    =  5  \/* Previuos call to InChI has not returned yet *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_EOF	include/inchi/inchi_api.h	/^    inchi_Ret_EOF     = -1, \/* no structural data has been provided *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_EOF	include/inchi_api.h	/^    inchi_Ret_EOF     = -1, \/* no structural data has been provided *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_ERROR	include/inchi/inchi_api.h	/^    inchi_Ret_ERROR   =  2, \/* Error: no InChI has been created *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_ERROR	include/inchi_api.h	/^    inchi_Ret_ERROR   =  2, \/* Error: no InChI has been created *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_FATAL	include/inchi/inchi_api.h	/^    inchi_Ret_FATAL   =  3, \/* Severe error: no InChI has been created (typically, memory allocation failure) *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_FATAL	include/inchi_api.h	/^    inchi_Ret_FATAL   =  3, \/* Severe error: no InChI has been created (typically, memory allocation failure) *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_OKAY	include/inchi/inchi_api.h	/^    inchi_Ret_OKAY    =  0, \/* Success; no errors or warnings *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_OKAY	include/inchi_api.h	/^    inchi_Ret_OKAY    =  0, \/* Success; no errors or warnings *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_SKIP	include/inchi/inchi_api.h	/^    inchi_Ret_SKIP    = -2, \/* not used in InChI library *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_SKIP	include/inchi_api.h	/^    inchi_Ret_SKIP    = -2, \/* not used in InChI library *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_UNKNOWN	include/inchi/inchi_api.h	/^    inchi_Ret_UNKNOWN =  4, \/* Unknown program error *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_UNKNOWN	include/inchi_api.h	/^    inchi_Ret_UNKNOWN =  4, \/* Unknown program error *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_WARNING	include/inchi/inchi_api.h	/^    inchi_Ret_WARNING =  1, \/* Success; warning(s) issued *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Ret_WARNING	include/inchi_api.h	/^    inchi_Ret_WARNING =  1, \/* Success; warning(s) issued *\/$/;"	e	enum:tagRetValGetINCHI
inchi_Stereo0D	include/inchi/inchi_api.h	/^}inchi_Stereo0D;$/;"	t	typeref:struct:tagINCHIStereo0D
inchi_Stereo0D	include/inchi_api.h	/^}inchi_Stereo0D;$/;"	t	typeref:struct:tagINCHIStereo0D
inchi_StereoParity0D	include/inchi/inchi_api.h	/^} inchi_StereoParity0D;$/;"	t	typeref:enum:tagINCHIStereoParity0D
inchi_StereoParity0D	include/inchi_api.h	/^} inchi_StereoParity0D;$/;"	t	typeref:enum:tagINCHIStereoParity0D
inchi_StereoType0D	include/inchi/inchi_api.h	/^} inchi_StereoType0D;$/;"	t	typeref:enum:tagINCHIStereoType0D
inchi_StereoType0D	include/inchi_api.h	/^} inchi_StereoType0D;$/;"	t	typeref:enum:tagINCHIStereoType0D
inchi_calloc	include/inchi/mode.h	1005;"	d
inchi_calloc	include/inchi/mode.h	926;"	d
inchi_calloc	include/inchi/mode.h	983;"	d
inchi_calloc	src/formats/libinchi/util.c	/^void *inchi_calloc(size_t c, size_t n)$/;"	f
inchi_fgetsLf	src/formats/libinchi/ichi_io.c	/^char* inchi_fgetsLf( char* line, int line_len, FILE* inp )$/;"	f
inchi_fgetsLfTab	src/formats/libinchi/ichi_io.c	/^int inchi_fgetsLfTab( char *szLine, int len, FILE *f )$/;"	f
inchi_fgetsTab	src/formats/libinchi/ichi_io.c	/^char *inchi_fgetsTab( char *szLine, int len, FILE *f )$/;"	f
inchi_file	include/inchi/inchi_dll_a.h	/^    INCHI_IOSTREAM      inchi_file[3]; $/;"	m	struct:tagINCHIGEN_CONTROL
inchi_fprintf	src/formats/libinchi/ichi_io.c	/^int inchi_fprintf( FILE* f, const char* lpszFormat, ... )$/;"	f
inchi_free	include/inchi/mode.h	1008;"	d
inchi_free	include/inchi/mode.h	927;"	d
inchi_free	include/inchi/mode.h	986;"	d
inchi_free	src/formats/libinchi/util.c	/^void inchi_free(void *p)$/;"	f
inchi_ios_close	src/formats/libinchi/ichi_io.c	/^void inchi_ios_close(INCHI_IOSTREAM* ios)$/;"	f
inchi_ios_eprint	src/formats/libinchi/ichi_io.c	/^int inchi_ios_eprint( INCHI_IOSTREAM * ios, const char* lpszFormat, ... )$/;"	f
inchi_ios_flush	src/formats/libinchi/ichi_io.c	/^void inchi_ios_flush(INCHI_IOSTREAM* ios)$/;"	f
inchi_ios_flush2	src/formats/libinchi/ichi_io.c	/^void inchi_ios_flush2(INCHI_IOSTREAM* ios, FILE *f2)$/;"	f
inchi_ios_gets	src/formats/libinchi/ichi_io.c	/^int inchi_ios_gets( char *szLine, int len, INCHI_IOSTREAM *f, int *bTooLongLine )$/;"	f
inchi_ios_getsTab	src/formats/libinchi/ichi_io.c	/^int inchi_ios_getsTab( char *szLine, int len, INCHI_IOSTREAM *f, int *bTooLongLine )$/;"	f
inchi_ios_getsTab1	src/formats/libinchi/ichi_io.c	/^int inchi_ios_getsTab1( char *szLine, int len, INCHI_IOSTREAM *f, int *bTooLongLine )$/;"	f
inchi_ios_init	src/formats/libinchi/ichi_io.c	/^void inchi_ios_init(INCHI_IOSTREAM* ios, int io_type, FILE *f)$/;"	f
inchi_ios_print	src/formats/libinchi/ichi_io.c	/^int inchi_ios_print( INCHI_IOSTREAM * ios, const char* lpszFormat, ... )$/;"	f
inchi_ios_print_nodisplay	src/formats/libinchi/ichi_io.c	/^int inchi_ios_print_nodisplay( INCHI_IOSTREAM * ios, const char* lpszFormat, ... )$/;"	f
inchi_ios_reset	src/formats/libinchi/ichi_io.c	/^void inchi_ios_reset(INCHI_IOSTREAM* ios)$/;"	f
inchi_ios_str_getc	src/formats/libinchi/ichi_io.c	/^int inchi_ios_str_getc(INCHI_IOSTREAM *ios)$/;"	f
inchi_ios_str_gets	src/formats/libinchi/ichi_io.c	/^char *inchi_ios_str_gets(char *szLine, int len, INCHI_IOSTREAM *f)$/;"	f
inchi_ios_str_getsTab	src/formats/libinchi/ichi_io.c	/^char *inchi_ios_str_getsTab( char *szLine, int len, INCHI_IOSTREAM *f )$/;"	f
inchi_malloc	include/inchi/mode.h	1002;"	d
inchi_malloc	include/inchi/mode.h	925;"	d
inchi_malloc	include/inchi/mode.h	980;"	d
inchi_malloc	src/formats/libinchi/util.c	/^void *inchi_malloc(size_t c)$/;"	f
inchi_max	include/inchi/ichicomp.h	85;"	d
inchi_min	include/inchi/ichicomp.h	86;"	d
inchi_print_nodisplay	src/formats/libinchi/ichi_io.c	/^int inchi_print_nodisplay( FILE* f, const char* lpszFormat, ... )$/;"	f
inchi_strtod	src/formats/libinchi/ichiprt2.c	/^double inchi_strtod( const char *str, const char **p )$/;"	f
inchi_strtol	src/formats/libinchi/ichiprt2.c	/^long inchi_strtol( const char *str, const char **p, int base)$/;"	f
inchi_swap	src/formats/libinchi/ichisort.c	/^void inchi_swap ( char *a, char *b, size_t width )$/;"	f
inchi_vfprintf	src/formats/libinchi/ichi_io.c	/^int inchi_vfprintf( FILE* f, const char* lpszFormat, va_list argList )$/;"	f
include_original	src/ops/opconfab.cpp	/^      bool include_original;$/;"	m	class:OpenBabel::OpConfab	file:
includes	include/libxml/schemasInternals.h	/^    void *includes;     \/* the includes, this is opaque for now *\/$/;"	m	struct:_xmlSchema
incr_len	include/inchi/ichicant.h	/^    int       incr_len; \/* reallocation increment *\/$/;"	m	struct:tagCurTree
increment	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::increment()$/;"	f	class:Json::ValueIteratorBase
incrementAssignment	src/mcdlutil.cpp	/^  static bool incrementAssignment(std::vector<int>& bondAssignment, int nAss) {$/;"	f	namespace:OpenBabel
incrementValues	src/mcdlutil.cpp	/^  bool incrementValues(std::vector<int>& currentValues, const std::vector<int> maxValues) {$/;"	f	namespace:OpenBabel
ind	include/openbabel/xml.h	/^      int baseindent, ind;$/;"	m	class:OpenBabel::XMLBaseFormat
indent	src/formats/json/customwriter.cpp	/^CustomWriter::indent()$/;"	f	class:Json::CustomWriter
indent	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::indent()$/;"	f	class:Json::StyledStreamWriter
indent	src/formats/json/jsoncpp.cpp	/^StyledWriter::indent()$/;"	f	class:Json::StyledWriter
indentSize_	include/openbabel/json/json.h	/^      int indentSize_;$/;"	m	class:Json::StyledWriter
indentString_	include/openbabel/json/customwriter.h	/^      std::string indentString_;$/;"	m	class:Json::CustomWriter
indentString_	include/openbabel/json/json.h	/^      std::string indentString_;$/;"	m	class:Json::StyledStreamWriter
indentString_	include/openbabel/json/json.h	/^      std::string indentString_;$/;"	m	class:Json::StyledWriter
indent_	include/openbabel/json/customwriter.h	/^      std::string indent_;$/;"	m	class:Json::CustomWriter
indentation_	include/openbabel/json/json.h	/^      std::string indentation_;$/;"	m	class:Json::StyledStreamWriter
index	include/libxml/xpath.h	/^    int index;$/;"	m	struct:_xmlXPathObject
index	include/openbabel/tree/tree.hh	/^unsigned int tree<T, tree_node_allocator>::index(sibling_iterator it) const$/;"	f	class:tree
index	src/chains.cpp	/^    int index;$/;"	m	struct:OpenBabel::__anon68	file:
index	src/chains.cpp	/^    int index;$/;"	m	struct:OpenBabel::__anon69	file:
index	src/formats/json/jsoncpp.cpp	/^Value::CZString::index() const$/;"	f	class:Json::Value::CZString
index	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::index() const$/;"	f	class:Json::ValueIteratorBase
index	src/formats/pdbqtformat.cpp	/^    unsigned int index;$/;"	m	class:OpenBabel::branch	file:
index	src/formats/smiley.h	/^        int index;$/;"	m	struct:Smiley::Parser::BranchInfo
index2	include/libxml/xpath.h	/^    int index2;$/;"	m	struct:_xmlXPathObject
indexOf	src/formats/MCDLformat.cpp	/^  int MCDLFormat::indexOf(const string instring, const string substring, int fromPos) {$/;"	f	class:OpenBabel::MCDLFormat
indexOf	src/mcdlutil.cpp	/^  int indexOf(const string instring, const string substring, int fromPos=0) {$/;"	f	namespace:OpenBabel
index_	include/openbabel/json/json.h	/^         ArrayIndex index_;$/;"	m	class:Json::Value::CZString
index_	include/openbabel/json/json.h	/^      ArrayIndex index_;$/;"	m	class:Json::PathArgument
index_param	src/formats/mdffformat.cpp	/^    int index_param;$/;"	m	class:OpenBabel::aindx	file:
indexes	src/canon.cpp	/^      std::vector<unsigned int> indexes;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::StereoCenter	file:
indexmap	src/formats/mdlformat.cpp	/^      map<int,int> indexmap; \/\/relates index in file to index in OBMol$/;"	m	class:OpenBabel::MDLFormat	file:
indices	src/formats/smileyformat.cpp	/^    std::vector<int> indices;$/;"	m	struct:OpenBabel::OpenBabelCallback	file:
ineigh	include/inchi/ichi_bns.h	/^    AT_NUMB      ineigh[2];$/;"	m	union:BnsAltPath
ineigh	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  ineigh;$/;"	m	struct:tagMobileHGroups	file:
inf_ATOM	include/inchi/inpdef.h	/^} inf_ATOM;$/;"	t	typeref:struct:tagAtomParmsForDrawing
inflate	include/zconf.h	20;"	d
inflateBack	include/zconf.h	35;"	d
inflateBackEnd	include/zconf.h	36;"	d
inflateBackInit	include/zlib.h	1340;"	d
inflateCopy	include/zconf.h	33;"	d
inflateEnd	include/zconf.h	21;"	d
inflateInit	include/zlib.h	1333;"	d
inflateInit2	include/zlib.h	1338;"	d
inflateInit2_	include/zconf.h	29;"	d
inflateInit_	include/zconf.h	19;"	d
inflateReset	include/zconf.h	34;"	d
inflateSetDictionary	include/zconf.h	30;"	d
inflateSync	include/zconf.h	31;"	d
inflateSyncPoint	include/zconf.h	32;"	d
init	src/formats/MCDLformat.cpp	/^  void MCDLFormat::init(){$/;"	f	class:OpenBabel::MCDLFormat
initGlobals	src/formats/MCDLformat.cpp	/^  void MCDLFormat::initGlobals(){$/;"	f	class:OpenBabel::MCDLFormat
init_axis_parameters	src/pointgroup.cpp	/^    init_axis_parameters( double a[3], double b[3], double c[3] )$/;"	f	class:OpenBabel::PointGroupPrivate
init_c2_axis	src/pointgroup.cpp	/^    init_c2_axis( int i, int j, const double support[ DIMENSION ] )$/;"	f	class:OpenBabel::PointGroupPrivate
init_higher_axis	src/pointgroup.cpp	/^    init_higher_axis( int ia, int ib, int ic )$/;"	f	class:OpenBabel::PointGroupPrivate
init_improper_axis	src/pointgroup.cpp	/^    init_improper_axis( int ia, int ib, int ic )$/;"	f	class:OpenBabel::PointGroupPrivate
init_inversion_center	src/pointgroup.cpp	/^    init_inversion_center( void )$/;"	f	class:OpenBabel::PointGroupPrivate
init_mirror_plane	src/pointgroup.cpp	/^    init_mirror_plane( int i, int j )$/;"	f	class:OpenBabel::PointGroupPrivate
init_passed	include/inchi/inchi_dll_a.h	/^    int             init_passed;$/;"	m	struct:tagINCHIGEN_CONTROL
init_rank	include/inchi/extr_ct.h	/^    AT_NUMB    init_rank;        \/* also used in remove_terminal_HDT() to save orig. at. number *\/$/;"	m	struct:tagAtom
init_ultimate_axis	src/pointgroup.cpp	/^    init_ultimate_axis(void)$/;"	f	class:OpenBabel::PointGroupPrivate
init_ultimate_plane	src/pointgroup.cpp	/^    init_ultimate_plane( void )$/;"	f	class:OpenBabel::PointGroupPrivate
initialize	src/zipstreamimpl.h	/^  basic_unzip_streambuf<charT, traits>::initialize(int window_size)$/;"	f	class:basic_unzip_streambuf
initialize_vertex	include/OB-BGL/verbose_visitors.h	/^    void initialize_vertex( vertex e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
initialize_vertex	include/OB-BGL/verbose_visitors.h	/^    void initialize_vertex(Vertex u, const Graph& g)$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
initialized	include/libxml/parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandler
initialized	include/libxml/parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandlerV1
inp2spATOM	src/formats/libinchi/ichimake.c	/^int inp2spATOM( inp_ATOM *inp_at, int num_inp_at, sp_ATOM *at )$/;"	f
inp_ATOM	include/inchi/inpdef.h	/^} inp_ATOM;$/;"	t	typeref:struct:tagInputAtom
inp_ATOM_STEREO	include/inchi/ichirvrs.h	/^} inp_ATOM_STEREO;$/;"	t	typeref:struct:tagInpAtomAddParities
input	include/libxml/debugXML.h	/^    xmlShellReadlineFunc input;$/;"	m	struct:_xmlShellCtxt
input	include/libxml/encoding.h	/^    xmlCharEncodingInputFunc   input;$/;"	m	struct:_xmlCharEncodingHandler
input	include/libxml/parser.h	/^    xmlParserInputPtr  input;         \/* Current input stream *\/$/;"	m	struct:_xmlParserCtxt
input	include/openbabel/generic.h	/^    input,      \/\/!<$/;"	e	enum:OpenBabel::atomreftype
input	src/formats/mmcifformat.cpp	/^   istream  * input;$/;"	m	class:OpenBabel::CIFLexer	file:
inputMax	include/libxml/parser.h	/^    int                inputMax;      \/* Max number of input streams *\/$/;"	m	struct:_xmlParserCtxt
inputNr	include/libxml/parser.h	/^    int                inputNr;       \/* Number of current input streams *\/$/;"	m	struct:_xmlParserCtxt
inputTab	include/libxml/parser.h	/^    xmlParserInputPtr *inputTab;      \/* stack of inputs *\/$/;"	m	struct:_xmlParserCtxt
inscode	src/formats/yasaraformat.cpp	/^  uint16 inscode;$/;"	m	struct:OpenBabel::atomid	file:
insert	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::insert(iter position, const T& x)$/;"	f	class:tree
insert	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::insert(sibling_iterator position, const T& x)$/;"	f	class:tree
insertArrayListElement	src/formats/ArrayList.c	/^void insertArrayListElement (ArrayList *array, void *elem, int position){$/;"	f
insert_after	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::insert_after(iter position, const T& x)$/;"	f	class:tree
insert_subtree	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::insert_subtree(iter position, const iterator_base& subtree)$/;"	f	class:tree
insert_subtree_after	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::insert_subtree_after(iter position, const iterator_base& subtree)$/;"	f	class:tree
insertions_sort	src/formats/libinchi/ichisort.c	/^int insertions_sort( void *base, size_t num, size_t width, int ( *compare )(const void *e1, const void *e2 ) )$/;"	f
insertions_sort_AT_NUMB	src/formats/libinchi/ichiread.c	/^int insertions_sort_AT_NUMB( AT_NUMB *base, int num )$/;"	f
insertions_sort_AT_NUMBERS	src/formats/libinchi/ichisort.c	/^int insertions_sort_AT_NUMBERS( AT_NUMB *base, int num, int ( *compare )(const void *e1, const void *e2 ) )$/;"	f
insertions_sort_AT_RANK	src/formats/libinchi/ichisort.c	/^int insertions_sort_AT_RANK( AT_RANK *base, int num )$/;"	f
insertions_sort_NeighListBySymmAndCanonRank	src/formats/libinchi/ichisort.c	/^void insertions_sort_NeighListBySymmAndCanonRank( NEIGH_LIST base, const AT_RANK *nSymmRank, const AT_RANK *nCanonRank )$/;"	f
insertions_sort_NeighList_AT_NUMBERS	src/formats/libinchi/ichisort.c	/^void insertions_sort_NeighList_AT_NUMBERS( NEIGH_LIST base, AT_RANK *nRank )$/;"	f
insertions_sort_NeighList_AT_NUMBERS2	src/formats/libinchi/ichican2.c	/^void insertions_sort_NeighList_AT_NUMBERS2( NEIGH_LIST base, AT_RANK *nRank, AT_RANK max_rj )$/;"	f
insertions_sort_NeighList_AT_NUMBERS3	src/formats/libinchi/ichisort.c	/^int insertions_sort_NeighList_AT_NUMBERS3( NEIGH_LIST base, AT_RANK *nRank )$/;"	f
insideNbrs	src/stereo/perception.cpp	/^      std::vector<OBAtom*> insideNbrs, outsideNbrs;$/;"	m	struct:OpenBabel::StereoRing::ParaAtom	file:
insideNbrs	src/stereo/perception.cpp	/^      std::vector<OBAtom*> insideNbrs, outsideNbrs;$/;"	m	struct:OpenBabel::StereoRing::ParaBond	file:
instate	include/libxml/parser.h	/^    xmlParserInputState instate;      \/* current type of input *\/$/;"	m	struct:_xmlParserCtxt
int1	include/libxml/xmlerror.h	/^    int		int1;	\/* extra number information *\/$/;"	m	struct:_xmlError
int16	src/formats/yasaraformat.cpp	/^typedef short int16;$/;"	t	file:
int2	include/libxml/xmlerror.h	/^    int		int2;	\/* column number of the error or 0 if N\/A (todo: rename this field when we would break ABI) *\/$/;"	m	struct:_xmlError
int32	src/formats/yasaraformat.cpp	/^typedef int int32;$/;"	t	file:
int32le	src/formats/yasaraformat.cpp	/^int int32le(int32 value)$/;"	f	namespace:OpenBabel
int32lemem	src/formats/yasaraformat.cpp	/^int int32lemem(char *data)$/;"	f	namespace:OpenBabel
intSubName	include/libxml/parser.h	/^    const xmlChar *    intSubName;    \/* name of subset *\/$/;"	m	struct:_xmlParserCtxt
intSubset	include/libxml/tree.h	/^    struct _xmlDtd  *intSubset;	\/* the document internal subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd
intToStr	src/formats/MCDLformat.cpp	/^  string MCDLFormat::intToStr(int k) {$/;"	f	class:OpenBabel::MCDLFormat
intToStr	src/mcdlutil.cpp	/^  string intToStr(int k) {$/;"	f	namespace:OpenBabel
intValue	include/openbabel/json/json.h	/^      intValue,      \/\/\/< signed integer value$/;"	e	enum:Json::ValueType
int_	include/openbabel/json/json.h	/^         LargestInt int_;$/;"	m	union:Json::Value::ValueHolder
int_type	src/zipstream.h	/^    typedef int int_type;$/;"	t	class:zlib_stream::basic_unzip_streambuf
int_type	src/zipstream.h	/^    typedef int int_type;$/;"	t	class:zlib_stream::basic_zip_streambuf
internalBondsPresent	src/mcdlutil.cpp	/^  bool TemplateRedraw::internalBondsPresent(TEditedMolecule * mQuery, TSimpleMolecule * mStructure) {$/;"	f	class:OpenBabel::TemplateRedraw
internalColor	include/openbabel/depict/depict.h	/^        internalColor        = 0x0002,$/;"	e	enum:OpenBabel::OBDepict::OptionType
internalSubset	include/libxml/parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandler
internalSubset	include/libxml/parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandlerV1
internalSubsetSAXFunc	include/libxml/parser.h	/^typedef void (*internalSubsetSAXFunc) (void *ctx,$/;"	t
internal_state	include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
intf	include/zconf.h	/^typedef int   FAR intf;$/;"	t
intf	include/zconf.h	55;"	d
inv	src/ops/opisomorph.h	/^  bool inv;$/;"	m	class:OpenBabel::OpNewS
invalidPath	src/formats/json/jsoncpp.cpp	/^Path::invalidPath( const std::string &path, $/;"	f	class:Json::Path
inverse	src/math/matrix3x3.cpp	/^  matrix3x3 matrix3x3::inverse(void) const$/;"	f	class:OpenBabel::matrix3x3
invert_atom	src/pointgroup.cpp	/^    invert_atom( SYMMETRY_ELEMENT *center, OBAtom *from, OBAtom *to )$/;"	f	class:OpenBabel::PointGroupPrivate
invert_matrix	src/matrix.cpp	/^bool invert_matrix(std::vector<std::vector<double> > &mat, double &det)$/;"	f	namespace:OpenBabel
invert_matrix_f	src/matrix.cpp	/^bool invert_matrix_f(double *mat, double &det, int rows, int cols)$/;"	f	namespace:OpenBabel
invert_matrix_ff	src/matrix.cpp	/^bool invert_matrix_ff(double **mat, double &det, int rows, int cols)$/;"	f	namespace:OpenBabel
invertedAtoms	src/stereo/perception.cpp	/^      std::vector<OBAtom*> invertedAtoms;$/;"	m	struct:OpenBabel::StereoInverted::Entry	file:
invertedBonds	src/stereo/perception.cpp	/^      std::vector<OBBond*> invertedBonds;$/;"	m	struct:OpenBabel::StereoInverted::Entry	file:
ip_bond	include/OB-BGL/mol_graph.h	/^        OpenBabel::OBBondIterator ip_bond;$/;"	m	class:boost::graph_traits::adjacent_iterator
ip_bond	include/OB-BGL/mol_graph.h	/^        OpenBabel::OBBondIterator ip_bond;$/;"	m	class:boost::graph_traits::out_edge_iterator
irErrMsg	src/formats/libinchi/ichiread.c	/^ICHICONST INCHI_READ_ERR_MSG irErrMsg[] = $/;"	v
is14	src/forcefields/forcefieldgaff.h	/^      bool is14, samering;$/;"	m	class:OpenBabel::OBFFVDWCalculationGaff
is14	src/forcefields/forcefieldghemical.h	/^      bool is14, samering;$/;"	m	class:OpenBabel::OBFFVDWCalculationGhemical
is14	src/forcefields/forcefielduff.h	/^      bool is14, samering;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
isArray	src/formats/json/jsoncpp.cpp	/^Value::isArray() const$/;"	f	class:Json::Value
isArray_	include/openbabel/json/json.h	/^      bool isArray_;$/;"	m	class:Json::ValueIteratorBase
isBool	src/formats/json/jsoncpp.cpp	/^Value::isBool() const$/;"	f	class:Json::Value
isCisTrans	src/stereo/perception.cpp	/^  bool isCisTrans(OBBond *bond, const OBStereoUnitSet &units)$/;"	f	namespace:OpenBabel
isControlCharacter	src/formats/json/jsoncpp.cpp	/^isControlCharacter(char ch)$/;"	f	namespace:Json
isConvertibleTo	src/formats/json/jsoncpp.cpp	/^Value::isConvertibleTo( ValueType other ) const$/;"	f	class:Json::Value
isDiagonal	src/math/matrix3x3.cpp	/^  bool matrix3x3::isDiagonal(void) const$/;"	f	class:OpenBabel::matrix3x3
isDouble	src/formats/json/jsoncpp.cpp	/^Value::isDouble() const$/;"	f	class:Json::Value
isDown	src/formats/smiley.h	/^        bool isDown;$/;"	m	struct:Smiley::Parser::RingBondInfo
isEqual	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::isEqual( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
isExplicit	src/formats/smiley.h	/^        bool isExplicit;$/;"	m	struct:Smiley::Parser::RingBondInfo
isFerroceneBond	src/canon.cpp	/^  bool isFerroceneBond(OBBond *bond)$/;"	f	namespace:OpenBabel
isGZip	src/zipstream.h	/^inline bool isGZip(std::istream &is)$/;"	f	namespace:zlib_stream
isInRing	src/stereo/perception.cpp	/^      bool isInRing(const StereoRing &ring) const$/;"	f	struct:OpenBabel::StereoRing::ParaAtom
isInRing	src/stereo/perception.cpp	/^      bool isInRing(const StereoRing &ring) const$/;"	f	struct:OpenBabel::StereoRing::ParaBond
isInSet	src/stereo/stereoutil.h	/^  bool isInSet(OBAtomOrOBBond *atomOrBond, const OBStereoUnitSet &units)$/;"	f	namespace:OpenBabel
isInTerminalSet	src/isomorphism.cpp	/^      bool isInTerminalSet(const std::vector<unsigned int> &depths,$/;"	f	class:OpenBabel::VF2Mapper
isInt	src/formats/json/jsoncpp.cpp	/^Value::isInt() const$/;"	f	class:Json::Value
isIntegral	src/formats/json/jsoncpp.cpp	/^Value::isIntegral() const$/;"	f	class:Json::Value
isItemAvailable	include/openbabel/json/json.h	/^      inline bool isItemAvailable() const$/;"	f	class:Json::Value
isMember	src/formats/json/jsoncpp.cpp	/^Value::isMember( const CppTL::ConstString &key ) const$/;"	f	class:Json::Value
isMember	src/formats/json/jsoncpp.cpp	/^Value::isMember( const char *key ) const$/;"	f	class:Json::Value
isMember	src/formats/json/jsoncpp.cpp	/^Value::isMember( const std::string &key ) const$/;"	f	class:Json::Value
isMemberNameStatic	include/openbabel/json/json.h	/^      inline bool isMemberNameStatic() const$/;"	f	class:Json::Value
isMultineArray	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::isMultineArray( const Value &value )$/;"	f	class:Json::StyledStreamWriter
isMultineArray	src/formats/json/jsoncpp.cpp	/^StyledWriter::isMultineArray( const Value &value )$/;"	f	class:Json::StyledWriter
isNull	src/formats/json/jsoncpp.cpp	/^Value::isNull() const$/;"	f	class:Json::Value
isNull_	include/openbabel/json/json.h	/^      bool isNull_;$/;"	m	class:Json::ValueIteratorBase
isNumeric	src/formats/json/jsoncpp.cpp	/^Value::isNumeric() const$/;"	f	class:Json::Value
isObject	src/formats/json/jsoncpp.cpp	/^Value::isObject() const$/;"	f	class:Json::Value
isOrthogonal	include/openbabel/math/matrix3x3.h	/^      bool isOrthogonal(void) const$/;"	f	class:OpenBabel::matrix3x3
isOverlapped	src/mcdlutil.cpp	/^  bool TemplateRedraw::isOverlapped(const std::vector<PartFragmentDefinition *> list, int fragNo, double xSuggested, double ySuggested) {$/;"	f	class:OpenBabel::TemplateRedraw
isParentheses	src/formats/crystal09format.cpp	/^bool isParentheses (char c)$/;"	f
isPotentialAromaticAtom	src/kekulize.cpp	/^  bool isPotentialAromaticAtom(OBAtom *atom)$/;"	f	namespace:OpenBabel
isPotentialCisTrans	src/stereo/perception.cpp	/^  bool isPotentialCisTrans(OBBond *bond)$/;"	f	namespace:OpenBabel
isPotentialTetrahedral	src/stereo/perception.cpp	/^  bool isPotentialTetrahedral(OBAtom *atom)$/;"	f	namespace:OpenBabel
isSet	include/openbabel/obconversion.h	/^          bool isSet() const { return pStream != NULL; }$/;"	f	struct:OpenBabel::OBConversion::StreamState
isStandalone	include/libxml/parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandler
isStandalone	include/libxml/parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandlerV1
isStandaloneSAXFunc	include/libxml/parser.h	/^typedef int (*isStandaloneSAXFunc) (void *ctx);$/;"	t
isStaticString	src/formats/json/jsoncpp.cpp	/^Value::CZString::isStaticString() const$/;"	f	class:Json::Value::CZString
isString	src/formats/json/jsoncpp.cpp	/^Value::isString() const$/;"	f	class:Json::Value
isSymmetric	src/math/matrix3x3.cpp	/^  bool matrix3x3::isSymmetric(void) const$/;"	f	class:OpenBabel::matrix3x3
isTetrahedral	src/stereo/perception.cpp	/^  bool isTetrahedral(OBAtom *atom, const OBStereoUnitSet &units)$/;"	f	namespace:OpenBabel
isUInt	src/formats/json/jsoncpp.cpp	/^Value::isUInt() const$/;"	f	class:Json::Value
isUnitInFragment	src/stereo/perception.cpp	/^  bool isUnitInFragment(OBMol *mol, const OBStereoUnit &unit, const OBBitVec &fragment)$/;"	f	namespace:OpenBabel
isUnitMatrix	src/math/matrix3x3.cpp	/^  bool matrix3x3::isUnitMatrix(void) const$/;"	f	class:OpenBabel::matrix3x3
isUp	src/formats/smiley.h	/^        bool isUp;$/;"	m	struct:Smiley::Parser::RingBondInfo
isValidAtomExprChar	src/formats/smiley.h	/^      void isValidAtomExprChar()$/;"	f	class:Smiley::Parser
isValidIndex	src/formats/json/jsoncpp.cpp	/^Value::isValidIndex( ArrayIndex index ) const$/;"	f	class:Json::Value
isWaterOxygen	src/formats/smilesformat.cpp	/^  bool isWaterOxygen(OBAtom *atom)$/;"	f	namespace:OpenBabel
is_CF3_or_isoC3F7	src/formats/libinchi/ichinorm.c	/^int is_CF3_or_isoC3F7( inp_ATOM *at, int start, int ord_prev )$/;"	f
is_CF3_or_linC3F7	src/formats/libinchi/ichinorm.c	/^int is_CF3_or_linC3F7( inp_ATOM *at, int start, int ord_prev )$/;"	f
is_C_Alk	src/formats/libinchi/ichinorm.c	/^int is_C_Alk( inp_ATOM *at, int i, char cFlags )$/;"	f
is_C_or_S_DB_O	src/formats/libinchi/ichinorm.c	/^int is_C_or_S_DB_O( inp_ATOM *at, int i )$/;"	f
is_C_unsat_not_arom	src/formats/libinchi/ichinorm.c	/^int is_C_unsat_not_arom( inp_ATOM *at, int i )$/;"	f
is_Me_or_Et	src/formats/libinchi/ichinorm.c	/^int is_Me_or_Et( inp_ATOM *at, int start, int ord_prev )$/;"	f
is_P_TB_N	src/formats/libinchi/ichinorm.c	/^int is_P_TB_N( inp_ATOM *at, int i )$/;"	f
is_Si_IV	src/formats/libinchi/ichinorm.c	/^int is_Si_IV( inp_ATOM *at, int i )$/;"	f
is_Z_atom	src/formats/libinchi/ichi_bns.c	/^int is_Z_atom( U_CHAR el_number )$/;"	f
is_atom_in_3memb_ring	src/formats/libinchi/ichiring.c	/^int is_atom_in_3memb_ring( inp_ATOM* atom, int at_no )$/;"	f
is_bond_in_Nmax_memb_ring	src/formats/libinchi/ichiring.c	/^int is_bond_in_Nmax_memb_ring( inp_ATOM* atom, int at_no, int neigh_ord, QUEUE *q, AT_RANK *nAtomLevel, S_CHAR *cSource, AT_RANK nMaxRingSize )$/;"	f
is_centerpoint_elem	src/formats/libinchi/ichitaut.c	/^int is_centerpoint_elem( U_CHAR el_number )$/;"	f
is_centerpoint_elem_KET	src/formats/libinchi/ichitaut.c	/^int is_centerpoint_elem_KET( U_CHAR el_number )$/;"	f
is_centerpoint_elem_strict	src/formats/libinchi/ichitaut.c	/^int is_centerpoint_elem_strict( U_CHAR el_number )$/;"	f
is_deriv_chain	src/formats/libinchi/ichinorm.c	/^int is_deriv_chain( inp_ATOM *at, int start, int num_atoms, DERIV_AT *da1, int idrv )$/;"	f
is_deriv_chain_or_ring	src/formats/libinchi/ichinorm.c	/^int is_deriv_chain_or_ring( inp_ATOM *at, int start, int num_atoms, DERIV_AT *da1, int *idrv )$/;"	f
is_deriv_ring	src/formats/libinchi/ichinorm.c	/^int is_deriv_ring( inp_ATOM *at, int start, int num_atoms, DERIV_AT *da1, int idrv )$/;"	f
is_double	src/formats/cifformat.cpp	/^  bool is_double(const std::string& s, double& r_double)$/;"	f	namespace:OpenBabel
is_el_a_metal	src/formats/libinchi/util.c	/^int is_el_a_metal( int nPeriodicNum )$/;"	f
is_element_a_metal	include/inchi/aux2atom.h	/^int is_element_a_metal( char szEl[] )$/;"	f
is_gzip	src/zipstreamimpl.h	/^basic_zip_istream<charT, traits>::is_gzip(void) const$/;"	f	class:basic_zip_istream
is_gzip	src/zipstreamimpl.h	/^bool basic_zip_ostream<charT, traits>::is_gzip(void) const$/;"	f	class:basic_zip_ostream
is_in_subtree	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::is_in_subtree(const iterator_base& it, const iterator_base& begin,$/;"	f	class:tree
is_in_the_list	src/formats/libinchi/util.c	/^AT_NUMB *is_in_the_list( AT_NUMB *pathAtom, AT_NUMB nNextAtom, int nPathLen )$/;"	f
is_in_the_slist	include/inchi/aux2atom.h	/^S_SHORT *is_in_the_slist( S_SHORT *pathAtom, S_SHORT nNextAtom, int nPathLen )$/;"	f
is_open	src/formats/smilesformat.cpp	/^    int    is_open;       \/\/ TRUE if SMILES processing hasn't reached 'toatom' yet$/;"	m	class:OpenBabel::OBBondClosureInfo	file:
is_phenyl	src/formats/libinchi/ichinorm.c	/^int is_phenyl( inp_ATOM *at, int start, int ord_prev )$/;"	f
is_possibly_deriv_neigh	src/formats/libinchi/ichinorm.c	/^int is_possibly_deriv_neigh( inp_ATOM *at, int iat, int iord, int type, char cFlags )$/;"	f
is_silyl	src/formats/libinchi/ichinorm.c	/^int is_silyl( inp_ATOM *at, int start, int ord_prev )$/;"	f
is_valid	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::is_valid(const iterator_base& it) const$/;"	f	class:tree
isbase26	include/inchi/ikey_base26.h	127;"	d
ischiral	include/openbabel/parsmart.h	/^    bool ischiral;$/;"	m	struct:OpenBabel::__anon56
isdigit	src/snprintf.c	329;"	d	file:
isdigit	src/snprintf.c	331;"	d	file:
iseol	src/formats/cifformat.cpp	/^  bool iseol(const char c) { return ((c=='\\n')||(c=='\\r'));}$/;"	f	namespace:OpenBabel
isfinite	src/depict/svgpainter.cpp	28;"	d	file:
isinline	include/libxml/HTMLparser.h	/^    char isinline;      \/* is this a block 0 or inline 1 element *\/$/;"	m	struct:_htmlElemDesc
isnic	src/formats/getinchi.cpp	/^bool isnic(char ch)$/;"	f	namespace:OpenBabel
iso_atw_diff	include/inchi/extr_ct.h	/^    NUM_H          iso_atw_diff;$/;"	m	struct:tagIsotopicAtom
iso_atw_diff	include/inchi/extr_ct.h	/^    S_CHAR iso_atw_diff;        \/* abs(iso_atw_diff) < 127 or 31 - ??? *\/$/;"	m	struct:tagAtom
iso_atw_diff	include/inchi/inchi_api.h	/^    S_CHAR        iso_atw_diff;             \/* =0 => natural isotopic abundances  *\/$/;"	m	struct:tagNormAtom
iso_atw_diff	include/inchi/inpdef.h	/^    S_CHAR        iso_atw_diff;            \/* =0 => natural isotopic abundances  *\/$/;"	m	struct:tagInputAtom
iso_atw_diff	include/inchi_api.h	/^    S_CHAR        iso_atw_diff;             \/* =0 => natural isotopic abundances  *\/$/;"	m	struct:tagNormAtom
iso_aux_key	include/inchi/ichicant.h	/^    S_CHAR          iso_aux_key;$/;"	m	struct:tagAtomInvariant2
iso_exchg_atnos	include/inchi/ichicant.h	/^    S_CHAR          *iso_exchg_atnos;     \/* canonical: 0=> tautomeric or may have isotopic H exchanged *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
iso_exchg_atnos	include/inchi/ichicant.h	/^    S_CHAR          *iso_exchg_atnos;$/;"	m	struct:tagCanonData
iso_exchg_atnos	src/formats/libinchi/ichican2.c	/^    S_CHAR          *iso_exchg_atnos;$/;"	m	struct:tagCTable	file:
iso_exchg_atnosOrig	include/inchi/ichicant.h	/^    S_CHAR          *iso_exchg_atnosOrig; \/* original: 0=> tautomeric or may have isotopic H exchanged *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
iso_sort_key	include/inchi/extr_ct.h	/^    AT_ISO_SORT_KEY iso_sort_key;  \/* = num_1H + AT_ISO_SORT_KEY_MULT^1*num_D$/;"	m	struct:tagAtom
iso_sort_key	include/inchi/ichicant.h	/^    AT_ISO_SORT_KEY *iso_sort_key;        $/;"	m	struct:tagCanonData
iso_sort_key	include/inchi/ichicant.h	/^    AT_ISO_SORT_KEY iso_sort_key;$/;"	m	struct:tagAtomInvariant
iso_sort_key	include/inchi/ichicant.h	/^    AT_ISO_SORT_KEY iso_sort_key;$/;"	m	struct:tagAtomInvariant2
iso_sort_key	src/formats/libinchi/ichican2.c	/^    AT_ISO_SORT_KEY  iso_sort_key;$/;"	m	struct:tagNodeValues	file:
iso_sort_key	src/formats/libinchi/ichican2.c	/^    AT_ISO_SORT_KEY *iso_sort_key;        $/;"	m	struct:tagCTable	file:
iso_sort_key_Hfixed	include/inchi/ichicant.h	/^    AT_ISO_SORT_KEY *iso_sort_key_Hfixed;     $/;"	m	struct:tagCanonData
iso_sort_key_Hfixed	src/formats/libinchi/ichican2.c	/^    AT_ISO_SORT_KEY  iso_sort_key_Hfixed;$/;"	m	struct:tagNodeValues	file:
iso_sort_key_Hfixed	src/formats/libinchi/ichican2.c	/^    AT_ISO_SORT_KEY *iso_sort_key_Hfixed;     $/;"	m	struct:tagCTable	file:
iso_sort_keys	include/inchi/ichicant.h	/^    AT_ISO_SORT_KEY *iso_sort_keys;     \/* original isotopic sort keys for atoms and taut groups *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
iso_sort_keysOrig	include/inchi/ichicant.h	/^    AT_ISO_SORT_KEY *iso_sort_keysOrig; \/* canonical isotopic sort keys for atoms and taut groups *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
isotab	include/openbabel/mol.h	/^  EXTERN  OBIsotopeTable   isotab;$/;"	m	namespace:OpenBabel
isotab	src/data.cpp	/^  OBIsotopeTable   isotab;$/;"	m	namespace:OpenBabel	file:
isotopic_mass	include/inchi/inchi_api.h	/^    AT_NUM  isotopic_mass;        \/* 0 => non-isotopic; isotopic mass or  *\/$/;"	m	struct:tagInchiAtom
isotopic_mass	include/inchi_api.h	/^    AT_NUM  isotopic_mass;        \/* 0 => non-isotopic; isotopic mass or  *\/$/;"	m	struct:tagInchiAtom
ispunctU	include/openbabel/descriptor.h	/^  static bool ispunctU(char ch)$/;"	f	class:OpenBabel::OBDescriptor
isqrt	src/rand.cpp	/^  static unsigned int isqrt( unsigned int val )$/;"	f	namespace:OpenBabel
istream_reference	include/openbabel/lineend.h	/^    typedef std::istream& istream_reference;$/;"	t	class:OpenBabel::FilteringInputStream
istream_reference	src/zipstream.h	/^    typedef std::basic_istream<charT, traits>& istream_reference;$/;"	t	class:zlib_stream::basic_zip_istream
istream_reference	src/zipstream.h	/^    typedef std::basic_istream<charT,traits>& istream_reference;$/;"	t	class:zlib_stream::basic_unzip_streambuf
istream_type	include/openbabel/lineend.h	/^    typedef std::istream istream_type;$/;"	t	class:OpenBabel::FilteringInputStream
istream_type	src/zipstream.h	/^    typedef std::basic_istream<charT, traits> istream_type;$/;"	t	class:zlib_stream::basic_zip_istream
itBASIC	include/inchi/ichidrp.h	/^typedef enum tagTblTypes {itBASIC, itISOTOPIC, itSTEREO, TDP_NUM_PAR} TBL_TYPES; \/*  types *\/$/;"	e	enum:tagTblTypes
itISOTOPIC	include/inchi/ichidrp.h	/^typedef enum tagTblTypes {itBASIC, itISOTOPIC, itSTEREO, TDP_NUM_PAR} TBL_TYPES; \/*  types *\/$/;"	e	enum:tagTblTypes
itSTEREO	include/inchi/ichidrp.h	/^typedef enum tagTblTypes {itBASIC, itISOTOPIC, itSTEREO, TDP_NUM_PAR} TBL_TYPES; \/*  types *\/$/;"	e	enum:tagTblTypes
itemCount_	include/openbabel/json/json.h	/^      BucketIndex itemCount_;$/;"	m	class:Json::ValueInternalMap
itemIndex_	include/openbabel/json/json.h	/^         BucketIndex itemIndex_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
itemPerLink	include/openbabel/json/json.h	/^      enum { itemPerLink = 6 };  \/\/ sizeof(ValueInternalLink) = 128 on 32 bits architecture.$/;"	e	enum:Json::ValueInternalLink::__anon45
itemsPerPage	include/openbabel/json/json.h	/^      enum { itemsPerPage = 8 };    \/\/ should be a power of 2 for fast divide and modulo.$/;"	e	enum:Json::ValueInternalArray::__anon46
items_	include/openbabel/json/json.h	/^      Value items_[itemPerLink];$/;"	m	class:Json::ValueInternalLink
iterator	include/openbabel/json/json.h	/^      typedef ValueIterator iterator;$/;"	t	class:Json::Value
iterator	include/openbabel/math/vector3.h	/^    typedef double* iterator;$/;"	t	class:OpenBabel::vector3
iterator	include/openbabel/tree/tree.hh	/^		typedef pre_order_iterator            iterator;$/;"	t	class:tree
iterator_	include/openbabel/json/json.h	/^      } iterator_;$/;"	m	class:Json::ValueIteratorBase	typeref:union:Json::ValueIteratorBase::__anon47
iterator_base	include/openbabel/tree/tree.hh	/^		class iterator_base : public stlport::bidirectional_iterator<T, ptrdiff_t> {$/;"	c	class:tree
iterator_base	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::iterator_base::iterator_base()$/;"	f	class:tree::iterator_base
iterator_base	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::iterator_base::iterator_base(tree_node *tn)$/;"	f	class:tree::iterator_base
iterator_base_less	include/openbabel/tree/tree.hh	/^		class iterator_base_less {$/;"	c	class:tree
iterator_category	include/OB-BGL/mol_graph.h	/^        typedef std::forward_iterator_tag iterator_category;$/;"	t	class:boost::graph_traits::adjacent_iterator
iterator_category	include/OB-BGL/mol_graph.h	/^        typedef std::forward_iterator_tag iterator_category;$/;"	t	class:boost::graph_traits::out_edge_iterator
iterator_category	include/openbabel/tree/tree.hh	/^				typedef std::bidirectional_iterator_tag iterator_category;$/;"	t	class:tree::iterator_base
itg	src/formats/libinchi/ichirvr3.c	/^    short  itg; \/* t-group index; endpoint = itg+1 *\/$/;"	m	struct:tagTgDiffHChgFH	file:
iz	src/mcdlutil.cpp	/^    short int iz;   \/*Isotope difference between round(AtomMass)*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
jacobi	src/math/matrix3x3.cpp	/^  void matrix3x3::jacobi(unsigned int n, double *a, double *d, double *v)$/;"	f	class:OpenBabel::matrix3x3
k	src/charges/eqeq.h	/^const double k = 14.4; \/\/ Vacuum permittivity (1\/(4 * pi * eps_0)) [A * eV]$/;"	v
k	src/formats/libinchi/ichican2.c	/^    int k;$/;"	m	struct:tagkLeast	file:
k1	src/forcefields/forcefieldghemical.h	/^      double k1, k2, k3;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
k2	src/forcefields/forcefieldghemical.h	/^      double k1, k2, k3;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
k3	src/forcefields/forcefieldghemical.h	/^      double k1, k2, k3;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
kCDXAbundance_Any	include/chemdrawcdx.h	/^	kCDXAbundance_Any			= 1,$/;"	e	enum:CDXAbundance
kCDXAbundance_Deficient	include/chemdrawcdx.h	/^	kCDXAbundance_Deficient		= 4,$/;"	e	enum:CDXAbundance
kCDXAbundance_Enriched	include/chemdrawcdx.h	/^	kCDXAbundance_Enriched		= 3,$/;"	e	enum:CDXAbundance
kCDXAbundance_Natural	include/chemdrawcdx.h	/^	kCDXAbundance_Natural		= 2,$/;"	e	enum:CDXAbundance
kCDXAbundance_Nonnatural	include/chemdrawcdx.h	/^	kCDXAbundance_Nonnatural	= 5$/;"	e	enum:CDXAbundance
kCDXAbundance_Unspecified	include/chemdrawcdx.h	/^	kCDXAbundance_Unspecified	= 0,$/;"	e	enum:CDXAbundance
kCDXArrowType_Equilibrium	include/chemdrawcdx.h	/^	kCDXArrowType_Equilibrium		=  8,$/;"	e	enum:CDXArrowType
kCDXArrowType_FullHead	include/chemdrawcdx.h	/^	kCDXArrowType_FullHead			=  2,$/;"	e	enum:CDXArrowType
kCDXArrowType_HalfHead	include/chemdrawcdx.h	/^	kCDXArrowType_HalfHead			=  1,$/;"	e	enum:CDXArrowType
kCDXArrowType_Hollow	include/chemdrawcdx.h	/^	kCDXArrowType_Hollow			= 16,$/;"	e	enum:CDXArrowType
kCDXArrowType_NoHead	include/chemdrawcdx.h	/^	kCDXArrowType_NoHead			=  0,$/;"	e	enum:CDXArrowType
kCDXArrowType_Resonance	include/chemdrawcdx.h	/^	kCDXArrowType_Resonance			=  4,$/;"	e	enum:CDXArrowType
kCDXArrowType_RetroSynthetic	include/chemdrawcdx.h	/^	kCDXArrowType_RetroSynthetic	= 32$/;"	e	enum:CDXArrowType
kCDXAtomGeometry_10Ligand	include/chemdrawcdx.h	/^	kCDXAtomGeometry_10Ligand				= 16$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_1Ligand	include/chemdrawcdx.h	/^	kCDXAtomGeometry_1Ligand				=  1,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_5Ligand	include/chemdrawcdx.h	/^	kCDXAtomGeometry_5Ligand				= 10,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_6Ligand	include/chemdrawcdx.h	/^	kCDXAtomGeometry_6Ligand				= 12,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_7Ligand	include/chemdrawcdx.h	/^	kCDXAtomGeometry_7Ligand				= 13,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_8Ligand	include/chemdrawcdx.h	/^	kCDXAtomGeometry_8Ligand				= 14,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_9Ligand	include/chemdrawcdx.h	/^	kCDXAtomGeometry_9Ligand				= 15,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_Bent	include/chemdrawcdx.h	/^	kCDXAtomGeometry_Bent					=  3,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_Linear	include/chemdrawcdx.h	/^	kCDXAtomGeometry_Linear					=  2,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_Octahedral	include/chemdrawcdx.h	/^	kCDXAtomGeometry_Octahedral				= 11,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_SquarePlanar	include/chemdrawcdx.h	/^	kCDXAtomGeometry_SquarePlanar			=  6,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_SquarePyramidal	include/chemdrawcdx.h	/^	kCDXAtomGeometry_SquarePyramidal		=  9,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_Tetrahedral	include/chemdrawcdx.h	/^	kCDXAtomGeometry_Tetrahedral			=  7,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_TrigonalBipyramidal	include/chemdrawcdx.h	/^	kCDXAtomGeometry_TrigonalBipyramidal	=  8,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_TrigonalPlanar	include/chemdrawcdx.h	/^	kCDXAtomGeometry_TrigonalPlanar			=  4,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_TrigonalPyramidal	include/chemdrawcdx.h	/^	kCDXAtomGeometry_TrigonalPyramidal		=  5,$/;"	e	enum:CDXAtomGeometry
kCDXAtomGeometry_Unknown	include/chemdrawcdx.h	/^	kCDXAtomGeometry_Unknown				=  0,$/;"	e	enum:CDXAtomGeometry
kCDXBondDisplay_Bold	include/chemdrawcdx.h	/^	kCDXBondDisplay_Bold				=  5,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_Dash	include/chemdrawcdx.h	/^	kCDXBondDisplay_Dash				=  1,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_DashDot	include/chemdrawcdx.h	/^	kCDXBondDisplay_DashDot				= 14$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_Dot	include/chemdrawcdx.h	/^	kCDXBondDisplay_Dot					= 13,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_Hash	include/chemdrawcdx.h	/^	kCDXBondDisplay_Hash				=  2,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_HollowWedgeBegin	include/chemdrawcdx.h	/^	kCDXBondDisplay_HollowWedgeBegin	=  9,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_HollowWedgeEnd	include/chemdrawcdx.h	/^	kCDXBondDisplay_HollowWedgeEnd		= 10,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_Solid	include/chemdrawcdx.h	/^	kCDXBondDisplay_Solid				=  0,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_Wavy	include/chemdrawcdx.h	/^	kCDXBondDisplay_Wavy				=  8,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_WavyWedgeBegin	include/chemdrawcdx.h	/^	kCDXBondDisplay_WavyWedgeBegin		= 11,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_WavyWedgeEnd	include/chemdrawcdx.h	/^	kCDXBondDisplay_WavyWedgeEnd		= 12,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_WedgeBegin	include/chemdrawcdx.h	/^	kCDXBondDisplay_WedgeBegin			=  6,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_WedgeEnd	include/chemdrawcdx.h	/^	kCDXBondDisplay_WedgeEnd			=  7,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_WedgedHashBegin	include/chemdrawcdx.h	/^	kCDXBondDisplay_WedgedHashBegin		=  3,$/;"	e	enum:CDXBondDisplay
kCDXBondDisplay_WedgedHashEnd	include/chemdrawcdx.h	/^	kCDXBondDisplay_WedgedHashEnd		=  4,$/;"	e	enum:CDXBondDisplay
kCDXBondDoublePosition_AutoCenter	include/chemdrawcdx.h	/^	kCDXBondDoublePosition_AutoCenter	= 0x0000,$/;"	e	enum:CDXBondDoublePosition
kCDXBondDoublePosition_AutoLeft	include/chemdrawcdx.h	/^	kCDXBondDoublePosition_AutoLeft		= 0x0002,$/;"	e	enum:CDXBondDoublePosition
kCDXBondDoublePosition_AutoRight	include/chemdrawcdx.h	/^	kCDXBondDoublePosition_AutoRight	= 0x0001,$/;"	e	enum:CDXBondDoublePosition
kCDXBondDoublePosition_UserCenter	include/chemdrawcdx.h	/^	kCDXBondDoublePosition_UserCenter	= 0x0100,$/;"	e	enum:CDXBondDoublePosition
kCDXBondDoublePosition_UserLeft	include/chemdrawcdx.h	/^	kCDXBondDoublePosition_UserLeft		= 0x0102$/;"	e	enum:CDXBondDoublePosition
kCDXBondDoublePosition_UserRight	include/chemdrawcdx.h	/^	kCDXBondDoublePosition_UserRight	= 0x0101,$/;"	e	enum:CDXBondDoublePosition
kCDXBondOrder_Any	include/chemdrawcdx.h	/^	kCDXBondOrder_Any = -1$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Dative	include/chemdrawcdx.h	/^	kCDXBondOrder_Dative		= 0x1000,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Double	include/chemdrawcdx.h	/^	kCDXBondOrder_Double		= 0x0002,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_DoubleOrAromatic	include/chemdrawcdx.h	/^	kCDXBondOrder_DoubleOrAromatic = kCDXBondOrder_Double | kCDXBondOrder_OneHalf,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_FiveHalf	include/chemdrawcdx.h	/^	kCDXBondOrder_FiveHalf		= 0x0800,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_FourHalf	include/chemdrawcdx.h	/^	kCDXBondOrder_FourHalf		= 0x0400,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Half	include/chemdrawcdx.h	/^	kCDXBondOrder_Half			= 0x0040,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Hydrogen	include/chemdrawcdx.h	/^	kCDXBondOrder_Hydrogen		= 0x4000,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Ionic	include/chemdrawcdx.h	/^	kCDXBondOrder_Ionic			= 0x2000,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_OneHalf	include/chemdrawcdx.h	/^	kCDXBondOrder_OneHalf		= 0x0080,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Quadruple	include/chemdrawcdx.h	/^	kCDXBondOrder_Quadruple		= 0x0008,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Quintuple	include/chemdrawcdx.h	/^	kCDXBondOrder_Quintuple		= 0x0010,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Sextuple	include/chemdrawcdx.h	/^	kCDXBondOrder_Sextuple		= 0x0020,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Single	include/chemdrawcdx.h	/^	kCDXBondOrder_Single		= 0x0001,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_SingleOrAromatic	include/chemdrawcdx.h	/^	kCDXBondOrder_SingleOrAromatic = kCDXBondOrder_Single | kCDXBondOrder_OneHalf,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_SingleOrDouble	include/chemdrawcdx.h	/^	kCDXBondOrder_SingleOrDouble = kCDXBondOrder_Single | kCDXBondOrder_Double,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_ThreeCenter	include/chemdrawcdx.h	/^	kCDXBondOrder_ThreeCenter	= 0x8000,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_ThreeHalf	include/chemdrawcdx.h	/^	kCDXBondOrder_ThreeHalf		= 0x0200,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_Triple	include/chemdrawcdx.h	/^	kCDXBondOrder_Triple		= 0x0004,$/;"	e	enum:CDXBondOrder
kCDXBondOrder_TwoHalf	include/chemdrawcdx.h	/^	kCDXBondOrder_TwoHalf		= 0x0100,$/;"	e	enum:CDXBondOrder
kCDXBondReactionParticipation_ChangeType	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_ChangeType		= 3,$/;"	e	enum:CDXBondReactionParticipation
kCDXBondReactionParticipation_MakeAndChange	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_MakeAndChange		= 4,$/;"	e	enum:CDXBondReactionParticipation
kCDXBondReactionParticipation_MakeOrBreak	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_MakeOrBreak		= 2,$/;"	e	enum:CDXBondReactionParticipation
kCDXBondReactionParticipation_NoChange	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_NoChange			= 6,$/;"	e	enum:CDXBondReactionParticipation
kCDXBondReactionParticipation_NotReactionCenter	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_NotReactionCenter	= 5,$/;"	e	enum:CDXBondReactionParticipation
kCDXBondReactionParticipation_ReactionCenter	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_ReactionCenter	= 1,$/;"	e	enum:CDXBondReactionParticipation
kCDXBondReactionParticipation_Unmapped	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_Unmapped			= 7$/;"	e	enum:CDXBondReactionParticipation
kCDXBondReactionParticipation_Unspecified	include/chemdrawcdx.h	/^	kCDXBondReactionParticipation_Unspecified		= 0,$/;"	e	enum:CDXBondReactionParticipation
kCDXBondTopology_Chain	include/chemdrawcdx.h	/^	kCDXBondTopology_Chain			= 2,$/;"	e	enum:CDXBondTopology
kCDXBondTopology_Ring	include/chemdrawcdx.h	/^	kCDXBondTopology_Ring			= 1,$/;"	e	enum:CDXBondTopology
kCDXBondTopology_RingOrChain	include/chemdrawcdx.h	/^	kCDXBondTopology_RingOrChain	= 3$/;"	e	enum:CDXBondTopology
kCDXBondTopology_Unspecified	include/chemdrawcdx.h	/^	kCDXBondTopology_Unspecified	= 0,$/;"	e	enum:CDXBondTopology
kCDXBracketType_Curly	include/chemdrawcdx.h	/^	kCDXBracketType_Curly,$/;"	e	enum:CDXBracketType
kCDXBracketType_CurlyPair	include/chemdrawcdx.h	/^	kCDXBracketType_CurlyPair,$/;"	e	enum:CDXBracketType
kCDXBracketType_Round	include/chemdrawcdx.h	/^	kCDXBracketType_Round$/;"	e	enum:CDXBracketType
kCDXBracketType_RoundPair	include/chemdrawcdx.h	/^	kCDXBracketType_RoundPair,$/;"	e	enum:CDXBracketType
kCDXBracketType_Square	include/chemdrawcdx.h	/^	kCDXBracketType_Square,$/;"	e	enum:CDXBracketType
kCDXBracketType_SquarePair	include/chemdrawcdx.h	/^	kCDXBracketType_SquarePair,$/;"	e	enum:CDXBracketType
kCDXBracketUsage_Anypolymer	include/chemdrawcdx.h	/^	kCDXBracketUsage_Anypolymer = 18,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Component	include/chemdrawcdx.h	/^	kCDXBracketUsage_Component = 13,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Copolymer	include/chemdrawcdx.h	/^	kCDXBracketUsage_Copolymer = 6,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_CopolymerAlternating	include/chemdrawcdx.h	/^	kCDXBracketUsage_CopolymerAlternating = 7,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_CopolymerBlock	include/chemdrawcdx.h	/^	kCDXBracketUsage_CopolymerBlock = 9,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_CopolymerRandom	include/chemdrawcdx.h	/^	kCDXBracketUsage_CopolymerRandom = 8,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Crosslink	include/chemdrawcdx.h	/^	kCDXBracketUsage_Crosslink = 10,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Generic	include/chemdrawcdx.h	/^	kCDXBracketUsage_Generic = 17,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Graft	include/chemdrawcdx.h	/^	kCDXBracketUsage_Graft = 11,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Mer	include/chemdrawcdx.h	/^	kCDXBracketUsage_Mer = 5,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_MixtureOrdered	include/chemdrawcdx.h	/^	kCDXBracketUsage_MixtureOrdered = 15,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_MixtureUnordered	include/chemdrawcdx.h	/^	kCDXBracketUsage_MixtureUnordered = 14,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Modification	include/chemdrawcdx.h	/^	kCDXBracketUsage_Modification = 12,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Monomer	include/chemdrawcdx.h	/^	kCDXBracketUsage_Monomer = 4,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_MultipleGroup	include/chemdrawcdx.h	/^	kCDXBracketUsage_MultipleGroup = 16,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_SRU	include/chemdrawcdx.h	/^	kCDXBracketUsage_SRU = 3,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Unspecified	include/chemdrawcdx.h	/^	kCDXBracketUsage_Unspecified = 0,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Unused1	include/chemdrawcdx.h	/^	kCDXBracketUsage_Unused1 = 1,$/;"	e	enum:CDXBracketUsage
kCDXBracketUsage_Unused2	include/chemdrawcdx.h	/^	kCDXBracketUsage_Unused2 = 2$/;"	e	enum:CDXBracketUsage
kCDXCIPAtom_None	include/chemdrawcdx.h	/^	kCDXCIPAtom_None,$/;"	e	enum:CDXAtomCIPType
kCDXCIPAtom_R	include/chemdrawcdx.h	/^	kCDXCIPAtom_R,$/;"	e	enum:CDXAtomCIPType
kCDXCIPAtom_S	include/chemdrawcdx.h	/^	kCDXCIPAtom_S,$/;"	e	enum:CDXAtomCIPType
kCDXCIPAtom_Undetermined	include/chemdrawcdx.h	/^	kCDXCIPAtom_Undetermined			= 0,$/;"	e	enum:CDXAtomCIPType
kCDXCIPAtom_Unspecified	include/chemdrawcdx.h	/^	kCDXCIPAtom_Unspecified						\/\/ No hash\/wedge, but if there were one, it would have stereochemistry.$/;"	e	enum:CDXAtomCIPType
kCDXCIPAtom_r	include/chemdrawcdx.h	/^	kCDXCIPAtom_r,$/;"	e	enum:CDXAtomCIPType
kCDXCIPAtom_s	include/chemdrawcdx.h	/^	kCDXCIPAtom_s,$/;"	e	enum:CDXAtomCIPType
kCDXCIPBond_E	include/chemdrawcdx.h	/^	kCDXCIPBond_E,$/;"	e	enum:CDXBondCIPType
kCDXCIPBond_None	include/chemdrawcdx.h	/^	kCDXCIPBond_None,$/;"	e	enum:CDXBondCIPType
kCDXCIPBond_Undetermined	include/chemdrawcdx.h	/^	kCDXCIPBond_Undetermined			= 0,$/;"	e	enum:CDXBondCIPType
kCDXCIPBond_Z	include/chemdrawcdx.h	/^	kCDXCIPBond_Z$/;"	e	enum:CDXBondCIPType
kCDXCharSetArabic	include/chemdrawcdx.h	/^	kCDXCharSetArabic,$/;"	e	enum:CDXCharSet
kCDXCharSetArabicASMO449P	include/chemdrawcdx.h	/^	kCDXCharSetArabicASMO449P,$/;"	e	enum:CDXCharSet
kCDXCharSetArabicASMO708	include/chemdrawcdx.h	/^	kCDXCharSetArabicASMO708 = 708,$/;"	e	enum:CDXCharSet
kCDXCharSetArabicOEM	include/chemdrawcdx.h	/^	kCDXCharSetArabicOEM,$/;"	e	enum:CDXCharSet
kCDXCharSetArabicTransparent	include/chemdrawcdx.h	/^	kCDXCharSetArabicTransparent,$/;"	e	enum:CDXCharSet
kCDXCharSetArabicTransparentASMO	include/chemdrawcdx.h	/^	kCDXCharSetArabicTransparentASMO = 720,$/;"	e	enum:CDXCharSet
kCDXCharSetBaltic	include/chemdrawcdx.h	/^	kCDXCharSetBaltic,$/;"	e	enum:CDXCharSet
kCDXCharSetBalticOEM	include/chemdrawcdx.h	/^	kCDXCharSetBalticOEM = 775,$/;"	e	enum:CDXCharSet
kCDXCharSetChineseSimplified	include/chemdrawcdx.h	/^	kCDXCharSetChineseSimplified = 936, \/\/ PRC, Singapore$/;"	e	enum:CDXCharSet
kCDXCharSetChineseTraditional	include/chemdrawcdx.h	/^	kCDXCharSetChineseTraditional = 950, \/\/ Taiwan, Hong Kong$/;"	e	enum:CDXCharSet
kCDXCharSetEBCDIC	include/chemdrawcdx.h	/^	kCDXCharSetEBCDIC,$/;"	e	enum:CDXCharSet
kCDXCharSetEBCDIC500V1	include/chemdrawcdx.h	/^	kCDXCharSetEBCDIC500V1 = 500,$/;"	e	enum:CDXCharSet
kCDXCharSetEBCDICOEM	include/chemdrawcdx.h	/^	kCDXCharSetEBCDICOEM = 37,$/;"	e	enum:CDXCharSet
kCDXCharSetGreek437G	include/chemdrawcdx.h	/^	kCDXCharSetGreek437G = 737,$/;"	e	enum:CDXCharSet
kCDXCharSetHebrew	include/chemdrawcdx.h	/^	kCDXCharSetHebrew,$/;"	e	enum:CDXCharSet
kCDXCharSetHebrewOEM	include/chemdrawcdx.h	/^	kCDXCharSetHebrewOEM,$/;"	e	enum:CDXCharSet
kCDXCharSetIBMCyrillic	include/chemdrawcdx.h	/^	kCDXCharSetIBMCyrillic = 855,$/;"	e	enum:CDXCharSet
kCDXCharSetIBMModernGreek	include/chemdrawcdx.h	/^	kCDXCharSetIBMModernGreek = 869,$/;"	e	enum:CDXCharSet
kCDXCharSetIBMTurkish	include/chemdrawcdx.h	/^	kCDXCharSetIBMTurkish = 857,$/;"	e	enum:CDXCharSet
kCDXCharSetJapanese	include/chemdrawcdx.h	/^	kCDXCharSetJapanese = 932,$/;"	e	enum:CDXCharSet
kCDXCharSetKorean	include/chemdrawcdx.h	/^	kCDXCharSetKorean = 949,$/;"	e	enum:CDXCharSet
kCDXCharSetKoreanJohab	include/chemdrawcdx.h	/^	kCDXCharSetKoreanJohab = 1361,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSCanadianFrench	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSCanadianFrench,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSIcelandic	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSIcelandic,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSLatin1	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSLatin1 = 850,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSLatin2	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSLatin2 = 852,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSNordic	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSNordic,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSPortuguese	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSPortuguese = 860,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSRussian	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSRussian,$/;"	e	enum:CDXCharSet
kCDXCharSetMSDOSUS	include/chemdrawcdx.h	/^	kCDXCharSetMSDOSUS = 437,$/;"	e	enum:CDXCharSet
kCDXCharSetMacArabic	include/chemdrawcdx.h	/^	kCDXCharSetMacArabic,$/;"	e	enum:CDXCharSet
kCDXCharSetMacArmenian	include/chemdrawcdx.h	/^	kCDXCharSetMacArmenian,$/;"	e	enum:CDXCharSet
kCDXCharSetMacBengali	include/chemdrawcdx.h	/^	kCDXCharSetMacBengali,$/;"	e	enum:CDXCharSet
kCDXCharSetMacBurmese	include/chemdrawcdx.h	/^	kCDXCharSetMacBurmese,$/;"	e	enum:CDXCharSet
kCDXCharSetMacCentralEuroRoman	include/chemdrawcdx.h	/^	kCDXCharSetMacCentralEuroRoman,$/;"	e	enum:CDXCharSet
kCDXCharSetMacCyrillic	include/chemdrawcdx.h	/^	kCDXCharSetMacCyrillic,$/;"	e	enum:CDXCharSet
kCDXCharSetMacDevanagari	include/chemdrawcdx.h	/^	kCDXCharSetMacDevanagari,$/;"	e	enum:CDXCharSet
kCDXCharSetMacEthiopic	include/chemdrawcdx.h	/^	kCDXCharSetMacEthiopic,$/;"	e	enum:CDXCharSet
kCDXCharSetMacExtArabic	include/chemdrawcdx.h	/^	kCDXCharSetMacExtArabic,$/;"	e	enum:CDXCharSet
kCDXCharSetMacGeorgian	include/chemdrawcdx.h	/^	kCDXCharSetMacGeorgian,$/;"	e	enum:CDXCharSet
kCDXCharSetMacGreek	include/chemdrawcdx.h	/^	kCDXCharSetMacGreek,$/;"	e	enum:CDXCharSet
kCDXCharSetMacGujarati	include/chemdrawcdx.h	/^	kCDXCharSetMacGujarati,$/;"	e	enum:CDXCharSet
kCDXCharSetMacGurmukhi	include/chemdrawcdx.h	/^	kCDXCharSetMacGurmukhi,$/;"	e	enum:CDXCharSet
kCDXCharSetMacHebrew	include/chemdrawcdx.h	/^	kCDXCharSetMacHebrew,$/;"	e	enum:CDXCharSet
kCDXCharSetMacIcelandic	include/chemdrawcdx.h	/^	kCDXCharSetMacIcelandic = 10079,$/;"	e	enum:CDXCharSet
kCDXCharSetMacJapanese	include/chemdrawcdx.h	/^	kCDXCharSetMacJapanese,$/;"	e	enum:CDXCharSet
kCDXCharSetMacKannada	include/chemdrawcdx.h	/^	kCDXCharSetMacKannada,$/;"	e	enum:CDXCharSet
kCDXCharSetMacKhmer	include/chemdrawcdx.h	/^	kCDXCharSetMacKhmer,$/;"	e	enum:CDXCharSet
kCDXCharSetMacKorean	include/chemdrawcdx.h	/^	kCDXCharSetMacKorean,$/;"	e	enum:CDXCharSet
kCDXCharSetMacLao	include/chemdrawcdx.h	/^	kCDXCharSetMacLao,$/;"	e	enum:CDXCharSet
kCDXCharSetMacMalayalam	include/chemdrawcdx.h	/^	kCDXCharSetMacMalayalam,$/;"	e	enum:CDXCharSet
kCDXCharSetMacMongolian	include/chemdrawcdx.h	/^	kCDXCharSetMacMongolian,$/;"	e	enum:CDXCharSet
kCDXCharSetMacOriya	include/chemdrawcdx.h	/^	kCDXCharSetMacOriya,$/;"	e	enum:CDXCharSet
kCDXCharSetMacReserved	include/chemdrawcdx.h	/^	kCDXCharSetMacReserved,$/;"	e	enum:CDXCharSet
kCDXCharSetMacRoman	include/chemdrawcdx.h	/^	kCDXCharSetMacRoman = 10000,$/;"	e	enum:CDXCharSet
kCDXCharSetMacSimpChinese	include/chemdrawcdx.h	/^	kCDXCharSetMacSimpChinese,$/;"	e	enum:CDXCharSet
kCDXCharSetMacSinhalese	include/chemdrawcdx.h	/^	kCDXCharSetMacSinhalese,$/;"	e	enum:CDXCharSet
kCDXCharSetMacTamil	include/chemdrawcdx.h	/^	kCDXCharSetMacTamil,$/;"	e	enum:CDXCharSet
kCDXCharSetMacTelugu	include/chemdrawcdx.h	/^	kCDXCharSetMacTelugu,$/;"	e	enum:CDXCharSet
kCDXCharSetMacThai	include/chemdrawcdx.h	/^	kCDXCharSetMacThai,$/;"	e	enum:CDXCharSet
kCDXCharSetMacTibetan	include/chemdrawcdx.h	/^	kCDXCharSetMacTibetan,$/;"	e	enum:CDXCharSet
kCDXCharSetMacTradChinese	include/chemdrawcdx.h	/^	kCDXCharSetMacTradChinese,$/;"	e	enum:CDXCharSet
kCDXCharSetMacTurkish	include/chemdrawcdx.h	/^	kCDXCharSetMacTurkish = 10081$/;"	e	enum:CDXCharSet
kCDXCharSetMacUninterpreted	include/chemdrawcdx.h	/^	kCDXCharSetMacUninterpreted,$/;"	e	enum:CDXCharSet
kCDXCharSetMacVietnamese	include/chemdrawcdx.h	/^	kCDXCharSetMacVietnamese,$/;"	e	enum:CDXCharSet
kCDXCharSetThai	include/chemdrawcdx.h	/^	kCDXCharSetThai = 874,$/;"	e	enum:CDXCharSet
kCDXCharSetUnicodeISO10646	include/chemdrawcdx.h	/^	kCDXCharSetUnicodeISO10646 = 1200,$/;"	e	enum:CDXCharSet
kCDXCharSetUnknown	include/chemdrawcdx.h	/^	kCDXCharSetUnknown = 0,$/;"	e	enum:CDXCharSet
kCDXCharSetVietnamese	include/chemdrawcdx.h	/^	kCDXCharSetVietnamese,$/;"	e	enum:CDXCharSet
kCDXCharSetWin31Cyrillic	include/chemdrawcdx.h	/^	kCDXCharSetWin31Cyrillic,$/;"	e	enum:CDXCharSet
kCDXCharSetWin31EasternEuropean	include/chemdrawcdx.h	/^	kCDXCharSetWin31EasternEuropean = 1250,$/;"	e	enum:CDXCharSet
kCDXCharSetWin31Greek	include/chemdrawcdx.h	/^	kCDXCharSetWin31Greek,$/;"	e	enum:CDXCharSet
kCDXCharSetWin31Latin1	include/chemdrawcdx.h	/^	kCDXCharSetWin31Latin1,$/;"	e	enum:CDXCharSet
kCDXCharSetWin31Turkish	include/chemdrawcdx.h	/^	kCDXCharSetWin31Turkish,$/;"	e	enum:CDXCharSet
kCDXConstraintType_Angle	include/chemdrawcdx.h	/^	kCDXConstraintType_Angle,$/;"	e	enum:CDXConstraintType
kCDXConstraintType_Distance	include/chemdrawcdx.h	/^	kCDXConstraintType_Distance,$/;"	e	enum:CDXConstraintType
kCDXConstraintType_ExclusionSphere	include/chemdrawcdx.h	/^	kCDXConstraintType_ExclusionSphere$/;"	e	enum:CDXConstraintType
kCDXConstraintType_Undefined	include/chemdrawcdx.h	/^	kCDXConstraintType_Undefined			= 0,$/;"	e	enum:CDXConstraintType
kCDXDrawingSpace_Pages	include/chemdrawcdx.h	/^	kCDXDrawingSpace_Pages,$/;"	e	enum:CDXDrawingSpaceType
kCDXDrawingSpace_Poster	include/chemdrawcdx.h	/^	kCDXDrawingSpace_Poster$/;"	e	enum:CDXDrawingSpaceType
kCDXExternalConnection_Diamond	include/chemdrawcdx.h	/^	kCDXExternalConnection_Diamond		= 1,$/;"	e	enum:CDXExternalConnectionType
kCDXExternalConnection_PolymerBead	include/chemdrawcdx.h	/^	kCDXExternalConnection_PolymerBead	= 3,$/;"	e	enum:CDXExternalConnectionType
kCDXExternalConnection_Star	include/chemdrawcdx.h	/^	kCDXExternalConnection_Star			= 2,$/;"	e	enum:CDXExternalConnectionType
kCDXExternalConnection_Unspecified	include/chemdrawcdx.h	/^	kCDXExternalConnection_Unspecified	= 0,$/;"	e	enum:CDXExternalConnectionType
kCDXExternalConnection_Wavy	include/chemdrawcdx.h	/^	kCDXExternalConnection_Wavy			= 4$/;"	e	enum:CDXExternalConnectionType
kCDXGeometricFeature_CentroidFromPoints	include/chemdrawcdx.h	/^	kCDXGeometricFeature_CentroidFromPoints,$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_LineFromPoints	include/chemdrawcdx.h	/^	kCDXGeometricFeature_LineFromPoints,$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_NormalFromPointPlane	include/chemdrawcdx.h	/^	kCDXGeometricFeature_NormalFromPointPlane$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_PlaneFromPointLine	include/chemdrawcdx.h	/^	kCDXGeometricFeature_PlaneFromPointLine,$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_PlaneFromPoints	include/chemdrawcdx.h	/^	kCDXGeometricFeature_PlaneFromPoints,$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_PointFromPointNormalDistance	include/chemdrawcdx.h	/^	kCDXGeometricFeature_PointFromPointNormalDistance,$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_PointFromPointPointDistance	include/chemdrawcdx.h	/^	kCDXGeometricFeature_PointFromPointPointDistance,$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_PointFromPointPointPercentage	include/chemdrawcdx.h	/^	kCDXGeometricFeature_PointFromPointPointPercentage,$/;"	e	enum:CDXGeometricFeature
kCDXGeometricFeature_Undefined	include/chemdrawcdx.h	/^	kCDXGeometricFeature_Undefined				= 0,$/;"	e	enum:CDXGeometricFeature
kCDXGraphicType_Arc	include/chemdrawcdx.h	/^	kCDXGraphicType_Arc,$/;"	e	enum:CDXGraphicType
kCDXGraphicType_Bracket	include/chemdrawcdx.h	/^	kCDXGraphicType_Bracket,$/;"	e	enum:CDXGraphicType
kCDXGraphicType_Line	include/chemdrawcdx.h	/^	kCDXGraphicType_Line,$/;"	e	enum:CDXGraphicType
kCDXGraphicType_Orbital	include/chemdrawcdx.h	/^	kCDXGraphicType_Orbital,$/;"	e	enum:CDXGraphicType
kCDXGraphicType_Oval	include/chemdrawcdx.h	/^	kCDXGraphicType_Oval,$/;"	e	enum:CDXGraphicType
kCDXGraphicType_Rectangle	include/chemdrawcdx.h	/^	kCDXGraphicType_Rectangle,$/;"	e	enum:CDXGraphicType
kCDXGraphicType_Symbol	include/chemdrawcdx.h	/^	kCDXGraphicType_Symbol$/;"	e	enum:CDXGraphicType
kCDXGraphicType_Undefined	include/chemdrawcdx.h	/^	kCDXGraphicType_Undefined = 0,$/;"	e	enum:CDXGraphicType
kCDXIsotope_Natural	include/chemdrawcdx.h	/^	kCDXIsotope_Natural				= 0$/;"	e	enum:CDXIsotope
kCDXLabelDisplay_Above	include/chemdrawcdx.h	/^	kCDXLabelDisplay_Above,$/;"	e	enum:CDXLabelDisplay
kCDXLabelDisplay_Auto	include/chemdrawcdx.h	/^	kCDXLabelDisplay_Auto,$/;"	e	enum:CDXLabelDisplay
kCDXLabelDisplay_Below	include/chemdrawcdx.h	/^	kCDXLabelDisplay_Below,$/;"	e	enum:CDXLabelDisplay
kCDXLabelDisplay_BestInitial	include/chemdrawcdx.h	/^	kCDXLabelDisplay_BestInitial$/;"	e	enum:CDXLabelDisplay
kCDXLabelDisplay_Center	include/chemdrawcdx.h	/^	kCDXLabelDisplay_Center,$/;"	e	enum:CDXLabelDisplay
kCDXLabelDisplay_Left	include/chemdrawcdx.h	/^	kCDXLabelDisplay_Left,$/;"	e	enum:CDXLabelDisplay
kCDXLabelDisplay_Right	include/chemdrawcdx.h	/^	kCDXLabelDisplay_Right,$/;"	e	enum:CDXLabelDisplay
kCDXLineHeight_Automatic	include/chemdrawcdx.h	611;"	d
kCDXLineHeight_Variable	include/chemdrawcdx.h	610;"	d
kCDXLineType_Bold	include/chemdrawcdx.h	/^	kCDXLineType_Bold	= 0x0002,$/;"	e	enum:CDXLineType
kCDXLineType_Dashed	include/chemdrawcdx.h	/^	kCDXLineType_Dashed = 0x0001,$/;"	e	enum:CDXLineType
kCDXLineType_Solid	include/chemdrawcdx.h	/^	kCDXLineType_Solid  = 0x0000,$/;"	e	enum:CDXLineType
kCDXLineType_Wavy	include/chemdrawcdx.h	/^	kCDXLineType_Wavy	= 0x0004$/;"	e	enum:CDXLineType
kCDXML_HeaderString	include/chemdrawcdx.h	56;"	d
kCDXNodeType_AnonymousAlternativeGroup	include/chemdrawcdx.h	/^	kCDXNodeType_AnonymousAlternativeGroup,$/;"	e	enum:CDXNodeType
kCDXNodeType_Element	include/chemdrawcdx.h	/^	kCDXNodeType_Element,$/;"	e	enum:CDXNodeType
kCDXNodeType_ElementList	include/chemdrawcdx.h	/^	kCDXNodeType_ElementList,$/;"	e	enum:CDXNodeType
kCDXNodeType_ElementListNickname	include/chemdrawcdx.h	/^	kCDXNodeType_ElementListNickname,$/;"	e	enum:CDXNodeType
kCDXNodeType_ExternalConnectionPoint	include/chemdrawcdx.h	/^	kCDXNodeType_ExternalConnectionPoint,$/;"	e	enum:CDXNodeType
kCDXNodeType_Formula	include/chemdrawcdx.h	/^	kCDXNodeType_Formula,$/;"	e	enum:CDXNodeType
kCDXNodeType_Fragment	include/chemdrawcdx.h	/^	kCDXNodeType_Fragment,$/;"	e	enum:CDXNodeType
kCDXNodeType_GenericNickname	include/chemdrawcdx.h	/^	kCDXNodeType_GenericNickname,$/;"	e	enum:CDXNodeType
kCDXNodeType_LinkNode	include/chemdrawcdx.h	/^	kCDXNodeType_LinkNode$/;"	e	enum:CDXNodeType
kCDXNodeType_MultiAttachment	include/chemdrawcdx.h	/^	kCDXNodeType_MultiAttachment,$/;"	e	enum:CDXNodeType
kCDXNodeType_NamedAlternativeGroup	include/chemdrawcdx.h	/^	kCDXNodeType_NamedAlternativeGroup,$/;"	e	enum:CDXNodeType
kCDXNodeType_Nickname	include/chemdrawcdx.h	/^	kCDXNodeType_Nickname,$/;"	e	enum:CDXNodeType
kCDXNodeType_Unspecified	include/chemdrawcdx.h	/^	kCDXNodeType_Unspecified,$/;"	e	enum:CDXNodeType
kCDXNodeType_VariableAttachment	include/chemdrawcdx.h	/^	kCDXNodeType_VariableAttachment,$/;"	e	enum:CDXNodeType
kCDXObj_Bond	include/chemdrawcdx.h	/^	kCDXObj_Bond,						\/\/ 0x8005$/;"	e	enum:CDXDatumID
kCDXObj_Border	include/chemdrawcdx.h	/^	kCDXObj_Border,						\/\/ 0x8020$/;"	e	enum:CDXDatumID
kCDXObj_BracketAttachment	include/chemdrawcdx.h	/^	kCDXObj_BracketAttachment,			\/\/ 0x8018$/;"	e	enum:CDXDatumID
kCDXObj_BracketedGroup	include/chemdrawcdx.h	/^	kCDXObj_BracketedGroup,				\/\/ 0x8017$/;"	e	enum:CDXDatumID
kCDXObj_Constraint	include/chemdrawcdx.h	/^	kCDXObj_Constraint,					\/\/ 0x8022$/;"	e	enum:CDXDatumID
kCDXObj_CrossReference	include/chemdrawcdx.h	/^	kCDXObj_CrossReference,             \/\/ 0x8014$/;"	e	enum:CDXDatumID
kCDXObj_CrossingBond	include/chemdrawcdx.h	/^	kCDXObj_CrossingBond,				\/\/ 0x8019$/;"	e	enum:CDXDatumID
kCDXObj_Curve	include/chemdrawcdx.h	/^	kCDXObj_Curve,						\/\/ 0x8008$/;"	e	enum:CDXDatumID
kCDXObj_Document	include/chemdrawcdx.h	/^	kCDXObj_Document = kCDXTag_Object,	\/\/ 0x8000$/;"	e	enum:CDXDatumID
kCDXObj_EmbeddedObject	include/chemdrawcdx.h	/^	kCDXObj_EmbeddedObject,				\/\/ 0x8009$/;"	e	enum:CDXDatumID
kCDXObj_Fragment	include/chemdrawcdx.h	/^	kCDXObj_Fragment,					\/\/ 0x8003$/;"	e	enum:CDXDatumID
kCDXObj_Geometry	include/chemdrawcdx.h	/^	kCDXObj_Geometry,					\/\/ 0x8021$/;"	e	enum:CDXDatumID
kCDXObj_Graphic	include/chemdrawcdx.h	/^	kCDXObj_Graphic,					\/\/ 0x8007$/;"	e	enum:CDXDatumID
kCDXObj_Group	include/chemdrawcdx.h	/^	kCDXObj_Group,						\/\/ 0x8002$/;"	e	enum:CDXDatumID
kCDXObj_NamedAlternativeGroup	include/chemdrawcdx.h	/^	kCDXObj_NamedAlternativeGroup,		\/\/ 0x800a$/;"	e	enum:CDXDatumID
kCDXObj_Node	include/chemdrawcdx.h	/^	kCDXObj_Node,						\/\/ 0x8004$/;"	e	enum:CDXDatumID
kCDXObj_ObjectDefinition	include/chemdrawcdx.h	/^	kCDXObj_ObjectDefinition,			\/\/ 0x800f$/;"	e	enum:CDXDatumID
kCDXObj_ObjectTag	include/chemdrawcdx.h	/^	kCDXObj_ObjectTag,					\/\/ 0x8011$/;"	e	enum:CDXDatumID
kCDXObj_OleClientItem	include/chemdrawcdx.h	/^	kCDXObj_OleClientItem,				\/\/ 0x8012	\/\/ obsolete$/;"	e	enum:CDXDatumID
kCDXObj_Page	include/chemdrawcdx.h	/^	kCDXObj_Page,						\/\/ 0x8001$/;"	e	enum:CDXDatumID
kCDXObj_ReactionScheme	include/chemdrawcdx.h	/^	kCDXObj_ReactionScheme,				\/\/ 0x800d$/;"	e	enum:CDXDatumID
kCDXObj_ReactionStep	include/chemdrawcdx.h	/^	kCDXObj_ReactionStep,				\/\/ 0x800e$/;"	e	enum:CDXDatumID
kCDXObj_RegistryNumber	include/chemdrawcdx.h	/^	kCDXObj_RegistryNumber,				\/\/ 0x800c$/;"	e	enum:CDXDatumID
kCDXObj_Sequence	include/chemdrawcdx.h	/^	kCDXObj_Sequence,                   \/\/ 0x8013$/;"	e	enum:CDXDatumID
kCDXObj_Spectrum	include/chemdrawcdx.h	/^	kCDXObj_Spectrum,					\/\/ 0x8010$/;"	e	enum:CDXDatumID
kCDXObj_Splitter	include/chemdrawcdx.h	/^	kCDXObj_Splitter,				    \/\/ 0x8015$/;"	e	enum:CDXDatumID
kCDXObj_TLCLane	include/chemdrawcdx.h	/^	kCDXObj_TLCLane,					\/\/ 0x8024$/;"	e	enum:CDXDatumID
kCDXObj_TLCPlate	include/chemdrawcdx.h	/^	kCDXObj_TLCPlate,					\/\/ 0x8023$/;"	e	enum:CDXDatumID
kCDXObj_TLCSpot	include/chemdrawcdx.h	/^	kCDXObj_TLCSpot,					\/\/ 0x8025$/;"	e	enum:CDXDatumID
kCDXObj_Table	include/chemdrawcdx.h	/^	kCDXObj_Table,					    \/\/ 0x8016$/;"	e	enum:CDXDatumID
kCDXObj_TemplateGrid	include/chemdrawcdx.h	/^	kCDXObj_TemplateGrid,				\/\/ 0x800b$/;"	e	enum:CDXDatumID
kCDXObj_Text	include/chemdrawcdx.h	/^	kCDXObj_Text,						\/\/ 0x8006$/;"	e	enum:CDXDatumID
kCDXObj_UnknownObject	include/chemdrawcdx.h	/^	kCDXObj_UnknownObject = 0x8FFF$/;"	e	enum:CDXDatumID
kCDXObjectTagType_Double	include/chemdrawcdx.h	/^	kCDXObjectTagType_Double,$/;"	e	enum:CDXObjectTagType
kCDXObjectTagType_Long	include/chemdrawcdx.h	/^	kCDXObjectTagType_Long,$/;"	e	enum:CDXObjectTagType
kCDXObjectTagType_String	include/chemdrawcdx.h	/^	kCDXObjectTagType_String$/;"	e	enum:CDXObjectTagType
kCDXObjectTagType_Undefined	include/chemdrawcdx.h	/^	kCDXObjectTagType_Undefined			= 0,$/;"	e	enum:CDXObjectTagType
kCDXOrbitalType_dxy	include/chemdrawcdx.h	/^	kCDXOrbitalType_dxy,				\/\/ dxy orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_dxyFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_dxyFilled			\/\/ filled dxy orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_dz2Minus	include/chemdrawcdx.h	/^	kCDXOrbitalType_dz2Minus,			\/\/ dz2 orbital (opposite shading)$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_dz2MinusFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_dz2MinusFilled,		\/\/ filled dz2 orbital (opposite shading)$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_dz2Plus	include/chemdrawcdx.h	/^	kCDXOrbitalType_dz2Plus,			\/\/ dz2 orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_dz2PlusFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_dz2PlusFilled,		\/\/ filled dz2 orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_hybridMinus	include/chemdrawcdx.h	/^	kCDXOrbitalType_hybridMinus,		\/\/ hydrid orbital (opposite shading)$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_hybridMinusFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_hybridMinusFilled,	\/\/ filled hydrid orbital (opposite shading)$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_hybridPlus	include/chemdrawcdx.h	/^	kCDXOrbitalType_hybridPlus,			\/\/ hydrid orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_hybridPlusFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_hybridPlusFilled,	\/\/ filled hydrid orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_lobe	include/chemdrawcdx.h	/^	kCDXOrbitalType_lobe,				\/\/ One lobe of a p orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_lobeFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_lobeFilled,			\/\/ filled single lobe of a p orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_lobeShaded	include/chemdrawcdx.h	/^	kCDXOrbitalType_lobeShaded,			\/\/ shaded single lobe of a p orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_oval	include/chemdrawcdx.h	/^	kCDXOrbitalType_oval,				\/\/ Oval-shaped sigma or pi orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_ovalFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_ovalFilled,			\/\/ filled Oval-shaped sigma or pi orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_ovalShaded	include/chemdrawcdx.h	/^	kCDXOrbitalType_ovalShaded,			\/\/ shaded Oval-shaped sigma or pi orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_p	include/chemdrawcdx.h	/^	kCDXOrbitalType_p,					\/\/ Complete p orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_pFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_pFilled,			\/\/ filled Complete p orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_pShaded	include/chemdrawcdx.h	/^	kCDXOrbitalType_pShaded,			\/\/ shaded Complete p orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_s	include/chemdrawcdx.h	/^	kCDXOrbitalType_s,					\/\/ s orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_sFilled	include/chemdrawcdx.h	/^	kCDXOrbitalType_sFilled = 0x0200,	\/\/ filled s orbital$/;"	e	enum:CDXOrbitalType
kCDXOrbitalType_sShaded	include/chemdrawcdx.h	/^	kCDXOrbitalType_sShaded = 0x0100,	\/\/ shaded s orbital$/;"	e	enum:CDXOrbitalType
kCDXOvalType_Bold	include/chemdrawcdx.h	/^	kCDXOvalType_Bold   = 0x0010,$/;"	e	enum:CDXOvalType
kCDXOvalType_Circle	include/chemdrawcdx.h	/^	kCDXOvalType_Circle = 0x0001,$/;"	e	enum:CDXOvalType
kCDXOvalType_Dashed	include/chemdrawcdx.h	/^	kCDXOvalType_Dashed = 0x0008,$/;"	e	enum:CDXOvalType
kCDXOvalType_Filled	include/chemdrawcdx.h	/^	kCDXOvalType_Filled = 0x0004,$/;"	e	enum:CDXOvalType
kCDXOvalType_Shaded	include/chemdrawcdx.h	/^	kCDXOvalType_Shaded = 0x0002,$/;"	e	enum:CDXOvalType
kCDXOvalType_Shadowed	include/chemdrawcdx.h	/^	kCDXOvalType_Shadowed   = 0x0020$/;"	e	enum:CDXOvalType
kCDXPageDefinition_Center	include/chemdrawcdx.h	/^	kCDXPageDefinition_Center,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_FlushLeft	include/chemdrawcdx.h	/^	kCDXPageDefinition_FlushLeft,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_FlushRight	include/chemdrawcdx.h	/^	kCDXPageDefinition_FlushRight,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_IDTerm	include/chemdrawcdx.h	/^	kCDXPageDefinition_IDTerm,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_MulticolumnNonTL4	include/chemdrawcdx.h	/^	kCDXPageDefinition_MulticolumnNonTL4,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_MulticolumnTL4	include/chemdrawcdx.h	/^	kCDXPageDefinition_MulticolumnTL4,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_Reaction1	include/chemdrawcdx.h	/^	kCDXPageDefinition_Reaction1,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_Reaction2	include/chemdrawcdx.h	/^	kCDXPageDefinition_Reaction2,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_TL4	include/chemdrawcdx.h	/^	kCDXPageDefinition_TL4,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_Undefined	include/chemdrawcdx.h	/^	kCDXPageDefinition_Undefined = 0,$/;"	e	enum:CDXPageDefinition
kCDXPageDefinition_UserDefined	include/chemdrawcdx.h	/^	kCDXPageDefinition_UserDefined$/;"	e	enum:CDXPageDefinition
kCDXPolymerFlipType_Flip	include/chemdrawcdx.h	/^	kCDXPolymerFlipType_Flip$/;"	e	enum:CDXPolymerFlipType
kCDXPolymerFlipType_NoFlip	include/chemdrawcdx.h	/^	kCDXPolymerFlipType_NoFlip,$/;"	e	enum:CDXPolymerFlipType
kCDXPolymerFlipType_Unspecified	include/chemdrawcdx.h	/^	kCDXPolymerFlipType_Unspecified = 0,$/;"	e	enum:CDXPolymerFlipType
kCDXPolymerRepeatPattern_EitherUnknown	include/chemdrawcdx.h	/^	kCDXPolymerRepeatPattern_EitherUnknown$/;"	e	enum:CDXPolymerRepeatPattern
kCDXPolymerRepeatPattern_HeadToHead	include/chemdrawcdx.h	/^	kCDXPolymerRepeatPattern_HeadToHead,$/;"	e	enum:CDXPolymerRepeatPattern
kCDXPolymerRepeatPattern_HeadToTail	include/chemdrawcdx.h	/^	kCDXPolymerRepeatPattern_HeadToTail = 0,$/;"	e	enum:CDXPolymerRepeatPattern
kCDXPositioningType_Absolute	include/chemdrawcdx.h	/^	kCDXPositioningType_Absolute$/;"	e	enum:CDXPositioningType
kCDXPositioningType_Angle	include/chemdrawcdx.h	/^	kCDXPositioningType_Angle,$/;"	e	enum:CDXPositioningType
kCDXPositioningType_Auto	include/chemdrawcdx.h	/^	kCDXPositioningType_Auto = 0,$/;"	e	enum:CDXPositioningType
kCDXPositioningType_Offset	include/chemdrawcdx.h	/^	kCDXPositioningType_Offset,$/;"	e	enum:CDXPositioningType
kCDXProp_2DExtent	include/chemdrawcdx.h	/^	kCDXProp_2DExtent,						\/\/ 0x0202 The width and height of an object in CDX coordinate units. The precise meaning of this attribute varies depending on the type of object. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_2DPosition	include/chemdrawcdx.h	/^	kCDXProp_2DPosition = 0x0200,			\/\/ 0x0200 The 2D location (in the order of vertical and horizontal locations) of an object. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_3DExtent	include/chemdrawcdx.h	/^	kCDXProp_3DExtent,						\/\/ 0x0203 The width, height, and depth of an object in CDX coordinate units (right-handed coordinate system). The precise meaning of this attribute varies depending on the type of object. (CDXPoint3D)$/;"	e	enum:CDXDatumID
kCDXProp_3DHead	include/chemdrawcdx.h	/^	kCDXProp_3DHead,						\/\/ 0x0207 The 3D location (in the order of X-, Y-, and Z-locations in right-handed coordinate system) of the head of an object in CDX coordinate units. The precise meaning of this attribute varies depending on the type of object. (CDXPoint3D)$/;"	e	enum:CDXDatumID
kCDXProp_3DPosition	include/chemdrawcdx.h	/^	kCDXProp_3DPosition,					\/\/ 0x0201 The 3D location (in the order of X-, Y-, and Z-locations in right-handed coordinate system) of an object in CDX coordinate units. The precise meaning of this attribute varies depending on the type of object. (CDXPoint3D)$/;"	e	enum:CDXDatumID
kCDXProp_3DTail	include/chemdrawcdx.h	/^	kCDXProp_3DTail,						\/\/ 0x0208 The 3D location (in the order of X-, Y-, and Z-locations in right-handed coordinate system) of the tail of an object in CDX coordinate units. The precise meaning of this attribute varies depending on the type of object. (CDXPoint3D)$/;"	e	enum:CDXDatumID
kCDXProp_Arc_AngularSize	include/chemdrawcdx.h	/^	kCDXProp_Arc_AngularSize,				\/\/ 0x0A21 The size of an arc (in degrees * 10, so 90 degrees = 900). (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Arrow_HeadSize	include/chemdrawcdx.h	/^	kCDXProp_Arrow_HeadSize = 0x0A20,		\/\/ 0x0A20 The size of the arrow's head. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Arrow_Type	include/chemdrawcdx.h	/^	kCDXProp_Arrow_Type,					\/\/ 0x0A02 The type of arrow object, which represents line, arrow, arc, rectangle, or orbital. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_AbnormalValence	include/chemdrawcdx.h	/^	kCDXProp_Atom_AbnormalValence,			\/\/ 0x0429 Signifies that an abnormal valence for an atom is permitted. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_AltGroupID	include/chemdrawcdx.h	/^	kCDXProp_Atom_AltGroupID,				\/\/ 0x0434 The ID of the alternative group object that describes this node. (CDXObjectID)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_AtomNumber	include/chemdrawcdx.h	/^	kCDXProp_Atom_AtomNumber,				\/\/ 0x0439 Atom number, as text. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_BondOrdering	include/chemdrawcdx.h	/^	kCDXProp_Atom_BondOrdering,				\/\/ 0x0431 An ordering of the bonds to this node, used for stereocenters, fragments, and named alternative groups with more than one attachment. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_CIPStereochemistry	include/chemdrawcdx.h	/^	kCDXProp_Atom_CIPStereochemistry,		\/\/ 0x0437 The node's absolute stereochemistry according to the Cahn-Ingold-Prelog system. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_Charge	include/chemdrawcdx.h	/^	kCDXProp_Atom_Charge,					\/\/ 0x0421 The atomic charge of an atom. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_ElementList	include/chemdrawcdx.h	/^	kCDXProp_Atom_ElementList,				\/\/ 0x0403 A list of atomic numbers. (CDXElementList)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_ExternalConnectionType	include/chemdrawcdx.h	/^	kCDXProp_Atom_ExternalConnectionType,	\/\/ 0x0440 Type of external connection, for atoms of type kCDXNodeType_ExternalConnectionPoint. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_Formula	include/chemdrawcdx.h	/^	kCDXProp_Atom_Formula,					\/\/ 0x0404 The composition of a node representing a fragment whose composition is known, but whose connectivity is not. For example, C<sub>4<\/sub>H<sub>9<\/sub> represents a mixture of the 4 butyl isomers. (CDXFormula)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_GenericNickname	include/chemdrawcdx.h	/^	kCDXProp_Atom_GenericNickname,			\/\/ 0x0433 The name of the generic nickname. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_Geometry	include/chemdrawcdx.h	/^	kCDXProp_Atom_Geometry,					\/\/ 0x0430 The geometry of the bonds about this atom. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_HDash	include/chemdrawcdx.h	/^	kCDXProp_Atom_HDash,					\/\/ 0x042F Signifies the presence of an implicit hydrogen with stereochemistry specified equivalent to an explicit H atom with a hashed bond. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_HDot	include/chemdrawcdx.h	/^	kCDXProp_Atom_HDot,						\/\/ 0x042E Signifies the presence of an implicit hydrogen with stereochemistry specified equivalent to an explicit H atom with a wedged bond. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_Isotope	include/chemdrawcdx.h	/^	kCDXProp_Atom_Isotope = 0x0420,			\/\/ 0x0420 The absolute isotopic mass of an atom (2 for deuterium, 14 for carbon-14). (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_IsotopicAbundance	include/chemdrawcdx.h	/^	kCDXProp_Atom_IsotopicAbundance,		\/\/ 0x043F Isotopic abundance of this atom's isotope. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_LinkCountHigh	include/chemdrawcdx.h	/^	kCDXProp_Atom_LinkCountHigh,			\/\/ 0x043E High end of repeat count for link nodes. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_LinkCountLow	include/chemdrawcdx.h	/^	kCDXProp_Atom_LinkCountLow,				\/\/ 0x043D Low end of repeat count for link nodes. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_NumHydrogens	include/chemdrawcdx.h	/^	kCDXProp_Atom_NumHydrogens,				\/\/ 0x042B The number of (explicit) hydrogens in a labeled atom consisting of one heavy atom and (optionally) the symbol H (e.g., CH<sub>3<\/sub>). (UINT16)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_Radical	include/chemdrawcdx.h	/^	kCDXProp_Atom_Radical,					\/\/ 0x0422 The atomic radical attribute of an atom. (UINT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictFreeSites	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictFreeSites,		\/\/ 0x0423 Indicates that up to the specified number of additional substituents are permitted on this atom. (UINT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictImplicitHydrogens	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictImplicitHydrogens,\/\/ 0x0424 Signifies that implicit hydrogens are not allowed on this atom. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictRingBondCount	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictRingBondCount,	\/\/ 0x0425 The number of ring bonds attached to an atom. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictRxnChange	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictRxnChange,		\/\/ 0x0427 If present, signifies that the reaction change of an atom must be as specified. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictRxnStereo	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictRxnStereo,		\/\/ 0x0428 The change of stereochemistry of an atom during a reaction. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictSubstituentsExactly	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictSubstituentsExactly,	\/\/ 0x0436 Indicates that exactly the specified number of substituents must be present. (UINT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictSubstituentsUpTo	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictSubstituentsUpTo,	\/\/ 0x0435 Indicates that substitution is restricted to no more than the specified value. (UINT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_RestrictUnsaturatedBonds	include/chemdrawcdx.h	/^	kCDXProp_Atom_RestrictUnsaturatedBonds,	\/\/ 0x0426 Indicates whether unsaturation should be present or absent. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_ShowAtomNumber	include/chemdrawcdx.h	/^	kCDXProp_Atom_ShowAtomNumber,			\/\/ 0x043C Show the atom number if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_ShowQuery	include/chemdrawcdx.h	/^	kCDXProp_Atom_ShowQuery,				\/\/ 0x043A Show the query indicator if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_ShowStereo	include/chemdrawcdx.h	/^	kCDXProp_Atom_ShowStereo,				\/\/ 0x043B Show the stereochemistry indicator if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Atom_Translation	include/chemdrawcdx.h	/^	kCDXProp_Atom_Translation,				\/\/ 0x0438 Provides for restrictions on whether a given node may match other more- or less-general nodes. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_BackgroundColor	include/chemdrawcdx.h	/^	kCDXProp_BackgroundColor,				\/\/ 0x0302 The background color of an object represented as the two-based index into the object's color table. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_BasisObjects	include/chemdrawcdx.h	/^	kCDXProp_BasisObjects,					\/\/ 0x0B82 An ordered list of objects used to define this object. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_BoldWidth	include/chemdrawcdx.h	/^	kCDXProp_BoldWidth,						\/\/ 0x0806 The default bold bond width. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_BondLength	include/chemdrawcdx.h	/^	kCDXProp_BondLength,					\/\/ 0x0805 The default bond length. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_BondSpacing	include/chemdrawcdx.h	/^	kCDXProp_BondSpacing,					\/\/ 0x0804 The spacing between segments of a multiple bond, measured relative to bond length. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_BondSpacingAbs	include/chemdrawcdx.h	/^	kCDXProp_BondSpacingAbs,				\/\/ 0x0822 The absolute distance between segments of a multiple bond. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_Begin	include/chemdrawcdx.h	/^	kCDXProp_Bond_Begin,					\/\/ 0x0604 The ID of the CDX node object at the first end of a bond. (CDXObjectID)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_BeginAttach	include/chemdrawcdx.h	/^	kCDXProp_Bond_BeginAttach,				\/\/ 0x0608 Indicates where within the Bond_Begin node a bond is attached. (UINT8)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_BondOrdering	include/chemdrawcdx.h	/^	kCDXProp_Bond_BondOrdering,				\/\/ 0x060B Ordered list of attached bond IDs. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_CIPStereochemistry	include/chemdrawcdx.h	/^	kCDXProp_Bond_CIPStereochemistry,		\/\/ 0x060A The bond's absolute stereochemistry according to the Cahn-Ingold-Prelog system. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_CrossingBonds	include/chemdrawcdx.h	/^	kCDXProp_Bond_CrossingBonds,			\/\/ 0x060E Unordered list of IDs of bonds that cross this one (either above or below). (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_Display	include/chemdrawcdx.h	/^	kCDXProp_Bond_Display,					\/\/ 0x0601 The display type of a bond object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_Display2	include/chemdrawcdx.h	/^	kCDXProp_Bond_Display2,					\/\/ 0x0602 The display type for the second line of a double bond. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_DoublePosition	include/chemdrawcdx.h	/^	kCDXProp_Bond_DoublePosition,			\/\/ 0x0603 The position of the second line of a double bond. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_End	include/chemdrawcdx.h	/^	kCDXProp_Bond_End,						\/\/ 0x0605 The ID of the CDX node object at the second end of a bond. (CDXObjectID)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_EndAttach	include/chemdrawcdx.h	/^	kCDXProp_Bond_EndAttach,				\/\/ 0x0609 Indicates where within the Bond_End node a bond is attached. (UINT8)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_Order	include/chemdrawcdx.h	/^	kCDXProp_Bond_Order = 0x0600,			\/\/ 0x0600 The order of a bond object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_RestrictRxnParticipation	include/chemdrawcdx.h	/^	kCDXProp_Bond_RestrictRxnParticipation,	\/\/ 0x0607 Specifies that a bond is affected by a reaction. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_RestrictTopology	include/chemdrawcdx.h	/^	kCDXProp_Bond_RestrictTopology,			\/\/ 0x0606 Indicates the desired topology of a bond in a query. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_ShowQuery	include/chemdrawcdx.h	/^	kCDXProp_Bond_ShowQuery,				\/\/ 0x060C Show the query indicator if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_ShowRxn	include/chemdrawcdx.h	/^	kCDXProp_Bond_ShowRxn,					\/\/ 0x060F Show the reaction-change indicator if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Bond_ShowStereo	include/chemdrawcdx.h	/^	kCDXProp_Bond_ShowStereo,				\/\/ 0x060D Show the stereochemistry indicator if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_BottomLeft	include/chemdrawcdx.h	/^	kCDXProp_BottomLeft,					\/\/ 0x020C The location of the bottom-left corner of a quadrilateral object, possibly in a rotated or skewed frame. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_BottomRight	include/chemdrawcdx.h	/^	kCDXProp_BottomRight,					\/\/ 0x020B The location of the bottom-right corner of a quadrilateral object, possibly in a rotated or skewed frame. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_BoundingBox	include/chemdrawcdx.h	/^	kCDXProp_BoundingBox,					\/\/ 0x0204 The smallest rectangle that encloses the graphical representation of the object. (CDXRectangle)$/;"	e	enum:CDXDatumID
kCDXProp_BoundsInParent	include/chemdrawcdx.h	/^	kCDXProp_BoundsInParent,				\/\/ 0x0206 The bounds of this object in the coordinate system of its parent (used for pages within tables). (CDXRectangle)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_BondID	include/chemdrawcdx.h	/^	kCDXProp_Bracket_BondID,				\/\/ 0x0A2C The ID of a bond that crosses a Bracket Attachment. (CDXObjectID)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_ComponentOrder	include/chemdrawcdx.h	/^	kCDXProp_Bracket_ComponentOrder,		\/\/ 0x0A29 The component order associated with a BracketedGroup. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_GraphicID	include/chemdrawcdx.h	/^	kCDXProp_Bracket_GraphicID,				\/\/ 0x0A2B The ID of a graphical object (bracket, brace, or parenthesis) associated with a Bracket Attachment. (CDXObjectID)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_InnerAtomID	include/chemdrawcdx.h	/^	kCDXProp_Bracket_InnerAtomID,			\/\/ 0x0A2D The ID of the node located within the Bracketed Group and attached to a bond that crosses a Bracket Attachment. (CDXObjectID)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_LipSize	include/chemdrawcdx.h	/^	kCDXProp_Bracket_LipSize,				\/\/ 0x0A22 The size of a bracket. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_RepeatCount	include/chemdrawcdx.h	/^	kCDXProp_Bracket_RepeatCount,			\/\/ 0x0A28 The number of times a multiple-group BracketedGroup is repeated. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_SRULabel	include/chemdrawcdx.h	/^	kCDXProp_Bracket_SRULabel,				\/\/ 0x0A2A The label associated with a BracketedGroup that represents an SRU. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_Type	include/chemdrawcdx.h	/^	kCDXProp_Bracket_Type,					\/\/ 0x0A06 The type of symbol object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Bracket_Usage	include/chemdrawcdx.h	/^	kCDXProp_Bracket_Usage,					\/\/ 0x0A24 The syntactical chemical meaning of the bracket (SRU, mer, mon, xlink, etc). (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_BracketedObjects	include/chemdrawcdx.h	/^	kCDXProp_BracketedObjects,				\/\/ 0x0A27 The set of objects contained in a BracketedGroup. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_CaptionJustification	include/chemdrawcdx.h	/^	kCDXProp_CaptionJustification,			\/\/ 0x080C The horizontal justification of a caption (non-atomlabel text object) (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_CaptionLineHeight	include/chemdrawcdx.h	/^	kCDXProp_CaptionLineHeight,				\/\/ 0x0707 Text line height for non-atomlabel text objects (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_CaptionStyle	include/chemdrawcdx.h	/^	kCDXProp_CaptionStyle,					\/\/ 0x080B The default style for non-atomlabel text objects. (CDXFontStyle)$/;"	e	enum:CDXDatumID
kCDXProp_CaptionStyleColor	include/chemdrawcdx.h	/^	kCDXProp_CaptionStyleColor,				\/\/ 0x0821 The default color for captions (non-atom-label text objects). (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_CaptionStyleFace	include/chemdrawcdx.h	/^	kCDXProp_CaptionStyleFace,				\/\/ 0x081F The default font face for captions (non-atom-label text objects). (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_CaptionStyleFont	include/chemdrawcdx.h	/^	kCDXProp_CaptionStyleFont,				\/\/ 0x081B The default font style for captions (non-atom-label text objects). (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_CaptionStyleSize	include/chemdrawcdx.h	/^	kCDXProp_CaptionStyleSize,				\/\/ 0x081D The default font size for captions (non-atom-label text objects). (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_ChainAngle	include/chemdrawcdx.h	/^	kCDXProp_ChainAngle,					\/\/ 0x0803 The default chain angle setting in degrees * 65536. (INT32)$/;"	e	enum:CDXDatumID
kCDXProp_ChemicalWarning	include/chemdrawcdx.h	/^	kCDXProp_ChemicalWarning,				\/\/ 0x0010 A warning concerning possible chemical problems with this object. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_ColorTable	include/chemdrawcdx.h	/^	kCDXProp_ColorTable = 0x0300,			\/\/ 0x0300 The color palette used throughout the document. (CDXColorTable)$/;"	e	enum:CDXDatumID
kCDXProp_Comment	include/chemdrawcdx.h	/^	kCDXProp_Comment,						\/\/ 0x0009 An arbitrary string intended to be meaningful to a user. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_ConstraintMax	include/chemdrawcdx.h	/^	kCDXProp_ConstraintMax,					\/\/ 0x0B85 The maximum value of the constraint (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_ConstraintMin	include/chemdrawcdx.h	/^	kCDXProp_ConstraintMin,					\/\/ 0x0B84 The minimum value of the constraint (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_ConstraintType	include/chemdrawcdx.h	/^	kCDXProp_ConstraintType,				\/\/ 0x0B83 The constraint type (distance or angle). (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_CreationDate	include/chemdrawcdx.h	/^	kCDXProp_CreationDate,					\/\/ 0x0002 The time of object creation. (CDXDate)$/;"	e	enum:CDXDatumID
kCDXProp_CreationProgram	include/chemdrawcdx.h	/^	kCDXProp_CreationProgram,				\/\/ 0x0003 The name of the program, including version and platform, that created the associated CDX object. ChemDraw 4.0 uses ChemDraw 4.0 as the value of CreationProgram. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_CreationUserName	include/chemdrawcdx.h	/^	kCDXProp_CreationUserName,				\/\/ 0x0001 The name of the creator (program user's name) of the document. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_CrossReference_Container	include/chemdrawcdx.h	/^	kCDXProp_CrossReference_Container = 0x0F00,	\/\/ 0x0F00 An external object containing (as an embedded object) the document containing the Sequence object being referenced. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_CrossReference_Document	include/chemdrawcdx.h	/^	kCDXProp_CrossReference_Document,		\/\/ 0x0F01 An external document containing the Sequence object being referenced. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_CrossReference_Identifier	include/chemdrawcdx.h	/^	kCDXProp_CrossReference_Identifier,		\/\/ 0x0F02 A unique (but otherwise random) identifier for a given Cross-Reference object. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_CrossReference_Sequence	include/chemdrawcdx.h	/^	kCDXProp_CrossReference_Sequence,		\/\/ 0x0F03 A value matching the SequenceIdentifier of the Sequence object to be referenced. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Curve_Points	include/chemdrawcdx.h	/^	kCDXProp_Curve_Points,					\/\/ 0x0A23 The B&eacute;zier curve's control point locations. (CDXCurvePoints)$/;"	e	enum:CDXDatumID
kCDXProp_Curve_Points3D	include/chemdrawcdx.h	/^	kCDXProp_Curve_Points3D,				\/\/ 0x0A2E The B&eacute;zier curve's control point locations. (CDXCurvePoints3D)$/;"	e	enum:CDXDatumID
kCDXProp_Curve_Type	include/chemdrawcdx.h	/^	kCDXProp_Curve_Type,					\/\/ 0x0A08 The type of curve object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_DihedralIsChiral	include/chemdrawcdx.h	/^	kCDXProp_DihedralIsChiral,				\/\/ 0x0B87 Signifies whether a dihedral is signed or unsigned. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_DrawingSpaceType	include/chemdrawcdx.h	/^	kCDXProp_DrawingSpaceType,				\/\/ 0x0811 The type of drawing space used for this document. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_EndObject	include/chemdrawcdx.h	/^	kCDXProp_EndObject,						\/\/ 0x0000 Marks end of object.$/;"	e	enum:CDXDatumID
kCDXProp_EnhancedMetafile	include/chemdrawcdx.h	/^	kCDXProp_EnhancedMetafile,				\/\/ 0x0A65 A Microsoft Windows Enhanced Metafile object. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_FixInplaceExtent	include/chemdrawcdx.h	/^	kCDXProp_FixInplaceExtent,				\/\/ 0x0824 Defines a size for OLE In-Place editing. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_FixInplaceGap	include/chemdrawcdx.h	/^	kCDXProp_FixInplaceGap,					\/\/ 0x0826 Defines a padding for OLE In-Place editing. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_FontTable	include/chemdrawcdx.h	/^	kCDXProp_FontTable = 0x0100,			\/\/ 0x0100 A list of fonts used in the document. (CDXFontTable)$/;"	e	enum:CDXDatumID
kCDXProp_Footer	include/chemdrawcdx.h	/^	kCDXProp_Footer,						\/\/ 0x0817 The text of the footer. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_FooterPosition	include/chemdrawcdx.h	/^	kCDXProp_FooterPosition,				\/\/ 0x0818 The vertical offset of the footer baseline from the bottom of the page. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_ForegroundColor	include/chemdrawcdx.h	/^	kCDXProp_ForegroundColor,				\/\/ 0x0301 The foreground color of an object represented as the two-based index into the object's color table. (UINT16)$/;"	e	enum:CDXDatumID
kCDXProp_FractionalWidths	include/chemdrawcdx.h	/^	kCDXProp_FractionalWidths,				\/\/ 0x080D Signifies whether to use fractional width information when drawing text. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Frag_ConnectionOrder	include/chemdrawcdx.h	/^	kCDXProp_Frag_ConnectionOrder,			\/\/ 0x0505 An ordered list of attachment points within a fragment. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_GeometricFeature	include/chemdrawcdx.h	/^	kCDXProp_GeometricFeature = 0x0B80,		\/\/ 0x0B80 The type of the geometrical feature (point, line, plane, etc.). (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Graphic_Type	include/chemdrawcdx.h	/^	kCDXProp_Graphic_Type = 0x0A00,			\/\/ 0x0A00 The type of graphical object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Group_Integral	include/chemdrawcdx.h	/^	kCDXProp_Group_Integral = 0x1100,		\/\/ 0x1100 The group is considered to be integral (non-subdivisible) if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_HashSpacing	include/chemdrawcdx.h	/^	kCDXProp_HashSpacing,					\/\/ 0x0809 The default spacing between hashed lines used in wedged hashed bonds. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_Header	include/chemdrawcdx.h	/^	kCDXProp_Header,						\/\/ 0x0815 The text of the header. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_HeaderPosition	include/chemdrawcdx.h	/^	kCDXProp_HeaderPosition,				\/\/ 0x0816 The vertical offset of the header baseline from the top of the page. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_Height	include/chemdrawcdx.h	/^	kCDXProp_Height,						\/\/ 0x0813 The height of an object in CDX coordinate units, possibly in a rotated or skewed frame. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_HeightPages	include/chemdrawcdx.h	/^	kCDXProp_HeightPages,					\/\/ 0x0810 The height of the document in pages. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_IgnoreUnconnectedAtoms	include/chemdrawcdx.h	/^	kCDXProp_IgnoreUnconnectedAtoms,		\/\/ 0x0B86 Signifies whether unconnected atoms should be ignored within the exclusion sphere. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_IgnoreWarnings	include/chemdrawcdx.h	/^	kCDXProp_IgnoreWarnings,				\/\/ 0x000F Signifies whether chemical warnings should be suppressed on this object. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_InterpretChemically	include/chemdrawcdx.h	/^	kCDXProp_InterpretChemically,			\/\/ 0x0708 Signifies whether to the text label should be interpreted chemically (if possible). (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Justification	include/chemdrawcdx.h	/^	kCDXProp_Justification,					\/\/ 0x0701 The horizontal justification of a text object. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_LabelAlignment	include/chemdrawcdx.h	/^	kCDXProp_LabelAlignment,				\/\/ 0x0705 The alignment of the text with respect to the node position. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_LabelJustification	include/chemdrawcdx.h	/^	kCDXProp_LabelJustification,			\/\/ 0x0823 The default justification for atom labels. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_LabelLineHeight	include/chemdrawcdx.h	/^	kCDXProp_LabelLineHeight,				\/\/ 0x0706 Text line height for atom labels (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_LabelStyle	include/chemdrawcdx.h	/^	kCDXProp_LabelStyle,					\/\/ 0x080A The default style for atom labels. (CDXFontStyle)$/;"	e	enum:CDXDatumID
kCDXProp_LabelStyleColor	include/chemdrawcdx.h	/^	kCDXProp_LabelStyleColor,				\/\/ 0x0820 The default color for atom labels (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_LabelStyleFace	include/chemdrawcdx.h	/^	kCDXProp_LabelStyleFace,				\/\/ 0x081E The default font style for atom labels. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_LabelStyleFont	include/chemdrawcdx.h	/^	kCDXProp_LabelStyleFont,				\/\/ 0x081A The default font family for atom labels. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_LabelStyleSize	include/chemdrawcdx.h	/^	kCDXProp_LabelStyleSize,				\/\/ 0x081C The default font size for atom labels. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_LineHeight	include/chemdrawcdx.h	/^	kCDXProp_LineHeight,					\/\/ 0x0702 The line height of a text object. (UINT16)$/;"	e	enum:CDXDatumID
kCDXProp_LineStarts	include/chemdrawcdx.h	/^	kCDXProp_LineStarts,					\/\/ 0x0704 The number of lines of a text object followed by that many values indicating the zero-based text position of each line start. (INT16ListWithCounts)$/;"	e	enum:CDXDatumID
kCDXProp_LineWidth	include/chemdrawcdx.h	/^	kCDXProp_LineWidth,						\/\/ 0x0807 The default line width. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_Line_Type	include/chemdrawcdx.h	/^	kCDXProp_Line_Type,						\/\/ 0x0A01 The type of a line object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_MacPICT	include/chemdrawcdx.h	/^	kCDXProp_MacPICT,						\/\/ 0x0A62 A Macintosh PICT data object. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_MacPrintInfo	include/chemdrawcdx.h	/^	kCDXProp_MacPrintInfo = 0x0800,			\/\/ 0x0800 The 120 byte Macintosh TPrint data associated with the CDX document object. Refer to Macintosh Toolbox manual for detailed description. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_Magnification	include/chemdrawcdx.h	/^	kCDXProp_Magnification,					\/\/ 0x080E The view magnification factor (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_MarginWidth	include/chemdrawcdx.h	/^	kCDXProp_MarginWidth,					\/\/ 0x0808 The default amount of space surrounding atom labels. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_ModificationDate	include/chemdrawcdx.h	/^	kCDXProp_ModificationDate,				\/\/ 0x0005 Time of the last modification. (CDXDate)$/;"	e	enum:CDXDatumID
kCDXProp_ModificationProgram	include/chemdrawcdx.h	/^	kCDXProp_ModificationProgram,			\/\/ 0x0006 The name of the program, including version and platform, of the last program to perform a modification. ChemDraw 4.0 uses ChemDraw 4.0 as the value of CreationProgram. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_ModificationUserName	include/chemdrawcdx.h	/^	kCDXProp_ModificationUserName,			\/\/ 0x0004 The name of the last modifier (program user's name) of the document. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Mole_Absolute	include/chemdrawcdx.h	/^	kCDXProp_Mole_Absolute,					\/\/ 0x0501 Indicates that the molecule has known absolute configuration. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Mole_Formula	include/chemdrawcdx.h	/^	kCDXProp_Mole_Formula,					\/\/ 0x0503 The molecular formula representation of a molecule object. (CDXFormula)$/;"	e	enum:CDXDatumID
kCDXProp_Mole_Racemic	include/chemdrawcdx.h	/^	kCDXProp_Mole_Racemic = 0x0500,			\/\/ 0x0500 Indicates that the molecule is a racemic mixture. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Mole_Relative	include/chemdrawcdx.h	/^	kCDXProp_Mole_Relative,					\/\/ 0x0502 Indicates that the molecule has known relative stereochemistry, but unknown absolute configuration. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Mole_Weight	include/chemdrawcdx.h	/^	kCDXProp_Mole_Weight,					\/\/ 0x0504 The average molecular weight of a molecule object. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_Name	include/chemdrawcdx.h	/^	kCDXProp_Name,							\/\/ 0x0008 Name of an object. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_NamedAlternativeGroup_GroupFrame	include/chemdrawcdx.h	/^	kCDXProp_NamedAlternativeGroup_GroupFrame,			\/\/ 0x0B01 The bounding box of the lower portion of the Named Alternative Group, containing the definition of the group. (CDXRectangle)$/;"	e	enum:CDXDatumID
kCDXProp_NamedAlternativeGroup_TextFrame	include/chemdrawcdx.h	/^	kCDXProp_NamedAlternativeGroup_TextFrame = 0x0B00,	\/\/ 0x0B00 The bounding box of upper portion of the Named Alternative Group, containing the name of the group. (CDXRectangle)$/;"	e	enum:CDXDatumID
kCDXProp_NamedAlternativeGroup_Valence	include/chemdrawcdx.h	/^	kCDXProp_NamedAlternativeGroup_Valence,				\/\/ 0x0B02 The number of attachment points in each alternative in a named alternative group. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Node_Attachments	include/chemdrawcdx.h	/^	kCDXProp_Node_Attachments,				\/\/ 0x0432 For multicenter attachment nodes or variable attachment nodes, a list of IDs of the nodes which are multiply or variably attached to this node. (CDXObjectIDArrayWithCounts)$/;"	e	enum:CDXDatumID
kCDXProp_Node_Element	include/chemdrawcdx.h	/^	kCDXProp_Node_Element,					\/\/ 0x0402 The atomic number of the atom representing this node. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Node_LabelDisplay	include/chemdrawcdx.h	/^	kCDXProp_Node_LabelDisplay,				\/\/ 0x0401 The characteristics of node label display. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Node_Type	include/chemdrawcdx.h	/^	kCDXProp_Node_Type = 0x0400,			\/\/ 0x0400 The type of a node object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_OLEObject	include/chemdrawcdx.h	/^	kCDXProp_OLEObject,						\/\/ 0x0A64 An OLE object. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_ObjectTag_Persistent	include/chemdrawcdx.h	/^	kCDXProp_ObjectTag_Persistent,			\/\/ 0x0D04 The tag will be resaved to a CDX file if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_ObjectTag_Tracking	include/chemdrawcdx.h	/^	kCDXProp_ObjectTag_Tracking,			\/\/ 0x0D03 The tag will participate in tracking if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_ObjectTag_Type	include/chemdrawcdx.h	/^	kCDXProp_ObjectTag_Type = 0x0D00,		\/\/ 0x0D00 The tag's data type. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_ObjectTag_Value	include/chemdrawcdx.h	/^	kCDXProp_ObjectTag_Value,				\/\/ 0x0D05 The value is a INT32, FLOAT64 or unformatted string depending on the value of ObjectTag_Type. (varies)$/;"	e	enum:CDXDatumID
kCDXProp_Orbital_Type	include/chemdrawcdx.h	/^	kCDXProp_Orbital_Type,					\/\/ 0x0A05 The type of orbital object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Oval_Type	include/chemdrawcdx.h	/^	kCDXProp_Oval_Type,						\/\/ 0x0A04 The type of an arrow object that represents a circle or ellipse. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_PageDefinition	include/chemdrawcdx.h	/^	kCDXProp_PageDefinition,				\/\/ 0x1FF1 An array of vertical positions that subdivide a page into regions. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_PageOverlap	include/chemdrawcdx.h	/^	kCDXProp_PageOverlap,					\/\/ 0x0814 The amount of overlap of pages when a poster is tiled. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_Picture_Edition	include/chemdrawcdx.h	/^	kCDXProp_Picture_Edition = 0x0A60,		\/\/ 0x0A60 The section information (SectionHandle) of the Macintosh Publish & Subscribe edition embedded in the CDX picture object. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_Picture_EditionAlias	include/chemdrawcdx.h	/^	kCDXProp_Picture_EditionAlias,			\/\/ 0x0A61 The alias information of the Macintosh Publish & Subscribe edition embedded in the CDX picture object. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_PointIsDirected	include/chemdrawcdx.h	/^	kCDXProp_PointIsDirected,				\/\/ 0x0B88 For a point based on a normal, signifies whether it is in a specific direction relative to the reference point. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Polymer_FlipType	include/chemdrawcdx.h	/^	kCDXProp_Polymer_FlipType,				\/\/ 0x0A26 The flip state of objects contained within the bracket. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Polymer_RepeatPattern	include/chemdrawcdx.h	/^	kCDXProp_Polymer_RepeatPattern,			\/\/ 0x0A25 The head-to-tail connectivity of objects contained within the bracket. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_Positioning	include/chemdrawcdx.h	/^	kCDXProp_Positioning,					\/\/ 0x0D06 How the indicator should be positioned with respect to its containing object. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_PositioningAngle	include/chemdrawcdx.h	/^	kCDXProp_PositioningAngle,				\/\/ 0x0D07 Angular positioning, in radians * 65536. (INT32)$/;"	e	enum:CDXDatumID
kCDXProp_PositioningOffset	include/chemdrawcdx.h	/^	kCDXProp_PositioningOffset,				\/\/ 0x0D08 Offset positioning. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_PrintMargins	include/chemdrawcdx.h	/^	kCDXProp_PrintMargins,					\/\/ 0x0802 The outer margins of the Document. (CDXRectangle)$/;"	e	enum:CDXDatumID
kCDXProp_PrintTrimMarks	include/chemdrawcdx.h	/^	kCDXProp_PrintTrimMarks,				\/\/ 0x0819 If present, trim marks are to printed in the margins. (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_Arrows	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_Arrows,			\/\/ 0x0C04 An ordered list of arrows used to separate components of the Reaction Step. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_Atom_Map	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_Atom_Map = 0x0C00,\/\/ 0x0C00 Represents pairs of mapped atom IDs; each pair is a reactant atom mapped to to a product atom. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_Atom_Map_Auto	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_Atom_Map_Auto,	\/\/ 0x0C08 Represents pairs of mapped atom IDs; each pair is a reactant atom mapped to to a product atom. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_Atom_Map_Manual	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_Atom_Map_Manual,	\/\/ 0x0C07 Represents pairs of mapped atom IDs; each pair is a reactant atom mapped to to a product atom. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_ObjectsAboveArrow	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_ObjectsAboveArrow,\/\/ 0x0C05 An order list of objects above the arrow in the Reaction Step. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_ObjectsBelowArrow	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_ObjectsBelowArrow,\/\/ 0x0C06 An order list of objects below the arrow in the Reaction Step. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_Plusses	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_Plusses,			\/\/ 0x0C03 An ordered list of pluses used to separate components of the Reaction Step. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_Products	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_Products,			\/\/ 0x0C02 An order list of products present in the Reaction Step. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_ReactionStep_Reactants	include/chemdrawcdx.h	/^	kCDXProp_ReactionStep_Reactants,		\/\/ 0x0C01 An order list of reactants present in the Reaction Step. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_Rectangle_Type	include/chemdrawcdx.h	/^	kCDXProp_Rectangle_Type,				\/\/ 0x0A03 The type of a rectangle object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_RegistryAuthority	include/chemdrawcdx.h	/^	kCDXProp_RegistryAuthority,				\/\/ 0x000C A string that specifies the authority which issued a registry or catalog number. Some examples of registry authorities are CAS, Beilstein, Aldrich, and Merck. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_RegistryNumber	include/chemdrawcdx.h	/^	kCDXProp_RegistryNumber,				\/\/ 0x000B A registry or catalog number of a molecule object. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_RelationValue	include/chemdrawcdx.h	/^	kCDXProp_RelationValue,					\/\/ 0x0B81 The numeric relationship (if any) among the basis objects used to define this object. (INT8)$/;"	e	enum:CDXDatumID
kCDXProp_RepresentsProperty	include/chemdrawcdx.h	/^	kCDXProp_RepresentsProperty,			\/\/ 0x000E Indicates that this object represents some property in some other object. (CDXRepresentsProperty)$/;"	e	enum:CDXDatumID
kCDXProp_RotationAngle	include/chemdrawcdx.h	/^	kCDXProp_RotationAngle,					\/\/ 0x0205 The angular orientation of an object in degrees * 65536. (INT32)$/;"	e	enum:CDXDatumID
kCDXProp_Sequence_Identifier	include/chemdrawcdx.h	/^	kCDXProp_Sequence_Identifier = 0x0E00,	\/\/ 0x0E00 A unique (but otherwise random) identifier for a given Sequence object. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Side	include/chemdrawcdx.h	/^	kCDXProp_Side,							\/\/ 0x0825 A specific side of an object (rectangle). (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_Class	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_Class,				\/\/ 0x0A87 The type of spectrum represented. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_DataPoint	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_DataPoint,			\/\/ 0x0A86 The Y-axis values for the spectrum. It is an array of double values corresponding to X-axis values. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_XAxisLabel	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_XAxisLabel,			\/\/ 0x0A84 A label for the X-axis. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_XLow	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_XLow,					\/\/ 0x0A81 The first data point for the X-axis of an evenly-spaced grid. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_XSpacing	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_XSpacing = 0x0A80,	\/\/ 0x0A80 The spacing in logical units (ppm, Hz, wavenumbers) between points along the X-axis of an evenly-spaced grid. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_XType	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_XType,				\/\/ 0x0A82 The type of units the X-axis represents. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_YAxisLabel	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_YAxisLabel,			\/\/ 0x0A85 A label for the Y-axis. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_YLow	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_YLow,					\/\/ 0x0A88 Y value to be used to offset data when storing XML. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_YScale	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_YScale,				\/\/ 0x0A89 Y scaling used to scale data when storing XML. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_Spectrum_YType	include/chemdrawcdx.h	/^	kCDXProp_Spectrum_YType,				\/\/ 0x0A83 The type of units the Y-axis represents. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_SplitterPositions	include/chemdrawcdx.h	/^	kCDXProp_SplitterPositions = 0x1ff0,	\/\/ 0x1FF0 An array of vertical positions that subdivide a page into regions. (CDXObjectIDArray)$/;"	e	enum:CDXDatumID
kCDXProp_Symbol_Type	include/chemdrawcdx.h	/^	kCDXProp_Symbol_Type,					\/\/ 0x0A07 The type of symbol object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_OriginFraction	include/chemdrawcdx.h	/^	kCDXProp_TLC_OriginFraction = 0x0AA0,	\/\/ 0x0AA0 The distance of the origin line from the bottom of a TLC Plate, as a fraction of the total height of the plate. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_Rf	include/chemdrawcdx.h	/^	kCDXProp_TLC_Rf = 0x0AB0,				\/\/ 0x0AB0 The Retention Factor of an individual spot. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_ShowBorders	include/chemdrawcdx.h	/^	kCDXProp_TLC_ShowBorders,				\/\/ 0x0AA4 Show borders around the edges of the TLC Plate if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_ShowOrigin	include/chemdrawcdx.h	/^	kCDXProp_TLC_ShowOrigin,				\/\/ 0x0AA2 Show the origin line near the base of the TLC Plate if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_ShowRf	include/chemdrawcdx.h	/^	kCDXProp_TLC_ShowRf,					\/\/ 0x0AB2 Show the spot's Retention Fraction (Rf) value if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_ShowSideTicks	include/chemdrawcdx.h	/^	kCDXProp_TLC_ShowSideTicks,				\/\/ 0x0AA5 Show tickmarks up the side of the TLC Plate if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_ShowSolventFront	include/chemdrawcdx.h	/^	kCDXProp_TLC_ShowSolventFront,			\/\/ 0x0AA3 Show the solvent front line near the top of the TLC Plate if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_SolventFrontFraction	include/chemdrawcdx.h	/^	kCDXProp_TLC_SolventFrontFraction,		\/\/ 0x0AA1 The distance of the solvent front from the top of a TLC Plate, as a fraction of the total height of the plate. (FLOAT64)$/;"	e	enum:CDXDatumID
kCDXProp_TLC_Tail	include/chemdrawcdx.h	/^	kCDXProp_TLC_Tail,						\/\/ 0x0AB1 The length of the "tail" of an individual spot. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_Template_NumColumns	include/chemdrawcdx.h	/^	kCDXProp_Template_NumColumns,			\/\/ 0x1002 The number of columns of the CDX TemplateGrid object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Template_NumRows	include/chemdrawcdx.h	/^	kCDXProp_Template_NumRows,				\/\/ 0x1001 The number of rows of the CDX TemplateGrid object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_Template_PaneHeight	include/chemdrawcdx.h	/^	kCDXProp_Template_PaneHeight = 0x1000,	\/\/ 0x1000 The height of the viewing window of a template grid. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_Text	include/chemdrawcdx.h	/^	kCDXProp_Text = 0x0700,					\/\/ 0x0700 The text of a text object. (CDXString)$/;"	e	enum:CDXDatumID
kCDXProp_TopLeft	include/chemdrawcdx.h	/^	kCDXProp_TopLeft,						\/\/ 0x0209 The location of the top-left corner of a quadrilateral object, possibly in a rotated or skewed frame. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_TopRight	include/chemdrawcdx.h	/^	kCDXProp_TopRight,						\/\/ 0x020A The location of the top-right corner of a quadrilateral object, possibly in a rotated or skewed frame. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_Unused1	include/chemdrawcdx.h	/^	kCDXProp_Unused1,						\/\/ 0x0007 Table of contents. (obsolete)$/;"	e	enum:CDXDatumID
kCDXProp_Unused2	include/chemdrawcdx.h	/^	kCDXProp_Unused2,						\/\/ 0x000D Indicates that this object (the reference object) is an alias to an object elsewhere in the document (the target object). The attributes and contained objects should be taken from the target object. (obsolete)$/;"	e	enum:CDXDatumID
kCDXProp_Unused3	include/chemdrawcdx.h	/^	kCDXProp_Unused3,						\/\/ 0x042A $/;"	e	enum:CDXDatumID
kCDXProp_Unused4	include/chemdrawcdx.h	/^	kCDXProp_Unused4,						\/\/ 0x042C $/;"	e	enum:CDXDatumID
kCDXProp_Unused5	include/chemdrawcdx.h	/^	kCDXProp_Unused5,						\/\/ 0x042D $/;"	e	enum:CDXDatumID
kCDXProp_Unused6	include/chemdrawcdx.h	/^	kCDXProp_Unused6,						\/\/ 0x0D01 obsolete (obsolete)$/;"	e	enum:CDXDatumID
kCDXProp_Unused7	include/chemdrawcdx.h	/^	kCDXProp_Unused7,						\/\/ 0x0D02 obsolete (obsolete)$/;"	e	enum:CDXDatumID
kCDXProp_Visible	include/chemdrawcdx.h	/^	kCDXProp_Visible,						\/\/ 0x0011 The object is visible if non-zero. (CDXBoolean)$/;"	e	enum:CDXDatumID
kCDXProp_Width	include/chemdrawcdx.h	/^	kCDXProp_Width,							\/\/ 0x0812 The width of an object in CDX coordinate units, possibly in a rotated or skewed frame. (CDXCoordinate)$/;"	e	enum:CDXDatumID
kCDXProp_WidthPages	include/chemdrawcdx.h	/^	kCDXProp_WidthPages,					\/\/ 0x080F The width of the document in pages. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_WinPrintInfo	include/chemdrawcdx.h	/^	kCDXProp_WinPrintInfo,					\/\/ 0x0801 The Windows DEVMODE structure associated with the CDX document object. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_Window_IsZoomed	include/chemdrawcdx.h	/^	kCDXProp_Window_IsZoomed = 0x0900,		\/\/ 0x0900 Signifies whether the main viewing window is zoomed (maximized). (CDXBooleanImplied)$/;"	e	enum:CDXDatumID
kCDXProp_Window_Position	include/chemdrawcdx.h	/^	kCDXProp_Window_Position,				\/\/ 0x0901 The top-left position of the main viewing window. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_Window_Size	include/chemdrawcdx.h	/^	kCDXProp_Window_Size,					\/\/ 0x0902 Height and width of the document window. (CDXPoint2D)$/;"	e	enum:CDXDatumID
kCDXProp_WindowsMetafile	include/chemdrawcdx.h	/^	kCDXProp_WindowsMetafile,				\/\/ 0x0A63 A Microsoft Windows Metafile object. (Unformatted)$/;"	e	enum:CDXDatumID
kCDXProp_WordWrapWidth	include/chemdrawcdx.h	/^	kCDXProp_WordWrapWidth,					\/\/ 0x0703 The word-wrap width of a text object. (INT16)$/;"	e	enum:CDXDatumID
kCDXProp_ZOrder	include/chemdrawcdx.h	/^	kCDXProp_ZOrder,						\/\/ 0x000A Back-to-front ordering index in 2D drawing. (INT16)$/;"	e	enum:CDXDatumID
kCDXRadical_Doublet	include/chemdrawcdx.h	/^	kCDXRadical_Doublet				= 2,	\/\/ monoradical		  (one dot)$/;"	e	enum:CDXRadical
kCDXRadical_None	include/chemdrawcdx.h	/^	kCDXRadical_None				= 0,$/;"	e	enum:CDXRadical
kCDXRadical_Singlet	include/chemdrawcdx.h	/^	kCDXRadical_Singlet				= 1,	\/\/ diradical singlet  (two dots)$/;"	e	enum:CDXRadical
kCDXRadical_Triplet	include/chemdrawcdx.h	/^	kCDXRadical_Triplet				= 3		\/\/ diradical triplet  (two dots)$/;"	e	enum:CDXRadical
kCDXReactionStereo_Inversion	include/chemdrawcdx.h	/^	kCDXReactionStereo_Inversion	= 1,$/;"	e	enum:CDXReactionStereo
kCDXReactionStereo_Retention	include/chemdrawcdx.h	/^	kCDXReactionStereo_Retention	= 2$/;"	e	enum:CDXReactionStereo
kCDXReactionStereo_Unspecified	include/chemdrawcdx.h	/^	kCDXReactionStereo_Unspecified	= 0,$/;"	e	enum:CDXReactionStereo
kCDXRectangleType_Bold	include/chemdrawcdx.h	/^	kCDXRectangleType_Bold = 0x0020$/;"	e	enum:CDXRectangleType
kCDXRectangleType_Dashed	include/chemdrawcdx.h	/^	kCDXRectangleType_Dashed = 0x0010,$/;"	e	enum:CDXRectangleType
kCDXRectangleType_Filled	include/chemdrawcdx.h	/^	kCDXRectangleType_Filled = 0x0008,$/;"	e	enum:CDXRectangleType
kCDXRectangleType_Plain	include/chemdrawcdx.h	/^	kCDXRectangleType_Plain = 0x0000,$/;"	e	enum:CDXRectangleType
kCDXRectangleType_RoundEdge	include/chemdrawcdx.h	/^	kCDXRectangleType_RoundEdge = 0x0001,$/;"	e	enum:CDXRectangleType
kCDXRectangleType_Shaded	include/chemdrawcdx.h	/^	kCDXRectangleType_Shaded = 0x0004,$/;"	e	enum:CDXRectangleType
kCDXRectangleType_Shadow	include/chemdrawcdx.h	/^	kCDXRectangleType_Shadow = 0x0002,$/;"	e	enum:CDXRectangleType
kCDXRingBondCount_AsDrawn	include/chemdrawcdx.h	/^	kCDXRingBondCount_AsDrawn		= 1,$/;"	e	enum:CDXRingBondCount
kCDXRingBondCount_Fusion	include/chemdrawcdx.h	/^	kCDXRingBondCount_Fusion		= 3,$/;"	e	enum:CDXRingBondCount
kCDXRingBondCount_NoRingBonds	include/chemdrawcdx.h	/^	kCDXRingBondCount_NoRingBonds	= 0,$/;"	e	enum:CDXRingBondCount
kCDXRingBondCount_SimpleRing	include/chemdrawcdx.h	/^	kCDXRingBondCount_SimpleRing	= 2,$/;"	e	enum:CDXRingBondCount
kCDXRingBondCount_SpiroOrHigher	include/chemdrawcdx.h	/^	kCDXRingBondCount_SpiroOrHigher	= 4$/;"	e	enum:CDXRingBondCount
kCDXRingBondCount_Unspecified	include/chemdrawcdx.h	/^	kCDXRingBondCount_Unspecified	= -1,$/;"	e	enum:CDXRingBondCount
kCDXSideType_Bottom	include/chemdrawcdx.h	/^	kCDXSideType_Bottom,$/;"	e	enum:CDXSideType
kCDXSideType_Left	include/chemdrawcdx.h	/^	kCDXSideType_Left,$/;"	e	enum:CDXSideType
kCDXSideType_Right	include/chemdrawcdx.h	/^	kCDXSideType_Right$/;"	e	enum:CDXSideType
kCDXSideType_Top	include/chemdrawcdx.h	/^	kCDXSideType_Top,$/;"	e	enum:CDXSideType
kCDXSideType_Undefined	include/chemdrawcdx.h	/^	kCDXSideType_Undefined				= 0,$/;"	e	enum:CDXSideType
kCDXSpectrumClass_Atomic	include/chemdrawcdx.h	/^	kCDXSpectrumClass_Atomic$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_Chromatogram	include/chemdrawcdx.h	/^	kCDXSpectrumClass_Chromatogram,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_Fluorescence	include/chemdrawcdx.h	/^	kCDXSpectrumClass_Fluorescence,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_Infrared	include/chemdrawcdx.h	/^	kCDXSpectrumClass_Infrared,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_MassSpectrum	include/chemdrawcdx.h	/^	kCDXSpectrumClass_MassSpectrum,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_NMR	include/chemdrawcdx.h	/^	kCDXSpectrumClass_NMR,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_Raman	include/chemdrawcdx.h	/^	kCDXSpectrumClass_Raman,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_UVVis	include/chemdrawcdx.h	/^	kCDXSpectrumClass_UVVis,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_Unknown	include/chemdrawcdx.h	/^	kCDXSpectrumClass_Unknown,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumClass_XRayDiffraction	include/chemdrawcdx.h	/^	kCDXSpectrumClass_XRayDiffraction,$/;"	e	enum:CDXSpectrumClass
kCDXSpectrumXType_Hertz	include/chemdrawcdx.h	/^	kCDXSpectrumXType_Hertz,$/;"	e	enum:CDXSpectrumXType
kCDXSpectrumXType_MassUnits	include/chemdrawcdx.h	/^	kCDXSpectrumXType_MassUnits,$/;"	e	enum:CDXSpectrumXType
kCDXSpectrumXType_Microns	include/chemdrawcdx.h	/^	kCDXSpectrumXType_Microns,$/;"	e	enum:CDXSpectrumXType
kCDXSpectrumXType_Other	include/chemdrawcdx.h	/^	kCDXSpectrumXType_Other$/;"	e	enum:CDXSpectrumXType
kCDXSpectrumXType_PartsPerMillion	include/chemdrawcdx.h	/^	kCDXSpectrumXType_PartsPerMillion,$/;"	e	enum:CDXSpectrumXType
kCDXSpectrumXType_Unknown	include/chemdrawcdx.h	/^	kCDXSpectrumXType_Unknown,$/;"	e	enum:CDXSpectrumXType
kCDXSpectrumXType_Wavenumbers	include/chemdrawcdx.h	/^	kCDXSpectrumXType_Wavenumbers,$/;"	e	enum:CDXSpectrumXType
kCDXSpectrumYType_Absorbance	include/chemdrawcdx.h	/^	kCDXSpectrumYType_Absorbance, $/;"	e	enum:CDXSpectrumYType
kCDXSpectrumYType_ArbitraryUnits	include/chemdrawcdx.h	/^	kCDXSpectrumYType_ArbitraryUnits$/;"	e	enum:CDXSpectrumYType
kCDXSpectrumYType_Other	include/chemdrawcdx.h	/^	kCDXSpectrumYType_Other, $/;"	e	enum:CDXSpectrumYType
kCDXSpectrumYType_PercentTransmittance	include/chemdrawcdx.h	/^	kCDXSpectrumYType_PercentTransmittance, $/;"	e	enum:CDXSpectrumYType
kCDXSpectrumYType_Transmittance	include/chemdrawcdx.h	/^	kCDXSpectrumYType_Transmittance, $/;"	e	enum:CDXSpectrumYType
kCDXSpectrumYType_Unknown	include/chemdrawcdx.h	/^	kCDXSpectrumYType_Unknown,$/;"	e	enum:CDXSpectrumYType
kCDXSymbolType_Absolute	include/chemdrawcdx.h	/^	kCDXSymbolType_Absolute,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_CircleMinus	include/chemdrawcdx.h	/^	kCDXSymbolType_CircleMinus,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_CirclePlus	include/chemdrawcdx.h	/^	kCDXSymbolType_CirclePlus,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_Dagger	include/chemdrawcdx.h	/^	kCDXSymbolType_Dagger,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_DoubleDagger	include/chemdrawcdx.h	/^	kCDXSymbolType_DoubleDagger,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_Electron	include/chemdrawcdx.h	/^	kCDXSymbolType_Electron,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_LonePair	include/chemdrawcdx.h	/^	kCDXSymbolType_LonePair,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_Minus	include/chemdrawcdx.h	/^	kCDXSymbolType_Minus,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_Plus	include/chemdrawcdx.h	/^	kCDXSymbolType_Plus,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_Racemic	include/chemdrawcdx.h	/^	kCDXSymbolType_Racemic,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_RadicalAnion	include/chemdrawcdx.h	/^	kCDXSymbolType_RadicalAnion,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_RadicalCation	include/chemdrawcdx.h	/^	kCDXSymbolType_RadicalCation,$/;"	e	enum:CDXSymbolType
kCDXSymbolType_Relative	include/chemdrawcdx.h	/^	kCDXSymbolType_Relative$/;"	e	enum:CDXSymbolType
kCDXTagType_Angle	include/chemdrawcdx.h	586;"	d
kCDXTagType_BracketUsage	include/chemdrawcdx.h	581;"	d
kCDXTagType_Deviation	include/chemdrawcdx.h	584;"	d
kCDXTagType_Distance	include/chemdrawcdx.h	585;"	d
kCDXTagType_Heading	include/chemdrawcdx.h	579;"	d
kCDXTagType_IDTerm	include/chemdrawcdx.h	580;"	d
kCDXTagType_Number	include/chemdrawcdx.h	578;"	d
kCDXTagType_PolymerFlip	include/chemdrawcdx.h	583;"	d
kCDXTagType_PolymerRepeat	include/chemdrawcdx.h	582;"	d
kCDXTagType_Query	include/chemdrawcdx.h	575;"	d
kCDXTagType_Rf	include/chemdrawcdx.h	587;"	d
kCDXTagType_Rxn	include/chemdrawcdx.h	576;"	d
kCDXTagType_Stereo	include/chemdrawcdx.h	577;"	d
kCDXTagType_Unknown	include/chemdrawcdx.h	574;"	d
kCDXTag_Object	include/chemdrawcdx.h	/^const UINT16 kCDXTag_Object			= 0x8000;$/;"	v
kCDXTag_UserDefined	include/chemdrawcdx.h	/^const UINT16 kCDXTag_UserDefined	= 0x4000;$/;"	v
kCDXTextJustification_Above	include/chemdrawcdx.h	/^	kCDXTextJustification_Above,$/;"	e	enum:CDXTextJustification
kCDXTextJustification_Auto	include/chemdrawcdx.h	/^	kCDXTextJustification_Auto,$/;"	e	enum:CDXTextJustification
kCDXTextJustification_Below	include/chemdrawcdx.h	/^	kCDXTextJustification_Below,$/;"	e	enum:CDXTextJustification
kCDXTextJustification_BestInitial	include/chemdrawcdx.h	/^	kCDXTextJustification_BestInitial$/;"	e	enum:CDXTextJustification
kCDXTextJustification_Center	include/chemdrawcdx.h	/^	kCDXTextJustification_Center,$/;"	e	enum:CDXTextJustification
kCDXTextJustification_Full	include/chemdrawcdx.h	/^	kCDXTextJustification_Full,$/;"	e	enum:CDXTextJustification
kCDXTextJustification_Left	include/chemdrawcdx.h	/^	kCDXTextJustification_Left,$/;"	e	enum:CDXTextJustification
kCDXTextJustification_Right	include/chemdrawcdx.h	/^	kCDXTextJustification_Right = -1,$/;"	e	enum:CDXTextJustification
kCDXTranslation_Any	include/chemdrawcdx.h	/^	kCDXTranslation_Any		= 3$/;"	e	enum:CDXTranslation
kCDXTranslation_Broad	include/chemdrawcdx.h	/^	kCDXTranslation_Broad	= 1,$/;"	e	enum:CDXTranslation
kCDXTranslation_Equal	include/chemdrawcdx.h	/^	kCDXTranslation_Equal	= 0,$/;"	e	enum:CDXTranslation
kCDXTranslation_Narrow	include/chemdrawcdx.h	/^	kCDXTranslation_Narrow	= 2,$/;"	e	enum:CDXTranslation
kCDXUndefinedId	include/chemdrawcdx.h	/^const CDXObjectID kCDXUndefinedId = (CDXObjectID)-1;$/;"	v
kCDXUnsaturationLastEnum	include/chemdrawcdx.h	/^	kCDXUnsaturationLastEnum$/;"	e	enum:CDXUnsaturation
kCDXUnsaturation_MustBeAbsent	include/chemdrawcdx.h	/^	kCDXUnsaturation_MustBeAbsent	= 1,$/;"	e	enum:CDXUnsaturation
kCDXUnsaturation_MustBePresent	include/chemdrawcdx.h	/^	kCDXUnsaturation_MustBePresent	= 2,$/;"	e	enum:CDXUnsaturation
kCDXUnsaturation_Unspecified	include/chemdrawcdx.h	/^	kCDXUnsaturation_Unspecified	= 0,$/;"	e	enum:CDXUnsaturation
kCDXUser_TemporaryBegin	include/chemdrawcdx.h	/^	kCDXUser_TemporaryBegin = kCDXTag_UserDefined,$/;"	e	enum:CDXDatumID
kCDXUser_TemporaryEnd	include/chemdrawcdx.h	/^	kCDXUser_TemporaryEnd = kCDXTag_UserDefined + 0x0400,$/;"	e	enum:CDXDatumID
kCDX_HeaderLength	include/chemdrawcdx.h	54;"	d
kCDX_HeaderString	include/chemdrawcdx.h	52;"	d
kCDX_HeaderStringLen	include/chemdrawcdx.h	/^const int kCDX_HeaderStringLen = 8;$/;"	v
kCDX_Signature	include/chemdrawcdx.h	53;"	d
kLeast	src/formats/libinchi/ichican2.c	/^} kLeast;$/;"	t	typeref:struct:tagkLeast	file:
ka	src/forcefields/forcefieldghemical.h	/^        double ka, sigma12;$/;"	m	union:OpenBabel::OBFFVDWCalculationGhemical::__anon75
ka	src/forcefields/forcefieldghemical.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGhemical
ka	src/forcefields/forcefieldmmff94.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationMMFF94
ka	src/forcefields/forcefielduff.h	/^      double ka, kaSquared, Ra, kb, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
ka	src/forcefields/forcefielduff.h	/^      double ka, theta0, theta, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
kaSquared	src/forcefields/forcefielduff.h	/^      double ka, kaSquared, Ra, kb, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
kab	src/forcefields/forcefieldghemical.h	/^      double Ra, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationGhemical
kab	src/forcefields/forcefielduff.h	/^      double ka, kaSquared, Ra, kb, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
kb	src/forcefields/forcefieldghemical.h	/^        double kb, sigma6;$/;"	m	union:OpenBabel::OBFFVDWCalculationGhemical::__anon76
kb	src/forcefields/forcefieldghemical.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGhemical
kb	src/forcefields/forcefieldmmff94.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationMMFF94
kb	src/forcefields/forcefielduff.h	/^      double ka, kaSquared, Ra, kb, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
kb	src/forcefields/forcefielduff.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationUFF
kbaABC	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
kbaCBA	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
keepBlanks	include/libxml/parser.h	/^    int             keepBlanks;       \/* ugly but ... *\/$/;"	m	struct:_xmlParserCtxt
key	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::key() const$/;"	f	class:Json::ValueIteratorBase
key_	include/openbabel/json/json.h	/^      std::string key_;$/;"	m	class:Json::PathArgument
key_distance	src/conformersearch.cpp	/^  OBConformerSearch::key_distance (const RotorKey &key1, const RotorKey &key2)$/;"	f	class:OpenBabel::OBConformerSearch
key_type	include/OB-BGL/mol_graph.h	/^    typedef OpenBabel::OBAtom* key_type;$/;"	t	class:OBAtomMap
key_type	include/OB-BGL/mol_graph.h	/^    typedef OpenBabel::OBBond* key_type;$/;"	t	class:OBBondMap
keys_	include/openbabel/json/json.h	/^      char *keys_[itemPerLink];$/;"	m	class:Json::ValueInternalLink
kflag	src/formats/MCDLformat.cpp	/^  int kflag;$/;"	m	class:OpenBabel::MCDLFormat	file:
kindIndex	include/openbabel/json/json.h	/^         kindIndex,$/;"	e	enum:Json::PathArgument::Kind
kindKey	include/openbabel/json/json.h	/^         kindKey$/;"	e	enum:Json::PathArgument::Kind
kindNone	include/openbabel/json/json.h	/^         kindNone = 0,$/;"	e	enum:Json::PathArgument::Kind
kind_	include/openbabel/json/json.h	/^      Kind kind_;$/;"	m	class:Json::PathArgument
koop	src/forcefields/forcefieldmmff94.h	/^      double koop, angle;$/;"	m	class:OpenBabel::OBFFOOPCalculationMMFF94
koop	src/forcefields/forcefielduff.h	/^      double koop, angle;$/;"	m	class:OpenBabel::OBFFOOPCalculationUFF
kp	include/openbabel/tree/tree.hh	/^namespace kp {$/;"	n
kptree	include/openbabel/tree/tree_util.hh	/^namespace kptree {$/;"	n
kr	src/forcefields/forcefieldgaff.h	/^      double kr, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGaff
kth	src/forcefields/forcefieldgaff.h	/^      double kth, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGaff
lMolfileNumber	include/inchi/ichidrp.h	/^    long            lMolfileNumber;$/;"	m	struct:tagInputParms
lNumBreakTies	include/inchi/ichicant.h	/^    long                 lNumBreakTies;$/;"	m	struct:tagCanonStat
lNumBreakTies	include/inchi/ichicant.h	/^    long     lNumBreakTies;$/;"	m	struct:tagCanonCounts
lNumDecreasedCT	include/inchi/ichicant.h	/^    long                 lNumDecreasedCT;$/;"	m	struct:tagCanonStat
lNumDecreasedCT	include/inchi/ichicant.h	/^    long     lNumDecreasedCT;$/;"	m	struct:tagCanonCounts
lNumEqualCT	include/inchi/ichicant.h	/^    long                 lNumEqualCT;$/;"	m	struct:tagCanonStat
lNumEqualCT	include/inchi/ichicant.h	/^    long     lNumEqualCT;$/;"	m	struct:tagCanonCounts
lNumGenerators	include/inchi/ichicant.h	/^    long     lNumGenerators;$/;"	m	struct:tagCanonCounts
lNumNeighListIter	include/inchi/ichicant.h	/^    long                 lNumNeighListIter;$/;"	m	struct:tagCanonStat
lNumRejectedCT	include/inchi/ichicant.h	/^    long                 lNumRejectedCT;$/;"	m	struct:tagCanonStat
lNumRejectedCT	include/inchi/ichicant.h	/^    long     lNumRejectedCT;$/;"	m	struct:tagCanonCounts
lNumStoredIsomorphisms	include/inchi/ichicant.h	/^    long     lNumStoredIsomorphisms;$/;"	m	struct:tagCanonCounts
lNumTotCT	include/inchi/ichicant.h	/^    long                 lNumTotCT;$/;"	m	struct:tagCanonStat
lNumTotCT	include/inchi/ichicant.h	/^    long     lNumTotCT;$/;"	m	struct:tagCanonCounts
lSdfId	include/inchi/ichidrp.h	/^    long            lSdfId;$/;"	m	struct:tagInputParms
lTotalTime	include/inchi/ichicant.h	/^    long                 lTotalTime;$/;"	m	struct:tagCanonStat
label	src/formats/fastaformat.cpp	/^    char label[6]; \/\/ e.g. CA, CB, CC$/;"	m	struct:OpenBabel::ResidueAtomRecord	file:
labelToZ	src/formats/dlpolyformat.cpp	/^    labelToZType labelToZ; \/\/ For storing previously determined labels$/;"	m	class:OpenBabel::DlpolyInputReader	file:
labelToZType	src/formats/dlpolyformat.cpp	/^    typedef std::map<std::string, int> labelToZType;$/;"	t	class:OpenBabel::DlpolyInputReader	file:
labels	src/canon.cpp	/^      const std::vector<unsigned int> &labels;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::SortStereoCenters	file:
labels	src/canon.cpp	/^      std::vector<unsigned int> labels;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::FullCode	file:
labels	src/canon.cpp	/^      std::vector<unsigned int> labels;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::PartialCode	file:
labels	src/formats/adfformat.cpp	/^        std::vector< std::string > labels;$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
lambda	src/charges/eqeq.h	/^const double lambda = 1.2; \/\/ Coulomb scaling parameter$/;"	v
last	include/libxml/entities.h	/^    struct _xmlNode        *last;	\/* Last child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
last	include/libxml/tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
last	include/libxml/tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
last	include/libxml/tree.h	/^    struct _xmlNode *last;	\/* NULL *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode
last	include/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
last	include/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
last	include/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
lastError	include/libxml/parser.h	/^    xmlError          lastError;$/;"	m	struct:_xmlParserCtxt
lastError	include/libxml/xpath.h	/^    xmlError lastError;			\/* the last error *\/$/;"	m	struct:_xmlXPathContext
lastIndexOf	src/formats/MCDLformat.cpp	/^  int MCDLFormat::lastIndexOf(const string instring, const string substring) {$/;"	f	class:OpenBabel::MCDLFormat
lastValueEnd_	include/openbabel/json/json.h	/^      Location lastValueEnd_;$/;"	m	class:Json::Reader
lastValue_	include/openbabel/json/json.h	/^      Value *lastValue_;$/;"	m	class:Json::Reader
last_char	src/formats/mmcifformat.cpp	/^   int  last_char, next_char;$/;"	m	class:OpenBabel::CIFLexer	file:
last_child	include/openbabel/tree/tree.hh	/^	   tree_node_<T> *first_child, *last_child;$/;"	m	class:tree_node_
last_struct_number	include/inchi/ichidrp.h	/^    long            last_struct_number;$/;"	m	struct:tagInputParms
leaf	include/openbabel/parsmart.h	/^      leaf;$/;"	m	union:OpenBabel::_AtomExpr	typeref:struct:OpenBabel::_AtomExpr::__anon48
leaf	src/formats/smiley.h	/^      } leaf;$/;"	m	union:Smiley::SmartsAtomExpr::__anon80	typeref:struct:Smiley::SmartsAtomExpr::__anon80::__anon81
leaf_iterator	include/openbabel/tree/tree.hh	/^      class leaf_iterator : public iterator_base {$/;"	c	class:tree
leaf_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::leaf_iterator::leaf_iterator()$/;"	f	class:tree::leaf_iterator
leaf_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::leaf_iterator::leaf_iterator(const iterator_base &other)$/;"	f	class:tree::leaf_iterator
leaf_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::leaf_iterator::leaf_iterator(const sibling_iterator& other)$/;"	f	class:tree::leaf_iterator
leaf_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::leaf_iterator::leaf_iterator(tree_node *tn, tree_node *top)$/;"	f	class:tree::leaf_iterator
left	src/mcdlutil.cpp	/^    double left,top,right,bottom;$/;"	m	class:OpenBabel::Rect	file:
len	include/inchi/ichirvrs.h	/^             int     len;$/;"	m	struct:tagChargeNodeList
len	src/formats/libinchi/ichiread.c	/^    int   len;$/;"	m	struct:tagLine	file:
len	src/formats/libinchi/ichiread.c	/^    int len;$/;"	m	struct:tagLinkedBonds	file:
len2	src/formats/libinchi/ichister.c	/^double len2( const double c[] )$/;"	f
len3	src/formats/libinchi/ichister.c	/^double len3( const double c[] )$/;"	f
lenConnTable	include/inchi/ichi.h	/^    int        lenConnTable;$/;"	m	struct:tagINChI
lenCt	src/formats/libinchi/ichican2.c	/^    int       lenCt;        \/* used length *\/$/;"	m	struct:tagCTable	file:
lenNumH	include/inchi/ichicant.h	/^    int             lenNumH;    \/* used length *\/$/;"	m	struct:tagCanonData
lenNumH	src/formats/libinchi/ichican2.c	/^    int             lenNumH;    \/* used length *\/$/;"	m	struct:tagCTable	file:
lenNumHfixed	include/inchi/ichicant.h	/^    int              lenNumHfixed;       \/* used length *\/   $/;"	m	struct:tagCanonData
lenPos	src/formats/libinchi/ichican2.c	/^    int       lenPos;       \/* first unused element of nextCtblPos *\/$/;"	m	struct:tagCTable	file:
lenTautomer	include/inchi/ichi.h	/^    int        lenTautomer;$/;"	m	struct:tagINChI
len_alloc	src/formats/libinchi/ichiread.c	/^    int   len_alloc;$/;"	m	struct:tagLine	file:
len_alloc	src/formats/libinchi/ichiread.c	/^    int len_alloc;$/;"	m	struct:tagLinkedBonds	file:
len_alt_path	include/inchi/ichi_bns.h	/^    int len_alt_path;     \/* length of alt_path[] *\/$/;"	m	struct:BalancedNetworkStructure
len_c2at	include/inchi/ichirvrs.h	/^    short  len_c2at;$/;"	m	struct:tagStructCmpTwoFixedH
len_c2at	include/inchi/ichirvrs.h	/^    short len_c2at;$/;"	m	struct:tagStructCmpTwoMobileH
len_fptr	include/inchi/inpdef.h	/^    int        len_fptr;  \/* allocated length of fptr *\/$/;"	m	struct:tagStructFptrs
len_iso_exchg_atnos	include/inchi/ichicant.h	/^    int              len_iso_exchg_atnos;    \/* used length *\/$/;"	m	struct:tagCanonData
len_iso_exchg_atnos	src/formats/libinchi/ichican2.c	/^    int              len_iso_exchg_atnos;$/;"	m	struct:tagCTable	file:
len_iso_sort_key	include/inchi/ichicant.h	/^    int              len_iso_sort_key;    \/* used length *\/$/;"	m	struct:tagCanonData
len_iso_sort_key	src/formats/libinchi/ichican2.c	/^    int              len_iso_sort_key;    \/* used length *\/$/;"	m	struct:tagCTable	file:
len_iso_sort_key_Hfixed	include/inchi/ichicant.h	/^    int              len_iso_sort_key_Hfixed;    \/* used length *\/    $/;"	m	struct:tagCanonData
len_iso_sort_key_Hfixed	src/formats/libinchi/ichican2.c	/^    int              len_iso_sort_key_Hfixed;    \/* used length *\/    $/;"	m	struct:tagCTable	file:
len_iso_sort_keys	include/inchi/ichicant.h	/^    int              len_iso_sort_keys;$/;"	m	struct:tagFixHOrTautCanonNumbering
len_set	include/inchi/ichi_bns.h	/^    int len_set; \/* number of bitWords in each set *\/$/;"	m	struct:tagNodeSet
len_set	src/formats/libinchi/ichican2.c	/^    int len_set; \/* number of bitWords in each set *\/$/;"	m	struct:tagNodeSet	file:
length	include/libxml/entities.h	/^    int                   length;	\/* the content length *\/$/;"	m	struct:_xmlEntity
length	include/libxml/parser.h	/^    int length;                       \/* length if known *\/$/;"	m	struct:_xmlParserInput
length	include/libxml/parser.h	/^  unsigned long length;$/;"	m	struct:_xmlParserNodeInfoSeq
length	include/openbabel/math/vector3.h	/^    double length () const$/;"	f	class:OpenBabel::vector3
length	src/formats/ArrayList.h	/^   int length;$/;"	m	struct:_ArrayList
length	src/formats/smiley.h	/^      std::size_t length() const$/;"	f	class:Smiley::Exception
length_2	include/openbabel/math/vector3.h	/^    inline double length_2 () const$/;"	f	class:OpenBabel::vector3
levcfg	src/formats/dlpolyformat.cpp	/^    int levcfg,imcon;$/;"	m	class:OpenBabel::DlpolyInputReader	file:
level	include/libxml/xmlerror.h	/^    xmlErrorLevel level;\/* how consequent is the error *\/$/;"	m	struct:_xmlError
levels	src/confsearch.cpp	/^      std::vector<double> levels;$/;"	m	class:OpenBabel::OBDiversePoses	file:
levels	src/formats/MNAformat.cpp	/^			static unsigned levels;$/;"	m	class:OpenBabel::MNAFormat	file:
levels	src/formats/MNAformat.cpp	/^	unsigned MNAFormat::levels = 2; \/\/ default$/;"	m	class:OpenBabel::MNAFormat	file:
levels_option	src/formats/MNAformat.cpp	/^			static const char * const levels_option;$/;"	m	class:OpenBabel::MNAFormat	file:
levels_option	src/formats/MNAformat.cpp	/^	const char * const MNAFormat::levels_option = "L";$/;"	m	class:OpenBabel::MNAFormat	file:
lft	include/openbabel/parsmart.h	/^      union _AtomExpr *lft;$/;"	m	struct:OpenBabel::_AtomExpr::__anon51	typeref:union:OpenBabel::_AtomExpr::__anon51::_AtomExpr
lft	include/openbabel/parsmart.h	/^      union _BondExpr *lft;$/;"	m	struct:OpenBabel::_BondExpr::__anon53	typeref:union:OpenBabel::_BondExpr::__anon53::_BondExpr
lft	src/formats/smiley.h	/^        SmartsAtomExpr *lft;$/;"	m	struct:Smiley::SmartsAtomExpr::__anon80::__anon84
lft	src/formats/smiley.h	/^      SmartsBondExpr *lft;$/;"	m	struct:Smiley::SmartsBondExpr::__anon86
lightMetals	src/mcdlutil.cpp	/^  const int lightMetals[NLIGHT_METALS] = {$/;"	m	namespace:OpenBabel	file:
likeFe	src/mcdlutil.cpp	/^  const int likeFe[NLIKEFEATOMS] ={27,28};$/;"	m	namespace:OpenBabel	file:
line	include/libxml/parser.h	/^    int line;                         \/* Current line *\/$/;"	m	struct:_xmlParserInput
line	include/libxml/tree.h	/^    unsigned short   line;	\/* line number *\/$/;"	m	struct:_xmlNode
line	include/libxml/xmlerror.h	/^    int		line;	\/* the line number if available *\/$/;"	m	struct:_xmlError
line	src/formats/dlpolyformat.cpp	/^    std::string line; \/\/ For convenience so we can refer to lines from the iterator as 'line'$/;"	m	class:OpenBabel::DlpolyInputReader	file:
line	src/formats/gamessukformat.cpp	/^    string line; \/\/ For convenience so we can refer to lines from the iterator as 'line'$/;"	m	class:OpenBabel::GAMESSUKOutputFormat	file:
linear	src/forcefields/forcefieldmmff94.h	/^      bool linear;$/;"	m	class:OpenBabel::OBFFAngleCalculationMMFF94
linear	src/forcefields/forcefielduff.h	/^      bool linear;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
lineno	include/libxml/tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlID
lineno	include/libxml/tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlRef
linenumbers	include/libxml/parser.h	/^    int                linenumbers;   \/* set line number in element content *\/$/;"	m	struct:_xmlParserCtxt
link	src/formats/yasaraformat.cpp	/^  int32 link[4]; };$/;"	m	struct:OpenBabel::mobatom	file:
link_	include/openbabel/json/json.h	/^         ValueInternalLink *link_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
listMenu	src/GUI/OBGUI.h	/^  wxMenu* listMenu;$/;"	m	class:OBGUIFrame
listarSize	src/mcdlutil.cpp	/^  int TSimpleMolecule::listarSize() { \/\/ Probably should be removed and replaced with either nAtoms() or nBonds() as appropriate$/;"	f	class:OpenBabel::TSimpleMolecule
ln	src/formats/chemkinformat.cpp	/^  string ln;$/;"	m	class:OpenBabel::ChemKinFormat	file:
lo	include/openbabel/rand.h	/^    unsigned int lo;$/;"	m	struct:OpenBabel::__anon58
loadTemplates	src/mcdlutil.cpp	/^  bool TemplateRedraw::loadTemplates() {$/;"	f	class:OpenBabel::TemplateRedraw
loaded	include/libxml/debugXML.h	/^    int loaded;$/;"	m	struct:_xmlShellCtxt
loadsubset	include/libxml/parser.h	/^    int                loadsubset;    \/* should the external subset be loaded *\/$/;"	m	struct:_xmlParserCtxt
locMax	include/libxml/xpointer.h	/^    int locMax;		      \/* size of the array as allocated *\/$/;"	m	struct:_xmlLocationSet
locNr	include/libxml/xpointer.h	/^    int locNr;		      \/* number of locations in the set *\/$/;"	m	struct:_xmlLocationSet
locTab	include/libxml/xpointer.h	/^    xmlXPathObjectPtr *locTab;\/* array of locations *\/$/;"	m	struct:_xmlLocationSet
local	include/openbabel/base.h	/^    local                \/\/!< Not for routine external use (e.g. in sdf or cml properties)$/;"	e	enum:OpenBabel::DataOrigin
local	src/chains.cpp	/^    BinOpStruct local;    \/\/!< Local - test whether the atom has been visited$/;"	m	union:OpenBabel::_ByteCode	file:
local_opt	src/conformersearch.cpp	/^  OBConformerSearch::local_opt ()$/;"	f	class:OpenBabel::OBConformerSearch
local_opt_rate	include/openbabel/conformersearch.h	/^      int local_opt_rate;       \/\/!< Perform a random local optimization every local_opt_rate generations. Disabled if set to $/;"	m	class:OpenBabel::OBConformerSearch
longRange	include/libxml/chvalid.h	/^    xmlChLRangePtr	longRange;$/;"	m	struct:_xmlChRangeGroup
longest_inp_cur_data	src/formats/libinchi/runichi.c	/^    INP_ATOM_DATA  longest_inp_cur_data;$/;"	m	struct:tagRenumbData	file:
lookup_cat	src/formats/mmcifformat.cpp	/^ CIFTagID::CIFCatName CIFLexer::lookup_cat(CIFTagID::CIFDataName tagid)$/;"	f	class:OpenBabel::CIFLexer
lookup_tag	src/formats/mmcifformat.cpp	/^ CIFTagID::CIFDataName CIFLexer::lookup_tag(const string & tag_name)$/;"	f	class:OpenBabel::CIFLexer
low	include/libxml/chvalid.h	/^    unsigned int	low;$/;"	m	struct:_xmlChLRange
low	include/libxml/chvalid.h	/^    unsigned short	low;$/;"	m	struct:_xmlChSRange
lowerit	src/formats/PQSformat.cpp	/^  void lowerit(char *s)$/;"	f	namespace:OpenBabel
lt	src/formats/cifformat.cpp	/^  bool ci_char_traits::lt( char c1, char c2 )$/;"	f	class:OpenBabel::ci_char_traits
m	include/openbabel/rand.h	/^    unsigned int m,a,c;$/;"	m	class:OpenBabel::OBRandom
mCharge	src/formats/cifformat.cpp	/^      float mCharge;$/;"	m	struct:OpenBabel::CIFData::CIFAtom	file:
mCoordCart	src/formats/cifformat.cpp	/^      std::vector<float> mCoordCart;$/;"	m	struct:OpenBabel::CIFData::CIFAtom	file:
mCoordFrac	src/formats/cifformat.cpp	/^      std::vector<float> mCoordFrac;$/;"	m	struct:OpenBabel::CIFData::CIFAtom	file:
mDataBlockName	src/formats/cifformat.cpp	/^    std::string mDataBlockName;$/;"	m	class:OpenBabel::CIFData	file:
mDistance	src/formats/cifformat.cpp	/^      float mDistance;$/;"	m	struct:OpenBabel::CIFData::CIFBond	file:
mFormula	src/formats/cifformat.cpp	/^    std::string mFormula;$/;"	m	class:OpenBabel::CIFData	file:
mLabel	src/formats/cifformat.cpp	/^      std::string mLabel;$/;"	m	struct:OpenBabel::CIFData::CIFAtom	file:
mLabel1	src/formats/cifformat.cpp	/^      std::string mLabel1,mLabel2;$/;"	m	struct:OpenBabel::CIFData::CIFBond	file:
mLabel2	src/formats/cifformat.cpp	/^      std::string mLabel1,mLabel2;$/;"	m	struct:OpenBabel::CIFData::CIFBond	file:
mName	src/formats/cifformat.cpp	/^    std::string mName;$/;"	m	class:OpenBabel::CIFData	file:
mOccupancy	src/formats/cifformat.cpp	/^      float mOccupancy;$/;"	m	struct:OpenBabel::CIFData::CIFAtom	file:
mOrthMatrix	src/formats/cifformat.cpp	/^    float mOrthMatrix[3][3];$/;"	m	class:OpenBabel::CIFData	file:
mOrthMatrixInvert	src/formats/cifformat.cpp	/^    float mOrthMatrixInvert[3][3];$/;"	m	class:OpenBabel::CIFData	file:
mSpaceGroup	src/formats/cifformat.cpp	/^    const SpaceGroup *mSpaceGroup;$/;"	m	class:OpenBabel::CIFData	file:
mSpacegroupHermannMauguin	src/formats/cifformat.cpp	/^    std::string mSpacegroupHermannMauguin;$/;"	m	class:OpenBabel::CIFData	file:
mSpacegroupNumberIT	src/formats/cifformat.cpp	/^    unsigned int mSpacegroupNumberIT;$/;"	m	class:OpenBabel::CIFData	file:
mSpacegroupSymbolHall	src/formats/cifformat.cpp	/^    std::string mSpacegroupSymbolHall;$/;"	m	class:OpenBabel::CIFData	file:
mSymbol	src/formats/cifformat.cpp	/^      std::string mSymbol;$/;"	m	struct:OpenBabel::CIFData::CIFAtom	file:
m_ActiveFormats	src/GUI/OBGUI.h	/^  ActiveFormats m_ActiveFormats;$/;"	m	class:OBGUIFrame
m_DisplayCmd	src/GUI/OBGUI.h	/^  wxString    m_DisplayFile, m_DisplayCmd;$/;"	m	class:OBGUIFrame
m_DisplayFile	src/GUI/OBGUI.h	/^  wxString    m_DisplayFile, m_DisplayCmd;$/;"	m	class:OBGUIFrame
m_Fillcolor	include/openbabel/depict/svgpainter.h	/^      OBColor m_Fillcolor;$/;"	m	class:OpenBabel::SVGPainter
m_Gradientcolor	include/openbabel/depict/svgpainter.h	/^      ColorGradient m_Gradientcolor;$/;"	m	class:OpenBabel::SVGPainter
m_Gradients	include/openbabel/depict/svgpainter.h	/^      std::set<ColorGradient> *m_Gradients;$/;"	m	class:OpenBabel::SVGPainter
m_HM	include/openbabel/math/spacegroup.h	/^        std::string m_HM;$/;"	m	class:OpenBabel::SpaceGroup
m_Hall	include/openbabel/math/spacegroup.h	/^        std::string m_Hall;$/;"	m	class:OpenBabel::SpaceGroup
m_InFileBasePath	src/GUI/OBGUI.h	/^  wxString    m_InFileBasePath;$/;"	m	class:OBGUIFrame
m_IsFirstInput	include/openbabel/obconversion.h	/^      bool			m_IsFirstInput;$/;"	m	class:OpenBabel::OBConversion
m_IsLast	include/openbabel/obconversion.h	/^      bool		  m_IsLast;$/;"	m	class:OpenBabel::OBConversion
m_OrigBondcolor	include/openbabel/depict/svgpainter.h	/^      OBColor m_OrigBondcolor;$/;"	m	class:OpenBabel::SVGPainter
m_OriginAlternative	include/openbabel/math/spacegroup.h	/^        unsigned int m_OriginAlternative;$/;"	m	class:OpenBabel::SpaceGroup
m_PenWidth	include/openbabel/depict/svgpainter.h	/^      double m_PenWidth;$/;"	m	class:OpenBabel::SVGPainter
m_Pencolor	include/openbabel/depict/svgpainter.h	/^      OBColor m_Pencolor;$/;"	m	class:OpenBabel::SVGPainter
m_aromatic	include/openbabel/query.h	/^      bool m_aromatic;$/;"	m	class:OpenBabel::OBQueryBond
m_aromatic	src/formats/smiley.h	/^      bool m_aromatic; \/\/!< is atom aromatic$/;"	m	class:Smiley::Parser
m_aspect	include/openbabel/depict/asciipainter.h	/^      double m_aspect; \/\/ Ratio of height:width for a single character$/;"	m	class:OpenBabel::ASCIIPainter
m_atomicNum	include/openbabel/query.h	/^      unsigned int m_atomicNum;$/;"	m	class:OpenBabel::OBQueryAtom
m_atoms	include/openbabel/query.h	/^      std::vector<OBQueryAtom*> m_atoms;$/;"	m	class:OpenBabel::OBQuery
m_begin	include/openbabel/query.h	/^      OBQueryAtom *m_begin, *m_end;$/;"	m	class:OpenBabel::OBQueryBond
m_bondOrder	src/formats/smiley.h	/^      int m_bondOrder; \/\/!< last bond's order (1, 2, 3, 4 and 5 for aromatic$/;"	m	class:Smiley::Parser
m_bondcolor	include/openbabel/depict/cairopainter.h	/^      std::string m_fillcolor, m_bondcolor;$/;"	m	class:OpenBabel::CairoPainter
m_bonds	include/openbabel/query.h	/^      std::vector<OBQueryBond*> m_bonds;$/;"	m	class:OpenBabel::OBQuery
m_bonds	include/openbabel/query.h	/^      std::vector<OBQueryBond*> m_bonds;$/;"	m	class:OpenBabel::OBQueryAtom
m_branches	src/formats/smiley.h	/^      std::vector<BranchInfo> m_branches; \/\/!< used as stack$/;"	m	class:Smiley::Parser
m_buf	include/openbabel/depict/asciipainter.h	/^      std::vector<std::vector<char> > m_buf;$/;"	m	class:OpenBabel::ASCIIPainter
m_cairo	include/openbabel/depict/cairopainter.h	/^      cairo_t *m_cairo;$/;"	m	class:OpenBabel::CairoPainter
m_callback	src/formats/smiley.h	/^      Callback &m_callback; \/\/!< callback for handling events$/;"	m	class:Smiley::Parser
m_canonical	src/tautomer.cpp	/^    bool m_canonical, m_foundLeafNode;$/;"	m	struct:OpenBabel::TautomerImpl	file:
m_cfg	include/openbabel/stereo/cistrans.h	/^    Config m_cfg; \/\/!< internal configuration$/;"	m	class:OpenBabel::OBCisTransStereo
m_cfg	include/openbabel/stereo/squareplanar.h	/^    Config m_cfg; \/\/!< internal configuration$/;"	m	class:OpenBabel::OBSquarePlanarStereo
m_cfg	include/openbabel/stereo/tetrahedral.h	/^    Config m_cfg; \/\/!< internal configuration$/;"	m	class:OpenBabel::OBTetrahedralStereo
m_charge	src/formats/smiley.h	/^      int m_charge; \/\/!< atom charge$/;"	m	class:Smiley::Parser
m_check_hydrogens	include/openbabel/conformersearch.h	/^      bool m_check_hydrogens;		\/\/!< Check hydrOgens if true $/;"	m	class:OpenBabel::OBStericConformerFilter
m_chiral	src/formats/smiley.h	/^      int m_chiral; \/\/!< atom chirality$/;"	m	class:Smiley::Parser
m_chiralInfo	src/formats/smiley.h	/^      std::vector<ChiralInfo> m_chiralInfo; \/\/!< atom index -> ChiralInfo$/;"	m	class:Smiley::Parser
m_cistransMap	include/openbabel/stereo/stereo.h	/^      std::map<unsigned long, OBCisTransStereo*> m_cistransMap;$/;"	m	class:OpenBabel::OBStereoFacade
m_class	src/formats/smiley.h	/^      int m_class; \/\/!< atom class$/;"	m	class:Smiley::Parser
m_convergence	include/openbabel/conformersearch.h	/^      int m_convergence; \/\/!< Number of generations that remain unchanged before quiting$/;"	m	class:OpenBabel::OBConformerSearch
m_cropping	include/openbabel/depict/cairopainter.h	/^      bool m_transparent, m_cropping;$/;"	m	class:OpenBabel::CairoPainter
m_cutoff	include/openbabel/conformersearch.h	/^      double m_cutoff; \/\/!< Internal cutoff (used as a squared distance)$/;"	m	class:OpenBabel::OBStericConformerFilter
m_element	src/formats/smiley.h	/^      int m_element; \/\/!< atom element$/;"	m	class:Smiley::Parser
m_end	include/openbabel/query.h	/^      OBQueryAtom *m_begin, *m_end;$/;"	m	class:OpenBabel::OBQueryBond
m_errorCode	src/formats/smiley.h	/^      ErrorCode m_errorCode;$/;"	m	class:Smiley::Exception
m_exceptions	src/formats/smiley.h	/^      int m_exceptions;$/;"	m	class:Smiley::Parser
m_explicitBond	src/formats/smiley.h	/^      bool m_explicitBond; \/\/!< is last bond explicit$/;"	m	class:Smiley::Parser
m_fillcolor	include/openbabel/depict/cairopainter.h	/^      std::string m_fillcolor, m_bondcolor;$/;"	m	class:OpenBabel::CairoPainter
m_filter	include/openbabel/conformersearch.h	/^      OBConformerFilter *m_filter;$/;"	m	class:OpenBabel::OBConformerSearch
m_filters	include/openbabel/conformersearch.h	/^      std::vector<OBConformerFilter*> m_filters;$/;"	m	class:OpenBabel::OBConformerFilters
m_fixedBonds	include/openbabel/conformersearch.h	/^      OBBitVec      m_fixedBonds; \/\/!< Bonds that are fixed$/;"	m	class:OpenBabel::OBConformerSearch
m_fontFamily	include/openbabel/depict/svgpainter.h	/^      std::string m_fontFamily;$/;"	m	class:OpenBabel::SVGPainter
m_fontPointSize	include/openbabel/depict/cairopainter.h	/^      int m_fontPointSize;$/;"	m	class:OpenBabel::CairoPainter
m_fontPointSize	include/openbabel/depict/svgpainter.h	/^      int m_fontPointSize;$/;"	m	class:OpenBabel::SVGPainter
m_formalCharges	include/openbabel/chargemodel.h	/^      std::vector<double> m_formalCharges;$/;"	m	class:OpenBabel::OBChargeModel
m_foundLeafNode	src/tautomer.cpp	/^    bool m_canonical, m_foundLeafNode;$/;"	m	struct:OpenBabel::TautomerImpl	file:
m_func	include/OB-BGL/mol_graph.h	/^    functor m_func;$/;"	m	struct:boost::functor_caller
m_hCount	src/formats/smiley.h	/^      int m_hCount; \/\/!< atom hydrogran count$/;"	m	class:Smiley::Parser
m_height	include/openbabel/depict/asciipainter.h	/^      int m_width, m_height; \/\/ Width and height of output canvas in characters$/;"	m	class:OpenBabel::ASCIIPainter
m_height	include/openbabel/depict/cairopainter.h	/^      int m_height;$/;"	m	class:OpenBabel::CairoPainter
m_height	include/openbabel/depict/svgpainter.h	/^      double m_width, m_height;$/;"	m	class:OpenBabel::SVGPainter
m_id	include/openbabel/math/spacegroup.h	/^        unsigned int m_id;$/;"	m	class:OpenBabel::SpaceGroup
m_index	include/openbabel/depict/cairopainter.h	/^      int m_index;        \/\/ Index of current molecule in a table$/;"	m	class:OpenBabel::CairoPainter
m_index	include/openbabel/query.h	/^      unsigned int m_index;$/;"	m	class:OpenBabel::OBQueryAtom
m_index	include/openbabel/query.h	/^      unsigned int m_index;$/;"	m	class:OpenBabel::OBQueryBond
m_index	src/formats/smiley.h	/^      int m_index; \/\/!< current atom index$/;"	m	class:Smiley::Parser
m_init	include/openbabel/stereo/stereo.h	/^      bool m_init;$/;"	m	class:OpenBabel::OBStereoFacade
m_isAromatic	include/openbabel/query.h	/^      bool m_isInRing, m_isAromatic;$/;"	m	class:OpenBabel::OBQueryAtom
m_isDown	src/formats/smiley.h	/^      bool m_isDown; \/\/!< is last bond '\\'$/;"	m	class:Smiley::Parser
m_isFillcolor	include/openbabel/depict/svgpainter.h	/^      bool m_isFillcolor;$/;"	m	class:OpenBabel::SVGPainter
m_isInRing	include/openbabel/query.h	/^      bool m_isInRing, m_isAromatic;$/;"	m	class:OpenBabel::OBQueryAtom
m_isUp	src/formats/smiley.h	/^      bool m_isUp; \/\/!< is last bond '\/'$/;"	m	class:Smiley::Parser
m_isotope	src/formats/smiley.h	/^      int m_isotope; \/\/!< atom isotope$/;"	m	class:Smiley::Parser
m_length	src/formats/smiley.h	/^      std::size_t m_length;$/;"	m	class:Smiley::Exception
m_logstream	include/openbabel/conformersearch.h	/^      std::ostream *m_logstream;	\/\/!< A pointer to a log stream (NULL means no loogging)$/;"	m	class:OpenBabel::OBConformerSearch
m_maps	src/isomorphism.cpp	/^      OBIsomorphismMapper::Mappings &m_maps;$/;"	m	class:OpenBabel::MapAllFunctor	file:
m_maxMemory	src/isomorphism.cpp	/^      std::size_t m_memory, m_maxMemory;$/;"	m	class:OpenBabel::MapAllFunctor	file:
m_memory	src/isomorphism.cpp	/^      std::size_t m_memory, m_maxMemory;$/;"	m	class:OpenBabel::MapAllFunctor	file:
m_mode	src/formats/smiley.h	/^      Mode m_mode; \/\/ SMILES\/SMARTS mode$/;"	m	class:Smiley::Parser
m_mol	include/openbabel/conformersearch.h	/^      OBMol         m_mol; \/\/!< The molecule with starting coordinates$/;"	m	class:OpenBabel::OBConformerSearch
m_mol	include/openbabel/stereo/stereo.h	/^      OBMol *m_mol; \/\/!< The parent molecule.$/;"	m	class:OpenBabel::OBStereoBase
m_mol	include/openbabel/stereo/stereo.h	/^      OBMol *m_mol;$/;"	m	class:OpenBabel::OBStereoFacade
m_mutability	include/openbabel/conformersearch.h	/^      int m_mutability; \/\/!< The mutability for generating the next generation$/;"	m	class:OpenBabel::OBConformerSearch
m_nbrs	include/openbabel/query.h	/^      std::vector<OBQueryAtom*> m_nbrs;$/;"	m	class:OpenBabel::OBQueryAtom
m_ncols	include/openbabel/depict/cairopainter.h	/^      int m_ncols, m_nrows; \/\/ number of rows and columns$/;"	m	class:OpenBabel::CairoPainter
m_nrows	include/openbabel/depict/cairopainter.h	/^      int m_ncols, m_nrows; \/\/ number of rows and columns$/;"	m	class:OpenBabel::CairoPainter
m_numChildren	include/openbabel/conformersearch.h	/^      int m_numChildren; \/\/!< The number of children generated each generation$/;"	m	class:OpenBabel::OBConformerSearch
m_numConformers	include/openbabel/conformersearch.h	/^      unsigned int m_numConformers; \/\/!< The desired number of conformers. This is also the population size.$/;"	m	class:OpenBabel::OBConformerSearch
m_ofs	include/openbabel/depict/commandpainter.h	/^      std::ostream& m_ofs;$/;"	m	class:OpenBabel::CommandPainter
m_ofs	include/openbabel/depict/svgpainter.h	/^      std::ostream& m_ofs;$/;"	m	class:OpenBabel::SVGPainter
m_oldprec	include/openbabel/depict/commandpainter.h	/^      std::streamsize m_oldprec;$/;"	m	class:OpenBabel::CommandPainter
m_order	include/openbabel/query.h	/^      unsigned int m_order;$/;"	m	class:OpenBabel::OBQueryBond
m_output	include/OB-BGL/mol_graph.h	/^    output_iterator m_output;$/;"	m	struct:boost::recorder
m_pAPIOptsPanel	src/GUI/OBGUI.h	/^  DynOptionswx* m_pAPIOptsPanel;$/;"	m	class:OBGUIFrame
m_pConvOptsPanel	src/GUI/OBGUI.h	/^  DynOptionswx* m_pConvOptsPanel;$/;"	m	class:OBGUIFrame
m_pConvert	src/GUI/OBGUI.h	/^  wxButton*   m_pConvert;$/;"	m	class:OBGUIFrame
m_pDisplay	src/GUI/OBGUI.h	/^  wxCheckBox* m_pDisplay;$/;"	m	class:OBGUIFrame
m_pForceInFormat	src/GUI/OBGUI.h	/^  wxCheckBox* m_pForceInFormat;$/;"	m	class:OBGUIFrame
m_pGenOptsPanel	src/GUI/OBGUI.h	/^  DynOptionswx* m_pGenOptsPanel;$/;"	m	class:OBGUIFrame
m_pInFilename	src/GUI/OBGUI.h	/^  CFilenames* m_pInFilename;$/;"	m	class:OBGUIFrame
m_pInFiles	src/GUI/OBGUI.h	/^  wxButton*   m_pInFiles;$/;"	m	class:OBGUIFrame
m_pInFormat	src/GUI/OBGUI.h	/^  wxChoice*   m_pInFormat;$/;"	m	class:OBGUIFrame
m_pInInfo	src/GUI/OBGUI.h	/^  wxButton*   m_pInInfo;$/;"	m	class:OBGUIFrame
m_pInOptsPanel	src/GUI/OBGUI.h	/^  DynOptionswx* m_pInOptsPanel;$/;"	m	class:OBGUIFrame
m_pInPath	src/GUI/OBGUI.h	/^  wxStaticText* m_pInPath;$/;"	m	class:OBGUIFrame
m_pInText	src/GUI/OBGUI.h	/^  wxTextCtrl* m_pInText;$/;"	m	class:OBGUIFrame
m_pInputHere	src/GUI/OBGUI.h	/^  wxCheckBox* m_pInputHere;$/;"	m	class:OBGUIFrame
m_pMessages	src/GUI/OBGUI.h	/^  wxTextCtrl* m_pMessages;$/;"	m	class:OBGUIFrame
m_pNoOutFile	src/GUI/OBGUI.h	/^  wxCheckBox* m_pNoOutFile;$/;"	m	class:OBGUIFrame
m_pOptsWindow	src/GUI/OBGUI.h	/^  wxScrolledWindow* m_pOptsWindow;$/;"	m	class:OBGUIFrame
m_pOutFilename	src/GUI/OBGUI.h	/^  wxTextCtrl* m_pOutFilename;$/;"	m	class:OBGUIFrame
m_pOutFiles	src/GUI/OBGUI.h	/^  wxButton*   m_pOutFiles;$/;"	m	class:OBGUIFrame
m_pOutFormat	src/GUI/OBGUI.h	/^  wxChoice*   m_pOutFormat;$/;"	m	class:OBGUIFrame
m_pOutInfo	src/GUI/OBGUI.h	/^  wxButton*   m_pOutInfo;$/;"	m	class:OBGUIFrame
m_pOutOptsPanel	src/GUI/OBGUI.h	/^  DynOptionswx* m_pOutOptsPanel;$/;"	m	class:OBGUIFrame
m_pOutText	src/GUI/OBGUI.h	/^  wxTextCtrl* m_pOutText;$/;"	m	class:OBGUIFrame
m_pParent	src/GUI/OBGUI.h	/^  OBGUIFrame* m_pParent;$/;"	m	class:DnD
m_pSplitter	src/GUI/OBGUI.h	/^  wxSplitterWindow* m_pSplitter;$/;"	m	class:OBGUIFrame
m_partialCharges	include/openbabel/chargemodel.h	/^      std::vector<double> m_partialCharges;$/;"	m	class:OpenBabel::OBChargeModel
m_pen_width	include/openbabel/depict/cairopainter.h	/^      double m_pen_width;$/;"	m	class:OpenBabel::CairoPainter
m_pen_width	include/openbabel/depict/commandpainter.h	/^      double m_pen_width;$/;"	m	class:OpenBabel::CommandPainter
m_perceive	include/openbabel/stereo/stereo.h	/^      bool m_perceive;$/;"	m	class:OpenBabel::OBStereoFacade
m_pfixedFont	src/GUI/OBGUI.h	/^  wxFont* m_pfixedFont;$/;"	m	class:OBGUIFrame
m_pos	src/formats/smiley.h	/^      std::size_t m_pos; \/\/!< current position in m_str$/;"	m	class:Smiley::Parser
m_pos	src/formats/smiley.h	/^      std::size_t m_pos;$/;"	m	class:Smiley::Exception
m_prev	src/formats/smiley.h	/^      int m_prev; \/\/ !< previous atom index (-1 for none)$/;"	m	class:Smiley::Parser
m_query	include/openbabel/isomorphism.h	/^      OBQuery *m_query; \/\/!< The search query.$/;"	m	class:OpenBabel::OBIsomorphismMapper
m_ringBonds	src/formats/smiley.h	/^      std::map<int, std::vector<RingBondInfo> > m_ringBonds; \/\/!< atom index -> RingBondInfo$/;"	m	class:Smiley::Parser
m_rotorKeys	include/openbabel/conformersearch.h	/^      RotorKeys     m_rotorKeys; \/\/!< The current population$/;"	m	class:OpenBabel::OBConformerSearch
m_rotorList	include/openbabel/conformersearch.h	/^      OBRotorList   m_rotorList; \/\/!< The OBRotorList for the molecule$/;"	m	class:OpenBabel::OBConformerSearch
m_scale	include/openbabel/depict/asciipainter.h	/^      double m_scale; \/\/ Conversion from Depiction coords to m_buf coords$/;"	m	class:OpenBabel::ASCIIPainter
m_score	include/openbabel/conformersearch.h	/^      OBConformerScore  *m_score;$/;"	m	class:OpenBabel::OBConformerSearch
m_specified	include/openbabel/stereo/stereo.h	/^      bool m_specified; \/\/!< True if the stereochemistry is specified, false if unknown\/unspecified.$/;"	m	class:OpenBabel::OBStereoBase
m_squarePlanarMap	include/openbabel/stereo/stereo.h	/^      std::map<unsigned long, OBSquarePlanarStereo*> m_squarePlanarMap;$/;"	m	class:OpenBabel::OBStereoFacade
m_startTime	src/isomorphism.cpp	/^    time_t m_startTime;$/;"	m	class:OpenBabel::VF2Mapper	file:
m_str	src/formats/smiley.h	/^      std::string m_str; \/\/!< the SMILES\/SMARTS string$/;"	m	class:Smiley::Parser
m_surface	include/openbabel/depict/cairopainter.h	/^      cairo_surface_t *m_surface;$/;"	m	class:OpenBabel::CairoPainter
m_symbolOnBall	src/depict/depict.cpp	/^        bool m_symbolOnBall;$/;"	m	class:OpenBabel::OBDepictPrivateBallAndStick	file:
m_tetrahedralMap	include/openbabel/stereo/stereo.h	/^      std::map<unsigned long, OBTetrahedralStereo*> m_tetrahedralMap;$/;"	m	class:OpenBabel::OBStereoFacade
m_timeout	include/openbabel/isomorphism.h	/^      unsigned int m_timeout; \/\/!< The timeout in seconds$/;"	m	class:OpenBabel::OBIsomorphismMapper
m_title	include/openbabel/depict/cairopainter.h	/^      std::string m_title;$/;"	m	class:OpenBabel::CairoPainter
m_transforms	include/openbabel/math/spacegroup.h	/^        std::list<transform3d*> m_transforms;$/;"	m	class:OpenBabel::SpaceGroup
m_transparent	include/openbabel/depict/cairopainter.h	/^      bool m_transparent, m_cropping;$/;"	m	class:OpenBabel::CairoPainter
m_type	src/formats/smiley.h	/^      Type m_type;$/;"	m	class:Smiley::Exception
m_vdw_factor	include/openbabel/conformersearch.h	/^      double m_vdw_factor;		\/\/!< Factor applied to Van der Waals distance check$/;"	m	class:OpenBabel::OBStericConformerFilter
m_what	src/formats/smiley.h	/^      std::string m_what;$/;"	m	class:Smiley::Exception
m_width	include/openbabel/depict/asciipainter.h	/^      int m_width, m_height; \/\/ Width and height of output canvas in characters$/;"	m	class:OpenBabel::ASCIIPainter
m_width	include/openbabel/depict/cairopainter.h	/^      int m_width;$/;"	m	class:OpenBabel::CairoPainter
m_width	include/openbabel/depict/svgpainter.h	/^      double m_width, m_height;$/;"	m	class:OpenBabel::SVGPainter
m_withViewBox	include/openbabel/depict/svgpainter.h	/^      bool m_withViewBox;$/;"	m	class:OpenBabel::SVGPainter
magicints	src/formats/xtcformat.cpp	/^    static int magicints[]; \/\/ defined below$/;"	m	class:OpenBabel::XTCFormat	file:
magicints	src/formats/xtcformat.cpp	/^  int XTCFormat::magicints[] = {$/;"	m	class:OpenBabel::XTCFormat	file:
main	include/OB-BGL/example.cpp	/^int main(int argc,char **argv)$/;"	f
make	src/formats/json/jsoncpp.cpp	/^Path::make( Value &root ) const$/;"	f	class:Json::Path
makeAssignment	src/mcdlutil.cpp	/^  static void makeAssignment(const std::vector<int> iA1, const std::vector<int> iA2, const std::vector<int> nH,$/;"	f	namespace:OpenBabel
makeEquivalentList	src/mcdlutil.cpp	/^  void TSimpleMolecule::makeEquivalentList(std::vector<int>& equivalenceList, bool isTopologyOnly) {$/;"	f	class:OpenBabel::TSimpleMolecule
makeFragment	src/mcdlutil.cpp	/^  bool TSimpleMolecule::makeFragment(std::vector<int>& list, int aT, int aTEx) {$/;"	f	class:OpenBabel::TSimpleMolecule
makePath	src/formats/json/jsoncpp.cpp	/^Path::makePath( const std::string &path,$/;"	f	class:Json::Path
make_a_copy_of_t_group_info	src/formats/libinchi/ichitaut.c	/^int make_a_copy_of_t_group_info( T_GROUP_INFO *t_group_info, T_GROUP_INFO *t_group_info_orig )$/;"	f
make_gzip	src/zipstream.h	/^    void                              make_gzip()$/;"	f	class:zlib_stream::basic_zip_ostream
make_iso_sort_key	src/formats/libinchi/ichiisot.c	/^AT_ISO_SORT_KEY make_iso_sort_key( int iso_atw_diff, int num_1H, int num_2H, int num_3H)$/;"	f
make_norm_atoms_from_inp_atoms	src/formats/libinchi/inchi_dll_a2.c	/^void make_norm_atoms_from_inp_atoms(INCHIGEN_DATA *gendata, INCHIGEN_CONTROL *genctl)$/;"	f
make_single_cut	src/formats/libinchi/ichinorm.c	/^int make_single_cut( inp_ATOM *at, DERIV_AT *da, int iat, int icut )$/;"	f
manganeze	src/mcdlutil.cpp	/^  const int manganeze[NMANGANESEATOMS] ={25,43,75};$/;"	m	namespace:OpenBabel	file:
mapRotorEnergy	include/openbabel/conformersearch.h	/^  typedef std::map<std::vector<int>,double> mapRotorEnergy;$/;"	t	namespace:OpenBabel
map_	include/openbabel/json/json.h	/^         ObjectValues *map_;$/;"	m	union:Json::Value::ValueHolder
map_	include/openbabel/json/json.h	/^         ValueInternalMap *map_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
map_	include/openbabel/json/json.h	/^         ValueInternalMap *map_;$/;"	m	union:Json::Value::ValueHolder
map_	include/openbabel/json/json.h	/^         ValueInternalMap::IteratorState map_;$/;"	m	union:Json::ValueIteratorBase::__anon47
map_an_atom2	src/formats/libinchi/ichimap2.c	/^int map_an_atom2( int num_atoms, int num_max, int at_no1\/*from*\/, int at_no2\/*to*\/,$/;"	f
map_sphere	src/formats/stlformat.cpp	/^  void map_sphere ( vector<Triangle> &triangles, vector3 origin, double r, uint16_t col )$/;"	f	namespace:OpenBabel
map_stereo_atoms4	src/formats/libinchi/ichimap4.c	/^int map_stereo_atoms4 ( $/;"	f
map_stereo_bonds4	src/formats/libinchi/ichimap4.c	/^int map_stereo_bonds4 ( $/;"	f
mapping	src/isomorphism.cpp	/^        std::vector<OBAtom*> mapping;$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
mark_alt_bonds_and_taut_groups	src/formats/libinchi/ichi_bns.c	/^int mark_alt_bonds_and_taut_groups ( inp_ATOM *at, inp_ATOM *at_fixed_bonds_out, int num_atoms,$/;"	f
mark_arom_bonds	src/formats/libinchi/ichinorm.c	/^int mark_arom_bonds( inp_ATOM *at, int num_atoms )$/;"	f
mark_at_type	src/formats/libinchi/ichi_bns.c	/^int mark_at_type( inp_ATOM *atom, int num_atoms, int nAtTypeTotals[] )$/;"	f
mark_atoms_ap	src/formats/libinchi/ichinorm.c	/^int mark_atoms_ap( inp_ATOM *at, AT_NUMB start, R2C_ATPAIR *ap, int num_ap, int num, AT_NUMB cFlags )$/;"	f
mark_atoms_cFlags	src/formats/libinchi/ichinorm.c	/^int mark_atoms_cFlags( inp_ATOM *at, int start, int num, char cFlags )$/;"	f
mark_atoms_deriv	src/formats/libinchi/ichinorm.c	/^int mark_atoms_deriv( inp_ATOM *at, DERIV_AT *da, int start, int num, char cFlags, int *pbFound )$/;"	f
marked	include/inchi/extr_ct.h	/^    S_CHAR marked;$/;"	m	struct:tagAtom
maskH	src/formats/libinchi/ichi_bns.c	/^    int maskH; $/;"	m	struct:tagProtonRemovalMaskAndType	file:
maskNeg	src/formats/libinchi/ichi_bns.c	/^    int maskNeg; $/;"	m	struct:tagProtonRemovalMaskAndType	file:
maskPos	src/formats/libinchi/ichi_bns.c	/^    int maskPos; $/;"	m	struct:tagProtonRemovalMaskAndType	file:
match	src/formats/json/jsoncpp.cpp	/^Reader::match( Location pattern, $/;"	f	class:Json::Reader
match	src/parsmart.cpp	/^  bool OBSmartsMatcher::match(OBMol &mol, const Pattern *pat,$/;"	f	class:OpenBabel::OBSmartsMatcher
matchCandidate	src/isomorphism.cpp	/^      bool matchCandidate(State &state, OBQueryAtom *queryAtom, OBAtom *queriedAtom)$/;"	f	class:OpenBabel::VF2Mapper
matchFiles	src/dlhandler_unix.cpp	/^int matchFiles (SCANDIR_CONST struct dirent *entry_p)$/;"	f
matrix3x3	include/openbabel/math/matrix3x3.h	/^      matrix3x3(double d[3][3])$/;"	f	class:OpenBabel::matrix3x3
matrix3x3	include/openbabel/math/matrix3x3.h	/^      matrix3x3(double s)$/;"	f	class:OpenBabel::matrix3x3
matrix3x3	include/openbabel/math/matrix3x3.h	/^      matrix3x3(vector3 row1,vector3 row2,vector3 row3)$/;"	f	class:OpenBabel::matrix3x3
matrix3x3	include/openbabel/math/matrix3x3.h	/^      matrix3x3(void)$/;"	f	class:OpenBabel::matrix3x3
matrix3x3	include/openbabel/math/matrix3x3.h	/^  class OBAPI matrix3x3$/;"	c	namespace:OpenBabel
maxBoxSize	src/distgeom.cpp	/^    double maxBoxSize;$/;"	m	class:OpenBabel::DistanceGeometryPrivate	file:
maxInt	include/openbabel/json/json.h	/^      static const Int maxInt;$/;"	m	class:Json::Value
maxInt	src/formats/json/jsoncpp.cpp	/^const Int Value::maxInt = Int( UInt(-1)\/2 );$/;"	m	class:Json::Value	file:
maxInt64	include/openbabel/json/json.h	/^      static const Int64 maxInt64;$/;"	m	class:Json::Value
maxInt64	src/formats/json/jsoncpp.cpp	/^const Int64 Value::maxInt64 = Int64( UInt64(-1)\/2 );$/;"	m	class:Json::Value	file:
maxLargestInt	include/openbabel/json/json.h	/^      static const LargestInt maxLargestInt;$/;"	m	class:Json::Value
maxLargestInt	src/formats/json/jsoncpp.cpp	/^const LargestInt Value::maxLargestInt = LargestInt( LargestUInt(-1)\/2 );$/;"	m	class:Json::Value	file:
maxLargestUInt	include/openbabel/json/json.h	/^      static const LargestUInt maxLargestUInt;$/;"	m	class:Json::Value
maxLargestUInt	src/formats/json/jsoncpp.cpp	/^const LargestUInt Value::maxLargestUInt = LargestUInt(-1);$/;"	m	class:Json::Value	file:
maxOccurs	include/libxml/schemasInternals.h	/^    int maxOccurs;$/;"	m	struct:_xmlSchemaElement
maxOccurs	include/libxml/schemasInternals.h	/^    int maxOccurs;$/;"	m	struct:_xmlSchemaType
maxOccurs	include/libxml/schemasInternals.h	/^    int maxOccurs;$/;"	m	struct:_xmlSchemaWildcard
maxPos	src/formats/libinchi/ichican2.c	/^    int       maxPos;       \/* allocated length of nextCtblPos *\/$/;"	m	struct:tagCTable	file:
maxTime	src/canon.cpp	/^      time_t startTime, maxTime;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::Timeout	file:
maxTime	src/kekulize.cpp	/^      time_t startTime, maxTime;$/;"	m	struct:OpenBabel::Kekulize::Timeout	file:
maxUInt	include/openbabel/json/json.h	/^      static const UInt maxUInt;$/;"	m	class:Json::Value
maxUInt	src/formats/json/jsoncpp.cpp	/^const UInt Value::maxUInt = UInt(-1);$/;"	m	class:Json::Value	file:
maxUInt64	include/openbabel/json/json.h	/^      static const UInt64 maxUInt64;$/;"	m	class:Json::Value
maxUInt64	src/formats/json/jsoncpp.cpp	/^const UInt64 Value::maxUInt64 = UInt64(-1);$/;"	m	class:Json::Value	file:
maxVal	src/mcdlutil.cpp	/^	const int maxVal[NELEMMCDL] = {$/;"	m	namespace:OpenBabel	file:
maxValency	src/mcdlutil.cpp	/^  int maxValency(int na) {        \/\/Maximal valency of a specified element$/;"	f	namespace:OpenBabel
maxVert	src/formats/libinchi/ichican2.c	/^    int       maxVert;      \/* max number of vertices to separate atoms from taut groups *\/$/;"	m	struct:tagCTable	file:
maxWidth_	include/openbabel/json/customwriter.h	/^      int maxWidth_;$/;"	m	class:Json::CustomWriter
max_adj_edges	include/inchi/ichi_bns.h	/^  AT_NUMB     max_adj_edges;               \/* 4, including reserved *\/$/;"	m	struct:BnsVertex
max_altp	include/inchi/ichi_bns.h	/^    int            max_altp;$/;"	m	struct:BalancedNetworkStructure
max_axis	include/libxml/xpath.h	/^    int max_axis;			\/* max number of axis *\/$/;"	m	struct:_xmlXPathContext
max_depth	include/openbabel/tree/tree.hh	/^int tree<T, tree_node_allocator>::max_depth() const$/;"	f	class:tree
max_depth	include/openbabel/tree/tree.hh	/^int tree<T, tree_node_allocator>::max_depth(const iterator_base& pos) const$/;"	f	class:tree
max_edges	include/inchi/ichi_bns.h	/^    int max_edges;        \/* allocation size for edge[]; iedge has length 2*max_edges *\/$/;"	m	struct:BalancedNetworkStructure
max_fptr	include/inchi/inpdef.h	/^    int        max_fptr;  \/* length of the filled out portion of fptr *\/$/;"	m	struct:tagStructFptrs
max_funcs_unused	include/libxml/xpath.h	/^    int max_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
max_iedges	include/inchi/ichi_bns.h	/^    int max_iedges;       \/* allocation size for iedge *\/$/;"	m	struct:BalancedNetworkStructure
max_len	include/inchi/ichicant.h	/^    int       max_len;  \/* allocated length of tree in sizeof(tree[0]) units *\/$/;"	m	struct:tagCurTree
max_len_Pu_Pv	include/inchi/ichi_bns.h	/^    int             max_len_Pu_Pv;    \/* allocation size of Pu and Pv *\/$/;"	m	struct:BalancedNetworkData
max_num_c_groups	include/inchi/ichitaut.h	/^    int     max_num_c_groups;$/;"	m	struct:tagChargeGroupsInfo
max_num_candidates	include/inchi/ichitaut.h	/^    int          max_num_candidates;$/;"	m	struct:tagChargeGroupsInfo
max_num_candidates	include/inchi/ichitaut.h	/^    int          max_num_candidates;$/;"	m	struct:tagSaltGroupInfo
max_num_t_groups	include/inchi/ichitaut.h	/^    int       max_num_t_groups;$/;"	m	struct:tagTautomerGroupsInfo
max_num_vertices	include/inchi/ichi_bns.h	/^    int             max_num_vertices; \/* allocation size of all except Pu, Pv *\/$/;"	m	struct:BalancedNetworkData
max_tc_groups	include/inchi/ichirvrs.h	/^    int      max_tc_groups; \/* number of allocated of pTCG[] elements *\/$/;"	m	struct:tagAllTCGroups
max_types	include/libxml/xpath.h	/^    int max_types;			\/* max number of types *\/$/;"	m	struct:_xmlXPathContext
max_value	include/openbabel/mol.h	/^    struct max_value$/;"	s	namespace:OpenBabel::detail
max_value	include/openbabel/mol.h	/^    struct max_value<T, 0>$/;"	s	namespace:OpenBabel::detail
max_variables_unused	include/libxml/xpath.h	/^    int max_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
max_vertices	include/inchi/ichi_bns.h	/^    int max_vertices;     \/* allocation size for BNS_VERTEX structures *\/$/;"	m	struct:BalancedNetworkStructure
maxatts	include/libxml/parser.h	/^    int                maxatts;       \/* the size of the array *\/$/;"	m	struct:_xmlParserCtxt
maxdepth	src/formats/MCDLformat.cpp	/^  int maxdepth;$/;"	m	class:OpenBabel::MCDLFormat	file:
maxdev	src/pointgroup.cpp	/^      double  maxdev ;        \/*   Largest error associated with the element            *\/$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
maximum	include/libxml/parser.h	/^  unsigned long maximum;$/;"	m	struct:_xmlParserNodeInfoSeq
maxlenCt	src/formats/libinchi/ichican2.c	/^    int       maxlenCt;     \/* allocated length of Ctbl *\/$/;"	m	struct:tagCTable	file:
maxlenNumH	include/inchi/ichicant.h	/^    int             maxlenNumH; \/*  n + T_NUM_NO_ISOTOPIC*(n_tg-n) + 1 *\/$/;"	m	struct:tagCanonData
maxlenNumH	src/formats/libinchi/ichican2.c	/^    int             maxlenNumH; \/*  n + T_NUM_NO_ISOTOPIC*(n_tg-n) + 1 *\/$/;"	m	struct:tagCTable	file:
maxlenNumHfixed	include/inchi/ichicant.h	/^    int              maxlenNumHfixed;    \/* max length = n+1  *\/$/;"	m	struct:tagCanonData
maxlen_iso_exchg_atnos	include/inchi/ichicant.h	/^    int              maxlen_iso_exchg_atnos;$/;"	m	struct:tagCanonData
maxlen_iso_exchg_atnos	src/formats/libinchi/ichican2.c	/^    int              maxlen_iso_exchg_atnos;$/;"	m	struct:tagCTable	file:
maxlen_iso_sort_key	include/inchi/ichicant.h	/^    int              maxlen_iso_sort_key; \/* max length = n_tg+1 *\/$/;"	m	struct:tagCanonData
maxlen_iso_sort_key	src/formats/libinchi/ichican2.c	/^    int              maxlen_iso_sort_key; \/* max length = n_tg+1 *\/$/;"	m	struct:tagCTable	file:
maxlen_iso_sort_key_Hfixed	include/inchi/ichicant.h	/^    int              maxlen_iso_sort_key_Hfixed; \/* max length = n+1  *\/$/;"	m	struct:tagCanonData
maxlen_iso_sort_key_Hfixed	src/formats/libinchi/ichican2.c	/^    int              maxlen_iso_sort_key_Hfixed; \/* max length = n+1  *\/$/;"	m	struct:tagCTable	file:
maxvalence	include/inchi/extr_ct.h	/^     int maxvalence;$/;"	m	struct:AtData
mayHaveCisTransBond	src/stereo/perception.cpp	/^  bool mayHaveCisTransBond(OBMol *mol)$/;"	f	namespace:OpenBabel
mayHaveTetrahedralCenter	src/stereo/perception.cpp	/^  bool mayHaveTetrahedralCenter(OBMol *mol)$/;"	f	namespace:OpenBabel
mcr	src/canon.cpp	/^      OBBitVec &mcr;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
mem_alloc	src/formats/yasaraformat.cpp	36;"	d	file:
mem_free	src/formats/yasaraformat.cpp	37;"	d	file:
mem_inc	src/formats/yasaraformat.cpp	39;"	d	file:
mem_set	src/formats/yasaraformat.cpp	38;"	d	file:
memberName	src/formats/json/jsoncpp.cpp	/^ValueIteratorBase::memberName() const$/;"	f	class:Json::ValueIteratorBase
memberTypes	include/libxml/schemasInternals.h	/^    xmlSchemaTypeLinkPtr memberTypes;$/;"	m	struct:_xmlSchemaType
memicmp	src/formats/libinchi/util.c	/^int memicmp ( const void * p1, const void * p2, size_t length )$/;"	f
merge	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::merge(sibling_iterator to1,   sibling_iterator to2,$/;"	f	class:tree
mergeRings	src/stereo/perception.cpp	/^  std::vector<OBBitVec> mergeRings(OBMol *mol, const std::vector<unsigned int> &symClasses)$/;"	f	namespace:OpenBabel
message	include/libxml/xmlerror.h	/^    char       *message;\/* human-readable informative error message *\/$/;"	m	struct:_xmlError
message	src/oberror.cpp	/^  string OBError::message() const$/;"	f	class:OpenBabel::OBError
message_	include/openbabel/json/json.h	/^         std::string message_;$/;"	m	class:Json::Reader::ErrorInfo
metals	src/mcdlutil.cpp	/^  const int metals[NMETALS] = {$/;"	m	namespace:OpenBabel	file:
might_change_other_atom_parity	src/formats/libinchi/ichimap2.c	/^int might_change_other_atom_parity( sp_ATOM *at, int num_atoms, int at_no, AT_RANK *nRank2, AT_RANK *nRank1 )$/;"	f
millitime	include/inchi/ichitime.h	/^    long           millitime; \/* milliseconds *\/$/;"	m	struct:tagInchiTime
minCellLength	src/charges/eqeq.h	/^const double minCellLength = 150.0; \/\/ Minimum dimension of supercell used in calculation [A]$/;"	v
minInt	include/openbabel/json/json.h	/^      static const Int minInt;$/;"	m	class:Json::Value
minInt	src/formats/json/jsoncpp.cpp	/^const Int Value::minInt = Int( ~(UInt(-1)\/2) );$/;"	m	class:Json::Value	file:
minInt64	include/openbabel/json/json.h	/^      static const Int64 minInt64;$/;"	m	class:Json::Value
minInt64	src/formats/json/jsoncpp.cpp	/^const Int64 Value::minInt64 = Int64( ~(UInt64(-1)\/2) );$/;"	m	class:Json::Value	file:
minLargestInt	include/openbabel/json/json.h	/^      static const LargestInt minLargestInt;$/;"	m	class:Json::Value
minLargestInt	src/formats/json/jsoncpp.cpp	/^const LargestInt Value::minLargestInt = LargestInt( ~(LargestUInt(-1)\/2) );$/;"	m	class:Json::Value	file:
minOccurs	include/libxml/schemasInternals.h	/^    int minOccurs;$/;"	m	struct:_xmlSchemaElement
minOccurs	include/libxml/schemasInternals.h	/^    int minOccurs;$/;"	m	struct:_xmlSchemaType
minOccurs	include/libxml/schemasInternals.h	/^    int minOccurs;$/;"	m	struct:_xmlSchemaWildcard
min_ring_size	include/inchi/ichirvrs.h	/^    AT_RANK  min_ring_size;  \/* 8 => detect 7-member and smaller rings *\/$/;"	m	struct:tagBfsQueue
mirror_atom	src/pointgroup.cpp	/^    static void mirror_atom( SYMMETRY_ELEMENT *plane, OBAtom *from, OBAtom *to )$/;"	f	class:OpenBabel::PointGroupPrivate
mix32	src/fingerprints/fingerecfp.cpp	68;"	d	file:
mmCIFFormat	src/formats/mmcifformat.cpp	/^   mmCIFFormat()$/;"	f	class:OpenBabel::mmCIFFormat
mmCIFFormat	src/formats/mmcifformat.cpp	/^ class mmCIFFormat : public OBMoleculeFormat$/;"	c	namespace:OpenBabel	file:
mmff94s	src/forcefields/forcefieldmmff94.h	/^      bool mmff94s;$/;"	m	class:OpenBabel::OBForceFieldMMFF94
mob_atomlen	src/formats/yasaraformat.cpp	/^int mob_atomlen(struct mobatom *atom)$/;"	f	namespace:OpenBabel
mob_atomsize	src/formats/yasaraformat.cpp	/^int mob_atomsize(struct mobatom *atom)$/;"	f	namespace:OpenBabel
mob_clearid	src/formats/yasaraformat.cpp	/^void mob_clearid(struct atomid *id)$/;"	f	namespace:OpenBabel
mob_element	src/formats/yasaraformat.cpp	176;"	d	file:
mob_elementsym	src/formats/yasaraformat.cpp	/^const char *mob_elementsym[MOB_ELEMENTS]=$/;"	m	namespace:OpenBabel	file:
mob_getid	src/formats/yasaraformat.cpp	/^void mob_getid(struct atomid *id,struct mobatom *atom)$/;"	f	namespace:OpenBabel
mob_hasname	src/formats/yasaraformat.cpp	/^int mob_hasname(struct mobatom *atom,struct atomid *id2)$/;"	f	namespace:OpenBabel
mob_hasres	src/formats/yasaraformat.cpp	/^int mob_hasres(struct mobatom *atom,struct atomid *id2)$/;"	f	namespace:OpenBabel
mob_invid	src/formats/yasaraformat.cpp	/^void mob_invid(struct atomid *id)$/;"	f	namespace:OpenBabel
mob_issameres	src/formats/yasaraformat.cpp	/^int mob_issameres(struct atomid *id1,struct atomid *id2)$/;"	f	namespace:OpenBabel
mob_links	src/formats/yasaraformat.cpp	177;"	d	file:
mob_next	src/formats/yasaraformat.cpp	/^struct mobatom *mob_next(struct mobatom *atom)$/;"	f	namespace:OpenBabel
mob_reslen	src/formats/yasaraformat.cpp	/^int mob_reslen(struct mobatom *atom,int atomsleft)$/;"	f	namespace:OpenBabel
mob_setnext	src/formats/yasaraformat.cpp	/^void mob_setnext(struct mobatom **atomadd)$/;"	f	namespace:OpenBabel
mob_start	src/formats/yasaraformat.cpp	/^struct mobatom *mob_start(mobdata *mob)$/;"	f	namespace:OpenBabel
mobatom	src/formats/yasaraformat.cpp	/^struct mobatom                     \/* Modeling object atom structure *\/$/;"	s	namespace:OpenBabel	file:
mobdata	src/formats/yasaraformat.cpp	/^typedef int32 mobdata;$/;"	t	namespace:OpenBabel	file:
model_type	src/formats/povrayformat.cpp	/^    string model_type;$/;"	m	class:OpenBabel::PovrayFormat	file:
mol	src/depict/depict.cpp	/^      OBMol     *mol;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
mol	src/formats/smileyformat.cpp	/^    OBMol *mol;$/;"	m	struct:OpenBabel::OpenBabelCallback	file:
molWideData	src/formats/xml/cmlformat.cpp	/^    vector< pair<string,string> > molWideData;$/;"	m	class:OpenBabel::CMLFormat	file:
mol_copy_check_empty	include/inchi/lreadmol.h	/^int mol_copy_check_empty( char* dest, char* source, int len, char **first_space )$/;"	f
mol_read_counts_line	include/inchi/lreadmol.h	/^int mol_read_counts_line( MOL_CTAB* ctab, FILE *inp, char *pStrErr )$/;"	f
mol_read_datum	include/inchi/lreadmol.h	/^int mol_read_datum(void* data, int field_len, int  data_type, char** line_ptr)$/;"	f
mol_read_hdr	include/inchi/lreadmol.h	/^int mol_read_hdr(MOL_HEADER_BLOCK *hdr, FILE* inp, char *pStrErr)$/;"	f
moldenFormat__	src/formats/moldenformat.cpp	/^OBMoldenFormat moldenFormat__;$/;"	m	namespace:OpenBabel	file:
moleculeCopy	src/mcdlutil.cpp	/^  void TSimpleMolecule::moleculeCopy(TSimpleMolecule & source) {$/;"	f	class:OpenBabel::TSimpleMolecule
mon	include/openbabel/parsmart.h	/^      mon;$/;"	m	union:OpenBabel::_AtomExpr	typeref:struct:OpenBabel::_AtomExpr::__anon50
mon	include/openbabel/parsmart.h	/^      mon;$/;"	m	union:OpenBabel::_BondExpr	typeref:struct:OpenBabel::_BondExpr::__anon52
move_after	include/openbabel/tree/tree.hh	/^template <typename iter> iter tree<T, tree_node_allocator>::move_after(iter target, iter source)$/;"	f	class:tree
move_before	include/openbabel/tree/tree.hh	/^template <typename iter> iter tree<T, tree_node_allocator>::move_before(iter target, iter source)$/;"	f	class:tree
move_before	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::move_before(sibling_iterator target,$/;"	f	class:tree
move_explicit_Hcation	src/formats/libinchi/strutil.c	/^int move_explicit_Hcation(inp_ATOM *at, int num_at, int iat, int iat_H, int bInAllComponents)$/;"	f
move_ontop	include/openbabel/tree/tree.hh	/^template <typename iter> iter tree<T, tree_node_allocator>::move_ontop(iter target, iter source)$/;"	f	class:tree
msec_LeftTime	include/inchi/ichidrp.h	/^    long            msec_LeftTime;$/;"	m	struct:tagInputParms
msec_MaxTime	include/inchi/ichidrp.h	/^    long            msec_MaxTime;   \/* was ulMaxTime; max time to run ProsessOneStructure *\/$/;"	m	struct:tagInputParms
msg	include/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
msg	src/formats/libinchi/ichiread.c	/^    const char  *msg;$/;"	m	struct:tagInchiReadErrMsg	file:
msmsFormat__	src/formats/msmsformat.cpp	/^OBMSMSFormat msmsFormat__;$/;"	m	namespace:OpenBabel	file:
mult	src/ops/changecell.cpp	/^    bool mult;$/;"	m	class:OpenBabel::OpChangeCell::vc_val	file:
mult3	src/formats/libinchi/ichister.c	/^double* mult3( const double a[], double b, double result[] )$/;"	f
mult_matrix	src/matrix.cpp	/^bool mult_matrix(std::vector<std::vector<double> > &c,$/;"	f	namespace:OpenBabel
mult_matrix_f	src/matrix.cpp	/^bool mult_matrix_f(double *c, double *a, double *b, int rows, int cols)$/;"	f	namespace:OpenBabel
mult_matrix_ff	src/matrix.cpp	/^bool mult_matrix_ff(double **c, double **a, double **b, int rows, int cols)$/;"	f	namespace:OpenBabel
mvAtom	src/formats/cifformat.cpp	/^    std::vector<CIFAtom> mvAtom;$/;"	m	class:OpenBabel::CIFData	file:
mvBond	src/formats/cifformat.cpp	/^    std::vector<CIFBond> mvBond;$/;"	m	class:OpenBabel::CIFData	file:
mvComment	src/formats/cifformat.cpp	/^    std::list<std::string> mvComment;$/;"	m	class:OpenBabel::CIF	file:
mvComment	src/formats/cifformat.cpp	/^    std::list<std::string> mvComment;$/;"	m	class:OpenBabel::CIFData	file:
mvData	src/formats/cifformat.cpp	/^    std::map<std::string,CIFData> mvData;$/;"	m	class:OpenBabel::CIF	file:
mvItem	src/formats/cifformat.cpp	/^    std::map<ci_string,std::string> mvItem;$/;"	m	class:OpenBabel::CIFData	file:
mvLatticePar	src/formats/cifformat.cpp	/^    std::vector<float> mvLatticePar;$/;"	m	class:OpenBabel::CIFData	file:
mvLoop	src/formats/cifformat.cpp	/^    std::map<std::set<ci_string>,std::map<ci_string,std::vector<std::string> > > mvLoop;$/;"	m	class:OpenBabel::CIFData	file:
myBuffer	include/openbabel/lineend.h	/^    char                     myBuffer ;$/;"	m	class:OpenBabel::FilteringInputStreambuf
myDoc	include/libxml/parser.h	/^    xmlDocPtr           myDoc;        \/* the document being built *\/$/;"	m	struct:_xmlParserCtxt
myExtractor	include/openbabel/lineend.h	/^    Extractor                myExtractor ;$/;"	m	class:OpenBabel::FilteringInputStreambuf
mySource	include/openbabel/lineend.h	/^    std::istream*          mySource ;$/;"	m	class:OpenBabel::FilteringInputStreambuf
my_center_coords	src/formats/povrayformat.cpp	/^OpenBabel::vector3 my_center_coords(double *c, unsigned int size)$/;"	f
my_va_start	include/inchi/ichicomp.h	53;"	d
my_va_start	include/inchi/ichicomp.h	55;"	d
mystrncpy	src/formats/libinchi/util.c	/^int mystrncpy(char *target,const char *source,unsigned maxlen)$/;"	f
mystrrev	src/formats/libinchi/ichimake.c	/^void mystrrev( char *p )$/;"	f
mytokenize	src/formats/smilesformat.cpp	/^  bool mytokenize(std::vector<std::string> &vcr, std::string &s,$/;"	f	namespace:OpenBabel
n	include/openbabel/kinetics.h	/^  enum rate_type {A, n, E};$/;"	e	enum:OpenBabel::OBRateData::rate_type
n	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFOOPCalculationGaff
n	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGaff
n	src/forcefields/forcefieldghemical.h	/^      double V, s, n, tor;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
n	src/forcefields/forcefielduff.h	/^      int coord, n;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
n	src/forcefields/forcefielduff.h	/^      int n;$/;"	m	class:OpenBabel::OBFFTorsionCalculationUFF
n	src/formats/libinchi/ichirvr3.c	/^    short n[fNumAllChgT]; \/* all numbers *\/$/;"	m	struct:tagTgDiffHChgFH	file:
n1	include/inchi/ichi.h	/^    short      n1; \/* points to the original; used in structure reconstruction only *\/$/;"	m	struct:tagINChIforSort
n1	include/inchi/inchi_dll_a.h	/^    int n1;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
n1	src/chains.cpp	/^    int n1;          \/\/!< mask 1 used by ConstrainBackbone() and MatchConstraint()$/;"	m	struct:OpenBabel::Template	file:
n2	include/inchi/ichi.h	/^    short      n2; \/* points to the original; used in structure reconstruction only *\/$/;"	m	struct:tagINChIforSort
n2	include/inchi/inchi_dll_a.h	/^    int n2;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
n2	src/chains.cpp	/^    int n2;          \/\/!< mask 2 used by ConstrainBackbone() and MatchConstraint()$/;"	m	struct:OpenBabel::Template	file:
n3	include/inchi/ichi.h	/^    short      n3; \/* points to the original; used in structure reconstruction only *\/$/;"	m	struct:tagINChIforSort
n3	src/chains.cpp	/^    int n3;          \/\/!< mask 3 used by ConstrainBackbone() and MatchConstraint()$/;"	m	struct:OpenBabel::Template	file:
n4	src/chains.cpp	/^    int n4;          \/\/!< mask 4 used by ConstrainBackbone() and MatchConstraint()$/;"	m	struct:OpenBabel::Template	file:
nAccep0	src/formats/libinchi/ichitaut.c	/^    S_SHORT nAccep0;      \/* number of endpoint-acceptors that have no H and no negative charge *\/ $/;"	m	struct:tagTGroupData	file:
nAccepH	src/formats/libinchi/ichitaut.c	/^    S_SHORT nAccepH;      \/* number of endpoint-acceptors that have H and no negative charge *\/$/;"	m	struct:tagTGroupData	file:
nAccepM	src/formats/libinchi/ichitaut.c	/^    S_SHORT nAccepM;      \/* number of endpoint-acceptors that have negative charge (Minus) *\/$/;"	m	struct:tagTGroupData	file:
nAccepS	src/formats/libinchi/ichitaut.c	/^    S_SHORT nAccepS;      \/* number of acidic endpoint-acceptors *\/$/;"	m	struct:tagTGroupData	file:
nAddIedges	include/inchi/ichirvrs.h	/^    int      nAddIedges; \/* additional increase of number of iedges for edge switching to another group *\/$/;"	m	struct:tagAllTCGroups
nAddSuperCGroups	src/formats/libinchi/ichirvr1.c	/^int nAddSuperCGroups( ALL_TC_GROUPS *pTCGroups )$/;"	f
nAddToRank	include/inchi/ichicant.h	/^    int *nAddToRank;     \/* number to add to the rank to normalize *\/$/;"	m	struct:tagEQUIV_INFO
nAllocLen	include/inchi/ichi_bns.h	/^    int      nAllocLen;$/;"	m	struct:BN_AtomsAtTautGroup
nAllocatedLength	include/inchi/mode.h	/^    int  nAllocatedLength;$/;"	m	struct:tagOutputString
nAtChargeRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nAtChargeRevrs;$/;"	m	struct:tagAtomsCmpTwoFixedH
nAtChargeRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nAtChargeRevrs;$/;"	m	struct:tagAtomsCmpTwoMobileH
nAtMass	src/formats/libinchi/util.c	/^     int     nAtMass;      \/* Avg. atomic mass from the Periodic Chart of the Elements (Fisher cat. no. 05-702-10) *\/$/;"	m	struct:tagElData	file:
nAtNumb	src/formats/libinchi/ichican2.c	/^    AT_NUMB *nAtNumb;$/;"	m	struct:tagTransposition	file:
nAtNumber	src/formats/libinchi/ichican2.c	/^    AT_NUMB          nAtNumber;$/;"	m	struct:tagNodeValues	file:
nAtTypeTotals	include/inchi/ichi_bns.h	/^    int     *nAtTypeTotals;$/;"	m	struct:BN_AtomsAtTautGroup
nAtno2Canon	include/inchi/ichirvrs.h	/^    AT_NUMB       *nAtno2Canon[TAUT_NUM];     \/* nAtno2Canon[restored_at_no][*] = (atom canon number in restored struct)-1*\/$/;"	m	struct:tagStructFromInChI
nAtom	include/inchi/ichi.h	/^    U_CHAR    *nAtom;       \/* atomic numbers [nNumberOfAtoms] from the Periodic Table *\/$/;"	m	struct:tagINChI
nAtomLevel	include/inchi/ichirvrs.h	/^    AT_RANK *nAtomLevel;$/;"	m	struct:tagBfsQueue
nAtomNo	include/inchi/ichicant.h	/^    int *nAtomNo;        \/* eqivalent atom number *\/$/;"	m	struct:tagEQUIV_INFO
nAtomNumber	include/inchi/ichi.h	/^    AT_NUMB   nAtomNumber;  \/* Canonical atom number *\/$/;"	m	struct:tagINChI_IsotopicAtom
nAtomNumber	include/inchi/ichitaut.h	/^    AT_NUMB nAtomNumber;$/;"	m	struct:tagTautomerBondLocation
nAtomNumber	include/inchi/ichitaut.h	/^    AT_NUMB nAtomNumber;$/;"	m	struct:tagTautomerEndpoint
nAtoms	src/mcdlutil.cpp	/^  int TSimpleMolecule::nAtoms() {$/;"	f	class:OpenBabel::TSimpleMolecule
nAuxRank	include/inchi/ichicant.h	/^    AT_RANK  *nAuxRank;$/;"	m	struct:tagCanonData
nBackwardEdge	include/inchi/ichirvrs.h	/^    int nBackwardEdge; \/* edge index: from central Y-connecting vertex$/;"	m	struct:tagTCGroup
nBit	include/inchi/inchicmp.h	/^    INCHIDIFF              nBit;$/;"	m	struct:tagCompareInchiMsg
nBlockNumberAltBns	src/formats/libinchi/ichi_bns.c	9245;"	d	file:
nBlockSystem	include/inchi/extr_ct.h	/^    AT_NUMB   nBlockSystem;$/;"	m	struct:tagAtom
nBlockSystem	include/inchi/inchi_api.h	/^    AT_NUMBR nBlockSystem;                 \/* ambiguous if the atom is a cut-vertex: better apply this to bonds *\/$/;"	m	struct:tagNormAtom
nBlockSystem	include/inchi/inpdef.h	/^    AT_NUMB nBlockSystem;$/;"	m	struct:tagInputAtom
nBlockSystem	include/inchi_api.h	/^    AT_NUMBR nBlockSystem;                 \/* ambiguous if the atom is a cut-vertex: better apply this to bonds *\/$/;"	m	struct:tagNormAtom
nBlockSystem	src/formats/libinchi/ichinorm.c	/^    AT_NUMB    nBlockSystem;$/;"	m	struct:tagTreeAtom	file:
nBlockSystemAltBns	src/formats/libinchi/ichi_bns.c	9255;"	d	file:
nBondAtom1	include/inchi/ichi.h	/^    AT_NUMB    *nBondAtom1; \/* Canonical number of a first atom $/;"	m	struct:tagINChI_Stereo
nBondAtom2	include/inchi/ichi.h	/^    AT_NUMB    *nBondAtom2; \/* Canonical number of a second atom$/;"	m	struct:tagINChI_Stereo
nBondNonStereoAltBns	src/formats/libinchi/ichi_bns.c	9248;"	d	file:
nBondTypeInpAltBns	src/formats/libinchi/ichi_bns.c	9247;"	d	file:
nBonds	src/mcdlutil.cpp	/^  int TSimpleMolecule::nBonds() {$/;"	f	class:OpenBabel::TSimpleMolecule
nBondsValToMetal	src/formats/libinchi/util.c	/^int nBondsValToMetal( inp_ATOM* at, int iat )$/;"	f
nBondsValenceInpAt	src/formats/libinchi/ichi_bns.c	/^int nBondsValenceInpAt( const inp_ATOM *at, int *nNumAltBonds, int *nNumWrongBonds )$/;"	f
nCMinusGroupEdge	include/inchi/ichirvrs.h	/^    int    nCMinusGroupEdge;   \/* (index of the edge to the atom's (-) group) + 1 *\/$/;"	m	struct:tagAtomIonPrperies
nCPlusGroupEdge	include/inchi/ichirvrs.h	/^    int    nCPlusGroupEdge;    \/* (index of the edge to the atom's (+) group) + 1 *\/$/;"	m	struct:tagAtomIonPrperies
nCanon2Atno	include/inchi/ichirvrs.h	/^    AT_NUMB       *nCanon2Atno[TAUT_NUM];     \/* nCanon2Atno[(atom canon number in restored struct)-1][*] = restored_at_no; *\/$/;"	m	struct:tagStructFromInChI
nCanonEquNbr	include/inchi/inpdef.h	/^    AT_NUMB   nCanonEquNbr;$/;"	m	struct:tagAtomParmsForDrawing
nCanonFlags	include/inchi/ichi.h	/^    int        nCanonFlags;$/;"	m	struct:tagINChI_Aux
nCanonFlags	include/inchi/ichicant.h	/^    int             nCanonFlags;$/;"	m	struct:tagFixHOrTautCanonNumbering
nCanonFlags	include/inchi/ichicant.h	/^    int      nCanonFlags;$/;"	m	struct:tagCanonData
nCanonFlags	include/inchi/ichicant.h	/^    int nCanonFlags;$/;"	m	struct:tagCanonStat
nCanonFlags	include/inchi/inpdef.h	/^    int        nCanonFlags[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagNormCanonFlags
nCanonNbr	include/inchi/inpdef.h	/^    AT_NUMB   nCanonNbr;               \/* if zero then do not use all data for the atom *\/$/;"	m	struct:tagAtomParmsForDrawing
nCanonOrd	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrd;       \/* atom numbers in order of increasing canon. ranks  *\/$/;"	m	struct:tagCanonStat
nCanonOrdIsotopic	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdIsotopic;        \/* atom numbers in order of increasing canon. ranks *\/$/;"	m	struct:tagCanonStat
nCanonOrdIsotopicStereo	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdIsotopicStereo;$/;"	m	struct:tagCanonStat
nCanonOrdIsotopicStereoInv	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdIsotopicStereoInv;$/;"	m	struct:tagCanonStat
nCanonOrdIsotopicStereoTaut	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdIsotopicStereoTaut;    \/*  !!! *\/$/;"	m	struct:tagCanonStat
nCanonOrdIsotopicTaut	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdIsotopicTaut;    \/*\/ t-group numbers in order of increasing canon. ranks *\/$/;"	m	struct:tagCanonStat
nCanonOrdStereo	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdStereo;     \/* atom numbers in order of increasing canon. ranks *\/$/;"	m	struct:tagCanonStat
nCanonOrdStereoInv	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdStereoInv;     \/* atom numbers in order of increasing canon. ranks *\/$/;"	m	struct:tagCanonStat
nCanonOrdStereoTaut	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdStereoTaut; \/* t-group numbers in order of increasing canon. ranks *\/$/;"	m	struct:tagCanonStat
nCanonOrdTaut	include/inchi/ichicant.h	/^    AT_RANK          *nCanonOrdTaut;   \/* t-group numbers numbers in order of increasing canon. ranks  *\/$/;"	m	struct:tagCanonStat
nChar	src/formats/libinchi/ichiprt1.c	/^    char nChar;$/;"	m	struct:tagXmlEntityRef	file:
nCharge	include/inchi/ichirvrs.h	/^    int nCharge;$/;"	m	struct:tagChargeValence
nChargeFixHInChI	include/inchi/ichirvrs.h	/^    S_CHAR nChargeFixHInChI;$/;"	m	struct:tagStructCmpTwoFixedH
nChargeFixHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nChargeFixHRevrs;$/;"	m	struct:tagStructCmpTwoFixedH
nChargeFixHRevrsNonMetal	include/inchi/ichirvrs.h	/^    S_CHAR nChargeFixHRevrsNonMetal; \/* charge does not include charges on metals *\/$/;"	m	struct:tagStructCmpTwoFixedH
nChargeInChI	include/inchi/ichirvrs.h	/^    int nChargeInChI;  \/* component charge from the original InChI, TAUT_YES layer *\/$/;"	m	struct:tagStructFromInChI
nChargeMobHInChI	include/inchi/ichirvrs.h	/^    S_CHAR nChargeMobHInChI;$/;"	m	struct:tagStructCmpTwoFixedH
nChargeMobHInChI	include/inchi/ichirvrs.h	/^    S_CHAR nChargeMobHInChI;$/;"	m	struct:tagStructCmpTwoMobileH
nChargeMobHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nChargeMobHRevrs;$/;"	m	struct:tagStructCmpTwoFixedH
nChargeMobHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nChargeMobHRevrs;$/;"	m	struct:tagStructCmpTwoMobileH
nChargeMobHRevrsNonMetal	include/inchi/ichirvrs.h	/^    S_CHAR nChargeMobHRevrsNonMetal; \/* charge does not include charges on metals *\/$/;"	m	struct:tagStructCmpTwoFixedH
nChargeMobHRevrsNonMetal	include/inchi/ichirvrs.h	/^    S_CHAR nChargeMobHRevrsNonMetal; \/* charge does not include charges on metals; later add ion pairs rejection *\/$/;"	m	struct:tagStructCmpTwoMobileH
nChargeRevrs	include/inchi/ichirvrs.h	/^    int nChargeRevrs;  \/* component charge of the reconstructed structure, TAUT_YES layer *\/$/;"	m	struct:tagStructFromInChI
nComp	src/formats/libinchi/runichi.c	/^    int            nRet2, c1, c2, nComp, bRenumbErr;$/;"	m	struct:tagRenumbData	file:
nCompInv2Abs	include/inchi/ichi.h	/^    int         nCompInv2Abs; \/* 0=>Inv = Abs stereo; -1=> Inv < Abs stereo, +1=> Inv > Abs stereo; +2=> in reading InChI: no \/m was found and in \/sN N>0 *\/$/;"	m	struct:tagINChI_Stereo
nConnTable	include/inchi/ichi.h	/^    AT_NUMB   *nConnTable;  \/* Connection table [nNumberOfAtoms+NumberOfBonds] *\/$/;"	m	struct:tagINChI
nConstitEquIsotopicNumbers	include/inchi/ichi.h	/^    AT_NUMB   *nConstitEquIsotopicNumbers;       \/* [nNumberOfAtoms*1.5] *\/$/;"	m	struct:tagINChI_Aux
nConstitEquIsotopicTGroupNumbers	include/inchi/ichi.h	/^    AT_NUMB   *nConstitEquIsotopicTGroupNumbers; \/* [nNumberOfAtoms\/2] *\/$/;"	m	struct:tagINChI_Aux
nConstitEquNumbers	include/inchi/ichi.h	/^    AT_NUMB   *nConstitEquNumbers;               \/* [nNumberOfAtoms*1.5] *\/$/;"	m	struct:tagINChI_Aux
nConstitEquTGroupNumbers	include/inchi/ichi.h	/^    AT_NUMB   *nConstitEquTGroupNumbers;         \/* [nNumberOfAtoms\/2] *\/$/;"	m	struct:tagINChI_Aux
nCountBnsSizes	src/formats/libinchi/ichirvr1.c	/^int nCountBnsSizes( inp_ATOM *at, int num_at, int nAddEdges2eachAtom, int nAddVertices,$/;"	f
nCurAtLen	include/inchi/inpdef.h	/^    AT_NUMB *nCurAtLen;      \/* has max_num_components elements *\/$/;"	m	struct:tagOrigAtom
nCurEquLabel	include/inchi/ichidrp.h	/^    AT_NUMB    nCurEquLabel; \/* current mark *\/$/;"	m	struct:tagDrawParms
nCurFlow2Check	src/formats/libinchi/ichi_bns.c	/^int nCurFlow2Check( BN_STRUCT *pBNS, int iedge )$/;"	f
nCutVertexAtom	include/inchi/ichicant.h	/^    int *nCutVertexAtom; \/* cut-vertex atom for the set of equivalent atoms *\/$/;"	m	struct:tagEQUIV_INFO
nDebugData	include/inchi/inpdef.h	/^    int       nDebugData;$/;"	m	struct:tagAtomParmsForDrawing
nDistanceFromTerminal	include/inchi/extr_ct.h	/^    AT_NUMB   nDistanceFromTerminal;$/;"	m	struct:tagAtom
nDistanceFromTerminal	include/inchi/ichicant.h	/^    AT_RANK         nDistanceFromTerminal;$/;"	m	struct:tagAtomInvariant
nDistanceFromTerminal	include/inchi/inchi_api.h	/^    AT_NUMBR nDistanceFromTerminal;        \/* not used *\/$/;"	m	struct:tagNormAtom
nDistanceFromTerminal	include/inchi/inpdef.h	/^    AT_NUMB nDistanceFromTerminal;       \/* terminal atom or ring system has 1, next has 2, etc. *\/$/;"	m	struct:tagInputAtom
nDistanceFromTerminal	include/inchi_api.h	/^    AT_NUMBR nDistanceFromTerminal;        \/* not used *\/$/;"	m	struct:tagNormAtom
nDonorA	src/formats/libinchi/ichitaut.c	/^    S_SHORT nDonorA;      \/* number of acidic endpoint-donors *\/$/;"	m	struct:tagTGroupData	file:
nDonorH	src/formats/libinchi/ichitaut.c	/^    S_SHORT nDonorH;      \/* number of endpoint-donors that have only H *\/$/;"	m	struct:tagTGroupData	file:
nDonorM	src/formats/libinchi/ichitaut.c	/^    S_SHORT nDonorM;      \/* number of endpoint-donors that have negative charge (Minus) *\/$/;"	m	struct:tagTGroupData	file:
nEdge4charge	include/inchi/ichirvrs.h	/^    int      nEdge4charge;      \/* edge used to add charges; neighbor1=supercharge, another = (+\/-) vertex *\/$/;"	m	struct:tagAllTCGroups
nEdgeMinus	include/inchi/ichirvrs.h	/^    int      nEdgeMinus;        \/* edge to (-) supergroup; 0 means none *\/ $/;"	m	struct:tagAllTCGroups
nEdgePlus	include/inchi/ichirvrs.h	/^    int      nEdgePlus;         \/* edge to (+) supergroup; 0 means none *\/$/;"	m	struct:tagAllTCGroups
nEdges	include/inchi/ichirvrs.h	/^    int      nEdges;     \/* total number of edges *\/$/;"	m	struct:tagAllTCGroups
nElDataLen	src/formats/libinchi/util.c	/^int nElDataLen = sizeof(ElData)\/sizeof(ElData[0])-1;$/;"	v
nElNegPauling10	src/formats/libinchi/util.c	/^     int     nElNegPauling10; \/* Pauling electronegativity x 10; 0 => unknown *\/$/;"	m	struct:tagElData	file:
nEndPoint	include/inchi/ichi_bns.h	/^    AT_NUMB *nEndPoint;            \/* original t-group number *\/$/;"	m	struct:BN_AtomsAtTautGroup
nEndpointAtomNumber	include/inchi/ichitaut.h	/^    AT_NUMB   *nEndpointAtomNumber; \/* nNumEndpoints elements; also see comments to T_GROUP *\/$/;"	m	struct:tagTautomerGroupsInfo
nEntries	include/openbabel/fingerprint.h	/^  unsigned int nEntries;    \/\/\/<number of fingerprints$/;"	m	struct:OpenBabel::FptIndexHeader
nEquLabels	include/inchi/ichidrp.h	/^    AT_NUMB   *nEquLabels; \/* num_inp_atoms elements, value>0 marks atoms in the set #value  *\/$/;"	m	struct:tagDrawParms
nEquLabels	include/inchi/inpdef.h	/^    AT_NUMB *nEquLabels; \/* num_inp_atoms elements, value>0 marks atoms in the set #value  *\/$/;"	m	struct:tagOrigAtom
nEquNumber	include/inchi/ichitaut.h	/^    AT_NUMB nEquNumber;  \/* same for endpoints connected by alt paths *\/$/;"	m	struct:tagTautomerEndpoint
nError	include/inchi/ichirvrs.h	/^    int            nError;$/;"	m	struct:tagStructFromInChI
nErrorCode	include/inchi/ichi.h	/^    int        nErrorCode;  \/* 0 = success *\/$/;"	m	struct:tagINChI
nErrorCode	include/inchi/ichi.h	/^    int        nErrorCode;  \/* 0 = success *\/$/;"	m	struct:tagINChI_Aux
nErrorCode	include/inchi/ichimain.h	/^    int           nErrorCode;$/;"	m	struct:tagStructData
nErrorType	include/inchi/ichimain.h	/^    int           nErrorType;$/;"	m	struct:tagStructData
nExchgIsoH	include/inchi/ichicant.h	/^    S_CHAR    *nExchgIsoH;$/;"	m	struct:tagCanonStat
nFillOutProtonMobileH	src/formats/libinchi/ichiread.c	/^int nFillOutProtonMobileH( INChI *pInChI )$/;"	f
nFindOneOM	src/formats/libinchi/strutil.c	/^int nFindOneOM(inp_ATOM *at, int at_no, int ord_OM[], int num_OM)$/;"	f
nFirst	include/inchi/ichiring.h	/^    int nFirst;  \/* element to remove if nLength > 0 *\/$/;"	m	struct:tagQieue
nFirstEndpointAtNoPos	include/inchi/ichitaut.h	/^    AT_NUMB   nFirstEndpointAtNoPos; \/* the first index of the atom number in T_GROUP_INFO::nEndpointAtomNumber[] *\/$/;"	m	struct:tagTautomerGroup
nFirstFmlSegm	src/formats/libinchi/ichimake.c	1124;"	d	file:
nFirstFmlSegm	src/formats/libinchi/ichimake.c	1178;"	d	file:
nFirstInSet	include/inchi/ichicant.h	/^    int *nFirstInSet;    \/* first of equivalent atoms in the connected to the cut-vertex atom parts of the structure *\/$/;"	m	struct:tagEQUIV_INFO
nFirstIsoSegm	src/formats/libinchi/ichimake.c	1125;"	d	file:
nFirstIsoSegm	src/formats/libinchi/ichimake.c	1179;"	d	file:
nFixHInChI	include/inchi/ichirvrs.h	/^    S_CHAR nFixHInChI;$/;"	m	struct:tagAtomsCmpTwoFixedH
nFixHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nFixHRevrs;$/;"	m	struct:tagAtomsCmpTwoFixedH
nFlags	include/inchi/ichi.h	/^    INCHI_MODE  nFlags;      \/* INCHI_FLAG_ACID_TAUT            tautomerism of dissociated acid invoked$/;"	m	struct:tagINChI
nFontSize	include/inchi/ichidrp.h	/^    int            nFontSize;$/;"	m	struct:tagDrawParmsSettings
nForwardEdge	include/inchi/ichirvrs.h	/^    int nForwardEdge;  \/* edge index: from c-group to central Y-connecting vertex$/;"	m	struct:tagTCGroup
nGet12TautIn5MembAltRing	src/formats/libinchi/ichiqueu.c	/^int nGet12TautIn5MembAltRing( inp_ATOM *atom, int nStartAtom, int nStartAtomNeighbor,$/;"	f
nGet14TautIn5MembAltRing	src/formats/libinchi/ichiqueu.c	/^int nGet14TautIn5MembAltRing( inp_ATOM *atom, int nStartAtom, int nStartAtomNeighbor,$/;"	f
nGet14TautIn7MembAltRing	src/formats/libinchi/ichiqueu.c	/^int nGet14TautIn7MembAltRing( inp_ATOM *atom, int nStartAtom, int nStartAtomNeighbor,$/;"	f
nGet15TautIn6MembAltRing	src/formats/libinchi/ichiqueu.c	/^int nGet15TautIn6MembAltRing( inp_ATOM *atom, int nStartAtom, AT_RANK  *nDfsPathPos,$/;"	f
nGet15TautInAltPath	src/formats/libinchi/ichiqueu.c	/^int nGet15TautInAltPath( inp_ATOM *atom, int nStartAtom, AT_RANK  *nDfsPathPos,$/;"	f
nGetEndpointInfo	src/formats/libinchi/ichitaut.c	/^int nGetEndpointInfo( inp_ATOM *atom, int iat, ENDPOINT_INFO *eif )$/;"	f
nGetEndpointInfo_KET	src/formats/libinchi/ichitaut.c	/^int nGetEndpointInfo_KET( inp_ATOM *atom, int iat, ENDPOINT_INFO *eif )$/;"	f
nGetInChISegment	src/formats/libinchi/ichiread.c	/^int nGetInChISegment( INCHI_IOSTREAM *pInp, SEGM_LINE *Line, const char *pszToken )$/;"	f
nGetMcr	src/formats/libinchi/ichimap1.c	/^AT_RANK nGetMcr( AT_RANK *nEqArray, AT_RANK n )$/;"	f
nGetMcr2	src/formats/libinchi/ichican2.c	/^AT_RANK nGetMcr2( AT_RANK *nEqArray, AT_RANK n )$/;"	f
nGroup	include/inchi/ichirvrs.h	/^    int      nGroup[NUM_TCGROUP_TYPES];  \/* tagTCGroupTypes *\/$/;"	m	struct:tagAllTCGroups
nGroupID	include/inchi/inchicmp.h	/^    CMP_INCHI_MSG_GROUP_ID   nGroupID;$/;"	m	struct:tagCompareInchiMsgGroup
nGroupID	include/inchi/inchicmp.h	/^    CMP_INCHI_MSG_GROUP_ID nGroupID;$/;"	m	struct:tagCompareInchiMsg
nGroupIndex	src/formats/libinchi/ichitaut.c	/^    S_SHORT nGroupIndex;  \/* TGroupData[nGroupNumber]nGroupIndex = index of t_group in t_group_info *\/$/;"	m	struct:tagTGroupData	file:
nGroupNumber	include/inchi/ichitaut.h	/^    AT_NUMB   nGroupNumber;  \/* positive tautomer group ID = atom->endpoint *\/$/;"	m	struct:tagTautomerGroup
nGroupNumber	include/inchi/ichitaut.h	/^    AT_NUMB   nGroupNumber;$/;"	m	struct:tagChargeGroup
nGroupNumber	include/inchi/ichitaut.h	/^    AT_NUMB nGroupNumber;$/;"	m	struct:tagTautomerEndpoint
nGroupNumber	src/formats/libinchi/ichitaut.c	/^    S_SHORT nGroupNumber; \/* t-group number from t_group_info->t_group->nGroupNumber *\/$/;"	m	struct:tagTGroupData	file:
nInitialCharge	include/inchi/ichirvrs.h	/^             int     nInitialCharge;$/;"	m	struct:tagChargeNodeList
nInputType	include/inchi/ichidrp.h	/^    INPUT_TYPE      nInputType;$/;"	m	struct:tagInputParms
nIsoDifference	include/inchi/ichi.h	/^    NUM_H     nIsoDifference; \/* 0=non-isotopic; 1=rounded avg. atomic mass *\/$/;"	m	struct:tagINChI_IsotopicAtom
nIsotopicEndpointAtomNumber	include/inchi/ichitaut.h	/^    AT_NUMB   *nIsotopicEndpointAtomNumber; \/* [0]: number of the following atoms; [1...]: non-tautomeric atoms that may have isotopic H *\/$/;"	m	struct:tagTautomerGroupsInfo
nIsotopicOrigAtNosInCanonOrd	include/inchi/ichi.h	/^    AT_NUMB   *nIsotopicOrigAtNosInCanonOrd;     \/* [nNumberOfInputAtoms*1.5]; *\/$/;"	m	struct:tagINChI_Aux
nIsotopicOrigAtNosInCanonOrdInv	include/inchi/ichi.h	/^    AT_NUMB   *nIsotopicOrigAtNosInCanonOrdInv;  \/* [nNumberOfInputAtoms*1.5]; *\/$/;"	m	struct:tagINChI_Aux
nJoin2Mcrs	src/formats/libinchi/ichimap1.c	/^int nJoin2Mcrs( AT_RANK *nEqArray, AT_RANK n1, AT_RANK n2 )$/;"	f
nJoin2Mcrs2	src/formats/libinchi/ichican2.c	/^int nJoin2Mcrs2( AT_RANK *nEqArray, AT_RANK n1, AT_RANK n2 )$/;"	f
nLenBonds	include/inchi/ichitaut.h	/^    int nLenBonds;$/;"	m	struct:tagAtomSizes
nLenCT	include/inchi/ichitaut.h	/^    int nLenCT;$/;"	m	struct:tagAtomSizes
nLenCTAtOnly	include/inchi/ichicant.h	/^    int      nLenCTAtOnly;$/;"	m	struct:tagCanonData
nLenCTAtOnly	include/inchi/ichitaut.h	/^    int nLenCTAtOnly;$/;"	m	struct:tagAtomSizes
nLenCTAtOnly	src/formats/libinchi/ichican2.c	/^    int       nLenCTAtOnly; \/* to split Ctnl comparison in case of bDigraph != 0 *\/$/;"	m	struct:tagCTable	file:
nLenCanonOrd	include/inchi/ichicant.h	/^    int               nLenCanonOrd;               \/* Superceded by any of the following > 0 *\/$/;"	m	struct:tagCanonStat
nLenCanonOrdIsotopic	include/inchi/ichicant.h	/^    int               nLenCanonOrdIsotopic;$/;"	m	struct:tagCanonStat
nLenCanonOrdIsotopicStereo	include/inchi/ichicant.h	/^    int               nLenCanonOrdIsotopicStereo;$/;"	m	struct:tagCanonStat
nLenCanonOrdIsotopicStereoTaut	include/inchi/ichicant.h	/^    int               nLenCanonOrdIsotopicStereoTaut; \/* !!! *\/$/;"	m	struct:tagCanonStat
nLenCanonOrdIsotopicTaut	include/inchi/ichicant.h	/^    int               nLenCanonOrdIsotopicTaut;   \/* !!! *\/$/;"	m	struct:tagCanonStat
nLenCanonOrdStereo	include/inchi/ichicant.h	/^    int               nLenCanonOrdStereo;$/;"	m	struct:tagCanonStat
nLenCanonOrdStereoTaut	include/inchi/ichicant.h	/^    int               nLenCanonOrdStereoTaut;     \/* !!! *\/$/;"	m	struct:tagCanonStat
nLenCanonOrdTaut	include/inchi/ichicant.h	/^    int               nLenCanonOrdTaut;           \/* !!! Superceded by any of the following > 0 *\/$/;"	m	struct:tagCanonStat
nLenIsotopic	include/inchi/ichitaut.h	/^    int nLenIsotopic;$/;"	m	struct:tagAtomSizes
nLenIsotopicEndpoints	include/inchi/ichitaut.h	/^    int nLenIsotopicEndpoints;$/;"	m	struct:tagAtomSizes
nLenLinearCT	include/inchi/ichicant.h	/^    int               nLenLinearCT;         \/* connection table only  *\/$/;"	m	struct:tagCanonStat
nLenLinearCT	include/inchi/ichicant.h	/^    int      nLenLinearCT;$/;"	m	struct:tagCanonData
nLenLinearCT2	include/inchi/ichicant.h	/^    int               nLenLinearCT2;        \/* connection table only, non-isotopic result  *\/$/;"	m	struct:tagCanonStat
nLenLinearCTAtOnly	include/inchi/ichicant.h	/^    int               nLenLinearCTAtOnly;   \/* connection table only without tautomeric pseudoatoms  *\/$/;"	m	struct:tagCanonStat
nLenLinearCTAtOnly2	include/inchi/ichicant.h	/^    int               nLenLinearCTAtOnly2;  \/* connection table only, non-isotopic result without tautomeric pseudoatoms  *\/$/;"	m	struct:tagCanonStat
nLenLinearCTIsotopic	include/inchi/ichicant.h	/^    int               nLenLinearCTIsotopic;$/;"	m	struct:tagCanonStat
nLenLinearCTIsotopicStereoCarb	include/inchi/ichicant.h	/^    int               nLenLinearCTIsotopicStereoCarb; \/*  new *\/$/;"	m	struct:tagCanonStat
nLenLinearCTIsotopicStereoCarbInv	include/inchi/ichicant.h	/^    int               nLenLinearCTIsotopicStereoCarbInv; \/*  new *\/$/;"	m	struct:tagCanonStat
nLenLinearCTIsotopicStereoDble	include/inchi/ichicant.h	/^    int               nLenLinearCTIsotopicStereoDble;$/;"	m	struct:tagCanonStat
nLenLinearCTIsotopicStereoDbleInv	include/inchi/ichicant.h	/^    int               nLenLinearCTIsotopicStereoDbleInv;$/;"	m	struct:tagCanonStat
nLenLinearCTIsotopicTautomer	include/inchi/ichicant.h	/^    int               nLenLinearCTIsotopicTautomer;$/;"	m	struct:tagCanonStat
nLenLinearCTIsotopicTautomer	include/inchi/ichitaut.h	/^    int nLenLinearCTIsotopicTautomer;$/;"	m	struct:tagAtomSizes
nLenLinearCTStereoCarb	include/inchi/ichicant.h	/^    int               nLenLinearCTStereoCarb;$/;"	m	struct:tagCanonStat
nLenLinearCTStereoCarb	include/inchi/ichitaut.h	/^    int nLenLinearCTStereoCarb; \/* max. number of stereo atoms in non-isotopic case *\/$/;"	m	struct:tagAtomSizes
nLenLinearCTStereoCarbInv	include/inchi/ichicant.h	/^    int               nLenLinearCTStereoCarbInv;$/;"	m	struct:tagCanonStat
nLenLinearCTStereoDble	include/inchi/ichicant.h	/^    int               nLenLinearCTStereoDble;$/;"	m	struct:tagCanonStat
nLenLinearCTStereoDble	include/inchi/ichitaut.h	/^    int nLenLinearCTStereoDble; \/* max. number of stereo bonds in non-isotopic case *\/$/;"	m	struct:tagAtomSizes
nLenLinearCTStereoDbleInv	include/inchi/ichicant.h	/^    int               nLenLinearCTStereoDbleInv;$/;"	m	struct:tagCanonStat
nLenLinearCTTautomer	include/inchi/ichicant.h	/^    int               nLenLinearCTTautomer;$/;"	m	struct:tagCanonStat
nLenLinearCTTautomer	include/inchi/ichitaut.h	/^    int nLenLinearCTTautomer;$/;"	m	struct:tagAtomSizes
nLenLinearCt	include/inchi/ichicant.h	/^    int             nLenLinearCt;$/;"	m	struct:tagFixHOrTautCanonNumbering
nLenLinearCtAtOnly	include/inchi/ichicant.h	/^    int             nLenLinearCtAtOnly;$/;"	m	struct:tagFixHOrTautCanonNumbering
nLenNumH	include/inchi/ichicant.h	/^    int             nLenNumH;   \/* length = num_atoms + 2*num_taut_groups *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nLenNumHFixH	include/inchi/ichicant.h	/^    int             nLenNumHFixH;   \/* length = num_atoms *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nLength	include/inchi/ichiring.h	/^    int nLength; \/* (nFirst + nLength) is next free position *\/$/;"	m	struct:tagQieue
nLink	include/inchi/ichi.h	/^    int nLink;  \/* negative: ignore InChI; positive: index of (Reconnected component) + 1 linked to it *\/$/;"	m	struct:tagINChI
nLink	include/inchi/ichirvrs.h	/^    int   nLink; \/* same as in INChI *\/$/;"	m	struct:tagStructFromInChI
nMarkedAtom	include/inchi/ichi_bns.h	/^    S_CHAR  *nMarkedAtom;          \/* atom mark, see AATG_MARK_* *\/$/;"	m	struct:BN_AtomsAtTautGroup
nMaxAddAtoms	include/inchi/ichi_bns.h	/^    int nMaxAddAtoms;     \/* max. number of atoms to add (not including t-groups) *\/$/;"	m	struct:BalancedNetworkStructure
nMaxAddEdges	include/inchi/ichi_bns.h	/^    int nMaxAddEdges;     \/* max. number edges of add to each atom (not including edges to t-groups) *\/$/;"	m	struct:BalancedNetworkStructure
nMaxAtNeighRankForSort	src/formats/libinchi/ichicano.c	/^AT_RANK nMaxAtNeighRankForSort;$/;"	v
nMaxFlow2Check	src/formats/libinchi/ichi_bns.c	/^int nMaxFlow2Check( BN_STRUCT *pBNS, int iedge )$/;"	f
nMaxLenLinearCT	include/inchi/ichicant.h	/^    int               nMaxLenLinearCT;      \/* connection table only  *\/$/;"	m	struct:tagCanonStat
nMaxLenLinearCT	include/inchi/ichicant.h	/^    int      nMaxLenLinearCT;$/;"	m	struct:tagCanonData
nMaxLenLinearCTIsotopic	include/inchi/ichicant.h	/^    int               nMaxLenLinearCTIsotopic;$/;"	m	struct:tagCanonStat
nMaxLenLinearCTIsotopicStereoCarb	include/inchi/ichicant.h	/^    int               nMaxLenLinearCTIsotopicStereoCarb;$/;"	m	struct:tagCanonStat
nMaxLenLinearCTIsotopicStereoDble	include/inchi/ichicant.h	/^    int               nMaxLenLinearCTIsotopicStereoDble;$/;"	m	struct:tagCanonStat
nMaxLenLinearCTIsotopicTautomer	include/inchi/ichicant.h	/^    int               nMaxLenLinearCTIsotopicTautomer;$/;"	m	struct:tagCanonStat
nMaxLenLinearCTStereoCarb	include/inchi/ichicant.h	/^    int               nMaxLenLinearCTStereoCarb;  \/* new *\/$/;"	m	struct:tagCanonStat
nMaxLenLinearCTStereoDble	include/inchi/ichicant.h	/^    int               nMaxLenLinearCTStereoDble;  \/* new *\/$/;"	m	struct:tagCanonStat
nMaxLenLinearCTTautomer	include/inchi/ichicant.h	/^    int               nMaxLenLinearCTTautomer;$/;"	m	struct:tagCanonStat
nMaxLenLinearCt	include/inchi/ichicant.h	/^    int             nMaxLenLinearCt;$/;"	m	struct:tagFixHOrTautCanonNumbering
nMaxLenRankStack	include/inchi/ichicant.h	/^    int                  nMaxLenRankStack;$/;"	m	struct:tagBaseCanonNumbering
nMaxNumStereoAtoms	include/inchi/ichitaut.h	/^    int nMaxNumStereoAtoms; \/* max. number of stereo atoms in isotopic case *\/$/;"	m	struct:tagAtomSizes
nMaxNumStereoBonds	include/inchi/ichitaut.h	/^    int nMaxNumStereoBonds; \/* max. number of stereo bonds in isotopic case *\/$/;"	m	struct:tagAtomSizes
nMetal2EndpointInitBondOrder	include/inchi/ichirvrs.h	/^    int nMetal2EndpointInitBondOrder;$/;"	m	struct:tagStructRestoreMode
nMetal2EndpointInitEdgeFlow	include/inchi/ichirvrs.h	/^    int nMetal2EndpointInitEdgeFlow;$/;"	m	struct:tagStructRestoreMode
nMetal2EndpointMinBondOrder	include/inchi/ichirvrs.h	/^    int nMetal2EndpointMinBondOrder;$/;"	m	struct:tagStructRestoreMode
nMetalFlowerParam_D	include/inchi/ichirvrs.h	/^    int nMetalFlowerParam_D;      \/* additional edge capacity for canceling radicals *\/$/;"	m	struct:tagStructRestoreMode
nMetalGroupEdge	include/inchi/ichirvrs.h	/^    int    nMetalGroupEdge;    \/* index of the edge to the atom's M-group + 1 *\/$/;"	m	struct:tagAtomIonPrperies
nMetalInitBondOrder	include/inchi/ichirvrs.h	/^    int nMetalInitBondOrder;   \/* >= nMetalMinBondOrder + nMetalInitEdgeFlow *\/$/;"	m	struct:tagStructRestoreMode
nMetalInitEdgeFlow	include/inchi/ichirvrs.h	/^    int nMetalInitEdgeFlow;    \/* one bond contribution to metal's (st-cap - st-flow) = *\/$/;"	m	struct:tagStructRestoreMode
nMetalMaxCharge_D	include/inchi/ichirvrs.h	/^    int nMetalMaxCharge_D;        \/* cap and\/or flow for metal charge group *\/$/;"	m	struct:tagStructRestoreMode
nMetalMinBondOrder	include/inchi/ichirvrs.h	/^    int nMetalMinBondOrder;    \/* edge_flow=f means bond order=cMetalMinBondOrder+f *\/$/;"	m	struct:tagStructRestoreMode
nMinFlow2Check	src/formats/libinchi/ichi_bns.c	/^int nMinFlow2Check( BN_STRUCT *pBNS, int iedge )$/;"	f
nMobHInChI	include/inchi/ichirvrs.h	/^    S_CHAR nMobHInChI; \/* number of H on the atom in the orig. InChI *\/$/;"	m	struct:tagAtomsCmpTwoMobileH
nMobHInChI	include/inchi/ichirvrs.h	/^    S_CHAR nMobHInChI;$/;"	m	struct:tagAtomsCmpTwoFixedH
nMobHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nMobHRevrs; \/* number of H on the atom in InChI from the reconstructed structure *\/$/;"	m	struct:tagAtomsCmpTwoMobileH
nMobHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nMobHRevrs;$/;"	m	struct:tagAtomsCmpTwoFixedH
nMode	include/inchi/ichicant.h	/^    INCHI_MODE         nMode;$/;"	m	struct:tagCanonStat
nMode	include/inchi/ichidrp.h	/^    INCHI_MODE      nMode;$/;"	m	struct:tagInputParms
nMode	include/inchi/inchi_dll_a.h	/^    INCHI_MODE nMode;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
nNeighRank1	src/formats/libinchi/ichicans.c	/^    AT_RANK       nNeighRank1; \/*  rank of the neighbor in the direction to the opposite atom *\/$/;"	m	struct:tagStereoBondNeighbor	file:
nNeighRank2	src/formats/libinchi/ichicans.c	/^    AT_RANK       nNeighRank2; \/*  rank of the opposite atom neighbor in the direction to the current atom *\/$/;"	m	struct:tagStereoBondNeighbor	file:
nNoMetalBondsValence	src/formats/libinchi/util.c	/^int nNoMetalBondsValence( inp_ATOM *at, int at_no )$/;"	f
nNoMetalNeighIndex	src/formats/libinchi/util.c	/^int nNoMetalNeighIndex( inp_ATOM *at, int at_no )$/;"	f
nNoMetalNumBonds	src/formats/libinchi/util.c	/^int nNoMetalNumBonds( inp_ATOM *at, int at_no )$/;"	f
nNoMetalOtherNeighIndex	src/formats/libinchi/util.c	/^int nNoMetalOtherNeighIndex( inp_ATOM *at, int at_no, int cur_neigh )$/;"	f
nNoMetalOtherNeighIndex2	src/formats/libinchi/util.c	/^int nNoMetalOtherNeighIndex2( inp_ATOM *at, int at_no, int cur_neigh, int cur_neigh2 )$/;"	f
nNormAtMass	src/formats/libinchi/util.c	/^     int     nNormAtMass;  \/* Atomic mass of the most abundant isotope *\/$/;"	m	struct:tagElData	file:
nNumAtInBlockAltBns	src/formats/libinchi/ichi_bns.c	9246;"	d	file:
nNumAtInRingSystem	include/inchi/extr_ct.h	/^    AT_NUMB   nNumAtInRingSystem;$/;"	m	struct:tagAtom
nNumAtInRingSystem	include/inchi/inchi_api.h	/^    AT_NUMBR nNumAtInRingSystem;           \/* number of atoms in a ring system to which this at belongs *\/$/;"	m	struct:tagNormAtom
nNumAtInRingSystem	include/inchi/inpdef.h	/^    AT_NUMB nNumAtInRingSystem;$/;"	m	struct:tagInputAtom
nNumAtInRingSystem	include/inchi_api.h	/^    AT_NUMBR nNumAtInRingSystem;           \/* number of atoms in a ring system to which this at belongs *\/$/;"	m	struct:tagNormAtom
nNumAtInRingSystemAltBns	src/formats/libinchi/ichi_bns.c	9254;"	d	file:
nNumCompNeighborsRanksCountEql	src/formats/libinchi/ichicano.c	/^int nNumCompNeighborsRanksCountEql;$/;"	v
nNumComponents	include/inchi/ichirvrs.h	/^    int         nNumComponents[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagInputInChI
nNumDiffMobH	include/inchi/ichirvrs.h	/^    U_CHAR nNumDiffMobH;$/;"	m	struct:tagStructCmpTwoFixedH
nNumDiffMobH	include/inchi/ichirvrs.h	/^    U_CHAR nNumDiffMobH;$/;"	m	struct:tagStructCmpTwoMobileH
nNumEdgesToCnVertex	src/formats/libinchi/ichirvr1.c	/^int nNumEdgesToCnVertex( MY_CONST C_NODE *pCN, int len, int v )$/;"	f
nNumEndpInChI	include/inchi/ichirvrs.h	/^    short  nNumEndpInChI;$/;"	m	struct:tagStructCmpTwoFixedH
nNumEndpInChI	include/inchi/ichirvrs.h	/^    short nNumEndpInChI;$/;"	m	struct:tagStructCmpTwoMobileH
nNumEndpRevrs	include/inchi/ichirvrs.h	/^    short  nNumEndpRevrs;$/;"	m	struct:tagStructCmpTwoFixedH
nNumEndpRevrs	include/inchi/ichirvrs.h	/^    short nNumEndpRevrs;$/;"	m	struct:tagStructCmpTwoMobileH
nNumEndpoints	include/inchi/ichitaut.h	/^    AT_NUMB   nNumEndpoints; \/* number of the atom numbers in T_GROUP_INFO::nEndpointAtomNumber[] *\/$/;"	m	struct:tagTautomerGroup
nNumEndpoints	include/inchi/ichitaut.h	/^    int       nNumEndpoints;$/;"	m	struct:tagTautomerGroupsInfo
nNumEquSets	include/inchi/ichidrp.h	/^    AT_NUMB    nNumEquSets;  \/* max mark value *\/$/;"	m	struct:tagDrawParms
nNumEquSets	include/inchi/inpdef.h	/^    int      nNumEquSets;  \/* number of found component equivalence sets *\/$/;"	m	struct:tagOrigAtom
nNumFound	include/inchi/ichi_bns.h	/^    int      nNumFound;$/;"	m	struct:BN_AtomsAtTautGroup
nNumH	include/inchi/ichicant.h	/^    NUM_H          *nNumH;      \/* canonical H atoms positions + taut. info, excluding tautomeric H *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nNumHFixH	include/inchi/ichicant.h	/^    NUM_H          *nNumHFixH;      \/* canonical fixed positions of tautomeric H *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nNumHInchi	src/formats/libinchi/ichirvr3.c	/^    short  nNumHInchi;  \/* number of H in t-group from orig. InChI *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumHNorml	src/formats/libinchi/ichirvr3.c	/^    short  nNumHNorml;  \/* number of H in Normalized atfMobile_H_Revrs[] *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumHOrig	include/inchi/ichicant.h	/^    NUM_H          *nNumHOrig;  \/* original  H atoms positions + taut. info, excluding tautomeric H *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nNumHOrigFixH	include/inchi/ichicant.h	/^    NUM_H          *nNumHOrigFixH;  \/* original fixed positions of tautomeric H *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nNumHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nNumHRevrs; \/* number of H on the atom in the being reconstructed structure *\/$/;"	m	struct:tagAtomsCmpTwoMobileH
nNumHRevrs	include/inchi/ichirvrs.h	/^    S_CHAR nNumHRevrs;$/;"	m	struct:tagAtomsCmpTwoFixedH
nNumHRevrs	src/formats/libinchi/ichirvr3.c	/^    short  nNumHRevrs;  \/* number of H in at2[] *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumInSet	include/inchi/ichicant.h	/^    int *nNumInSet;      \/* number of the equivalent atoms connected to the cut-vertex atom *\/$/;"	m	struct:tagEQUIV_INFO
nNumIsotopicEndpoints	include/inchi/ichitaut.h	/^    int       nNumIsotopicEndpoints;     \/* allocated length of nIsotopicEndpointAtomNumber *\/$/;"	m	struct:tagTautomerGroupsInfo
nNumMInchi	src/formats/libinchi/ichirvr3.c	/^    short  nNumMInchi;  \/* number of (-) in InChI *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumMNorml	src/formats/libinchi/ichirvr3.c	/^    short  nNumMNorml;  \/* number of (-) in atf[] *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumMRevrs	src/formats/libinchi/ichirvr3.c	/^    short  nNumMRevrs;  \/* number of (-) in at2[] *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumMainAdj2Tgroup	include/inchi/ichi_bns.h	/^    int      nNumMainAdj2Tgroup;$/;"	m	struct:BN_AtomsAtTautGroup
nNumOthersAdj2Tgroup	include/inchi/ichi_bns.h	/^    int      nNumOthersAdj2Tgroup;$/;"	m	struct:BN_AtomsAtTautGroup
nNumPNorml	src/formats/libinchi/ichirvr3.c	/^    short  nNumPNorml;  \/* number of (+) in Normalized atfMobile_H_Revrs[] *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumPRevrs	src/formats/libinchi/ichirvr3.c	/^    short  nNumPRevrs;  \/* number of (+) in at2[] *\/$/;"	m	struct:tagTgDiffHChgFH	file:
nNumProtons	include/inchi/ichirvrs.h	/^    REM_PROTONS nNumProtons[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagInputInChI
nNumRadEdges	include/inchi/ichi_bns.h	/^    int             nNumRadEdges;$/;"	m	struct:BalancedNetworkData
nNumRadEndpoints	include/inchi/ichi_bns.h	/^    int             nNumRadEndpoints;$/;"	m	struct:BalancedNetworkData
nNumRadicals	include/inchi/ichi_bns.h	/^    int             nNumRadicals;$/;"	m	struct:BalancedNetworkData
nNumRemHInChI	include/inchi/ichirvrs.h	/^    short  nNumRemHInChI;$/;"	m	struct:tagStructCmpTwoFixedH
nNumRemHInChI	include/inchi/ichirvrs.h	/^    short nNumRemHInChI;$/;"	m	struct:tagStructCmpTwoMobileH
nNumRemHRevrs	include/inchi/ichirvrs.h	/^    short  nNumRemHRevrs;$/;"	m	struct:tagStructCmpTwoFixedH
nNumRemHRevrs	include/inchi/ichirvrs.h	/^    short nNumRemHRevrs;$/;"	m	struct:tagStructCmpTwoMobileH
nNumRemovedExplicitH	include/inchi/ichitaut.h	/^    NUM_H       nNumRemovedExplicitH; \/* keeps track of explicit H *\/$/;"	m	struct:tagTautomerNormInfo
nNumRemovedIsotopicH	include/inchi/ichi.h	/^    NUM_H   nNumRemovedIsotopicH[NUM_H_ISOTOPES]; \/* isotopic H that may be exchanged and considered$/;"	m	struct:tagINChI_Aux
nNumRemovedIsotopicH	include/inchi/ichirvrs.h	/^    NUM_H   nNumRemovedIsotopicH[NUM_H_ISOTOPES]; \/* isotopic H that may be exchanged and considered$/;"	m	struct:tagOneComponentRemovedAndExchangeableH
nNumRemovedIsotopicH	include/inchi/ichirvrs.h	/^    NUM_H   nNumRemovedIsotopicH[NUM_H_ISOTOPES]; \/* isotopic H that may be exchanged and considered$/;"	m	struct:tagRemovedAndExchangeableH
nNumRemovedProtons	include/inchi/ichi.h	/^    NUM_H   nNumRemovedProtons;$/;"	m	struct:tagINChI_Aux
nNumRemovedProtons	include/inchi/ichirvrs.h	/^    NUM_H   nNumRemovedProtons;$/;"	m	struct:tagOneComponentRemovedAndExchangeableH
nNumRemovedProtons	include/inchi/ichirvrs.h	/^    NUM_H   nNumRemovedProtons;$/;"	m	struct:tagRemovedAndExchangeableH
nNumRemovedProtons	include/inchi/ichirvrs.h	/^    int            nNumRemovedProtons;        \/* =0 for Fixed-H, = num. removed protons in case of Mobile-H InChI *\/$/;"	m	struct:tagStructFromInChI
nNumRemovedProtons	include/inchi/ichitaut.h	/^    NUM_H       nNumRemovedProtons;$/;"	m	struct:tagTautomerNormInfo
nNumRemovedProtons	include/inchi/inchi_api.h	/^    int       nNumRemovedProtons;$/;"	m	struct:tagNormAtomData
nNumRemovedProtons	include/inchi/inpdef.h	/^    int        nNumRemovedProtons;$/;"	m	struct:tagInfoAtomData
nNumRemovedProtons	include/inchi/inpdef.h	/^    int       nNumRemovedProtons;$/;"	m	struct:tagCompositeAtomData
nNumRemovedProtons	include/inchi/inpdef.h	/^    int       nNumRemovedProtons;$/;"	m	struct:tagInputAtomData
nNumRemovedProtons	include/inchi_api.h	/^    int       nNumRemovedProtons;$/;"	m	struct:tagNormAtomData
nNumRemovedProtonsByRevrs	include/inchi/ichirvrs.h	/^    int        nNumRemovedProtonsByRevrs;       \/* number of H(+) removed by the reconstruction,$/;"	m	struct:tagStructFromInChI
nNumRemovedProtonsIsotopic	include/inchi/ichitaut.h	/^    NUM_H       nNumRemovedProtonsIsotopic[NUM_H_ISOTOPES];$/;"	m	struct:tagTautomerNormInfo
nNumRemovedProtonsIsotopic	include/inchi/inchi_api.h	/^    NUM_HS    nNumRemovedProtonsIsotopic[NUM_H_ISOTOPES]; $/;"	m	struct:tagNormAtomData
nNumRemovedProtonsIsotopic	include/inchi/inpdef.h	/^    NUM_H     nNumRemovedProtonsIsotopic[NUM_H_ISOTOPES]; \/* isotopic composition of removed protons, not included in num_iso_H[] *\/$/;"	m	struct:tagCompositeAtomData
nNumRemovedProtonsIsotopic	include/inchi/inpdef.h	/^    NUM_H     nNumRemovedProtonsIsotopic[NUM_H_ISOTOPES]; \/* isotopic composition of removed protons, not included in num_iso_H[] *\/$/;"	m	struct:tagInputAtomData
nNumRemovedProtonsIsotopic	include/inchi_api.h	/^    NUM_HS    nNumRemovedProtonsIsotopic[NUM_H_ISOTOPES]; $/;"	m	struct:tagNormAtomData
nNumRemovedProtonsMobHInChI	include/inchi/ichirvrs.h	/^    int           nNumRemovedProtonsMobHInChI; \/* number of protons removed from Mobile-H struct in original InChI *\/$/;"	m	struct:tagStructFromInChI
nNumSets	include/inchi/ichicant.h	/^    int nNumSets;$/;"	m	struct:tagEQUIV_INFO
nNumTgDBNHInChI	include/inchi/ichirvrs.h	/^    short nNumTgDBNHInChI;     \/* number of =NH    on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDBNHRevrs	include/inchi/ichirvrs.h	/^    short nNumTgDBNHRevrs;     \/* number of =NH    on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDBNInChI	include/inchi/ichirvrs.h	/^    short nNumTgDBNInChI;      \/* number of =N-    on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDBNMinusInChI	include/inchi/ichirvrs.h	/^    short nNumTgDBNMinusInChI; \/* number of =N(-)  on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDBNMinusRevrs	include/inchi/ichirvrs.h	/^    short nNumTgDBNMinusRevrs; \/* number of =N(-)  on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDBNRevrs	include/inchi/ichirvrs.h	/^    short nNumTgDBNRevrs;      \/* number of =N-    on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDBOInChI	include/inchi/ichirvrs.h	/^    short nNumTgDBOInChI;      \/* number of =O     on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDBORevrs	include/inchi/ichirvrs.h	/^    short nNumTgDBORevrs;      \/* number of =O     on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDiffH	include/inchi/ichirvrs.h	/^    short  nNumTgDiffH;     \/* number of would-be-identical t-groups that have different number of H *\/$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgDiffH	include/inchi/ichirvrs.h	/^    short nNumTgDiffH;       \/* number of would-be-identical t-groups that have different number of H *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgDiffMinus	include/inchi/ichirvrs.h	/^    short  nNumTgDiffMinus; \/* number of would-be-identical t-groups that have different number of (-) *\/$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgDiffMinus	include/inchi/ichirvrs.h	/^    short nNumTgDiffMinus;   \/* number of would-be-identical t-groups that have different number of (-) *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgHInChI	include/inchi/ichirvrs.h	/^    short  nNumTgHInChI;    \/* number of H in orig. InChI t-groups *\/$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgHInChI	include/inchi/ichirvrs.h	/^    short nNumTgHInChI;      \/* number of H in orig. InChI t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgHRevrs	include/inchi/ichirvrs.h	/^    short  nNumTgHRevrs;    \/* number of H in reversed structure t-groups *\/$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgHRevrs	include/inchi/ichirvrs.h	/^    short nNumTgHRevrs;      \/* number of H in reversed structure t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgInChI	include/inchi/ichirvrs.h	/^    short  nNumTgInChI;$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgInChI	include/inchi/ichirvrs.h	/^    short nNumTgInChI;$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgMInChI	include/inchi/ichirvrs.h	/^    short  nNumTgMInChI;    \/* number of (-) in orig. InChI t-groups *\/$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgMInChI	include/inchi/ichirvrs.h	/^    short nNumTgMInChI;      \/* number of (-) in orig. InChI t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgMRevrs	include/inchi/ichirvrs.h	/^    short  nNumTgMRevrs;    \/* number of (-) in reversed structure t-groups *\/$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgMRevrs	include/inchi/ichirvrs.h	/^    short nNumTgMRevrs;      \/* number of (-) in reversed structure t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNH2InChI	include/inchi/ichirvrs.h	/^    short nNumTgNH2InChI;      \/* number of -NH2   on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNH2Revrs	include/inchi/ichirvrs.h	/^    short nNumTgNH2Revrs;      \/* number of -NH2   on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNHInChI	include/inchi/ichirvrs.h	/^    short nNumTgNHInChI;       \/* number of -NH-   on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNHMinusInChI	include/inchi/ichirvrs.h	/^    short nNumTgNHMinusInChI;  \/* number of -NH(-) on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNHMinusRevrs	include/inchi/ichirvrs.h	/^    short nNumTgNHMinusRevrs;  \/* number of -NH(-) on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNHRevrs	include/inchi/ichirvrs.h	/^    short nNumTgNHRevrs;       \/* number of -NH-   on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNInChI	include/inchi/ichirvrs.h	/^    short nNumTgNInChI;      \/* number of tautomeric N in orig. InChI t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNMinusInChI	include/inchi/ichirvrs.h	/^    short nNumTgNMinusInChI;   \/* number of -N(-)- on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNMinusRevrs	include/inchi/ichirvrs.h	/^    short nNumTgNMinusRevrs;   \/* number of -N(-)- on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgNRevrs	include/inchi/ichirvrs.h	/^    short nNumTgNRevrs;       \/* number of tautomeric N in reversed structure t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgOHInChI	include/inchi/ichirvrs.h	/^    short nNumTgOHInChI;       \/* number of -OH    on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgOHRevrs	include/inchi/ichirvrs.h	/^    short nNumTgOHRevrs;       \/* number of -OH    on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgOInChI	include/inchi/ichirvrs.h	/^    short nNumTgOInChI;      \/* number of tautomeric O,S,Se in orig. InChI t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgOMinusInChI	include/inchi/ichirvrs.h	/^    short nNumTgOMinusInChI;   \/* number of -O(-)  on endpoints according to original InChI *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgOMinusRevrs	include/inchi/ichirvrs.h	/^    short nNumTgOMinusRevrs;   \/* number of -O(-)  on endpoints found in restored structure *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgORevrs	include/inchi/ichirvrs.h	/^    short nNumTgORevrs;      \/* number of tautomeric O,S,Se in reversed structure t-groups *\/$/;"	m	struct:tagStructCmpTwoMobileH
nNumTgRevrs	include/inchi/ichirvrs.h	/^    short  nNumTgRevrs;$/;"	m	struct:tagStructCmpTwoFixedH
nNumTgRevrs	include/inchi/ichirvrs.h	/^    short nNumTgRevrs;$/;"	m	struct:tagStructCmpTwoMobileH
nNum_D	include/inchi/ichi.h	/^    AT_NUMB   nNum_D;  \/* number of 2H isotopic atoms *\/$/;"	m	struct:tagINChI_IsotopicTGroup
nNum_D	include/inchi/ichi.h	/^    NUM_H     nNum_D;  \/* number of 2H isotopic atoms attached *\/$/;"	m	struct:tagINChI_IsotopicAtom
nNum_H	include/inchi/ichi.h	/^    AT_NUMB   nNum_H;  \/* number of 1H isotopic atoms *\/$/;"	m	struct:tagINChI_IsotopicTGroup
nNum_H	include/inchi/ichi.h	/^    NUM_H     nNum_H;  \/* number of 1H isotopic atoms attached *\/$/;"	m	struct:tagINChI_IsotopicAtom
nNum_H	include/inchi/ichi.h	/^    S_CHAR    *nNum_H;      \/* number of terminal hydrogen atoms on each atom; in tautomeric$/;"	m	struct:tagINChI
nNum_H	include/inchi/ichicant.h	/^    S_CHAR    *nNum_H;      \/* number of terminal hydrogen atoms on each atom except tautomeric [num_atoms], in order of canonical numbers *\/$/;"	m	struct:tagCanonStat
nNum_H	src/formats/libinchi/ichiread.c	6388;"	d	file:
nNum_H_fixed	include/inchi/ichi.h	/^    S_CHAR    *nNum_H_fixed;\/* number of terminal hydrogen atoms on tautomeric atoms,$/;"	m	struct:tagINChI
nNum_H_fixed	include/inchi/ichicant.h	/^    S_CHAR    *nNum_H_fixed;\/* number of terminal hydrogen atoms on tautomeric atoms (for non-atautomeric representation) [num_atoms] *\/$/;"	m	struct:tagCanonStat
nNum_T	include/inchi/ichi.h	/^    AT_NUMB   nNum_T;  \/* number of 3H isotopic atoms *\/$/;"	m	struct:tagINChI_IsotopicTGroup
nNum_T	include/inchi/ichi.h	/^    NUM_H     nNum_T;  \/* number of 3H isotopic atoms attached *\/$/;"	m	struct:tagINChI_IsotopicAtom
nNumber	include/inchi/ichi.h	/^    AT_NUMB    *nNumber;      \/* Canonical number of a possibly tetrahedral$/;"	m	struct:tagINChI_Stereo
nNumberInv	include/inchi/ichi.h	/^    AT_NUMB    *nNumberInv;   \/* Canonical number of a possibly tetrahedral$/;"	m	struct:tagINChI_Stereo
nNumberOfAtoms	include/inchi/ichi.h	/^    int        nNumberOfAtoms;$/;"	m	struct:tagINChI
nNumberOfAtoms	include/inchi/ichi.h	/^    int        nNumberOfAtoms;$/;"	m	struct:tagINChI_Aux
nNumberOfIsotopicAtoms	include/inchi/ichi.h	/^    int                  nNumberOfIsotopicAtoms;$/;"	m	struct:tagINChI
nNumberOfIsotopicTGroups	include/inchi/ichi.h	/^    int                  nNumberOfIsotopicTGroups;$/;"	m	struct:tagINChI
nNumberOfStereoBonds	include/inchi/ichi.h	/^    int         nNumberOfStereoBonds;$/;"	m	struct:tagINChI_Stereo
nNumberOfStereoCenters	include/inchi/ichi.h	/^    int         nNumberOfStereoCenters;$/;"	m	struct:tagINChI_Stereo
nNumberOfTGroups	include/inchi/ichi.h	/^    int        nNumberOfTGroups;   \/* non-zero only in tautomeric representation *\/$/;"	m	struct:tagINChI_Aux
nOffsetAtAndH	include/inchi/inpdef.h	/^    AT_NUMB   *nOffsetAtAndH;$/;"	m	struct:tagCompositeAtomData
nOldCapsVert	src/formats/libinchi/ichi_bns.c	/^    VertexFlow nOldCapsVert[2][MAXVAL+1];$/;"	m	struct:tagAltPathChanges	file:
nOldCompNumber	include/inchi/inpdef.h	/^    AT_NUMB *nOldCompNumber; \/* 0 or component number in previous numbering *\/$/;"	m	struct:tagOrigAtom
nOneINChI_bMobileH	include/inchi/ichirvrs.h	/^    int            nOneINChI_bMobileH;        \/* type of restored structure InChI *\/$/;"	m	struct:tagStructFromInChI
nOrientation	include/inchi/ichidrp.h	/^    int    nOrientation;  \/* 10*degrees: 0 or 2700 *\/$/;"	m	struct:tagTblDrawPatms
nOrigAtNosInCanonOrd	include/inchi/ichi.h	/^    AT_NUMB   *nOrigAtNosInCanonOrd;             \/* [nNumberOfInputAtoms*1.5]; *\/$/;"	m	struct:tagINChI_Aux
nOrigAtNosInCanonOrdInv	include/inchi/ichi.h	/^    AT_NUMB   *nOrigAtNosInCanonOrdInv;          \/* inveterted stereo [nNumberOfInputAtoms*1.5]; *\/$/;"	m	struct:tagINChI_Aux
nPatternAtoms	src/ops/opisomorph.h	/^  int nPatternAtoms;   \/\/non-zero for exact matches$/;"	m	class:OpenBabel::OpNewS
nPeriodNum	include/inchi/ichirvrs.h	/^    U_CHAR nPeriodNum;$/;"	m	struct:tagAtomsCmpTwoFixedH
nPeriodNum	include/inchi/ichirvrs.h	/^    U_CHAR nPeriodNum;$/;"	m	struct:tagAtomsCmpTwoMobileH
nPossibleLocationsOfIsotopicH	include/inchi/ichi.h	/^    AT_NUMB *nPossibleLocationsOfIsotopicH;     \/* [0]=> length including 0th element, location1,...*\/$/;"	m	struct:tagINChI
nPrevAtomNumber	include/inchi/ichicant.h	/^    AT_RANK          *nPrevAtomNumber;$/;"	m	struct:tagCanonStat
nProtonCopyIsotopicInfo	src/formats/libinchi/ichiread.c	/^int nProtonCopyIsotopicInfo( INChI *pInChI_to, INChI *pInChI_from )$/;"	f
nPtr	include/inchi/mode.h	/^    int  nPtr;$/;"	m	struct:tagOutputString
nRank	src/formats/libinchi/ichicans.c	/^    AT_RANK       nRank;       \/*  *1 opposite atom rank; equal ranks mean constit. equivalence *\/$/;"	m	struct:tagStereoBondNeighbor	file:
nRefCount	include/inchi/ichi.h	/^    int nRefCount;$/;"	m	struct:tagINChI
nRefCount	include/inchi/ichi.h	/^    int nRefCount;$/;"	m	struct:tagINChI_Aux
nRemovedProtonsByNormFromRevrs	include/inchi/ichirvrs.h	/^    int        nRemovedProtonsByNormFromRevrs; \/* number of H(+) removed by normalization after$/;"	m	struct:tagStructFromInChI
nRet2	src/formats/libinchi/runichi.c	/^    int            nRet2, c1, c2, nComp, bRenumbErr;$/;"	m	struct:tagRenumbData	file:
nRetVal	include/inchi/ichirvrs.h	/^    int          nRetVal;$/;"	m	struct:tagReversedInChI
nRingSystem	include/inchi/extr_ct.h	/^    AT_NUMB   nRingSystem;$/;"	m	struct:tagAtom
nRingSystem	include/inchi/inchi_api.h	/^    AT_NUMBR nRingSystem;                  \/* starts from 1; number of a ring system *\/$/;"	m	struct:tagNormAtom
nRingSystem	include/inchi/inpdef.h	/^    AT_NUMB nRingSystem;$/;"	m	struct:tagInputAtom
nRingSystem	include/inchi_api.h	/^    AT_NUMBR nRingSystem;                  \/* starts from 1; number of a ring system *\/$/;"	m	struct:tagNormAtom
nRingSystem	src/formats/libinchi/ichinorm.c	/^    AT_NUMB    nRingSystem;$/;"	m	struct:tagTreeAtom	file:
nRingSystemAltBns	src/formats/libinchi/ichi_bns.c	9253;"	d	file:
nRotBondsMax	src/mcdlutil.cpp	54;"	d	file:
nSet	include/openbabel/inchiformat.h	/^  typedef	set<string, InchiLess> nSet;$/;"	t	class:OpenBabel::InChIFormat
nSize	include/inchi/ichiring.h	/^    int nSize;$/;"	m	struct:tagQieue
nSortedOrder	include/inchi/inpdef.h	/^    AT_NUMB *nSortedOrder; \/* num_components elements, values = 1..num_components; only if num_components > 1  *\/$/;"	m	struct:tagOrigAtom
nStructReadError	include/inchi/ichimain.h	/^    int           nStructReadError;$/;"	m	struct:tagStructData
nSymmRank	include/inchi/ichicant.h	/^    AT_RANK          *nSymmRank;       \/* symmetry numbers in order of atoms  *\/$/;"	m	struct:tagCanonStat
nSymmRankCt	include/inchi/ichicant.h	/^    AT_RANK        *nSymmRankCt;  \/* orbits *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nSymmRankCtIso	include/inchi/ichicant.h	/^    AT_RANK        *nSymmRankCtIso;     \/* orbits of isotopic structure *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
nSymmRankIsotopic	include/inchi/ichicant.h	/^    AT_RANK          *nSymmRankIsotopic;$/;"	m	struct:tagCanonStat
nSymmRankIsotopicTaut	include/inchi/ichicant.h	/^    AT_RANK          *nSymmRankIsotopicTaut;    \/* !!! *\/$/;"	m	struct:tagCanonStat
nSymmRankTaut	include/inchi/ichicant.h	/^    AT_RANK          *nSymmRankTaut;   \/* t-group symmetry numbers in order of t-groups  *\/$/;"	m	struct:tagCanonStat
nTGroupNumber	include/inchi/ichi.h	/^    AT_NUMB   nTGroupNumber;  \/* Tautomeric group number *\/$/;"	m	struct:tagINChI_IsotopicTGroup
nTautEndpointEdgeCap	src/formats/libinchi/ichirvr1.c	/^int nTautEndpointEdgeCap( inp_ATOM *at, VAL_AT *pVA, int i )$/;"	f
nTautGroupCanonNbr	include/inchi/inpdef.h	/^    AT_NUMB   nTautGroupCanonNbr;$/;"	m	struct:tagAtomParmsForDrawing
nTautGroupEdge	include/inchi/ichirvrs.h	/^    int    nTautGroupEdge;     \/* index of the edge from the atom to the t-group + 1 *\/$/;"	m	struct:tagAtomIonPrperies
nTautGroupEquNbr	include/inchi/inpdef.h	/^    AT_NUMB   nTautGroupEquNbr;$/;"	m	struct:tagAtomParmsForDrawing
nTautomer	include/inchi/ichi.h	/^    AT_NUMB   *nTautomer;   \/* NumGroups; ((NumAt+1, NumH,         At1..AtNumAt),...); {INCHI_T_NUM_MOVABLE = 1} - old$/;"	m	struct:tagINChI
nTotLength	include/inchi/ichiring.h	/^    int nTotLength;$/;"	m	struct:tagQieue
nTotalCharge	include/inchi/ichi.h	/^    int        nTotalCharge;$/;"	m	struct:tagINChI
nType	src/formats/libinchi/util.c	/^     int     nType;        \/* METAL or METAL2 *\/$/;"	m	struct:tagElData	file:
nUsedLength	include/inchi/mode.h	/^    int  nUsedLength;$/;"	m	struct:tagOutputString
nUserMode	include/inchi/inchi_dll_a.h	/^    INCHI_MODE nUserMode;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
nValElectr	include/inchi/ichirvrs.h	/^    U_CHAR nValElectr;$/;"	m	struct:tagAtomsCmpTwoFixedH
nValElectr	include/inchi/ichirvrs.h	/^    U_CHAR nValElectr;$/;"	m	struct:tagAtomsCmpTwoMobileH
nValence	include/inchi/ichirvrs.h	/^    int nValence;$/;"	m	struct:tagChargeValence
nValenceOrderingNumber	include/inchi/ichirvrs.h	/^    int nValenceOrderingNumber;$/;"	m	struct:tagChargeValence
nValue	include/inchi/ichirvrs.h	/^    S_CHAR nValue;         \/* flag(s) *\/$/;"	m	struct:tagAtomsCmpTwoMobileH
nValue	include/inchi/ichirvrs.h	/^    S_CHAR nValue; \/* flag(s) *\/$/;"	m	struct:tagAtomsCmpTwoFixedH
nVertexNumber	include/inchi/ichirvrs.h	/^    int nVertexNumber; \/* group vertex number; 0 = unassigned *\/$/;"	m	struct:tagTCGroup
nVertices	include/inchi/ichirvrs.h	/^    int      nVertices;  \/* total number of vertices *\/$/;"	m	struct:tagAllTCGroups
n_rmsd	src/confsearch.cpp	/^      int n_rmsd;$/;"	m	class:OpenBabel::OBDiversePoses	file:
na	src/mcdlutil.cpp	/^    short int na;   \/*Atom position in the Periodic Table (nucley charge)*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
name	include/libxml/HTMLparser.h	/^    const char *name;	\/* The entity name *\/$/;"	m	struct:_htmlEntityDesc
name	include/libxml/HTMLparser.h	/^    const char *name;	\/* The tag name *\/$/;"	m	struct:_htmlElemDesc
name	include/libxml/encoding.h	/^    char                       *name;$/;"	m	struct:_xmlCharEncodingHandler
name	include/libxml/entities.h	/^    const xmlChar          *name;	\/* Entity name *\/$/;"	m	struct:_xmlEntity
name	include/libxml/parser.h	/^    const xmlChar     *name;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt
name	include/libxml/schemasInternals.h	/^    const xmlChar *name;        \/* schema name *\/$/;"	m	struct:_xmlSchema
name	include/libxml/schemasInternals.h	/^    const xmlChar *name; \/* name of the declaration or empty if particle *\/$/;"	m	struct:_xmlSchemaAttribute
name	include/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaAttributeGroup
name	include/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaElement
name	include/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaNotation
name	include/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaType
name	include/libxml/tree.h	/^    char           *name;	\/* name\/filename\/URI of the document *\/$/;"	m	struct:_xmlDoc
name	include/libxml/tree.h	/^    const xmlChar               *name;	        \/* Notation name *\/$/;"	m	struct:_xmlNotation
name	include/libxml/tree.h	/^    const xmlChar             *name;	\/* Element name *\/$/;"	m	struct:_xmlElementContent
name	include/libxml/tree.h	/^    const xmlChar            *name;	\/* Enumeration name *\/$/;"	m	struct:_xmlEnumeration
name	include/libxml/tree.h	/^    const xmlChar          *name;	\/* Attribute name *\/$/;"	m	struct:_xmlAttribute
name	include/libxml/tree.h	/^    const xmlChar          *name;	\/* Element name *\/$/;"	m	struct:_xmlElement
name	include/libxml/tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlID
name	include/libxml/tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlRef
name	include/libxml/tree.h	/^    const xmlChar   *name;      \/* the name of the node, or the entity *\/$/;"	m	struct:_xmlNode
name	include/libxml/tree.h	/^    const xmlChar   *name;      \/* the name of the property *\/$/;"	m	struct:_xmlAttr
name	include/libxml/tree.h	/^    const xmlChar *name;	\/* Name of the DTD *\/$/;"	m	struct:_xmlDtd
name	include/libxml/xpath.h	/^    const xmlChar         *name;		\/* the type name *\/$/;"	m	struct:_xmlXPathType
name	include/libxml/xpath.h	/^    const xmlChar       *name;		\/* the variable name *\/$/;"	m	struct:_xmlXPathVariable
name	include/libxml/xpath.h	/^    const xmlChar      *name;		\/* the axis name *\/$/;"	m	struct:_xmlXPathAxis
name	include/libxml/xpath.h	/^    const xmlChar      *name;		\/* the function name *\/$/;"	m	struct:_xmlXPathFunct
name	include/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
name	src/chains.cpp	/^    const char *name; \/\/!< Residue name, standardized by PDB$/;"	m	struct:OpenBabel::__anon67	file:
nameMax	include/libxml/parser.h	/^    int                nameMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nameNr	include/libxml/parser.h	/^    int                nameNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nameTab	include/libxml/parser.h	/^    const xmlChar *   *nameTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt
nameWithWildcard	src/GUI/OBGUI.h	/^  wxString nameWithWildcard;$/;"	m	class:CFilenames
name_max	include/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
namedType	include/libxml/schemasInternals.h	/^    const xmlChar *namedType;$/;"	m	struct:_xmlSchemaElement
namedTypeNs	include/libxml/schemasInternals.h	/^    const xmlChar *namedTypeNs;$/;"	m	struct:_xmlSchemaElement
namespaces	include/libxml/xpath.h	/^    xmlNsPtr *namespaces;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext
natoms	src/confsearch.cpp	/^      int natoms;$/;"	m	class:OpenBabel::OBDiversePoses	file:
nb	src/mcdlutil.cpp	/^    int nb;$/;"	m	struct:OpenBabel::adjustedlist	file:
nb	src/mcdlutil.cpp	/^    short int nb;   \/*Number of neightboring atoms*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
nbChars	include/libxml/parser.h	/^    long               nbChars;       \/* number of xmlChar processed *\/$/;"	m	struct:_xmlParserCtxt
nbLongRange	include/libxml/chvalid.h	/^    int			nbLongRange;$/;"	m	struct:_xmlChRangeGroup
nbShortRange	include/libxml/chvalid.h	/^    int			nbShortRange;$/;"	m	struct:_xmlChRangeGroup
nb_axis	include/libxml/xpath.h	/^    int nb_axis;			\/* number of defined axis *\/$/;"	m	struct:_xmlXPathContext
nb_funcs_unused	include/libxml/xpath.h	/^    int nb_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
nb_niches	include/openbabel/conformersearch.h	/^      int nb_niches;		\/\/!< The number of dynamic niches to be found$/;"	m	class:OpenBabel::OBConformerSearch
nb_types	include/libxml/xpath.h	/^    int nb_types;			\/* number of defined types *\/$/;"	m	struct:_xmlXPathContext
nb_variables_unused	include/libxml/xpath.h	/^    int nb_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext
nbonds	src/formats/MCDLformat.cpp	/^  int nbonds;$/;"	m	class:OpenBabel::MCDLFormat	file:
nbrIndexes1	src/canon.cpp	/^      std::vector<unsigned int> nbrIndexes1, nbrIndexes2;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::StereoCenter	file:
nbrIndexes2	src/canon.cpp	/^      std::vector<unsigned int> nbrIndexes1, nbrIndexes2;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::StereoCenter	file:
nbrs	include/openbabel/parsmart.h	/^    std::vector<int> nbrs;$/;"	m	struct:OpenBabel::__anon55
nbrs	src/formats/smiley.h	/^        std::vector<int> nbrs;$/;"	m	struct:Smiley::Parser::ChiralInfo
nc	src/mcdlutil.cpp	/^    short int nc;   \/*-9..+9 atom's charge*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
ncFlags	include/inchi/inchi_dll_a.h	/^                    ncFlags;$/;"	m	struct:tagINCHIGEN_CONTROL
ne	src/formats/cifformat.cpp	/^  bool ci_char_traits::ne( char c1, char c2 )$/;"	f	class:OpenBabel::ci_char_traits
needed_unusual_el_valence	src/formats/libinchi/util.c	/^int needed_unusual_el_valence( int nPeriodicNum, int charge, int radical, int bonds_valence,$/;"	f
negNsSet	include/libxml/schemasInternals.h	/^    xmlSchemaWildcardNsPtr negNsSet; \/* The negated namespace *\/$/;"	m	struct:_xmlSchemaWildcard
neigh	include/inchi/ichirvrs.h	/^    S_SHORT neigh;$/;"	m	struct:tagEdgeCapFlow
neigh	src/formats/libinchi/ichiread.c	/^    AT_NUMB neigh; \/* canonical number of a neighbor *\/$/;"	m	struct:tagOneLinkedBond	file:
neigh_ord	include/inchi/ichi_bns.h	/^  AT_NUMB   neigh_ord[2];                   \/* ordering number of the neighbor: [0]: at<neighbor, [1]: at>neighbor *\/$/;"	m	struct:BnsEdge
neighbor	include/inchi/extr_ct.h	/^    AT_NUMB    neighbor[MAXVAL]; \/* changed to unsigned 2-2-95. D.Ch. *\/$/;"	m	struct:tagAtom
neighbor	include/inchi/inchi_api.h	/^    AT_NUM  neighbor[4];    \/* 4 atoms always *\/$/;"	m	struct:tagINCHIStereo0D
neighbor	include/inchi/inchi_api.h	/^    AT_NUM  neighbor[MAXVAL];     \/* adjacency list: ordering numbers of *\/$/;"	m	struct:tagInchiAtom
neighbor	include/inchi/inchi_api.h	/^    AT_NUMBR      neighbor[MAXVAL];         \/* positions (from 0) of the neighbors in the NORM_ATOM array *\/$/;"	m	struct:tagNormAtom
neighbor	include/inchi/inpdef.h	/^    AT_NUMB       neighbor[MAXVAL];        \/* positions (from 0) of the neighbors in the inp_ATOM array *\/$/;"	m	struct:tagInputAtom
neighbor	include/inchi_api.h	/^    AT_NUM  neighbor[4];    \/* 4 atoms always *\/$/;"	m	struct:tagINCHIStereo0D
neighbor	include/inchi_api.h	/^    AT_NUM  neighbor[MAXVAL];     \/* adjacency list: ordering numbers of *\/$/;"	m	struct:tagInchiAtom
neighbor	include/inchi_api.h	/^    AT_NUMBR      neighbor[MAXVAL];         \/* positions (from 0) of the neighbors in the NORM_ATOM array *\/$/;"	m	struct:tagNormAtom
neighbor	src/formats/libinchi/ichinorm.c	/^    AT_NUMB    neighbor[MAXVAL];        \/* positions (from 0) of the neighbors in the inp_ATOM array *\/$/;"	m	struct:tagTreeAtom	file:
neighbor1	include/inchi/ichi_bns.h	/^  AT_NUMB   neighbor1;                      \/* the smaller neighbor *\/$/;"	m	struct:BnsEdge
neighbor12	include/inchi/ichi_bns.h	/^  AT_NUMB   neighbor12;                     \/* neighbor1 ^ neighbor2 *\/$/;"	m	struct:BnsEdge
neighbor_index	include/inchi/ichitaut.h	/^    AT_NUMB neighbor_index;$/;"	m	struct:tagTautomerBondLocation
neighbourlist	src/mcdlutil.cpp	/^  typedef adjustedlist neighbourlist;$/;"	t	namespace:OpenBabel	file:
neutral_bonds_valence	src/formats/libinchi/ichitaut.c	/^    S_CHAR  neutral_bonds_valence; \/* valence of a neutral atom *\/$/;"	m	struct:tagChargeType	file:
neutral_valence	src/formats/libinchi/ichitaut.c	/^    S_CHAR  neutral_valence;$/;"	m	struct:tagChargeType	file:
newB	src/mcdlutil.cpp	/^  void TSimpleMolecule::newB(neighbourlist * bk, int bnum, int anum, int & total, int * e, int * e1) {$/;"	f	class:OpenBabel::TSimpleMolecule
new_c_num_locale	src/locale.cpp	/^    locale_t new_c_num_locale;$/;"	m	class:OpenBabel::OBLocalePrivate	file:
new_ord	src/formats/libinchi/runichi.c	/^    AT_RANK       *new_ord;$/;"	m	struct:tagRenumbData	file:
next	include/libxml/entities.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaAnnot *next;$/;"	m	struct:_xmlSchemaAnnot	typeref:struct:_xmlSchemaAnnot::_xmlSchemaAnnot
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *next;\/* the next attribute if in a group ... *\/$/;"	m	struct:_xmlSchemaAttribute	typeref:struct:_xmlSchemaAttribute::_xmlSchemaAttribute
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *next;\/* the next attribute if in a group ... *\/$/;"	m	struct:_xmlSchemaAttributeGroup	typeref:struct:_xmlSchemaAttributeGroup::_xmlSchemaAttribute
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaAttributeLink *next;\/* the next attribute link ... *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttributeLink
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaFacet *next;\/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaFacet	typeref:struct:_xmlSchemaFacet::_xmlSchemaFacet
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaFacetLink *next;\/* the next facet link ... *\/$/;"	m	struct:_xmlSchemaFacetLink	typeref:struct:_xmlSchemaFacetLink::_xmlSchemaFacetLink
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaType *next;\/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaType
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaType *next;\/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaTypeLink *next;\/* the next type link ... *\/$/;"	m	struct:_xmlSchemaTypeLink	typeref:struct:_xmlSchemaTypeLink::_xmlSchemaTypeLink
next	include/libxml/schemasInternals.h	/^    struct _xmlSchemaWildcardNs *next;\/* the next constraint link ... *\/$/;"	m	struct:_xmlSchemaWildcardNs	typeref:struct:_xmlSchemaWildcardNs::_xmlSchemaWildcardNs
next	include/libxml/tree.h	/^    struct _xmlAttr *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr
next	include/libxml/tree.h	/^    struct _xmlEnumeration    *next;	\/* next one *\/$/;"	m	struct:_xmlEnumeration	typeref:struct:_xmlEnumeration::_xmlEnumeration
next	include/libxml/tree.h	/^    struct _xmlID    *next;	\/* next ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlID
next	include/libxml/tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
next	include/libxml/tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
next	include/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
next	include/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
next	include/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
next	include/libxml/tree.h	/^    struct _xmlNs  *next;	\/* next Ns link for this node  *\/$/;"	m	struct:_xmlNs	typeref:struct:_xmlNs::_xmlNs
next	include/libxml/tree.h	/^    struct _xmlRef    *next;	\/* next Ref *\/$/;"	m	struct:_xmlRef	typeref:struct:_xmlRef::_xmlRef
next	include/openbabel/obiter.h	/^    OBAtom* next()$/;"	f	class:OpenBabel::OBMolAtomDFSIter
next	include/openbabel/rotor.h	/^    bool next()$/;"	f	class:OpenBabel::rotor_digit
next	src/chains.cpp	/^    union _ByteCode *next;$/;"	m	struct:OpenBabel::__anon70	typeref:union:OpenBabel::__anon70::_ByteCode	file:
next	src/formats/libinchi/ichican2.c	/^    int       next;   \/* next after the last index *\/$/;"	m	struct:tagCell	file:
nextAtRank	src/formats/libinchi/ichican2.c	/^    AT_RANK  *nextAtRank;   \/* rank (k value) after the last node of the Ctbl portion*\/$/;"	m	struct:tagCTable	file:
nextCtblPos	src/formats/libinchi/ichican2.c	/^    AT_NUMB  *nextCtblPos;  \/* first unused element of Ctbl *\/$/;"	m	struct:tagCTable	file:
next_	include/openbabel/json/json.h	/^      ValueInternalLink *next_;$/;"	m	class:Json::ValueInternalLink
next_	src/formats/json/jsoncpp.cpp	/^      BatchInfo *next_;$/;"	m	struct:Json::BatchAllocator::BatchInfo	file:
next_at_same_depth	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::next_at_same_depth(iter position) const$/;"	f	class:tree
next_char	src/formats/mmcifformat.cpp	/^   int  last_char, next_char;$/;"	m	class:OpenBabel::CIFLexer	file:
next_in	include/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	include/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_sibling	include/openbabel/tree/tree.hh	/^		tree_node_<T> *prev_sibling, *next_sibling;$/;"	m	class:tree_node_
next_sibling	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::next_sibling(iter position) const$/;"	f	class:tree
next_token	src/formats/mmcifformat.cpp	/^ bool CIFLexer::next_token(CIFLexer::Token & token)$/;"	f	class:OpenBabel::CIFLexer
nexte	include/libxml/entities.h	/^    struct _xmlEntity     *nexte;	\/* unused *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlEntity
nexth	include/libxml/tree.h	/^    struct _xmlAttribute  *nexth;	\/* next in hash table *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlAttribute
nextmol	src/formats/xml/cmlreactformat.cpp	/^  int nextmol;$/;"	m	class:OpenBabel::CMLReactFormat	file:
nibble_bit_count	src/bitvec.cpp	/^  const unsigned nibble_bit_count[0x10] =$/;"	m	namespace:OpenBabel	file:
niche_map	include/openbabel/conformersearch.h	/^      std::vector<int> niche_map;                     \/\/!< Procide the sharing niche index, given the key inddex$/;"	m	class:OpenBabel::OBConformerSearch
niche_mating	include/openbabel/conformersearch.h	/^      double niche_mating;	\/\/!< Probability of forcing the second parent in the first parent$/;"	m	class:OpenBabel::OBConformerSearch
niche_radius	include/openbabel/conformersearch.h	/^      int niche_radius;		\/\/!< A pre-determined niche radius, for dynamic niche sharing.$/;"	m	class:OpenBabel::OBConformerSearch
nmatches	src/ops/opisomorph.h	/^  int nmatches;$/;"	m	class:OpenBabel::OpNewS
nmols	src/formats/fastsearchformat.cpp	/^    int nmols; \/\/number mols in data file$/;"	m	class:OpenBabel::FastSearchFormat	file:
noDuplication	include/openbabel/json/json.h	/^            noDuplication = 0,$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
noMargin	include/openbabel/depict/depict.h	/^        noMargin             = 0x0004,$/;"	e	enum:OpenBabel::OBDepict::OptionType
noWedgeHashGen	include/openbabel/depict/depict.h	/^        noWedgeHashGen       = 0x0100,$/;"	e	enum:OpenBabel::OBDepict::OptionType
node	include/libxml/debugXML.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlShellCtxt
node	include/libxml/parser.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt
node	include/libxml/parser.h	/^  const struct _xmlNode* node;$/;"	m	struct:_xmlParserNodeInfo	typeref:struct:_xmlParserNodeInfo::_xmlNode
node	include/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttribute
node	include/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttributeGroup
node	include/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaElement
node	include/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaFacet
node	include/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaType
node	include/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaWildcard
node	include/libxml/valid.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlValidCtxt
node	include/libxml/xmlerror.h	/^    void       *node;   \/* the node in the tree *\/$/;"	m	struct:_xmlError
node	include/libxml/xpath.h	/^    xmlNodePtr node;			\/* The current node *\/$/;"	m	struct:_xmlXPathContext
node	include/openbabel/tree/tree.hh	/^				tree_node *node;$/;"	m	class:tree::iterator_base
nodeMax	include/libxml/parser.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nodeMax	include/libxml/valid.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt
nodeMax	include/libxml/xpath.h	/^    int nodeMax;		\/* size of the array as allocated *\/$/;"	m	struct:_xmlNodeSet
nodeNr	include/libxml/parser.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
nodeNr	include/libxml/valid.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt
nodeNr	include/libxml/xpath.h	/^    int nodeNr;			\/* number of nodes in the set *\/$/;"	m	struct:_xmlNodeSet
nodeTab	include/libxml/parser.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt
nodeTab	include/libxml/valid.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlValidCtxt
nodeTab	include/libxml/xpath.h	/^    xmlNodePtr *nodeTab;	\/* array of nodes in no particular order *\/$/;"	m	struct:_xmlNodeSet
node_seq	include/libxml/parser.h	/^    xmlParserNodeInfoSeq node_seq;    \/* info about each node parsed *\/$/;"	m	struct:_xmlParserCtxt
nodelen	include/libxml/parser.h	/^    int                nodelen;       \/* Those two fields are there to *\/$/;"	m	struct:_xmlParserCtxt
nodemem	include/libxml/parser.h	/^    int                nodemem;       \/* Speed up large node parsing *\/$/;"	m	struct:_xmlParserCtxt
nodes_	include/openbabel/json/json.h	/^      Nodes nodes_;$/;"	m	class:Json::Reader
nodesetval	include/libxml/xpath.h	/^    xmlNodeSetPtr nodesetval;$/;"	m	struct:_xmlXPathObject
non_tree_edge	include/OB-BGL/verbose_visitors.h	/^    void non_tree_edge( edge e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
none	src/formats/chemdrawcdx.cpp	/^  enum graphicType {none, equilArrow};$/;"	e	enum:OpenBabel::ChemDrawBinaryXFormat::graphicType	file:
norm_passed	include/inchi/inchi_dll_a.h	/^    int             norm_passed;$/;"	m	struct:tagINCHIGEN_CONTROL
normal	src/isomorphism.cpp	/^  static const char *normal = "\\033[0m";$/;"	m	namespace:OpenBabel	file:
normal	src/pointgroup.cpp	/^      double  normal[ DIMENSION ] ;$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
normalize	src/math/vector3.cpp	/^  vector3& vector3 :: normalize ()$/;"	f	class:OpenBabel::vector3
normalizeCoordinates	src/mcdlutil.cpp	/^  void TSimpleMolecule::normalizeCoordinates(double aveBL) {$/;"	f	class:OpenBabel::TSimpleMolecule
normalizeEOL	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::normalizeEOL( const std::string &text )$/;"	f	class:Json::StyledStreamWriter
normalizeEOL	src/formats/json/jsoncpp.cpp	/^StyledWriter::normalizeEOL( const std::string &text )$/;"	f	class:Json::StyledWriter
normalize_name	src/formats/libinchi/util.c	/^int normalize_name( char* name )$/;"	f
notFound	src/formats/exyzformat.cpp	23;"	d	file:
notFound	src/formats/orcaformat.cpp	27;"	d	file:
notaDecl	include/libxml/schemasInternals.h	/^    xmlHashTablePtr notaDecl;$/;"	m	struct:_xmlSchema
notationDecl	include/libxml/parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandler
notationDecl	include/libxml/parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandlerV1
notationDeclSAXFunc	include/libxml/parser.h	/^typedef void (*notationDeclSAXFunc)(void *ctx,$/;"	t
notations	include/libxml/tree.h	/^    void          *notations;   \/* Hash table for notations if any *\/$/;"	m	struct:_xmlDtd
nparam	src/pointgroup.cpp	/^      int     nparam ;        \/*   4 for inversion and planes, 7 for axes              *\/$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
ns	include/libxml/tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlAttr
ns	include/libxml/tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlNode
nsDef	include/libxml/tree.h	/^    xmlNs           *nsDef;     \/* namespace definitions on this node *\/$/;"	m	struct:_xmlNode
nsHash	include/libxml/xpath.h	/^    xmlHashTablePtr nsHash;		\/* The namespaces hash table *\/$/;"	m	struct:_xmlXPathContext
nsMax	include/libxml/parser.h	/^    int                nsMax;         \/* the size of the arrays *\/$/;"	m	struct:_xmlParserCtxt
nsNr	include/libxml/parser.h	/^    int                nsNr;          \/* the number of inherited namespaces *\/$/;"	m	struct:_xmlParserCtxt
nsNr	include/libxml/xpath.h	/^    int nsNr;				\/* number of namespace in scope *\/$/;"	m	struct:_xmlXPathContext
nsSet	include/libxml/schemasInternals.h	/^    xmlSchemaWildcardNsPtr nsSet; \/* The list of allowed namespaces *\/$/;"	m	struct:_xmlSchemaWildcard
nsTab	include/libxml/parser.h	/^    const xmlChar *   *nsTab;         \/* the array of prefix\/namespace name *\/$/;"	m	struct:_xmlParserCtxt
nsWellFormed	include/libxml/parser.h	/^    int                nsWellFormed;  \/* is the document XML Nanespace okay *\/$/;"	m	struct:_xmlParserCtxt
nsdecl	include/openbabel/xml.h	/^      std::string nsdecl;$/;"	m	class:OpenBabel::XMLBaseFormat
ntatoms	src/formats/MCDLformat.cpp	/^  int ntatoms;$/;"	m	class:OpenBabel::MCDLFormat	file:
null	include/openbabel/json/json.h	/^      static const Value null;$/;"	m	class:Json::Value
null	src/formats/json/jsoncpp.cpp	/^const Value Value::null;$/;"	m	class:Json::Value	file:
nullValue	include/openbabel/json/json.h	/^      nullValue = 0, \/\/\/< 'null' value$/;"	e	enum:Json::ValueType
num	include/inchi/ichitaut.h	/^    AT_NUMB  num[T_NUM_ISOTOPIC]; \/* inverted order: num_T, num_D, num_1H *\/$/;"	m	struct:tagIsotopicTautomerGroup
num	include/inchi/ichitaut.h	/^    AT_RANK   num[2]; \/* [0]: number of (+), [1]: number atoms that have H, including H accessible through tautomerism *\/$/;"	m	struct:tagChargeGroup
num	include/inchi/ichitaut.h	/^    AT_RANK num[T_NUM_NO_ISOTOPIC+T_NUM_ISOTOPIC];    \/* same size and meaning as num[] in T_GROUP *\/$/;"	m	struct:tagTautomerEndpoint
num	include/inchi/ichitaut.h	/^    AT_RANK num[T_NUM_NO_ISOTOPIC+T_NUM_ISOTOPIC];  \/* same size and meaning as num[] in T_ENDPOINT *\/$/;"	m	struct:tagTautomerGroup
num	src/formats/libinchi/ichicans.c	/^    AT_RANK       num;       \/*  number of same type bonds to constitutionally equivalent neighbors *\/$/;"	m	struct:tagStereoBondNeighbor	file:
num	src/formats/libinchi/ichinorm.c	/^    AT_NUMB num;$/;"	m	union:tagAtTypeUnion	file:
num	src/formats/libinchi/ichinorm.c	/^    char num[DERIV_AT_LEN];$/;"	m	struct:tagDerivAttachment	file:
num	src/formats/libinchi/ichiread.c	/^    int num;$/;"	m	struct:tagNumElem	file:
num	src/formats/libinchi/ichirvr2.c	/^    AT_NUMB num;$/;"	m	struct:tagMobileGroupList	file:
numConnections	src/formats/smilesformat.cpp	/^      int numConnections;$/;"	m	struct:OpenBabel::OBSmilesParser::RingClosureBond	file:
numPoints	src/formats/adfformat.cpp	/^        int numPoints[ 3 ];$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
numSymmetries	src/formats/adfformat.cpp	/^        int numSymmetries;$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
num_1H	include/inchi/extr_ct.h	/^    NUM_H          num_1H;$/;"	m	struct:tagIsotopicAtom
num_CPoints	include/inchi/ichitaut.h	/^    AT_RANK   num_CPoints;$/;"	m	struct:tagChargeGroup
num_D	include/inchi/extr_ct.h	/^    NUM_H          num_D;$/;"	m	struct:tagIsotopicAtom
num_DA	include/inchi/ichitaut.h	/^    AT_RANK num_DA[TG_NUM_DA];$/;"	m	struct:tagTautomerEndpoint
num_DA	include/inchi/ichitaut.h	/^    AT_RANK num_DA[TG_NUM_DA];$/;"	m	struct:tagTautomerGroup
num_H	include/inchi/extr_ct.h	/^    S_CHAR num_H;              \/* first not including D, T; add_DT_to_num_H() includes. *\/$/;"	m	struct:tagAtom
num_H	include/inchi/inchi_api.h	/^    S_CHAR        num_H;                    \/* number of adjacent implicit hydrogen atoms including D and T    *\/$/;"	m	struct:tagNormAtom
num_H	include/inchi/inpdef.h	/^    S_CHAR        num_H;                   \/* number of implicit hydrogens including D and T    *\/$/;"	m	struct:tagInputAtom
num_H	include/inchi_api.h	/^    S_CHAR        num_H;                    \/* number of adjacent implicit hydrogen atoms including D and T    *\/$/;"	m	struct:tagNormAtom
num_T	include/inchi/extr_ct.h	/^    NUM_H          num_T;$/;"	m	struct:tagIsotopicAtom
num_added_atoms	include/inchi/ichi_bns.h	/^    int num_added_atoms;  \/* number of added fictitious atoms *\/$/;"	m	struct:BalancedNetworkStructure
num_added_edges	include/inchi/ichi_bns.h	/^    int num_added_edges;  \/* number of added edges (not including edges to t-groups) *\/$/;"	m	struct:BalancedNetworkStructure
num_adj_edges	include/inchi/ichi_bns.h	/^  AT_NUMB     num_adj_edges;               \/* 3, actual number of neighbors incl. t-groups, excl. s or t *\/$/;"	m	struct:BnsVertex
num_alloc	include/inchi/ichirvrs.h	/^    int num_alloc;$/;"	m	struct:tagEdgeList
num_altp	include/inchi/ichi_bns.h	/^    int            num_altp;$/;"	m	struct:BalancedNetworkStructure
num_any_parity	src/formats/libinchi/ichicans.c	/^    AT_RANK       num_any_parity;     \/*  at least one atom has parity in 1..4 range *\/$/;"	m	struct:tagStereoBondNeighbor	file:
num_at	include/inchi/ichirvrs.h	/^    int      num_at;$/;"	m	struct:tagBfsQueue
num_at	include/inchi/inchi_api.h	/^    int       num_at;               \/* number of atoms except removed terminal H *\/$/;"	m	struct:tagNormAtomData
num_at	include/inchi/inpdef.h	/^    int        num_at;$/;"	m	struct:tagInfoAtomData
num_at	include/inchi/inpdef.h	/^    int       num_at;$/;"	m	struct:tagCompositeAtomData
num_at	include/inchi/inpdef.h	/^    int       num_at;$/;"	m	struct:tagInputAtomData
num_at	include/inchi_api.h	/^    int       num_at;               \/* number of atoms except removed terminal H *\/$/;"	m	struct:tagNormAtomData
num_at_tg	include/inchi/ichicant.h	/^    int                  num_at_tg;  \/* all of the following arrays have this length *\/$/;"	m	struct:tagBaseCanonNumbering
num_at_tg	include/inchi/ichicant.h	/^    int             num_at_tg;  \/* = num_atoms for non-taut *\/$/;"	m	struct:tagFixHOrTautCanonNumbering
num_at_tg	include/inchi/inchi_dll_a.h	/^    int num_at_tg;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
num_atoms	include/inchi/ichi_bns.h	/^    int num_atoms;        \/* number of real atoms *\/$/;"	m	struct:BalancedNetworkStructure
num_atoms	include/inchi/ichicant.h	/^    int                  num_atoms;$/;"	m	struct:tagBaseCanonNumbering
num_atoms	include/inchi/ichicant.h	/^    int             num_atoms;$/;"	m	struct:tagFixHOrTautCanonNumbering
num_atoms	include/inchi/ichirvrs.h	/^    int           num_atoms;$/;"	m	struct:tagStructFromInChI
num_atoms	include/inchi/ichirvrs.h	/^    int         num_atoms; \/* number of atoms including explicit H *\/$/;"	m	struct:tagInputInChI
num_atoms	include/inchi/ichirvrs.h	/^    int      num_atoms;  \/* number of atoms *\/$/;"	m	struct:tagAllTCGroups
num_atoms	include/inchi/inchi_api.h	/^    AT_NUM          num_atoms;    \/* number of atoms in the structure < 1024 *\/$/;"	m	struct:tagINCHI_Input
num_atoms	include/inchi/inchi_api.h	/^    AT_NUM          num_atoms;    \/* number of atoms in the structure < 1024 *\/$/;"	m	struct:tagINCHI_OutputStruct
num_atoms	include/inchi/inchi_dll_a.h	/^    int num_atoms;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
num_atoms	include/inchi/inpdef.h	/^    int num_atoms;$/;"	m	struct:tagOriginalStruct
num_atoms	include/inchi_api.h	/^    AT_NUM          num_atoms;    \/* number of atoms in the structure < 1024 *\/$/;"	m	struct:tagINCHI_Input
num_atoms	include/inchi_api.h	/^    AT_NUM          num_atoms;    \/* number of atoms in the structure < 1024 *\/$/;"	m	struct:tagINCHI_OutputStruct
num_bit	src/formats/libinchi/ichican2.c	/^static int    num_bit = 0;     $/;"	v	file:
num_bonds	include/inchi/ichi_bns.h	/^    int num_bonds;        \/* number of real bonds\/2 = number of edges between real atoms *\/$/;"	m	struct:BalancedNetworkStructure
num_bonds	include/inchi/ichirvrs.h	/^    char   num_bonds;$/;"	m	struct:tagChargeChangeCandidate
num_bonds	include/inchi/ichirvrs.h	/^    int      num_bonds;  \/* number of bonds *\/$/;"	m	struct:tagAllTCGroups
num_bonds	include/inchi/inchi_api.h	/^    AT_NUM  num_bonds;            \/* number of neighbors, bond types and bond*\/$/;"	m	struct:tagInchiAtom
num_bonds	include/inchi/inchi_api.h	/^    int       num_bonds;$/;"	m	struct:tagNormAtomData
num_bonds	include/inchi/inpdef.h	/^    int       num_bonds;$/;"	m	struct:tagCompositeAtomData
num_bonds	include/inchi/inpdef.h	/^    int       num_bonds;$/;"	m	struct:tagInputAtomData
num_bonds	include/inchi_api.h	/^    AT_NUM  num_bonds;            \/* number of neighbors, bond types and bond*\/$/;"	m	struct:tagInchiAtom
num_bonds	include/inchi_api.h	/^    int       num_bonds;$/;"	m	struct:tagNormAtomData
num_bonds	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  num_bonds;$/;"	m	struct:tagMobileHGroups	file:
num_bonds	src/formats/libinchi/ichitaut.c	/^    S_CHAR  num_bonds;      \/* added 02-06-2005 *\/$/;"	m	struct:tagChargeType	file:
num_bonds_non_metal	src/formats/libinchi/ichirvr2.c	/^    S_CHAR  num_bonds_non_metal;$/;"	m	struct:tagMobileHGroups	file:
num_c_groups	include/inchi/ichi_bns.h	/^    int num_c_groups;     \/* number of added c-groups *\/$/;"	m	struct:BalancedNetworkStructure
num_c_groups	include/inchi/ichitaut.h	/^    int     num_c_groups;$/;"	m	struct:tagChargeGroupsInfo
num_candidates	include/inchi/ichitaut.h	/^    int          num_candidates; \/* 0=>unimitialized, -1=>no candidates found *\/$/;"	m	struct:tagChargeGroupsInfo
num_candidates	include/inchi/ichitaut.h	/^    int          num_candidates; \/* 0=>unimitialized, -1=>no candidates found *\/$/;"	m	struct:tagSaltGroupInfo
num_components	include/inchi/ichimain.h	/^    int           num_components[INCHI_NUM]; \/* number of allocated INChI, INChI_Aux data structures *\/$/;"	m	struct:tagStructData
num_components	include/inchi/ichirvrs.h	/^    int          num_components[INCHI_NUM];$/;"	m	struct:tagReversedInChI
num_components	include/inchi/inchi_api.h	/^    int           num_components[INCHI_NUM];  \/* number of allocated INChI, INChI_Aux data structures *\/$/;"	m	struct:tagINCHIGEN_DATA
num_components	include/inchi/inpdef.h	/^    AT_NUMB    num_components;$/;"	m	struct:tagInfoAtomData
num_components	include/inchi/inpdef.h	/^    int       num_components;$/;"	m	struct:tagCompositeAtomData
num_components	include/inchi/inpdef.h	/^    int num_components;    \/* set by MarkDisconnectedComponents() and disconnecting metals *\/$/;"	m	struct:tagOrigAtom
num_components	include/inchi_api.h	/^    int           num_components[INCHI_NUM];  \/* number of allocated INChI, INChI_Aux data structures *\/$/;"	m	struct:tagINCHIGEN_DATA
num_defined_parity	src/formats/libinchi/ichicans.c	/^    AT_RANK       num_defined_parity; \/*  number of neighbors with defined parity <= num *\/$/;"	m	struct:tagStereoBondNeighbor	file:
num_deleted_H	include/inchi/ichirvrs.h	/^    int           num_deleted_H; \/* if requested and Fixed-H InChI is available *\/$/;"	m	struct:tagStructFromInChI
num_deleted_H	include/inchi/inchi_dll_a.h	/^    int num_deleted_H;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
num_deleted_H_taut	include/inchi/inchi_dll_a.h	/^    int num_deleted_H_taut;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
num_diff_pos_H	include/inchi/strutil.h	/^    int     num_diff_pos_H;$/;"	m	struct:tagInChICompareResults
num_dimensions	include/inchi/inpdef.h	/^    int num_dimensions;$/;"	m	struct:tagOrigAtom
num_edges	include/OB-BGL/mol_graph.h	/^  int num_edges( const OpenBabel::OBMol& m )$/;"	f	namespace:boost
num_edges	include/inchi/ichi_bns.h	/^    int num_edges;        \/* number of currently in effect *\/$/;"	m	struct:BalancedNetworkStructure
num_edges	include/inchi/ichirvrs.h	/^    int num_edges;$/;"	m	struct:tagEdgeList
num_edges	include/inchi/ichirvrs.h	/^    int num_edges;$/;"	m	struct:tagTCGroup
num_endp_in1_only	include/inchi/strutil.h	/^    int     num_endp_in1_only;$/;"	m	struct:tagInChICompareResults
num_endp_in2_only	include/inchi/strutil.h	/^    int     num_endp_in2_only;$/;"	m	struct:tagInChICompareResults
num_err	include/inchi/inchi_dll_a.h	/^    long            num_err;$/;"	m	struct:tagINCHIGEN_CONTROL
num_explicit_H	include/inchi/ichirvrs.h	/^    int         num_explicit_H; \/* number of explicit H in the atom *\/$/;"	m	struct:tagInputInChI
num_fixed_H1_more	include/inchi/strutil.h	/^    int     num_fixed_H1_more;$/;"	m	struct:tagInChICompareResults
num_fixed_H2_more	include/inchi/strutil.h	/^    int     num_fixed_H2_more;$/;"	m	struct:tagInChICompareResults
num_iedges	include/inchi/ichi_bns.h	/^    int num_iedges;       \/* added 9-16-2005; used only in InChI Reversing *\/$/;"	m	struct:BalancedNetworkStructure
num_inp	include/inchi/ichirvrs.h	/^    long        num_inp;$/;"	m	struct:tagInputInChI
num_inp	include/inchi/inchi_dll_a.h	/^    long            num_inp;$/;"	m	struct:tagINCHIGEN_CONTROL
num_inp_actual	include/inchi/ichirvrs.h	/^    long        num_inp_actual;$/;"	m	struct:tagStructFromInChI
num_inp_atoms	include/inchi/inpdef.h	/^    int num_inp_atoms;$/;"	m	struct:tagOrigAtom
num_inp_bonds	include/inchi/inpdef.h	/^    int num_inp_bonds;$/;"	m	struct:tagOrigAtom
num_iso_H	include/inchi/extr_ct.h	/^    S_CHAR num_iso_H[NUM_H_ISOTOPES];   \/* num 1H, 2H(D), 3H(T) *\/$/;"	m	struct:tagAtom
num_iso_H	include/inchi/ichitaut.h	/^    NUM_H     num_iso_H[NUM_H_ISOTOPES]; \/* isotopic H on tautomeric atoms and those in nIsotopicEndpointAtomNumber *\/$/;"	m	struct:tagTautomerGroupsInfo
num_iso_H	include/inchi/inchi_api.h	/^    NUM_HS    num_iso_H[NUM_H_ISOTOPES]; $/;"	m	struct:tagNormAtomData
num_iso_H	include/inchi/inchi_api.h	/^    S_CHAR        num_iso_H[NUM_H_ISOTOPES];\/* number of adjacent implicit 1H(protium), 2H(D), 3H(T) < 16 *\/$/;"	m	struct:tagNormAtom
num_iso_H	include/inchi/inchi_api.h	/^    S_CHAR  num_iso_H[NUM_H_ISOTOPES+1]; \/* implicit hydrogen atoms *\/$/;"	m	struct:tagInchiAtom
num_iso_H	include/inchi/inpdef.h	/^    NUM_H      num_iso_H[NUM_H_ISOTOPES]; \/* number of exchangable isotopic H *\/$/;"	m	struct:tagInfoAtomData
num_iso_H	include/inchi/inpdef.h	/^    NUM_H     num_iso_H[NUM_H_ISOTOPES]; \/* isotopic H on tautomeric atoms and those in nIsotopicEndpointAtomNumber *\/$/;"	m	struct:tagCompositeAtomData
num_iso_H	include/inchi/inpdef.h	/^    NUM_H     num_iso_H[NUM_H_ISOTOPES]; \/* isotopic H on tautomeric atoms and those in nIsotopicEndpointAtomNumber *\/$/;"	m	struct:tagInputAtomData
num_iso_H	include/inchi/inpdef.h	/^    S_CHAR        num_iso_H[NUM_H_ISOTOPES]; \/* number of implicit 1H, 2H(D), 3H(T) < 16 *\/$/;"	m	struct:tagInputAtom
num_iso_H	include/inchi_api.h	/^    NUM_HS    num_iso_H[NUM_H_ISOTOPES]; $/;"	m	struct:tagNormAtomData
num_iso_H	include/inchi_api.h	/^    S_CHAR        num_iso_H[NUM_H_ISOTOPES];\/* number of adjacent implicit 1H(protium), 2H(D), 3H(T) < 16 *\/$/;"	m	struct:tagNormAtom
num_iso_H	include/inchi_api.h	/^    S_CHAR  num_iso_H[NUM_H_ISOTOPES+1]; \/* implicit hydrogen atoms *\/$/;"	m	struct:tagInchiAtom
num_isotopic	include/inchi/inchi_api.h	/^    int       num_isotopic;         \/* number of isotopic atoms *\/$/;"	m	struct:tagNormAtomData
num_isotopic	include/inchi/inpdef.h	/^    int       num_isotopic;$/;"	m	struct:tagCompositeAtomData
num_isotopic	include/inchi/inpdef.h	/^    int       num_isotopic;$/;"	m	struct:tagInputAtomData
num_isotopic	include/inchi_api.h	/^    int       num_isotopic;         \/* number of isotopic atoms *\/$/;"	m	struct:tagNormAtomData
num_isotopic_atoms	include/inchi/ichitaut.h	/^    int num_isotopic_atoms;  \/* includes atoms that have isotopic tautomeric H *\/$/;"	m	struct:tagAtomSizes
num_max	include/inchi/ichicant.h	/^    int                  num_max;        \/* allocated nRank[] arrays lengths in pRankStack *\/$/;"	m	struct:tagBaseCanonNumbering
num_metal_atoms	include/inchi/ichirvrs.h	/^    int      num_metal_atoms;   \/* number of metal atoms *\/$/;"	m	struct:tagAllTCGroups
num_metal_bonds	include/inchi/ichirvrs.h	/^    int      num_metal_bonds;   \/* number of atom-metal bonds *\/$/;"	m	struct:tagAllTCGroups
num_non_taut	include/inchi/ichimain.h	/^    int           num_non_taut[INCHI_NUM];$/;"	m	struct:tagStructData
num_non_taut	src/formats/libinchi/runichi.c	/^    int            num_taut, num_non_taut, num_taut0, num_non_taut0;$/;"	m	struct:tagRenumbData	file:
num_non_taut0	src/formats/libinchi/runichi.c	/^    int            num_taut, num_non_taut, num_taut0, num_non_taut0;$/;"	m	struct:tagRenumbData	file:
num_of_H	src/formats/libinchi/util.c	/^int num_of_H( inp_ATOM *at, int iat )$/;"	f
num_of_atoms	src/formats/mdffformat.cpp	/^    int num_of_atoms;$/;"	m	struct:OpenBabel::atm_t_prop	file:
num_other_candidates	include/inchi/ichitaut.h	/^    int          num_other_candidates; \/* num. non-"acidic O" candidates *\/$/;"	m	struct:tagSaltGroupInfo
num_p_only_candidates	include/inchi/ichitaut.h	/^    int          num_p_only_candidates; \/* num. non-tautomeric p-donor\/acceptor candidates like -CH2-SH *\/$/;"	m	struct:tagSaltGroupInfo
num_paths	include/inchi/ichidrp.h	/^    int             num_paths;$/;"	m	struct:tagInputParms
num_removed_H	include/inchi/inchi_api.h	/^    int       num_removed_H;        \/* number of removed H; at[] has (num_at+num_removed_H) elements *\/$/;"	m	struct:tagNormAtomData
num_removed_H	include/inchi/inpdef.h	/^    int       num_removed_H;$/;"	m	struct:tagCompositeAtomData
num_removed_H	include/inchi/inpdef.h	/^    int       num_removed_H;$/;"	m	struct:tagInputAtomData
num_removed_H	include/inchi_api.h	/^    int       num_removed_H;        \/* number of removed H; at[] has (num_at+num_removed_H) elements *\/$/;"	m	struct:tagNormAtomData
num_removed_iso_H	include/inchi/inpdef.h	/^    int        num_removed_iso_H; \/* number of exchangable isotopic H *\/$/;"	m	struct:tagInfoAtomData
num_sb_in1_only	include/inchi/strutil.h	/^    int     num_sb_in1_only;$/;"	m	struct:tagInChICompareResults
num_sb_in2_only	include/inchi/strutil.h	/^    int     num_sb_in2_only;$/;"	m	struct:tagInChICompareResults
num_sb_undef_in1_only	include/inchi/strutil.h	/^    int     num_sb_undef_in1_only;$/;"	m	struct:tagInChICompareResults
num_sb_undef_in2_only	include/inchi/strutil.h	/^    int     num_sb_undef_in2_only;$/;"	m	struct:tagInChICompareResults
num_sc_in1_only	include/inchi/strutil.h	/^    int     num_sc_in1_only;$/;"	m	struct:tagInChICompareResults
num_sc_in2_only	include/inchi/strutil.h	/^    int     num_sc_in2_only;$/;"	m	struct:tagInChICompareResults
num_sc_undef_in1_only	include/inchi/strutil.h	/^    int     num_sc_undef_in1_only;$/;"	m	struct:tagInChICompareResults
num_sc_undef_in2_only	include/inchi/strutil.h	/^    int     num_sc_undef_in2_only;$/;"	m	struct:tagInChICompareResults
num_set	include/inchi/ichi_bns.h	/^    int num_set; \/* number of sets *\/$/;"	m	struct:tagNodeSet
num_set	src/formats/libinchi/ichican2.c	/^    int num_set; \/* number of sets *\/$/;"	m	struct:tagNodeSet	file:
num_sort	src/formats/vaspformat.cpp	/^      bool num_sort;$/;"	m	class:OpenBabel::VASPFormat::compare_sort_items	file:
num_stereo0D	include/inchi/inchi_api.h	/^    AT_NUM          num_stereo0D; \/* number of 0D stereo elements *\/$/;"	m	struct:tagINCHI_Input
num_stereo0D	include/inchi/inchi_api.h	/^    AT_NUM          num_stereo0D; \/* number of 0D stereo elements *\/$/;"	m	struct:tagINCHI_OutputStruct
num_stereo0D	include/inchi_api.h	/^    AT_NUM          num_stereo0D; \/* number of 0D stereo elements *\/$/;"	m	struct:tagINCHI_Input
num_stereo0D	include/inchi_api.h	/^    AT_NUM          num_stereo0D; \/* number of 0D stereo elements *\/$/;"	m	struct:tagINCHI_OutputStruct
num_t_groups	include/inchi/ichi_bns.h	/^    int num_t_groups;     \/* number of added t-groups *\/$/;"	m	struct:BalancedNetworkStructure
num_t_groups	include/inchi/ichitaut.h	/^    int       num_t_groups;$/;"	m	struct:tagTautomerGroupsInfo
num_taut	include/inchi/ichimain.h	/^    int           num_taut[INCHI_NUM];$/;"	m	struct:tagStructData
num_taut	src/formats/libinchi/runichi.c	/^    int            num_taut, num_non_taut, num_taut0, num_non_taut0;$/;"	m	struct:tagRenumbData	file:
num_taut0	src/formats/libinchi/runichi.c	/^    int            num_taut, num_non_taut, num_taut0, num_non_taut0;$/;"	m	struct:tagRenumbData	file:
num_taut_H1	include/inchi/strutil.h	/^    int num_taut_H1;$/;"	m	struct:tagInChICompareResults
num_taut_H2	include/inchi/strutil.h	/^    int num_taut_H2;$/;"	m	struct:tagInChICompareResults
num_taut_M1	include/inchi/strutil.h	/^    int num_taut_M1;$/;"	m	struct:tagInChICompareResults
num_taut_M2	include/inchi/strutil.h	/^    int num_taut_M2;$/;"	m	struct:tagInChICompareResults
num_taut_at	include/inchi/inchi_dll_a.h	/^    int num_taut_at;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
num_tc_groups	include/inchi/ichirvrs.h	/^    int      num_tc_groups; \/* number of charge groups and metal-flower vertices *\/$/;"	m	struct:tagAllTCGroups
num_tgroup_edges	include/inchi/ichirvrs.h	/^    int      num_tgroup_edges;  \/* number of edges to t-groups *\/$/;"	m	struct:tagAllTCGroups
num_tgroups	include/inchi/ichirvrs.h	/^    int      num_tgroups;       \/* number t-groups *\/$/;"	m	struct:tagAllTCGroups
num_to	include/inchi/ichicomn.h	/^    int     num_to;   \/* number of neighbors with equal mapping ranks; one of them has min. canon. number *\/$/;"	m	struct:tagEquNeigh
num_vertices	include/OB-BGL/mol_graph.h	/^  int num_vertices( const OpenBabel::OBMol& m )$/;"	f	namespace:boost
num_vertices	include/inchi/ichi_bns.h	/^    int num_vertices;     \/* total number currently in effect; includes t-groups and added atoms *\/$/;"	m	struct:BalancedNetworkStructure
number	include/inchi/ichi_bns.h	/^    Vertex       number;$/;"	m	union:BnsAltPath
number	src/formats/smiley.h	/^        int number;$/;"	m	struct:Smiley::Parser::RingBondInfo
number2string	src/formats/smiley.h	/^    std::string number2string(int value)$/;"	f	struct:Smiley::PrintCallback
numberOfCommentPlacement	include/openbabel/json/json.h	/^      numberOfCommentPlacement$/;"	e	enum:Json::CommentPlacement
number_of_children	include/openbabel/tree/tree.hh	/^unsigned int tree<T, tree_node_allocator>::iterator_base::number_of_children() const$/;"	f	class:tree::iterator_base
number_of_children	include/openbabel/tree/tree.hh	/^unsigned int tree<T, tree_node_allocator>::number_of_children(const iterator_base& it)$/;"	f	class:tree
number_of_siblings	include/openbabel/tree/tree.hh	/^unsigned int tree<T, tree_node_allocator>::number_of_siblings(const iterator_base& it) const$/;"	f	class:tree
numbits	src/fingerprints/finger3.cpp	/^    int numbits;$/;"	m	struct:OpenBabel::PatternFP::pattern	file:
numoccurrences	src/fingerprints/finger3.cpp	/^    int numoccurrences;$/;"	m	struct:OpenBabel::PatternFP::pattern	file:
nv	src/mcdlutil.cpp	/^    short int nv;   \/*Current atom's valence*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
obAuditMsg	include/openbabel/oberror.h	/^    obAuditMsg,  \/\/!< for messages auditing methods which destroy or perceive molecular data (e.g., kekulization, atom typing, etc.)$/;"	e	enum:OpenBabel::obMessageLevel
obDebug	include/openbabel/oberror.h	/^    obDebug      \/\/!< for messages only useful for debugging purposes$/;"	e	enum:OpenBabel::obMessageLevel
obError	include/openbabel/oberror.h	/^    obError,     \/\/!< for critical errors (e.g., cannot read a file)$/;"	e	enum:OpenBabel::obMessageLevel
obErrorLog	src/oberror.cpp	/^  OBMessageHandler obErrorLog;$/;"	m	namespace:OpenBabel	file:
obInfo	include/openbabel/oberror.h	/^    obInfo,      \/\/!< for informative messages (e.g., file is a non-standard format)$/;"	e	enum:OpenBabel::obMessageLevel
obLocale	src/locale.cpp	/^  OBLocale   obLocale;$/;"	m	namespace:OpenBabel	file:
obLogBuf	include/openbabel/oberror.h	/^  class OBERROR obLogBuf : public std::stringbuf$/;"	c	namespace:OpenBabel
obMessageLevel	include/openbabel/oberror.h	/^  enum obMessageLevel {$/;"	g	namespace:OpenBabel
obWarning	include/openbabel/oberror.h	/^    obWarning,   \/\/!< for non-critical problems (e.g., molecule appears empty)$/;"	e	enum:OpenBabel::obMessageLevel
ob_make_rmat	src/obutil.cpp	/^  void ob_make_rmat(double a[3][3],double rmat[9])$/;"	f	namespace:OpenBabel
objectValue	include/openbabel/json/json.h	/^      objectValue    \/\/\/< object value (collection of name\/value pairs).$/;"	e	enum:Json::ValueType
objectsOnly	src/formats/chemdrawcdx.cpp	/^  static const bool objectsOnly = true;$/;"	m	class:OpenBabel::ChemDrawBinaryXFormat	file:
objectsPerPage_	src/formats/json/jsoncpp.cpp	/^   unsigned int objectsPerPage_;$/;"	m	class:Json::BatchAllocator	file:
obmol_traversal_tag	include/OB-BGL/mol_graph.h	/^  struct obmol_traversal_tag :$/;"	s	namespace:boost
obsmarts	src/fingerprints/finger3.cpp	/^    OBSmartsPattern obsmarts;$/;"	m	struct:OpenBabel::PatternFP::pattern	file:
occupancy	src/formats/yasaraformat.cpp	/^  float occupancy;$/;"	m	struct:OpenBabel::atomid	file:
occurs	include/libxml/schemasInternals.h	/^    int occurs;$/;"	m	struct:_xmlSchemaAttribute
ocur	include/libxml/tree.h	/^    xmlElementContentOccur    ocur;	\/* ONCE, OPT, MULT or PLUS *\/$/;"	m	struct:_xmlElementContent
oldNs	include/libxml/tree.h	/^    struct _xmlNs   *oldNs;	\/* Global namespace, the old way *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNs
oldXMLWDcompatibility	include/libxml/globals.h	/^	int oldXMLWDcompatibility;$/;"	m	struct:_xmlGlobalState
oldXMLWDcompatibility	include/libxml/globals.h	/^XMLPUBVAR int oldXMLWDcompatibility;$/;"	v
oldXMLWDcompatibility	include/libxml/globals.h	248;"	d
oldXMLWDcompatibility	include/libxml/globals.h	45;"	d
old_locale	src/locale.cpp	/^    locale_t old_locale;$/;"	m	class:OpenBabel::OBLocalePrivate	file:
old_locale_string	src/locale.cpp	/^    char *old_locale_string;$/;"	m	class:OpenBabel::OBLocalePrivate	file:
oldtitle	src/formats/confabreport.cpp	/^  string oldtitle;$/;"	m	class:OpenBabel::ConfabReport	file:
onceOnly	include/openbabel/oberror.h	/^  enum errorQualifier {always, onceOnly};$/;"	e	enum:OpenBabel::errorQualifier
onlyOne	src/canon.cpp	/^      const bool onlyOne;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
opaque	include/libxml/uri.h	/^    char *opaque;	\/* opaque part *\/$/;"	m	struct:_xmlURI
opaque	include/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
openLib	src/dlhandler_unix.cpp	/^bool DLHandler :: openLib(const string& lib_name)$/;"	f	class:DLHandler
openLib	src/dlhandler_unix.cpp	/^bool DLHandler::openLib(const string& lib_name)$/;"	f	class:DLHandler
openLib	src/dlhandler_win32.cpp	/^bool DLHandler :: openLib(const string& lib_name)$/;"	f	class:DLHandler
open_nbor_list	src/formats/MNAformat.cpp	/^			static string const open_nbor_list;$/;"	m	class:OpenBabel::MNAFormat	file:
open_nbor_list	src/formats/MNAformat.cpp	/^	string const MNAFormat::open_nbor_list = "(";$/;"	m	class:OpenBabel::MNAFormat	file:
opencurly_	include/openbabel/json/customwriter.h	/^      std::string opencurly_;$/;"	m	class:Json::CustomWriter
opensquare_	include/openbabel/json/customwriter.h	/^      std::string opensquare_;$/;"	m	class:Json::CustomWriter
operation	src/formats/smiley.h	/^    void operation(int type) {}$/;"	f	struct:Smiley::CallbackBase
operation	src/formats/smiley.h	/^    void operation(int type)$/;"	f	struct:Smiley::PrintCallback
operator !	src/formats/json/jsoncpp.cpp	/^Value::operator!() const$/;"	f	class:Json::Value
operator !=	include/OB-BGL/mol_graph.h	/^        bool operator!=( const adjacent_iterator& rhs ) { return !(*this == rhs); }$/;"	f	class:boost::graph_traits::adjacent_iterator
operator !=	include/OB-BGL/mol_graph.h	/^        bool operator!=( const out_edge_iterator& rhs ) { return !(*this == rhs); }$/;"	f	class:boost::graph_traits::out_edge_iterator
operator !=	include/openbabel/depict/painter.h	/^    bool operator !=(const OBColor& other)$/;"	f	struct:OpenBabel::OBColor
operator !=	include/openbabel/json/json.h	/^      bool operator !=( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
operator !=	include/openbabel/math/spacegroup.h	/^        int operator!=(const SpaceGroup &other) const$/;"	f	class:OpenBabel::SpaceGroup
operator !=	include/openbabel/math/vector3.h	/^    int operator!= ( const vector3& other ) const$/;"	f	class:OpenBabel::vector3
operator !=	include/openbabel/stereo/bindings.h	/^    bool operator!=(const OBCisTransConfig &other) const$/;"	f	struct:OpenBabel::OBCisTransConfig
operator !=	include/openbabel/stereo/bindings.h	/^    bool operator!=(const OBSquarePlanarConfig &other) const$/;"	f	struct:OpenBabel::OBSquarePlanarConfig
operator !=	include/openbabel/stereo/bindings.h	/^    bool operator!=(const OBTetrahedralConfig &other) const$/;"	f	struct:OpenBabel::OBTetrahedralConfig
operator !=	include/openbabel/stereo/cistrans.h	/^      bool operator!=(const Config &other) const$/;"	f	struct:OpenBabel::OBCisTransStereo::Config
operator !=	include/openbabel/stereo/cistrans.h	/^    bool operator!=(const OBCisTransStereo &other) const$/;"	f	class:OpenBabel::OBCisTransStereo
operator !=	include/openbabel/stereo/squareplanar.h	/^      bool operator!=(const Config &other) const$/;"	f	struct:OpenBabel::OBSquarePlanarStereo::Config
operator !=	include/openbabel/stereo/squareplanar.h	/^    bool operator!=(const OBSquarePlanarStereo &other) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
operator !=	include/openbabel/stereo/tetrahedral.h	/^      bool operator!=(const Config &other) const$/;"	f	struct:OpenBabel::OBTetrahedralStereo::Config
operator !=	include/openbabel/stereo/tetrahedral.h	/^    bool operator!=(const OBTetrahedralStereo &other) const$/;"	f	class:OpenBabel::OBTetrahedralStereo
operator !=	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::breadth_first_queued_iterator::operator!=(const breadth_first_queued_iterator& other) const$/;"	f	class:tree::breadth_first_queued_iterator
operator !=	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::fixed_depth_iterator::operator!=(const fixed_depth_iterator& other) const$/;"	f	class:tree::fixed_depth_iterator
operator !=	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::leaf_iterator::operator!=(const leaf_iterator& other) const$/;"	f	class:tree::leaf_iterator
operator !=	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::post_order_iterator::operator!=(const post_order_iterator& other) const$/;"	f	class:tree::post_order_iterator
operator !=	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::pre_order_iterator::operator!=(const pre_order_iterator& other) const$/;"	f	class:tree::pre_order_iterator
operator !=	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::sibling_iterator::operator!=(const sibling_iterator& other) const$/;"	f	class:tree::sibling_iterator
operator !=	src/formats/json/jsoncpp.cpp	/^Value::operator !=( const Value &other ) const$/;"	f	class:Json::Value
operator &	src/bitvec.cpp	/^  OBBitVec operator& (const OBBitVec & bv1, const OBBitVec & bv2)$/;"	f	namespace:OpenBabel
operator &=	src/bitvec.cpp	/^  OBBitVec & OBBitVec::operator&= (const OBBitVec & bv)$/;"	f	class:OpenBabel::OBBitVec
operator ()	include/OB-BGL/mol_graph.h	/^    void operator()(T t, const Graph& g) {$/;"	f	struct:boost::functor_caller
operator ()	include/OB-BGL/mol_graph.h	/^    void operator()(T t, const Graph& g) {$/;"	f	struct:boost::recorder
operator ()	include/openbabel/fingerprint.h	/^    unsigned int operator()(const unsigned int a, const unsigned int b)$/;"	f	struct:OpenBabel::OBFingerprint::bit_or
operator ()	include/openbabel/inchiformat.h	/^    bool operator()(const string& s1, const string& s2) const$/;"	f	struct:OpenBabel::InChIFormat::InchiLess
operator ()	include/openbabel/lineend.h	/^  int operator()( std::istream& src )$/;"	f	class:OpenBabel::LineEndingExtractor
operator ()	include/openbabel/math/matrix3x3.h	/^      const double & operator() (int row, int column ) const$/;"	f	class:OpenBabel::matrix3x3
operator ()	include/openbabel/math/matrix3x3.h	/^      double & operator() (int row, int column )$/;"	f	class:OpenBabel::matrix3x3
operator ()	include/openbabel/plugin.h	/^  bool operator()(const char* p1,const char* p2) const$/;"	f	struct:OpenBabel::CharPtrLess
operator ()	include/openbabel/tokenst.h	/^    void operator()(const T* ptr)const { delete ptr; }$/;"	f	struct:OpenBabel::DeleteObject
operator ()	include/openbabel/tree/tree.hh	/^				bool operator()(const tree_node *a, const tree_node *b)$/;"	f	class:tree::compare_nodes
operator ()	include/openbabel/tree/tree.hh	/^				bool operator()(const typename tree<T, tree_node_allocator>::iterator_base& one,$/;"	f	class:tree::iterator_base_less
operator ()	src/canon.cpp	/^      inline bool operator()(const OBAtom *a1, const OBAtom *a2) const$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::SortAtomsAscending
operator ()	src/canon.cpp	/^      inline bool operator()(const OBAtom *a1, const OBAtom *a2) const$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::SortAtomsDescending
operator ()	src/canon.cpp	/^      inline bool operator()(const StereoCenter &c1, const StereoCenter &c2) const$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::SortStereoCenters
operator ()	src/conformersearch.cpp	/^    bool operator()(const ConformerScore &cs1, const ConformerScore &cs2) { return cs1.score < cs2.score; }$/;"	f	struct:OpenBabel::CompareConformerLowScore
operator ()	src/conformersearch.cpp	/^    bool operator()(const ConformerScore &cs1, const ConformerScore &cs2) { return cs1.score > cs2.score; }$/;"	f	struct:OpenBabel::CompareConformerHighScore
operator ()	src/formats/vaspformat.cpp	/^      bool operator()(const OBAtom *a, const OBAtom *b)$/;"	f	class:OpenBabel::VASPFormat::compare_sort_items
operator ()	src/isomorphism.cpp	/^      bool operator()(OBIsomorphismMapper::Mapping &map)$/;"	f	class:OpenBabel::MapAllFunctor
operator ()	src/ops/sort.cpp	/^  bool operator()(std::pair<OBBase*,T> p1, std::pair<OBBase*,T> p2) const$/;"	f	struct:OpenBabel::Order
operator *	include/OB-BGL/mol_graph.h	/^        OpenBabel::OBBond& operator*()  { return *bond; }$/;"	f	class:boost::graph_traits::edge_descriptor
operator *	include/OB-BGL/mol_graph.h	/^        edge_descriptor operator*() $/;"	f	class:boost::graph_traits::out_edge_iterator
operator *	include/OB-BGL/mol_graph.h	/^        vertex_descriptor operator*() { return (*ip_bond)->GetNbrAtom(p_atom); }$/;"	f	class:boost::graph_traits::adjacent_iterator
operator *	include/openbabel/json/json.h	/^      reference operator *() const$/;"	f	class:Json::ValueConstIterator
operator *	include/openbabel/json/json.h	/^      reference operator *() const$/;"	f	class:Json::ValueIterator
operator *	include/openbabel/math/vector3.h	/^  inline OBAPI vector3 operator* ( const double& c, const vector3& v)$/;"	f	namespace:OpenBabel
operator *	include/openbabel/math/vector3.h	/^  inline OBAPI vector3 operator* ( const vector3& v, const double& c)$/;"	f	namespace:OpenBabel
operator *	include/openbabel/obiter.h	/^    OBAtom &operator*() const    { return *_ptr;}$/;"	f	class:OpenBabel::OBResidueAtomIter
operator *	include/openbabel/obiter.h	/^    OBAtom& operator*() const    { return *_ptr;     }$/;"	f	class:OpenBabel::OBAtomAtomIter
operator *	include/openbabel/obiter.h	/^    OBAtom& operator*() const    { return *_ptr;     }$/;"	f	class:OpenBabel::OBMolAtomBFSIter
operator *	include/openbabel/obiter.h	/^    OBAtom& operator*() const    { return *_ptr;     }$/;"	f	class:OpenBabel::OBMolAtomDFSIter
operator *	include/openbabel/obiter.h	/^    OBAtom& operator*() const    { return *_ptr;     }$/;"	f	class:OpenBabel::OBMolAtomIter
operator *	include/openbabel/obiter.h	/^    OBBond& operator*() const    { return *_ptr;     }$/;"	f	class:OpenBabel::OBMolBondBFSIter
operator *	include/openbabel/obiter.h	/^    OBBond& operator*() const    { return *_ptr;     }$/;"	f	class:OpenBabel::OBMolBondIter
operator *	include/openbabel/obiter.h	/^    OBBond& operator*() const    { return *_ptr;}$/;"	f	class:OpenBabel::OBAtomBondIter
operator *	include/openbabel/obiter.h	/^    OBResidue& operator*() const { return *_ptr;}$/;"	f	class:OpenBabel::OBResidueIter
operator *	include/openbabel/obiter.h	/^    OBRing& operator*()  const { return *_ptr;}$/;"	f	class:OpenBabel::OBMolRingIter
operator *	include/openbabel/obiter.h	/^    std::vector<unsigned int> operator*() const    { return _angle;     }$/;"	f	class:OpenBabel::OBMolAngleIter
operator *	include/openbabel/obiter.h	/^    std::vector<unsigned int> operator*() const    { return _pair;     }$/;"	f	class:OpenBabel::OBMolPairIter
operator *	include/openbabel/obiter.h	/^    std::vector<unsigned int> operator*() const    { return _torsion;     }$/;"	f	class:OpenBabel::OBMolTorsionIter
operator *	include/openbabel/tree/tree.hh	/^T& tree<T, tree_node_allocator>::iterator_base::operator*() const$/;"	f	class:tree::iterator_base
operator *	src/math/matrix3x3.cpp	/^  matrix3x3 operator *(const matrix3x3 &A,const matrix3x3 &B)$/;"	f	namespace:OpenBabel
operator *	src/math/matrix3x3.cpp	/^  vector3 operator *(const matrix3x3 &m,const vector3 &v)$/;"	f	namespace:OpenBabel
operator *	src/math/transform3d.cpp	/^  transform3d transform3d::operator *(const transform3d &t) const$/;"	f	class:OpenBabel::transform3d
operator *	src/math/transform3d.cpp	/^  vector3 transform3d::operator *(const vector3 &v) const$/;"	f	class:OpenBabel::transform3d
operator *=	include/openbabel/math/matrix3x3.h	/^      matrix3x3 &operator*=(const double &c)$/;"	f	class:OpenBabel::matrix3x3
operator *=	include/openbabel/math/vector3.h	/^    vector3& operator*= ( const double& c)$/;"	f	class:OpenBabel::vector3
operator *=	src/math/matrix3x3.cpp	/^  vector3 &vector3::operator *= (const matrix3x3 &m)$/;"	f	class:OpenBabel::vector3
operator +	include/openbabel/math/vector3.h	/^  inline OBAPI vector3 operator+ ( const vector3& v1, const vector3& v2)$/;"	f	namespace:OpenBabel
operator ++	include/OB-BGL/mol_graph.h	/^        adjacent_iterator  operator++(int) $/;"	f	class:boost::graph_traits::adjacent_iterator
operator ++	include/OB-BGL/mol_graph.h	/^        adjacent_iterator& operator++() { ++ip_bond; return *this; }$/;"	f	class:boost::graph_traits::adjacent_iterator
operator ++	include/OB-BGL/mol_graph.h	/^        out_edge_iterator  operator++(int) $/;"	f	class:boost::graph_traits::out_edge_iterator
operator ++	include/OB-BGL/mol_graph.h	/^        out_edge_iterator& operator++() { ++ip_bond; return *this; }$/;"	f	class:boost::graph_traits::out_edge_iterator
operator ++	include/openbabel/json/json.h	/^      SelfType &operator++()$/;"	f	class:Json::ValueConstIterator
operator ++	include/openbabel/json/json.h	/^      SelfType &operator++()$/;"	f	class:Json::ValueIterator
operator ++	include/openbabel/json/json.h	/^      SelfType operator++( int )$/;"	f	class:Json::ValueConstIterator
operator ++	include/openbabel/json/json.h	/^      SelfType operator++( int )$/;"	f	class:Json::ValueIterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::breadth_first_queued_iterator tree<T, tree_node_allocator>::breadth_first_queued_iterator::operator++(int)$/;"	f	class:tree::breadth_first_queued_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::breadth_first_queued_iterator& tree<T, tree_node_allocator>::breadth_first_queued_iterator::operator++()$/;"	f	class:tree::breadth_first_queued_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator tree<T, tree_node_allocator>::fixed_depth_iterator::operator++(int)$/;"	f	class:tree::fixed_depth_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator& tree<T, tree_node_allocator>::fixed_depth_iterator::operator++()$/;"	f	class:tree::fixed_depth_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator tree<T, tree_node_allocator>::leaf_iterator::operator++(int)$/;"	f	class:tree::leaf_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator& tree<T, tree_node_allocator>::leaf_iterator::operator++()$/;"	f	class:tree::leaf_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator tree<T, tree_node_allocator>::post_order_iterator::operator++(int)$/;"	f	class:tree::post_order_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator& tree<T, tree_node_allocator>::post_order_iterator::operator++()$/;"	f	class:tree::post_order_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator tree<T, tree_node_allocator>::pre_order_iterator::operator++(int)$/;"	f	class:tree::pre_order_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator& tree<T, tree_node_allocator>::pre_order_iterator::operator++()$/;"	f	class:tree::pre_order_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::sibling_iterator::operator++(int)$/;"	f	class:tree::sibling_iterator
operator ++	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator& tree<T, tree_node_allocator>::sibling_iterator::operator++()$/;"	f	class:tree::sibling_iterator
operator ++	src/obiter.cpp	/^  OBAtomAtomIter OBAtomAtomIter::operator++(int)$/;"	f	class:OpenBabel::OBAtomAtomIter
operator ++	src/obiter.cpp	/^  OBAtomAtomIter& OBAtomAtomIter::operator++()$/;"	f	class:OpenBabel::OBAtomAtomIter
operator ++	src/obiter.cpp	/^  OBAtomBondIter OBAtomBondIter::operator++(int)$/;"	f	class:OpenBabel::OBAtomBondIter
operator ++	src/obiter.cpp	/^  OBAtomBondIter& OBAtomBondIter::operator++()$/;"	f	class:OpenBabel::OBAtomBondIter
operator ++	src/obiter.cpp	/^  OBMolAngleIter& OBMolAngleIter::operator++()$/;"	f	class:OpenBabel::OBMolAngleIter
operator ++	src/obiter.cpp	/^  OBMolAtomBFSIter OBMolAtomBFSIter::operator++(int)$/;"	f	class:OpenBabel::OBMolAtomBFSIter
operator ++	src/obiter.cpp	/^  OBMolAtomBFSIter& OBMolAtomBFSIter::operator++()$/;"	f	class:OpenBabel::OBMolAtomBFSIter
operator ++	src/obiter.cpp	/^  OBMolAtomDFSIter OBMolAtomDFSIter::operator++(int)$/;"	f	class:OpenBabel::OBMolAtomDFSIter
operator ++	src/obiter.cpp	/^  OBMolAtomDFSIter& OBMolAtomDFSIter::operator++()$/;"	f	class:OpenBabel::OBMolAtomDFSIter
operator ++	src/obiter.cpp	/^  OBMolAtomIter OBMolAtomIter::operator++(int)$/;"	f	class:OpenBabel::OBMolAtomIter
operator ++	src/obiter.cpp	/^  OBMolAtomIter& OBMolAtomIter::operator++()$/;"	f	class:OpenBabel::OBMolAtomIter
operator ++	src/obiter.cpp	/^  OBMolBondBFSIter OBMolBondBFSIter::operator++(int)$/;"	f	class:OpenBabel::OBMolBondBFSIter
operator ++	src/obiter.cpp	/^  OBMolBondBFSIter& OBMolBondBFSIter::operator++()$/;"	f	class:OpenBabel::OBMolBondBFSIter
operator ++	src/obiter.cpp	/^  OBMolBondIter OBMolBondIter::operator++(int)$/;"	f	class:OpenBabel::OBMolBondIter
operator ++	src/obiter.cpp	/^  OBMolBondIter& OBMolBondIter::operator++()$/;"	f	class:OpenBabel::OBMolBondIter
operator ++	src/obiter.cpp	/^  OBMolPairIter& OBMolPairIter::operator++()$/;"	f	class:OpenBabel::OBMolPairIter
operator ++	src/obiter.cpp	/^  OBMolRingIter OBMolRingIter::operator++(int)$/;"	f	class:OpenBabel::OBMolRingIter
operator ++	src/obiter.cpp	/^  OBMolRingIter& OBMolRingIter::operator++()$/;"	f	class:OpenBabel::OBMolRingIter
operator ++	src/obiter.cpp	/^  OBMolTorsionIter& OBMolTorsionIter::operator++()$/;"	f	class:OpenBabel::OBMolTorsionIter
operator ++	src/obiter.cpp	/^  OBResidueAtomIter OBResidueAtomIter::operator++ (int)$/;"	f	class:OpenBabel::OBResidueAtomIter
operator ++	src/obiter.cpp	/^  OBResidueAtomIter& OBResidueAtomIter::operator++ ()$/;"	f	class:OpenBabel::OBResidueAtomIter
operator ++	src/obiter.cpp	/^  OBResidueIter OBResidueIter::operator++(int)$/;"	f	class:OpenBabel::OBResidueIter
operator ++	src/obiter.cpp	/^  OBResidueIter& OBResidueIter::operator++()$/;"	f	class:OpenBabel::OBResidueIter
operator +=	include/openbabel/math/vector3.h	/^    vector3& operator+= ( const double* f)$/;"	f	class:OpenBabel::vector3
operator +=	include/openbabel/math/vector3.h	/^    vector3& operator+= ( const vector3& v)$/;"	f	class:OpenBabel::vector3
operator +=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::breadth_first_queued_iterator& tree<T, tree_node_allocator>::breadth_first_queued_iterator::operator+=(unsigned int num)$/;"	f	class:tree::breadth_first_queued_iterator
operator +=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator& tree<T, tree_node_allocator>::fixed_depth_iterator::operator+=(unsigned int num)$/;"	f	class:tree::fixed_depth_iterator
operator +=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator& tree<T, tree_node_allocator>::leaf_iterator::operator+=(unsigned int num)$/;"	f	class:tree::leaf_iterator
operator +=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator& tree<T, tree_node_allocator>::post_order_iterator::operator+=(unsigned int num)$/;"	f	class:tree::post_order_iterator
operator +=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator& tree<T, tree_node_allocator>::pre_order_iterator::operator+=(unsigned int num)$/;"	f	class:tree::pre_order_iterator
operator +=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator& tree<T, tree_node_allocator>::sibling_iterator::operator+=(unsigned int num)$/;"	f	class:tree::sibling_iterator
operator +=	src/bitvec.cpp	/^  OBBitVec & OBBitVec::operator+= (const OBBitVec & bv)$/;"	f	class:OpenBabel::OBBitVec
operator +=	src/mol.cpp	/^  OBMol &OBMol::operator+=(const OBMol &source)$/;"	f	class:OpenBabel::OBMol
operator -	include/openbabel/json/json.h	/^      difference_type operator -( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
operator -	include/openbabel/math/vector3.h	/^  inline OBAPI vector3 operator- ( const vector3& v)$/;"	f	namespace:OpenBabel
operator -	include/openbabel/math/vector3.h	/^  inline OBAPI vector3 operator- ( const vector3& v1, const vector3& v2)$/;"	f	namespace:OpenBabel
operator -	src/bitvec.cpp	/^  OBBitVec operator- (const OBBitVec & bv1, const OBBitVec & bv2)$/;"	f	namespace:OpenBabel
operator --	include/openbabel/json/json.h	/^      SelfType &operator--()$/;"	f	class:Json::ValueConstIterator
operator --	include/openbabel/json/json.h	/^      SelfType &operator--()$/;"	f	class:Json::ValueIterator
operator --	include/openbabel/json/json.h	/^      SelfType operator--( int )$/;"	f	class:Json::ValueConstIterator
operator --	include/openbabel/json/json.h	/^      SelfType operator--( int )$/;"	f	class:Json::ValueIterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator tree<T, tree_node_allocator>::fixed_depth_iterator::operator--(int)$/;"	f	class:tree::fixed_depth_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator& tree<T, tree_node_allocator>::fixed_depth_iterator::operator--()$/;"	f	class:tree::fixed_depth_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator tree<T, tree_node_allocator>::leaf_iterator::operator--(int)$/;"	f	class:tree::leaf_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator& tree<T, tree_node_allocator>::leaf_iterator::operator--()$/;"	f	class:tree::leaf_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator tree<T, tree_node_allocator>::post_order_iterator::operator--(int)$/;"	f	class:tree::post_order_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator& tree<T, tree_node_allocator>::post_order_iterator::operator--()$/;"	f	class:tree::post_order_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator tree<T, tree_node_allocator>::pre_order_iterator::operator--(int)$/;"	f	class:tree::pre_order_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator& tree<T, tree_node_allocator>::pre_order_iterator::operator--()$/;"	f	class:tree::pre_order_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::sibling_iterator::operator--(int)$/;"	f	class:tree::sibling_iterator
operator --	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator& tree<T, tree_node_allocator>::sibling_iterator::operator--()$/;"	f	class:tree::sibling_iterator
operator -=	include/openbabel/math/vector3.h	/^    vector3& operator-= ( const double* f)$/;"	f	class:OpenBabel::vector3
operator -=	include/openbabel/math/vector3.h	/^    vector3& operator-= ( const vector3& v)$/;"	f	class:OpenBabel::vector3
operator -=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::fixed_depth_iterator& tree<T, tree_node_allocator>::fixed_depth_iterator::operator-=(unsigned int num)$/;"	f	class:tree::fixed_depth_iterator
operator -=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::leaf_iterator& tree<T, tree_node_allocator>::leaf_iterator::operator-=(unsigned int num)$/;"	f	class:tree::leaf_iterator
operator -=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::post_order_iterator& tree<T, tree_node_allocator>::post_order_iterator::operator-=(unsigned int num)$/;"	f	class:tree::post_order_iterator
operator -=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator& tree<T, tree_node_allocator>::pre_order_iterator::operator-=(unsigned int num)$/;"	f	class:tree::pre_order_iterator
operator -=	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator& tree<T, tree_node_allocator>::sibling_iterator::operator-=(unsigned int num)$/;"	f	class:tree::sibling_iterator
operator -=	src/bitvec.cpp	/^  OBBitVec & OBBitVec::operator-= (const OBBitVec & bv)$/;"	f	class:OpenBabel::OBBitVec
operator ->	include/OB-BGL/mol_graph.h	/^        OpenBabel::OBBond* operator->() { return bond; }$/;"	f	class:boost::graph_traits::edge_descriptor
operator ->	include/openbabel/obiter.h	/^    OBAtom *operator->() const   { return _ptr; }$/;"	f	class:OpenBabel::OBResidueAtomIter
operator ->	include/openbabel/obiter.h	/^    OBAtom* operator->() const   { return _ptr;      }$/;"	f	class:OpenBabel::OBAtomAtomIter
operator ->	include/openbabel/obiter.h	/^    OBAtom* operator->() const   { return _ptr;      }$/;"	f	class:OpenBabel::OBMolAtomBFSIter
operator ->	include/openbabel/obiter.h	/^    OBAtom* operator->() const   { return _ptr;      }$/;"	f	class:OpenBabel::OBMolAtomDFSIter
operator ->	include/openbabel/obiter.h	/^    OBAtom* operator->() const   { return _ptr;      }$/;"	f	class:OpenBabel::OBMolAtomIter
operator ->	include/openbabel/obiter.h	/^    OBBond* operator->() const   { return _ptr;      }$/;"	f	class:OpenBabel::OBMolBondBFSIter
operator ->	include/openbabel/obiter.h	/^    OBBond* operator->() const   { return _ptr;      }$/;"	f	class:OpenBabel::OBMolBondIter
operator ->	include/openbabel/obiter.h	/^    OBBond* operator->() const   { return _ptr; }$/;"	f	class:OpenBabel::OBAtomBondIter
operator ->	include/openbabel/obiter.h	/^    OBResidue* operator->() const{ return _ptr; }$/;"	f	class:OpenBabel::OBResidueIter
operator ->	include/openbabel/obiter.h	/^    OBRing* operator->() const { return _ptr; }$/;"	f	class:OpenBabel::OBMolRingIter
operator ->	include/openbabel/tree/tree.hh	/^T* tree<T, tree_node_allocator>::iterator_base::operator->() const$/;"	f	class:tree::iterator_base
operator /	include/openbabel/math/vector3.h	/^  inline OBAPI vector3 operator\/ ( const vector3& v, const double& c)$/;"	f	namespace:OpenBabel
operator /=	include/openbabel/math/matrix3x3.h	/^      matrix3x3 &operator\/=(const double &c)$/;"	f	class:OpenBabel::matrix3x3
operator /=	include/openbabel/math/vector3.h	/^    vector3& operator\/= ( const double& c)$/;"	f	class:OpenBabel::vector3
operator <	include/openbabel/depict/painter.h	/^    bool operator <(const OBColor& other) const$/;"	f	struct:OpenBabel::OBColor
operator <	src/bitvec.cpp	/^  bool operator< (const OBBitVec & bv1, const OBBitVec & bv2)$/;"	f	namespace:OpenBabel
operator <	src/canon.cpp	/^      inline bool operator<(const FullCode &other) const$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::PartialCode
operator <	src/fingerprints/fingerecfp.cpp	/^  bool operator < (const NborInfo &x) const$/;"	f	struct:OpenBabel::NborInfo
operator <	src/formats/json/jsoncpp.cpp	/^Value::CZString::operator<( const CZString &other ) const $/;"	f	class:Json::Value::CZString
operator <	src/formats/json/jsoncpp.cpp	/^Value::operator <( const Value &other ) const$/;"	f	class:Json::Value
operator <	src/formats/mdffformat.cpp	/^    bool operator<(const aindx &left) const$/;"	f	class:OpenBabel::aindx
operator <	src/formats/mmcifformat.cpp	/^   bool operator< (const CIFResidueID & other) const$/;"	f	struct:OpenBabel::CIFResidueID
operator <<	include/openbabel/oberror.h	/^      friend std::ostream& operator<< ( std::ostream &os, const OBError &er )$/;"	f	class:OpenBabel::OBError
operator <<	src/bitvec.cpp	/^  std::ostream & operator<< ( std::ostream & os, const OBBitVec & bv)$/;"	f	namespace:OpenBabel
operator <<	src/formats/json/jsoncpp.cpp	/^std::ostream& operator<<( std::ostream &sout, const Value &root )$/;"	f	namespace:Json
operator <<	src/grid.cpp	/^  ostream& operator<< ( ostream &os, const  OBFloatGrid& fg)$/;"	f	namespace:OpenBabel
operator <<	src/math/matrix3x3.cpp	/^  ostream& operator<< ( ostream& co, const matrix3x3& m )$/;"	f	namespace:OpenBabel
operator <<	src/math/vector3.cpp	/^  OBAPI ostream& operator<< ( ostream& co, const vector3& v )$/;"	f	namespace:OpenBabel
operator <<	src/stereo/cistrans.cpp	/^  ostream& operator<<(ostream &out, const OpenBabel::OBCisTransStereo &ct)$/;"	f	namespace:std
operator <<	src/stereo/cistrans.cpp	/^  ostream& operator<<(ostream &out, const OpenBabel::OBCisTransStereo::Config &cfg)$/;"	f	namespace:std
operator <<	src/stereo/squareplanar.cpp	/^  ostream& operator<<(ostream &out, const OpenBabel::OBSquarePlanarStereo &ct)$/;"	f	namespace:std
operator <<	src/stereo/squareplanar.cpp	/^  ostream& operator<<(ostream &out, const OpenBabel::OBSquarePlanarStereo::Config &cfg)$/;"	f	namespace:std
operator <<	src/stereo/tetrahedral.cpp	/^  ostream& operator<<(ostream &out, const OBTetrahedralStereo &ts)$/;"	f	namespace:std
operator <<	src/stereo/tetrahedral.cpp	/^  ostream& operator<<(ostream &out, const OBTetrahedralStereo::Config &cfg)$/;"	f	namespace:std
operator <=	src/formats/json/jsoncpp.cpp	/^Value::operator <=( const Value &other ) const$/;"	f	class:Json::Value
operator =	include/openbabel/forcefield.h	/^    OBFFConstraints& operator=(const OBFFConstraints &ai)$/;"	f	class:OpenBabel::OBFFConstraints
operator =	include/openbabel/forcefield.h	/^    OBFFParameter& operator=(const OBFFParameter &ai)$/;"	f	class:OpenBabel::OBFFParameter
operator =	include/openbabel/math/vector3.h	/^    vector3& operator= ( const vector3& v)$/;"	f	class:OpenBabel::vector3
operator =	include/openbabel/parsmart.h	/^    OBSmartsPattern& operator=(const OBSmartsPattern& cp)$/;"	f	class:OpenBabel::OBSmartsPattern
operator =	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::operator=(const tree<T, tree_node_allocator>& other)$/;"	f	class:tree
operator =	src/atom.cpp	/^  OBAtom &OBAtom::operator=(OBAtom &src)$/;"	f	class:OpenBabel::OBAtom
operator =	src/bitvec.cpp	/^  OBBitVec & OBBitVec::operator= (const OBBitVec & bv)$/;"	f	class:OpenBabel::OBBitVec
operator =	src/forcefields/forcefieldgaff.cpp	/^  OBForceFieldGaff &OBForceFieldGaff::operator=(OBForceFieldGaff &src)$/;"	f	class:OpenBabel::OBForceFieldGaff
operator =	src/forcefields/forcefieldghemical.cpp	/^  OBForceFieldGhemical &OBForceFieldGhemical::operator=(OBForceFieldGhemical &src)$/;"	f	class:OpenBabel::OBForceFieldGhemical
operator =	src/forcefields/forcefieldmm2.cpp	/^  OBForceFieldMM2 &OBForceFieldMM2::operator=(OBForceFieldMM2 &src)$/;"	f	class:OpenBabel::OBForceFieldMM2
operator =	src/forcefields/forcefieldmmff94.cpp	/^  OBForceFieldMMFF94 &OBForceFieldMMFF94::operator=(OBForceFieldMMFF94 &src)$/;"	f	class:OpenBabel::OBForceFieldMMFF94
operator =	src/forcefields/forcefielduff.cpp	/^  OBForceFieldUFF &OBForceFieldUFF::operator=(OBForceFieldUFF &src)$/;"	f	class:OpenBabel::OBForceFieldUFF
operator =	src/formats/json/jsoncpp.cpp	/^Value::CZString::operator =( const CZString &other )$/;"	f	class:Json::Value::CZString
operator =	src/formats/json/jsoncpp.cpp	/^Value::operator=( const Value &other )$/;"	f	class:Json::Value
operator =	src/formats/json/jsoncpp.cpp	/^ValueConstIterator::operator =( const ValueIteratorBase &other )$/;"	f	class:Json::ValueConstIterator
operator =	src/formats/json/jsoncpp.cpp	/^ValueIterator::operator =( const SelfType &other )$/;"	f	class:Json::ValueIterator
operator =	src/formats/mmcifformat.cpp	/^   CIFResidueID & operator=(const CIFResidueID & other)$/;"	f	struct:OpenBabel::CIFResidueID
operator =	src/generic.cpp	/^  OBAngle& OBAngle::operator = (const OBAngle &src)$/;"	f	class:OpenBabel::OBAngle
operator =	src/generic.cpp	/^  OBAngleData& OBAngleData::operator =(const OBAngleData &src)$/;"	f	class:OpenBabel::OBAngleData
operator =	src/generic.cpp	/^  OBChiralData & OBChiralData::operator=(const OBChiralData &src)$/;"	f	class:OpenBabel::OBChiralData
operator =	src/generic.cpp	/^  OBConformerData & OBConformerData::operator=(const OBConformerData &src)$/;"	f	class:OpenBabel::OBConformerData
operator =	src/generic.cpp	/^  OBRingData& OBRingData::operator =(const OBRingData &src)$/;"	f	class:OpenBabel::OBRingData
operator =	src/generic.cpp	/^  OBSymmetryData & OBSymmetryData::operator=(const OBSymmetryData &src)$/;"	f	class:OpenBabel::OBSymmetryData
operator =	src/generic.cpp	/^  OBTorsion& OBTorsion::operator =(const OBTorsion &src)$/;"	f	class:OpenBabel::OBTorsion
operator =	src/generic.cpp	/^  OBTorsionData& OBTorsionData::operator =(const OBTorsionData &src)$/;"	f	class:OpenBabel::OBTorsionData
operator =	src/generic.cpp	/^  OBUnitCell & OBUnitCell::operator=(const OBUnitCell &src)$/;"	f	class:OpenBabel::OBUnitCell
operator =	src/mol.cpp	/^  OBMol &OBMol::operator=(const OBMol &source)$/;"	f	class:OpenBabel::OBMol
operator =	src/obconversion.cpp	/^  OBConversion& OBConversion::operator=(const OBConversion& o)$/;"	f	class:OpenBabel::OBConversion
operator =	src/obiter.cpp	/^  OBAtomAtomIter& OBAtomAtomIter::operator=(const OBAtomAtomIter &ai)$/;"	f	class:OpenBabel::OBAtomAtomIter
operator =	src/obiter.cpp	/^  OBAtomBondIter& OBAtomBondIter::operator=(const OBAtomBondIter &bi)$/;"	f	class:OpenBabel::OBAtomBondIter
operator =	src/obiter.cpp	/^  OBMolAngleIter& OBMolAngleIter::operator=(const OBMolAngleIter &ai)$/;"	f	class:OpenBabel::OBMolAngleIter
operator =	src/obiter.cpp	/^  OBMolAtomBFSIter& OBMolAtomBFSIter::operator=(const OBMolAtomBFSIter &ai)$/;"	f	class:OpenBabel::OBMolAtomBFSIter
operator =	src/obiter.cpp	/^  OBMolAtomDFSIter& OBMolAtomDFSIter::operator=(const OBMolAtomDFSIter &ai)$/;"	f	class:OpenBabel::OBMolAtomDFSIter
operator =	src/obiter.cpp	/^  OBMolAtomIter& OBMolAtomIter::operator=(const OBMolAtomIter &ai)$/;"	f	class:OpenBabel::OBMolAtomIter
operator =	src/obiter.cpp	/^  OBMolBondBFSIter& OBMolBondBFSIter::operator=(const OBMolBondBFSIter &ai)$/;"	f	class:OpenBabel::OBMolBondBFSIter
operator =	src/obiter.cpp	/^  OBMolBondIter& OBMolBondIter::operator=(const OBMolBondIter &bi)$/;"	f	class:OpenBabel::OBMolBondIter
operator =	src/obiter.cpp	/^  OBMolPairIter& OBMolPairIter::operator=(const OBMolPairIter &ai)$/;"	f	class:OpenBabel::OBMolPairIter
operator =	src/obiter.cpp	/^  OBMolRingIter& OBMolRingIter::operator=(const OBMolRingIter &ri)$/;"	f	class:OpenBabel::OBMolRingIter
operator =	src/obiter.cpp	/^  OBMolTorsionIter& OBMolTorsionIter::operator=(const OBMolTorsionIter &ai)$/;"	f	class:OpenBabel::OBMolTorsionIter
operator =	src/obiter.cpp	/^  OBResidueAtomIter & OBResidueAtomIter::operator = (const OBResidueAtomIter &ri)$/;"	f	class:OpenBabel::OBResidueAtomIter
operator =	src/obiter.cpp	/^  OBResidueIter& OBResidueIter::operator=(const OBResidueIter &ri)$/;"	f	class:OpenBabel::OBResidueIter
operator =	src/residue.cpp	/^  OBResidue &OBResidue::operator = (const OBResidue &src)$/;"	f	class:OpenBabel::OBResidue
operator =	src/ring.cpp	/^  OBRing& OBRing::operator =(const OBRing &src)$/;"	f	class:OpenBabel::OBRing
operator =	src/spectrophore.cpp	/^OBSpectrophore::operator=(const OBSpectrophore& s)$/;"	f	class:OpenBabel::OBSpectrophore
operator ==	include/OB-BGL/mol_graph.h	/^        bool operator==( const adjacent_iterator& rhs ) $/;"	f	class:boost::graph_traits::adjacent_iterator
operator ==	include/OB-BGL/mol_graph.h	/^        bool operator==( const out_edge_iterator& rhs ) $/;"	f	class:boost::graph_traits::out_edge_iterator
operator ==	include/openbabel/atom.h	/^      bool operator==(const OBAtom * other) const {  return (GetIdx() == other->GetIdx()); }$/;"	f	class:OpenBabel::OBAtom
operator ==	include/openbabel/json/json.h	/^      bool operator ==( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
operator ==	include/openbabel/stereo/bindings.h	/^    bool operator==(const OBCisTransConfig &other) const$/;"	f	struct:OpenBabel::OBCisTransConfig
operator ==	include/openbabel/stereo/bindings.h	/^    bool operator==(const OBSquarePlanarConfig &other) const$/;"	f	struct:OpenBabel::OBSquarePlanarConfig
operator ==	include/openbabel/stereo/bindings.h	/^    bool operator==(const OBTetrahedralConfig &other) const$/;"	f	struct:OpenBabel::OBTetrahedralConfig
operator ==	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::breadth_first_queued_iterator::operator==(const breadth_first_queued_iterator& other) const$/;"	f	class:tree::breadth_first_queued_iterator
operator ==	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::fixed_depth_iterator::operator==(const fixed_depth_iterator& other) const$/;"	f	class:tree::fixed_depth_iterator
operator ==	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::leaf_iterator::operator==(const leaf_iterator& other) const$/;"	f	class:tree::leaf_iterator
operator ==	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::post_order_iterator::operator==(const post_order_iterator& other) const$/;"	f	class:tree::post_order_iterator
operator ==	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::pre_order_iterator::operator==(const pre_order_iterator& other) const$/;"	f	class:tree::pre_order_iterator
operator ==	include/openbabel/tree/tree.hh	/^bool tree<T, tree_node_allocator>::sibling_iterator::operator==(const sibling_iterator& other) const$/;"	f	class:tree::sibling_iterator
operator ==	src/bitvec.cpp	/^  bool operator== (const OBBitVec & bv1, const OBBitVec & bv2)$/;"	f	namespace:OpenBabel
operator ==	src/formats/json/jsoncpp.cpp	/^Value::CZString::operator==( const CZString &other ) const $/;"	f	class:Json::Value::CZString
operator ==	src/formats/json/jsoncpp.cpp	/^Value::operator ==( const Value &other ) const$/;"	f	class:Json::Value
operator ==	src/generic.cpp	/^  bool OBAngle::operator ==(const OBAngle &other)$/;"	f	class:OpenBabel::OBAngle
operator ==	src/isomorphism.cpp	/^        bool operator==(const Candidate &other)$/;"	f	struct:OpenBabel::VF2Mapper::Candidate
operator ==	src/math/spacegroup.cpp	/^  bool SpaceGroup::operator ==(const SpaceGroup &sg) const$/;"	f	class:OpenBabel::SpaceGroup
operator ==	src/math/vector3.cpp	/^  OBAPI int vector3::operator== ( const vector3& other ) const$/;"	f	class:OpenBabel::vector3
operator ==	src/oberror.cpp	/^  bool OBError::operator== (const OBError& other)const {return GetError()==other.GetError();}$/;"	f	class:OpenBabel::OBError
operator ==	src/stereo/cistrans.cpp	/^  bool OBCisTransStereo::Config::operator==(const Config &other) const$/;"	f	class:OpenBabel::OBCisTransStereo::Config
operator ==	src/stereo/cistrans.cpp	/^  bool OBCisTransStereo::operator==(const OBCisTransStereo &other) const$/;"	f	class:OpenBabel::OBCisTransStereo
operator ==	src/stereo/squareplanar.cpp	/^  bool OBSquarePlanarStereo::Config::operator==(const Config &other) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo::Config
operator ==	src/stereo/squareplanar.cpp	/^  bool OBSquarePlanarStereo::operator==(const OBSquarePlanarStereo &other) const$/;"	f	class:OpenBabel::OBSquarePlanarStereo
operator ==	src/stereo/tetrahedral.cpp	/^  bool OBTetrahedralStereo::Config::operator==(const OBTetrahedralStereo::Config &other) const$/;"	f	class:OpenBabel::OBTetrahedralStereo::Config
operator ==	src/stereo/tetrahedral.cpp	/^  bool OBTetrahedralStereo::operator==(const OBTetrahedralStereo &other) const$/;"	f	class:OpenBabel::OBTetrahedralStereo
operator >	src/canon.cpp	/^      inline bool operator>(const FullCode &other) const$/;"	f	struct:OpenBabel::CanonicalLabelsImpl::FullCode
operator >	src/formats/json/jsoncpp.cpp	/^Value::operator >( const Value &other ) const$/;"	f	class:Json::Value
operator >=	src/formats/json/jsoncpp.cpp	/^Value::operator >=( const Value &other ) const$/;"	f	class:Json::Value
operator >>	src/bitvec.cpp	/^  std::istream & operator>> ( std::istream & is, OBBitVec & bv )$/;"	f	namespace:OpenBabel
operator >>	src/formats/json/jsoncpp.cpp	/^std::istream& operator>>( std::istream &sin, Value &root )$/;"	f	namespace:Json
operator >>	src/grid.cpp	/^  istream& operator>> ( istream &is,OBFloatGrid& fg)$/;"	f	namespace:OpenBabel
operator OpenBabel::OBBond*	include/OB-BGL/mol_graph.h	/^        operator OpenBabel::OBBond*()  { return bond; } $/;"	f	class:boost::graph_traits::edge_descriptor
operator []	include/OB-BGL/mol_graph.h	/^    reference operator[]( OpenBabel::OBAtom* a ) $/;"	f	class:OBAtomMap
operator []	include/OB-BGL/mol_graph.h	/^    reference operator[]( OpenBabel::OBBond* b ) $/;"	f	class:OBBondMap
operator []	include/openbabel/bitvec.h	/^      bool operator[] (int bit_offset) const$/;"	f	class:OpenBabel::OBBitVec
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( ArrayIndex index ) const$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( ArrayIndex index )$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( const CppTL::ConstString &key ) const$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( const CppTL::ConstString &key )$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( const StaticString &key )$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( const char *key ) const$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( const char *key )$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( const std::string &key ) const$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( const std::string &key )$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( int index ) const$/;"	f	class:Json::Value
operator []	src/formats/json/jsoncpp.cpp	/^Value::operator[]( int index )$/;"	f	class:Json::Value
operator []	src/math/vector3.cpp	/^  double vector3::operator[] ( unsigned int i) const$/;"	f	class:OpenBabel::vector3
operator ^	src/bitvec.cpp	/^  OBBitVec operator^ (const OBBitVec & bv1, const OBBitVec & bv2)$/;"	f	namespace:OpenBabel
operator ^=	src/bitvec.cpp	/^  OBBitVec & OBBitVec::operator^= (const OBBitVec & bv)$/;"	f	class:OpenBabel::OBBitVec
operator bool	include/openbabel/obiter.h	/^    operator bool()      const { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBMolRingIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return (_i != _vangle.end()); }$/;"	f	class:OpenBabel::OBMolAngleIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return (_i != _vtorsion.end()); }$/;"	f	class:OpenBabel::OBMolTorsionIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _pair.size()>0; }$/;"	f	class:OpenBabel::OBMolPairIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBAtomAtomIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBAtomBondIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBMolAtomBFSIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBMolAtomDFSIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBMolAtomIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBMolBondBFSIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBMolBondIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBResidueAtomIter
operator bool	include/openbabel/obiter.h	/^    operator bool() const        { return _ptr != NULL; }$/;"	f	class:OpenBabel::OBResidueIter
operator bool	src/formats/adfformat.cpp	/^        operator bool() const { return valid; }$/;"	f	struct:OpenBabel::OBT41Format::T41GridData
operator bool	src/formats/chemdrawcdx.cpp	/^  operator bool ()const        { return (bool)ifs; }$/;"	f	class:OpenBabel::CDXReader
operator const char *	include/openbabel/json/json.h	/^      operator const char *() const$/;"	f	class:Json::StaticString
operator |	src/bitvec.cpp	/^  OBBitVec operator| (const OBBitVec & bv1, const OBBitVec & bv2)$/;"	f	namespace:OpenBabel
operator |=	include/chemdrawcdx.h	/^inline CDXBondOrder &operator |= (CDXBondOrder &lhs, const CDXBondOrder &rhs)$/;"	f
operator |=	include/openbabel/bitvec.h	/^      OBBitVec & operator|= (int bit_offset)$/;"	f	class:OpenBabel::OBBitVec
operator |=	src/bitvec.cpp	/^  OBBitVec & OBBitVec::operator|= (const OBBitVec & bv)$/;"	f	class:OpenBabel::OBBitVec
optimize_transformation_params	src/pointgroup.cpp	/^    optimize_transformation_params( SYMMETRY_ELEMENT *elem )$/;"	f	class:OpenBabel::PointGroupPrivate
options	include/libxml/parser.h	/^    int                options;       \/* Extra options *\/$/;"	m	struct:_xmlParserCtxt
options	src/depict/depict.cpp	/^      unsigned   options;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
orbits	src/canon.cpp	/^      Orbits orbits;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
ord	src/formats/libinchi/ichinorm.c	/^    char ord[DERIV_AT_LEN];$/;"	m	struct:tagDerivAttachment	file:
ord1	src/formats/libinchi/ichinorm.c	/^    AT_NUMB ord1 : 5; \/* up to 2^5-1 = 31 = 0x0037 *\/$/;"	m	struct:tagAtTypeBitmap	file:
ord2	src/formats/libinchi/ichinorm.c	/^    AT_NUMB ord2 : 5;$/;"	m	struct:tagAtTypeBitmap	file:
ordC	src/formats/libinchi/ichinorm.c	/^    char ordC; \/* atom B = C(sat) *\/$/;"	m	struct:tagRing2Chain	file:
ordCopt	src/formats/libinchi/ichinorm.c	/^    char ordCopt; \/* if exists, saturated C connected by a chain-bond to Z *\/$/;"	m	struct:tagRing2Chain	file:
ordW	src/formats/libinchi/ichinorm.c	/^    char ordW; \/* ordering number of W-neighbor; bond to break; H to add *\/$/;"	m	struct:tagRing2Chain	file:
ordY	src/formats/libinchi/ichinorm.c	/^    char ordY; \/* ordering number of YH-neighbor; bond to increment; H to remove *\/$/;"	m	struct:tagRing2Chain	file:
ord_num	include/inchi/ichirvrs.h	/^    int ord_num; \/* ordering number within the type, typically t-group number *\/$/;"	m	struct:tagTCGroup
ord_number	include/inchi/ichi.h	/^    short      ord_number;    \/* for stable sort *\/$/;"	m	struct:tagINChIforSort
order	src/fingerprints/fingerecfp.cpp	/^  unsigned int order;$/;"	m	struct:OpenBabel::NborInfo	file:
order	src/formats/smilesformat.cpp	/^      int order;$/;"	m	struct:OpenBabel::OBSmilesParser::ExternalBond	file:
order	src/formats/smilesformat.cpp	/^      int order;$/;"	m	struct:OpenBabel::OBSmilesParser::RingClosureBond	file:
order	src/formats/smiley.h	/^        int order;$/;"	m	struct:Smiley::Parser::RingBondInfo
order	src/pointgroup.cpp	/^      int     order ;         \/*   Applying transformation this many times is identity *\/$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
orig	include/libxml/entities.h	/^    xmlChar                *orig;	\/* content without ref substitution *\/$/;"	m	struct:_xmlEntity
origBytesToIEND	src/formats/pngformat.cpp	/^  unsigned origBytesToIEND; \/\/saved between WriteMolecule calls$/;"	m	class:OpenBabel::PNGFormat	file:
orig_at_number	include/inchi/extr_ct.h	/^    AT_NUMB    orig_at_number;$/;"	m	struct:tagAtom
orig_at_number	include/inchi/inchi_api.h	/^    AT_NUMBR      orig_at_number;           \/* original atom number, starts from 1 *\/$/;"	m	struct:tagNormAtom
orig_at_number	include/inchi/inpdef.h	/^    AT_NUMB       orig_at_number;          \/* original atom number *\/$/;"	m	struct:tagInputAtom
orig_at_number	include/inchi_api.h	/^    AT_NUMBR      orig_at_number;           \/* original atom number, starts from 1 *\/$/;"	m	struct:tagNormAtom
orig_compt_at_numb	include/inchi/extr_ct.h	/^    AT_NUMB    orig_compt_at_numb;$/;"	m	struct:tagAtom
orig_compt_at_numb	include/inchi/inchi_api.h	/^    AT_NUMBR      orig_compt_at_numb;       \/* atom number within a component before terminal H removal *\/$/;"	m	struct:tagNormAtom
orig_compt_at_numb	include/inchi/inpdef.h	/^    AT_NUMB       orig_compt_at_numb;      \/* atom number within the component before terminal H removal *\/$/;"	m	struct:tagInputAtom
orig_compt_at_numb	include/inchi_api.h	/^    AT_NUMBR      orig_compt_at_numb;       \/* atom number within a component before terminal H removal *\/$/;"	m	struct:tagNormAtom
orig_inp_cur_data	src/formats/libinchi/runichi.c	/^    INP_ATOM_DATA  orig_inp_cur_data;$/;"	m	struct:tagRenumbData	file:
origin	include/libxml/xpath.h	/^    xmlNodePtr origin;			\/* for origin() *\/$/;"	m	struct:_xmlXPathContext
os	include/OB-BGL/verbose_visitors.h	/^    std::ostream& os;$/;"	m	class:OpenBabel::OBVerboseBFSVisitor
os	include/OB-BGL/verbose_visitors.h	/^    std::ostream& os;$/;"	m	class:OpenBabel::OBVerboseDFSVisitor
os	include/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
ostream_reference	src/zipstream.h	/^    typedef std::basic_ostream<charT, traits>& ostream_reference;$/;"	t	class:zlib_stream::basic_zip_ostream
ostream_reference	src/zipstream.h	/^    typedef std::basic_ostream<charT, traits>& ostream_reference;$/;"	t	class:zlib_stream::basic_zip_streambuf
ostream_type	src/zipstream.h	/^    typedef std::basic_ostream<charT, traits> ostream_type;$/;"	t	class:zlib_stream::basic_zip_ostream
outFormatGzip	include/openbabel/obconversion.h	/^      bool outFormatGzip;$/;"	m	class:OpenBabel::OBConversion
outIdx	src/stereo/perception.cpp	/^        unsigned int inIdx, outIdx;$/;"	m	union:OpenBabel::StereoRing::ParaAtom::__anon90	file:
outIdx	src/stereo/perception.cpp	/^      unsigned int inIdx, outIdx;$/;"	m	struct:OpenBabel::StereoRing::ParaBond	file:
outRoot	src/formats/json/chemdoodlejsonformat.cpp	/^    Json::Value outRoot;$/;"	m	class:OpenBabel::ChemDoodleJSONFormat	file:
outRoot	src/formats/json/pubchemjsonformat.cpp	/^    Json::Value outRoot;$/;"	m	class:OpenBabel::PubChemJSONFormat	file:
out_at	include/inchi/inchi_dll_a.h	/^    inp_ATOM *out_at;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
out_degree	include/OB-BGL/mol_graph.h	/^  int out_degree( graph_traits< OpenBabel::OBMol >::vertex_descriptor v,$/;"	f	namespace:boost
out_edge_iterator	include/OB-BGL/mol_graph.h	/^        out_edge_iterator () {};$/;"	f	class:boost::graph_traits::out_edge_iterator
out_edge_iterator	include/OB-BGL/mol_graph.h	/^        out_edge_iterator( OpenBabel::OBBondIterator i, OpenBabel::OBAtom* a ) : $/;"	f	class:boost::graph_traits::out_edge_iterator
out_edge_iterator	include/OB-BGL/mol_graph.h	/^        out_edge_iterator( const out_edge_iterator& i ) : $/;"	f	class:boost::graph_traits::out_edge_iterator
out_edge_iterator	include/OB-BGL/mol_graph.h	/^    class out_edge_iterator$/;"	c	struct:boost::graph_traits
out_edges	include/OB-BGL/mol_graph.h	/^  out_edges ( graph_traits< OpenBabel::OBMol >::vertex_descriptor v,$/;"	f	namespace:boost
out_func	include/zconf.h	49;"	d
out_func	include/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
outplanebendunit	src/forcefields/forcefieldmm2.h	/^      double outplanebendunit;$/;"	m	class:OpenBabel::OBForceFieldMM2
output	include/libxml/debugXML.h	/^    FILE *output;$/;"	m	struct:_xmlShellCtxt
output	include/libxml/encoding.h	/^    xmlCharEncodingOutputFunc  output;$/;"	m	struct:_xmlCharEncodingHandler
output	include/openbabel/generic.h	/^    output,     \/\/!<$/;"	e	enum:OpenBabel::atomreftype
output_stl	src/formats/stlformat.cpp	/^  static void output_stl( ostream &os, vector<Triangle> &triangles, bool cpk_colour ) {$/;"	f	namespace:OpenBabel
outsideNbrs	src/stereo/perception.cpp	/^      std::vector<OBAtom*> insideNbrs, outsideNbrs;$/;"	m	struct:OpenBabel::StereoRing::ParaAtom	file:
outsideNbrs	src/stereo/perception.cpp	/^      std::vector<OBAtom*> insideNbrs, outsideNbrs;$/;"	m	struct:OpenBabel::StereoRing::ParaBond	file:
overflow	include/openbabel/lineend.h	/^    virtual int              overflow( int ) {return EOF;};$/;"	f	class:OpenBabel::FilteringInputStreambuf
overflow	src/zipstreamimpl.h	/^basic_zip_streambuf<charT, traits>::overflow(int_type c)$/;"	f	class:basic_zip_streambuf
overlapped	src/mcdlutil.cpp	/^  bool overlapped(double x1A, double y1A, double x2A, double y2A,$/;"	f	namespace:OpenBabel
ownedInStreams	include/openbabel/obconversion.h	/^      std::vector<std::istream *> ownedInStreams; \/\/streams we own the memory to$/;"	m	class:OpenBabel::OBConversion
ownedOutStreams	include/openbabel/obconversion.h	/^      std::vector<std::ostream *> ownedOutStreams; \/\/streams we own the memory to$/;"	m	class:OpenBabel::OBConversion
ownedStreams	include/openbabel/obconversion.h	/^          std::vector<std::ios *> ownedStreams; \/\/streams we own the memory to$/;"	m	struct:OpenBabel::OBConversion::StreamState
owner	include/libxml/entities.h	/^    int                    owner;	\/* does the entity own the childrens *\/$/;"	m	struct:_xmlEntity
p	include/openbabel/rand.h	/^    unsigned int p;$/;"	m	class:OpenBabel::OBRandom
p	src/stereo/perception.cpp	/^      Automorphism p;$/;"	m	struct:OpenBabel::StereoInverted::Entry	file:
pAT_RANK	include/inchi/ichisize.h	/^typedef AT_RANK  *pAT_RANK;$/;"	t
pAtomInvariant2ForSort	src/formats/libinchi/ichicano.c	/^const ATOM_INVARIANT2 *pAtomInvariant2ForSort;$/;"	v
pAuxConv	include/openbabel/obconversion.h	/^      OBConversion* pAuxConv;\/\/\/<Way to extend OBConversion$/;"	m	class:OpenBabel::OBConversion
pBCN	include/inchi/ichicant.h	/^    BCN              *pBCN;$/;"	m	struct:tagCanonStat
pBD	include/inchi/ichirvrs.h	/^    BN_DATA   *pBD;$/;"	m	struct:tagStructFromInChI
pBNS	include/inchi/ichirvrs.h	/^    BN_STRUCT *pBNS;$/;"	m	struct:tagStructFromInChI
pBond	src/formats/libinchi/ichiread.c	/^    ONE_LINKED_BOND *pBond;$/;"	m	struct:tagLinkedBonds	file:
pCN	include/inchi/ichirvrs.h	/^    MY_CONST C_NODE *pCN;$/;"	m	struct:tagChargeNodeList
pCS_CALLOC	src/formats/libinchi/ichicano.c	491;"	d	file:
pCS_CALLOC	src/formats/libinchi/ichicano.c	620;"	d	file:
pDefaultFormat	include/openbabel/obconversion.h	/^      static OBFormat*  pDefaultFormat;$/;"	m	class:OpenBabel::OBConversion
pDoubleForSort	src/formats/libinchi/ichister.c	/^static double         *pDoubleForSort;$/;"	v	file:
pINChI	include/inchi/ichi.h	/^    INChI     *pINChI[TAUT_NUM];$/;"	m	struct:tagINChIforSort
pINChI	include/inchi/ichirvrs.h	/^    PINChI2     *pINChI[INCHI_NUM];$/;"	m	struct:tagReversedInChI
pINChI	include/inchi/inchi_dll_a.h	/^    PINChI2         *pINChI[INCHI_NUM];$/;"	m	struct:tagINCHIGEN_CONTROL
pINChI_Aux	include/inchi/ichi.h	/^    INChI_Aux *pINChI_Aux[TAUT_NUM];$/;"	m	struct:tagINChIforSort
pINChI_Aux	include/inchi/ichirvrs.h	/^    PINChI_Aux2 *pINChI_Aux[INCHI_NUM];$/;"	m	struct:tagReversedInChI
pINChI_Aux	include/inchi/inchi_dll_a.h	/^    PINChI_Aux2     *pINChI_Aux[INCHI_NUM]; $/;"	m	struct:tagINCHIGEN_CONTROL
pInFormat	include/openbabel/obconversion.h	/^      OBFormat* 	  pInFormat;$/;"	m	class:OpenBabel::OBConversion
pInp	include/inchi/inchi_api.h	/^    inchi_Input *pInp;    \/* a pointer to pInp that has all items 0 or NULL *\/$/;"	m	struct:tagInchiInpData
pInp	include/inchi_api.h	/^    inchi_Input *pInp;    \/* a pointer to pInp that has all items 0 or NULL *\/$/;"	m	struct:tagInchiInpData
pInpInChI	include/inchi/ichirvrs.h	/^    INChI      *pInpInChI[INCHI_NUM][TAUT_NUM];$/;"	m	struct:tagInputInChI
pInput	include/openbabel/obconversion.h	/^      std::istream *pInput; \/\/input stream, may be filtered$/;"	m	class:OpenBabel::OBConversion
pList	src/GUI/selformats.h	/^	wxCheckListBox* pList;$/;"	m	class:SelFormatsDialog
pMime	include/openbabel/format.h	/^    const char* pMime;$/;"	m	class:OpenBabel::OBFormat
pNeighList_RankForSort	src/formats/libinchi/ichicano.c	/^const NEIGH_LIST      *pNeighList_RankForSort; $/;"	v
pNeighborsForSort	src/formats/libinchi/ichicano.c	/^const AT_NUMB         *pNeighborsForSort;$/;"	v
pNumProtons	include/inchi/ichirvrs.h	/^    COMPONENT_REM_PROTONS *pNumProtons;$/;"	m	struct:tagRemovedAndExchangeableH
pOb1	include/openbabel/obconversion.h	/^      OBBase*		  pOb1;$/;"	m	class:OpenBabel::OBConversion
pOneINChI	include/inchi/ichirvrs.h	/^    INChI         *pOneINChI[TAUT_NUM];       \/* InChI of restored structure *\/$/;"	m	struct:tagStructFromInChI
pOneINChI_Aux	include/inchi/ichirvrs.h	/^    INChI_Aux     *pOneINChI_Aux[TAUT_NUM];$/;"	m	struct:tagStructFromInChI
pOne_fixed_H	include/inchi/ichirvrs.h	/^    S_CHAR        *pOne_fixed_H;              \/* !!! from normalized restored structure in case of Fixed-H only *\/$/;"	m	struct:tagStructFromInChI
pOne_norm_data	include/inchi/ichirvrs.h	/^    INP_ATOM_DATA *pOne_norm_data[TAUT_NUM];  \/* normalized restored structure *\/$/;"	m	struct:tagStructFromInChI
pOutFormat	include/openbabel/obconversion.h	/^      OBFormat*	  pOutFormat;$/;"	m	class:OpenBabel::OBConversion
pOutput	include/openbabel/obconversion.h	/^      std::ostream *pOutput; \/\/output stream, may have filters applied$/;"	m	class:OpenBabel::OBConversion
pRankStack	include/inchi/ichicant.h	/^    AT_RANK            **pRankStack;$/;"	m	struct:tagBaseCanonNumbering
pRef	src/formats/libinchi/ichiprt1.c	/^    const char *pRef;$/;"	m	struct:tagXmlEntityRef	file:
pSdfLabel	include/inchi/ichidrp.h	/^    char           *pSdfLabel;$/;"	m	struct:tagInputParms
pSdfValue	include/inchi/ichidrp.h	/^    char           *pSdfValue;$/;"	m	struct:tagInputParms
pSrm	include/inchi/ichirvrs.h	/^    ICHICONST SRM       *pSrm;$/;"	m	struct:tagStructFromInChI
pStereoFlags	include/inchi/inpdef.h	/^    AT_NUMB    *pStereoFlags;$/;"	m	struct:tagInfoAtomData
pStr	include/inchi/inchi_dll_a.h	/^    char            *pStr;$/;"	m	struct:tagINCHIGEN_CONTROL
pStr	include/inchi/mode.h	/^    char *pStr;$/;"	m	struct:tagOutputString
pStrErrStruct	include/inchi/ichimain.h	/^    char          pStrErrStruct[STR_ERR_LEN];$/;"	m	struct:tagStructData
pStrErrStruct	include/inchi/inchi_api.h	/^    char          pStrErrStruct[STR_ERR_LEN]; \/* intermediate log (warning\/error report) *\/$/;"	m	struct:tagINCHIGEN_DATA
pStrErrStruct	include/inchi_api.h	/^    char          pStrErrStruct[STR_ERR_LEN]; \/* intermediate log (warning\/error report) *\/$/;"	m	struct:tagINCHIGEN_DATA
pStream	include/openbabel/obconversion.h	/^          std::ios *pStream; \/\/active stream$/;"	m	struct:OpenBabel::OBConversion::StreamState
pTCG	include/inchi/ichirvrs.h	/^    TC_GROUP *pTCG;$/;"	m	struct:tagAllTCGroups
pUnitCell	src/formats/xml/cmlformat.cpp	/^    OBUnitCell* pUnitCell;$/;"	m	class:OpenBabel::CMLFormat	file:
pVA	include/inchi/ichirvrs.h	/^    VAL_AT  *pVA;$/;"	m	struct:tagStructFromInChI
pXYZ	include/inchi/ichirvrs.h	/^    XYZ_COORD    *pXYZ;$/;"	m	struct:tagStructFromInChI
p_atom	include/OB-BGL/mol_graph.h	/^        OpenBabel::OBAtom* p_atom; \/\/ source OBAtom*$/;"	m	class:boost::graph_traits::out_edge_iterator
p_atom	include/OB-BGL/mol_graph.h	/^        OpenBabel::OBAtom* p_atom;$/;"	m	class:boost::graph_traits::adjacent_iterator
p_crossover	include/openbabel/conformersearch.h	/^      double p_crossover;	\/\/!< Crossover probability$/;"	m	class:OpenBabel::OBConformerSearch
p_orig_at_num	include/inchi/ichirvrs.h	/^    AT_NUMB       p_orig_at_num[MAX_NUM_STEREO_ATOM_NEIGH];$/;"	m	struct:tagInpAtomAddParities
p_orig_at_num	include/inchi/inchi_api.h	/^    AT_NUMBR      p_orig_at_num[MAX_NUM_STEREO_ATOM_NEIGH]; \/* orig_at_number of each neighbor > 0; 0=> no neighbor *\/$/;"	m	struct:tagNormAtom
p_orig_at_num	include/inchi/inpdef.h	/^    AT_NUMB       p_orig_at_num[MAX_NUM_STEREO_ATOM_NEIGH];$/;"	m	struct:tagInputAtom
p_orig_at_num	include/inchi_api.h	/^    AT_NUMBR      p_orig_at_num[MAX_NUM_STEREO_ATOM_NEIGH]; \/* orig_at_number of each neighbor > 0; 0=> no neighbor *\/$/;"	m	struct:tagNormAtom
p_parity	include/inchi/ichirvrs.h	/^    S_CHAR        p_parity;$/;"	m	struct:tagInpAtomAddParities
p_parity	include/inchi/inchi_api.h	/^    S_CHAR        p_parity;                 \/* tetrahedral (sp3) cml parity *\/$/;"	m	struct:tagNormAtom
p_parity	include/inchi/inpdef.h	/^    S_CHAR        p_parity;$/;"	m	struct:tagInputAtom
p_parity	include/inchi_api.h	/^    S_CHAR        p_parity;                 \/* tetrahedral (sp3) cml parity *\/$/;"	m	struct:tagNormAtom
pageCount_	include/openbabel/json/json.h	/^      PageIndex pageCount_;$/;"	m	class:Json::ValueInternalArray
pages_	include/openbabel/json/json.h	/^      Value **pages_;$/;"	m	class:Json::ValueInternalArray
painter	src/depict/depict.cpp	/^      OBPainter *painter;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
pairIndex	src/forcefields/forcefieldmmff94.h	/^      int pairIndex; \/\/ index into iteration using FOR_PAIRS_OF_MOL(..., _mol)$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationMMFF94
pairIndex	src/forcefields/forcefieldmmff94.h	/^      int pairIndex; \/\/ index into iteration using FOR_PAIRS_OF_MOL(..., _mol)$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
palign	src/confsearch.cpp	/^      OBAlign* palign;$/;"	m	class:OpenBabel::OBDiversePoses	file:
para	include/openbabel/stereo/stereo.h	/^    bool para; \/\/! para- (=ressemble) or true-stereocenter$/;"	m	struct:OpenBabel::OBStereoUnit
paraAtoms	src/stereo/perception.cpp	/^    std::vector<ParaAtom> paraAtoms;$/;"	m	struct:OpenBabel::StereoRing	file:
paraBonds	src/stereo/perception.cpp	/^    std::vector<ParaBond> paraBonds;$/;"	m	struct:OpenBabel::StereoRing	file:
parent	include/libxml/entities.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDtd
parent	include/libxml/tree.h	/^    struct _xmlDoc  *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc
parent	include/libxml/tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDtd
parent	include/libxml/tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDtd
parent	include/libxml/tree.h	/^    struct _xmlElementContent *parent;	\/* parent *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent
parent	include/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode
parent	include/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
parent	include/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
parent	include/openbabel/tree/tree.hh	/^		tree_node_<T> *parent;$/;"	m	class:tree_node_
parent	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::parent(iter position)$/;"	f	class:tree
parent	src/GUI/optswx.h	/^	wxWindow* parent;$/;"	m	class:DynOptionswx
parent_	include/openbabel/tree/tree.hh	/^				tree_node *parent_;$/;"	m	class:tree::sibling_iterator
parents	src/formats/pdbqtformat.cpp	/^    vector <unsigned int> parents;$/;"	m	class:OpenBabel::branch	file:
parity	include/inchi/extr_ct.h	/^    S_CHAR parity; \/* -- Mask 0x07=BITS_PARITY: --$/;"	m	struct:tagAtom
parity	include/inchi/extr_ct.h	/^    U_CHAR         parity;$/;"	m	struct:tagStereoCarb
parity	include/inchi/extr_ct.h	/^    U_CHAR         parity;$/;"	m	struct:tagStereoDble
parity	include/inchi/inchi_api.h	/^    S_CHAR  parity;         \/* inchi_StereoParity0D: may be a combination of two parities: *\/$/;"	m	struct:tagINCHIStereo0D
parity	include/inchi_api.h	/^    S_CHAR  parity;         \/* inchi_StereoParity0D: may be a combination of two parities: *\/$/;"	m	struct:tagINCHIStereo0D
parity	include/openbabel/generic.h	/^    int parity;$/;"	m	class:OpenBabel::OBChiralData
parity2	include/inchi/extr_ct.h	/^    S_CHAR parity2;        \/* parity including parity due to isotopic terminal H *\/$/;"	m	struct:tagAtom
parity_of_mapped_atom2	src/formats/libinchi/ichimap2.c	/^int parity_of_mapped_atom2( int from_at, int to_at, const sp_ATOM *at, EQ_NEIGH *pEN,$/;"	f
parity_of_mapped_half_bond	src/formats/libinchi/ichimap2.c	/^int parity_of_mapped_half_bond( int from_at, int to_at, int from_neigh, int to_neigh,$/;"	f
parse	src/formats/json/jsoncpp.cpp	/^Reader::parse( const char *beginDoc, const char *endDoc, $/;"	f	class:Json::Reader
parse	src/formats/json/jsoncpp.cpp	/^Reader::parse( const std::string &document, $/;"	f	class:Json::Reader
parse	src/formats/json/jsoncpp.cpp	/^Reader::parse( std::istream& sin,$/;"	f	class:Json::Reader
parse	src/formats/smiley.h	/^      void parse(const std::string &str)$/;"	f	class:Smiley::Parser
parseAtom	src/formats/smiley.h	/^      bool parseAtom()$/;"	f	class:Smiley::Parser
parseAtomCharge	src/formats/pqrformat.cpp	/^  static double parseAtomCharge(char *buffer, OBMol &mol)$/;"	f	namespace:OpenBabel
parseAtomExpr	src/formats/smiley.h	/^      void parseAtomExpr()$/;"	f	class:Smiley::Parser
parseAtomRadius	src/formats/pqrformat.cpp	/^  static double parseAtomRadius(char *buffer, OBMol &mol)$/;"	f	namespace:OpenBabel
parseAtomRecord	src/formats/pdbformat.cpp	/^  static bool parseAtomRecord(char *buffer, OBMol &mol,int \/*chainNum*\/)$/;"	f	namespace:OpenBabel
parseAtomRecord	src/formats/pdbqtformat.cpp	/^  static bool parseAtomRecord(char *buffer, OBMol &mol,int chainNum)$/;"	f	namespace:OpenBabel
parseAtomRecord	src/formats/pqrformat.cpp	/^  static bool parseAtomRecord(char *buffer, OBMol &mol,int \/*chainNum*\/)$/;"	f	namespace:OpenBabel
parseBond	src/formats/smiley.h	/^      void parseBond()$/;"	f	class:Smiley::Parser
parseBracketAtom	src/formats/smiley.h	/^      void parseBracketAtom()$/;"	f	class:Smiley::Parser
parseChain	src/formats/smiley.h	/^      void parseChain()$/;"	f	class:Smiley::Parser
parseCharDigit	src/formats/smiley.h	/^      bool parseCharDigit(char chr, int type, int defaultValue, int &parsedOp,$/;"	f	class:Smiley::Parser
parseCharNumber	src/formats/smiley.h	/^      bool parseCharNumber(char chr, int type, int &parsedOp,$/;"	f	class:Smiley::Parser
parseCharge	src/formats/smiley.h	/^      void parseCharge()$/;"	f	class:Smiley::Parser
parseChiral	src/formats/smiley.h	/^      void parseChiral()$/;"	f	class:Smiley::Parser
parseClass	src/formats/smiley.h	/^      void parseClass()$/;"	f	class:Smiley::Parser
parseConectRecord	src/formats/pdbformat.cpp	/^  bool parseConectRecord(char *buffer,OBMol &mol)$/;"	f	namespace:OpenBabel
parseFormula	src/formats/MCDLformat.cpp	/^bool MCDLFormat::parseFormula(const string formulaString, std::vector <int>& enumber) {$/;"	f	class:OpenBabel::MCDLFormat
parseFormula	src/mcdlutil.cpp	/^  bool parseFormula(const std::string formulaString, std::vector <int>& enumber, int & valency) {$/;"	f	namespace:OpenBabel
parseHydrogenCount	src/formats/smiley.h	/^      void parseHydrogenCount()$/;"	f	class:Smiley::Parser
parseIsotope	src/formats/smiley.h	/^      void parseIsotope()$/;"	f	class:Smiley::Parser
parseMode	include/libxml/parser.h	/^    xmlParserMode     parseMode;    \/* the parser mode *\/$/;"	m	struct:_xmlParserCtxt
parseOrganicSubsetAtom	src/formats/smiley.h	/^      bool parseOrganicSubsetAtom()$/;"	f	class:Smiley::Parser
parseRingBond	src/formats/smiley.h	/^      void parseRingBond()$/;"	f	class:Smiley::Parser
parseSymbol	src/formats/smiley.h	/^      std::pair<int, bool> parseSymbol(bool ignoreHydrogen = false)$/;"	f	class:Smiley::Parser
parse_options_string	src/formats/libinchi/inchi_dll.c	/^int parse_options_string ( char *cmd, const char *argv[], int maxargs )$/;"	f
part	include/openbabel/parsmart.h	/^    int part;$/;"	m	struct:OpenBabel::__anon55
parts	include/openbabel/parsmart.h	/^    int parts;$/;"	m	struct:OpenBabel::__anon56
pasc_CheckINCHI	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_CheckINCHI(const char *szINCHI, const int strict)$/;"	f
pasc_CheckINCHIKey	src/formats/libinchi/ikey_dll.c	/^int PASCAL pasc_CheckINCHIKey(const char *szINCHIKey)$/;"	f
pasc_FreeINCHI	src/formats/libinchi/inchi_dll.c	/^void PASCAL pasc_FreeINCHI( inchi_Output *out )$/;"	f
pasc_FreeStdINCHI	src/formats/libinchi/inchi_dll.c	/^void PASCAL pasc_FreeStdINCHI( inchi_Output *out )$/;"	f
pasc_FreeStructFromINCHI	src/formats/libinchi/inchi_dll.c	/^void PASCAL pasc_FreeStructFromINCHI( inchi_OutputStruct *out )$/;"	f
pasc_FreeStructFromStdINCHI	src/formats/libinchi/inchi_dll.c	/^void PASCAL pasc_FreeStructFromStdINCHI( inchi_OutputStruct *out )$/;"	f
pasc_Free_inchi_Input	src/formats/libinchi/inchi_dll.c	/^void PASCAL pasc_Free_inchi_Input( inchi_Input *pInp )$/;"	f
pasc_Free_std_inchi_Input	src/formats/libinchi/inchi_dll.c	/^void PASCAL pasc_Free_std_inchi_Input( inchi_Input *pInp )$/;"	f
pasc_GetINCHI	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_GetINCHI( inchi_Input *inp, inchi_Output *out )$/;"	f
pasc_GetStdINCHI	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_GetStdINCHI( inchi_Input *inp, inchi_Output *out )$/;"	f
pasc_GetStringLength	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_GetStringLength( char *p )$/;"	f
pasc_GetStructFromINCHI	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_GetStructFromINCHI( inchi_InputINCHI *inp, inchi_OutputStruct *out )$/;"	f
pasc_GetStructFromStdINCHI	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_GetStructFromStdINCHI( inchi_InputINCHI *inp, inchi_OutputStruct *out )$/;"	f
pasc_Get_inchi_Input_FromAuxInfo	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_Get_inchi_Input_FromAuxInfo( char *szInchiAuxInfo, $/;"	f
pasc_Get_std_inchi_Input_FromAuxInfo	src/formats/libinchi/inchi_dll.c	/^int PASCAL pasc_Get_std_inchi_Input_FromAuxInfo( char *szInchiAuxInfo, $/;"	f
pasc_INCHIGEN_Create	src/formats/libinchi/inchi_dll_a.c	/^INCHIGEN_HANDLE PASCAL pasc_INCHIGEN_Create(void) $/;"	f
pasc_INCHIGEN_Destroy	src/formats/libinchi/inchi_dll_a.c	/^void PASCAL pasc_INCHIGEN_Destroy(INCHIGEN_HANDLE HGen) $/;"	f
pasc_INCHIGEN_DoCanonicalization	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_INCHIGEN_DoCanonicalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
pasc_INCHIGEN_DoNormalization	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_INCHIGEN_DoNormalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
pasc_INCHIGEN_DoSerialization	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_INCHIGEN_DoSerialization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Output * pResults ) $/;"	f
pasc_INCHIGEN_Reset	src/formats/libinchi/inchi_dll_a.c	/^void PASCAL pasc_INCHIGEN_Reset( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData,  inchi_Output *pResults) $/;"	f
pasc_INCHIGEN_Setup	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_INCHIGEN_Setup( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Input * pInp) $/;"	f
pasc_STDINCHIGEN_Create	src/formats/libinchi/inchi_dll_a.c	/^INCHIGEN_HANDLE PASCAL pasc_STDINCHIGEN_Create(void) $/;"	f
pasc_STDINCHIGEN_Destroy	src/formats/libinchi/inchi_dll_a.c	/^void PASCAL pasc_STDINCHIGEN_Destroy(INCHIGEN_HANDLE HGen) $/;"	f
pasc_STDINCHIGEN_DoCanonicalization	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_STDINCHIGEN_DoCanonicalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
pasc_STDINCHIGEN_DoNormalization	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_STDINCHIGEN_DoNormalization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData ) $/;"	f
pasc_STDINCHIGEN_DoSerialization	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_STDINCHIGEN_DoSerialization( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Output * pResults ) $/;"	f
pasc_STDINCHIGEN_Reset	src/formats/libinchi/inchi_dll_a.c	/^void PASCAL pasc_STDINCHIGEN_Reset( INCHIGEN_HANDLE HGen, INCHIGEN_DATA *pGenData,  inchi_Output *pResults) $/;"	f
pasc_STDINCHIGEN_Setup	src/formats/libinchi/inchi_dll_a.c	/^int PASCAL pasc_STDINCHIGEN_Setup( INCHIGEN_HANDLE HGen, INCHIGEN_DATA * pGenData, inchi_Input * pInp) $/;"	f
pass	include/inchi/ichi_bns.h	/^  S_CHAR     pass;                           \/* number of times changed in AugmentEdge() *\/$/;"	m	struct:BnsStEdge
pass	include/inchi/ichi_bns.h	/^  S_CHAR    pass;                           \/* number of times changed in AugmentEdge() *\/$/;"	m	struct:BnsEdge
path	include/inchi/ichidrp.h	/^    const char     *path[MAX_NUM_PATHS];$/;"	m	struct:tagInputParms
path	include/libxml/uri.h	/^    char *path;		\/* the path string *\/$/;"	m	struct:_xmlURI
pattern	src/fingerprints/finger3.cpp	/^  struct pattern$/;"	s	class:OpenBabel::PatternFP	file:
patty	include/openbabel/patty.h	/^    patty()$/;"	f	class:OpenBabel::patty
patty	include/openbabel/patty.h	/^    patty(char *s)$/;"	f	class:OpenBabel::patty
patty	include/openbabel/patty.h	/^    patty(const std::string &s)$/;"	f	class:OpenBabel::patty
patty	include/openbabel/patty.h	/^class OBAPI patty$/;"	c	namespace:OpenBabel
pbTautFlags	include/inchi/ichi_bns.h	/^    INCHI_MODE     *pbTautFlags;     \/* carry it through all functions; never NULL *\/$/;"	m	struct:BalancedNetworkStructure
pbTautFlagsDone	include/inchi/ichi_bns.h	/^    INCHI_MODE     *pbTautFlagsDone; \/* carry it through all functions; never NULL *\/$/;"	m	struct:BalancedNetworkStructure
pbfsq	include/inchi/ichirvrs.h	/^    BFS_Q   *pbfsq;$/;"	m	struct:tagStructFromInChI
pctxt	include/libxml/debugXML.h	/^    xmlXPathContextPtr pctxt;$/;"	m	struct:_xmlShellCtxt
pdp	include/inchi/ichidrp.h	/^    PER_DRAW_PARMS  pdp;$/;"	m	struct:tagInputParms
pdp	include/inchi/ichidrp.h	/^    PER_DRAW_PARMS *pdp;   \/* persistent: save between calls (window size) *\/$/;"	m	struct:tagDrawParms
pdp	src/formats/libinchi/ichirvr7.c	/^static PER_DRAW_PARMS pdp;$/;"	v	file:
pedantic	include/libxml/parser.h	/^    int                pedantic;      \/* signal pedantic warnings *\/$/;"	m	struct:_xmlParserCtxt
penWidth	src/depict/depict.cpp	/^      double     penWidth;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
pentities	include/libxml/tree.h	/^    void          *pentities;   \/* Hash table for param entities if any *\/$/;"	m	struct:_xmlDtd
perceived	include/openbabel/base.h	/^    perceived,           \/\/!< Perceived by Open Babel library methods$/;"	e	enum:OpenBabel::DataOrigin
permutationInvertsCisTransBeginOrEndAtom	src/stereo/perception.cpp	/^    static bool permutationInvertsCisTransBeginOrEndAtom(const Automorphism &p, OBBond *bond, OBAtom *beginOrEnd,$/;"	f	struct:OpenBabel::StereoInverted
permutationInvertsCisTransCenter	src/stereo/perception.cpp	/^    static bool permutationInvertsCisTransCenter(const Automorphism &p, OBBond *bond,$/;"	f	struct:OpenBabel::StereoInverted
permutationInvertsTetrahedralCenter	src/stereo/perception.cpp	/^    static bool permutationInvertsTetrahedralCenter(const Automorphism &p,$/;"	f	struct:OpenBabel::StereoInverted
pff	src/ops/opconfab.cpp	/^      OBForceField *pff;$/;"	m	class:OpenBabel::OpConfab	file:
phase	include/openbabel/kinetics.h	/^  char phase;$/;"	m	class:OpenBabel::OBNasaThermoData
phmodel	src/phmodel.cpp	/^  OBPhModel phmodel;$/;"	m	namespace:OpenBabel	file:
pi	src/charges/qtpie.h	32;"	d
placeholderOBDefine	src/ops/loader.cpp	/^OBDefine placeholderOBDefine;$/;"	m	namespace:OpenBabel	file:
platinum	src/mcdlutil.cpp	/^  const int platinum[NPLATINUMATOMS] ={44,45,46,76,77,78};$/;"	m	namespace:OpenBabel	file:
pmol	src/formats/xml/cmlreactformat.cpp	/^  OBMol* pmol;$/;"	m	class:OpenBabel::CMLReactFormat	file:
pnEdges	include/inchi/ichirvrs.h	/^    EdgeIndex *pnEdges;$/;"	m	struct:tagEdgeList
pn_RankForSort	src/formats/libinchi/ichicano.c	/^const AT_RANK         *pn_RankForSort;$/;"	v
pn_tRankForSort	src/formats/libinchi/ichitaut.c	/^AT_RANK        *pn_tRankForSort;$/;"	v
pointer	include/OB-BGL/mol_graph.h	/^        typedef OpenBabel::OBAtom** pointer;$/;"	t	class:boost::graph_traits::adjacent_iterator
pointer	include/OB-BGL/mol_graph.h	/^        typedef edge_descriptor* pointer;$/;"	t	class:boost::graph_traits::out_edge_iterator
pointer	include/openbabel/json/json.h	/^      typedef Value *pointer;$/;"	t	class:Json::ValueIterator
pointer	include/openbabel/json/json.h	/^      typedef const Value *pointer;$/;"	t	class:Json::ValueConstIterator
pointer	include/openbabel/tree/tree.hh	/^				typedef T*                              pointer;$/;"	t	class:tree::iterator_base
popInput	src/obconversion.cpp	/^  void OBConversion::StreamState::popInput(OBConversion& conv)$/;"	f	class:OpenBabel::OBConversion::StreamState
popOutput	src/obconversion.cpp	/^  void OBConversion::StreamState::popOutput(OBConversion& conv)$/;"	f	class:OpenBabel::OBConversion::StreamState
port	include/libxml/uri.h	/^    int port;		\/* the port number *\/$/;"	m	struct:_xmlURI
portable_snprintf	src/snprintf.c	/^int portable_snprintf(char *str, size_t str_m, const char *fmt, \/*args*\/ ...)$/;"	f
portable_snprintf	src/snprintf.c	398;"	d	file:
portable_vsnprintf	src/snprintf.c	400;"	d	file:
pos	src/formats/smiley.h	/^        std::size_t pos;$/;"	m	struct:Smiley::Parser::BranchInfo
pos	src/formats/smiley.h	/^        std::size_t pos;$/;"	m	struct:Smiley::Parser::ChiralInfo
pos	src/formats/smiley.h	/^        std::size_t pos;$/;"	m	struct:Smiley::Parser::RingBondInfo
pos	src/formats/smiley.h	/^      std::size_t pos() const$/;"	f	class:Smiley::Exception
pos_a	include/openbabel/forcefield.h	/^    double *pos_a, *pos_b;$/;"	m	class:OpenBabel::OBFFCalculation2
pos_b	include/openbabel/forcefield.h	/^    double *pos_a, *pos_b;$/;"	m	class:OpenBabel::OBFFCalculation2
pos_c	include/openbabel/forcefield.h	/^    double *pos_c;$/;"	m	class:OpenBabel::OBFFCalculation3
pos_d	include/openbabel/forcefield.h	/^    double *pos_d;$/;"	m	class:OpenBabel::OBFFCalculation4
poses	src/confsearch.cpp	/^      Tree poses;$/;"	m	class:OpenBabel::OBDiversePoses	file:
possibleAromatic	src/mcdlutil.cpp	/^  const int possibleAromatic [NAROMMAX] = {7,8,15,16,33,34,51,52,HETERO_ATOM};$/;"	m	namespace:OpenBabel	file:
post_fix_odd_things	src/formats/libinchi/strutil.c	/^int post_fix_odd_things( int num_atoms, inp_ATOM *at )$/;"	f
post_order_iterator	include/openbabel/tree/tree.hh	/^		class post_order_iterator : public iterator_base {$/;"	c	class:tree
post_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::post_order_iterator::post_order_iterator()$/;"	f	class:tree::post_order_iterator
post_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::post_order_iterator::post_order_iterator(const iterator_base &other)$/;"	f	class:tree::post_order_iterator
post_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::post_order_iterator::post_order_iterator(const sibling_iterator& other)$/;"	f	class:tree::post_order_iterator
post_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::post_order_iterator::post_order_iterator(tree_node *tn)$/;"	f	class:tree::post_order_iterator
posx	src/formats/yasaraformat.cpp	/^  int32 posx;$/;"	m	struct:OpenBabel::mobatom	file:
posy	src/formats/yasaraformat.cpp	/^  int32 posy;$/;"	m	struct:OpenBabel::mobatom	file:
posz	src/formats/yasaraformat.cpp	/^  int32 posz;$/;"	m	struct:OpenBabel::mobatom	file:
potentialAromaticBonds	src/kekulize.cpp	/^  void potentialAromaticBonds(OBMol *mol, OBBitVec &bonds)$/;"	f	namespace:OpenBabel
ppAT_RANK	include/inchi/ichisize.h	/^typedef pAT_RANK *ppAT_RANK;$/;"	t
preMet	src/distgeom.cpp	/^    Eigen::MatrixXf bounds, preMet;$/;"	m	class:OpenBabel::DistanceGeometryPrivate	file:
pre_order_iterator	include/openbabel/tree/tree.hh	/^		class pre_order_iterator : public iterator_base {$/;"	c	class:tree
pre_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::pre_order_iterator::pre_order_iterator()$/;"	f	class:tree::pre_order_iterator
pre_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::pre_order_iterator::pre_order_iterator(const iterator_base &other)$/;"	f	class:tree::pre_order_iterator
pre_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::pre_order_iterator::pre_order_iterator(const sibling_iterator& other)$/;"	f	class:tree::pre_order_iterator
pre_order_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::pre_order_iterator::pre_order_iterator(tree_node *tn)$/;"	f	class:tree::pre_order_iterator
prefix	include/libxml/tree.h	/^    const xmlChar             *prefix;	\/* Namespace prefix *\/$/;"	m	struct:_xmlElementContent
prefix	include/libxml/tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlAttribute
prefix	include/libxml/tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlElement
prefix	include/libxml/tree.h	/^    const xmlChar *prefix;	\/* prefix for the namespace *\/$/;"	m	struct:_xmlNs
prefix	src/formats/xml/cmlformat.cpp	/^    xmlChar* prefix;$/;"	m	class:OpenBabel::CMLFormat	file:
prepareQuery	src/mcdlutil.cpp	/^  int TEditedMolecule::prepareQuery(TSimpleMolecule & sMol) {$/;"	f	class:OpenBabel::TEditedMolecule
prepareTest	src/mcdlutil.cpp	/^  void prepareTest(OBMol * pmol, std::ostream & ofs) {$/;"	f	namespace:OpenBabel
prepend_child	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::prepend_child(iter position)$/;"	f	class:tree
prepend_child	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::prepend_child(iter position, const T& x)$/;"	f	class:tree
prepend_child	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::prepend_child(iter position, iter other)$/;"	f	class:tree
prepend_children	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::prepend_children(iter position, sibling_iterator from, sibling_iterator to)$/;"	f	class:tree
preserve	include/libxml/schemasInternals.h	/^    int preserve;        \/* whether to free the document *\/$/;"	m	struct:_xmlSchema
prev	include/libxml/entities.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode
prev	include/libxml/tree.h	/^    struct _xmlAttr *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr
prev	include/libxml/tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode
prev	include/libxml/tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode
prev	include/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode
prev	include/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode
prev	include/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode
prev	src/chains.cpp	/^    int prev;$/;"	m	struct:OpenBabel::__anon73	file:
prev	src/formats/libinchi/ichican2.c	/^    int       prev;   \/* position of the previously returned cell element *\/$/;"	m	struct:tagCell	file:
prev	src/formats/libinchi/ichiread.c	/^    AT_NUMB prev;  \/* position of the previous neighbor in the list *\/$/;"	m	struct:tagOneLinkedBond	file:
prev	src/formats/smilesformat.cpp	/^      int prev;$/;"	m	struct:OpenBabel::OBSmilesParser::ExternalBond	file:
prev	src/formats/smilesformat.cpp	/^      int prev;$/;"	m	struct:OpenBabel::OBSmilesParser::RingClosureBond	file:
prev_sibling	include/openbabel/tree/tree.hh	/^		tree_node_<T> *prev_sibling, *next_sibling;$/;"	m	class:tree_node_
previous_	include/openbabel/json/json.h	/^      ValueInternalLink *previous_;$/;"	m	class:Json::ValueInternalLink
previous_sibling	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::previous_sibling(iter position) const$/;"	f	class:tree
prim	src/formats/libinchi/ichi_bns.c	414;"	d	file:
primes	src/rand.cpp	/^  static int primes[MAXPRIMES] = {$/;"	m	namespace:OpenBabel	file:
printRingBonds	src/formats/smiley.h	/^      void printRingBonds()$/;"	f	class:Smiley::Parser
print_assigned	src/tautomer.cpp	/^    void print_assigned(const std::vector<Level> &levels, const std::vector<Type> &atomTypes)$/;"	f	struct:OpenBabel::TautomerImpl
print_atom_types	src/tautomer.cpp	/^    void print_atom_types(const std::vector<Type> &types)$/;"	f	struct:OpenBabel::TautomerImpl
print_bond_types	src/tautomer.cpp	/^    void print_bond_types(const std::vector<Type> &types)$/;"	f	struct:OpenBabel::TautomerImpl
print_chiralNbrs	src/formats/smiley.h	/^      void print_chiralNbrs()$/;"	f	class:Smiley::Parser
print_matrix	src/matrix.cpp	/^void print_matrix(std::vector<std::vector<double> > &m)$/;"	f	namespace:OpenBabel
print_matrix_f	src/matrix.cpp	/^void print_matrix_f(double *m, int rows, int cols)$/;"	f	namespace:OpenBabel
print_matrix_ff	src/matrix.cpp	/^void print_matrix_ff(double **m, int rows, int cols)$/;"	f	namespace:OpenBabel
print_orbits	src/canon.cpp	/^    static void print_orbits(const Orbits &orbits)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
print_orbits	src/canon.cpp	/^    static void print_orbits(const std::string &label, const Orbits &orbits)$/;"	f	struct:OpenBabel::CanonicalLabelsImpl
print_subtree_bracketed	include/openbabel/tree/tree_util.hh	/^void print_subtree_bracketed(const tree<T>& t, typename tree<T>::iterator iRoot, std::ostream& str)$/;"	f	namespace:kptree
print_sym_classes	src/graphsym.cpp	/^void print_sym_classes(const std::string &label, const std::vector<std::pair<OpenBabel::OBAtom*, unsigned int> > &atom_sym_classes)$/;"	f
print_tree_bracketed	include/openbabel/tree/tree_util.hh	/^void print_tree_bracketed(const tree<T>& t, std::ostream& str)$/;"	f	namespace:kptree
print_vector	src/canon.cpp	/^void print_vector(const std::string &label, const std::vector<T> &v)$/;"	f
print_vector	src/formats/smileyformat.cpp	/^  void print_vector(const std::string &label, const std::vector<T> &v)$/;"	f	namespace:OpenBabel
print_vector	src/graphsym.cpp	/^void print_vector(const std::string &label, const std::vector<T> &v)$/;"	f
print_vector	src/isomorphism.cpp	/^    void print_vector(const std::string &label, const std::vector<T> &v)$/;"	f	namespace:OpenBabel
print_vector	src/stereo/perception.cpp	/^void print_vector(const std::string &label, const std::vector<T> &v)$/;"	f
processAlleneStereochemistry	src/formats/smiley.h	/^      int processAlleneStereochemistry(ChiralInfo &chiralInfo)$/;"	f	class:Smiley::Parser
processBondPrimitive	src/formats/smiley.h	/^      void processBondPrimitive(int type, bool &firstPrimitive, int &parsedOp)$/;"	f	class:Smiley::Parser
processContents	include/libxml/schemasInternals.h	/^    int processContents;$/;"	m	struct:_xmlSchemaWildcard
processImplicitAnd	src/formats/smiley.h	/^      void processImplicitAnd(int &parsedOp, bool firstPrimitive)$/;"	f	class:Smiley::Parser
processRingBond	src/formats/smiley.h	/^      void processRingBond(int rnum, std::size_t pos)$/;"	f	class:Smiley::Parser
processStereochemistry	src/formats/smiley.h	/^      void processStereochemistry()$/;"	f	class:Smiley::Parser
processingInstruction	include/libxml/parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandler
processingInstruction	include/libxml/parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandlerV1
processingInstructionSAXFunc	include/libxml/parser.h	/^typedef void (*processingInstructionSAXFunc) (void *ctx,$/;"	t
progressive	include/libxml/parser.h	/^    int                progressive;   \/* is this a progressive parsing *\/$/;"	m	struct:_xmlParserCtxt
propagatedAtoms	src/tautomer.cpp	/^      std::vector<OBAtom*> propagatedAtoms;$/;"	m	struct:OpenBabel::TautomerImpl::Level	file:
propagatedBonds	src/tautomer.cpp	/^      std::vector<OBBond*> propagatedBonds;$/;"	m	struct:OpenBabel::TautomerImpl::Level	file:
properties	include/libxml/tree.h	/^    struct _xmlAttr *properties;\/* properties list *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlAttr
property	src/formats/yasaraformat.cpp	/^  float property; };$/;"	m	struct:OpenBabel::atomid	file:
protein_helix	src/formats/fastaformat.cpp	/^  HelixParameters protein_helix = { 1.4781, 1.74474, 2 }; \/\/ HNCA-.N-CA-C-.N-CA-C-.OXT-HOCA$/;"	m	namespace:OpenBabel	file:
proximityPosition	include/libxml/xpath.h	/^    int proximityPosition;		\/* the proximity position *\/$/;"	m	struct:_xmlXPathContext
ps1	src/kekulize.cpp	/^      int ps1;$/;"	m	struct:OpenBabel::Kekulize::stateDiff_t	file:
ps2	src/kekulize.cpp	/^      int ps2;$/;"	m	struct:OpenBabel::Kekulize::stateDiff_t	file:
psb	src/kekulize.cpp	/^      int psb;$/;"	m	struct:OpenBabel::Kekulize::stateDiff_t	file:
psvi	include/libxml/tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlAttr
psvi	include/libxml/tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlNode
psvi	include/libxml/tree.h	/^    void           *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlDoc
ptInRect	src/mcdlutil.cpp	/^  bool ptInRect(const Rect r, const Point p) {$/;"	f	namespace:OpenBabel
ptrAtom	src/formats/fastaformat.cpp	/^  typedef OBAtom * ptrAtom;$/;"	t	namespace:OpenBabel	file:
pushInput	src/obconversion.cpp	/^  void OBConversion::StreamState::pushInput(OBConversion& conv)$/;"	f	class:OpenBabel::OBConversion::StreamState
pushOutput	src/obconversion.cpp	/^  void OBConversion::StreamState::pushOutput(OBConversion& conv)$/;"	f	class:OpenBabel::OBConversion::StreamState
pushTab	include/libxml/parser.h	/^    void *            *pushTab;       \/* array of data for push *\/$/;"	m	struct:_xmlParserCtxt
pushValue	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::pushValue( const std::string &value )$/;"	f	class:Json::StyledStreamWriter
pushValue	src/formats/json/jsoncpp.cpp	/^StyledWriter::pushValue( const std::string &value )$/;"	f	class:Json::StyledWriter
put	include/OB-BGL/mol_graph.h	/^void put( map_t& map, typename map_t::key_type key,  typename map_t::value_type value )$/;"	f
put_back_from_zip_stream	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::put_back_from_zip_stream(void)$/;"	f	class:basic_unzip_streambuf
q	include/inchi/ichirvrs.h	/^    QUEUE   *q;$/;"	m	struct:tagBfsQueue
q	include/openbabel/molchrg.h	/^    double q;$/;"	m	class:OpenBabel::GasteigerState
qInt	include/inchi/ichiring.h	/^typedef AT_RANK qInt; \/* queue optimization: known type *\/$/;"	t
qa	src/formats/MCDLformat.cpp	/^  int qa [MAXBONDS][4];$/;"	m	class:OpenBabel::MCDLFormat	file:
qfree	include/inchi/mode.h	1018;"	d
qfree	include/inchi/mode.h	1021;"	d
qmalloc	include/inchi/mode.h	1017;"	d
qmalloc	include/inchi/mode.h	1020;"	d
qq	src/forcefields/forcefieldgaff.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationGaff
qq	src/forcefields/forcefieldghemical.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationGhemical
qq	src/forcefields/forcefieldmmff94.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationMMFF94
qq	src/forcefields/forcefielduff.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationUFF
qtrfit	src/obutil.cpp	/^  void qtrfit (double *r,double *f,int size, double u[3][3])$/;"	f	namespace:OpenBabel
quad	include/openbabel/obutil.h	/^        quad(const quad<U,V,W,X> &q):$/;"	f	struct:OpenBabel::quad
quad	include/openbabel/obutil.h	/^    quad():$/;"	f	struct:OpenBabel::quad
quad	include/openbabel/obutil.h	/^    quad(const T1 &a, const T2 &b, const T3 &c, const T4 &d):$/;"	f	struct:OpenBabel::quad
quad	include/openbabel/obutil.h	/^    struct quad$/;"	s	namespace:OpenBabel
queried	src/isomorphism.cpp	/^        const OBMol *queried; \/\/ the queried molecule$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queriedAtom	src/isomorphism.cpp	/^        OBAtom *queriedAtom;$/;"	m	struct:OpenBabel::VF2Mapper::Candidate	file:
queriedDepths	src/isomorphism.cpp	/^        std::vector<unsigned int> queryDepths, queriedDepths; \/\/ the terminal sets$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queriedMask	src/isomorphism.cpp	/^        OBBitVec queriedMask; \/\/ the queriedMask$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queriedPath	src/isomorphism.cpp	/^        std::vector<unsigned int> queriedPath; \/\/ the path in the queried molecule$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queriedPathBits	src/isomorphism.cpp	/^        OBBitVec queryPathBits, queriedPathBits; \/\/ the terminal sets$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queries	src/ops/opisomorph.h	/^  std::vector<OBQuery*> queries; \/\/populated if a filename was supplied$/;"	m	class:OpenBabel::OpNewS
query	include/libxml/uri.h	/^    char *query;	\/* the query string *\/$/;"	m	struct:_xmlURI
query	src/isomorphism.cpp	/^        const OBQuery *query; \/\/ the query$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
query	src/ops/opisomorph.h	/^  OBQuery* query;$/;"	m	class:OpenBabel::OpNewS
queryAGer	src/mcdlutil.cpp	/^    std::vector<int> queryAGer;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryAQTested	src/mcdlutil.cpp	/^    std::vector<int> queryAQTested;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryAtom	src/isomorphism.cpp	/^        OBQueryAtom *queryAtom;$/;"	m	struct:OpenBabel::VF2Mapper::Candidate	file:
queryBQCounter	src/mcdlutil.cpp	/^    std::vector<int> queryBQCounter;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryBQTested	src/mcdlutil.cpp	/^    std::vector<int> queryBQTested;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryCurrentAssignment	src/mcdlutil.cpp	/^    std::vector<int> queryCurrentAssignment;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryData	src/mcdlutil.cpp	/^    static std::vector<TEditedMolecule *> queryData;$/;"	m	class:OpenBabel::TemplateRedraw	file:
queryData	src/mcdlutil.cpp	/^  std::vector<TEditedMolecule *> TemplateRedraw::queryData;$/;"	m	class:OpenBabel::TemplateRedraw	file:
queryDepths	src/isomorphism.cpp	/^        std::vector<unsigned int> queryDepths, queriedDepths; \/\/ the terminal sets$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queryEnum	src/mcdlutil.cpp	/^    std::vector<int> queryEnum;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryInverse	src/mcdlutil.cpp	/^    std::vector<int> queryInverse;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryPath	src/isomorphism.cpp	/^        std::vector<unsigned int> queryPath; \/\/ the path in the query$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queryPathBits	src/isomorphism.cpp	/^        OBBitVec queryPathBits, queriedPathBits; \/\/ the terminal sets$/;"	m	struct:OpenBabel::VF2Mapper::State	file:
queryQHydr	src/mcdlutil.cpp	/^    std::vector<int> queryQHydr;$/;"	m	class:OpenBabel::TEditedMolecule	file:
queryStereoQ	src/mcdlutil.cpp	/^    bool queryStereoQ,fIsQueryPrepare;$/;"	m	class:OpenBabel::TEditedMolecule	file:
qx	src/formats/MCDLformat.cpp	/^  int qx [MAXFRAGS];$/;"	m	class:OpenBabel::MCDLFormat	file:
qzfree	include/inchi/mode.h	1032;"	d
r	src/formats/fastaformat.cpp	/^    double x, r, Theta; \/\/ cylindrical polar co-ordinates$/;"	m	struct:OpenBabel::ResidueAtomRecord	file:
r0	src/forcefields/forcefieldgaff.h	/^      double kr, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGaff
r0	src/forcefields/forcefieldghemical.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGhemical
r0	src/forcefields/forcefieldmmff94.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationMMFF94
r0	src/forcefields/forcefielduff.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationUFF
rInlen	include/openbabel/obconversion.h	/^      size_t rInlen; \/\/\/<length in the input stream of the object being read$/;"	m	class:OpenBabel::OBConversion
rInpos	include/openbabel/obconversion.h	/^      std::streampos rInpos; \/\/\/<position in the input stream of the object being read$/;"	m	class:OpenBabel::OBConversion
rab	src/forcefields/forcefieldgaff.h	/^      double Eab, RVDWab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationGaff
rab	src/forcefields/forcefieldgaff.h	/^      double kr, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGaff
rab	src/forcefields/forcefieldgaff.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationGaff
rab	src/forcefields/forcefieldghemical.h	/^      double Ra, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationGhemical
rab	src/forcefields/forcefieldghemical.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationGhemical
rab	src/forcefields/forcefieldghemical.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationGhemical
rab	src/forcefields/forcefieldmmff94.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationMMFF94
rab	src/forcefields/forcefieldmmff94.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationMMFF94
rab	src/forcefields/forcefieldmmff94.h	/^      double rab, epsilon, alpha_a, alpha_b, Na, Nb, Aa, Ab, Ga, Gb;$/;"	m	class:OpenBabel::OBFFVDWCalculationMMFF94
rab	src/forcefields/forcefieldmmff94.h	/^      double theta, rab, rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
rab	src/forcefields/forcefielduff.h	/^      double ka, kaSquared, Ra, kb, Rb, kab, rab;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
rab	src/forcefields/forcefielduff.h	/^      double kb, r0, rab, delta;$/;"	m	class:OpenBabel::OBFFBondCalculationUFF
rab	src/forcefields/forcefielduff.h	/^      double qq, rab;$/;"	m	class:OpenBabel::OBFFElectrostaticCalculationUFF
rab0	include/openbabel/forcefield.h	/^    double rab0, rbc0;$/;"	m	class:OpenBabel::OBFFConstraint
rab0	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
radical	include/inchi/extr_ct.h	/^    S_CHAR radical; \/* 1=>doublet(.), 2=> triplet as singlet (:) ???? why are they same ???? *\/$/;"	m	struct:tagAtom
radical	include/inchi/inchi_api.h	/^    S_CHAR        radical;                  \/* RADICAL_SINGLET, RADICAL_DOUBLET, or RADICAL_TRIPLET *\/$/;"	m	struct:tagNormAtom
radical	include/inchi/inchi_api.h	/^    S_CHAR  radical;              \/* inchi_Radical *\/$/;"	m	struct:tagInchiAtom
radical	include/inchi/inpdef.h	/^    S_CHAR        radical;                 \/* RADICAL_SINGLET, RADICAL_DOUBLET, or RADICAL_TRIPLET *\/$/;"	m	struct:tagInputAtom
radical	include/inchi_api.h	/^    S_CHAR        radical;                  \/* RADICAL_SINGLET, RADICAL_DOUBLET, or RADICAL_TRIPLET *\/$/;"	m	struct:tagNormAtom
radical	include/inchi_api.h	/^    S_CHAR  radical;              \/* inchi_Radical *\/$/;"	m	struct:tagInchiAtom
randomRotation	src/math/matrix3x3.cpp	/^  void matrix3x3::randomRotation(OBRandom &rnd)$/;"	f	class:OpenBabel::matrix3x3
randomUnitVector	src/math/vector3.cpp	/^  void vector3::randomUnitVector(OBRandom *obRandP)$/;"	f	class:OpenBabel::vector3
range_first	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::tree_node *tree<T, tree_node_allocator>::sibling_iterator::range_first() const$/;"	f	class:tree::sibling_iterator
range_last	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::tree_node *tree<T, tree_node_allocator>::sibling_iterator::range_last() const$/;"	f	class:tree::sibling_iterator
rank	include/inchi/ichicomn.h	/^    AT_RANK rank;     \/* equal mapping rank value *\/$/;"	m	struct:tagEquNeigh
rank_mark_bit	src/formats/libinchi/ichican2.c	/^AT_NUMB       rank_mark_bit;$/;"	v
rank_mask_bit	src/formats/libinchi/ichican2.c	/^AT_NUMB       rank_mask_bit;$/;"	v
ranks	src/canon.cpp	/^      const std::vector<unsigned int> &ranks;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::SortAtomsAscending	file:
ranks	src/canon.cpp	/^      const std::vector<unsigned int> &ranks;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::SortAtomsDescending	file:
rate_type	include/openbabel/kinetics.h	/^  enum rate_type {A, n, E};$/;"	g	class:OpenBabel::OBRateData
raw	include/libxml/xmlIO.h	/^    xmlBufferPtr raw;       \/* if encoder != NULL buffer for raw input *\/$/;"	m	struct:_xmlParserInputBuffer
rawconsumed	include/libxml/xmlIO.h	/^    unsigned long rawconsumed;\/* amount consumed from raw *\/$/;"	m	struct:_xmlParserInputBuffer
rbc	src/forcefields/forcefieldmmff94.h	/^      double theta, rab, rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
rbc0	include/openbabel/forcefield.h	/^    double rab0, rbc0;$/;"	m	class:OpenBabel::OBFFConstraint
rbc0	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
rcPict	include/inchi/ichidrp.h	/^    int rcPict[4];$/;"	m	struct:tagPersistDrawParms
rconv	src/formats/confabreport.cpp	/^  OBConversion rconv;$/;"	m	class:OpenBabel::ConfabReport	file:
rdp	include/inchi/ichidrp.h	/^    RET_DRAW_PARMS  rdp;   \/* returned when drawing window is closed *\/$/;"	m	struct:tagDrawParms
reaction_type	include/openbabel/kinetics.h	/^  enum reaction_type {ARRHENIUS=55555, LINDERMANN, TROE, SRI, THREEBODY};$/;"	g	class:OpenBabel::OBRateData
readArray	src/formats/json/jsoncpp.cpp	/^Reader::readArray( Token &\/*tokenStart*\/ )$/;"	f	class:Json::Reader
readCStyleComment	src/formats/json/jsoncpp.cpp	/^Reader::readCStyleComment()$/;"	f	class:Json::Reader
readComment	src/formats/json/jsoncpp.cpp	/^Reader::readComment()$/;"	f	class:Json::Reader
readConnectionMatrix	src/mcdlutil.cpp	/^  void TSimpleMolecule::readConnectionMatrix(const std::vector<int>iA1, const std::vector<int>iA2, const std::vector<double>rx, const std::vector<double>ry, int nAtoms, int nBonds) {$/;"	f	class:OpenBabel::TSimpleMolecule
readConnectionMatrix	src/mcdlutil.cpp	/^  void TSimpleMolecule::readConnectionMatrix(const std::vector<int>iA1, const std::vector<int>iA2, int nAtoms, int nBonds) {$/;"	f	class:OpenBabel::TSimpleMolecule
readCppStyleComment	src/formats/json/jsoncpp.cpp	/^Reader::readCppStyleComment()$/;"	f	class:Json::Reader
readIntegerFromRecord	src/formats/pdbformat.cpp	/^  static bool readIntegerFromRecord(char *buffer, unsigned int columnAsSpecifiedInPDB, long int *target)$/;"	f	namespace:OpenBabel
readNumber	src/formats/json/jsoncpp.cpp	/^Reader::readNumber()$/;"	f	class:Json::Reader
readOBMol	src/mcdlutil.cpp	/^  void TSimpleMolecule::readOBMol(OBMol * pmol) {$/;"	f	class:OpenBabel::TSimpleMolecule
readObject	src/formats/json/jsoncpp.cpp	/^Reader::readObject( Token &\/*tokenStart*\/ )$/;"	f	class:Json::Reader
readReactions	src/formats/chemdrawcdx.cpp	/^  bool readReactions;$/;"	m	class:OpenBabel::ChemDrawBinaryXFormat	file:
readString	src/formats/json/jsoncpp.cpp	/^Reader::readString()$/;"	f	class:Json::Reader
readToken	src/formats/json/jsoncpp.cpp	/^Reader::readToken( Token &token )$/;"	f	class:Json::Reader
readValue	src/formats/json/jsoncpp.cpp	/^Reader::readValue()$/;"	f	class:Json::Reader
read_atom_block	include/inchi/lreadmol.h	/^int read_atom_block( MOL_CTAB* ctab, FILE *inp, int err, char *pStrErr )$/;"	f
read_bonds_block	include/inchi/lreadmol.h	/^int read_bonds_block( MOL_CTAB* ctab, FILE *inp, int err, char *pStrErr )$/;"	f
read_file	src/charges/fromfile.cpp	/^	bool read_file( const char *file, std::map< std::string, double> &q_by_name ) {$/;"	f	namespace:OpenBabel
read_footer	src/zipstreamimpl.h	/^basic_zip_istream<charT, traits>::read_footer(void)$/;"	f	class:basic_zip_istream
read_int	src/formats/fchkformat.cpp	/^  bool FCHKFormat::read_int(const char * const line, int * const num)$/;"	f	class:OpenBabel::FCHKFormat
read_mol_file	include/inchi/lreadmol.h	/^MOL_DATA* read_mol_file( FILE* inp, MOL_HEADER_BLOCK *OnlyHeaderBlock, MOL_CTAB *OnlyCtab,$/;"	f
read_numbers	src/formats/fchkformat.cpp	/^  bool FCHKFormat::read_numbers(const char * const line, vector<T> & v, const unsigned int width)$/;"	f	class:OpenBabel::FCHKFormat
read_properties_block	include/inchi/lreadmol.h	/^int read_properties_block( MOL_CTAB* ctab, MOL_HEADER_BLOCK *pHdr, FILE *inp, int err, char *pStrErr )$/;"	f
read_rules	src/patty.cpp	/^  void patty::read_rules(const string &infile)$/;"	f	class:OpenBabel::patty
read_sdfile_segment	include/inchi/lreadmol.h	/^MOL_DATA* read_sdfile_segment(FILE* inp, MOL_HEADER_BLOCK *OnlyHeaderBlock, MOL_CTAB *OnlyCtab,$/;"	f
read_section	src/formats/fchkformat.cpp	/^  bool FCHKFormat::read_section(const char * const line,$/;"	f	class:OpenBabel::FCHKFormat
read_stext_block	include/inchi/lreadmol.h	/^int read_stext_block( MOL_CTAB* ctab, FILE *inp, int err, char *pStrErr )$/;"	f
readcallback	include/libxml/xmlIO.h	/^    xmlInputReadCallback   readcallback;$/;"	m	struct:_xmlParserInputBuffer
reader	include/openbabel/xml.h	/^      xmlTextReaderPtr reader() const$/;"	f	class:OpenBabel::XMLBaseFormat
realValue	include/openbabel/json/json.h	/^      realValue,     \/\/\/< double value$/;"	e	enum:Json::ValueType
real_	include/openbabel/json/json.h	/^         double real_;$/;"	m	union:Json::Value::ValueHolder
receivebits	src/formats/xtcformat.cpp	/^  int XTCFormat::receivebits(int buf[], int num_of_bits) {$/;"	f	class:OpenBabel::XTCFormat
receiveints	src/formats/xtcformat.cpp	/^  void XTCFormat::receiveints(int buf[], const int num_of_ints, int num_of_bits,$/;"	f	class:OpenBabel::XTCFormat
record	include/OB-BGL/mol_graph.h	/^recorder< output_iterator, Tag > record(output_iterator out, Tag) {$/;"	f	namespace:boost
record_info	include/libxml/parser.h	/^    int record_info;                  \/* Whether node info should be kept *\/$/;"	m	struct:_xmlParserCtxt
recorder	include/OB-BGL/mol_graph.h	/^    recorder(output_iterator o) : m_output(o) { }$/;"	f	struct:boost::recorder
recorder	include/OB-BGL/mol_graph.h	/^struct recorder$/;"	s	namespace:boost
recoverFromError	src/formats/json/jsoncpp.cpp	/^Reader::recoverFromError( TokenType skipUntilToken )$/;"	f	class:Json::Reader
recovery	include/libxml/parser.h	/^    int                recovery;      \/* run in recovery mode *\/$/;"	m	struct:_xmlParserCtxt
recur	include/openbabel/parsmart.h	/^      recur;$/;"	m	union:OpenBabel::_AtomExpr	typeref:struct:OpenBabel::_AtomExpr::__anon49
recur	include/openbabel/parsmart.h	/^      void *recur;$/;"	m	struct:OpenBabel::_AtomExpr::__anon49
recurse	include/libxml/schemasInternals.h	/^    int recurse;$/;"	m	struct:_xmlSchemaType
recursive	src/formats/smiley.h	/^        void *recursive;$/;"	m	struct:Smiley::SmartsAtomExpr::__anon80::__anon82
recursive	src/formats/smiley.h	/^      } recursive;$/;"	m	union:Smiley::SmartsAtomExpr::__anon80	typeref:struct:Smiley::SmartsAtomExpr::__anon80::__anon82
red	include/openbabel/depict/painter.h	/^    double red, green, blue, alpha;$/;"	m	struct:OpenBabel::OBColor
red	src/isomorphism.cpp	/^  static const char *red    = "\\033[1;31m";$/;"	m	namespace:OpenBabel	file:
redef	include/libxml/schemasInternals.h	/^    struct _xmlSchemaType *redef;\/* possible redefinitions for the type *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType
redraw	src/mcdlutil.cpp	/^  void TSimpleMolecule::redraw(const std::vector<int>listAtomClean, const std::vector<int>listBondClean,$/;"	f	class:OpenBabel::TSimpleMolecule
redrawFine	src/mcdlutil.cpp	/^  void TemplateRedraw::redrawFine(TSimpleMolecule& smIn) {$/;"	f	class:OpenBabel::TemplateRedraw
redrawMolecule	src/mcdlutil.cpp	/^  void TSimpleMolecule::redrawMolecule() {$/;"	f	class:OpenBabel::TSimpleMolecule
ref	include/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* the local name of the attribute decl. if a particle *\/$/;"	m	struct:_xmlSchemaAttribute
ref	include/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* the local name of the element declaration if a particle *\/$/;"	m	struct:_xmlSchemaElement
ref	include/libxml/schemasInternals.h	/^    const xmlChar *ref;$/;"	m	struct:_xmlSchemaAttributeGroup
ref	include/libxml/schemasInternals.h	/^    const xmlChar *ref;$/;"	m	struct:_xmlSchemaType
refDecl	include/libxml/schemasInternals.h	/^    struct _xmlSchemaElement *refDecl; \/* the element declaration if a particle *\/$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaElement
refDecl	include/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr refDecl;$/;"	m	struct:_xmlSchemaAttribute
refItem	include/libxml/schemasInternals.h	/^    xmlSchemaAttributeGroupPtr refItem; \/* The referenced attribute group *\/$/;"	m	struct:_xmlSchemaAttributeGroup
refNs	include/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* the ns URI of the attribute decl. if a particle *\/$/;"	m	struct:_xmlSchemaAttribute
refNs	include/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* the ns URI of the element declaration if a particle *\/$/;"	m	struct:_xmlSchemaElement
refNs	include/libxml/schemasInternals.h	/^    const xmlChar *refNs;$/;"	m	struct:_xmlSchemaAttributeGroup
refNs	include/libxml/schemasInternals.h	/^    const xmlChar *refNs;$/;"	m	struct:_xmlSchemaType
refPrefix	include/libxml/schemasInternals.h	/^    const xmlChar *refPrefix;$/;"	m	struct:_xmlSchemaAttribute
refPrefix	include/libxml/schemasInternals.h	/^    const xmlChar *refPrefix;$/;"	m	struct:_xmlSchemaAttributeGroup
refPrefix	include/libxml/schemasInternals.h	/^    const xmlChar *refPrefix;$/;"	m	struct:_xmlSchemaElement
refPrefix	include/libxml/schemasInternals.h	/^    const xmlChar *refPrefix;$/;"	m	struct:_xmlSchemaType
reference	include/OB-BGL/mol_graph.h	/^        typedef OpenBabel::OBBondIterator::reference       reference;$/;"	t	class:boost::graph_traits::adjacent_iterator
reference	include/OB-BGL/mol_graph.h	/^        typedef OpenBabel::OBBondIterator::reference       reference;$/;"	t	class:boost::graph_traits::out_edge_iterator
reference	include/OB-BGL/mol_graph.h	/^    typedef value_type& reference;$/;"	t	class:OBAtomMap
reference	include/OB-BGL/mol_graph.h	/^    typedef value_type& reference;$/;"	t	class:OBBondMap
reference	include/libxml/parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandler
reference	include/libxml/parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandlerV1
reference	include/openbabel/json/json.h	/^      typedef Value &reference;$/;"	t	class:Json::ValueIterator
reference	include/openbabel/json/json.h	/^      typedef const Value &reference;$/;"	t	class:Json::ValueConstIterator
reference	include/openbabel/tree/tree.hh	/^				typedef T&                              reference;$/;"	t	class:tree::iterator_base
referenceSAXFunc	include/libxml/parser.h	/^typedef void (*referenceSAXFunc) (void *ctx,$/;"	t
refine_symmetry_element	src/pointgroup.cpp	/^    refine_symmetry_element( SYMMETRY_ELEMENT *elem, int build_table )$/;"	f	class:OpenBabel::PointGroupPrivate
refofs	src/mcdlutil.cpp	/^    std::ostream * refofs;$/;"	m	class:OpenBabel::TSimpleMolecule	file:
refs	include/libxml/tree.h	/^    void           *refs;       \/* Hash table for IDREFs attributes if any *\/$/;"	m	struct:_xmlDoc
refs	include/openbabel/stereo/bindings.h	/^    OBStereo::Refs refs;$/;"	m	struct:OpenBabel::OBCisTransConfig
refs	include/openbabel/stereo/bindings.h	/^    OBStereo::Refs refs;$/;"	m	struct:OpenBabel::OBSquarePlanarConfig
refs	include/openbabel/stereo/bindings.h	/^    OBStereo::Refs refs;$/;"	m	struct:OpenBabel::OBTetrahedralConfig
refs	include/openbabel/stereo/cistrans.h	/^      OBStereo::Refs refs; \/\/!< The 4 reference ids.$/;"	m	struct:OpenBabel::OBCisTransStereo::Config
refs	include/openbabel/stereo/squareplanar.h	/^      OBStereo::Refs refs; \/\/!< The 4 reference ids.$/;"	m	struct:OpenBabel::OBSquarePlanarStereo::Config
refs	include/openbabel/stereo/tetrahedral.h	/^      OBStereo::Refs refs; \/\/!< The 3 reference ids.$/;"	m	struct:OpenBabel::OBTetrahedralStereo::Config
regexp	include/libxml/schemasInternals.h	/^    xmlRegexpPtr    regexp;$/;"	m	struct:_xmlSchemaFacet
rel_error	include/openbabel/math/erf.h	/^static const double rel_error= 1E-12;        \/\/calculate 12 significant figures$/;"	m	namespace:temperf
release	src/formats/json/jsoncpp.cpp	/^   void release( AllocatedType *object )$/;"	f	class:Json::BatchAllocator
releaseStringValue	src/formats/json/jsoncpp.cpp	/^releaseStringValue( char *value )$/;"	f	namespace:Json
removeArrayListElement	src/formats/ArrayList.c	/^void *removeArrayListElement (ArrayList *array, int index){$/;"	f
removeHydrogen	src/mcdlutil.cpp	/^  void TEditedMolecule::removeHydrogen(std::vector<int> * qHydr, std::vector<int> * qEnumerator) {$/;"	f	class:OpenBabel::TEditedMolecule
removeMember	src/formats/json/jsoncpp.cpp	/^Value::removeMember( const char* key )$/;"	f	class:Json::Value
removeMember	src/formats/json/jsoncpp.cpp	/^Value::removeMember( const std::string &key )$/;"	f	class:Json::Value
removeZeroeth	src/mcdlutil.cpp	/^  std::string removeZeroeth(std::string instring) {$/;"	f	namespace:OpenBabel
remove_alt_bond_marks	src/formats/libinchi/ichi_bns.c	/^static void remove_alt_bond_marks(inp_ATOM *at, int num_atoms)$/;"	f	file:
remove_deriv	src/formats/libinchi/ichinorm.c	/^int remove_deriv( DERIV_AT *da1, int idrv )$/;"	f
remove_deriv_mark	src/formats/libinchi/ichinorm.c	/^int remove_deriv_mark( DERIV_AT *da1, int idrv )$/;"	f
remove_ion_pairs	src/formats/libinchi/strutil.c	/^int remove_ion_pairs( int num_atoms, inp_ATOM *at )$/;"	f
remove_one_lf	src/formats/libinchi/util.c	/^void remove_one_lf( char* p)$/;"	f
remove_terminal_HDT	src/formats/libinchi/ichinorm.c	/^int remove_terminal_HDT( int num_atoms, inp_ATOM *at, int bFixTermHChrg )$/;"	f
remove_trailing_spaces	src/formats/libinchi/util.c	/^void remove_trailing_spaces( char* p )$/;"	f
ren_INChI2	src/formats/libinchi/runichi.c	/^    PINChI2         ren_INChI2[1];$/;"	m	struct:tagRenumbData	file:
ren_INChI_Aux	src/formats/libinchi/runichi.c	/^    PINChI_Aux2     ren_INChI_Aux[1];$/;"	m	struct:tagRenumbData	file:
ren_counter	src/formats/libinchi/runichi.c	/^    int            ren_counter;$/;"	m	struct:tagRenumbData	file:
ren_inp_norm_data	src/formats/libinchi/runichi.c	/^    INP_ATOM_DATA  *ren_inp_norm_data[2];$/;"	m	struct:tagRenumbData	file:
ren_inp_norm_data1	src/formats/libinchi/runichi.c	/^    INP_ATOM_DATA  ren_inp_norm_data1, ren_inp_norm_data2;$/;"	m	struct:tagRenumbData	file:
ren_inp_norm_data2	src/formats/libinchi/runichi.c	/^    INP_ATOM_DATA  ren_inp_norm_data1, ren_inp_norm_data2;$/;"	m	struct:tagRenumbData	file:
reparent	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::reparent(iter position, sibling_iterator begin, sibling_iterator end)$/;"	f	class:tree
reparent	include/openbabel/tree/tree.hh	/^template <typename iter> iter tree<T, tree_node_allocator>::reparent(iter position, iter from)$/;"	f	class:tree
replace	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::replace(iter position, const T& x)$/;"	f	class:tree
replace	include/openbabel/tree/tree.hh	/^iter tree<T, tree_node_allocator>::replace(iter position, const iterator_base& from)$/;"	f	class:tree
replace	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::replace($/;"	f	class:tree
replaceEntities	include/libxml/parser.h	/^    int       replaceEntities;        \/* shall we replace entities ? *\/$/;"	m	struct:_xmlParserCtxt
report_and_reset_counters	src/pointgroup.cpp	/^    report_and_reset_counters( void )$/;"	f	class:OpenBabel::PointGroupPrivate
report_axes	src/pointgroup.cpp	/^    report_axes( void )$/;"	f	class:OpenBabel::PointGroupPrivate
report_improper_axes	src/pointgroup.cpp	/^    report_improper_axes( void )$/;"	f	class:OpenBabel::PointGroupPrivate
report_inversion_centers	src/pointgroup.cpp	/^    report_inversion_centers( void )$/;"	f	class:OpenBabel::PointGroupPrivate
report_planes	src/pointgroup.cpp	/^    report_planes( void )$/;"	f	class:OpenBabel::PointGroupPrivate
report_symmetry_elements_brief	src/pointgroup.cpp	/^    report_symmetry_elements_brief( void )$/;"	f	class:OpenBabel::PointGroupPrivate
report_symmetry_elements_verbose	src/pointgroup.cpp	/^    report_symmetry_elements_verbose( void )$/;"	f	class:OpenBabel::PointGroupPrivate
reproduce	src/conformersearch.cpp	/^  OBConformerSearch::reproduce (RotorKey &key1, RotorKey &key2)$/;"	f	class:OpenBabel::OBConformerSearch
rescaleSingleFragment	src/mcdlutil.cpp	/^  void TemplateRedraw::rescaleSingleFragment(TSimpleMolecule * sm, std::vector<int>* atomList, PartFragmentDefinition& pf, double offset) {$/;"	f	class:OpenBabel::TemplateRedraw
rescap	src/formats/libinchi/ichi_bns.c	/^int rescap(  BN_STRUCT* pBNS, Vertex u, Vertex v, EdgeIndex iuv )$/;"	f
rescap_mark	src/formats/libinchi/ichi_bns.c	/^int rescap_mark( BN_STRUCT* pBNS, Vertex u, Vertex v, EdgeIndex iuv )$/;"	f
resdat	include/openbabel/mol.h	/^  EXTERN  OBResidueData    resdat;$/;"	m	namespace:OpenBabel
resdat	src/data.cpp	/^  OBResidueData    resdat;$/;"	m	namespace:OpenBabel	file:
reserved	include/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
resetBondInfo	src/formats/smiley.h	/^      void resetBondInfo()$/;"	f	class:Smiley::Parser
resid	src/chains.cpp	/^    int resid;$/;"	m	struct:OpenBabel::__anon72	file:
resids	include/openbabel/chains.h	/^      std::vector<unsigned char>  resids;$/;"	m	class:OpenBabel::OBChainsParser
residue_lookup	src/formats/fastaformat.cpp	/^  residue_lookup_map residue_lookup;$/;"	m	namespace:OpenBabel	file:
residue_lookup_map	src/formats/fastaformat.cpp	/^  typedef std::map< std::string, char > residue_lookup_map;$/;"	t	namespace:OpenBabel	file:
residue_lookup_record	src/formats/fastaformat.cpp	/^  struct residue_lookup_record$/;"	s	namespace:OpenBabel	file:
residue_lookup_table	src/formats/fastaformat.cpp	/^  residue_lookup_record residue_lookup_table[] =$/;"	m	namespace:OpenBabel	file:
resize	src/formats/json/jsoncpp.cpp	/^Value::resize( ArrayIndex newSize )$/;"	f	class:Json::Value
resnamechain	src/formats/yasaraformat.cpp	/^  uint32 resnamechain;$/;"	m	struct:OpenBabel::atomid	file:
resno	src/formats/yasaraformat.cpp	/^  uint32 resno;$/;"	m	struct:OpenBabel::atomid	file:
resnos	include/openbabel/chains.h	/^      std::vector<short>          resnos;$/;"	m	class:OpenBabel::OBChainsParser
resolution_size	include/openbabel/rotor.h	/^    unsigned int resolution_size;$/;"	m	class:OpenBabel::rotor_digit
resolve	src/formats/json/jsoncpp.cpp	/^Path::resolve( const Value &root ) const$/;"	f	class:Json::Path
resolve	src/formats/json/jsoncpp.cpp	/^Path::resolve( const Value &root, $/;"	f	class:Json::Path
resolveEntity	include/libxml/parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandler
resolveEntity	include/libxml/parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandlerV1
resolveEntitySAXFunc	include/libxml/parser.h	/^typedef xmlParserInputPtr (*resolveEntitySAXFunc) (void *ctx,$/;"	t
resolveReference	src/formats/json/jsoncpp.cpp	/^Value::resolveReference( const char *key, $/;"	f	class:Json::Value
restoreFullMCDL	src/formats/MCDLformat.cpp	/^  void MCDLFormat::restoreFullMCDL(string value, OBMol* pmol) {$/;"	f	class:OpenBabel::MCDLFormat
restype	src/formats/yasaraformat.cpp	/^  uint32 restype;$/;"	m	struct:OpenBabel::atomid	file:
result	include/openbabel/mol.h	/^      static const T result = (static_cast<T>(0xFF) << (size-1)*8) + max_value<T, size-1>::result;$/;"	m	struct:OpenBabel::detail::max_value
result	include/openbabel/mol.h	/^      static const T result = 0;$/;"	m	struct:OpenBabel::detail::max_value
rfilename	src/formats/confabreport.cpp	/^  const char *rfilename;$/;"	m	class:OpenBabel::ConfabReport	file:
rfs	src/formats/confabreport.cpp	/^  ifstream rfs;$/;"	m	class:OpenBabel::ConfabReport	file:
rgt	include/openbabel/parsmart.h	/^      union _AtomExpr *rgt;$/;"	m	struct:OpenBabel::_AtomExpr::__anon51	typeref:union:OpenBabel::_AtomExpr::__anon51::_AtomExpr
rgt	include/openbabel/parsmart.h	/^      union _BondExpr *rgt;$/;"	m	struct:OpenBabel::_BondExpr::__anon53	typeref:union:OpenBabel::_BondExpr::__anon53::_BondExpr
rgt	src/formats/smiley.h	/^        SmartsAtomExpr *rgt;$/;"	m	struct:Smiley::SmartsAtomExpr::__anon80::__anon84
rgt	src/formats/smiley.h	/^      SmartsBondExpr *rgt;$/;"	m	struct:Smiley::SmartsBondExpr::__anon86
right	src/mcdlutil.cpp	/^    double left,top,right,bottom;$/;"	m	class:OpenBabel::Rect	file:
rightMargin_	include/openbabel/json/json.h	/^      int rightMargin_;$/;"	m	class:Json::StyledStreamWriter
rightMargin_	include/openbabel/json/json.h	/^      int rightMargin_;$/;"	m	class:Json::StyledWriter
right_form	include/openbabel/alias.h	/^    std::string right_form;$/;"	m	struct:OpenBabel::AliasData::AliasItem
rigid_with	src/formats/pdbqtformat.cpp	/^    set <unsigned int> rigid_with; \/\/the other branches that move rigidly with this one$/;"	m	class:OpenBabel::branch	file:
rij	src/forcefields/forcefielduff.h	/^      double zi, zk, rij, rjk, rik;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
rik	src/forcefields/forcefielduff.h	/^      double zi, zk, rij, rjk, rik;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
ring_id	include/openbabel/ring.h	/^    int ring_id;            \/\/!< a unique id to ensure a stable sort in SSSR determination$/;"	m	class:OpenBabel::OBRing
ringdigit	src/formats/smilesformat.cpp	/^    int    ringdigit;$/;"	m	class:OpenBabel::OBBondClosureInfo	file:
ringset	src/fingerprints/finger2.cpp	/^	Fset ringset;$/;"	m	class:OpenBabel::fingerprint2	file:
ringtyper	src/ring.cpp	/^  OBRingTyper      ringtyper;$/;"	m	namespace:OpenBabel	file:
rint	src/rotamer.cpp	/^  inline double rint(double x)$/;"	f	namespace:OpenBabel
rjk	src/forcefields/forcefielduff.h	/^      double zi, zk, rij, rjk, rik;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
rl	src/mcdlutil.cpp	/^    short int rl;   \/*radical label*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
rmol	src/formats/confabreport.cpp	/^  OBMol rmol;$/;"	m	class:OpenBabel::ConfabReport	file:
rmsd	src/formats/confabreport.cpp	/^  vector<double> rmsd;$/;"	m	class:OpenBabel::ConfabReport	file:
rmsd_cutoff	src/formats/confabreport.cpp	/^  double rmsd_cutoff;$/;"	m	class:OpenBabel::ConfabReport	file:
rmsd_cutoff	src/ops/opconfab.cpp	/^      double rmsd_cutoff;$/;"	m	class:OpenBabel::OpConfab	file:
rotateBondVertically	src/mcdlutil.cpp	/^  void TemplateRedraw::rotateBondVertically(TSimpleMolecule * sm, const std::vector<int>bondList, int bondNo, double xuValue, double yuValue, double& c1, double& s1, double& xSize, double& ySize, double& xCenter, double& yCenter, int& nVert) {$/;"	f	class:OpenBabel::TemplateRedraw
rotate_atom	src/pointgroup.cpp	/^    rotate_atom( SYMMETRY_ELEMENT *axis, OBAtom *from, OBAtom *to )$/;"	f	class:OpenBabel::PointGroupPrivate
rotate_coords	src/obutil.cpp	/^  void rotate_coords(double *c,double m[3][3],unsigned int size)$/;"	f	namespace:OpenBabel
rotate_reflect_atom	src/pointgroup.cpp	/^    rotate_reflect_atom( SYMMETRY_ELEMENT *axis, OBAtom *from, OBAtom *to )$/;"	f	class:OpenBabel::PointGroupPrivate
rotorKey	src/conformersearch.cpp	/^    RotorKey rotorKey;$/;"	m	struct:OpenBabel::ConformerScore	file:
rotor_digit	include/openbabel/rotor.h	/^    rotor_digit()$/;"	f	class:OpenBabel::rotor_digit
rotor_digit	include/openbabel/rotor.h	/^    rotor_digit(unsigned int rs)$/;"	f	class:OpenBabel::rotor_digit
rotor_digit	include/openbabel/rotor.h	/^  class rotor_digit {$/;"	c	namespace:OpenBabel
rotor_digit	include/openbabel/rotor.h	/^  } typedef rotor_digit;$/;"	t	namespace:OpenBabel
round	src/depict/asciipainter.cpp	/^  int ASCIIPainter::round(double r)$/;"	f	class:OpenBabel::ASCIIPainter
rv	src/formats/pointcloudformat.cpp	/^  double rv( void ){$/;"	f	namespace:OpenBabel
rx	src/mcdlutil.cpp	/^    double    rx;   \/*Internal X-coordinate representation*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
ry	src/mcdlutil.cpp	/^    double    ry;   \/*Internal Y-coordinate representation*\/$/;"	m	class:OpenBabel::TSingleAtom	file:
s	include/inchi/ichirvrs.h	/^    int         s[INCHI_NUM][TAUT_NUM][2];  \/* s[0=non-iso, 1=iso] = 0,1,2,3 <= regular \/s; -1=> "\/s" (empty) *\/$/;"	m	struct:tagInputInChI
s	include/inchi/inchi_dll_a.h	/^    ATOM_SIZES  s[TAUT_NUM];$/;"	m	struct:tagCOMPONENT_TREAT_INFO
s	include/inchi/mode.h	/^    INCHI_OUTPUT s;$/;"	m	struct:tagOutputStream
s	src/forcefields/forcefieldghemical.h	/^      double V, s, n, tor;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
sCompDelim	src/formats/libinchi/ichiprt1.c	/^const char sCompDelim[]       = ";"; \/* component delimiter *\/$/;"	v
sIdenticalValues	src/formats/libinchi/ichiprt1.c	/^const char sIdenticalValues[] = "*"; \/* identical component *\/$/;"	v
s_candidate	include/inchi/ichitaut.h	/^    S_CANDIDATE *s_candidate;$/;"	m	struct:tagSaltGroupInfo
same_transform	src/pointgroup.cpp	/^    same_transform( SYMMETRY_ELEMENT *a, SYMMETRY_ELEMENT *b )$/;"	f	class:OpenBabel::PointGroupPrivate
samering	src/forcefields/forcefieldgaff.h	/^      bool is14, samering;$/;"	m	class:OpenBabel::OBFFVDWCalculationGaff
samering	src/forcefields/forcefieldghemical.h	/^      bool is14, samering;$/;"	m	class:OpenBabel::OBFFVDWCalculationGhemical
samering	src/forcefields/forcefielduff.h	/^      bool is14, samering;$/;"	m	class:OpenBabel::OBFFVDWCalculationUFF
saveEndTag	include/libxml/HTMLparser.h	/^    char saveEndTag;    \/* Whether the end tag should be saved *\/$/;"	m	struct:_htmlElemDesc
save_a_stereo_bond	src/formats/libinchi/ichister.c	/^int save_a_stereo_bond( int z_prod, int result_action,$/;"	f
saved_inp_cur_data	src/formats/libinchi/runichi.c	/^    INP_ATOM_DATA  saved_inp_cur_data;$/;"	m	struct:tagRenumbData	file:
sax	include/libxml/parser.h	/^    struct _xmlSAXHandler *sax;       \/* The SAX handler *\/$/;"	m	struct:_xmlParserCtxt	typeref:struct:_xmlParserCtxt::_xmlSAXHandler
sax2	include/libxml/parser.h	/^    int                sax2;          \/* operating in the new SAX mode *\/$/;"	m	struct:_xmlParserCtxt
sb_in1_only	include/inchi/strutil.h	/^    AT_NUMB sb_in1_only[ICR_MAX_SB_IN1_ONLY];$/;"	m	struct:tagInChICompareResults
sb_in2_only	include/inchi/strutil.h	/^    AT_NUMB sb_in2_only[ICR_MAX_SB_IN2_ONLY];$/;"	m	struct:tagInChICompareResults
sb_ord	include/inchi/ichirvrs.h	/^    S_CHAR        sb_ord[MAX_NUM_STEREO_BONDS];  \/* stereo bond\/neighbor ordering number, starts from 0 *\/$/;"	m	struct:tagInpAtomAddParities
sb_ord	include/inchi/inchi_api.h	/^    S_CHAR        sb_ord[MAX_NUM_STEREO_BONDS];  \/* neighbor[] index of another end of this SB, starts from 0 *\/$/;"	m	struct:tagNormAtom
sb_ord	include/inchi/inpdef.h	/^    S_CHAR        sb_ord[MAX_NUM_STEREO_BONDS];  \/* stereo bond\/neighbor ordering number, starts from 0 *\/$/;"	m	struct:tagInputAtom
sb_ord	include/inchi_api.h	/^    S_CHAR        sb_ord[MAX_NUM_STEREO_BONDS];  \/* neighbor[] index of another end of this SB, starts from 0 *\/$/;"	m	struct:tagNormAtom
sb_parity	include/inchi/ichirvrs.h	/^    S_CHAR        sb_parity[MAX_NUM_STEREO_BONDS];$/;"	m	struct:tagInpAtomAddParities
sb_parity	include/inchi/inchi_api.h	/^    S_CHAR        sb_parity[MAX_NUM_STEREO_BONDS];       \/* parities of stereobonds (sp2) incident to this atom *\/	$/;"	m	struct:tagNormAtom
sb_parity	include/inchi/inpdef.h	/^    S_CHAR        sb_parity[MAX_NUM_STEREO_BONDS];$/;"	m	struct:tagInputAtom
sb_parity	include/inchi_api.h	/^    S_CHAR        sb_parity[MAX_NUM_STEREO_BONDS];       \/* parities of stereobonds (sp2) incident to this atom *\/	$/;"	m	struct:tagNormAtom
sb_undef_in1_only	include/inchi/strutil.h	/^    AT_NUMB sb_undef_in1_only[ICR_MAX_SC_UNDF];$/;"	m	struct:tagInChICompareResults
sb_undef_in2_only	include/inchi/strutil.h	/^    AT_NUMB sb_undef_in2_only[ICR_MAX_SC_UNDF];$/;"	m	struct:tagInChICompareResults
sbt	src/forcefields/forcefieldmmff94.h	/^      int sbt; \/\/strbndtype (SBTIJK)$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
sc_in1_only	include/inchi/strutil.h	/^    AT_NUMB sc_in1_only[ICR_MAX_SC_IN1_ONLY];$/;"	m	struct:tagInChICompareResults
sc_in2_only	include/inchi/strutil.h	/^    AT_NUMB sc_in2_only[ICR_MAX_SC_IN2_ONLY];$/;"	m	struct:tagInChICompareResults
sc_undef_in1_only	include/inchi/strutil.h	/^    AT_NUMB sc_undef_in1_only[ICR_MAX_SB_UNDF];$/;"	m	struct:tagInChICompareResults
sc_undef_in2_only	include/inchi/strutil.h	/^    AT_NUMB sc_undef_in2_only[ICR_MAX_SB_UNDF];$/;"	m	struct:tagInChICompareResults
schemasImports	include/libxml/schemasInternals.h	/^    xmlHashTablePtr schemasImports;$/;"	m	struct:_xmlSchema
scheme	include/libxml/uri.h	/^    char *scheme;	\/* the URI scheme *\/$/;"	m	struct:_xmlURI
scope	include/libxml/schemasInternals.h	/^    const xmlChar *scope;$/;"	m	struct:_xmlSchemaElement
score	include/openbabel/grid.h	/^    double score;$/;"	m	class:OpenBabel::OBScoreGrid
score	src/conformersearch.cpp	/^    double score;$/;"	m	struct:OpenBabel::ConformerScore	file:
score_population	src/conformersearch.cpp	/^  OBConformerSearch::score_population ()$/;"	f	class:OpenBabel::OBConformerSearch
score_t	include/openbabel/grid.h	/^  typedef enum { Undefined = -1, PLP, ChemScore } score_t;$/;"	t	namespace:OpenBabel	typeref:enum:OpenBabel::__anon43
sdf_data_hdr_comm	include/inchi/lreadmol.h	/^static const char sdf_data_hdr_comm[] = "COMMENT";$/;"	v
sdf_data_hdr_name	include/inchi/lreadmol.h	/^static const char sdf_data_hdr_name[] = "NAME";$/;"	v
sdp	include/inchi/ichidrp.h	/^    SET_DRAW_PARMS  sdp;   \/* how to draw: fill on the 1st call *\/$/;"	m	struct:tagDrawParms
second	include/openbabel/obutil.h	/^      T2 second;$/;"	m	struct:OpenBabel::quad
second	include/openbabel/obutil.h	/^      T2 second;$/;"	m	struct:OpenBabel::triple
second_type	include/openbabel/obutil.h	/^      typedef T2 second_type;$/;"	t	struct:OpenBabel::quad
second_type	include/openbabel/obutil.h	/^      typedef T2 second_type;$/;"	t	struct:OpenBabel::triple
secstr	src/formats/yasaraformat.cpp	/^  uint32 secstr;$/;"	m	struct:OpenBabel::atomid	file:
seekdata	include/openbabel/fingerprint.h	/^  std::vector<unsigned int> seekdata;$/;"	m	struct:OpenBabel::FptIndex
seekoff	include/openbabel/lineend.h	/^    virtual std::streampos   seekoff(std::streamoff off, std::ios_base::seekdir way,$/;"	f	class:OpenBabel::FilteringInputStreambuf
seekoff	src/zipstreamimpl.h	/^  basic_unzip_streambuf<charT, traits>::seekoff(std::streamoff off, std::ios_base::seekdir way, std::ios_base::openmode)$/;"	f	class:basic_unzip_streambuf
seekpos	include/openbabel/lineend.h	/^    virtual std::streampos   seekpos(std::streampos sp,$/;"	f	class:OpenBabel::FilteringInputStreambuf
seekpos	src/zipstreamimpl.h	/^  basic_unzip_streambuf<charT, traits>::seekpos(std::streampos sp, std::ios_base::openmode)$/;"	f	class:basic_unzip_streambuf
segment	src/formats/yasaraformat.cpp	/^  uint32 segment;$/;"	m	struct:OpenBabel::atomid	file:
selectFragmentConfiguration	src/mcdlutil.cpp	/^  void TemplateRedraw::selectFragmentConfiguration(TSimpleMolecule * sm, std::vector<int>* atomList) {$/;"	f	class:OpenBabel::TemplateRedraw
sendbits	src/formats/xtcformat.cpp	/^  void XTCFormat::sendbits(int buf[], int num_of_bits, int num) {$/;"	f	class:OpenBabel::XTCFormat
sendints	src/formats/xtcformat.cpp	/^  void XTCFormat::sendints(int buf[], const int num_of_ints, const int num_of_bits,$/;"	f	class:OpenBabel::XTCFormat
sernos	include/openbabel/chains.h	/^      std::vector<short>          sernos;   \/\/!< array of residue serial numbers$/;"	m	class:OpenBabel::OBChainsParser
serror	include/libxml/parser.h	/^    xmlStructuredErrorFunc serror;$/;"	m	struct:_xmlSAXHandler
server	include/libxml/uri.h	/^    char *server;	\/* the server part *\/$/;"	m	struct:_xmlURI
set	include/libxml/xlink.h	/^    xlinkExtendedLinkSetFunk set;$/;"	m	struct:_xlinkHandler
setChiral	src/formats/smiley.h	/^    void setChiral(int index, Chirality chirality, const std::vector<int> &chiralNbrs) {}$/;"	f	struct:Smiley::CallbackBase
setChiral	src/formats/smiley.h	/^    void setChiral(int index, Chirality chirality, const std::vector<int> &nbrs)$/;"	f	struct:Smiley::PrintCallback
setChiral	src/formats/smileyformat.cpp	/^    void setChiral(int index, Smiley::Chirality chirality, const std::vector<int> &chiralNbrs)$/;"	f	struct:OpenBabel::OpenBabelCallback
setComment	src/formats/json/jsoncpp.cpp	/^Value::CommentInfo::setComment( const char *text )$/;"	f	class:Json::Value::CommentInfo
setComment	src/formats/json/jsoncpp.cpp	/^Value::setComment( const char *comment,$/;"	f	class:Json::Value
setComment	src/formats/json/jsoncpp.cpp	/^Value::setComment( const std::string &comment,$/;"	f	class:Json::Value
setCoordinatesString	src/mcdlutil.cpp	/^  void TSimpleMolecule::setCoordinatesString(string value){$/;"	f	class:OpenBabel::TSimpleMolecule
setDocumentLocator	include/libxml/parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandler
setDocumentLocator	include/libxml/parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandlerV1
setDocumentLocatorSAXFunc	include/libxml/parser.h	/^typedef void (*setDocumentLocatorSAXFunc) (void *ctx,$/;"	t
setItemUsed	include/openbabel/json/json.h	/^      inline void setItemUsed( bool isUsed = true )$/;"	f	class:Json::Value
setMCDL	src/formats/MCDLformat.cpp	/^  void MCDLFormat::setMCDL(const string lineToParse, OBMol* pmol, string & sout) {$/;"	f	class:OpenBabel::MCDLFormat
setMemberNameIsStatic	include/openbabel/json/json.h	/^      inline void setMemberNameIsStatic( bool isStatic )$/;"	f	class:Json::Value
setMode	src/formats/smiley.h	/^      void setMode(Mode mode)$/;"	f	class:Smiley::Parser
setPrevious	src/formats/smiley.h	/^    void setPrevious(int index) {}$/;"	f	struct:Smiley::CallbackBase
setPrevious	src/formats/smiley.h	/^    void setPrevious(int index)$/;"	f	struct:Smiley::PrintCallback
setUpDownBonds	src/mcdlutil.cpp	/^  void setUpDownBonds(int atomNo, int parity, TSimpleMolecule & sm, std::vector<int>& iA1, std::vector<int>& iA2, std::vector<int>& stereoBonds) {$/;"	f	namespace:OpenBabel
set_R2C_el_numbers	src/formats/libinchi/ichinorm.c	/^void set_R2C_el_numbers( void )$/;"	f
set_atom_0D_parity	src/formats/libinchi/ichirvr2.c	/^int set_atom_0D_parity( inp_ATOM *at, inp_ATOM_STEREO *st, int num_at, int num_deleted_H, int i1, int parity )$/;"	f
set_atom_iso_sort_keys	src/formats/libinchi/ichiisot.c	/^int set_atom_iso_sort_keys(  int num_at, sp_ATOM *at, T_GROUP_INFO* t_group_info, int *bHasIsotopicInTautomerGroups )$/;"	f
set_bond_type	src/formats/libinchi/ichirvr2.c	/^int set_bond_type( inp_ATOM *at, AT_NUMB i1, AT_NUMB i2, int bType )$/;"	f
set_cumulene_0D_parity	src/formats/libinchi/ichirvr2.c	/^int set_cumulene_0D_parity( inp_ATOM *at, inp_ATOM_STEREO *st, int num_at, int idelH1, int i1, int i2, int idelH2, int parity, int len )$/;"	f
set_head	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::pre_order_iterator tree<T, tree_node_allocator>::set_head(const T& x)$/;"	f	class:tree
set_params	src/pointgroup.cpp	/^    set_params( SYMMETRY_ELEMENT *elem, double values[] )$/;"	f	class:OpenBabel::PointGroupPrivate
set_parent_	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::sibling_iterator::set_parent_()$/;"	f	class:tree::sibling_iterator
set_size	include/openbabel/rotor.h	/^    void set_size(unsigned int rs)$/;"	f	class:OpenBabel::rotor_digit
set_state	include/openbabel/rotor.h	/^    void set_state(int st)$/;"	f	class:OpenBabel::rotor_digit
set_stereo_atom_parity	src/formats/libinchi/ichister.c	/^int set_stereo_atom_parity( sp_ATOM *out_at, inp_ATOM *at, int cur_at, inp_ATOM *at_removed_H,$/;"	f
set_stereo_bonds_parity	src/formats/libinchi/ichister.c	/^int set_stereo_bonds_parity( sp_ATOM *out_at, inp_ATOM *at, int at_1, inp_ATOM *at_removed_H, int num_removed_H,$/;"	f
set_stereo_parity	src/formats/libinchi/ichister.c	/^int set_stereo_parity( inp_ATOM* at, sp_ATOM* at_output, int num_at, int num_removed_H,$/;"	f
set_tautomer_iso_sort_keys	src/formats/libinchi/ichitaut.c	/^int set_tautomer_iso_sort_keys( T_GROUP_INFO *t_group_info )$/;"	f
setupRotorSearch	src/mcdlutil.cpp	/^  int TSimpleMolecule::setupRotorSearch(const vector<int> &rotBondList, vector<int>& inner_bonds, vector<int>& remainder)$/;"	f	class:OpenBabel::TSimpleMolecule
sgbi	src/math/spacegroup.cpp	/^    vector< list<const SpaceGroup*> > sgbi;$/;"	m	class:OpenBabel::SpaceGroups	file:
sgbn	src/math/spacegroup.cpp	/^    map<string, const SpaceGroup*> sgbn;$/;"	m	class:OpenBabel::SpaceGroups	file:
sgs	src/math/spacegroup.cpp	/^    set<SpaceGroup*> sgs;$/;"	m	class:OpenBabel::SpaceGroups	file:
sha2_context	include/inchi/sha2.h	/^sha2_context;$/;"	t	typeref:struct:__anon2
sha2_csum	src/formats/libinchi/sha2.c	/^void sha2_csum( unsigned char *input, int ilen,$/;"	f
sha2_file	src/formats/libinchi/sha2.c	/^int sha2_file( char *path, unsigned char output[32] )$/;"	f
sha2_finish	src/formats/libinchi/sha2.c	/^void sha2_finish( sha2_context *ctx, unsigned char output[32] )$/;"	f
sha2_hmac	src/formats/libinchi/sha2.c	/^void sha2_hmac( unsigned char *key, int keylen,$/;"	f
sha2_padding	src/formats/libinchi/sha2.c	/^static const unsigned char sha2_padding[64] =$/;"	v	file:
sha2_process	src/formats/libinchi/sha2.c	/^static void sha2_process( sha2_context *ctx, unsigned char data[64] )$/;"	f	file:
sha2_self_test	src/formats/libinchi/sha2.c	/^int sha2_self_test( void )$/;"	f
sha2_starts	src/formats/libinchi/sha2.c	/^void sha2_starts( sha2_context *ctx )$/;"	f
sha2_test_str	src/formats/libinchi/sha2.c	/^static const char sha2_test_str[3][57] = $/;"	v	file:
sha2_test_sum	src/formats/libinchi/sha2.c	/^static const unsigned char sha2_test_sum[3][32] =$/;"	v	file:
sha2_update	src/formats/libinchi/sha2.c	/^void sha2_update( sha2_context *ctx, unsigned char *input, int ilen )$/;"	f
shape	include/openbabel/stereo/bindings.h	/^    OBStereo::Shape shape;$/;"	m	struct:OpenBabel::OBCisTransConfig
shape	include/openbabel/stereo/bindings.h	/^    OBStereo::Shape shape;$/;"	m	struct:OpenBabel::OBSquarePlanarConfig
shape	include/openbabel/stereo/cistrans.h	/^      OBStereo::Shape shape; \/\/!< The shape of the 4 reference ids.$/;"	m	struct:OpenBabel::OBCisTransStereo::Config
shape	include/openbabel/stereo/squareplanar.h	/^      OBStereo::Shape shape; \/\/!< The shape of the 4 reference ids.$/;"	m	struct:OpenBabel::OBSquarePlanarStereo::Config
share_fitness	src/conformersearch.cpp	/^  OBConformerSearch::share_fitness ()$/;"	f	class:OpenBabel::OBConformerSearch
sharing_generation	src/conformersearch.cpp	/^  OBConformerSearch::sharing_generation ()$/;"	f	class:OpenBabel::OBConformerSearch
shortRange	include/libxml/chvalid.h	/^    xmlChSRangePtr	shortRange;	\/* points to an array of ranges *\/$/;"	m	struct:_xmlChRangeGroup
showAll	src/ops/opisomorph.h	/^  bool showAll;$/;"	m	class:OpenBabel::OpNewS
sibling	include/openbabel/tree/tree.hh	/^typename tree<T, tree_node_allocator>::sibling_iterator tree<T, tree_node_allocator>::sibling(const iterator_base& it, unsigned int num)$/;"	f	class:tree
sibling_iterator	include/openbabel/tree/tree.hh	/^		class sibling_iterator : public iterator_base {$/;"	c	class:tree
sibling_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::sibling_iterator::sibling_iterator()$/;"	f	class:tree::sibling_iterator
sibling_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::sibling_iterator::sibling_iterator(const iterator_base& other)$/;"	f	class:tree::sibling_iterator
sibling_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::sibling_iterator::sibling_iterator(const sibling_iterator& other)$/;"	f	class:tree::sibling_iterator
sibling_iterator	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::sibling_iterator::sibling_iterator(tree_node *tn)$/;"	f	class:tree::sibling_iterator
sigma12	src/forcefields/forcefieldghemical.h	/^        double ka, sigma12;$/;"	m	union:OpenBabel::OBFFVDWCalculationGhemical::__anon75
sigma6	src/forcefields/forcefieldghemical.h	/^        double kb, sigma6;$/;"	m	union:OpenBabel::OBFFVDWCalculationGhemical::__anon76
sigma_share	include/openbabel/conformersearch.h	/^      int sigma_share;		\/\/!< The sigma parameter in sharing function$/;"	m	class:OpenBabel::OBConformerSearch
signed_volume	src/chiral.cpp	/^  double signed_volume(const vector3 &a, const vector3 &b, const vector3 &c, const vector3 &d)$/;"	f	namespace:OpenBabel
simple	include/libxml/xlink.h	/^    xlinkSimpleLinkFunk simple;$/;"	m	struct:_xlinkHandler
singleAtomicDescriptor	src/mcdlutil.cpp	/^  int TSimpleMolecule::singleAtomicDescriptor(int aNumber,int bNumber, bool useEnumerator) {$/;"	f	class:OpenBabel::TSimpleMolecule
singleVawe	src/mcdlutil.cpp	/^  void TSimpleMolecule::singleVawe(neighbourlist * bk, std::vector<int> & alreadyDefined,$/;"	f	class:OpenBabel::TSimpleMolecule
size	include/libxml/tree.h	/^    unsigned int size;		\/* The buffer size *\/$/;"	m	struct:_xmlBuffer
size	include/openbabel/atomclass.h	/^  int size(){ return _map.size(); }$/;"	f	class:OpenBabel::OBAtomClassData
size	include/openbabel/rotor.h	/^    unsigned int size()$/;"	f	class:OpenBabel::rotor_digit
size	include/openbabel/tree/tree.hh	/^size_t tree<T, tree_node_allocator>::size() const$/;"	f	class:tree
size	include/openbabel/tree/tree.hh	/^size_t tree<T, tree_node_allocator>::size(const iterator_base& top) const$/;"	f	class:tree
size	src/formats/json/jsoncpp.cpp	/^Value::size() const$/;"	f	class:Json::Value
size_	include/openbabel/json/json.h	/^      ArrayIndex size_;$/;"	m	class:Json::ValueInternalArray
size_t	include/openbabel/json/json.h	/^      typedef unsigned int size_t;$/;"	t	class:Json::ValueConstIterator
size_t	include/openbabel/json/json.h	/^      typedef unsigned int size_t;$/;"	t	class:Json::ValueIterator
size_t	include/openbabel/json/json.h	/^      typedef unsigned int size_t;$/;"	t	class:Json::ValueIteratorBase
size_type	include/openbabel/tree/tree.hh	/^				typedef size_t                          size_type;$/;"	t	class:tree::iterator_base
sizeofint	src/formats/xtcformat.cpp	/^  int XTCFormat::sizeofint(const int size) {$/;"	f	class:OpenBabel::XTCFormat
sizeofints	src/formats/xtcformat.cpp	/^  int XTCFormat::sizeofints( const int num_of_ints, unsigned int sizes[]) {$/;"	f	class:OpenBabel::XTCFormat
sizer	src/GUI/optswx.h	/^	wxSizer* sizer;$/;"	m	class:DynOptionswx
skipCommentTokens	src/formats/json/jsoncpp.cpp	/^Reader::skipCommentTokens( Token &token )$/;"	f	class:Json::Reader
skipSpaces	src/formats/json/jsoncpp.cpp	/^Reader::skipSpaces()$/;"	f	class:Json::Reader
skip_children	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::iterator_base::skip_children()$/;"	f	class:tree::iterator_base
skip_children	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::iterator_base::skip_children(bool skip)$/;"	f	class:tree::iterator_base
skip_current_children_	include/openbabel/tree/tree.hh	/^				bool skip_current_children_;$/;"	m	class:tree::iterator_base
sky	src/formats/povrayformat.cpp	/^    bool sky, sphere, trans_texture, checkerboard;$/;"	m	class:OpenBabel::PovrayFormat	file:
smarts	include/openbabel/patty.h	/^    std::vector<std::string> smarts;$/;"	m	class:OpenBabel::patty
smartsstring	src/fingerprints/finger3.cpp	/^    string smartsstring;$/;"	m	struct:OpenBabel::PatternFP::pattern	file:
smiles	include/openbabel/alias.h	/^    std::string smiles;$/;"	m	struct:OpenBabel::AliasData::AliasItem
sn_ord	include/inchi/ichirvrs.h	/^    S_CHAR        sn_ord[MAX_NUM_STEREO_BONDS]; \/* ord. num. of the neighbor adjacent to the SB; starts from 0;$/;"	m	struct:tagInpAtomAddParities
sn_ord	include/inchi/inchi_api.h	/^    S_CHAR        sn_ord[MAX_NUM_STEREO_BONDS];  \/* neighbor[] index of a bond that is not this SB; starts from 0;$/;"	m	struct:tagNormAtom
sn_ord	include/inchi/inpdef.h	/^    S_CHAR        sn_ord[MAX_NUM_STEREO_BONDS]; \/* ord. num. of the neighbor adjacent to the SB; starts from 0;$/;"	m	struct:tagInputAtom
sn_ord	include/inchi_api.h	/^    S_CHAR        sn_ord[MAX_NUM_STEREO_BONDS];  \/* neighbor[] index of a bond that is not this SB; starts from 0;$/;"	m	struct:tagNormAtom
sn_orig_at_num	include/inchi/ichirvrs.h	/^    AT_NUMB       sn_orig_at_num[MAX_NUM_STEREO_BONDS]; \/* orig. at number of sn_ord[] neighbors *\/$/;"	m	struct:tagInpAtomAddParities
sn_orig_at_num	include/inchi/inchi_api.h	/^    AT_NUMBR      sn_orig_at_num[MAX_NUM_STEREO_BONDS];  \/* orig_at_number of sn_ord[] neighbor > 0 *\/$/;"	m	struct:tagNormAtom
sn_orig_at_num	include/inchi/inpdef.h	/^    AT_NUMB       sn_orig_at_num[MAX_NUM_STEREO_BONDS]; \/* orig. at number of sn_ord[] neighbors *\/$/;"	m	struct:tagInputAtom
sn_orig_at_num	include/inchi_api.h	/^    AT_NUMBR      sn_orig_at_num[MAX_NUM_STEREO_BONDS];  \/* orig_at_number of sn_ord[] neighbor > 0 *\/$/;"	m	struct:tagNormAtom
snprintf	src/snprintf.h	17;"	d
solve	src/formats/MCDLformat.cpp	/^  void MCDLFormat::solve(int ntypes, int z[MAXBONDS][4], int depth)$/;"	f	class:OpenBabel::MCDLFormat
solver	src/charges/qeq.cpp	/^  bool QEqCharges::solver(MatrixXd A, VectorXd b, VectorXd &x, const double NormThreshold)$/;"	f	class:OpenBabel::QEqCharges
solver	src/charges/qtpie.cpp	/^bool QTPIECharges::solver(MatrixXd A, VectorXd b, VectorXd &x, const double NormThreshold)$/;"	f	class:OpenBabel::QTPIECharges
sort	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::sort(sibling_iterator from, sibling_iterator to, bool deep)$/;"	f	class:tree
sort	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::sort(sibling_iterator from, sibling_iterator to,$/;"	f	class:tree
sort_symmetry_elements	src/pointgroup.cpp	/^    sort_symmetry_elements( void )$/;"	f	class:OpenBabel::PointGroupPrivate
sortpred_b	src/confsearch.cpp	/^  bool sortpred_b(const OBDiversePoses::PosePair& a, const OBDiversePoses::PosePair& b) {$/;"	f	namespace:OpenBabel
source	include/OB-BGL/mol_graph.h	/^        vertex_descriptor source()     $/;"	f	class:boost::graph_traits::edge_descriptor
source	include/OB-BGL/mol_graph.h	/^  source( graph_traits< OpenBabel::OBMol >::edge_descriptor& e,$/;"	f	namespace:boost
source	src/formats/smiley.h	/^    int source;$/;"	m	struct:Smiley::SmartsBond
sp	src/ops/opisomorph.h	/^  OBSmartsPattern sp;  \/\/if SMARTS (and not a filename) supplied$/;"	m	class:OpenBabel::OpNewS
sp_ATOM	include/inchi/extr_ct.h	/^} sp_ATOM ;$/;"	t	typeref:struct:tagAtom
space	include/libxml/parser.h	/^    int *              space;         \/* Should the parser preserve spaces *\/$/;"	m	struct:_xmlParserCtxt
spaceMax	include/libxml/parser.h	/^    int                spaceMax;      \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
spaceNr	include/libxml/parser.h	/^    int                spaceNr;       \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt
spaceTab	include/libxml/parser.h	/^    int *              spaceTab;      \/* array of space infos *\/$/;"	m	struct:_xmlParserCtxt
space_group	src/formats/mmcifformat.cpp	/^     space_group,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
special	src/mcdlutil.cpp	/^    short int special;$/;"	m	class:OpenBabel::TSingleAtom	file:
special	src/mcdlutil.cpp	/^    short int special;$/;"	m	class:OpenBabel::TSingleBond	file:
specified	include/openbabel/stereo/bindings.h	/^    bool specified;$/;"	m	struct:OpenBabel::OBCisTransConfig
specified	include/openbabel/stereo/bindings.h	/^    bool specified;$/;"	m	struct:OpenBabel::OBSquarePlanarConfig
specified	include/openbabel/stereo/bindings.h	/^    bool specified;$/;"	m	struct:OpenBabel::OBTetrahedralConfig
specified	include/openbabel/stereo/cistrans.h	/^      bool specified; \/\/!< True if the stereochemistry is specified. When false, the described$/;"	m	struct:OpenBabel::OBCisTransStereo::Config
specified	include/openbabel/stereo/squareplanar.h	/^      bool specified; \/\/!< True if the stereochemistry is specified. When false, the described$/;"	m	struct:OpenBabel::OBSquarePlanarStereo::Config
specified	include/openbabel/stereo/tetrahedral.h	/^      bool specified; \/\/!< True if the stereochemistry is specified. When false, the described$/;"	m	struct:OpenBabel::OBTetrahedralStereo::Config
sphere	src/formats/povrayformat.cpp	/^    bool sky, sphere, trans_texture, checkerboard;$/;"	m	class:OpenBabel::PovrayFormat	file:
sproduct	src/mcdlutil.cpp	/^  int sproduct(TSimpleMolecule & sm, int br, int i1, int i2) {$/;"	f	namespace:OpenBabel
sqr	src/charges/qtpie.h	33;"	d
squarePlanarWatch	src/formats/smilesformat.cpp	/^    bool squarePlanarWatch; \/\/ set when a square planar atom is read$/;"	m	class:OpenBabel::OBSmilesParser	file:
src	include/openbabel/parsmart.h	/^    int src,dst;$/;"	m	struct:OpenBabel::__anon54
src	src/chains.cpp	/^    int src,dst;$/;"	m	struct:OpenBabel::__anon69	file:
ss	src/formats/chemkinformat.cpp	/^  stringstream ss;$/;"	m	class:OpenBabel::ChemKinFormat	file:
ssout	src/formats/xml/cmlreactformat.cpp	/^  ostringstream ssout; \/\/temporary output$/;"	m	class:OpenBabel::CMLReactFormat	file:
st	include/inchi/ichirvrs.h	/^    inp_ATOM_STEREO *st;  \/* additional stereo that exists only in Mobile-H layer *\/$/;"	m	struct:tagStructFromInChI
st_cap	include/inchi/ichirvrs.h	/^    int st_cap;$/;"	m	struct:tagTCGroup
st_edge	include/inchi/ichi_bns.h	/^  BNS_ST_EDGE st_edge;                     \/* 0,1 capacity and flow of the edge to s or t *\/$/;"	m	struct:BnsVertex
st_flow	include/inchi/ichirvrs.h	/^    int st_flow;$/;"	m	struct:tagTCGroup
standalone	include/libxml/parser.h	/^    int            standalone;        \/* standalone document *\/$/;"	m	struct:_xmlParserCtxt
standalone	include/libxml/parser.h	/^    int standalone;                   \/* Was that entity marked standalone *\/$/;"	m	struct:_xmlParserInput
standalone	include/libxml/tree.h	/^    int             standalone; \/* standalone document (no external refs) *\/$/;"	m	struct:_xmlDoc
start	include/openbabel/obutil.h	/^    clock_t start; \/\/!< the start of timing$/;"	m	class:OpenBabel::OBStopwatch
startDocument	include/libxml/parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandler
startDocument	include/libxml/parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandlerV1
startDocumentSAXFunc	include/libxml/parser.h	/^typedef void (*startDocumentSAXFunc) (void *ctx);$/;"	t
startElement	include/libxml/parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandler
startElement	include/libxml/parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandlerV1
startElementNs	include/libxml/parser.h	/^    startElementNsSAX2Func startElementNs;$/;"	m	struct:_xmlSAXHandler
startElementNsSAX2Func	include/libxml/parser.h	/^typedef void (*startElementNsSAX2Func) (void *ctx,$/;"	t
startElementSAXFunc	include/libxml/parser.h	/^typedef void (*startElementSAXFunc) (void *ctx,$/;"	t
startPoint	src/formats/adfformat.cpp	/^        double startPoint[ 3 ];$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
startRingBond	src/formats/smiley.h	/^    void startRingBond(int number) {}$/;"	f	struct:Smiley::CallbackBase
startRingBond	src/formats/smiley.h	/^    void startRingBond(int number)$/;"	f	struct:Smiley::PrintCallback
startRingBond	src/formats/smiley.h	/^    void startRingBond(int number, int index)$/;"	f	struct:Smiley::PrintCallback
startTag	include/libxml/HTMLparser.h	/^    char startTag;      \/* Whether the start tag can be implied *\/$/;"	m	struct:_htmlElemDesc
startTime	src/canon.cpp	/^      time_t startTime, maxTime;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::Timeout	file:
startTime	src/kekulize.cpp	/^      time_t startTime, maxTime;$/;"	m	struct:OpenBabel::Kekulize::Timeout	file:
start_	include/openbabel/json/json.h	/^         Location start_;$/;"	m	class:Json::Reader::Token
start_kekulize	src/kekulize.cpp	/^  void OBMol::start_kekulize( std::vector <OBAtom*> &cycle, std::vector<int> &electron) {$/;"	f	class:OpenBabel::OBMol
start_vertex	include/OB-BGL/verbose_visitors.h	/^    void start_vertex(Vertex u, const Graph& g) $/;"	f	class:OpenBabel::OBVerboseDFSVisitor
stat	src/formats/libinchi/ichiread.c	/^    int         stat;$/;"	m	struct:tagInchiReadErrMsg	file:
state	include/inchi/sha2.h	/^    unsigned long state[8];     \/*!< intermediate digest state  *\/$/;"	m	struct:__anon2
state	include/libxml/valid.h	/^    void                  *state;$/;"	m	struct:_xmlValidCtxt
state	include/libxml/valid.h	/^    xmlAutomataStatePtr    state;     \/* used to build the automata *\/$/;"	m	struct:_xmlValidCtxt
state	include/openbabel/rotor.h	/^    int state;$/;"	m	class:OpenBabel::rotor_digit
state	include/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
stateDiff_t	src/kekulize.cpp	/^    struct stateDiff_t {$/;"	s	namespace:OpenBabel::Kekulize	file:
std	include/openbabel/stereo/cistrans.h	/^namespace std {$/;"	n
std	include/openbabel/stereo/squareplanar.h	/^namespace std {$/;"	n
std	include/openbabel/stereo/tetrahedral.h	/^namespace std {$/;"	n
std	src/stereo/cistrans.cpp	/^namespace std {$/;"	n	file:
std	src/stereo/squareplanar.cpp	/^namespace std {$/;"	n	file:
std	src/stereo/tetrahedral.cpp	/^namespace std {$/;"	n	file:
stereo0D	include/inchi/inchi_api.h	/^    inchi_Stereo0D *stereo0D;     \/* array of num_stereo0D 0D stereo elements or NULL *\/$/;"	m	struct:tagINCHI_Input
stereo0D	include/inchi/inchi_api.h	/^    inchi_Stereo0D *stereo0D;     \/* array of num_stereo0D 0D stereo elements or NULL *\/$/;"	m	struct:tagINCHI_OutputStruct
stereo0D	include/inchi_api.h	/^    inchi_Stereo0D *stereo0D;     \/* array of num_stereo0D 0D stereo elements or NULL *\/$/;"	m	struct:tagINCHI_Input
stereo0D	include/inchi_api.h	/^    inchi_Stereo0D *stereo0D;     \/* array of num_stereo0D 0D stereo elements or NULL *\/$/;"	m	struct:tagINCHI_OutputStruct
stereoBondChange	src/mcdlutil.cpp	/^  bool TEditedMolecule::stereoBondChange() {$/;"	f	class:OpenBabel::TEditedMolecule
stereoCenters	src/canon.cpp	/^      std::vector<StereoCenter> &stereoCenters;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
stereo_atom_parity	include/inchi/extr_ct.h	/^    S_CHAR stereo_atom_parity; \/* similar to stereo_bond_parity[]: known in advance AB_PARITY_* value + KNOWN_PARITIES_EQL bit *\/$/;"	m	struct:tagAtom
stereo_atom_parity2	include/inchi/extr_ct.h	/^    S_CHAR stereo_atom_parity2;$/;"	m	struct:tagAtom
stereo_bond_neighbor	include/inchi/extr_ct.h	/^    AT_NUMB stereo_bond_neighbor[MAX_NUM_STEREO_BONDS];  \/* Original number of an opposite atom *\/$/;"	m	struct:tagAtom
stereo_bond_neighbor2	include/inchi/extr_ct.h	/^    AT_NUMB stereo_bond_neighbor2[MAX_NUM_STEREO_BONDS]; \/*     (stereo bond neighbor) +1; *\/$/;"	m	struct:tagAtom
stereo_bond_ord	include/inchi/extr_ct.h	/^    S_CHAR  stereo_bond_ord[MAX_NUM_STEREO_BONDS];    \/* Ordering number of a bond\/neighbor in the direction to the *\/$/;"	m	struct:tagAtom
stereo_bond_ord2	include/inchi/extr_ct.h	/^    S_CHAR  stereo_bond_ord2[MAX_NUM_STEREO_BONDS];   \/* stereo bond opposite atom (important for cumulenes); *\/$/;"	m	struct:tagAtom
stereo_bond_parity	include/inchi/extr_ct.h	/^    S_CHAR  stereo_bond_parity[MAX_NUM_STEREO_BONDS];  \/* parity + MULT_STEREOBOND*chain_length, *\/$/;"	m	struct:tagAtom
stereo_bond_parity2	include/inchi/extr_ct.h	/^    S_CHAR  stereo_bond_parity2[MAX_NUM_STEREO_BONDS]; \/* where: *\/$/;"	m	struct:tagAtom
stereo_bond_z_prod	include/inchi/extr_ct.h	/^    S_CHAR  stereo_bond_z_prod[MAX_NUM_STEREO_BONDS];  \/* Relative  atom-neighbors *\/$/;"	m	struct:tagAtom
stereo_bond_z_prod2	include/inchi/extr_ct.h	/^    S_CHAR  stereo_bond_z_prod2[MAX_NUM_STEREO_BONDS]; \/* double bond planes orientation; *\/$/;"	m	struct:tagAtom
stl_colour	src/formats/stlformat.cpp	/^  static uint16_t stl_colour( int atomicnum ) {$/;"	f	namespace:OpenBabel
stop	include/openbabel/obutil.h	/^    clock_t stop;  \/\/!< the current time$/;"	m	class:OpenBabel::OBStopwatch
storeint32le	src/formats/yasaraformat.cpp	/^void storeint32le(char *data,int32 value)$/;"	f	namespace:OpenBabel
str	src/formats/libinchi/ichiread.c	/^    char *str;$/;"	m	struct:tagLine	file:
str	src/formats/smiley.h	/^    std::string str;$/;"	m	struct:Smiley::PrintCallback
str1	include/libxml/xmlerror.h	/^    char       *str1;	\/* extra string information *\/$/;"	m	struct:_xmlError
str2	include/libxml/xmlerror.h	/^    char       *str2;	\/* extra string information *\/$/;"	m	struct:_xmlError
str3	include/libxml/xmlerror.h	/^    char       *str3;	\/* extra string information *\/$/;"	m	struct:_xmlError
strData	src/mcdlutil.cpp	/^  const string strData[NDATABASE_MOLECULES]= {$/;"	m	namespace:OpenBabel	file:
str_	include/openbabel/json/json.h	/^      const char *str_;$/;"	m	class:Json::StaticString
str_AuxChargeRadVal	src/formats/libinchi/ichiprt3.c	/^int str_AuxChargeRadVal(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxEqu	src/formats/libinchi/ichiprt3.c	/^int str_AuxEqu(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxInvIsoSp3	src/formats/libinchi/ichiprt3.c	/^int str_AuxInvIsoSp3(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxInvIsoSp3Numb	src/formats/libinchi/ichiprt3.c	/^int str_AuxInvIsoSp3Numb(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxInvSp3	src/formats/libinchi/ichiprt3.c	/^int str_AuxInvSp3(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxInvSp3Numb	src/formats/libinchi/ichiprt3.c	/^int str_AuxInvSp3Numb(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxIsoEqu	src/formats/libinchi/ichiprt3.c	/^int str_AuxIsoEqu(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxIsoNumb	src/formats/libinchi/ichiprt3.c	/^int str_AuxIsoNumb(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxIsoTgroupEqu	src/formats/libinchi/ichiprt3.c	/^int str_AuxIsoTgroupEqu(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxNumb	src/formats/libinchi/ichiprt3.c	/^int str_AuxNumb(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxTautTrans	src/formats/libinchi/ichiprt3.c	/^int str_AuxTautTrans(AT_NUMB *nTrans_n, AT_NUMB *nTrans_s, char *pStr, int nStrLen, int tot_len,$/;"	f
str_AuxTgroupEqu	src/formats/libinchi/ichiprt3.c	/^int str_AuxTgroupEqu(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_Charge2	src/formats/libinchi/ichiprt3.c	/^int str_Charge2(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_Connections	src/formats/libinchi/ichiprt3.c	/^int str_Connections(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_FixedH_atoms	src/formats/libinchi/ichiprt3.c	/^int str_FixedH_atoms(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_H_atoms	src/formats/libinchi/ichiprt3.c	/^int str_H_atoms(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_HillFormula	src/formats/libinchi/ichiprt3.c	/^int str_HillFormula(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_HillFormula2	src/formats/libinchi/ichiprt3.c	/^int str_HillFormula2(INCHI_SORT *pINChISort \/* non-taut *\/, INCHI_SORT *pINChISort2 \/* taut *\/,$/;"	f
str_IsoAtoms	src/formats/libinchi/ichiprt3.c	/^int str_IsoAtoms(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_IsoSp2	src/formats/libinchi/ichiprt3.c	/^int str_IsoSp2(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_IsoSp3	src/formats/libinchi/ichiprt3.c	/^int str_IsoSp3(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_IsoStereoAbsInv	src/formats/libinchi/ichiprt3.c	/^int str_IsoStereoAbsInv(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_LineEnd	src/formats/libinchi/ichiprt1.c	/^int str_LineEnd( const char *tag, int tot_len, int nStrLen, int *bOverflow, char *pStr, int ind, int bPlainTextTags )$/;"	f
str_LineStart	src/formats/libinchi/ichiprt1.c	/^int str_LineStart( const char *tag, char *tag2, int val2, char *pStr, int ind )$/;"	f
str_Sp2	src/formats/libinchi/ichiprt3.c	/^int str_Sp2(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_Sp3	src/formats/libinchi/ichiprt3.c	/^int str_Sp3(INCHI_SORT *pINChISort, INCHI_SORT *pINChISort2, char *pStr, int nStrLen, int tot_len,$/;"	f
str_StereoAbsInv	src/formats/libinchi/ichiprt3.c	/^int str_StereoAbsInv(INCHI_SORT *pINChISort, char *pStr, int nStrLen, int tot_len,$/;"	f
str_copy	src/formats/yasaraformat.cpp	40;"	d	file:
str_natoi	src/formats/yasaraformat.cpp	/^int str_natoi(char *string,int number)$/;"	f	namespace:OpenBabel
str_ncopy	src/formats/yasaraformat.cpp	/^void str_ncopy(char *string1,char *string2,int len)$/;"	f	namespace:OpenBabel
str_xml	include/libxml/parser.h	/^    const xmlChar *str_xml;$/;"	m	struct:_xmlParserCtxt
str_xml_ns	include/libxml/parser.h	/^    const xmlChar *str_xml_ns;$/;"	m	struct:_xmlParserCtxt
str_xmlns	include/libxml/parser.h	/^    const xmlChar *str_xmlns;$/;"	m	struct:_xmlParserCtxt
strcasestr	src/GUI/optswx.cpp	/^char* DynOptionswx::strcasestr(const char* haystack, const char* needle)$/;"	f	class:DynOptionswx
strcasestr	src/formats/gausszmatformat.cpp	22;"	d	file:
stretchbendunit	src/forcefields/forcefieldmm2.h	/^      double stretchbendunit;$/;"	m	class:OpenBabel::OBForceFieldMM2
stricmp	src/formats/libinchi/util.c	/^int stricmp( const char *s1, const char *s2 )$/;"	f
strictMode	src/formats/json/jsoncpp.cpp	/^Features::strictMode()$/;"	f	class:Json::Features
strictRoot_	include/openbabel/json/json.h	/^      bool strictRoot_;$/;"	m	class:Json::Features
stringValue	include/openbabel/json/json.h	/^      stringValue,   \/\/\/< UTF-8 string value$/;"	e	enum:Json::ValueType
string_	include/openbabel/json/json.h	/^         char *string_;$/;"	m	union:Json::Value::ValueHolder
stringval	include/libxml/xpath.h	/^    xmlChar *stringval;$/;"	m	struct:_xmlXPathObject
strlwr	src/formats/turbomoleformat.cpp	/^char *strlwr(char *s)$/;"	f	namespace:OpenBabel
strnicmp	src/formats/cifformat.cpp	/^  int strnicmp(const char *s1, const char *s2, int len)$/;"	f	namespace:OpenBabel
subelts	include/libxml/HTMLparser.h	/^    const char** subelts;		\/* allowed sub-elements of this element *\/$/;"	m	struct:_htmlElemDesc
subscriptSize	src/depict/depict.cpp	/^      int        fontSize, subscriptSize;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
substGroup	include/libxml/schemasInternals.h	/^    const xmlChar *substGroup;$/;"	m	struct:_xmlSchemaElement
substGroupNs	include/libxml/schemasInternals.h	/^    const xmlChar *substGroupNs;$/;"	m	struct:_xmlSchemaElement
subtract_DT_from_num_H	src/formats/libinchi/ichinorm.c	/^int subtract_DT_from_num_H( int num_atoms, inp_ATOM *at )$/;"	f
subtree	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator> tree<T, tree_node_allocator>::subtree(sibling_iterator from, sibling_iterator to) const$/;"	f	class:tree
subtree	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::subtree(tree& tmp, sibling_iterator from, sibling_iterator to) const$/;"	f	class:tree
subtype	include/inchi/ichitaut.h	/^    S_CHAR    subtype;$/;"	m	struct:tagChargeCandidate
subtype	include/inchi/ichitaut.h	/^    S_CHAR    subtype;$/;"	m	struct:tagSaltChargeCandidate
subtypes	include/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaAttribute
subtypes	include/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaElement
subtypes	include/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes;$/;"	m	struct:_xmlSchemaType
summarize_symmetry_elements	src/pointgroup.cpp	/^    summarize_symmetry_elements( void )$/;"	f	class:OpenBabel::PointGroupPrivate
superimpose	src/obutil.cpp	/^  double superimpose(double *r,double *f,int size)$/;"	f	namespace:OpenBabel
surface_point	src/formats/pointcloudformat.cpp	/^  vector3 surface_point( double cx, double cy, double cz, double radius ) {$/;"	f	namespace:OpenBabel
sw	src/formats/fastsearchformat.cpp	/^    OBStopwatch sw; \/\/used when preparing index$/;"	m	class:OpenBabel::FastSearchFormat	file:
swap	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::swap(iterator one, iterator two)$/;"	f	class:tree
swap	include/openbabel/tree/tree.hh	/^void tree<T, tree_node_allocator>::swap(sibling_iterator it)$/;"	f	class:tree
swap	src/formats/json/jsoncpp.cpp	/^Value::CZString::swap( CZString &other )$/;"	f	class:Json::Value::CZString
swap	src/formats/json/jsoncpp.cpp	/^Value::swap( Value &other )$/;"	f	class:Json::Value
switch_ptrs	src/formats/libinchi/ichimap2.c	/^void switch_ptrs( AT_RANK **p1, AT_RANK **p2 )$/;"	f
symClass	src/isomorphism.cpp	/^      unsigned int symClass;$/;"	m	class:OpenBabel::OBAutomorphismQueryAtom	file:
symClasses	src/isomorphism.cpp	/^      std::vector<unsigned int> symClasses;$/;"	m	class:OpenBabel::OBAutomorphismQueryAtom	file:
symbol	src/formats/fastaformat.cpp	/^    char symbol[4]; \/\/ e.g. C, H, N, O, P$/;"	m	struct:OpenBabel::ResidueAtomRecord	file:
symmetry	src/formats/mmcifformat.cpp	/^     symmetry,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
symmetry_classes	src/canon.cpp	/^      const std::vector<unsigned int> &symmetry_classes;$/;"	m	struct:OpenBabel::CanonicalLabelsImpl::State	file:
symmetry_code	src/pointgroup.cpp	/^    const char *  symmetry_code ;     \/* Group symmetry code                         *\/$/;"	m	struct:OpenBabel::__anon89	file:
symmetry_equiv	src/formats/mmcifformat.cpp	/^     symmetry_equiv,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
sync	include/openbabel/lineend.h	/^  FilteringInputStreambuf< Extractor >::sync()$/;"	f	class:OpenBabel::FilteringInputStreambuf
sync	include/openbabel/oberror.h	/^      int sync()$/;"	f	class:OpenBabel::obLogBuf
sync	src/zipstreamimpl.h	/^int basic_zip_streambuf<charT, traits>::sync(void)$/;"	f	class:basic_zip_streambuf
szAtoms	include/inchi/inpdef.h	/^    char *szAtoms;$/;"	m	struct:tagOriginalStruct
szAuxInfo	include/inchi/inchi_api.h	/^    char *szAuxInfo;   \/* Aux info ASCIIZ string *\/$/;"	m	struct:tagINCHI_Output
szAuxInfo	include/inchi_api.h	/^    char *szAuxInfo;   \/* Aux info ASCIIZ string *\/$/;"	m	struct:tagINCHI_Output
szBonds	include/inchi/inpdef.h	/^    char *szBonds;$/;"	m	struct:tagOriginalStruct
szCoord	include/inchi/inpdef.h	/^    MOL_COORD *szCoord;$/;"	m	struct:tagOrigAtom
szCoord	include/inchi/inpdef.h	/^    char *szCoord;$/;"	m	struct:tagOriginalStruct
szElName	src/formats/libinchi/util.c	/^     const char *szElName;$/;"	m	struct:tagElData	file:
szErrMsg	include/inchi/inchi_api.h	/^    char         szErrMsg[STR_ERR_LEN];$/;"	m	struct:tagInchiInpData
szErrMsg	include/inchi_api.h	/^    char         szErrMsg[STR_ERR_LEN];$/;"	m	struct:tagInchiInpData
szGetTag	src/formats/libinchi/ichiprt1.c	/^char *szGetTag( const INCHI_TAG *Tag, int nTag, int bTag, char *szTag, int *bAlways )$/;"	f
szGroupName	include/inchi/inchicmp.h	/^    const char              *szGroupName;$/;"	m	struct:tagCompareInchiMsgGroup
szHillFormula	include/inchi/ichi.h	/^    char      *szHillFormula;$/;"	m	struct:tagINChI
szInChI	include/inchi/inchi_api.h	/^    char *szInChI;     \/* InChI ASCIIZ string *\/$/;"	m	struct:tagINCHI_Output
szInChI	include/inchi/inchi_api.h	/^    char *szInChI;     \/* InChI ASCIIZ string to be converted to a strucure *\/$/;"	m	struct:tagINCHI_InputINCHI
szInChI	include/inchi_api.h	/^    char *szInChI;     \/* InChI ASCIIZ string *\/$/;"	m	struct:tagINCHI_Output
szInChI	include/inchi_api.h	/^    char *szInChI;     \/* InChI ASCIIZ string to be converted to a strucure *\/$/;"	m	struct:tagINCHI_InputINCHI
szLog	include/inchi/inchi_api.h	/^    char           *szLog;        \/* log-file ASCIIZ string, contains a human-readable list *\/$/;"	m	struct:tagINCHI_OutputStruct
szLog	include/inchi/inchi_api.h	/^    char *szLog;       \/* log-file ASCIIZ string, contains a human-readable list *\/$/;"	m	struct:tagINCHI_Output
szLog	include/inchi_api.h	/^    char           *szLog;        \/* log-file ASCIIZ string, contains a human-readable list *\/$/;"	m	struct:tagINCHI_OutputStruct
szLog	include/inchi_api.h	/^    char *szLog;       \/* log-file ASCIIZ string, contains a human-readable list *\/$/;"	m	struct:tagINCHI_Output
szMessage	include/inchi/inchi_api.h	/^    char           *szMessage;    \/* Error\/warning ASCIIZ message *\/$/;"	m	struct:tagINCHI_OutputStruct
szMessage	include/inchi/inchi_api.h	/^    char *szMessage;   \/* Error\/warning ASCIIZ message *\/$/;"	m	struct:tagINCHI_Output
szMessage	include/inchi_api.h	/^    char           *szMessage;    \/* Error\/warning ASCIIZ message *\/$/;"	m	struct:tagINCHI_OutputStruct
szMessage	include/inchi_api.h	/^    char *szMessage;   \/* Error\/warning ASCIIZ message *\/$/;"	m	struct:tagINCHI_Output
szMsg	include/inchi/inchicmp.h	/^    const char            *szMsg;$/;"	m	struct:tagCompareInchiMsg
szOptions	include/inchi/inchi_api.h	/^    char           *szOptions;    \/* InChI options: space-delimited; each is preceded by *\/$/;"	m	struct:tagINCHI_Input
szOptions	include/inchi/inchi_api.h	/^    char *szOptions;   \/* InChI options: space-delimited; each is preceded by *\/$/;"	m	struct:tagINCHI_InputINCHI
szOptions	include/inchi_api.h	/^    char           *szOptions;    \/* InChI options: space-delimited; each is preceded by *\/$/;"	m	struct:tagINCHI_Input
szOptions	include/inchi_api.h	/^    char *szOptions;   \/* InChI options: space-delimited; each is preceded by *\/$/;"	m	struct:tagINCHI_InputINCHI
szOrigCoord	include/inchi/ichi.h	/^    MOL_COORD *szOrigCoord;$/;"	m	struct:tagINChI_Aux
szPlainComment	src/formats/libinchi/ichiprt1.c	/^    const char *szPlainComment;$/;"	m	struct:tagInchiTag	file:
szPlainLabel	src/formats/libinchi/ichiprt1.c	/^    const char *szPlainLabel;$/;"	m	struct:tagInchiTag	file:
szRefChars	src/formats/libinchi/ichiprt1.c	/^const char szRefChars[sizeof(xmlRef)\/sizeof(xmlRef[0])] = {'<', '&', '>', '"', '\\'', '\\0' };$/;"	v
szRemovedProtons	include/inchi/inpdef.h	/^    char       szRemovedProtons[MAX_LEN_REMOVED_PROTONS];$/;"	m	struct:tagInfoAtomData
szSdfDataHeader	include/inchi/ichidrp.h	/^    char            szSdfDataHeader[MAX_SDF_HEADER+1];$/;"	m	struct:tagInputParms
szTitle	include/inchi/inchi_dll_a.h	/^    char            szTitle[MAX_SDF_HEADER+MAX_SDF_VALUE+256];$/;"	m	struct:tagINCHIGEN_CONTROL
szXmlLabel	src/formats/libinchi/ichiprt1.c	/^    const char *szXmlLabel;$/;"	m	struct:tagInchiTag	file:
t26	src/formats/libinchi/ikey_base26.c	/^static char t26[][4] = $/;"	v	file:
t41Format__	src/formats/adfformat.cpp	/^OBT41Format t41Format__;$/;"	m	namespace:OpenBabel	file:
tGroupNumber	include/inchi/ichitaut.h	/^    AT_NUMB   *tGroupNumber;$/;"	m	struct:tagTautomerGroupsInfo
t_group	include/inchi/ichitaut.h	/^    T_GROUP   *t_group;  \/* max_num_t_groups elements *\/$/;"	m	struct:tagTautomerGroupsInfo
t_group_info	include/inchi/ichi_bns.h	/^    struct tagTautomerGroupsInfo *t_group_info;$/;"	m	struct:BN_AtomsAtTautGroup	typeref:struct:BN_AtomsAtTautGroup::tagTautomerGroupsInfo
t_group_info	include/inchi/ichicant.h	/^    T_GROUP_INFO     *t_group_info;$/;"	m	struct:tagCanonStat
t_parity	include/inchi/ichi.h	/^    S_CHAR     *t_parity;     \/* tetrahedral (relative, see nCompInv2Abs) atom parities [nNumberOfAtoms] *\/$/;"	m	struct:tagINChI_Stereo
t_parityInv	include/inchi/ichi.h	/^    S_CHAR     *t_parityInv;  \/* tetrahedral inverted atom parities [nNumberOfAtoms] *\/$/;"	m	struct:tagINChI_Stereo
table	include/openbabel/alias.h	/^  static SuperAtomTable& table()$/;"	f	class:OpenBabel::AliasData
tagAllTCGroups	include/inchi/ichirvrs.h	/^typedef struct tagAllTCGroups {$/;"	s
tagAltPathChanges	src/formats/libinchi/ichi_bns.c	/^typedef struct tagAltPathChanges $/;"	s	file:
tagAltPathConst	include/inchi/ichi_bns.h	/^typedef enum tagAltPathConst {$/;"	g
tagAtData_dch	include/inchi/ichicant.h	/^typedef struct tagAtData_dch {$/;"	s
tagAtInvariantIndexes	include/inchi/ichicant.h	/^typedef enum tagAtInvariantIndexes {$/;"	g
tagAtPair	src/formats/libinchi/ichinorm.c	/^typedef struct tagAtPair {$/;"	s	file:
tagAtTypeBitmap	src/formats/libinchi/ichinorm.c	/^typedef struct tagAtTypeBitmap {$/;"	s	file:
tagAtTypeTotals	src/formats/libinchi/ichi_bns.c	/^typedef enum tagAtTypeTotals $/;"	g	file:
tagAtTypeUnion	src/formats/libinchi/ichinorm.c	/^typedef union tagAtTypeUnion {$/;"	u	file:
tagAtom	include/inchi/extr_ct.h	/^typedef struct tagAtom {$/;"	s
tagAtomInvariant	include/inchi/ichicant.h	/^typedef struct tagAtomInvariant {$/;"	s
tagAtomInvariant2	include/inchi/ichicant.h	/^typedef struct tagAtomInvariant2 {$/;"	s
tagAtomInvariantBytes	include/inchi/ichicant.h	/^typedef struct tagAtomInvariantBytes {$/;"	s
tagAtomIonPrperies	include/inchi/ichirvrs.h	/^typedef struct tagAtomIonPrperies {$/;"	s
tagAtomParmsForDrawing	include/inchi/inpdef.h	/^typedef struct tagAtomParmsForDrawing {$/;"	s
tagAtomSizes	include/inchi/ichitaut.h	/^typedef struct tagAtomSizes {$/;"	s
tagAtomsCmpTwoFixedH	include/inchi/ichirvrs.h	/^typedef struct tagAtomsCmpTwoFixedH {$/;"	s
tagAtomsCmpTwoMobileH	include/inchi/ichirvrs.h	/^typedef struct tagAtomsCmpTwoMobileH {$/;"	s
tagAuxInfoState	src/formats/libinchi/ichiread.c	/^typedef enum tagAuxInfoState {$/;"	g	file:
tagAuxLblBit	src/formats/libinchi/ichiprt1.c	/^typedef enum tagAuxLblBit$/;"	g	file:
tagAuxLblOrd	src/formats/libinchi/ichiprt1.c	/^typedef enum tagAuxLblOrd$/;"	g	file:
tagBNS_FLOW_CHANGES	include/inchi/ichi_bns.h	/^typedef struct tagBNS_FLOW_CHANGES {$/;"	s
tagBaseCanonNumbering	include/inchi/ichicant.h	/^typedef struct tagBaseCanonNumbering {$/;"	s
tagBfsQueue	include/inchi/ichirvrs.h	/^typedef struct tagBfsQueue {$/;"	s
tagBnsRadSrchMode	include/inchi/ichi_bns.h	/^typedef enum tagBnsRadSrchMode {$/;"	g
tagCOMPONENT_TREAT_INFO	include/inchi/inchi_dll_a.h	/^typedef struct tagCOMPONENT_TREAT_INFO $/;"	s
tagCTable	src/formats/libinchi/ichican2.c	/^typedef struct tagCTable {$/;"	s	file:
tagCanonCounts	include/inchi/ichicant.h	/^typedef struct tagCanonCounts {$/;"	s
tagCanonData	include/inchi/ichicant.h	/^typedef struct tagCanonData {$/;"	s
tagCanonStat	include/inchi/ichicant.h	/^typedef struct tagCanonStat {$/;"	s
tagCell	src/formats/libinchi/ichican2.c	/^typedef struct tagCell {$/;"	s	file:
tagChargeCandidate	include/inchi/ichitaut.h	/^typedef struct tagChargeCandidate {$/;"	s
tagChargeChangeCandidate	include/inchi/ichirvrs.h	/^typedef struct tagChargeChangeCandidate {$/;"	s
tagChargeGroup	include/inchi/ichitaut.h	/^typedef struct tagChargeGroup {$/;"	s
tagChargeGroupsInfo	include/inchi/ichitaut.h	/^typedef struct tagChargeGroupsInfo {$/;"	s
tagChargeNodeList	include/inchi/ichirvrs.h	/^typedef struct tagChargeNodeList {$/;"	s
tagChargeNodes	include/inchi/ichirvrs.h	/^typedef struct tagChargeNodes {$/;"	s
tagChargeType	src/formats/libinchi/ichitaut.c	/^typedef struct tagChargeType {  \/* meaning see in bCanBeACPoint() *\/$/;"	s	file:
tagChargeValence	include/inchi/ichirvrs.h	/^typedef struct tagChargeValence {$/;"	s
tagCompareInchiMsg	include/inchi/inchicmp.h	/^typedef struct tagCompareInchiMsg {$/;"	s
tagCompareInchiMsgGroup	include/inchi/inchicmp.h	/^typedef struct tagCompareInchiMsgGroup {$/;"	s
tagCompositeAtomData	include/inchi/inpdef.h	/^typedef struct tagCompositeAtomData {$/;"	s
tagCopySegmentType	src/formats/libinchi/ichiread.c	/^typedef enum tagCopySegmentType $/;"	g	file:
tagCurTree	include/inchi/ichicant.h	/^typedef struct tagCurTree {$/;"	s
tagDerivAttachment	src/formats/libinchi/ichinorm.c	/^typedef struct tagDerivAttachment {$/;"	s	file:
tagDfsPath	include/inchi/ichitaut.h	/^typedef struct tagDfsPath {$/;"	s
tagDiffINChILayers	include/inchi/strutil.h	/^typedef enum tagDiffINChILayers $/;"	g
tagDiffINChISegments	include/inchi/strutil.h	/^typedef enum tagDiffINChISegments $/;"	g
tagDrawParms	include/inchi/ichidrp.h	/^typedef struct tagDrawParms {$/;"	s
tagDrawParmsSettings	include/inchi/ichidrp.h	/^typedef struct tagDrawParmsSettings {$/;"	s
tagEQUIV_INFO	include/inchi/ichicant.h	/^typedef struct tagEQUIV_INFO {$/;"	s
tagEdgeCapFlow	include/inchi/ichirvrs.h	/^typedef struct tagEdgeCapFlow {$/;"	s
tagEdgeList	include/inchi/ichirvrs.h	/^typedef struct tagEdgeList {$/;"	s
tagElData	src/formats/libinchi/util.c	/^typedef struct tagElData {$/;"	s	file:
tagEndpointInfo	include/inchi/ichitaut.h	/^typedef struct tagEndpointInfo {$/;"	s
tagEquNeigh	include/inchi/ichicomn.h	/^typedef struct tagEquNeigh {$/;"	s
tagFixHOrTautCanonNumbering	include/inchi/ichicant.h	/^typedef struct tagFixHOrTautCanonNumbering {$/;"	s
tagINCHIBondStereo2D	include/inchi/inchi_api.h	/^typedef enum tagINCHIBondStereo2D {$/;"	g
tagINCHIBondStereo2D	include/inchi_api.h	/^typedef enum tagINCHIBondStereo2D {$/;"	g
tagINCHIBondType	include/inchi/inchi_api.h	/^typedef enum tagINCHIBondType {$/;"	g
tagINCHIBondType	include/inchi_api.h	/^typedef enum tagINCHIBondType {$/;"	g
tagINCHIGEN_CONTROL	include/inchi/inchi_dll_a.h	/^typedef struct tagINCHIGEN_CONTROL$/;"	s
tagINCHIGEN_DATA	include/inchi/inchi_api.h	/^typedef struct tagINCHIGEN_DATA $/;"	s
tagINCHIGEN_DATA	include/inchi_api.h	/^typedef struct tagINCHIGEN_DATA $/;"	s
tagINCHIRadical	include/inchi/inchi_api.h	/^typedef enum tagINCHIRadical {$/;"	g
tagINCHIRadical	include/inchi_api.h	/^typedef enum tagINCHIRadical {$/;"	g
tagINCHIStereo0D	include/inchi/inchi_api.h	/^typedef struct tagINCHIStereo0D {$/;"	s
tagINCHIStereo0D	include/inchi_api.h	/^typedef struct tagINCHIStereo0D {$/;"	s
tagINCHIStereoParity0D	include/inchi/inchi_api.h	/^typedef enum tagINCHIStereoParity0D {$/;"	g
tagINCHIStereoParity0D	include/inchi_api.h	/^typedef enum tagINCHIStereoParity0D {$/;"	g
tagINCHIStereoType0D	include/inchi/inchi_api.h	/^typedef enum tagINCHIStereoType0D {$/;"	g
tagINCHIStereoType0D	include/inchi_api.h	/^typedef enum tagINCHIStereoType0D {$/;"	g
tagINCHI_Input	include/inchi/inchi_api.h	/^typedef struct tagINCHI_Input {$/;"	s
tagINCHI_Input	include/inchi_api.h	/^typedef struct tagINCHI_Input {$/;"	s
tagINCHI_InputINCHI	include/inchi/inchi_api.h	/^typedef struct tagINCHI_InputINCHI {$/;"	s
tagINCHI_InputINCHI	include/inchi_api.h	/^typedef struct tagINCHI_InputINCHI {$/;"	s
tagINCHI_Output	include/inchi/inchi_api.h	/^typedef struct tagINCHI_Output {$/;"	s
tagINCHI_Output	include/inchi_api.h	/^typedef struct tagINCHI_Output {$/;"	s
tagINCHI_OutputStruct	include/inchi/inchi_api.h	/^typedef struct tagINCHI_OutputStruct {$/;"	s
tagINCHI_OutputStruct	include/inchi_api.h	/^typedef struct tagINCHI_OutputStruct {$/;"	s
tagINChI	include/inchi/ichi.h	/^typedef struct tagINChI {  \/* [N] = allocated length *\/$/;"	s
tagINChISegmAction	include/inchi/strutil.h	/^typedef enum tagINChISegmAction $/;"	g
tagINChI_Aux	include/inchi/ichi.h	/^typedef struct tagINChI_Aux { \/* [N] = allocated length *\/$/;"	s
tagINChI_IsotopicAtom	include/inchi/ichi.h	/^typedef struct tagINChI_IsotopicAtom {$/;"	s
tagINChI_IsotopicTGroup	include/inchi/ichi.h	/^typedef struct tagINChI_IsotopicTGroup {$/;"	s
tagINChI_Stereo	include/inchi/ichi.h	/^typedef struct tagINChI_Stereo { \/* [N] = allocated length *\/$/;"	s
tagINChIforSort	include/inchi/ichi.h	/^typedef struct tagINChIforSort {$/;"	s
tagIdentLblBit	src/formats/libinchi/ichiprt1.c	/^typedef enum tagIdentLblBit$/;"	g	file:
tagIdentLblOrd	src/formats/libinchi/ichiprt1.c	/^typedef enum tagIdentLblOrd$/;"	g	file:
tagInChICompareResults	include/inchi/strutil.h	/^typedef struct tagInChICompareResults$/;"	s
tagInChIHashCalc	include/inchi/ichidrp.h	/^typedef enum tagInChIHashCalc $/;"	g
tagInChI_STATE	src/formats/libinchi/ichiread.c	/^typedef enum tagInChI_STATE $/;"	g	file:
tagInchiAtom	include/inchi/inchi_api.h	/^typedef struct tagInchiAtom {$/;"	s
tagInchiAtom	include/inchi_api.h	/^typedef struct tagInchiAtom {$/;"	s
tagInchiCompareDiffBits	include/inchi/inchicmp.h	/^typedef enum tagInchiCompareDiffBits {$/;"	g
tagInchiDiffBits	include/inchi/strutil.h	/^typedef enum tagInchiDiffBits $/;"	g
tagInchiInpData	include/inchi/inchi_api.h	/^typedef struct tagInchiInpData {$/;"	s
tagInchiInpData	include/inchi_api.h	/^typedef struct tagInchiInpData {$/;"	s
tagInchiReadErrMsg	src/formats/libinchi/ichiread.c	/^typedef struct tagInchiReadErrMsg $/;"	s	file:
tagInchiTag	src/formats/libinchi/ichiprt1.c	/^typedef struct tagInchiTag$/;"	s	file:
tagInchiTime	include/inchi/ichitime.h	/^typedef struct tagInchiTime {$/;"	s
tagInfoAtomData	include/inchi/inpdef.h	/^typedef struct tagInfoAtomData {$/;"	s
tagInpAtomAddParities	include/inchi/ichirvrs.h	/^typedef struct tagInpAtomAddParities {$/;"	s
tagInputAtom	include/inchi/inpdef.h	/^typedef struct tagInputAtom {$/;"	s
tagInputAtomData	include/inchi/inpdef.h	/^typedef struct tagInputAtomData {$/;"	s
tagInputInChI	include/inchi/ichirvrs.h	/^typedef struct tagInputInChI {$/;"	s
tagInputParms	include/inchi/ichidrp.h	/^typedef struct tagInputParms {$/;"	s
tagInputType	include/inchi/ichidrp.h	/^typedef enum tagInputType { INPUT_NONE=0, INPUT_MOLFILE=1, INPUT_SDFILE=2, INPUT_INCHI_XML=3, INPUT_INCHI_PLAIN=4, INPUT_CMLFILE=5, INPUT_INCHI=6, INPUT_MAX } INPUT_TYPE;$/;"	g
tagIonAtomType	src/formats/libinchi/strutil.c	/^ typedef enum tagIonAtomType {$/;"	g	file:
tagIsotopicAtom	include/inchi/extr_ct.h	/^typedef struct tagIsotopicAtom {$/;"	s
tagIsotopicTautomerGroup	include/inchi/ichitaut.h	/^typedef struct tagIsotopicTautomerGroup {$/;"	s
tagLine	src/formats/libinchi/ichiread.c	/^typedef struct tagLine $/;"	s	file:
tagLinkedBonds	src/formats/libinchi/ichiread.c	/^typedef struct tagLinkedBonds $/;"	s	file:
tagMarkDiff	include/inchi/strutil.h	/^typedef enum tagMarkDiff $/;"	g
tagMobileGroupList	src/formats/libinchi/ichirvr2.c	/^typedef struct tagMobileGroupList {$/;"	s	file:
tagMobileHGroups	src/formats/libinchi/ichirvr2.c	/^typedef struct tagMobileHGroups {$/;"	s	file:
tagModeProtonIsoExchgH	src/formats/libinchi/ichiread.c	/^typedef enum tagModeProtonIsoExchgH $/;"	g	file:
tagNodeSet	include/inchi/ichi_bns.h	/^typedef struct tagNodeSet {$/;"	s
tagNodeSet	src/formats/libinchi/ichican2.c	/^typedef struct tagNodeSet {$/;"	s	file:
tagNodeValues	src/formats/libinchi/ichican2.c	/^typedef struct tagNodeValues {$/;"	s	file:
tagNormAtom	include/inchi/inchi_api.h	/^typedef struct tagNormAtom $/;"	s
tagNormAtom	include/inchi_api.h	/^typedef struct tagNormAtom $/;"	s
tagNormAtomData	include/inchi/inchi_api.h	/^typedef struct tagNormAtomData$/;"	s
tagNormAtomData	include/inchi_api.h	/^typedef struct tagNormAtomData$/;"	s
tagNormCanonFlags	include/inchi/inpdef.h	/^typedef struct tagNormCanonFlags {$/;"	s
tagNumElem	src/formats/libinchi/ichiread.c	/^typedef struct tagNumElem $/;"	s	file:
tagOneComponentRemovedAndExchangeableH	include/inchi/ichirvrs.h	/^typedef struct tagOneComponentRemovedAndExchangeableH {$/;"	s
tagOneLinkedBond	src/formats/libinchi/ichiread.c	/^typedef struct tagOneLinkedBond $/;"	s	file:
tagOrigAtom	include/inchi/inpdef.h	/^typedef struct tagOrigAtom {$/;"	s
tagOrigInfo	include/inchi/ichi.h	/^typedef struct tagOrigInfo {$/;"	s
tagOriginalStruct	include/inchi/inpdef.h	/^typedef struct tagOriginalStruct {$/;"	s
tagOutputStream	include/inchi/mode.h	/^typedef struct tagOutputStream $/;"	s
tagOutputString	include/inchi/mode.h	/^typedef struct tagOutputString $/;"	s
tagPartition	include/inchi/ichicant.h	/^typedef struct tagPartition {$/;"	s
tagPersistDrawParms	include/inchi/ichidrp.h	/^typedef struct tagPersistDrawParms {$/;"	s
tagProtonRemovalMaskAndType	src/formats/libinchi/ichi_bns.c	/^typedef struct tagProtonRemovalMaskAndType $/;"	s	file:
tagQieue	include/inchi/ichiring.h	/^typedef struct tagQieue {$/;"	s
tagRemovedAndExchangeableH	include/inchi/ichirvrs.h	/^typedef struct tagRemovedAndExchangeableH {$/;"	s
tagRenumbData	src/formats/libinchi/runichi.c	/^typedef struct tagRenumbData {$/;"	s	file:
tagRetValCheckINCHI	include/inchi/inchi_api.h	/^typedef enum tagRetValCheckINCHI $/;"	g
tagRetValCheckINCHI	include/inchi_api.h	/^typedef enum tagRetValCheckINCHI $/;"	g
tagRetValGetINCHI	include/inchi/inchi_api.h	/^typedef enum tagRetValGetINCHI {$/;"	g
tagRetValGetINCHI	include/inchi_api.h	/^typedef enum tagRetValGetINCHI {$/;"	g
tagRetValGetINCHIKey	include/inchi/inchi_api.h	/^typedef enum tagRetValGetINCHIKey$/;"	g
tagRetValGetINCHIKey	include/inchi_api.h	/^typedef enum tagRetValGetINCHIKey$/;"	g
tagReturnedDrawParms	include/inchi/ichidrp.h	/^typedef struct tagReturnedDrawParms {$/;"	s
tagReversedInChI	include/inchi/ichirvrs.h	/^typedef struct tagReversedInChI {$/;"	s
tagRing2Chain	src/formats/libinchi/ichinorm.c	/^typedef struct tagRing2Chain {  \/* atom Z *\/$/;"	s	file:
tagSaltChargeCandidate	include/inchi/ichitaut.h	/^typedef struct tagSaltChargeCandidate {$/;"	s
tagSaltGroupInfo	include/inchi/ichitaut.h	/^typedef struct tagSaltGroupInfo {$/;"	s
tagSp3StereoTypeTmp	src/formats/libinchi/ichimake.c	/^typedef enum tagSp3StereoTypeTmp {$/;"	g	file:
tagSplitLong	include/inchi/ichicant.h	/^typedef union tagSplitLong {$/;"	u
tagStereoBondNeighbor	src/formats/libinchi/ichicans.c	/^typedef struct tagStereoBondNeighbor {  \/*  *n = sort key *\/$/;"	s	file:
tagStereoCarb	include/inchi/extr_ct.h	/^typedef struct tagStereoCarb {$/;"	s
tagStereoDble	include/inchi/extr_ct.h	/^typedef struct tagStereoDble {$/;"	s
tagStructCmpTwoFixedH	include/inchi/ichirvrs.h	/^typedef struct tagStructCmpTwoFixedH {$/;"	s
tagStructCmpTwoMobileH	include/inchi/ichirvrs.h	/^typedef struct tagStructCmpTwoMobileH {$/;"	s
tagStructData	include/inchi/ichimain.h	/^typedef struct tagStructData {$/;"	s
tagStructFptrs	include/inchi/inpdef.h	/^typedef struct tagStructFptrs {$/;"	s
tagStructFromInChI	include/inchi/ichirvrs.h	/^typedef struct tagStructFromInChI {$/;"	s
tagStructRestoreMode	include/inchi/ichirvrs.h	/^typedef struct tagStructRestoreMode {$/;"	s
tagTCGroup	include/inchi/ichirvrs.h	/^typedef struct tagTCGroup {$/;"	s
tagTCGroupTypes	include/inchi/ichirvrs.h	/^typedef enum tagTCGroupTypes {$/;"	g
tagTG_NumDA	include/inchi/ichitaut.h	/^typedef enum tagTG_NumDA {  \/* 2004-02-26 *\/$/;"	g
tagTGroupData	src/formats/libinchi/ichitaut.c	/^typedef struct tagTGroupData {$/;"	s	file:
tagTautomerBondLocation	include/inchi/ichitaut.h	/^typedef struct tagTautomerBondLocation {$/;"	s
tagTautomerEndpoint	include/inchi/ichitaut.h	/^typedef struct tagTautomerEndpoint {$/;"	s
tagTautomerGroup	include/inchi/ichitaut.h	/^typedef struct tagTautomerGroup {$/;"	s
tagTautomerGroupsInfo	include/inchi/ichitaut.h	/^typedef struct tagTautomerGroupsInfo {$/;"	s
tagTautomerNormInfo	include/inchi/ichitaut.h	/^typedef struct tagTautomerNormInfo {$/;"	s
tagTblDrawPatms	include/inchi/ichidrp.h	/^typedef struct tagTblDrawPatms {$/;"	s
tagTblLabels	include/inchi/ichidrp.h	/^typedef enum tagTblLabels{ ilSHOWN,  TDP_NUM_LBL} TBL_LABELS; \/*  labels *\/$/;"	g
tagTblTypes	include/inchi/ichidrp.h	/^typedef enum tagTblTypes {itBASIC, itISOTOPIC, itSTEREO, TDP_NUM_PAR} TBL_TYPES; \/*  types *\/$/;"	g
tagTgDiffHChgFH	src/formats/libinchi/ichirvr3.c	/^typedef struct tagTgDiffHChgFH {$/;"	s	file:
tagTgRestoreFlags	include/inchi/ichirvrs.h	/^typedef enum tagTgRestoreFlags {$/;"	g
tagTransposition	src/formats/libinchi/ichican2.c	/^typedef struct tagTransposition {$/;"	s	file:
tagTreeAtom	src/formats/libinchi/ichinorm.c	/^typedef struct tagTreeAtom {$/;"	s	file:
tagUnorderedPartition	src/formats/libinchi/ichican2.c	/^typedef struct tagUnorderedPartition {$/;"	s	file:
tagVertCapFlow	include/inchi/ichirvrs.h	/^typedef struct tagVertCapFlow {$/;"	s
tagVertexFlow	src/formats/libinchi/ichirvr1.c	/^typedef struct tagVertexFlow {$/;"	s	file:
tagXYZCoord	include/inchi/ichirvrs.h	/^typedef struct tagXYZCoord {$/;"	s
tagXmlEntityRef	src/formats/libinchi/ichiprt1.c	/^typedef struct tagXmlEntityRef$/;"	s	file:
tagid	src/formats/mmcifformat.cpp	/^   CIFDataName tagid;$/;"	m	struct:OpenBabel::CIFTagID	file:
tagkLeast	src/formats/libinchi/ichican2.c	/^typedef struct tagkLeast {$/;"	s	file:
tagname	src/formats/mmcifformat.cpp	/^   char  tagname[76];$/;"	m	struct:OpenBabel::CIFTagID	file:
tagtagCompareInchiMsgGroupID	include/inchi/inchicmp.h	/^typedef enum tagtagCompareInchiMsgGroupID {$/;"	g
tailLink_	include/openbabel/json/json.h	/^      ValueInternalLink *tailLink_;$/;"	m	class:Json::ValueInternalMap
target	include/OB-BGL/mol_graph.h	/^        vertex_descriptor target()     $/;"	f	class:boost::graph_traits::edge_descriptor
target	include/OB-BGL/mol_graph.h	/^  target( graph_traits< OpenBabel::OBMol >::edge_descriptor e,$/;"	f	namespace:boost
target	src/formats/smiley.h	/^    int target;$/;"	m	struct:Smiley::SmartsBond
targetNamespace	include/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;     \/* the target namespace *\/$/;"	m	struct:_xmlSchema
targetNamespace	include/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttribute
targetNamespace	include/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttributeGroup
targetNamespace	include/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaElement
targetNamespace	include/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaNotation
targetNamespace	include/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaType
tb	src/mcdlutil.cpp	/^    short int tb;$/;"	m	class:OpenBabel::TSingleBond	file:
tcond	src/chains.cpp	/^    union _ByteCode *tcond;$/;"	m	struct:OpenBabel::__anon71	typeref:union:OpenBabel::__anon71::_ByteCode	file:
tdp	include/inchi/ichidrp.h	/^    TBL_DRAW_PARMS  tdp;$/;"	m	struct:tagInputParms
tdp	include/inchi/ichidrp.h	/^    TBL_DRAW_PARMS *tdp;$/;"	m	struct:tagDrawParmsSettings
temperf	include/openbabel/math/erf.h	/^namespace temperf$/;"	n
text	include/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
tg_RestoreFlags	include/inchi/ichirvrs.h	/^    short tg_RestoreFlags; \/* Set (-) to first memberst of a t-group (usually, N) *\/ $/;"	m	struct:tagTCGroup
tg_num_H	include/inchi/ichirvrs.h	/^    short tg_num_H;      \/* number of H in a tautomeric group *\/$/;"	m	struct:tagTCGroup
tg_num_Minus	include/inchi/ichirvrs.h	/^    short tg_num_Minus;  \/* negative charge on t-group *\/$/;"	m	struct:tagTCGroup
tg_set_Minus	include/inchi/ichirvrs.h	/^    Vertex tg_set_Minus;  \/* the vertex+1 that has to have (-) *\/$/;"	m	struct:tagTCGroup
tgroup_charge	include/inchi/ichirvrs.h	/^    int      tgroup_charge;     \/* total charge of all t-groups *\/$/;"	m	struct:tagAllTCGroups
tgroup_num	include/inchi/ichitaut.h	/^    AT_NUMB  tgroup_num;  \/* ordering number of a tautomer group with isotopes > 0 *\/$/;"	m	struct:tagIsotopicTautomerGroup
theABINITFormat	src/formats/abinitformat.cpp	/^  ABINITFormat theABINITFormat;$/;"	m	namespace:OpenBabel	file:
theACRFormat	src/formats/acrformat.cpp	/^  ACRFormat theACRFormat;$/;"	m	namespace:OpenBabel	file:
theADFInputFormat	src/formats/adfformat.cpp	/^  ADFInputFormat theADFInputFormat;$/;"	m	namespace:OpenBabel	file:
theADFOutputFormat	src/formats/adfformat.cpp	/^  ADFOutputFormat theADFOutputFormat;$/;"	m	namespace:OpenBabel	file:
theASCIIFormat	src/formats/asciiformat.cpp	/^ASCIIFormat theASCIIFormat;$/;"	m	namespace:OpenBabel	file:
theAcesInputFormat	src/formats/acesformat.cpp	/^  AcesInputFormat theAcesInputFormat;$/;"	m	namespace:OpenBabel	file:
theAcesOutputFormat	src/formats/acesformat.cpp	/^  AcesOutputFormat theAcesOutputFormat;$/;"	m	namespace:OpenBabel	file:
theAlchemyFormat	src/formats/alchemyformat.cpp	/^  AlchemyFormat theAlchemyFormat;$/;"	m	namespace:OpenBabel	file:
theAmberPrepFormat	src/formats/amberformat.cpp	/^AmberPrepFormat theAmberPrepFormat;$/;"	m	namespace:OpenBabel	file:
theAoforceFormat	src/formats/aoforceformat.cpp	/^AoforceFormat theAoforceFormat;$/;"	m	namespace:OpenBabel	file:
theBGFFormat	src/formats/bgfformat.cpp	/^  BGFFormat theBGFFormat;$/;"	m	namespace:OpenBabel	file:
theBallStickFormat	src/formats/balstformat.cpp	/^  BallStickFormat theBallStickFormat;$/;"	m	namespace:OpenBabel	file:
theBoxFormat	src/formats/boxformat.cpp	/^BoxFormat theBoxFormat;$/;"	m	namespace:OpenBabel	file:
theCANSMIFormat	src/formats/smilesformat.cpp	/^  CANSMIFormat theCANSMIFormat;$/;"	m	namespace:OpenBabel	file:
theCARFormat	src/formats/carformat.cpp	/^  CARFormat theCARFormat;$/;"	m	namespace:OpenBabel	file:
theCASTEPFormat	src/formats/castepformat.cpp	/^  CASTEPFormat theCASTEPFormat;$/;"	m	namespace:OpenBabel	file:
theCCCFormat	src/formats/cccformat.cpp	/^CCCFormat theCCCFormat;$/;"	m	namespace:OpenBabel	file:
theCHEM3D1Format	src/formats/chem3dformat.cpp	/^  CHEM3D1Format theCHEM3D1Format;$/;"	m	namespace:OpenBabel	file:
theCHEM3D2Format	src/formats/chem3dformat.cpp	/^  CHEM3D2Format theCHEM3D2Format;$/;"	m	namespace:OpenBabel	file:
theCHTFormat	src/formats/chemtoolformat.cpp	/^  CHTFormat theCHTFormat;$/;"	m	namespace:OpenBabel	file:
theCIFFormat	src/formats/cifformat.cpp	/^  CIFFormat theCIFFormat;$/;"	m	namespace:OpenBabel	file:
theCMLFormat	src/formats/xml/cmlformat.cpp	/^  CMLFormat theCMLFormat;$/;"	m	namespace:OpenBabel	file:
theCMLReactFormat	src/formats/xml/cmlreactformat.cpp	/^CMLReactFormat theCMLReactFormat;$/;"	m	namespace:OpenBabel	file:
theCRK2DFormat	src/formats/crkformat.cpp	/^  CRK2DFormat theCRK2DFormat;$/;"	m	namespace:OpenBabel	file:
theCRK3DFormat	src/formats/crkformat.cpp	/^  CRK3DFormat theCRK3DFormat;$/;"	m	namespace:OpenBabel	file:
theCSRFormat	src/formats/CSRformat.cpp	/^  CSRFormat theCSRFormat;$/;"	m	namespace:OpenBabel	file:
theCSSRFormat	src/formats/cssrformat.cpp	/^  CSSRFormat theCSSRFormat;$/;"	m	namespace:OpenBabel	file:
theCacaoFormat	src/formats/cacaoformat.cpp	/^  CacaoFormat theCacaoFormat;$/;"	m	namespace:OpenBabel	file:
theCacaoInternalFormat	src/formats/cacaoformat.cpp	/^  CacaoInternalFormat theCacaoInternalFormat;$/;"	m	namespace:OpenBabel	file:
theCacheFormat	src/formats/cacheformat.cpp	/^  CacheFormat theCacheFormat;$/;"	m	namespace:OpenBabel	file:
theChemDoodleJSONFormat	src/formats/json/chemdoodlejsonformat.cpp	/^  ChemDoodleJSONFormat theChemDoodleJSONFormat;$/;"	m	namespace:OpenBabel	file:
theChemDrawBinaryXFormat	src/formats/chemdrawcdx.cpp	/^ ChemDrawBinaryXFormat theChemDrawBinaryXFormat;$/;"	m	namespace:OpenBabel	file:
theChemDrawFormat	src/formats/chemdrawct.cpp	/^  ChemDrawFormat theChemDrawFormat;$/;"	m	namespace:OpenBabel	file:
theChemDrawXMLFormat	src/formats/xml/cdxmlformat.cpp	/^ChemDrawXMLFormat theChemDrawXMLFormat;$/;"	m	namespace:OpenBabel	file:
theChemKinFormat	src/formats/chemkinformat.cpp	/^ChemKinFormat theChemKinFormat;$/;"	m	namespace:OpenBabel	file:
theConfabReport	src/formats/confabreport.cpp	/^ConfabReport theConfabReport;$/;"	m	namespace:OpenBabel	file:
theCopyFormat	src/formats/copyformat.cpp	/^CopyFormat theCopyFormat;$/;"	m	namespace:OpenBabel	file:
theCrystal09Format	src/formats/crystal09format.cpp	/^Crystal09Format theCrystal09Format;$/;"	m	namespace:OpenBabel	file:
theDALTONInputFormat	src/formats/daltonformat.cpp	/^  DALTONInputFormat theDALTONInputFormat;$/;"	m	namespace:OpenBabel	file:
theDALTONOutputFormat	src/formats/daltonformat.cpp	/^  DALTONOutputFormat theDALTONOutputFormat;$/;"	m	namespace:OpenBabel	file:
theDMolFormat	src/formats/dmolformat.cpp	/^  DMolFormat theDMolFormat;$/;"	m	namespace:OpenBabel	file:
theDlpolyConfigFormat	src/formats/dlpolyformat.cpp	/^  DlpolyConfigFormat theDlpolyConfigFormat;$/;"	m	namespace:OpenBabel	file:
theDlpolyHISTORYFormat	src/formats/dlpolyformat.cpp	/^  DlpolyHISTORYFormat theDlpolyHISTORYFormat;$/;"	m	namespace:OpenBabel	file:
theEXYZFormat	src/formats/exyzformat.cpp	/^  EXYZFormat theEXYZFormat;$/;"	m	namespace:OpenBabel	file:
theFASTAFormat	src/formats/fastaformat.cpp	/^  FASTAFormat theFASTAFormat;$/;"	m	namespace:OpenBabel	file:
theFCHKFormat	src/formats/fchkformat.cpp	/^  FCHKFormat theFCHKFormat;$/;"	m	namespace:OpenBabel	file:
theFEATFormat	src/formats/featformat.cpp	/^  FEATFormat theFEATFormat;$/;"	m	namespace:OpenBabel	file:
theFHIaimsFormat	src/formats/fhiaimsformat.cpp	/^FHIaimsFormat theFHIaimsFormat;$/;"	m	namespace:OpenBabel	file:
theFIXFormat	src/formats/smilesformat.cpp	/^  FIXFormat theFIXFormat;$/;"	m	namespace:OpenBabel	file:
theFPSFormat	src/formats/fpsformat.cpp	/^  FPSFormat theFPSFormat;$/;"	m	namespace:OpenBabel	file:
theFastSearchFormat	src/formats/fastsearchformat.cpp	/^  FastSearchFormat theFastSearchFormat;$/;"	m	namespace:OpenBabel	file:
theFenskeZmatFormat	src/formats/fhformat.cpp	/^FenskeZmatFormat theFenskeZmatFormat;$/;"	m	namespace:OpenBabel	file:
theFingerprintFormat	src/formats/fingerprintformat.cpp	/^  FingerprintFormat theFingerprintFormat;$/;"	m	namespace:OpenBabel	file:
theFreeFormFractionalFormat	src/formats/freefracformat.cpp	/^  FreeFormFractionalFormat theFreeFormFractionalFormat;$/;"	m	namespace:OpenBabel	file:
theGAMESSInputFormat	src/formats/gamessformat.cpp	/^  GAMESSInputFormat theGAMESSInputFormat;$/;"	m	namespace:OpenBabel	file:
theGAMESSOutputFormat	src/formats/gamessformat.cpp	/^  GAMESSOutputFormat theGAMESSOutputFormat;$/;"	m	namespace:OpenBabel	file:
theGAMESSUKInputFormat	src/formats/gamessukformat.cpp	/^  GAMESSUKInputFormat theGAMESSUKInputFormat;$/;"	m	namespace:OpenBabel	file:
theGAMESSUKOutputFormat	src/formats/gamessukformat.cpp	/^  GAMESSUKOutputFormat theGAMESSUKOutputFormat;$/;"	m	namespace:OpenBabel	file:
theGROFormat	src/formats/groformat.cpp	/^GROFormat theGROFormat;$/;"	m	namespace:OpenBabel	file:
theGROMOS96Format	src/formats/gromos96format.cpp	/^  GROMOS96Format theGROMOS96Format;$/;"	m	namespace:OpenBabel	file:
theGULPFormat	src/formats/gulpformat.cpp	/^  GULPFormat theGULPFormat;$/;"	m	namespace:OpenBabel	file:
theGaussianCubeFormat	src/formats/gausscubeformat.cpp	/^    OBGaussianCubeFormat theGaussianCubeFormat;$/;"	m	namespace:OpenBabel	file:
theGaussianInputFormat	src/formats/gaussformat.cpp	/^  GaussianInputFormat theGaussianInputFormat;$/;"	m	namespace:OpenBabel	file:
theGaussianOutputFormat	src/formats/gaussformat.cpp	/^  GaussianOutputFormat theGaussianOutputFormat;$/;"	m	namespace:OpenBabel	file:
theGaussianZMatrixInputFormat	src/formats/gausszmatformat.cpp	/^  GaussianZMatrixInputFormat theGaussianZMatrixInputFormat;$/;"	m	namespace:OpenBabel	file:
theGenBankFormat	src/formats/genbankformat.cpp	/^  GenBankFormat theGenBankFormat;$/;"	m	namespace:OpenBabel	file:
theGhemicalFormat	src/formats/ghemicalformat.cpp	/^  GhemicalFormat theGhemicalFormat;$/;"	m	namespace:OpenBabel	file:
theHINFormat	src/formats/hinformat.cpp	/^  HINFormat theHINFormat;$/;"	m	namespace:OpenBabel	file:
theInChICompareFormat	src/formats/inchiformat.cpp	/^InChICompareFormat theInChICompareFormat;$/;"	m	namespace:OpenBabel	file:
theInChIFormat	src/formats/inchiformat.cpp	/^InChIFormat theInChIFormat;$/;"	m	namespace:OpenBabel	file:
theInChIKeyFormat	src/formats/inchiformat.cpp	/^InChIKeyFormat theInChIKeyFormat;$/;"	m	namespace:OpenBabel	file:
theJaguarInputFormat	src/formats/jaguarformat.cpp	/^  JaguarInputFormat theJaguarInputFormat;$/;"	m	namespace:OpenBabel	file:
theJaguarOutputFormat	src/formats/jaguarformat.cpp	/^  JaguarOutputFormat theJaguarOutputFormat;$/;"	m	namespace:OpenBabel	file:
theLMPDATFormat	src/formats/lmpdatformat.cpp	/^  LMPDATFormat theLMPDATFormat;$/;"	m	namespace:OpenBabel	file:
theLpmdFormat	src/formats/lpmdformat.cpp	/^LpmdFormat theLpmdFormat;$/;"	m	namespace:OpenBabel	file:
theMCDLFormat	src/formats/MCDLformat.cpp	/^MCDLFormat theMCDLFormat;$/;"	m	namespace:OpenBabel	file:
theMDFFFormat	src/formats/mdffformat.cpp	/^  MDFFFormat theMDFFFormat;$/;"	m	namespace:OpenBabel	file:
theMNAFormat	src/formats/MNAformat.cpp	/^	MNAFormat theMNAFormat;$/;"	m	namespace:OpenBabel	file:
theMOL2Format	src/formats/mol2format.cpp	/^  MOL2Format theMOL2Format;$/;"	m	namespace:OpenBabel	file:
theMOLFormat	src/formats/mdlformat.cpp	/^  MOLFormat theMOLFormat;$/;"	m	namespace:OpenBabel	file:
theMOPACCARTFormat	src/formats/mopacformat.cpp	/^  MOPACCARTFormat theMOPACCARTFormat;$/;"	m	namespace:OpenBabel	file:
theMOPACFormat	src/formats/mopacformat.cpp	/^  MOPACFormat theMOPACFormat;$/;"	m	namespace:OpenBabel	file:
theMOPACINTFormat	src/formats/mopacformat.cpp	/^  MOPACINTFormat theMOPACINTFormat;$/;"	m	namespace:OpenBabel	file:
theMPDFormat	src/formats/mpdformat.cpp	/^  MPDFormat theMPDFormat;$/;"	m	namespace:OpenBabel	file:
theMPQCFormat	src/formats/mpqcformat.cpp	/^  MPQCFormat theMPQCFormat;$/;"	m	namespace:OpenBabel	file:
theMPQCInputFormat	src/formats/mpqcformat.cpp	/^  MPQCInputFormat theMPQCInputFormat;$/;"	m	namespace:OpenBabel	file:
theMSIFormat	src/formats/msiformat.cpp	/^  MSIFormat theMSIFormat;$/;"	m	namespace:OpenBabel	file:
theMacroModFormat	src/formats/mmodformat.cpp	/^  MacroModFormat theMacroModFormat;$/;"	m	namespace:OpenBabel	file:
theMolReportFormat	src/formats/molreport.cpp	/^  MolReportFormat theMolReportFormat;$/;"	m	namespace:OpenBabel	file:
theMolproInputFormat	src/formats/molproformat.cpp	/^  MolproInputFormat theMolproInputFormat;$/;"	m	namespace:OpenBabel	file:
theMolproOutputFormat	src/formats/molproformat.cpp	/^  MolproOutputFormat theMolproOutputFormat;$/;"	m	namespace:OpenBabel	file:
theNWChemInputFormat	src/formats/nwchemformat.cpp	/^  NWChemInputFormat theNWChemInputFormat;$/;"	m	namespace:OpenBabel	file:
theNWChemOutputFormat	src/formats/nwchemformat.cpp	/^  NWChemOutputFormat theNWChemOutputFormat;$/;"	m	namespace:OpenBabel	file:
theNulFormat	src/formats/nulformat.cpp	/^NulFormat theNulFormat;$/;"	m	namespace:OpenBabel	file:
theOBAPIInterface	src/formats/APIInterface.cpp	/^OBAPIInterface theOBAPIInterface;$/;"	m	namespace:OpenBabel	file:
theOpenDXCubeFormat	src/formats/opendxformat.cpp	/^    OBOpenDXCubeFormat theOpenDXCubeFormat;$/;"	m	namespace:OpenBabel	file:
theOrcaInputFormat	src/formats/orcaformat.cpp	/^  OrcaInputFormat theOrcaInputFormat;$/;"	m	namespace:OpenBabel	file:
theOrcaOutputFormat	src/formats/orcaformat.cpp	/^  OrcaOutputFormat theOrcaOutputFormat;$/;"	m	namespace:OpenBabel	file:
theOutputFormat	src/formats/outformat.cpp	/^  OutputFormat theOutputFormat;$/;"	m	namespace:OpenBabel	file:
thePCModelFormat	src/formats/pcmodelformat.cpp	/^  PCModelFormat thePCModelFormat;$/;"	m	namespace:OpenBabel	file:
thePDBFormat	src/formats/pdbformat.cpp	/^  PDBFormat thePDBFormat;$/;"	m	namespace:OpenBabel	file:
thePDBQTFormat	src/formats/pdbqtformat.cpp	/^  PDBQTFormat thePDBQTFormat;$/;"	m	namespace:OpenBabel	file:
thePNG2Format	src/formats/png2format.cpp	/^PNG2Format thePNG2Format;$/;"	m	namespace:OpenBabel	file:
thePNGFormat	src/formats/pngformat.cpp	/^PNGFormat thePNGFormat;$/;"	m	namespace:OpenBabel	file:
thePOSFormat	src/formats/posformat.cpp	/^  POSFormat thePOSFormat;$/;"	m	namespace:OpenBabel	file:
thePQRFormat	src/formats/pqrformat.cpp	/^  PQRFormat thePQRFormat;$/;"	m	namespace:OpenBabel	file:
thePQSFormat	src/formats/PQSformat.cpp	/^  PQSFormat thePQSFormat;$/;"	m	namespace:OpenBabel	file:
thePWscfFormat	src/formats/pwscfformat.cpp	/^  PWscfFormat thePWscfFormat;$/;"	m	namespace:OpenBabel	file:
thePainterFormat	src/formats/painterformat.cpp	/^PainterFormat thePainterFormat;$/;"	m	namespace:OpenBabel	file:
thePointCloudFormat	src/formats/pointcloudformat.cpp	/^  PointCloudFormat thePointCloudFormat;$/;"	m	namespace:OpenBabel	file:
thePovrayFormat	src/formats/povrayformat.cpp	/^  PovrayFormat thePovrayFormat;$/;"	m	namespace:OpenBabel	file:
thePubChemFormat	src/formats/xml/pubchem.cpp	/^PubChemFormat thePubChemFormat;$/;"	m	namespace:OpenBabel	file:
thePubChemJSONFormat	src/formats/json/pubchemjsonformat.cpp	/^  PubChemJSONFormat thePubChemJSONFormat;$/;"	m	namespace:OpenBabel	file:
theQChemInputFormat	src/formats/qchemformat.cpp	/^  QChemInputFormat theQChemInputFormat;$/;"	m	namespace:OpenBabel	file:
theQChemOutputFormat	src/formats/qchemformat.cpp	/^  QChemOutputFormat theQChemOutputFormat;$/;"	m	namespace:OpenBabel	file:
theRXNFormat	src/formats/rxnformat.cpp	/^RXNFormat theRXNFormat;$/;"	m	namespace:OpenBabel	file:
theReportFormat	src/formats/reportformat.cpp	/^  ReportFormat theReportFormat;$/;"	m	namespace:OpenBabel	file:
theSDFormat	src/formats/mdlformat.cpp	/^  SDFormat theSDFormat;$/;"	m	namespace:OpenBabel	file:
theSIESTAFormat	src/formats/siestaformat.cpp	/^  SIESTAFormat theSIESTAFormat;$/;"	m	namespace:OpenBabel	file:
theSMIFormat	src/formats/smilesformat.cpp	/^  SMIFormat theSMIFormat;$/;"	m	namespace:OpenBabel	file:
theSTLFormat	src/formats/stlformat.cpp	/^  STLFormat theSTLFormat;$/;"	m	namespace:OpenBabel	file:
theSVGFormat	src/formats/svgformat.cpp	/^SVGFormat theSVGFormat;$/;"	m	namespace:OpenBabel	file:
theShelXFormat	src/formats/shelxformat.cpp	/^  ShelXFormat theShelXFormat;$/;"	m	namespace:OpenBabel	file:
theSmiReactFormat	src/formats/rsmiformat.cpp	/^  SmiReactFormat theSmiReactFormat;$/;"	m	namespace:OpenBabel	file:
theSmileyFormat	src/formats/smileyformat.cpp	/^  SmileyFormat theSmileyFormat;$/;"	m	namespace:OpenBabel	file:
theTextFormat	src/formats/textformat.cpp	/^TextFormat theTextFormat;$/;"	m	namespace:OpenBabel	file:
theThermoFormat	src/formats/thermoformat.cpp	/^ThermoFormat theThermoFormat;$/;"	m	namespace:OpenBabel	file:
theTinkerFormat	src/formats/tinkerformat.cpp	/^  TinkerFormat theTinkerFormat;$/;"	m	namespace:OpenBabel	file:
theTitleFormat	src/formats/titleformat.cpp	/^TitleFormat theTitleFormat;$/;"	m	namespace:OpenBabel	file:
theTurbomoleFormat	src/formats/turbomoleformat.cpp	/^TurbomoleFormat theTurbomoleFormat;$/;"	m	namespace:OpenBabel	file:
theUniChemFormat	src/formats/unichemformat.cpp	/^UniChemFormat theUniChemFormat;$/;"	m	namespace:OpenBabel	file:
theVASPFormat	src/formats/vaspformat.cpp	/^  VASPFormat theVASPFormat;$/;"	m	namespace:OpenBabel	file:
theViewMolFormat	src/formats/viewmolformat.cpp	/^ViewMolFormat theViewMolFormat;$/;"	m	namespace:OpenBabel	file:
theXEDFormat	src/formats/xedformat.cpp	/^XEDFormat theXEDFormat;$/;"	m	namespace:OpenBabel	file:
theXMLFormat	src/formats/xml/xmlformat.cpp	/^XMLFormat theXMLFormat;$/;"	m	namespace:OpenBabel	file:
theXSFFormat	src/formats/xsfformat.cpp	/^  XSFFormat theXSFFormat;$/;"	m	namespace:OpenBabel	file:
theXTCFormat	src/formats/xtcformat.cpp	/^  XTCFormat theXTCFormat;$/;"	m	namespace:OpenBabel	file:
theXXXFormat	src/formats/exampleformat.cpp	/^XXXFormat theXXXFormat;$/;"	m	namespace:OpenBabel	file:
theXYZFormat	src/formats/xyzformat.cpp	/^  XYZFormat theXYZFormat;$/;"	m	namespace:OpenBabel	file:
theYOBFormat	src/formats/yasaraformat.cpp	/^YOBFormat theYOBFormat;$/;"	m	namespace:OpenBabel	file:
theZINDOFormat	src/formats/zindoformat.cpp	/^  ZINDOFormat theZINDOFormat;$/;"	m	namespace:OpenBabel	file:
the_only_doublet_neigh	src/formats/libinchi/strutil.c	/^int the_only_doublet_neigh(inp_ATOM *at, int i1, int *ineigh1, int *ineigh2)$/;"	f
themmCIFFormat	src/formats/mmcifformat.cpp	/^ mmCIFFormat themmCIFFormat;$/;"	m	namespace:OpenBabel	file:
theta	src/forcefields/forcefieldgaff.h	/^      double kth, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGaff
theta	src/forcefields/forcefieldghemical.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGhemical
theta	src/forcefields/forcefieldmmff94.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationMMFF94
theta	src/forcefields/forcefieldmmff94.h	/^      double theta, rab, rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
theta	src/forcefields/forcefielduff.h	/^      double ka, theta0, theta, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
theta0	src/forcefields/forcefieldgaff.h	/^      double kth, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGaff
theta0	src/forcefields/forcefieldghemical.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationGhemical
theta0	src/forcefields/forcefieldmmff94.h	/^      double ka, theta, theta0, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationMMFF94
theta0	src/forcefields/forcefieldmmff94.h	/^      double kbaABC, kbaCBA, theta0, rab0, rbc0, delta_theta, delta_rab, delta_rbc;$/;"	m	class:OpenBabel::OBFFStrBndCalculationMMFF94
theta0	src/forcefields/forcefielduff.h	/^      double ka, theta0, theta, delta;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
third	include/openbabel/obutil.h	/^      T3 third;$/;"	m	struct:OpenBabel::quad
third	include/openbabel/obutil.h	/^      T3 third;$/;"	m	struct:OpenBabel::triple
third_type	include/openbabel/obutil.h	/^      typedef T3 third_type;$/;"	t	struct:OpenBabel::quad
third_type	include/openbabel/obutil.h	/^      typedef T3 third_type;$/;"	t	struct:OpenBabel::triple
threeBondResolve	src/mcdlutil.cpp	/^  bool TSimpleMolecule::threeBondResolve(int an, int bondExcluded, double& xv, double& yv, neighbourlist* bkExt) {$/;"	f	class:OpenBabel::TSimpleMolecule
ti	include/inchi/ichirvrs.h	/^    T_GROUP_INFO  ti; \/* from original InChI[0] if Mobile-H from the beginning or later from InChI[1] if Fixed-H  *\/$/;"	m	struct:tagStructFromInChI
time	include/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
timeseed	src/formats/smilesformat.cpp	/^  static int timeseed = 0;$/;"	m	namespace:OpenBabel	file:
titan	src/mcdlutil.cpp	/^  const int titan[NTITANATOMS] ={22,40,72};$/;"	m	namespace:OpenBabel	file:
title	src/formats/dlpolyformat.cpp	/^    std::string title;$/;"	m	class:OpenBabel::DlpolyInputReader	file:
titleonproperty	src/formats/xml/cmlformat.cpp	/^    string titleonproperty;$/;"	m	class:OpenBabel::CMLFormat	file:
tmpNsList	include/libxml/xpath.h	/^    xmlNsPtr *tmpNsList;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext
tmpNsNr	include/libxml/xpath.h	/^    int tmpNsNr;			\/* number of namespace in scope *\/$/;"	m	struct:_xmlXPathContext
tni	include/inchi/ichitaut.h	/^    TNI       tni;$/;"	m	struct:tagTautomerGroupsInfo
toString	include/openbabel/tokenst.h	/^  std::string toString(T val)$/;"	f	namespace:OpenBabel
toStyledString	src/formats/json/jsoncpp.cpp	/^Value::toStyledString() const$/;"	f	class:Json::Value
to_at	include/inchi/ichicomn.h	/^    AT_RANK to_at[4]; \/* to_atom neighbors #s with equal mapping ranks *\/$/;"	m	struct:tagEquNeigh
to_idx	src/formats/fastaformat.cpp	/^    size_t from_idx, to_idx;$/;"	m	struct:OpenBabel::ResidueBondRecord	file:
to_string	src/formats/cifformat.cpp	/^  template <typename T> string to_string(T pNumber)$/;"	f	namespace:OpenBabel
toatom	src/formats/smilesformat.cpp	/^    OBAtom *toatom;       \/\/ second atom in SMILES order$/;"	m	class:OpenBabel::OBBondClosureInfo	file:
token	include/libxml/parser.h	/^    int                 token;        \/* next char look-ahead *\/    $/;"	m	struct:_xmlParserCtxt
tokenArrayBegin	include/openbabel/json/json.h	/^         tokenArrayBegin,$/;"	e	enum:Json::Reader::TokenType
tokenArrayEnd	include/openbabel/json/json.h	/^         tokenArrayEnd,$/;"	e	enum:Json::Reader::TokenType
tokenArraySeparator	include/openbabel/json/json.h	/^         tokenArraySeparator,$/;"	e	enum:Json::Reader::TokenType
tokenComment	include/openbabel/json/json.h	/^         tokenComment,$/;"	e	enum:Json::Reader::TokenType
tokenEndOfStream	include/openbabel/json/json.h	/^         tokenEndOfStream = 0,$/;"	e	enum:Json::Reader::TokenType
tokenError	include/openbabel/json/json.h	/^         tokenError$/;"	e	enum:Json::Reader::TokenType
tokenFalse	include/openbabel/json/json.h	/^         tokenFalse,$/;"	e	enum:Json::Reader::TokenType
tokenMemberSeparator	include/openbabel/json/json.h	/^         tokenMemberSeparator,$/;"	e	enum:Json::Reader::TokenType
tokenNull	include/openbabel/json/json.h	/^         tokenNull,$/;"	e	enum:Json::Reader::TokenType
tokenNumber	include/openbabel/json/json.h	/^         tokenNumber,$/;"	e	enum:Json::Reader::TokenType
tokenObjectBegin	include/openbabel/json/json.h	/^         tokenObjectBegin,$/;"	e	enum:Json::Reader::TokenType
tokenObjectEnd	include/openbabel/json/json.h	/^         tokenObjectEnd,$/;"	e	enum:Json::Reader::TokenType
tokenString	include/openbabel/json/json.h	/^         tokenString,$/;"	e	enum:Json::Reader::TokenType
tokenTrue	include/openbabel/json/json.h	/^         tokenTrue,$/;"	e	enum:Json::Reader::TokenType
token_	include/openbabel/json/json.h	/^         Token token_;$/;"	m	class:Json::Reader::ErrorInfo
tokenize	src/tokenst.cpp	/^  bool tokenize(std::vector<std::string> &vcr, const char *buf,$/;"	f	namespace:OpenBabel
tokenize	src/tokenst.cpp	/^  bool tokenize(std::vector<std::string> &vcr, std::string &s,$/;"	f	namespace:OpenBabel
tokens	src/formats/dlpolyformat.cpp	/^    std::vector<std::string> tokens; \/\/ list of lines and list of tokens on a line$/;"	m	class:OpenBabel::DlpolyInputReader	file:
tokens	src/formats/gamessukformat.cpp	/^    vector<string> tokens, geomList; \/\/ list of lines and list of tokens on a line$/;"	m	class:OpenBabel::GAMESSUKOutputFormat	file:
tokens	src/formats/lpmdformat.cpp	/^  std::vector<std::string> tokens;$/;"	m	class:OpenBabel::LpmdFormat	file:
top	src/mcdlutil.cpp	/^    double left,top,right,bottom;$/;"	m	class:OpenBabel::Rect	file:
topSizer	src/GUI/OBGUI.h	/^  wxBoxSizer *topSizer;$/;"	m	class:OBGUIFrame
top_node	include/openbabel/tree/tree.hh	/^				tree_node *top_node;$/;"	m	class:tree::fixed_depth_iterator
top_node	include/openbabel/tree/tree.hh	/^				tree_node *top_node;$/;"	m	class:tree::leaf_iterator
tor	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFOOPCalculationGaff
tor	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGaff
tor	src/forcefields/forcefieldghemical.h	/^      double V, s, n, tor;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
tor	src/forcefields/forcefieldmmff94.h	/^      double v1, v2, v3, tor, cosine;$/;"	m	class:OpenBabel::OBFFTorsionCalculationMMFF94
tor	src/forcefields/forcefielduff.h	/^      double V, tor, cosNPhi0;$/;"	m	class:OpenBabel::OBFFTorsionCalculationUFF
torsionunit	src/forcefields/forcefieldmm2.h	/^      double torsionunit;$/;"	m	class:OpenBabel::OBForceFieldMM2
tot_num_H1	include/inchi/strutil.h	/^    int tot_num_H1;$/;"	m	struct:tagInChICompareResults
tot_num_H2	include/inchi/strutil.h	/^    int tot_num_H2;$/;"	m	struct:tagInChICompareResults
tot_st_cap	include/inchi/ichi_bns.h	/^    int tot_st_cap;       \/* not used, only calculated *\/$/;"	m	struct:BalancedNetworkStructure
tot_st_flow	include/inchi/ichi_bns.h	/^    int tot_st_flow;      \/* not used, only calculated *\/$/;"	m	struct:BalancedNetworkStructure
total	include/inchi/sha2.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m	struct:__anon2
total_charge	include/inchi/ichirvrs.h	/^    int      total_charge;      \/* total charge of the component *\/$/;"	m	struct:tagAllTCGroups
total_electrons	include/inchi/ichirvrs.h	/^    int      total_electrons;   \/* total number of electrons on all atoms *\/$/;"	m	struct:tagAllTCGroups
total_electrons_metals	include/inchi/ichirvrs.h	/^    int      total_electrons_metals; \/* total number of electrons on unbonded metals *\/$/;"	m	struct:tagAllTCGroups
total_in	include/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	include/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
towards	include/openbabel/stereo/tetrahedral.h	/^        unsigned long towards; \/\/<! The viewing towards id.$/;"	m	union:OpenBabel::OBTetrahedralStereo::Config::__anon66
trans_texture	src/formats/povrayformat.cpp	/^    bool sky, sphere, trans_texture, checkerboard;$/;"	m	class:OpenBabel::PovrayFormat	file:
transform	src/pointgroup.cpp	/^      int *   transform ;     \/*   Correspondence table for the transformation         *\/$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
transform3d	include/openbabel/math/transform3d.h	/^      transform3d(const matrix3x3 &m, const vector3 &v): matrix3x3(m), vector3(v)$/;"	f	class:OpenBabel::transform3d
transform3d	include/openbabel/math/transform3d.h	/^      transform3d(double d[3][3], double t[3]): matrix3x3(d), vector3(t)$/;"	f	class:OpenBabel::transform3d
transform3d	include/openbabel/math/transform3d.h	/^      transform3d(double s): matrix3x3(s), vector3()$/;"	f	class:OpenBabel::transform3d
transform3d	include/openbabel/math/transform3d.h	/^      transform3d(vector3 row1,vector3 row2,vector3 row3,vector3 translation):$/;"	f	class:OpenBabel::transform3d
transform3d	include/openbabel/math/transform3d.h	/^      transform3d(void): matrix3x3(), vector3()$/;"	f	class:OpenBabel::transform3d
transform3d	include/openbabel/math/transform3d.h	/^  class OBAPI transform3d: private matrix3x3, private vector3$/;"	c	namespace:OpenBabel
transform3dIterator	include/openbabel/math/transform3d.h	/^  typedef std::list<transform3d*>::const_iterator transform3dIterator;$/;"	t	namespace:OpenBabel
transform_atom	src/pointgroup.cpp	/^      void    (*transform_atom)( struct _SYMMETRY_ELEMENT_ *el, OBAtom *from, OBAtom *to ) ;$/;"	m	struct:OpenBabel::PointGroupPrivate::_SYMMETRY_ELEMENT_	file:
transpose	src/math/matrix3x3.cpp	/^  matrix3x3 matrix3x3::transpose(void) const$/;"	f	class:OpenBabel::matrix3x3
traversal_category	include/OB-BGL/mol_graph.h	/^    typedef obmol_traversal_tag  traversal_category;$/;"	t	struct:boost::graph_traits
traversal_queue	include/openbabel/tree/tree.hh	/^				std::queue<tree_node *> traversal_queue;$/;"	m	class:tree::breadth_first_queued_iterator
tre_ATOM	src/formats/libinchi/ichinorm.c	/^} tre_ATOM;$/;"	t	typeref:struct:tagTreeAtom	file:
tree	include/inchi/ichicant.h	/^    AT_NUMB   *tree;$/;"	m	struct:tagCurTree
tree	include/libxml/tree.h	/^    xmlEnumerationPtr       tree;       \/* or the enumeration tree if any *\/$/;"	m	struct:_xmlAttribute
tree	include/openbabel/tree/tree.hh	/^class tree {$/;"	c
tree	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::tree()$/;"	f	class:tree
tree	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::tree(const T& x)$/;"	f	class:tree
tree	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::tree(const iterator_base& other)$/;"	f	class:tree
tree	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::tree(const tree<T, tree_node_allocator>& other)$/;"	f	class:tree
tree_edge	include/OB-BGL/verbose_visitors.h	/^    void tree_edge( edge e, const graph& g)$/;"	f	class:OpenBabel::OBVerboseBFSVisitor
tree_edge	include/OB-BGL/verbose_visitors.h	/^    void tree_edge(Edge u, const Graph& g)$/;"	f	class:OpenBabel::OBVerboseDFSVisitor
tree_hh_	include/openbabel/tree/tree.hh	65;"	d
tree_node	include/openbabel/tree/tree.hh	/^		typedef tree_node_<T> tree_node;$/;"	t	class:tree
tree_node_	include/openbabel/tree/tree.hh	/^class tree_node_ { \/\/ size: 5*4=20 bytes (on 32 bit arch), can be reduced by 8.$/;"	c
tree_util_hh_	include/openbabel/tree/tree_util.hh	24;"	d
trim_spaces	src/tokenst.cpp	/^  char *trim_spaces(char *string)$/;"	f	namespace:OpenBabel
triple	include/openbabel/obutil.h	/^        triple(const triple<U,V,W> &t):$/;"	f	struct:OpenBabel::triple
triple	include/openbabel/obutil.h	/^    struct triple$/;"	s	namespace:OpenBabel
triple	include/openbabel/obutil.h	/^    triple():$/;"	f	struct:OpenBabel::triple
triple	include/openbabel/obutil.h	/^    triple(const T1 &a, const T2 &b, const T3 &c):$/;"	f	struct:OpenBabel::triple
triple_prod	src/formats/libinchi/ichister.c	/^double triple_prod( double a[], double b[], double c[], double *sine_value )$/;"	f
triple_prod_and_min_abs_sine	src/formats/libinchi/ichister.c	/^double triple_prod_and_min_abs_sine(double at_coord[][3], double *min_sine)$/;"	f
triple_prod_and_min_abs_sine2	src/formats/libinchi/ichister.c	/^double triple_prod_and_min_abs_sine2(double at_coord[][3], double central_at_coord[], int bAddedExplicitNeighbor, double *min_sine, int *bAmbiguous)$/;"	f
triple_prod_char	src/formats/libinchi/ichister.c	/^int triple_prod_char( inp_ATOM *at, int at_1, int i_next_at_1, S_CHAR *z_dir1,$/;"	f
trivalent	src/mcdlutil.cpp	/^  const int trivalent[NTRIVALENTATOMS] ={21,31,39,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,81,89,90,91,92,93,94,95,96,97,98,99};$/;"	m	namespace:OpenBabel	file:
trueCount	src/stereo/perception.cpp	/^    unsigned int trueCount;$/;"	m	struct:OpenBabel::StereoRing	file:
tsort	include/inchi/ichicomn.h	61;"	d
tsort	src/formats/libinchi/ichicano.c	75;"	d	file:
tt	src/forcefields/forcefieldghemical.h	/^      int tt; \/\/torsiontype (TTIJKL)$/;"	m	class:OpenBabel::OBFFTorsionCalculationGhemical
tt	src/forcefields/forcefieldmmff94.h	/^      int tt; \/\/torsiontype (TTIJKL)$/;"	m	class:OpenBabel::OBFFTorsionCalculationMMFF94
tt	src/forcefields/forcefielduff.h	/^      double tt; \/\/torsiontype (i.e. b-c bond order)$/;"	m	class:OpenBabel::OBFFTorsionCalculationUFF
ttab	include/openbabel/mol.h	/^  EXTERN  OBTypeTable      ttab;$/;"	m	namespace:OpenBabel
ttab	src/data.cpp	/^  OBTypeTable      ttab;$/;"	m	namespace:OpenBabel	file:
twoAtomUnitVector	src/mcdlutil.cpp	/^  void TSimpleMolecule::twoAtomUnitVector(int na1, int na2, double & xv, double & yv, const std::vector<int>atomDefine) {$/;"	f	class:OpenBabel::TSimpleMolecule
txt	include/openbabel/text.h	/^  std::string txt;$/;"	m	class:OpenBabel::OBText
typ	include/openbabel/patty.h	/^    std::vector<std::string> typ;$/;"	m	class:OpenBabel::patty
typ	src/formats/libinchi/ichinorm.c	/^    char typ[DERIV_AT_LEN];$/;"	m	struct:tagDerivAttachment	file:
type	include/inchi/ichi_bns.h	/^  AT_NUMB     type;                        \/* 2, atom, t-group, or added atom: BNS_VERT_TYPE_TGROUP, etc. *\/$/;"	m	struct:BnsVertex
type	include/inchi/ichirvrs.h	/^    S_SHORT type;$/;"	m	struct:tagVertCapFlow
type	include/inchi/ichirvrs.h	/^    int type;    \/* group type *\/$/;"	m	struct:tagTCGroup
type	include/inchi/ichitaut.h	/^    S_CHAR    type;$/;"	m	struct:tagChargeCandidate
type	include/inchi/ichitaut.h	/^    S_CHAR    type;$/;"	m	struct:tagSaltChargeCandidate
type	include/inchi/inchi_api.h	/^    S_CHAR  type;           \/* inchi_StereoType0D *\/$/;"	m	struct:tagINCHIStereo0D
type	include/inchi/mode.h	/^    int type;$/;"	m	struct:tagOutputStream
type	include/inchi_api.h	/^    S_CHAR  type;           \/* inchi_StereoType0D *\/$/;"	m	struct:tagINCHIStereo0D
type	include/libxml/entities.h	/^    xmlElementType          type;       \/* XML_ENTITY_DECL, must be second ! *\/$/;"	m	struct:_xmlEntity
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypePtr type;\/* the linked type*\/$/;"	m	struct:_xmlSchemaTypeLink
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaAttribute
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaAttributeGroup
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaElement
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaFacet
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaNotation
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaType
type	include/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaWildcard
type	include/libxml/tree.h	/^    xmlElementContentType     type;	\/* PCDATA, ELEMENT, SEQ or OR *\/$/;"	m	struct:_xmlElementContent
type	include/libxml/tree.h	/^    xmlElementType          type;       \/* XML_ATTRIBUTE_DECL, must be second ! *\/$/;"	m	struct:_xmlAttribute
type	include/libxml/tree.h	/^    xmlElementType          type;       \/* XML_ELEMENT_DECL, must be second ! *\/$/;"	m	struct:_xmlElement
type	include/libxml/tree.h	/^    xmlElementType   type;	\/* type number, must be second ! *\/$/;"	m	struct:_xmlNode
type	include/libxml/tree.h	/^    xmlElementType   type;      \/* XML_ATTRIBUTE_NODE, must be second ! *\/$/;"	m	struct:_xmlAttr
type	include/libxml/tree.h	/^    xmlElementType  type;       \/* XML_DOCUMENT_NODE, must be second ! *\/$/;"	m	struct:_xmlDoc
type	include/libxml/tree.h	/^    xmlElementType  type;       \/* XML_DTD_NODE, must be second ! *\/$/;"	m	struct:_xmlDtd
type	include/libxml/tree.h	/^    xmlNsType      type;	\/* global or local *\/$/;"	m	struct:_xmlNs
type	include/libxml/xpath.h	/^    xmlXPathObjectType type;$/;"	m	struct:_xmlXPathObject
type	include/openbabel/forcefield.h	/^    int type, ia, ib, ic, id;$/;"	m	class:OpenBabel::OBFFConstraint
type	include/openbabel/generic.h	/^   RType               type;     \/\/!< linear, symmetric or asymmetric top$/;"	m	class:OpenBabel::OBRotationData
type	include/openbabel/parsmart.h	/^      int type;$/;"	m	struct:OpenBabel::_AtomExpr::__anon48
type	include/openbabel/parsmart.h	/^      int type;$/;"	m	struct:OpenBabel::_AtomExpr::__anon49
type	include/openbabel/parsmart.h	/^      int type;$/;"	m	struct:OpenBabel::_AtomExpr::__anon50
type	include/openbabel/parsmart.h	/^      int type;$/;"	m	struct:OpenBabel::_AtomExpr::__anon51
type	include/openbabel/parsmart.h	/^      int type;$/;"	m	struct:OpenBabel::_BondExpr::__anon52
type	include/openbabel/parsmart.h	/^      int type;$/;"	m	struct:OpenBabel::_BondExpr::__anon53
type	include/openbabel/parsmart.h	/^    int type;$/;"	m	union:OpenBabel::_AtomExpr
type	include/openbabel/parsmart.h	/^    int type;$/;"	m	union:OpenBabel::_BondExpr
type	include/openbabel/stereo/stereo.h	/^    OBStereo::Type type; \/\/!< the type for this stereogenic unit$/;"	m	struct:OpenBabel::OBStereoUnit
type	src/chains.cpp	/^    int type;$/;"	m	struct:OpenBabel::__anon70	file:
type	src/chains.cpp	/^    int type;$/;"	m	struct:OpenBabel::__anon71	file:
type	src/chains.cpp	/^    int type;$/;"	m	struct:OpenBabel::__anon72	file:
type	src/chains.cpp	/^    int type;$/;"	m	union:OpenBabel::_ByteCode	file:
type	src/formats/json/jsoncpp.cpp	/^Value::type() const$/;"	f	class:Json::Value
type	src/formats/libinchi/ichinorm.c	/^    AT_NUMB type : 6; \/* up to 2^6-1 = 63 = 0x0077 *\/$/;"	m	struct:tagAtTypeBitmap	file:
type	src/formats/libinchi/ichinorm.c	/^    char type; \/* 1 => sugar-like *\/$/;"	m	struct:tagRing2Chain	file:
type	src/formats/libinchi/ichirvr1.c	/^    int        type;$/;"	m	struct:tagVertexFlow	file:
type	src/formats/mmcifformat.cpp	/^     TokenType type;$/;"	m	struct:OpenBabel::CIFLexer::Token	file:
type	src/formats/smiley.h	/^      Type type() const$/;"	f	class:Smiley::Exception
type	src/formats/smiley.h	/^    int type;$/;"	m	struct:Smiley::SmartsAtomExpr
type	src/formats/smiley.h	/^    int type;$/;"	m	struct:Smiley::SmartsBondExpr
typeDecl	include/libxml/schemasInternals.h	/^    xmlHashTablePtr typeDecl;$/;"	m	struct:_xmlSchema
typeH	src/formats/libinchi/ichi_bns.c	/^    int typeH;     \/* atoms accessible to hydrogen atoms *\/$/;"	m	struct:tagProtonRemovalMaskAndType	file:
typeName	include/libxml/schemasInternals.h	/^    const xmlChar *typeName; \/* the local name of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute
typeNeg	src/formats/libinchi/ichi_bns.c	/^    int typeNeg; \/* atoms accessible to negative charges *\/$/;"	m	struct:tagProtonRemovalMaskAndType	file:
typeNs	include/libxml/schemasInternals.h	/^    const xmlChar *typeNs; \/* the ns URI of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute
typePos	src/formats/libinchi/ichi_bns.c	/^    int typePos;  \/* atoms accessible to positive charges *\/$/;"	m	struct:tagProtonRemovalMaskAndType	file:
type_	include/openbabel/json/json.h	/^         TokenType type_;$/;"	m	class:Json::Reader::Token
type_CN	include/inchi/ichi_bns.h	/^    AT_NUMB        type_CN;   \/* BNS_VERT_TYPE_C_GROUP | BNS_VERT_TYPE_C_NEGATIVE *\/$/;"	m	struct:BalancedNetworkStructure
type_T	include/inchi/ichi_bns.h	/^    AT_NUMB        type_T;    \/* BNS_VERT_TYPE_TGROUP *\/$/;"	m	struct:BalancedNetworkStructure
type_TACN	include/inchi/ichi_bns.h	/^    AT_NUMB        type_TACN; \/* BNS_VERT_TYPE_ACID: if non-zero than only for it path type_T-type_TACN-type_CN allowed *\/$/;"	m	struct:BalancedNetworkStructure
type_to_int	src/patty.cpp	/^  int patty::type_to_int(const string &type, bool failOnUndefined)$/;"	f	class:OpenBabel::patty
types	include/libxml/xpath.h	/^    xmlXPathTypePtr types;		\/* Array of defined types *\/$/;"	m	struct:_xmlXPathContext
uInt	include/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	include/zconf.h	51;"	d
uIntf	include/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	include/zconf.h	56;"	d
uLong	include/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	include/zconf.h	52;"	d
uLongf	include/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	include/zconf.h	57;"	d
uint16	src/formats/yasaraformat.cpp	/^typedef unsigned short uint16;$/;"	t	file:
uint16_t	src/formats/stlformat.cpp	/^  typedef unsigned __int16 uint16_t;$/;"	t	file:
uint32	src/formats/yasaraformat.cpp	/^typedef unsigned int uint32;$/;"	t	file:
uint32_t	include/openbabel/bitvec.h	/^  typedef unsigned uint32_t;$/;"	t
uint32le	src/formats/yasaraformat.cpp	/^unsigned int uint32le(uint32 value)$/;"	f	namespace:OpenBabel
uint32lemem	src/formats/yasaraformat.cpp	/^unsigned int uint32lemem(char *data)$/;"	f	namespace:OpenBabel
uint8_t	src/formats/stlformat.cpp	/^  typedef unsigned __int8 uint8_t;$/;"	t	file:
uintToString	src/formats/json/jsoncpp.cpp	/^uintToString( LargestUInt value, $/;"	f	namespace:Json
uintToStringBufferSize	src/formats/json/jsoncpp.cpp	/^   uintToStringBufferSize = 3*sizeof(LargestUInt)+1 $/;"	e	enum:Json::__anon78	file:
uintValue	include/openbabel/json/json.h	/^      uintValue,     \/\/\/< unsigned integer value$/;"	e	enum:Json::ValueType
uint_	include/openbabel/json/json.h	/^         LargestUInt uint_;$/;"	m	union:Json::Value::ValueHolder
ul	include/inchi/ichicant.h	/^    unsigned long  ul;$/;"	m	union:tagSplitLong
ulCanonTime	include/inchi/ichi.h	/^    unsigned long ulCanonTime;$/;"	m	struct:tagINChI_Aux
ulCurTime	src/formats/libinchi/runichi.c	/^    unsigned long  ulMaxTime, ulCurTime, ulCurTime0, ulCurTime1;$/;"	m	struct:tagRenumbData	file:
ulCurTime0	src/formats/libinchi/runichi.c	/^    unsigned long  ulMaxTime, ulCurTime, ulCurTime0, ulCurTime1;$/;"	m	struct:tagRenumbData	file:
ulCurTime1	src/formats/libinchi/runichi.c	/^    unsigned long  ulMaxTime, ulCurTime, ulCurTime0, ulCurTime1;$/;"	m	struct:tagRenumbData	file:
ulCurTimeCanon	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm, ulCurTimeCanon, ulMaxTimeNorm, ulMaxTimeCanon;$/;"	m	struct:tagRenumbData	file:
ulCurTimeCanon0	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm0, ulCurTimeCanon0, ulCurTimeNorm1, ulCurTimeCanon1;$/;"	m	struct:tagRenumbData	file:
ulCurTimeCanon1	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm0, ulCurTimeCanon0, ulCurTimeNorm1, ulCurTimeCanon1;$/;"	m	struct:tagRenumbData	file:
ulCurTimeNorm	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm, ulCurTimeCanon, ulMaxTimeNorm, ulMaxTimeCanon;$/;"	m	struct:tagRenumbData	file:
ulCurTimeNorm0	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm0, ulCurTimeCanon0, ulCurTimeNorm1, ulCurTimeCanon1;$/;"	m	struct:tagRenumbData	file:
ulCurTimeNorm1	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm0, ulCurTimeCanon0, ulCurTimeNorm1, ulCurTimeCanon1;$/;"	m	struct:tagRenumbData	file:
ulDisplTime	include/inchi/ichidrp.h	/^    long            ulDisplTime; \/* not used: max structure or question display time *\/$/;"	m	struct:tagInputParms
ulDisplTime	include/inchi/ichidrp.h	/^    unsigned long  ulDisplTime;$/;"	m	struct:tagDrawParmsSettings
ulMaxTime	src/formats/libinchi/runichi.c	/^    unsigned long  ulMaxTime, ulCurTime, ulCurTime0, ulCurTime1;$/;"	m	struct:tagRenumbData	file:
ulMaxTimeCanon	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm, ulCurTimeCanon, ulMaxTimeNorm, ulMaxTimeCanon;$/;"	m	struct:tagRenumbData	file:
ulMaxTimeNorm	src/formats/libinchi/runichi.c	/^    unsigned long  ulCurTimeNorm, ulCurTimeCanon, ulMaxTimeNorm, ulMaxTimeCanon;$/;"	m	struct:tagRenumbData	file:
ulNormTime	include/inchi/ichi.h	/^    unsigned long ulNormTime;$/;"	m	struct:tagINChI_Aux
ulStructTime	include/inchi/ichimain.h	/^    unsigned long ulStructTime;$/;"	m	struct:tagStructData
ulTimeOutTime	include/inchi/ichicant.h	/^    struct tagInchiTime *ulTimeOutTime;  \/* timeout *\/$/;"	m	struct:tagCanonData	typeref:struct:tagCanonData::tagInchiTime
ulTimeOutTime	include/inchi/ichicant.h	/^    struct tagInchiTime *ulTimeOutTime;$/;"	m	struct:tagBaseCanonNumbering	typeref:struct:tagBaseCanonNumbering::tagInchiTime
ulTimeOutTime	include/inchi/ichicant.h	/^    struct tagInchiTime *ulTimeOutTime;$/;"	m	struct:tagCanonStat	typeref:struct:tagCanonStat::tagInchiTime
ulTotalProcessingTime	include/inchi/inchi_dll_a.h	/^    unsigned long   ulTotalProcessingTime;$/;"	m	struct:tagINCHIGEN_CONTROL
un_mark_atoms_cFlags	src/formats/libinchi/ichinorm.c	/^int un_mark_atoms_cFlags( inp_ATOM *at, int start, int num, char cFlags, char cInvFlags )$/;"	f
unary	src/formats/smiley.h	/^      } unary;$/;"	m	union:Smiley::SmartsAtomExpr::__anon80	typeref:struct:Smiley::SmartsAtomExpr::__anon80::__anon83
unary	src/formats/smiley.h	/^    } unary;$/;"	m	struct:Smiley::SmartsBondExpr	typeref:struct:Smiley::SmartsBondExpr::__anon85
uncompress	include/zconf.h	40;"	d
underflow	include/openbabel/lineend.h	/^  FilteringInputStreambuf< Extractor >::underflow()$/;"	f	class:OpenBabel::FilteringInputStreambuf
underflow	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::underflow(void)$/;"	f	class:basic_unzip_streambuf
underivatize	src/formats/libinchi/ichinorm.c	/^int underivatize( ORIG_ATOM_DATA *orig_inp_data )$/;"	f
unindent	src/formats/json/customwriter.cpp	/^CustomWriter::unindent()$/;"	f	class:Json::CustomWriter
unindent	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::unindent()$/;"	f	class:Json::StyledStreamWriter
unindent	src/formats/json/jsoncpp.cpp	/^StyledWriter::unindent()$/;"	f	class:Json::StyledWriter
unique_generator	include/openbabel/conformersearch.h	/^      OBRandom unique_generator; \/\/!< A unique random number generator for the whole algo$/;"	m	class:OpenBabel::OBConformerSearch
unitVector	src/mcdlutil.cpp	/^  void TSimpleMolecule::unitVector(int aN, double& xV, double& yV) {$/;"	f	class:OpenBabel::TSimpleMolecule
unitVectorCoincident	src/mcdlutil.cpp	/^  bool TSimpleMolecule::unitVectorCoincident(int aN, double xV, double yV) {$/;"	f	class:OpenBabel::TSimpleMolecule
unit_Theta	src/formats/fastaformat.cpp	/^    double unit_Theta; \/\/ angle in radians between each unit$/;"	m	struct:OpenBabel::HelixParameters	file:
unit_X	src/formats/fastaformat.cpp	/^    double unit_X; \/\/ distance along the x-axis added for each unit$/;"	m	struct:OpenBabel::HelixParameters	file:
unknown	src/formats/json/jsoncpp.cpp	/^static const unsigned int unknown = (unsigned)-1;$/;"	m	namespace:Json	file:
unpack_iso_sort_key	src/formats/libinchi/ichiisot.c	/^int unpack_iso_sort_key( AT_ISO_SORT_KEY iso_sort_key, S_CHAR *num_1H, S_CHAR *num_2H, S_CHAR *num_3H, S_CHAR *iso_atw_diff )$/;"	f
unparsedEntityDecl	include/libxml/parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandler
unparsedEntityDecl	include/libxml/parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandlerV1
unparsedEntityDeclSAXFunc	include/libxml/parser.h	/^typedef void (*unparsedEntityDeclSAXFunc)(void *ctx,$/;"	t
unread_CIFCatName	src/formats/mmcifformat.cpp	/^     unread_CIFCatName,$/;"	e	enum:OpenBabel::CIFTagID::CIFCatName	file:
unread_CIFDataName	src/formats/mmcifformat.cpp	/^     unread_CIFDataName,$/;"	e	enum:OpenBabel::CIFTagID::CIFDataName	file:
unrestricted	src/formats/adfformat.cpp	/^        bool unrestricted;$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
unzip_from_stream	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::unzip_from_stream(char_type* buffer,$/;"	f	class:basic_unzip_streambuf
upDown	src/formats/smileyformat.cpp	/^    std::vector<UpDown> upDown;$/;"	m	struct:OpenBabel::OpenBabelCallback	file:
updown	src/formats/smilesformat.cpp	/^      char updown;$/;"	m	struct:OpenBabel::OBSmilesParser::ExternalBond	file:
updown	src/formats/smilesformat.cpp	/^      char updown;$/;"	m	struct:OpenBabel::OBSmilesParser::RingClosureBond	file:
updown	src/formats/smilesformat.cpp	/^      vector<char> updown;$/;"	m	struct:OpenBabel::OBSmilesParser::StereoRingBond	file:
us	include/inchi/ichicant.h	/^    U_SHORT        us[2];$/;"	m	union:tagSplitLong
use	include/libxml/tree.h	/^    unsigned int use;		\/* The buffer size used *\/$/;"	m	struct:_xmlBuffer
use_sharing	include/openbabel/conformersearch.h	/^      bool use_sharing;		\/\/!< Wether to use sharing or not.$/;"	m	class:OpenBabel::OBConformerSearch
usedFlag	src/formats/chemdrawcdx.cpp	/^  static const unsigned usedFlag = 1<<30;$/;"	m	class:OpenBabel::ChemDrawBinaryXFormat	file:
used_	src/formats/json/jsoncpp.cpp	/^      AllocatedType *used_;$/;"	m	struct:Json::BatchAllocator::BatchInfo	file:
user	include/libxml/uri.h	/^    char *user;		\/* the user part *\/$/;"	m	struct:_xmlURI
user	include/libxml/xpath.h	/^    void *user;				\/* function to free *\/$/;"	m	struct:_xmlXPathContext
user	include/libxml/xpath.h	/^    void *user;$/;"	m	struct:_xmlXPathObject
user2	include/libxml/xpath.h	/^    void *user2;$/;"	m	struct:_xmlXPathObject
userData	include/libxml/parser.h	/^    void            *userData;        \/* For SAX interface only, used by DOM build *\/$/;"	m	struct:_xmlParserCtxt
userData	include/libxml/valid.h	/^    void *userData;			\/* user specific data block *\/$/;"	m	struct:_xmlValidCtxt
userData	include/libxml/xpath.h	/^    void *userData;                     \/* user specific data block *\/$/;"	m	struct:_xmlXPathContext
userInput	include/openbabel/base.h	/^    userInput,           \/\/!< Added by the user$/;"	e	enum:OpenBabel::DataOrigin
v	include/inchi/ichirvrs.h	/^    VCF v;$/;"	m	struct:tagChargeNodes
v	include/openbabel/spectrophore.h	/^            double v[N_PROPERTIES];$/;"	m	struct:OpenBabel::OBSpectrophore::__anon64
v	src/fingerprints/fingerecfp.cpp	/^  std::vector<unsigned int> v;$/;"	m	class:OpenBabel::fingerprintECFP	file:
v	src/formats/libinchi/ichirvr1.c	/^    Vertex     v;$/;"	m	struct:tagVertexFlow	file:
v1	include/inchi/ichi_bns.h	/^    Vertex     v1;$/;"	m	struct:tagBNS_FLOW_CHANGES
v1	src/forcefields/forcefieldmmff94.h	/^      double v1, v2, v3, tor, cosine;$/;"	m	class:OpenBabel::OBFFTorsionCalculationMMFF94
v2	include/inchi/ichi_bns.h	/^    Vertex     v2;$/;"	m	struct:tagBNS_FLOW_CHANGES
v2	src/forcefields/forcefieldmmff94.h	/^      double v1, v2, v3, tor, cosine;$/;"	m	class:OpenBabel::OBFFTorsionCalculationMMFF94
v3	src/forcefields/forcefieldmmff94.h	/^      double v1, v2, v3, tor, cosine;$/;"	m	class:OpenBabel::OBFFTorsionCalculationMMFF94
vABParityUnknown	include/inchi/inchi_dll_a.h	/^    int vABParityUnknown; \/* actual value of constant for unknown parity (2009-12-10 ) *\/$/;"	m	struct:tagCOMPONENT_TREAT_INFO
vNewVertex	src/formats/libinchi/ichi_bns.c	/^    Vertex     vNewVertex[2];$/;"	m	struct:tagAltPathChanges	file:
vOldVert	src/formats/libinchi/ichi_bns.c	/^    Vertex     vOldVert[2];$/;"	m	struct:tagAltPathChanges	file:
val	include/inchi/ichicant.h	/^    AT_NUMB         val[AT_INV_LENGTH];$/;"	m	struct:tagAtomInvariant2
val	include/libxml/schemasInternals.h	/^    xmlSchemaValPtr val;$/;"	m	struct:_xmlSchemaFacet
valence	include/inchi/extr_ct.h	/^    S_CHAR valence;$/;"	m	struct:tagAtom
valence	include/inchi/ichicant.h	/^     int valence;$/;"	m	struct:tagAtData_dch
valence	include/inchi/ichirvrs.h	/^    S_CHAR  valence;$/;"	m	struct:tagVertCapFlow
valence	include/inchi/inchi_api.h	/^    S_CHAR        valence;                  \/* number of bonds = number of neighbors not greater than MAXVAL *\/$/;"	m	struct:tagNormAtom
valence	include/inchi/inpdef.h	/^    S_CHAR        valence;                 \/* number of bonds = number of neighbors *\/$/;"	m	struct:tagInputAtom
valence	include/inchi_api.h	/^    S_CHAR        valence;                  \/* number of bonds = number of neighbors not greater than MAXVAL *\/$/;"	m	struct:tagNormAtom
valence	src/formats/libinchi/ichinorm.c	/^    S_CHAR     valence;                 \/* number of bonds = number of neighbors *\/$/;"	m	struct:tagTreeAtom	file:
valenceAltBns	src/formats/libinchi/ichi_bns.c	9259;"	d	file:
valencyConversion	src/mcdlutil.cpp	/^  int TSingleAtom::valencyConversion() {$/;"	f	class:OpenBabel::TSingleAtom
valid	include/libxml/parser.h	/^    int                 valid;        \/* is the document valid *\/$/;"	m	struct:_xmlParserCtxt
valid	include/libxml/valid.h	/^    int                  valid;       \/* temporary validity check result *\/$/;"	m	struct:_xmlValidCtxt
valid	src/formats/adfformat.cpp	/^        bool valid;$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
validate	include/libxml/parser.h	/^    int              validate;        \/* shall we try to validate ? *\/$/;"	m	struct:_xmlParserCtxt
validate_number	src/formats/fchkformat.cpp	/^  bool FCHKFormat::validate_number(const int num,$/;"	f	class:OpenBabel::FCHKFormat
validate_section	src/formats/fchkformat.cpp	/^  bool FCHKFormat::validate_section(const char * const line,$/;"	f	class:OpenBabel::FCHKFormat
value	include/libxml/HTMLparser.h	/^    unsigned int value;	\/* the UNICODE value for the character *\/$/;"	m	struct:_htmlEntityDesc
value	include/libxml/schemasInternals.h	/^    const xmlChar *value;$/;"	m	struct:_xmlSchemaElement
value	include/libxml/schemasInternals.h	/^    const xmlChar *value;$/;"	m	struct:_xmlSchemaFacet
value	include/libxml/schemasInternals.h	/^    const xmlChar *value;\/* the value *\/$/;"	m	struct:_xmlSchemaWildcardNs
value	include/libxml/tree.h	/^    const xmlChar     *value;	\/* The Ref name *\/$/;"	m	struct:_xmlRef
value	include/libxml/tree.h	/^    const xmlChar    *value;	\/* The ID name *\/$/;"	m	struct:_xmlID
value	include/libxml/xpath.h	/^    xmlXPathObjectPtr     value;	\/* the current value *\/$/;"	m	struct:_xmlXPathParserContext
value	include/libxml/xpath.h	/^    xmlXPathObjectPtr value;		\/* the value *\/$/;"	m	struct:_xmlXPathVariable
value	include/openbabel/parsmart.h	/^      int value;$/;"	m	struct:OpenBabel::_AtomExpr::__anon48
value	include/openbabel/spectrophore.h	/^            int value[12];$/;"	m	struct:OpenBabel::OBSpectrophore::__anon63
value	src/chains.cpp	/^    int value;$/;"	m	struct:OpenBabel::__anon71	file:
value	src/formats/smiley.h	/^        int value;$/;"	m	struct:Smiley::SmartsAtomExpr::__anon80::__anon81
value	src/ops/changecell.cpp	/^    double value;$/;"	m	class:OpenBabel::OpChangeCell::vc_val	file:
valueMax	include/libxml/xpath.h	/^    int                valueMax;	\/* max number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext
valueNr	include/libxml/xpath.h	/^    int                 valueNr;	\/* number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext
valueTab	include/libxml/xpath.h	/^    xmlXPathObjectPtr *valueTab;	\/* stack of values *\/$/;"	m	struct:_xmlXPathParserContext
valueToQuotedString	src/formats/json/jsoncpp.cpp	/^std::string valueToQuotedString( const char *value )$/;"	f	namespace:Json
valueToString	src/formats/json/jsoncpp.cpp	/^std::string valueToString( Int value )$/;"	f	namespace:Json
valueToString	src/formats/json/jsoncpp.cpp	/^std::string valueToString( LargestInt value )$/;"	f	namespace:Json
valueToString	src/formats/json/jsoncpp.cpp	/^std::string valueToString( LargestUInt value )$/;"	f	namespace:Json
valueToString	src/formats/json/jsoncpp.cpp	/^std::string valueToString( UInt value )$/;"	f	namespace:Json
valueToString	src/formats/json/jsoncpp.cpp	/^std::string valueToString( bool value )$/;"	f	namespace:Json
valueToString	src/formats/json/jsoncpp.cpp	/^std::string valueToString( double value )$/;"	f	namespace:Json
value_	include/openbabel/json/json.h	/^      } value_;$/;"	m	class:Json::Value	typeref:union:Json::Value::ValueHolder
value_type	include/OB-BGL/mol_graph.h	/^        typedef OpenBabel::OBAtom*  value_type;$/;"	t	class:boost::graph_traits::adjacent_iterator
value_type	include/OB-BGL/mol_graph.h	/^        typedef edge_descriptor value_type;$/;"	t	class:boost::graph_traits::out_edge_iterator
value_type	include/OB-BGL/mol_graph.h	/^    typedef value value_type;$/;"	t	class:OBAtomMap
value_type	include/OB-BGL/mol_graph.h	/^    typedef value value_type;$/;"	t	class:OBBondMap
value_type	include/openbabel/tree/tree.hh	/^				typedef T                               value_type;$/;"	t	class:tree::iterator_base
value_type	include/openbabel/tree/tree.hh	/^		typedef T value_type;$/;"	t	class:tree
vanadium	src/mcdlutil.cpp	/^  const int vanadium[NVANADIUMATOMS] ={23,41,73};$/;"	m	namespace:OpenBabel	file:
varHash	include/libxml/xpath.h	/^    xmlHashTablePtr varHash;		\/* Hash table of defined variables *\/$/;"	m	struct:_xmlXPathContext
varLookupData	include/libxml/xpath.h	/^    void *varLookupData;		\/* variable lookup data *\/$/;"	m	struct:_xmlXPathContext
varLookupFunc	include/libxml/xpath.h	/^    xmlXPathVariableLookupFunc varLookupFunc;\/* variable lookup func *\/$/;"	m	struct:_xmlXPathContext
variables	src/formats/gamessukformat.cpp	/^    map<string, double> variables; \/\/ map from variable name to value$/;"	m	class:OpenBabel::GAMESSUKFormat	file:
vasnprintf	src/snprintf.c	/^int vasnprintf (char **ptr, size_t str_m, const char *fmt, va_list ap)$/;"	f
vasprintf	src/snprintf.c	/^int vasprintf(char **ptr, const char *fmt, va_list ap)$/;"	f
vaweBond	src/mcdlutil.cpp	/^  void TSimpleMolecule::vaweBond(int bondN, neighbourlist *bk,$/;"	f	class:OpenBabel::TSimpleMolecule
vb	include/openbabel/parsmart.h	/^    int vb;$/;"	m	struct:OpenBabel::__anon55
vc_val	src/ops/changecell.cpp	/^    vc_val(): mult(false), value(0.0) {};$/;"	f	class:OpenBabel::OpChangeCell::vc_val
vc_val	src/ops/changecell.cpp	/^  class vc_val$/;"	c	class:OpenBabel::OpChangeCell	file:
vctxt	include/libxml/parser.h	/^    xmlValidCtxt        vctxt;        \/* The validity context *\/$/;"	m	struct:_xmlParserCtxt
vec	src/ops/opisomorph.h	/^  std::vector<std::string> vec; \/\/parsed parameter text$/;"	m	class:OpenBabel::OpNewS
vector3	include/openbabel/math/vector3.h	/^    vector3 (const double inX=0.0, const double inY=0.0, const double inZ=0.0):$/;"	f	class:OpenBabel::vector3
vector3	include/openbabel/math/vector3.h	/^    vector3 (const vector3& v):$/;"	f	class:OpenBabel::vector3
vector3	include/openbabel/math/vector3.h	/^    vector3 (double inV[3]):$/;"	f	class:OpenBabel::vector3
vector3	include/openbabel/math/vector3.h	/^  class OBAPI vector3$/;"	c	namespace:OpenBabel
vectorAngle	src/math/vector3.cpp	/^  OBAPI double vectorAngle ( const vector3& v1, const vector3& v2 )$/;"	f	namespace:OpenBabel
veloci	src/formats/lpmdformat.cpp	/^  std::vector< vector3 > veloci;$/;"	m	class:OpenBabel::LpmdFormat	file:
verbose	include/openbabel/grid.h	/^    bool verbose;$/;"	m	class:OpenBabel::OBScoreGrid
verbose	src/ops/opconfab.cpp	/^      bool verbose;$/;"	m	class:OpenBabel::OpConfab	file:
verbose	src/pointgroup.cpp	/^    int                    verbose               ;$/;"	m	class:OpenBabel::PointGroupPrivate	file:
version	include/libxml/parser.h	/^    const xmlChar    *version;        \/* the XML version string *\/$/;"	m	struct:_xmlParserCtxt
version	include/libxml/parser.h	/^    const xmlChar *version;           \/* the version string for entity *\/$/;"	m	struct:_xmlParserInput
version	include/libxml/schemasInternals.h	/^    const xmlChar *version;$/;"	m	struct:_xmlSchema
version	include/libxml/tree.h	/^    const xmlChar  *version;	\/* the XML version string *\/$/;"	m	struct:_xmlDoc
vert	include/inchi/ichi_bns.h	/^    BNS_VERTEX    *vert;  \/* vertices *\/$/;"	m	struct:BalancedNetworkStructure
vertex_descriptor	include/OB-BGL/mol_graph.h	/^    typedef OpenBabel::OBAtom*   vertex_descriptor;$/;"	t	struct:boost::graph_traits
vertex_iterator	include/OB-BGL/mol_graph.h	/^    typedef OpenBabel::OBAtomIterator  vertex_iterator;$/;"	t	struct:boost::graph_traits
vertices	include/OB-BGL/mol_graph.h	/^  vertices( const OpenBabel::OBMol& m )$/;"	f	namespace:boost
vertices_size_type	include/OB-BGL/mol_graph.h	/^    typedef int   vertices_size_type;$/;"	t	struct:boost::graph_traits
vic	src/formats/gamessukformat.cpp	/^    vector<OBInternalCoord*> vic; \/\/ Holds lists of internal coordinates$/;"	m	class:OpenBabel::GAMESSUKFormat	file:
view	include/openbabel/stereo/bindings.h	/^    OBStereo::View view;$/;"	m	struct:OpenBabel::OBTetrahedralConfig
view	include/openbabel/stereo/tetrahedral.h	/^      OBStereo::View view; \/\/!< Specify viewing from or towards the atom with @p from\/towards id.$/;"	m	struct:OpenBabel::OBTetrahedralStereo::Config
viewMenu	src/GUI/OBGUI.h	/^  wxMenu* viewMenu;$/;"	m	class:OBGUIFrame
visit	include/openbabel/parsmart.h	/^    int visit;$/;"	m	struct:OpenBabel::__anon54
visit	include/openbabel/parsmart.h	/^    int visit;$/;"	m	struct:OpenBabel::__anon55
visitRing	src/ring.cpp	/^  void visitRing(OBMol *mol, OBRing *ring, std::vector<OBRing*> &rlist, std::vector<OBRing*> &rignored)$/;"	f	namespace:OpenBabel
visits	include/openbabel/chains.h	/^      std::vector<bool>           visits;   \/\/!< mark visits to prevent looping$/;"	m	class:OpenBabel::OBChainsParser
vn_half	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFOOPCalculationGaff
vn_half	src/forcefields/forcefieldgaff.h	/^    double tor, vn_half, gamma, n;$/;"	m	class:OpenBabel::OBFFTorsionCalculationGaff
voidp	include/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	include/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	include/zconf.h	59;"	d
voidpc	include/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	include/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpf	include/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	include/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	include/zconf.h	58;"	d
volatiles	include/libxml/schemasInternals.h	/^    void *volatiles; \/* Misc. helper items (e.g. reference items) *\/$/;"	m	struct:_xmlSchema
vs	src/formats/mdlformat.cpp	/^      vector<string> vs;$/;"	m	class:OpenBabel::MDLFormat	file:
vscores	include/openbabel/conformersearch.h	/^      std::vector<double> vscores;                    \/\/!< Current population score vector$/;"	m	class:OpenBabel::OBConformerSearch
vshared_fitnes	include/openbabel/conformersearch.h	/^      std::vector<double> vshared_fitnes;             \/\/!< Current population shared fitness vector$/;"	m	class:OpenBabel::OBConformerSearch
vsnprintf	src/snprintf.h	18;"	d
vstate	include/libxml/valid.h	/^    xmlValidState     *vstate;        \/* current state *\/$/;"	m	struct:_xmlValidCtxt
vstateMax	include/libxml/valid.h	/^    int                vstateMax;     \/* Max depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt
vstateNr	include/libxml/valid.h	/^    int                vstateNr;      \/* Depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt
vstateTab	include/libxml/valid.h	/^    xmlValidState     *vstateTab;     \/* array of validation states *\/$/;"	m	struct:_xmlValidCtxt
vt_group_info	include/inchi/inchi_dll_a.h	/^    T_GROUP_INFO vt_group_info;$/;"	m	struct:tagCOMPONENT_TREAT_INFO
vt_group_info_orig	include/inchi/inchi_dll_a.h	/^    T_GROUP_INFO vt_group_info_orig;  $/;"	m	struct:tagCOMPONENT_TREAT_INFO
w	src/mcdlutil.cpp	/^    int bn,w;$/;"	m	class:OpenBabel::StereoBondStore	file:
wInlen	include/openbabel/obconversion.h	/^      size_t wInlen; \/\/\/<length in the input stream of the object being written$/;"	m	class:OpenBabel::OBConversion
wInpos	include/openbabel/obconversion.h	/^      std::streampos wInpos; \/\/\/<position in the input stream of the object being written$/;"	m	class:OpenBabel::OBConversion
warning	include/libxml/parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandler
warning	include/libxml/parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandlerV1
warning	include/libxml/valid.h	/^    xmlValidityWarningFunc warning;	\/* the callback in case of warning *\/$/;"	m	struct:_xmlValidCtxt
warningSAXFunc	include/libxml/parser.h	/^typedef void (*warningSAXFunc) (void *ctx,$/;"	t
weights_for_checksum	src/formats/libinchi/ikey_base26.c	/^static int weights_for_checksum[N_UNIQUE_WEIGHTS] = { 1,3,5,7,9,11,15,17,19,21,23,25 }; $/;"	v	file:
wellFormed	include/libxml/parser.h	/^    int            wellFormed;        \/* is the document well formed *\/$/;"	m	struct:_xmlParserCtxt
what	src/formats/smiley.h	/^      const std::string& what() const$/;"	f	class:Smiley::Exception
what2do	src/formats/libinchi/ichicans.c	/^    AT_RANK       what2do;$/;"	m	struct:tagStereoBondNeighbor	file:
whitespace	include/libxml/schemasInternals.h	/^    int whitespace;$/;"	m	struct:_xmlSchemaFacet
width	include/openbabel/depict/painter.h	/^    double width, height;$/;"	m	struct:OpenBabel::OBFontMetrics
winding	include/openbabel/stereo/bindings.h	/^    OBStereo::Winding winding;$/;"	m	struct:OpenBabel::OBTetrahedralConfig
winding	include/openbabel/stereo/tetrahedral.h	/^      OBStereo::Winding winding; \/\/<! The winding for the 3 reference ids.$/;"	m	struct:OpenBabel::OBTetrahedralStereo::Config
word_vector	include/openbabel/bitvec.h	/^      typedef std::vector<uint32_t> word_vector;$/;"	t	class:OpenBabel::OBBitVec
words	include/openbabel/fingerprint.h	/^  unsigned int words;				\/\/\/<number 32bit words per fingerprint$/;"	m	struct:OpenBabel::FptIndexHeader
wrap	include/openbabel/tree/tree.hh	/^template <typename iter> iter tree<T, tree_node_allocator>::wrap(iter position, const T& x)$/;"	f	class:tree
write	src/formats/json/customwriter.cpp	/^CustomWriter::write( const Value &root )$/;"	f	class:Json::CustomWriter
write	src/formats/json/jsoncpp.cpp	/^FastWriter::write( const Value &root )$/;"	f	class:Json::FastWriter
write	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::write( std::ostream &out, const Value &root )$/;"	f	class:Json::StyledStreamWriter
write	src/formats/json/jsoncpp.cpp	/^StyledWriter::write( const Value &root )$/;"	f	class:Json::StyledWriter
writeArrayValue	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::writeArrayValue( const Value &value )$/;"	f	class:Json::StyledStreamWriter
writeArrayValue	src/formats/json/jsoncpp.cpp	/^StyledWriter::writeArrayValue( const Value &value )$/;"	f	class:Json::StyledWriter
writeCommentAfterValueOnSameLine	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::writeCommentAfterValueOnSameLine( const Value &root )$/;"	f	class:Json::StyledStreamWriter
writeCommentAfterValueOnSameLine	src/formats/json/jsoncpp.cpp	/^StyledWriter::writeCommentAfterValueOnSameLine( const Value &root )$/;"	f	class:Json::StyledWriter
writeCommentBeforeValue	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::writeCommentBeforeValue( const Value &root )$/;"	f	class:Json::StyledStreamWriter
writeCommentBeforeValue	src/formats/json/jsoncpp.cpp	/^StyledWriter::writeCommentBeforeValue( const Value &root )$/;"	f	class:Json::StyledWriter
writeFunction	src/depict/cairopainter.cpp	/^  static cairo_status_t writeFunction(void* closure, const unsigned char* data, unsigned int length)$/;"	f	namespace:OpenBabel
writeIndent	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::writeIndent()$/;"	f	class:Json::StyledStreamWriter
writeIndent	src/formats/json/jsoncpp.cpp	/^StyledWriter::writeIndent()$/;"	f	class:Json::StyledWriter
writeValue	src/formats/json/customwriter.cpp	/^CustomWriter::writeValue( const Value &value, std::string &doc, bool forceSingleLine )$/;"	f	class:Json::CustomWriter
writeValue	src/formats/json/jsoncpp.cpp	/^FastWriter::writeValue( const Value &value )$/;"	f	class:Json::FastWriter
writeValue	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::writeValue( const Value &value )$/;"	f	class:Json::StyledStreamWriter
writeValue	src/formats/json/jsoncpp.cpp	/^StyledWriter::writeValue( const Value &value )$/;"	f	class:Json::StyledWriter
writeWithIndent	src/formats/json/jsoncpp.cpp	/^StyledStreamWriter::writeWithIndent( const std::string &value )$/;"	f	class:Json::StyledStreamWriter
writeWithIndent	src/formats/json/jsoncpp.cpp	/^StyledWriter::writeWithIndent( const std::string &value )$/;"	f	class:Json::StyledWriter
writecallback	include/libxml/xmlIO.h	/^    xmlOutputWriteCallback  writecallback;$/;"	m	struct:_xmlOutputBuffer
writer	include/openbabel/xml.h	/^      xmlTextWriterPtr writer() const$/;"	f	class:OpenBabel::XMLBaseFormat
written	include/libxml/xmlIO.h	/^    int written;            \/* total number of byte written *\/$/;"	m	struct:_xmlOutputBuffer
x	include/inchi/inchi_api.h	/^    double        x;                        \/* x coordinate *\/$/;"	m	struct:tagNormAtom
x	include/inchi/inchi_api.h	/^    double x;$/;"	m	struct:tagInchiAtom
x	include/inchi/inpdef.h	/^    double        x;$/;"	m	struct:tagInputAtom
x	include/inchi_api.h	/^    double        x;                        \/* x coordinate *\/$/;"	m	struct:tagNormAtom
x	include/inchi_api.h	/^    double x;$/;"	m	struct:tagInchiAtom
x	include/openbabel/atom.h	/^      double      x() const {$/;"	f	class:OpenBabel::OBAtom
x	include/openbabel/math/vector3.h	/^    const double & x () const$/;"	f	class:OpenBabel::vector3
x	include/openbabel/math/vector3.h	/^    double & x ()$/;"	f	class:OpenBabel::vector3
x	include/openbabel/rand.h	/^    unsigned int x;$/;"	m	class:OpenBabel::OBRandom
x	include/openbabel/spectrophore.h	/^            double x;$/;"	m	struct:OpenBabel::OBSpectrophore::__anon64
x	src/formats/fastaformat.cpp	/^    double x, r, Theta; \/\/ cylindrical polar co-ordinates$/;"	m	struct:OpenBabel::ResidueAtomRecord	file:
x	src/mcdlutil.cpp	/^    double x,y;$/;"	m	class:OpenBabel::Point	file:
xAxis	src/formats/adfformat.cpp	/^        double xAxis[ 3 ];$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
xDistPoint	src/mcdlutil.cpp	/^  double xDistPoint(double x1, double y1, double x2, double y2, double x0, double y0) {$/;"	f	namespace:OpenBabel
x_abs	src/formats/libinchi/ichiprt1.c	/^const char x_abs[]            = "1";$/;"	v
x_aux_basic	src/formats/libinchi/ichiprt1.c	/^const char x_aux_basic[]      = "identifier.auxiliary-info";$/;"	v
x_aux_comm	src/formats/libinchi/ichiprt1.c	/^const char x_aux_comm[]       = "!-- This section is NOT a part of the identifier, it is not unique --";$/;"	v
x_basic	src/formats/libinchi/ichiprt1.c	/^const char x_basic[]          = "identifier";$/;"	v
x_basic_layer	src/formats/libinchi/ichiprt1.c	/^const char x_basic_layer[]    = "basic";$/;"	v
x_close_line	src/formats/libinchi/ichiprt1.c	/^const char x_close_line[]     = ">";$/;"	v
x_curr_ver	src/formats/libinchi/ichiprt1.c	/^const char x_curr_ver[]       = INCHI_VERSION;$/;"	v
x_empty	src/formats/libinchi/ichiprt1.c	/^const char x_empty[]          = "";$/;"	v
x_err	src/formats/libinchi/ichiprt1.c	/^const char x_err[]            = "error (no InChI)";$/;"	v
x_ferr	src/formats/libinchi/ichiprt1.c	/^const char x_ferr[]           = "fatal (aborted)";$/;"	v
x_header	src/formats/libinchi/ichiprt1.c	/^const char x_header[]         = "id.name";$/;"	v
x_ign_uu_sp2	src/formats/libinchi/ichiprt1.c	/^const char x_ign_uu_sp2[]     = "omit_undef_dbond";$/;"	v
x_ign_uu_sp3	src/formats/libinchi/ichiprt1.c	/^const char x_ign_uu_sp3[]     = "omit_undef_sp3";$/;"	v
x_inchi	src/formats/libinchi/ichiprt1.c	/^const char x_inchi[]          = INCHI_NAME;$/;"	v
x_inchi_ver	src/formats/libinchi/ichiprt1.c	/^const char x_inchi_ver[]      = "version"; \/* "InChI.version"; *\/$/;"	v
x_line_closing	src/formats/libinchi/ichiprt1.c	/^const char x_line_closing[]   = "<\/";$/;"	v
x_line_opening	src/formats/libinchi/ichiprt1.c	/^const char x_line_opening[]   = "<";$/;"	v
x_message	src/formats/libinchi/ichiprt1.c	/^const char x_message[]        = "message";$/;"	v
x_number	src/formats/libinchi/ichiprt1.c	/^const char x_number[]         = "number";$/;"	v
x_rac	src/formats/libinchi/ichiprt1.c	/^const char x_rac[]            = "3";$/;"	v
x_reconnected	src/formats/libinchi/ichiprt1.c	/^const char x_reconnected[]    = "reconnected";$/;"	v
x_rel	src/formats/libinchi/ichiprt1.c	/^const char x_rel[]            = "2";$/;"	v
x_space	src/formats/libinchi/ichiprt1.c	/^const char x_space[]          = "                  ";$/;"	v
x_structure	src/formats/libinchi/ichiprt1.c	/^const char x_structure[]      = "structure";$/;"	v
x_tautomeric	src/formats/libinchi/ichiprt1.c	/^const char x_tautomeric[]     = "mobile-H";$/;"	v
x_text	src/formats/libinchi/ichiprt1.c	/^const char x_text[]           = "value";$/;"	v
x_type	src/formats/libinchi/ichiprt1.c	/^const char x_type[]           = "type";$/;"	v
x_type_alpha	src/formats/libinchi/ichiprt1.c	/^const char x_type_alpha[]     = "alpha";$/;"	v
x_type_normal	src/formats/libinchi/ichiprt1.c	/^const char x_type_normal[]    = "normal";$/;"	v
x_type_numer	src/formats/libinchi/ichiprt1.c	/^const char x_type_numer[]     = "numeric";$/;"	v
x_type_predec	src/formats/libinchi/ichiprt1.c	/^const char x_type_predec[]    = "sct";$/;"	v
x_type_short	src/formats/libinchi/ichiprt1.c	/^const char x_type_short[]     = "compressed";$/;"	v
x_value	src/formats/libinchi/ichiprt1.c	/^const char x_value[]          = "id.value";$/;"	v
x_ver	src/formats/libinchi/ichiprt1.c	/^const char x_ver[]            = "version";$/;"	v
x_warn	src/formats/libinchi/ichiprt1.c	/^const char x_warn[]           = "warning";$/;"	v
xd	src/formats/xtcformat.cpp	/^    XDR 	xd;$/;"	m	class:OpenBabel::XTCFormat	file:
xdr3dfcoord	src/formats/xtcformat.cpp	/^  int XTCFormat::xdr3dfcoord(XDR *xdrs, float *fp, int *size, float *precision) {$/;"	f	class:OpenBabel::XTCFormat
xdrclose	src/formats/xtcformat.cpp	/^  int XTCFormat::xdrclose(XDR *xdrs) {$/;"	f	class:OpenBabel::XTCFormat
xdrfiles	src/formats/xtcformat.cpp	/^    FILE*	xdrfiles[MAXID];$/;"	m	class:OpenBabel::XTCFormat	file:
xdridptr	src/formats/xtcformat.cpp	/^    XDR*	xdridptr[MAXID];$/;"	m	class:OpenBabel::XTCFormat	file:
xdrmodes	src/formats/xtcformat.cpp	/^    char 	xdrmodes[MAXID];$/;"	m	class:OpenBabel::XTCFormat	file:
xdropen	src/formats/xtcformat.cpp	/^  int XTCFormat::xdropen(XDR *xdrs, const char *filename, const char *type) {$/;"	f	class:OpenBabel::XTCFormat
xflags	include/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
xlinkActuate	include/libxml/xlink.h	/^} xlinkActuate;$/;"	t	typeref:enum:__anon26
xlinkExtendedLinkFunk	include/libxml/xlink.h	/^(*xlinkExtendedLinkFunk)(void *ctx,$/;"	t
xlinkExtendedLinkSetFunk	include/libxml/xlink.h	/^(*xlinkExtendedLinkSetFunk)	(void *ctx,$/;"	t
xlinkHRef	include/libxml/xlink.h	/^typedef xmlChar *xlinkHRef;$/;"	t
xlinkHandler	include/libxml/xlink.h	/^typedef struct _xlinkHandler xlinkHandler;$/;"	t	typeref:struct:_xlinkHandler
xlinkHandlerPtr	include/libxml/xlink.h	/^typedef xlinkHandler *xlinkHandlerPtr;$/;"	t
xlinkNodeDetectFunc	include/libxml/xlink.h	/^typedef void (*xlinkNodeDetectFunc) (void *ctx, xmlNodePtr node);$/;"	t
xlinkRole	include/libxml/xlink.h	/^typedef xmlChar *xlinkRole;$/;"	t
xlinkShow	include/libxml/xlink.h	/^} xlinkShow;$/;"	t	typeref:enum:__anon25
xlinkSimpleLinkFunk	include/libxml/xlink.h	/^(*xlinkSimpleLinkFunk)	(void *ctx,$/;"	t
xlinkTitle	include/libxml/xlink.h	/^typedef xmlChar *xlinkTitle;$/;"	t
xlinkType	include/libxml/xlink.h	/^} xlinkType;$/;"	t	typeref:enum:__anon24
xmlAttr	include/libxml/tree.h	/^typedef struct _xmlAttr xmlAttr;$/;"	t	typeref:struct:_xmlAttr
xmlAttrPtr	include/libxml/tree.h	/^typedef xmlAttr *xmlAttrPtr;$/;"	t
xmlAttribute	include/libxml/tree.h	/^typedef struct _xmlAttribute xmlAttribute;$/;"	t	typeref:struct:_xmlAttribute
xmlAttributeDefault	include/libxml/tree.h	/^} xmlAttributeDefault;$/;"	t	typeref:enum:__anon19
xmlAttributePtr	include/libxml/tree.h	/^typedef xmlAttribute *xmlAttributePtr;$/;"	t
xmlAttributeTable	include/libxml/valid.h	/^typedef struct _xmlHashTable xmlAttributeTable;$/;"	t	typeref:struct:_xmlHashTable
xmlAttributeTablePtr	include/libxml/valid.h	/^typedef xmlAttributeTable *xmlAttributeTablePtr;$/;"	t
xmlAttributeType	include/libxml/tree.h	/^} xmlAttributeType;$/;"	t	typeref:enum:__anon18
xmlAutomata	include/libxml/xmlautomata.h	/^typedef struct _xmlAutomata xmlAutomata;$/;"	t	typeref:struct:_xmlAutomata
xmlAutomataPtr	include/libxml/xmlautomata.h	/^typedef xmlAutomata *xmlAutomataPtr;$/;"	t
xmlAutomataState	include/libxml/xmlautomata.h	/^typedef struct _xmlAutomataState xmlAutomataState;$/;"	t	typeref:struct:_xmlAutomataState
xmlAutomataStatePtr	include/libxml/xmlautomata.h	/^typedef xmlAutomataState *xmlAutomataStatePtr;$/;"	t
xmlBuffer	include/libxml/tree.h	/^typedef struct _xmlBuffer xmlBuffer;$/;"	t	typeref:struct:_xmlBuffer
xmlBufferAllocScheme	include/libxml/globals.h	/^	xmlBufferAllocationScheme xmlBufferAllocScheme;$/;"	m	struct:_xmlGlobalState
xmlBufferAllocScheme	include/libxml/globals.h	/^XMLPUBVAR xmlBufferAllocationScheme xmlBufferAllocScheme;$/;"	v
xmlBufferAllocScheme	include/libxml/globals.h	256;"	d
xmlBufferAllocScheme	include/libxml/globals.h	46;"	d
xmlBufferAllocationScheme	include/libxml/tree.h	/^} xmlBufferAllocationScheme;$/;"	t	typeref:enum:__anon23
xmlBufferPtr	include/libxml/tree.h	/^typedef xmlBuffer *xmlBufferPtr;$/;"	t
xmlC14NIsVisibleCallback	include/libxml/c14n.h	/^typedef int (*xmlC14NIsVisibleCallback)	(void* user_data, $/;"	t
xmlCatalog	include/libxml/catalog.h	/^typedef struct _xmlCatalog xmlCatalog;$/;"	t	typeref:struct:_xmlCatalog
xmlCatalogAllow	include/libxml/catalog.h	/^} xmlCatalogAllow;$/;"	t	typeref:enum:__anon6
xmlCatalogPrefer	include/libxml/catalog.h	/^} xmlCatalogPrefer;$/;"	t	typeref:enum:__anon5
xmlCatalogPtr	include/libxml/catalog.h	/^typedef xmlCatalog *xmlCatalogPtr;$/;"	t
xmlChLRange	include/libxml/chvalid.h	/^typedef struct _xmlChLRange xmlChLRange;$/;"	t	typeref:struct:_xmlChLRange
xmlChLRangePtr	include/libxml/chvalid.h	/^typedef xmlChLRange *xmlChLRangePtr;$/;"	t
xmlChRangeGroup	include/libxml/chvalid.h	/^typedef struct _xmlChRangeGroup xmlChRangeGroup;$/;"	t	typeref:struct:_xmlChRangeGroup
xmlChRangeGroupPtr	include/libxml/chvalid.h	/^typedef xmlChRangeGroup *xmlChRangeGroupPtr;$/;"	t
xmlChSRange	include/libxml/chvalid.h	/^typedef struct _xmlChSRange xmlChSRange;$/;"	t	typeref:struct:_xmlChSRange
xmlChSRangePtr	include/libxml/chvalid.h	/^typedef xmlChSRange *xmlChSRangePtr;$/;"	t
xmlChar	include/libxml/xmlstring.h	/^typedef unsigned char xmlChar;$/;"	t
xmlCharEncoding	include/libxml/encoding.h	/^} xmlCharEncoding;$/;"	t	typeref:enum:__anon7
xmlCharEncodingHandler	include/libxml/encoding.h	/^typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;$/;"	t	typeref:struct:_xmlCharEncodingHandler
xmlCharEncodingHandlerPtr	include/libxml/encoding.h	/^typedef xmlCharEncodingHandler *xmlCharEncodingHandlerPtr;$/;"	t
xmlCharEncodingInputFunc	include/libxml/encoding.h	/^typedef int (* xmlCharEncodingInputFunc)(unsigned char *out, int *outlen,$/;"	t
xmlCharEncodingOutputFunc	include/libxml/encoding.h	/^typedef int (* xmlCharEncodingOutputFunc)(unsigned char *out, int *outlen,$/;"	t
xmlChildrenNode	include/libxml/tree.h	519;"	d
xmlDefaultBufferSize	include/libxml/globals.h	/^	int xmlDefaultBufferSize;$/;"	m	struct:_xmlGlobalState
xmlDefaultBufferSize	include/libxml/globals.h	/^XMLPUBVAR int xmlDefaultBufferSize;$/;"	v
xmlDefaultBufferSize	include/libxml/globals.h	265;"	d
xmlDefaultBufferSize	include/libxml/globals.h	47;"	d
xmlDefaultSAXHandler	include/libxml/globals.h	/^	xmlSAXHandlerV1 xmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState
xmlDefaultSAXHandler	include/libxml/globals.h	/^XMLPUBVAR xmlSAXHandlerV1 xmlDefaultSAXHandler;$/;"	v
xmlDefaultSAXHandler	include/libxml/globals.h	274;"	d
xmlDefaultSAXHandler	include/libxml/globals.h	48;"	d
xmlDefaultSAXLocator	include/libxml/globals.h	/^	xmlSAXLocator xmlDefaultSAXLocator;$/;"	m	struct:_xmlGlobalState
xmlDefaultSAXLocator	include/libxml/globals.h	/^XMLPUBVAR xmlSAXLocator xmlDefaultSAXLocator;$/;"	v
xmlDefaultSAXLocator	include/libxml/globals.h	282;"	d
xmlDefaultSAXLocator	include/libxml/globals.h	49;"	d
xmlDeregisterNodeDefaultValue	include/libxml/globals.h	/^  	xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlDeregisterNodeDefaultValue	include/libxml/globals.h	/^XMLPUBVAR xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;$/;"	v
xmlDeregisterNodeDefaultValue	include/libxml/globals.h	429;"	d
xmlDeregisterNodeDefaultValue	include/libxml/globals.h	71;"	d
xmlDeregisterNodeFunc	include/libxml/globals.h	/^typedef void (*xmlDeregisterNodeFunc) (xmlNodePtr node);$/;"	t
xmlDict	include/libxml/dict.h	/^typedef struct _xmlDict xmlDict;$/;"	t	typeref:struct:_xmlDict
xmlDictPtr	include/libxml/dict.h	/^typedef xmlDict *xmlDictPtr;$/;"	t
xmlDoValidityCheckingDefaultValue	include/libxml/globals.h	/^	int xmlDoValidityCheckingDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlDoValidityCheckingDefaultValue	include/libxml/globals.h	/^XMLPUBVAR int xmlDoValidityCheckingDefaultValue;$/;"	v
xmlDoValidityCheckingDefaultValue	include/libxml/globals.h	290;"	d
xmlDoValidityCheckingDefaultValue	include/libxml/globals.h	50;"	d
xmlDoc	include/libxml/tree.h	/^typedef struct _xmlDoc xmlDoc;$/;"	t	typeref:struct:_xmlDoc
xmlDocPtr	include/libxml/tree.h	/^typedef xmlDoc *xmlDocPtr;$/;"	t
xmlDtd	include/libxml/tree.h	/^typedef struct _xmlDtd xmlDtd;$/;"	t	typeref:struct:_xmlDtd
xmlDtdPtr	include/libxml/tree.h	/^typedef xmlDtd *xmlDtdPtr;$/;"	t
xmlElement	include/libxml/tree.h	/^typedef struct _xmlElement xmlElement;$/;"	t	typeref:struct:_xmlElement
xmlElementContent	include/libxml/tree.h	/^typedef struct _xmlElementContent xmlElementContent;$/;"	t	typeref:struct:_xmlElementContent
xmlElementContentOccur	include/libxml/tree.h	/^} xmlElementContentOccur;$/;"	t	typeref:enum:__anon21
xmlElementContentPtr	include/libxml/tree.h	/^typedef xmlElementContent *xmlElementContentPtr;$/;"	t
xmlElementContentType	include/libxml/tree.h	/^} xmlElementContentType;$/;"	t	typeref:enum:__anon20
xmlElementPtr	include/libxml/tree.h	/^typedef xmlElement *xmlElementPtr;$/;"	t
xmlElementTable	include/libxml/valid.h	/^typedef struct _xmlHashTable xmlElementTable;$/;"	t	typeref:struct:_xmlHashTable
xmlElementTablePtr	include/libxml/valid.h	/^typedef xmlElementTable *xmlElementTablePtr;$/;"	t
xmlElementType	include/libxml/tree.h	/^} xmlElementType;$/;"	t	typeref:enum:__anon17
xmlElementTypeVal	include/libxml/tree.h	/^} xmlElementTypeVal;$/;"	t	typeref:enum:__anon22
xmlEntitiesTable	include/libxml/entities.h	/^typedef struct _xmlHashTable xmlEntitiesTable;$/;"	t	typeref:struct:_xmlHashTable
xmlEntitiesTablePtr	include/libxml/entities.h	/^typedef xmlEntitiesTable *xmlEntitiesTablePtr;$/;"	t
xmlEntity	include/libxml/tree.h	/^typedef struct _xmlEntity xmlEntity;$/;"	t	typeref:struct:_xmlEntity
xmlEntityPtr	include/libxml/tree.h	/^typedef xmlEntity *xmlEntityPtr;$/;"	t
xmlEntityReferenceFunc	include/libxml/parserInternals.h	/^typedef	void	(*xmlEntityReferenceFunc)	(xmlEntityPtr ent,$/;"	t
xmlEntityType	include/libxml/entities.h	/^} xmlEntityType;$/;"	t	typeref:enum:__anon8
xmlEnumeration	include/libxml/tree.h	/^typedef struct _xmlEnumeration xmlEnumeration;$/;"	t	typeref:struct:_xmlEnumeration
xmlEnumerationPtr	include/libxml/tree.h	/^typedef xmlEnumeration *xmlEnumerationPtr;$/;"	t
xmlError	include/libxml/xmlerror.h	/^typedef struct _xmlError xmlError;$/;"	t	typeref:struct:_xmlError
xmlErrorDomain	include/libxml/xmlerror.h	/^} xmlErrorDomain;$/;"	t	typeref:enum:__anon28
xmlErrorLevel	include/libxml/xmlerror.h	/^} xmlErrorLevel;$/;"	t	typeref:enum:__anon27
xmlErrorPtr	include/libxml/xmlerror.h	/^typedef xmlError *xmlErrorPtr;$/;"	t
xmlExternalEntityLoader	include/libxml/parser.h	/^typedef xmlParserInputPtr (*xmlExternalEntityLoader) (const char *URL,$/;"	t
xmlFree	include/libxml/globals.h	/^	xmlFreeFunc xmlFree;$/;"	m	struct:_xmlGlobalState
xmlFree	include/libxml/globals.h	/^XMLPUBVAR xmlFreeFunc xmlFree;$/;"	v
xmlFree	include/libxml/globals.h	189;"	d
xmlFree	include/libxml/globals.h	51;"	d
xmlFreeFunc	include/libxml/xmlmemory.h	/^typedef void (XMLCALL *xmlFreeFunc)(void *mem);$/;"	t
xmlGenericError	include/libxml/globals.h	/^	xmlGenericErrorFunc xmlGenericError;$/;"	m	struct:_xmlGlobalState
xmlGenericError	include/libxml/globals.h	/^XMLPUBVAR xmlGenericErrorFunc xmlGenericError;$/;"	v
xmlGenericError	include/libxml/globals.h	299;"	d
xmlGenericError	include/libxml/globals.h	52;"	d
xmlGenericErrorContext	include/libxml/globals.h	/^	void *xmlGenericErrorContext;$/;"	m	struct:_xmlGlobalState
xmlGenericErrorContext	include/libxml/globals.h	/^XMLPUBVAR void * xmlGenericErrorContext;$/;"	v
xmlGenericErrorContext	include/libxml/globals.h	315;"	d
xmlGenericErrorContext	include/libxml/globals.h	54;"	d
xmlGenericErrorFunc	include/libxml/xmlerror.h	/^typedef void (*xmlGenericErrorFunc) (void *ctx,$/;"	t
xmlGetWarningsDefaultValue	include/libxml/globals.h	/^	int xmlGetWarningsDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlGetWarningsDefaultValue	include/libxml/globals.h	/^XMLPUBVAR int xmlGetWarningsDefaultValue;$/;"	v
xmlGetWarningsDefaultValue	include/libxml/globals.h	323;"	d
xmlGetWarningsDefaultValue	include/libxml/globals.h	55;"	d
xmlGlobalState	include/libxml/globals.h	/^typedef struct _xmlGlobalState xmlGlobalState;$/;"	t	typeref:struct:_xmlGlobalState
xmlGlobalStatePtr	include/libxml/globals.h	/^typedef xmlGlobalState *xmlGlobalStatePtr;$/;"	t
xmlHashCopier	include/libxml/hash.h	/^typedef void *(*xmlHashCopier)(void *payload, xmlChar *name);$/;"	t
xmlHashDeallocator	include/libxml/hash.h	/^typedef void (*xmlHashDeallocator)(void *payload, xmlChar *name);$/;"	t
xmlHashScanner	include/libxml/hash.h	/^typedef void (*xmlHashScanner)(void *payload, void *data, xmlChar *name);$/;"	t
xmlHashScannerFull	include/libxml/hash.h	/^typedef void (*xmlHashScannerFull)(void *payload, void *data,$/;"	t
xmlHashTable	include/libxml/hash.h	/^typedef struct _xmlHashTable xmlHashTable;$/;"	t	typeref:struct:_xmlHashTable
xmlHashTablePtr	include/libxml/hash.h	/^typedef xmlHashTable *xmlHashTablePtr;$/;"	t
xmlID	include/libxml/tree.h	/^typedef struct _xmlID xmlID;$/;"	t	typeref:struct:_xmlID
xmlIDPtr	include/libxml/tree.h	/^typedef xmlID *xmlIDPtr;$/;"	t
xmlIDTable	include/libxml/valid.h	/^typedef struct _xmlHashTable xmlIDTable;$/;"	t	typeref:struct:_xmlHashTable
xmlIDTablePtr	include/libxml/valid.h	/^typedef xmlIDTable *xmlIDTablePtr;$/;"	t
xmlIndentTreeOutput	include/libxml/globals.h	/^	int xmlIndentTreeOutput;$/;"	m	struct:_xmlGlobalState
xmlIndentTreeOutput	include/libxml/globals.h	/^XMLPUBVAR int xmlIndentTreeOutput;$/;"	v
xmlIndentTreeOutput	include/libxml/globals.h	332;"	d
xmlIndentTreeOutput	include/libxml/globals.h	56;"	d
xmlInputCloseCallback	include/libxml/xmlIO.h	/^typedef int (*xmlInputCloseCallback) (void * context);$/;"	t
xmlInputMatchCallback	include/libxml/xmlIO.h	/^typedef int (*xmlInputMatchCallback) (char const *filename);$/;"	t
xmlInputOpenCallback	include/libxml/xmlIO.h	/^typedef void * (*xmlInputOpenCallback) (char const *filename);$/;"	t
xmlInputReadCallback	include/libxml/xmlIO.h	/^typedef int (*xmlInputReadCallback) (void * context, char * buffer, int len);$/;"	t
xmlIsBaseCharGroup	include/libxml/chvalid.h	/^XMLPUBVAR xmlChRangeGroup xmlIsBaseCharGroup;$/;"	v
xmlIsBaseCharQ	include/libxml/chvalid.h	76;"	d
xmlIsBaseChar_ch	include/libxml/chvalid.h	64;"	d
xmlIsBlankQ	include/libxml/chvalid.h	98;"	d
xmlIsBlank_ch	include/libxml/chvalid.h	88;"	d
xmlIsCharGroup	include/libxml/chvalid.h	/^XMLPUBVAR xmlChRangeGroup xmlIsCharGroup;$/;"	v
xmlIsCharQ	include/libxml/chvalid.h	118;"	d
xmlIsChar_ch	include/libxml/chvalid.h	108;"	d
xmlIsCombiningGroup	include/libxml/chvalid.h	/^XMLPUBVAR xmlChRangeGroup xmlIsCombiningGroup;$/;"	v
xmlIsCombiningQ	include/libxml/chvalid.h	132;"	d
xmlIsDigitGroup	include/libxml/chvalid.h	/^XMLPUBVAR xmlChRangeGroup xmlIsDigitGroup;$/;"	v
xmlIsDigitQ	include/libxml/chvalid.h	152;"	d
xmlIsDigit_ch	include/libxml/chvalid.h	144;"	d
xmlIsExtenderGroup	include/libxml/chvalid.h	/^XMLPUBVAR xmlChRangeGroup xmlIsExtenderGroup;$/;"	v
xmlIsExtenderQ	include/libxml/chvalid.h	172;"	d
xmlIsExtender_ch	include/libxml/chvalid.h	164;"	d
xmlIsIdeographicGroup	include/libxml/chvalid.h	/^XMLPUBVAR xmlChRangeGroup xmlIsIdeographicGroup;$/;"	v
xmlIsIdeographicQ	include/libxml/chvalid.h	184;"	d
xmlIsPubidCharQ	include/libxml/chvalid.h	207;"	d
xmlIsPubidChar_ch	include/libxml/chvalid.h	199;"	d
xmlIsPubidChar_tab	include/libxml/chvalid.h	/^XMLPUBVAR unsigned char xmlIsPubidChar_tab[256];$/;"	v
xmlKeepBlanksDefaultValue	include/libxml/globals.h	/^	int xmlKeepBlanksDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlKeepBlanksDefaultValue	include/libxml/globals.h	/^XMLPUBVAR int xmlKeepBlanksDefaultValue;$/;"	v
xmlKeepBlanksDefaultValue	include/libxml/globals.h	350;"	d
xmlKeepBlanksDefaultValue	include/libxml/globals.h	58;"	d
xmlLastError	include/libxml/globals.h	/^	xmlError xmlLastError;$/;"	m	struct:_xmlGlobalState
xmlLastError	include/libxml/globals.h	/^XMLPUBVAR xmlError xmlLastError;$/;"	v
xmlLastError	include/libxml/globals.h	233;"	d
xmlLastError	include/libxml/globals.h	72;"	d
xmlLineNumbersDefaultValue	include/libxml/globals.h	/^	int xmlLineNumbersDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlLineNumbersDefaultValue	include/libxml/globals.h	/^XMLPUBVAR int xmlLineNumbersDefaultValue;$/;"	v
xmlLineNumbersDefaultValue	include/libxml/globals.h	359;"	d
xmlLineNumbersDefaultValue	include/libxml/globals.h	59;"	d
xmlLink	include/libxml/list.h	/^typedef struct _xmlLink xmlLink;$/;"	t	typeref:struct:_xmlLink
xmlLinkPtr	include/libxml/list.h	/^typedef xmlLink *xmlLinkPtr;$/;"	t
xmlList	include/libxml/list.h	/^typedef struct _xmlList xmlList;$/;"	t	typeref:struct:_xmlList
xmlListDataCompare	include/libxml/list.h	/^typedef int  (*xmlListDataCompare) (const void *data0, const void *data1);$/;"	t
xmlListDeallocator	include/libxml/list.h	/^typedef void (*xmlListDeallocator) (xmlLinkPtr lk);$/;"	t
xmlListPtr	include/libxml/list.h	/^typedef xmlList *xmlListPtr;$/;"	t
xmlListWalker	include/libxml/list.h	/^typedef int (*xmlListWalker) (const void *data, const void *user);$/;"	t
xmlLoadExtDtdDefaultValue	include/libxml/globals.h	/^	int xmlLoadExtDtdDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlLoadExtDtdDefaultValue	include/libxml/globals.h	/^XMLPUBVAR int xmlLoadExtDtdDefaultValue;$/;"	v
xmlLoadExtDtdDefaultValue	include/libxml/globals.h	368;"	d
xmlLoadExtDtdDefaultValue	include/libxml/globals.h	60;"	d
xmlLocationSet	include/libxml/xpointer.h	/^typedef struct _xmlLocationSet xmlLocationSet;$/;"	t	typeref:struct:_xmlLocationSet
xmlLocationSetPtr	include/libxml/xpointer.h	/^typedef xmlLocationSet *xmlLocationSetPtr;$/;"	t
xmlMalloc	include/libxml/globals.h	/^	xmlMallocFunc xmlMalloc;$/;"	m	struct:_xmlGlobalState
xmlMalloc	include/libxml/globals.h	/^XMLPUBVAR xmlMallocFunc xmlMalloc;$/;"	v
xmlMalloc	include/libxml/globals.h	165;"	d
xmlMalloc	include/libxml/globals.h	61;"	d
xmlMalloc	include/libxml/xmlmemory.h	177;"	d
xmlMallocAtomic	include/libxml/globals.h	/^	xmlMallocFunc xmlMallocAtomic;$/;"	m	struct:_xmlGlobalState
xmlMallocAtomic	include/libxml/globals.h	/^XMLPUBVAR xmlMallocFunc xmlMallocAtomic;$/;"	v
xmlMallocAtomic	include/libxml/globals.h	173;"	d
xmlMallocAtomic	include/libxml/globals.h	62;"	d
xmlMallocAtomic	include/libxml/xmlmemory.h	187;"	d
xmlMallocFunc	include/libxml/xmlmemory.h	/^typedef void *(XMLCALL *xmlMallocFunc)(size_t size);$/;"	t
xmlMemStrdup	include/libxml/globals.h	/^	xmlStrdupFunc xmlMemStrdup;$/;"	m	struct:_xmlGlobalState
xmlMemStrdup	include/libxml/globals.h	/^XMLPUBVAR xmlStrdupFunc xmlMemStrdup;$/;"	v
xmlMemStrdup	include/libxml/globals.h	197;"	d
xmlMemStrdup	include/libxml/globals.h	63;"	d
xmlMemStrdup	include/libxml/xmlmemory.h	206;"	d
xmlModule	include/libxml/xmlmodule.h	/^typedef struct _xmlModule xmlModule;$/;"	t	typeref:struct:_xmlModule
xmlModuleOption	include/libxml/xmlmodule.h	/^} xmlModuleOption;$/;"	t	typeref:enum:__anon30
xmlModulePtr	include/libxml/xmlmodule.h	/^typedef xmlModule *xmlModulePtr;$/;"	t
xmlMutex	include/libxml/threads.h	/^typedef struct _xmlMutex xmlMutex;$/;"	t	typeref:struct:_xmlMutex
xmlMutexPtr	include/libxml/threads.h	/^typedef xmlMutex *xmlMutexPtr;$/;"	t
xmlNode	include/libxml/tree.h	/^typedef struct _xmlNode xmlNode;$/;"	t	typeref:struct:_xmlNode
xmlNodePtr	include/libxml/tree.h	/^typedef xmlNode *xmlNodePtr;$/;"	t
xmlNodeSet	include/libxml/xpath.h	/^typedef struct _xmlNodeSet xmlNodeSet;$/;"	t	typeref:struct:_xmlNodeSet
xmlNodeSetPtr	include/libxml/xpath.h	/^typedef xmlNodeSet *xmlNodeSetPtr;$/;"	t
xmlNotation	include/libxml/tree.h	/^typedef struct _xmlNotation xmlNotation;$/;"	t	typeref:struct:_xmlNotation
xmlNotationPtr	include/libxml/tree.h	/^typedef xmlNotation *xmlNotationPtr;$/;"	t
xmlNotationTable	include/libxml/valid.h	/^typedef struct _xmlHashTable xmlNotationTable;$/;"	t	typeref:struct:_xmlHashTable
xmlNotationTablePtr	include/libxml/valid.h	/^typedef xmlNotationTable *xmlNotationTablePtr;$/;"	t
xmlNs	include/libxml/tree.h	/^typedef struct _xmlNs xmlNs;$/;"	t	typeref:struct:_xmlNs
xmlNsPtr	include/libxml/tree.h	/^typedef xmlNs *xmlNsPtr;$/;"	t
xmlNsType	include/libxml/tree.h	/^typedef xmlElementType xmlNsType;$/;"	t
xmlOutputBuffer	include/libxml/tree.h	/^typedef struct _xmlOutputBuffer xmlOutputBuffer;$/;"	t	typeref:struct:_xmlOutputBuffer
xmlOutputBufferCreateFilenameFunc	include/libxml/globals.h	/^typedef xmlOutputBufferPtr (*xmlOutputBufferCreateFilenameFunc) (const char *URI, xmlCharEncodingHandlerPtr encoder, int compression);$/;"	t
xmlOutputBufferCreateFilenameValue	include/libxml/globals.h	/^	xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState
xmlOutputBufferCreateFilenameValue	include/libxml/globals.h	/^XMLPUBVAR xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;$/;"	v
xmlOutputBufferCreateFilenameValue	include/libxml/globals.h	445;"	d
xmlOutputBufferCreateFilenameValue	include/libxml/globals.h	74;"	d
xmlOutputBufferPtr	include/libxml/tree.h	/^typedef xmlOutputBuffer *xmlOutputBufferPtr;$/;"	t
xmlOutputCloseCallback	include/libxml/xmlIO.h	/^typedef int (*xmlOutputCloseCallback) (void * context);$/;"	t
xmlOutputMatchCallback	include/libxml/xmlIO.h	/^typedef int (*xmlOutputMatchCallback) (char const *filename);$/;"	t
xmlOutputOpenCallback	include/libxml/xmlIO.h	/^typedef void * (*xmlOutputOpenCallback) (char const *filename);$/;"	t
xmlOutputWriteCallback	include/libxml/xmlIO.h	/^typedef int (*xmlOutputWriteCallback) (void * context, const char * buffer,$/;"	t
xmlParserCtxt	include/libxml/tree.h	/^typedef struct _xmlParserCtxt xmlParserCtxt;$/;"	t	typeref:struct:_xmlParserCtxt
xmlParserCtxtPtr	include/libxml/tree.h	/^typedef xmlParserCtxt *xmlParserCtxtPtr;$/;"	t
xmlParserDebugEntities	include/libxml/globals.h	/^	int xmlParserDebugEntities;$/;"	m	struct:_xmlGlobalState
xmlParserDebugEntities	include/libxml/globals.h	/^XMLPUBVAR int xmlParserDebugEntities;$/;"	v
xmlParserDebugEntities	include/libxml/globals.h	377;"	d
xmlParserDebugEntities	include/libxml/globals.h	64;"	d
xmlParserErrors	include/libxml/xmlerror.h	/^} xmlParserErrors;$/;"	t	typeref:enum:__anon29
xmlParserInput	include/libxml/tree.h	/^typedef struct _xmlParserInput xmlParserInput;$/;"	t	typeref:struct:_xmlParserInput
xmlParserInputBuffer	include/libxml/tree.h	/^typedef struct _xmlParserInputBuffer xmlParserInputBuffer;$/;"	t	typeref:struct:_xmlParserInputBuffer
xmlParserInputBufferCreateFilenameFunc	include/libxml/globals.h	/^typedef xmlParserInputBufferPtr (*xmlParserInputBufferCreateFilenameFunc) (const char *URI, xmlCharEncoding enc);$/;"	t
xmlParserInputBufferCreateFilenameValue	include/libxml/globals.h	/^	xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState
xmlParserInputBufferCreateFilenameValue	include/libxml/globals.h	/^XMLPUBVAR xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;$/;"	v
xmlParserInputBufferCreateFilenameValue	include/libxml/globals.h	437;"	d
xmlParserInputBufferCreateFilenameValue	include/libxml/globals.h	73;"	d
xmlParserInputBufferPtr	include/libxml/tree.h	/^typedef xmlParserInputBuffer *xmlParserInputBufferPtr;$/;"	t
xmlParserInputDeallocate	include/libxml/parser.h	/^typedef void (* xmlParserInputDeallocate)(xmlChar *str);$/;"	t
xmlParserInputPtr	include/libxml/tree.h	/^typedef xmlParserInput *xmlParserInputPtr;$/;"	t
xmlParserInputState	include/libxml/parser.h	/^} xmlParserInputState;$/;"	t	typeref:enum:__anon9
xmlParserMaxDepth	include/libxml/parserInternals.h	/^XMLPUBVAR unsigned int xmlParserMaxDepth;$/;"	v
xmlParserMode	include/libxml/parser.h	/^} xmlParserMode;$/;"	t	typeref:enum:__anon10
xmlParserNodeInfo	include/libxml/parser.h	/^typedef struct _xmlParserNodeInfo xmlParserNodeInfo;$/;"	t	typeref:struct:_xmlParserNodeInfo
xmlParserNodeInfoPtr	include/libxml/parser.h	/^typedef xmlParserNodeInfo *xmlParserNodeInfoPtr;$/;"	t
xmlParserNodeInfoSeq	include/libxml/parser.h	/^typedef struct _xmlParserNodeInfoSeq xmlParserNodeInfoSeq;$/;"	t	typeref:struct:_xmlParserNodeInfoSeq
xmlParserNodeInfoSeqPtr	include/libxml/parser.h	/^typedef xmlParserNodeInfoSeq *xmlParserNodeInfoSeqPtr;$/;"	t
xmlParserOption	include/libxml/parser.h	/^} xmlParserOption;$/;"	t	typeref:enum:__anon11
xmlParserProperties	include/libxml/xmlreader.h	/^} xmlParserProperties;$/;"	t	typeref:enum:__anon32
xmlParserSeverities	include/libxml/xmlreader.h	/^} xmlParserSeverities;$/;"	t	typeref:enum:__anon33
xmlParserVersion	include/libxml/globals.h	/^	const char *xmlParserVersion;$/;"	m	struct:_xmlGlobalState
xmlParserVersion	include/libxml/globals.h	/^XMLPUBVAR const char * xmlParserVersion;$/;"	v
xmlParserVersion	include/libxml/globals.h	386;"	d
xmlParserVersion	include/libxml/globals.h	65;"	d
xmlPattern	include/libxml/pattern.h	/^typedef struct _xmlPattern xmlPattern;$/;"	t	typeref:struct:_xmlPattern
xmlPatternPtr	include/libxml/pattern.h	/^typedef xmlPattern *xmlPatternPtr;$/;"	t
xmlPedanticParserDefaultValue	include/libxml/globals.h	/^	int xmlPedanticParserDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlPedanticParserDefaultValue	include/libxml/globals.h	/^XMLPUBVAR int xmlPedanticParserDefaultValue;$/;"	v
xmlPedanticParserDefaultValue	include/libxml/globals.h	394;"	d
xmlPedanticParserDefaultValue	include/libxml/globals.h	66;"	d
xmlRMutex	include/libxml/threads.h	/^typedef struct _xmlRMutex xmlRMutex;$/;"	t	typeref:struct:_xmlRMutex
xmlRMutexPtr	include/libxml/threads.h	/^typedef xmlRMutex *xmlRMutexPtr;$/;"	t
xmlReaderTypes	include/libxml/xmlreader.h	/^} xmlReaderTypes;$/;"	t	typeref:enum:__anon34
xmlRealloc	include/libxml/globals.h	/^	xmlReallocFunc xmlRealloc;$/;"	m	struct:_xmlGlobalState
xmlRealloc	include/libxml/globals.h	/^XMLPUBVAR xmlReallocFunc xmlRealloc;$/;"	v
xmlRealloc	include/libxml/globals.h	181;"	d
xmlRealloc	include/libxml/globals.h	67;"	d
xmlRealloc	include/libxml/xmlmemory.h	197;"	d
xmlReallocFunc	include/libxml/xmlmemory.h	/^typedef void *(XMLCALL *xmlReallocFunc)(void *mem, size_t size);$/;"	t
xmlRef	include/libxml/tree.h	/^typedef struct _xmlRef xmlRef;$/;"	t	typeref:struct:_xmlRef
xmlRef	src/formats/libinchi/ichiprt1.c	/^const X_REF xmlRef[] = { {'<', "&lt;"}, {'&', "&amp;"}, {'>', "&gt;"}, {'"', "&quot;"}, {'\\'', "&apos;"}, {0, NULL}, };$/;"	v
xmlRefPtr	include/libxml/tree.h	/^typedef xmlRef *xmlRefPtr;$/;"	t
xmlRefTable	include/libxml/valid.h	/^typedef struct _xmlHashTable xmlRefTable;$/;"	t	typeref:struct:_xmlHashTable
xmlRefTablePtr	include/libxml/valid.h	/^typedef xmlRefTable *xmlRefTablePtr;$/;"	t
xmlRegExecCallbacks	include/libxml/xmlregexp.h	/^typedef void (*xmlRegExecCallbacks) (xmlRegExecCtxtPtr exec,$/;"	t
xmlRegExecCtxt	include/libxml/xmlregexp.h	/^typedef struct _xmlRegExecCtxt xmlRegExecCtxt;$/;"	t	typeref:struct:_xmlRegExecCtxt
xmlRegExecCtxtPtr	include/libxml/xmlregexp.h	/^typedef xmlRegExecCtxt *xmlRegExecCtxtPtr;$/;"	t
xmlRegexp	include/libxml/xmlregexp.h	/^typedef struct _xmlRegexp xmlRegexp;$/;"	t	typeref:struct:_xmlRegexp
xmlRegexpPtr	include/libxml/xmlregexp.h	/^typedef xmlRegexp *xmlRegexpPtr;$/;"	t
xmlRegisterNodeDefaultValue	include/libxml/globals.h	/^  	xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlRegisterNodeDefaultValue	include/libxml/globals.h	/^XMLPUBVAR xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;$/;"	v
xmlRegisterNodeDefaultValue	include/libxml/globals.h	421;"	d
xmlRegisterNodeDefaultValue	include/libxml/globals.h	70;"	d
xmlRegisterNodeFunc	include/libxml/globals.h	/^typedef void (*xmlRegisterNodeFunc) (xmlNodePtr node);$/;"	t
xmlRelaxNG	include/libxml/relaxng.h	/^typedef struct _xmlRelaxNG xmlRelaxNG;$/;"	t	typeref:struct:_xmlRelaxNG
xmlRelaxNGParserCtxt	include/libxml/relaxng.h	/^typedef struct _xmlRelaxNGParserCtxt xmlRelaxNGParserCtxt;$/;"	t	typeref:struct:_xmlRelaxNGParserCtxt
xmlRelaxNGParserCtxtPtr	include/libxml/relaxng.h	/^typedef xmlRelaxNGParserCtxt *xmlRelaxNGParserCtxtPtr;$/;"	t
xmlRelaxNGParserFlag	include/libxml/relaxng.h	/^} xmlRelaxNGParserFlag;$/;"	t	typeref:enum:__anon13
xmlRelaxNGPtr	include/libxml/relaxng.h	/^typedef xmlRelaxNG *xmlRelaxNGPtr;$/;"	t
xmlRelaxNGValidCtxt	include/libxml/relaxng.h	/^typedef struct _xmlRelaxNGValidCtxt xmlRelaxNGValidCtxt;$/;"	t	typeref:struct:_xmlRelaxNGValidCtxt
xmlRelaxNGValidCtxtPtr	include/libxml/relaxng.h	/^typedef xmlRelaxNGValidCtxt *xmlRelaxNGValidCtxtPtr;$/;"	t
xmlRelaxNGValidErr	include/libxml/relaxng.h	/^} xmlRelaxNGValidErr;$/;"	t	typeref:enum:__anon12
xmlRelaxNGValidityErrorFunc	include/libxml/relaxng.h	/^typedef void (*xmlRelaxNGValidityErrorFunc) (void *ctx, const char *msg, ...);$/;"	t
xmlRelaxNGValidityWarningFunc	include/libxml/relaxng.h	/^typedef void (*xmlRelaxNGValidityWarningFunc) (void *ctx, const char *msg, ...);$/;"	t
xmlRootNode	include/libxml/tree.h	529;"	d
xmlSAXHandler	include/libxml/tree.h	/^typedef struct _xmlSAXHandler xmlSAXHandler;$/;"	t	typeref:struct:_xmlSAXHandler
xmlSAXHandlerPtr	include/libxml/tree.h	/^typedef xmlSAXHandler *xmlSAXHandlerPtr;$/;"	t
xmlSAXHandlerV1	include/libxml/parser.h	/^typedef struct _xmlSAXHandlerV1 xmlSAXHandlerV1;$/;"	t	typeref:struct:_xmlSAXHandlerV1
xmlSAXHandlerV1Ptr	include/libxml/parser.h	/^typedef xmlSAXHandlerV1 *xmlSAXHandlerV1Ptr;$/;"	t
xmlSAXLocator	include/libxml/tree.h	/^typedef struct _xmlSAXLocator xmlSAXLocator;$/;"	t	typeref:struct:_xmlSAXLocator
xmlSAXLocatorPtr	include/libxml/tree.h	/^typedef xmlSAXLocator *xmlSAXLocatorPtr;$/;"	t
xmlSaveCtxt	include/libxml/xmlsave.h	/^typedef struct _xmlSaveCtxt xmlSaveCtxt;$/;"	t	typeref:struct:_xmlSaveCtxt
xmlSaveCtxtPtr	include/libxml/xmlsave.h	/^typedef xmlSaveCtxt *xmlSaveCtxtPtr;$/;"	t
xmlSaveNoEmptyTags	include/libxml/globals.h	/^	int xmlSaveNoEmptyTags;$/;"	m	struct:_xmlGlobalState
xmlSaveNoEmptyTags	include/libxml/globals.h	/^XMLPUBVAR int xmlSaveNoEmptyTags;$/;"	v
xmlSaveNoEmptyTags	include/libxml/globals.h	403;"	d
xmlSaveNoEmptyTags	include/libxml/globals.h	68;"	d
xmlSaveOption	include/libxml/xmlsave.h	/^} xmlSaveOption;$/;"	t	typeref:enum:__anon35
xmlSchema	include/libxml/xmlschemas.h	/^typedef struct _xmlSchema xmlSchema;$/;"	t	typeref:struct:_xmlSchema
xmlSchemaAnnot	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAnnot xmlSchemaAnnot;$/;"	t	typeref:struct:_xmlSchemaAnnot
xmlSchemaAnnotPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaAnnot *xmlSchemaAnnotPtr;$/;"	t
xmlSchemaAttribute	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAttribute xmlSchemaAttribute;$/;"	t	typeref:struct:_xmlSchemaAttribute
xmlSchemaAttributeGroup	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAttributeGroup xmlSchemaAttributeGroup;$/;"	t	typeref:struct:_xmlSchemaAttributeGroup
xmlSchemaAttributeGroupPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaAttributeGroup *xmlSchemaAttributeGroupPtr;$/;"	t
xmlSchemaAttributeLink	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAttributeLink xmlSchemaAttributeLink;$/;"	t	typeref:struct:_xmlSchemaAttributeLink
xmlSchemaAttributeLinkPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaAttributeLink *xmlSchemaAttributeLinkPtr;$/;"	t
xmlSchemaAttributePtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaAttribute *xmlSchemaAttributePtr;$/;"	t
xmlSchemaContentType	include/libxml/schemasInternals.h	/^} xmlSchemaContentType;$/;"	t	typeref:enum:__anon16
xmlSchemaElement	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaElement xmlSchemaElement;$/;"	t	typeref:struct:_xmlSchemaElement
xmlSchemaElementPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaElement *xmlSchemaElementPtr;$/;"	t
xmlSchemaFacet	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaFacet xmlSchemaFacet;$/;"	t	typeref:struct:_xmlSchemaFacet
xmlSchemaFacetLink	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaFacetLink xmlSchemaFacetLink;$/;"	t	typeref:struct:_xmlSchemaFacetLink
xmlSchemaFacetLinkPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaFacetLink *xmlSchemaFacetLinkPtr;$/;"	t
xmlSchemaFacetPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaFacet *xmlSchemaFacetPtr;$/;"	t
xmlSchemaNotation	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaNotation xmlSchemaNotation;$/;"	t	typeref:struct:_xmlSchemaNotation
xmlSchemaNotationPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaNotation *xmlSchemaNotationPtr;$/;"	t
xmlSchemaParserCtxt	include/libxml/xmlschemas.h	/^typedef struct _xmlSchemaParserCtxt xmlSchemaParserCtxt;$/;"	t	typeref:struct:_xmlSchemaParserCtxt
xmlSchemaParserCtxtPtr	include/libxml/xmlschemas.h	/^typedef xmlSchemaParserCtxt *xmlSchemaParserCtxtPtr;$/;"	t
xmlSchemaPtr	include/libxml/xmlschemas.h	/^typedef xmlSchema *xmlSchemaPtr;$/;"	t
xmlSchemaType	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaType xmlSchemaType;$/;"	t	typeref:struct:_xmlSchemaType
xmlSchemaTypeLink	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaTypeLink xmlSchemaTypeLink;$/;"	t	typeref:struct:_xmlSchemaTypeLink
xmlSchemaTypeLinkPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaTypeLink *xmlSchemaTypeLinkPtr;$/;"	t
xmlSchemaTypePtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaType *xmlSchemaTypePtr;$/;"	t
xmlSchemaTypeType	include/libxml/schemasInternals.h	/^} xmlSchemaTypeType;$/;"	t	typeref:enum:__anon15
xmlSchemaVal	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaVal xmlSchemaVal;$/;"	t	typeref:struct:_xmlSchemaVal
xmlSchemaValPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaVal *xmlSchemaValPtr;$/;"	t
xmlSchemaValType	include/libxml/schemasInternals.h	/^} xmlSchemaValType;$/;"	t	typeref:enum:__anon14
xmlSchemaValidCtxt	include/libxml/xmlschemas.h	/^typedef struct _xmlSchemaValidCtxt xmlSchemaValidCtxt;$/;"	t	typeref:struct:_xmlSchemaValidCtxt
xmlSchemaValidCtxtPtr	include/libxml/xmlschemas.h	/^typedef xmlSchemaValidCtxt *xmlSchemaValidCtxtPtr;$/;"	t
xmlSchemaValidError	include/libxml/xmlschemas.h	/^} xmlSchemaValidError;$/;"	t	typeref:enum:__anon36
xmlSchemaValidOption	include/libxml/xmlschemas.h	/^} xmlSchemaValidOption;$/;"	t	typeref:enum:__anon37
xmlSchemaValidityErrorFunc	include/libxml/xmlschemas.h	/^typedef void (*xmlSchemaValidityErrorFunc) (void *ctx, const char *msg, ...);$/;"	t
xmlSchemaValidityWarningFunc	include/libxml/xmlschemas.h	/^typedef void (*xmlSchemaValidityWarningFunc) (void *ctx, const char *msg, ...);$/;"	t
xmlSchemaWhitespaceValueType	include/libxml/xmlschemastypes.h	/^} xmlSchemaWhitespaceValueType;$/;"	t	typeref:enum:__anon38
xmlSchemaWildcard	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaWildcard xmlSchemaWildcard;$/;"	t	typeref:struct:_xmlSchemaWildcard
xmlSchemaWildcardNs	include/libxml/schemasInternals.h	/^typedef struct _xmlSchemaWildcardNs xmlSchemaWildcardNs;$/;"	t	typeref:struct:_xmlSchemaWildcardNs
xmlSchemaWildcardNsPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaWildcardNs *xmlSchemaWildcardNsPtr;$/;"	t
xmlSchemaWildcardPtr	include/libxml/schemasInternals.h	/^typedef xmlSchemaWildcard *xmlSchemaWildcardPtr;$/;"	t
xmlShellCmd	include/libxml/debugXML.h	/^typedef int (* xmlShellCmd) (xmlShellCtxtPtr ctxt,$/;"	t
xmlShellCtxt	include/libxml/debugXML.h	/^typedef struct _xmlShellCtxt xmlShellCtxt;$/;"	t	typeref:struct:_xmlShellCtxt
xmlShellCtxtPtr	include/libxml/debugXML.h	/^typedef xmlShellCtxt *xmlShellCtxtPtr;$/;"	t
xmlShellReadlineFunc	include/libxml/debugXML.h	/^typedef char * (* xmlShellReadlineFunc)(char *prompt);$/;"	t
xmlStrdupFunc	include/libxml/xmlmemory.h	/^typedef char *(XMLCALL *xmlStrdupFunc)(const char *str);$/;"	t
xmlStreamCtxt	include/libxml/pattern.h	/^typedef struct _xmlStreamCtxt xmlStreamCtxt;$/;"	t	typeref:struct:_xmlStreamCtxt
xmlStreamCtxtPtr	include/libxml/pattern.h	/^typedef xmlStreamCtxt *xmlStreamCtxtPtr;$/;"	t
xmlStringComment	include/libxml/parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringComment[];$/;"	v
xmlStringText	include/libxml/parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringText[];$/;"	v
xmlStringTextNoenc	include/libxml/parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringTextNoenc[];$/;"	v
xmlStructuredError	include/libxml/globals.h	/^	xmlStructuredErrorFunc xmlStructuredError;$/;"	m	struct:_xmlGlobalState
xmlStructuredError	include/libxml/globals.h	/^XMLPUBVAR xmlStructuredErrorFunc xmlStructuredError;$/;"	v
xmlStructuredError	include/libxml/globals.h	307;"	d
xmlStructuredError	include/libxml/globals.h	53;"	d
xmlStructuredErrorFunc	include/libxml/xmlerror.h	/^typedef void (*xmlStructuredErrorFunc) (void *userData, xmlErrorPtr error);$/;"	t
xmlSubstituteEntitiesDefaultValue	include/libxml/globals.h	/^	int xmlSubstituteEntitiesDefaultValue;$/;"	m	struct:_xmlGlobalState
xmlSubstituteEntitiesDefaultValue	include/libxml/globals.h	/^XMLPUBVAR int xmlSubstituteEntitiesDefaultValue;$/;"	v
xmlSubstituteEntitiesDefaultValue	include/libxml/globals.h	412;"	d
xmlSubstituteEntitiesDefaultValue	include/libxml/globals.h	69;"	d
xmlTextReader	include/libxml/xmlreader.h	/^typedef struct _xmlTextReader xmlTextReader;$/;"	t	typeref:struct:_xmlTextReader
xmlTextReaderErrorFunc	include/libxml/xmlreader.h	/^typedef void   (XMLCALL *xmlTextReaderErrorFunc)        (void *arg, $/;"	t
xmlTextReaderLocatorPtr	include/libxml/xmlreader.h	/^typedef void *  xmlTextReaderLocatorPtr;$/;"	t
xmlTextReaderMode	include/libxml/xmlreader.h	/^} xmlTextReaderMode;$/;"	t	typeref:enum:__anon31
xmlTextReaderPtr	include/libxml/xmlreader.h	/^typedef xmlTextReader *xmlTextReaderPtr;$/;"	t
xmlTextWriter	include/libxml/xmlwriter.h	/^    typedef struct _xmlTextWriter xmlTextWriter;$/;"	t	typeref:struct:_xmlTextWriter
xmlTextWriterPtr	include/libxml/xmlwriter.h	/^    typedef xmlTextWriter *xmlTextWriterPtr;$/;"	t
xmlTextWriterWriteDocType	include/libxml/xmlwriter.h	318;"	d
xmlTextWriterWriteProcessingInstruction	include/libxml/xmlwriter.h	260;"	d
xmlTreeIndentString	include/libxml/globals.h	/^	const char *xmlTreeIndentString;$/;"	m	struct:_xmlGlobalState
xmlTreeIndentString	include/libxml/globals.h	/^XMLPUBVAR const char * xmlTreeIndentString;$/;"	v
xmlTreeIndentString	include/libxml/globals.h	341;"	d
xmlTreeIndentString	include/libxml/globals.h	57;"	d
xmlURI	include/libxml/uri.h	/^typedef struct _xmlURI xmlURI;$/;"	t	typeref:struct:_xmlURI
xmlURIPtr	include/libxml/uri.h	/^typedef xmlURI *xmlURIPtr;$/;"	t
xmlValidCtxt	include/libxml/valid.h	/^typedef struct _xmlValidCtxt xmlValidCtxt;$/;"	t	typeref:struct:_xmlValidCtxt
xmlValidCtxtPtr	include/libxml/valid.h	/^typedef xmlValidCtxt *xmlValidCtxtPtr;$/;"	t
xmlValidState	include/libxml/valid.h	/^typedef struct _xmlValidState xmlValidState;$/;"	t	typeref:struct:_xmlValidState
xmlValidStatePtr	include/libxml/valid.h	/^typedef xmlValidState *xmlValidStatePtr;$/;"	t
xmlValidityErrorFunc	include/libxml/valid.h	/^typedef void (*xmlValidityErrorFunc) (void *ctx,$/;"	t
xmlValidityWarningFunc	include/libxml/valid.h	/^typedef void (*xmlValidityWarningFunc) (void *ctx,$/;"	t
xmlXIncludeCtxt	include/libxml/xinclude.h	/^typedef struct _xmlXIncludeCtxt xmlXIncludeCtxt;$/;"	t	typeref:struct:_xmlXIncludeCtxt
xmlXIncludeCtxtPtr	include/libxml/xinclude.h	/^typedef xmlXIncludeCtxt *xmlXIncludeCtxtPtr;$/;"	t
xmlXPathAxis	include/libxml/xpath.h	/^typedef struct _xmlXPathAxis xmlXPathAxis;$/;"	t	typeref:struct:_xmlXPathAxis
xmlXPathAxisFunc	include/libxml/xpath.h	/^typedef xmlXPathObjectPtr (*xmlXPathAxisFunc) (xmlXPathParserContextPtr ctxt,$/;"	t
xmlXPathAxisPtr	include/libxml/xpath.h	/^typedef xmlXPathAxis *xmlXPathAxisPtr;$/;"	t
xmlXPathCheckError	include/libxml/xpathInternals.h	81;"	d
xmlXPathCompExpr	include/libxml/xpath.h	/^typedef struct _xmlXPathCompExpr xmlXPathCompExpr;$/;"	t	typeref:struct:_xmlXPathCompExpr
xmlXPathCompExprPtr	include/libxml/xpath.h	/^typedef xmlXPathCompExpr *xmlXPathCompExprPtr;$/;"	t
xmlXPathContext	include/libxml/xpath.h	/^typedef struct _xmlXPathContext xmlXPathContext;$/;"	t	typeref:struct:_xmlXPathContext
xmlXPathContextPtr	include/libxml/xpath.h	/^typedef xmlXPathContext *xmlXPathContextPtr;$/;"	t
xmlXPathConvertFunc	include/libxml/xpath.h	/^typedef int (*xmlXPathConvertFunc) (xmlXPathObjectPtr obj, int type);$/;"	t
xmlXPathEmptyNodeSet	include/libxml/xpathInternals.h	231;"	d
xmlXPathError	include/libxml/xpath.h	/^} xmlXPathError;$/;"	t	typeref:enum:__anon39
xmlXPathEvalFunc	include/libxml/xpath.h	/^typedef void (*xmlXPathEvalFunc)(xmlXPathParserContextPtr ctxt,$/;"	t
xmlXPathFuncLookupFunc	include/libxml/xpath.h	/^typedef xmlXPathFunction (*xmlXPathFuncLookupFunc) (void *ctxt,$/;"	t
xmlXPathFuncPtr	include/libxml/xpath.h	/^typedef xmlXPathFunct *xmlXPathFuncPtr;$/;"	t
xmlXPathFunct	include/libxml/xpath.h	/^typedef struct _xmlXPathFunct xmlXPathFunct;$/;"	t	typeref:struct:_xmlXPathFunct
xmlXPathFunction	include/libxml/xpath.h	/^typedef void (*xmlXPathFunction) (xmlXPathParserContextPtr ctxt, int nargs);$/;"	t
xmlXPathGetContextNode	include/libxml/xpathInternals.h	101;"	d
xmlXPathGetDocument	include/libxml/xpathInternals.h	91;"	d
xmlXPathGetError	include/libxml/xpathInternals.h	71;"	d
xmlXPathNAN	include/libxml/xpath.h	/^XMLPUBVAR double xmlXPathNAN;$/;"	v
xmlXPathNINF	include/libxml/xpath.h	/^XMLPUBVAR double xmlXPathNINF;$/;"	v
xmlXPathNodeSetGetLength	include/libxml/xpath.h	382;"	d
xmlXPathNodeSetIsEmpty	include/libxml/xpath.h	406;"	d
xmlXPathNodeSetItem	include/libxml/xpath.h	393;"	d
xmlXPathObject	include/libxml/xpath.h	/^typedef struct _xmlXPathObject xmlXPathObject;$/;"	t	typeref:struct:_xmlXPathObject
xmlXPathObjectPtr	include/libxml/xpath.h	/^typedef xmlXPathObject *xmlXPathObjectPtr;$/;"	t
xmlXPathObjectType	include/libxml/xpath.h	/^} xmlXPathObjectType;$/;"	t	typeref:enum:__anon40
xmlXPathPINF	include/libxml/xpath.h	/^XMLPUBVAR double xmlXPathPINF;$/;"	v
xmlXPathParserContext	include/libxml/xpath.h	/^typedef struct _xmlXPathParserContext xmlXPathParserContext;$/;"	t	typeref:struct:_xmlXPathParserContext
xmlXPathParserContextPtr	include/libxml/xpath.h	/^typedef xmlXPathParserContext *xmlXPathParserContextPtr;$/;"	t
xmlXPathReturnBoolean	include/libxml/xpathInternals.h	121;"	d
xmlXPathReturnEmptyNodeSet	include/libxml/xpathInternals.h	185;"	d
xmlXPathReturnEmptyString	include/libxml/xpathInternals.h	166;"	d
xmlXPathReturnExternal	include/libxml/xpathInternals.h	195;"	d
xmlXPathReturnFalse	include/libxml/xpathInternals.h	138;"	d
xmlXPathReturnNodeSet	include/libxml/xpathInternals.h	176;"	d
xmlXPathReturnNumber	include/libxml/xpathInternals.h	147;"	d
xmlXPathReturnString	include/libxml/xpathInternals.h	157;"	d
xmlXPathReturnTrue	include/libxml/xpathInternals.h	130;"	d
xmlXPathSetArityError	include/libxml/xpathInternals.h	51;"	d
xmlXPathSetError	include/libxml/xpathInternals.h	41;"	d
xmlXPathSetTypeError	include/libxml/xpathInternals.h	60;"	d
xmlXPathStackIsExternal	include/libxml/xpathInternals.h	222;"	d
xmlXPathStackIsNodeSet	include/libxml/xpathInternals.h	207;"	d
xmlXPathType	include/libxml/xpath.h	/^typedef struct _xmlXPathType xmlXPathType;$/;"	t	typeref:struct:_xmlXPathType
xmlXPathTypePtr	include/libxml/xpath.h	/^typedef xmlXPathType *xmlXPathTypePtr;$/;"	t
xmlXPathVariable	include/libxml/xpath.h	/^typedef struct _xmlXPathVariable xmlXPathVariable;$/;"	t	typeref:struct:_xmlXPathVariable
xmlXPathVariableLookupFunc	include/libxml/xpath.h	/^typedef xmlXPathObjectPtr (*xmlXPathVariableLookupFunc) (void *ctxt,$/;"	t
xmlXPathVariablePtr	include/libxml/xpath.h	/^typedef xmlXPathVariable *xmlXPathVariablePtr;$/;"	t
xptr	include/libxml/xpath.h	/^    int xptr;				\/* it this an XPointer context *\/$/;"	m	struct:_xmlXPathContext
xptr	include/libxml/xpath.h	/^    int xptr;				\/* it this an XPointer expression *\/$/;"	m	struct:_xmlXPathParserContext
xsmarts	src/ops/opisomorph.h	/^  std::string xsmarts; \/\/extra SMARTS provided externally via ProcessVec()$/;"	m	class:OpenBabel::OpNewS
xyz	include/inchi/ichirvrs.h	/^    double xyz[3];$/;"	m	struct:tagXYZCoord
y	include/inchi/inchi_api.h	/^    double        y;                        \/* y coordinate *\/$/;"	m	struct:tagNormAtom
y	include/inchi/inchi_api.h	/^    double y;$/;"	m	struct:tagInchiAtom
y	include/inchi/inpdef.h	/^    double        y;$/;"	m	struct:tagInputAtom
y	include/inchi_api.h	/^    double        y;                        \/* y coordinate *\/$/;"	m	struct:tagNormAtom
y	include/inchi_api.h	/^    double y;$/;"	m	struct:tagInchiAtom
y	include/openbabel/atom.h	/^      double      y() const {$/;"	f	class:OpenBabel::OBAtom
y	include/openbabel/math/vector3.h	/^    const double & y () const$/;"	f	class:OpenBabel::vector3
y	include/openbabel/math/vector3.h	/^    double & y ()$/;"	f	class:OpenBabel::vector3
y	include/openbabel/spectrophore.h	/^            double y;$/;"	m	struct:OpenBabel::OBSpectrophore::__anon64
y	src/mcdlutil.cpp	/^    double x,y;$/;"	m	class:OpenBabel::Point	file:
yAxis	src/formats/adfformat.cpp	/^        double yAxis[ 3 ];$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
yamlCompatiblityEnabled_	include/openbabel/json/json.h	/^      bool yamlCompatiblityEnabled_;$/;"	m	class:Json::FastWriter
yellow	src/isomorphism.cpp	/^  static const char *yellow = "\\033[1;33m";$/;"	m	namespace:OpenBabel	file:
z	include/inchi/inchi_api.h	/^    double        z;                        \/* x coordinate *\/$/;"	m	struct:tagNormAtom
z	include/inchi/inchi_api.h	/^    double z;$/;"	m	struct:tagInchiAtom
z	include/inchi/inpdef.h	/^    double        z;$/;"	m	struct:tagInputAtom
z	include/inchi_api.h	/^    double        z;                        \/* x coordinate *\/$/;"	m	struct:tagNormAtom
z	include/inchi_api.h	/^    double z;$/;"	m	struct:tagInchiAtom
z	include/openbabel/atom.h	/^      double      z() const {$/;"	f	class:OpenBabel::OBAtom
z	include/openbabel/math/vector3.h	/^    const double & z () const$/;"	f	class:OpenBabel::vector3
z	include/openbabel/math/vector3.h	/^    double & z ()$/;"	f	class:OpenBabel::vector3
z	include/openbabel/spectrophore.h	/^            double z;$/;"	m	struct:OpenBabel::OBSpectrophore::__anon64
zAxis	src/formats/adfformat.cpp	/^        double zAxis[ 3 ];$/;"	m	struct:OpenBabel::OBT41Format::T41GridData	file:
zError	include/zconf.h	44;"	d
zMin	src/depict/depict.cpp	/^      double     zMin;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
zScale	src/depict/depict.cpp	/^      double     zScale;$/;"	m	class:OpenBabel::OBDepictPrivate	file:
z_dir	include/inchi/extr_ct.h	/^    S_CHAR z_dir[3];$/;"	m	struct:tagAtom
z_off_t	include/zconf.h	301;"	d
z_stream	include/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	include/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	include/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
zalloc	include/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zflush	src/zipstreamimpl.h	/^basic_zip_ostream<charT, traits>& basic_zip_ostream<charT, traits>::zflush(void)$/;"	f	class:basic_zip_ostream
zfree	include/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zi	src/forcefields/forcefielduff.h	/^      double zi, zk, rij, rjk, rik;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
zink	src/mcdlutil.cpp	/^  const int zink[NZINKATOMS] ={30,48};$/;"	m	namespace:OpenBabel	file:
zip_istream	src/zipstream.h	/^typedef basic_zip_istream<char> zip_istream;$/;"	t	namespace:zlib_stream
zip_ostream	src/zipstream.h	/^typedef basic_zip_ostream<char> zip_ostream;$/;"	t	namespace:zlib_stream
zip_to_stream	src/zipstreamimpl.h	/^bool basic_zip_streambuf<charT, traits>::zip_to_stream($/;"	f	class:basic_zip_streambuf
zk	src/forcefields/forcefielduff.h	/^      double zi, zk, rij, rjk, rik;$/;"	m	class:OpenBabel::OBFFAngleCalculationUFF
zlib_stream	src/zipstream.h	/^namespace zlib_stream {$/;"	n
zlib_version	include/zlib.h	207;"	d
zstream_default_buffer_size	src/zipstream.h	/^const size_t zstream_default_buffer_size = 4096;$/;"	m	namespace:zlib_stream
~ASCIIPainter	src/depict/asciipainter.cpp	/^  ASCIIPainter::~ASCIIPainter()$/;"	f	class:OpenBabel::ASCIIPainter
~BatchAllocator	src/formats/json/jsoncpp.cpp	/^   ~BatchAllocator()$/;"	f	class:Json::BatchAllocator
~CZString	src/formats/json/jsoncpp.cpp	/^Value::CZString::~CZString()$/;"	f	class:Json::Value::CZString
~CairoPainter	src/depict/cairopainter.cpp	/^  CairoPainter::~CairoPainter()$/;"	f	class:OpenBabel::CairoPainter
~CommandPainter	src/depict/commandpainter.cpp	/^  CommandPainter::~CommandPainter()$/;"	f	class:OpenBabel::CommandPainter
~CommentInfo	src/formats/json/jsoncpp.cpp	/^Value::CommentInfo::~CommentInfo()$/;"	f	class:Json::Value::CommentInfo
~CustomWriter	include/openbabel/json/customwriter.h	/^      virtual ~CustomWriter(){}$/;"	f	class:Json::CustomWriter
~DistanceGeometryPrivate	src/distgeom.cpp	/^    ~DistanceGeometryPrivate()$/;"	f	class:OpenBabel::DistanceGeometryPrivate
~DynOptionswx	src/GUI/optswx.cpp	/^DynOptionswx::~DynOptionswx()$/;"	f	class:DynOptionswx
~FastSearch	include/openbabel/fingerprint.h	/^  virtual ~FastSearch(){};$/;"	f	class:OpenBabel::FastSearch
~FastSearchIndexer	src/fingerprint.cpp	/^  FastSearchIndexer::~FastSearchIndexer()$/;"	f	class:OpenBabel::FastSearchIndexer
~FastWriter	include/openbabel/json/json.h	/^      virtual ~FastWriter(){}$/;"	f	class:Json::FastWriter
~FilteringInputStream	include/openbabel/lineend.h	/^    virtual ~FilteringInputStream() {}$/;"	f	class:OpenBabel::FilteringInputStream
~FilteringInputStreambuf	include/openbabel/lineend.h	/^    virtual                 ~FilteringInputStreambuf()$/;"	f	class:OpenBabel::FilteringInputStreambuf
~Functor	include/openbabel/isomorphism.h	/^          virtual ~Functor() {}$/;"	f	class:OpenBabel::OBIsomorphismMapper::Functor
~GasteigerState	include/openbabel/molchrg.h	/^    ~GasteigerState() {}$/;"	f	class:OpenBabel::GasteigerState
~OBAngle	include/openbabel/generic.h	/^    ~OBAngle()$/;"	f	class:OpenBabel::OBAngle
~OBAromaticTyper	src/typer.cpp	/^  OBAromaticTyper::~OBAromaticTyper()$/;"	f	class:OpenBabel::OBAromaticTyper
~OBAtom	src/atom.cpp	/^  OBAtom::~OBAtom()$/;"	f	class:OpenBabel::OBAtom
~OBAtomAtomIter	include/openbabel/obiter.h	/^    ~OBAtomAtomIter() { }$/;"	f	class:OpenBabel::OBAtomAtomIter
~OBAtomBondIter	include/openbabel/obiter.h	/^    ~OBAtomBondIter() { }$/;"	f	class:OpenBabel::OBAtomBondIter
~OBAtomHOF	include/openbabel/data.h	/^    ~OBAtomHOF() {}$/;"	f	class:OpenBabel::OBAtomHOF
~OBAtomTyper	src/typer.cpp	/^  OBAtomTyper::~OBAtomTyper()$/;"	f	class:OpenBabel::OBAtomTyper
~OBAtomicHeatOfFormationTable	include/openbabel/data.h	/^      ~OBAtomicHeatOfFormationTable() {}$/;"	f	class:OpenBabel::OBAtomicHeatOfFormationTable
~OBBase	include/openbabel/base.h	/^      virtual ~OBBase()$/;"	f	class:OpenBabel::OBBase
~OBBond	src/bond.cpp	/^  OBBond::~OBBond()$/;"	f	class:OpenBabel::OBBond
~OBBondClosureInfo	src/formats/smilesformat.cpp	/^  OBBondClosureInfo::~OBBondClosureInfo()$/;"	f	class:OpenBabel::OBBondClosureInfo
~OBBondTyper	src/bondtyper.cpp	/^  OBBondTyper::~OBBondTyper()$/;"	f	class:OpenBabel::OBBondTyper
~OBCanSmiNode	src/formats/smilesformat.cpp	/^  OBCanSmiNode::~OBCanSmiNode()$/;"	f	class:OpenBabel::OBCanSmiNode
~OBChainsParser	src/chains.cpp	/^  OBChainsParser::~OBChainsParser(void)$/;"	f	class:OpenBabel::OBChainsParser
~OBChemTsfm	include/openbabel/phmodel.h	/^    ~OBChemTsfm()   {}$/;"	f	class:OpenBabel::OBChemTsfm
~OBChiralData	include/openbabel/generic.h	/^    ~OBChiralData(){}$/;"	f	class:OpenBabel::OBChiralData
~OBCisTransStereo	src/stereo/cistrans.cpp	/^  OBCisTransStereo::~OBCisTransStereo()$/;"	f	class:OpenBabel::OBCisTransStereo
~OBConformerData	include/openbabel/generic.h	/^    ~OBConformerData()    {}$/;"	f	class:OpenBabel::OBConformerData
~OBConformerFilter	src/conformersearch.cpp	/^  OBConformerFilter::~OBConformerFilter() {}$/;"	f	class:OpenBabel::OBConformerFilter
~OBConformerScore	src/conformersearch.cpp	/^  OBConformerScore::~OBConformerScore() {}$/;"	f	class:OpenBabel::OBConformerScore
~OBConformerSearch	src/conformersearch.cpp	/^  OBConformerSearch::~OBConformerSearch()$/;"	f	class:OpenBabel::OBConformerSearch
~OBConversion	src/obconversion.cpp	/^  OBConversion::~OBConversion()$/;"	f	class:OpenBabel::OBConversion
~OBDOSData	include/openbabel/generic.h	/^    virtual ~OBDOSData() {}$/;"	f	class:OpenBabel::OBDOSData
~OBDefine	src/ops/loader.cpp	/^  virtual ~OBDefine()$/;"	f	class:OpenBabel::OBDefine
~OBDepict	src/depict/depict.cpp	/^  OBDepict::~OBDepict()$/;"	f	class:OpenBabel::OBDepict
~OBDepictPrivate	src/depict/depict.cpp	/^      virtual ~OBDepictPrivate(){};$/;"	f	class:OpenBabel::OBDepictPrivate
~OBDistanceGeometry	src/distgeom.cpp	/^  OBDistanceGeometry::~OBDistanceGeometry()$/;"	f	class:OpenBabel::OBDistanceGeometry
~OBDiversePoses	src/confsearch.cpp	/^      ~OBDiversePoses() {$/;"	f	class:OpenBabel::OBDiversePoses
~OBElectronicTransitionData	include/openbabel/generic.h	/^    virtual ~OBElectronicTransitionData() {}$/;"	f	class:OpenBabel::OBElectronicTransitionData
~OBElementTable	src/data.cpp	/^  OBElementTable::~OBElementTable()$/;"	f	class:OpenBabel::OBElementTable
~OBExternalBond	include/openbabel/generic.h	/^    ~OBExternalBond()   {}$/;"	f	class:OpenBabel::OBExternalBond
~OBFFCalculation2	include/openbabel/forcefield.h	/^    virtual ~OBFFCalculation2()$/;"	f	class:OpenBabel::OBFFCalculation2
~OBFFCalculation3	include/openbabel/forcefield.h	/^    virtual ~OBFFCalculation3()$/;"	f	class:OpenBabel::OBFFCalculation3
~OBFFCalculation4	include/openbabel/forcefield.h	/^    virtual ~OBFFCalculation4()$/;"	f	class:OpenBabel::OBFFCalculation4
~OBFFConstraint	include/openbabel/forcefield.h	/^    ~OBFFConstraint()$/;"	f	class:OpenBabel::OBFFConstraint
~OBFFConstraints	include/openbabel/forcefield.h	/^    ~OBFFConstraints()$/;"	f	class:OpenBabel::OBFFConstraints
~OBFingerprint	include/openbabel/fingerprint.h	/^  virtual ~OBFingerprint(){}$/;"	f	class:OpenBabel::OBFingerprint
~OBFloatGrid	include/openbabel/grid.h	/^    ~OBFloatGrid()$/;"	f	class:OpenBabel::OBFloatGrid
~OBForceField	include/openbabel/forcefield.h	/^    virtual ~OBForceField()$/;"	f	class:OpenBabel::OBForceField
~OBForceFieldGaff	src/forcefields/forcefieldgaff.cpp	/^  OBForceFieldGaff::~OBForceFieldGaff()$/;"	f	class:OpenBabel::OBForceFieldGaff
~OBForceFieldGhemical	src/forcefields/forcefieldghemical.cpp	/^  OBForceFieldGhemical::~OBForceFieldGhemical()$/;"	f	class:OpenBabel::OBForceFieldGhemical
~OBForceFieldMM2	src/forcefields/forcefieldmm2.cpp	/^  OBForceFieldMM2::~OBForceFieldMM2()$/;"	f	class:OpenBabel::OBForceFieldMM2
~OBForceFieldMMFF94	src/forcefields/forcefieldmmff94.cpp	/^  OBForceFieldMMFF94::~OBForceFieldMMFF94()$/;"	f	class:OpenBabel::OBForceFieldMMFF94
~OBForceFieldUFF	src/forcefields/forcefielduff.cpp	/^  OBForceFieldUFF::~OBForceFieldUFF()$/;"	f	class:OpenBabel::OBForceFieldUFF
~OBFreeGrid	include/openbabel/generic.h	/^    ~OBFreeGrid() $/;"	f	class:OpenBabel::OBFreeGrid
~OBFreeGridPoint	include/openbabel/generic.h	/^    ~OBFreeGridPoint() {};$/;"	f	class:OpenBabel::OBFreeGridPoint
~OBGastChrg	src/molchrg.cpp	/^  OBGastChrg::~OBGastChrg()$/;"	f	class:OpenBabel::OBGastChrg
~OBGenericData	include/openbabel/base.h	/^    virtual ~OBGenericData()    {}$/;"	f	class:OpenBabel::OBGenericData
~OBGlobalDataBase	include/openbabel/data.h	/^      virtual ~OBGlobalDataBase()                  {}$/;"	f	class:OpenBabel::OBGlobalDataBase
~OBGraphSym	src/graphsym.cpp	/^  OBGraphSym::~OBGraphSym()$/;"	f	class:OpenBabel::OBGraphSym
~OBGridData	src/griddata.cpp	/^  OBGridData::~OBGridData()$/;"	f	class:OpenBabel::OBGridData
~OBIsomorphismMapper	src/isomorphism.cpp	/^  OBIsomorphismMapper::~OBIsomorphismMapper()$/;"	f	class:OpenBabel::OBIsomorphismMapper
~OBIsotopeTable	include/openbabel/data.h	/^      ~OBIsotopeTable()    {}$/;"	f	class:OpenBabel::OBIsotopeTable
~OBLocale	src/locale.cpp	/^  OBLocale::~OBLocale()$/;"	f	class:OpenBabel::OBLocale
~OBLocalePrivate	src/locale.cpp	/^    ~OBLocalePrivate()$/;"	f	class:OpenBabel::OBLocalePrivate
~OBMatrixData	include/openbabel/generic.h	/^    virtual ~OBMatrixData(){};$/;"	f	class:OpenBabel::OBMatrixData
~OBMessageHandler	src/oberror.cpp	/^  OBMessageHandler::~OBMessageHandler()$/;"	f	class:OpenBabel::OBMessageHandler
~OBMol	src/mol.cpp	/^  OBMol::~OBMol()$/;"	f	class:OpenBabel::OBMol
~OBMol2Cansmi	src/formats/smilesformat.cpp	/^    ~OBMol2Cansmi() {}$/;"	f	class:OpenBabel::OBMol2Cansmi
~OBMolAngleIter	include/openbabel/obiter.h	/^    ~OBMolAngleIter() { }$/;"	f	class:OpenBabel::OBMolAngleIter
~OBMolAtomBFSIter	include/openbabel/obiter.h	/^    ~OBMolAtomBFSIter() { }$/;"	f	class:OpenBabel::OBMolAtomBFSIter
~OBMolAtomDFSIter	include/openbabel/obiter.h	/^    ~OBMolAtomDFSIter() { }$/;"	f	class:OpenBabel::OBMolAtomDFSIter
~OBMolAtomIter	include/openbabel/obiter.h	/^    ~OBMolAtomIter() { }$/;"	f	class:OpenBabel::OBMolAtomIter
~OBMolBondBFSIter	include/openbabel/obiter.h	/^    ~OBMolBondBFSIter() { }$/;"	f	class:OpenBabel::OBMolBondBFSIter
~OBMolBondIter	include/openbabel/obiter.h	/^    ~OBMolBondIter() { }$/;"	f	class:OpenBabel::OBMolBondIter
~OBMolPairIter	include/openbabel/obiter.h	/^    ~OBMolPairIter() { }$/;"	f	class:OpenBabel::OBMolPairIter
~OBMolRingIter	include/openbabel/obiter.h	/^    ~OBMolRingIter() { }$/;"	f	class:OpenBabel::OBMolRingIter
~OBMolTorsionIter	include/openbabel/obiter.h	/^    ~OBMolTorsionIter() { }$/;"	f	class:OpenBabel::OBMolTorsionIter
~OBOrbitalData	include/openbabel/generic.h	/^    virtual ~OBOrbitalData() {}$/;"	f	class:OpenBabel::OBOrbitalData
~OBPainter	include/openbabel/depict/painter.h	/^      virtual ~OBPainter() {}$/;"	f	class:OpenBabel::OBPainter
~OBPhModel	src/phmodel.cpp	/^  OBPhModel::~OBPhModel()$/;"	f	class:OpenBabel::OBPhModel
~OBPlugin	include/openbabel/plugin.h	/^  virtual ~OBPlugin(){};$/;"	f	class:OpenBabel::OBPlugin
~OBPointGroup	src/pointgroup.cpp	/^  OBPointGroup::~OBPointGroup()$/;"	f	class:OpenBabel::OBPointGroup
~OBProxGrid	include/openbabel/grid.h	/^    ~OBProxGrid()$/;"	f	class:OpenBabel::OBProxGrid
~OBQuery	include/openbabel/query.h	/^      ~OBQuery()$/;"	f	class:OpenBabel::OBQuery
~OBQueryAtom	include/openbabel/query.h	/^      virtual ~OBQueryAtom() {}$/;"	f	class:OpenBabel::OBQueryAtom
~OBQueryBond	include/openbabel/query.h	/^      virtual ~OBQueryBond() {}$/;"	f	class:OpenBabel::OBQueryBond
~OBRTree	include/openbabel/ring.h	/^    ~OBRTree()    {}$/;"	f	class:OpenBabel::OBRTree
~OBResidue	src/residue.cpp	/^  OBResidue::~OBResidue()$/;"	f	class:OpenBabel::OBResidue
~OBResidueAtomIter	include/openbabel/obiter.h	/^    ~OBResidueAtomIter() { }$/;"	f	class:OpenBabel::OBResidueAtomIter
~OBResidueIter	include/openbabel/obiter.h	/^    ~OBResidueIter() { }$/;"	f	class:OpenBabel::OBResidueIter
~OBRingData	src/generic.cpp	/^  OBRingData::~OBRingData()$/;"	f	class:OpenBabel::OBRingData
~OBRingSearch	src/ring.cpp	/^  OBRingSearch::~OBRingSearch()$/;"	f	class:OpenBabel::OBRingSearch
~OBRingTyper	src/typer.cpp	/^  OBRingTyper::~OBRingTyper()$/;"	f	class:OpenBabel::OBRingTyper
~OBRotamerList	src/rotamer.cpp	/^  OBRotamerList::~OBRotamerList()$/;"	f	class:OpenBabel::OBRotamerList
~OBRotationData	include/openbabel/generic.h	/^   virtual ~OBRotationData(){};$/;"	f	class:OpenBabel::OBRotationData
~OBRotor	include/openbabel/rotor.h	/^    ~OBRotor()$/;"	f	class:OpenBabel::OBRotor
~OBRotorList	src/rotor.cpp	/^  OBRotorList::~OBRotorList()$/;"	f	class:OpenBabel::OBRotorList
~OBRotorRule	include/openbabel/rotor.h	/^    ~OBRotorRule()$/;"	f	class:OpenBabel::OBRotorRule
~OBRotorRules	src/rotor.cpp	/^  OBRotorRules::~OBRotorRules()$/;"	f	class:OpenBabel::OBRotorRules
~OBSSMatch	src/parsmart.cpp	/^  OBSSMatch::~OBSSMatch()$/;"	f	class:OpenBabel::OBSSMatch
~OBScoreGrid	include/openbabel/grid.h	/^    virtual ~OBScoreGrid(void) {}$/;"	f	class:OpenBabel::OBScoreGrid
~OBSmartsMatcher	include/openbabel/parsmart.h	/^    virtual ~OBSmartsMatcher() {}$/;"	f	class:OpenBabel::OBSmartsMatcher
~OBSmartsPattern	src/parsmart.cpp	/^  OBSmartsPattern::~OBSmartsPattern()$/;"	f	class:OpenBabel::OBSmartsPattern
~OBSmilesParser	src/formats/smilesformat.cpp	/^    ~OBSmilesParser() { }$/;"	f	class:OpenBabel::OBSmilesParser
~OBSpectrophore	src/spectrophore.cpp	/^OBSpectrophore::~OBSpectrophore(void)$/;"	f	class:OpenBabel::OBSpectrophore
~OBSqrtTbl	include/openbabel/obutil.h	/^    ~OBSqrtTbl()$/;"	f	class:OpenBabel::OBSqrtTbl
~OBSquarePlanarStereo	src/stereo/squareplanar.cpp	/^  OBSquarePlanarStereo::~OBSquarePlanarStereo()$/;"	f	class:OpenBabel::OBSquarePlanarStereo
~OBStereoBase	include/openbabel/stereo/stereo.h	/^      virtual ~OBStereoBase() { m_mol = 0; }$/;"	f	class:OpenBabel::OBStereoBase
~OBSymmetryData	include/openbabel/generic.h	/^    ~OBSymmetryData()    {}$/;"	f	class:OpenBabel::OBSymmetryData
~OBTetraNonPlanarStereo	src/stereo/tetranonplanar.cpp	/^  OBTetraNonPlanarStereo::~OBTetraNonPlanarStereo()$/;"	f	class:OpenBabel::OBTetraNonPlanarStereo
~OBTetraPlanarStereo	src/stereo/tetraplanar.cpp	/^  OBTetraPlanarStereo::~OBTetraPlanarStereo()$/;"	f	class:OpenBabel::OBTetraPlanarStereo
~OBTetrahedralStereo	src/stereo/tetrahedral.cpp	/^  OBTetrahedralStereo::~OBTetrahedralStereo()$/;"	f	class:OpenBabel::OBTetrahedralStereo
~OBTorsion	include/openbabel/generic.h	/^    ~OBTorsion()      {}$/;"	f	class:OpenBabel::OBTorsion
~OBTypeTable	include/openbabel/data.h	/^      ~OBTypeTable() {}$/;"	f	class:OpenBabel::OBTypeTable
~OBUnitCell	include/openbabel/generic.h	/^    ~OBUnitCell()    {}$/;"	f	class:OpenBabel::OBUnitCell
~OBVectorData	include/openbabel/generic.h	/^   virtual ~OBVectorData(){};$/;"	f	class:OpenBabel::OBVectorData
~OBVibrationData	include/openbabel/generic.h	/^    virtual ~OBVibrationData() {}$/;"	f	class:OpenBabel::OBVibrationData
~OpTransform	include/openbabel/optransform.h	/^  ~OpTransform(){}$/;"	f	class:OpenBabel::OpTransform
~SVGPainter	src/depict/svgpainter.cpp	/^  SVGPainter::~SVGPainter()$/;"	f	class:OpenBabel::SVGPainter
~SpaceGroup	src/math/spacegroup.cpp	/^  SpaceGroup::~SpaceGroup()$/;"	f	class:OpenBabel::SpaceGroup
~SpaceGroups	src/math/spacegroup.cpp	/^  SpaceGroups::~SpaceGroups()$/;"	f	class:OpenBabel::SpaceGroups
~StreamState	include/openbabel/obconversion.h	/^          ~StreamState()$/;"	f	struct:OpenBabel::OBConversion::StreamState
~StyledStreamWriter	include/openbabel/json/json.h	/^      ~StyledStreamWriter(){}$/;"	f	class:Json::StyledStreamWriter
~StyledWriter	include/openbabel/json/json.h	/^      virtual ~StyledWriter(){}$/;"	f	class:Json::StyledWriter
~TSimpleMolecule	src/mcdlutil.cpp	/^    virtual ~TSimpleMolecule() {$/;"	f	class:OpenBabel::TSimpleMolecule
~TautomerFunctor	include/openbabel/tautomer.h	/^      virtual ~TautomerFunctor() {}$/;"	f	class:OpenBabel::TautomerFunctor
~Value	src/formats/json/jsoncpp.cpp	/^Value::~Value()$/;"	f	class:Json::Value
~Writer	src/formats/json/jsoncpp.cpp	/^Writer::~Writer()$/;"	f	class:Json::Writer
~XMLBaseFormat	include/openbabel/xml.h	/^      ~XMLBaseFormat(){}$/;"	f	class:OpenBabel::XMLBaseFormat
~XMLConversion	src/formats/xml/xml.cpp	/^  XMLConversion::~XMLConversion()$/;"	f	class:OpenBabel::XMLConversion
~XMLMoleculeFormat	include/openbabel/xml.h	/^      ~XMLMoleculeFormat(){}$/;"	f	class:OpenBabel::XMLMoleculeFormat
~basic_unzip_streambuf	src/zipstreamimpl.h	/^basic_unzip_streambuf<charT, traits>::~basic_unzip_streambuf(void)$/;"	f	class:basic_unzip_streambuf
~basic_zip_ostream	src/zipstreamimpl.h	/^basic_zip_ostream<charT, traits>::~basic_zip_ostream(void)$/;"	f	class:basic_zip_ostream
~basic_zip_streambuf	src/zipstreamimpl.h	/^basic_zip_streambuf<charT, traits>::~basic_zip_streambuf(void)$/;"	f	class:basic_zip_streambuf
~matrix3x3	include/openbabel/math/matrix3x3.h	/^      ~matrix3x3() {}$/;"	f	class:OpenBabel::matrix3x3
~obLogBuf	include/openbabel/oberror.h	/^      virtual ~obLogBuf() { sync(); }$/;"	f	class:OpenBabel::obLogBuf
~patty	include/openbabel/patty.h	/^    ~patty()$/;"	f	class:OpenBabel::patty
~tree	include/openbabel/tree/tree.hh	/^tree<T, tree_node_allocator>::~tree()$/;"	f	class:tree
~vector3	include/openbabel/math/vector3.h	/^    ~vector3() { }$/;"	f	class:OpenBabel::vector3
