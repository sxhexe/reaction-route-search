<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Deprecated List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Deprecated List </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt><a class="anchor" id="_deprecated000080"></a>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aeecc5be8dfe990b9e9a751f789429f4f">matrix3x3::Get</a>  (int row, int column) const</dt>
<dd>use the constant operator() instead  </dd>
<dt><a class="anchor" id="_deprecated000096"></a>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a031b9641f48f7639949cad29a6a99109">matrix3x3::PlaneReflection</a>  (const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;norm)</dt>
<dd>This method will probably replaced by a safer algorithm in the future. </dd>
<dt><a class="anchor" id="_deprecated000097"></a>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ae2b83cb7b73473405cd57594c88f541c">matrix3x3::RotAboutAxisByAngle</a>  (const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;axis, const double angle)</dt>
<dd>This method will probably replaced by a safer algorithm in the future. </dd>
<dt><a class="anchor" id="_deprecated000081"></a>Member <a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aae7e56afba0365c34add2d93288995ca">matrix3x3::Set</a>  (int row, int column, double v)</dt>
<dd>use the non-constant operator() instead  </dd>
<dt><a class="anchor" id="_deprecated000006"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a036023769d4fee171548943838fa0df1">OBAtom::GetCIdx</a>  () const</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a534869887e7780bf59a97b9c7e38cac9">GetCoordinateIdx()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000007"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad3bbdba4326cf884eeb110b02f7caef7">OBAtom::GetNextAtom</a>  ()</dt>
<dd>Use any of the other iterator methods. This method will be removed in the future.  </dd>
<dt><a class="anchor" id="_deprecated000013"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8844e382c76003229ee5fdd0341aacee">OBAtom::HasChiralitySpecified</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000014"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63911efd550113b275239d322670986d">OBAtom::HasChiralVolume</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000010"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af3abb70d4f818b9c3e416928afa2e844">OBAtom::IsAntiClockwise</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000009"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4d1f38bbe03483629778078dcc4e75a0">OBAtom::IsClockwise</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000012"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a61e5344c34c172e9b889e59255aff6de">OBAtom::IsNegativeStereo</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000011"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a9880a080dd0bce244291bde514b67d20">OBAtom::IsPositiveStereo</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000008"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac724d08f837518953468665b9dc5ab23">OBAtom::KBOSum</a>  () const</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a437ef8d4fce62b10898a074ec147c8c5">BOSum()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000002"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af328f0aa99465103074b1d336c393919">OBAtom::SetAntiClockwiseStereo</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000001"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#adf069c94123595712cb7fa847b87e449">OBAtom::SetClockwiseStereo</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000084"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom</a>  (int)</dt>
<dd>This will be removed in future versions of Open Babel  </dd>
<dt><a class="anchor" id="_deprecated000004"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aea322d9d450ee48fb2e89a4f7c34deda">OBAtom::SetNegativeStereo</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000003"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6ddbbbc5f8e185c43e634a0425311275">OBAtom::SetPositiveStereo</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000005"></a>Member <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afdf42f73fe8a0cec0db3c3e544830fcc">OBAtom::UnsetStereo</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000095"></a>Member <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#a0d8f018cbaaa9d313b45e468f77afea2">OBAtomTyper::CorrectAromaticNitrogens</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;)</dt>
<dd>Currently unused for anything significant.  </dd>
<dt><a class="anchor" id="_deprecated000016"></a>Member <a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aebaf27b65d09f6f54c4d059e5ea6fbcb">OBBitVec::BitIsOn</a>  (int bit_offset) const</dt>
<dd>Use BitIsSet(unsigned bit_offset) instead.  </dd>
<dt><a class="anchor" id="_deprecated000015"></a>Member <a class="el" href="classOpenBabel_1_1OBBitVec.shtml#abcfbdba215d3b15fbb4b682969943a6e">OBBitVec::Empty</a>  () const</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a8e12342fc420701fbffd97025421575a" title="Are there no bits set to 1 in this vector? ">IsEmpty()</a> instead.  </dd>
<dt><a class="anchor" id="_deprecated000022"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#a7d9f4e277b24001cf1d7d9ef072724e6">OBBond::GetBO</a>  () const</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#ad4ae2f349fa9fe34dea5f5e69378fbf7">GetBondOrder()</a> as this method may be removed.  </dd>
<dt><a class="anchor" id="_deprecated000024"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#a1293d36d6ef65f89892ed57092aeb157">OBBond::IsKDouble</a>  ()</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#a66926118e966d8cdb17a6ae23f2e89f4">IsDouble()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000023"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#a3dcf63c2cdd597361fe1f140501fb4e7">OBBond::IsKSingle</a>  ()</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#aa7c514e18d5bbe2873dc223a02df526e">IsSingle()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000025"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#ad2ccb49198384c9d22b47ac7d0c4de90">OBBond::IsKTriple</a>  ()</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#ae763d876fdca6bb00dd7d97574c9c1d0">IsTriple()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000018"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#a3b00183cecf8df500db30888b4f83e70">OBBond::SetBO</a>  (int order)</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#afb89a19ab65bff6626af0eccfb83af07" title="Set the bond order to order (i.e., 1 = single, 2 = double, 5 = aromatic) ">SetBondOrder()</a> instead.  </dd>
<dt><a class="anchor" id="_deprecated000020"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#a2372682111abb0a7d49ba2f6caa7f51f">OBBond::SetKDouble</a>  ()</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#afb89a19ab65bff6626af0eccfb83af07" title="Set the bond order to order (i.e., 1 = single, 2 = double, 5 = aromatic) ">SetBondOrder()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000019"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#acb95632fbaba13a5aa138725a20f2c0b">OBBond::SetKSingle</a>  ()</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#afb89a19ab65bff6626af0eccfb83af07" title="Set the bond order to order (i.e., 1 = single, 2 = double, 5 = aromatic) ">SetBondOrder()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000021"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#a068e086977f8e15b07d3c3d32f622ead">OBBond::SetKTriple</a>  ()</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBond.shtml#afb89a19ab65bff6626af0eccfb83af07" title="Set the bond order to order (i.e., 1 = single, 2 = double, 5 = aromatic) ">SetBondOrder()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000017"></a>Member <a class="el" href="classOpenBabel_1_1OBBond.shtml#a6368d7673f23186649b2969ade3661d7">OBBond::Visit</a>  </dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> objects instead to be fully thread-safe.  </dd>
<dt><a class="anchor" id="_deprecated000046"></a>Class <a class="el" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a>  </dt>
<dd>Used <a class="el" href="classOpenBabel_1_1OBStereoFacade.shtml" title="Facade to simplify retrieval of OBStereoBase derived objects. ">OBStereoFacade</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000034"></a>Member <a class="el" href="classOpenBabel_1_1OBElement.shtml#adc9911e43430fd65726f393308db7e6e">OBElement::OBElement</a>  ()</dt>
<dd>Not used. Instead, initialize element properties  </dd>
<dt><a class="anchor" id="_deprecated000035"></a>Member <a class="el" href="classOpenBabel_1_1OBElementTable.shtml#a8228e8800bb8fae4658c751d6e999918">OBElementTable::GetAtomicNum</a>  (const char *)</dt>
<dd>Does not properly handle 'D' or 'T' hydrogen isotopes  </dd>
<dt><a class="anchor" id="_deprecated000052"></a>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a6e6665768ad3b8fc18276c6517c0b03d">OBFloatGrid::GetDim</a>  (int *a)</dt>
<dd>May be removed in future.  </dd>
<dt><a class="anchor" id="_deprecated000050"></a>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a1aa43bea8911cf7665f6e2fd151b609c">OBFloatGrid::GetMax</a>  (double *a)</dt>
<dd>Will be removed.  </dd>
<dt><a class="anchor" id="_deprecated000049"></a>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ab3d065904c33ecf6eaae0199fe6d0592">OBFloatGrid::GetMin</a>  (double *a)</dt>
<dd>Will be removed. Use </dd>
<dt><a class="anchor" id="_deprecated000051"></a>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a78f75c8108f8539c255711029b37cedc">OBFloatGrid::GetSpacing</a>  (double &amp;s)</dt>
<dd>Will be removed.  </dd>
<dt><a class="anchor" id="_deprecated000054"></a>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a5eb7667a7f7ac9876e632c35231fc44a">OBFloatGrid::GetVals</a>  ()</dt>
<dd>Will be removed.  </dd>
<dt><a class="anchor" id="_deprecated000053"></a>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a009627e179cde33c9c0150d6a06214fd">OBFloatGrid::SetLimits</a>  (const double origin[3], const double x[3], const double y[3], const double z[3])</dt>
<dd>Will be removed.  </dd>
<dt><a class="anchor" id="_deprecated000055"></a>Member <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a70b7ebc269d7a65e00d8eae51a5f01f4">OBFloatGrid::SetVals</a>  (double *ptr)</dt>
<dd>Will be removed.  </dd>
<dt><a class="anchor" id="_deprecated000040"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7b4196fee783bef9070d3d50ba91ff84">OBForceField::DistanceGeometry</a>  ()</dt>
<dd>Use OBDistanceGeometry class instead  </dd>
<dt><a class="anchor" id="_deprecated000041"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f08066361ace92acfa362df93fafd76">OBForceField::LineSearch</a>  (<a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> *atom, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;direction)</dt>
<dd>Current code should use <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ab4582129101043340868e2f854db4f1d">LineSearch(double *, double*)</a> instead.  </dd>
<dt><a class="anchor" id="_deprecated000039"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5c29065ad6e1322ade9087657bc576ec">OBForceField::UpdateConformers</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol)</dt>
<dd>Use GetConformers instead.  </dd>
<dt><a class="anchor" id="_deprecated000038"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ab9bff2ca9aad359da6491fa4c3f46577">OBForceField::UpdateCoordinates</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol)</dt>
<dd>Use GetCooordinates instead.  </dd>
<dt><a class="anchor" id="_deprecated000043"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#afe981b8f96a737d0228fbf62c4c94417">OBForceField::VectorAngleDerivative</a>  (<a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;a, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;b, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;c)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000042"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ab451a524c7a4f04bb987b3fac9288eed">OBForceField::VectorLengthDerivative</a>  (<a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;a, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;b)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000044"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a4b7e7649d0928a2cb6a2123e3e4dec6f">OBForceField::VectorOOPDerivative</a>  (<a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;a, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;b, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;c, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;d)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000045"></a>Member <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a4d4709cf0de47e7c6f44da4e21f20c9f">OBForceField::VectorTorsionDerivative</a>  (<a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;a, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;b, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;c, <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;d)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000056"></a>Member <a class="el" href="classOpenBabel_1_1OBGridData.shtml#a0e78d586538f223a571eeedd466f3f32">OBGridData::GetOriginVector</a>  (double o[3]) const</dt>
<dd>Will be removed.  </dd>
<dt><a class="anchor" id="_deprecated000057"></a>Member <a class="el" href="classOpenBabel_1_1OBGridData.shtml#a009627e179cde33c9c0150d6a06214fd">OBGridData::SetLimits</a>  (const double origin[3], const double x[3], const double y[3], const double z[3])</dt>
<dd>Will be removed.  </dd>
<dt><a class="anchor" id="_deprecated000058"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#afd5176ccf4c318a93379716d48ab01e8">OBMol::CreateAtom</a>  (void)</dt>
<dd>Use NewAtom instead, which ensures internal connections  </dd>
<dt><a class="anchor" id="_deprecated000059"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#aed69c2ff7d45271240ee8e33f4344d5a">OBMol::CreateBond</a>  (void)</dt>
<dd>Use NewBond instead, which ensures internal connections  </dd>
<dt><a class="anchor" id="_deprecated000060"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3803d9a4c2a776560b0c36bc2e788132">OBMol::CreateResidue</a>  (void)</dt>
<dd>Use NewResidue instead, which ensures internal connections  </dd>
<dt><a class="anchor" id="_deprecated000088"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6be250d574bdbcae500c9207cb0f2400">OBMol::expand_kekulize</a>  (int bond_idx, std::vector&lt; int &gt; &amp;atomState, std::vector&lt; int &gt; &amp;bondState)</dt>
<dd>Will no longer be a public, visible method  </dd>
<dt><a class="anchor" id="_deprecated000091"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#af1afc15e37f48f63ea001277fef0e289">OBMol::expandcycle</a>  (<a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> *atom, <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> &amp;avisit, const <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> &amp;potAromBonds)</dt>
<dd>Will no longer be a public, visible method  </dd>
<dt><a class="anchor" id="_deprecated000062"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3368586a5a86bd9684f4b25ac53d2e44">OBMol::FindChiralCenters</a>  ()</dt>
<dd>See FindStereogenicUnits  </dd>
<dt><a class="anchor" id="_deprecated000061"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9a629237105218b92b89fe880ed1e4f5">OBMol::GetFirstAtom</a>  () const</dt>
<dd>Will be removed in favor of more standard iterator methods  </dd>
<dt><a class="anchor" id="_deprecated000090"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden</a>  (<a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> *atom)</dt>
<dd>Will no longer be a public, visible method  </dd>
<dt><a class="anchor" id="_deprecated000089"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa8300dbbf33e0da417f98d846442e6b1">OBMol::has_no_leftover_electrons</a>  (std::vector&lt; int &gt; &amp;atomState)</dt>
<dd>Will no longer be a public, visible method  </dd>
<dt><a class="anchor" id="_deprecated000086"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds</a>  ()</dt>
<dd>Will no longer be a public, visible method  </dd>
<dt><a class="anchor" id="_deprecated000087"></a>Member <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad69498ec216d37651bbcfd6e76d7c67a">OBMol::start_kekulize</a>  (std::vector&lt; OBAtom *&gt; &amp;cycle, std::vector&lt; int &gt; &amp;electron)</dt>
<dd>Will no longer be a public, visible method  </dd>
<dt><a class="anchor" id="_deprecated000047"></a>Class <a class="el" href="classOpenBabel_1_1OBProxGrid.shtml">OBProxGrid</a>  </dt>
<dd>May be removed in the future, since docking is not a key feature  </dd>
<dt><a class="anchor" id="_deprecated000037"></a>Member <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;, <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> &amp;)</dt>
<dd>second <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> argument is ignored  </dd>
<dt><a class="anchor" id="_deprecated000036"></a>Member <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a41190815d4d7f64a08eed50e39f64122">OBResidueData::LookupBO</a>  (const std::string &amp;)</dt>
<dd>Easier to use the two-argument form  </dd>
<dt><a class="anchor" id="_deprecated000066"></a>Member <a class="el" href="classOpenBabel_1_1OBRing.shtml#ad2da624440e773d98fd9a35add3b5350">OBRing::PathSize</a>  () const</dt>
<dd>Use <a class="el" href="classOpenBabel_1_1OBRing.shtml#a58f4b9e873b7c1c7d512bd9f7d1489d8">Size()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000068"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#abaa1b786f36fb9bc98b5c46e74425056">OBRotor::GetDelta</a>  ()</dt>
<dd>Has no effect.  </dd>
<dt><a class="anchor" id="_deprecated000071"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#ab690ce98b2f06352f9079eeae94da3c4">OBRotor::GetEvalAtoms</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000069"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a937745b1178a21d8b223992d16d7d50a">OBRotor::GetFixedAtoms</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000074"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a8feebfa38afe9888e7a50e421b8f5243">OBRotor::GetResolution</a>  ()</dt>
<dd>Bad name, see <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a0595d2cb4644a0491448a4c001edbb71">GetTorsionValues()</a>  </dd>
<dt><a class="anchor" id="_deprecated000073"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#aa68d318d4f18049ca83fbbe8d1c5fa90">OBRotor::GetRotAtoms</a>  ()</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000067"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a800aee2a9873012ac7e2a1bcedd5c6ba">OBRotor::SetDelta</a>  (double d)</dt>
<dd>Has no effect.  </dd>
<dt><a class="anchor" id="_deprecated000072"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a33bdb71641015f05a632ffaf76e7672a">OBRotor::SetEvalAtoms</a>  (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> &amp;bv)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000070"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a530a0fd1a1e312d489b367ac73e56bb7">OBRotor::SetFixedAtoms</a>  (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> &amp;bv)</dt>
<dd>See SetFixedBonds  </dd>
<dt><a class="anchor" id="_deprecated000075"></a>Member <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a4e82f80e2cd8faf3bce17c464ab1672c">OBRotor::SetNumCoords</a>  (int nc)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000078"></a>Member <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#acb5c0375aa5f28091792762a5f66f23e">OBRotorList::HasFixedAtoms</a>  ()</dt>
<dd>See <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#aa0258fc5190b093eb234530b7e09f60f">HasFixedBonds()</a>  </dd>
<dt><a class="anchor" id="_deprecated000076"></a>Member <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#af5b2891615e85e4fb9ff52d2931c6170">OBRotorList::IdentifyEvalAtoms</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol)</dt>
<dd>Not declared. Use <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a6acf77e0a6d65df4fe6d4d79831ed9d0">Setup()</a> for top-level functionality  </dd>
<dt><a class="anchor" id="_deprecated000079"></a>Member <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#adbf9e2936af60825abb7f7812ba8fae8">OBRotorList::IgnoreSymmetryRemoval</a>  ()</dt>
<dd>Currently has no effect  </dd>
<dt><a class="anchor" id="_deprecated000077"></a>Member <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#aaabb93aa1f24c335405418bfa3ead95b">OBRotorList::SetFixAtoms</a>  (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits. ">OBBitVec</a> &amp;fix)</dt>
<dd>See <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#ade6c00d93af1e19168894486ad6cbdba">SetFixedBonds()</a>  </dd>
<dt><a class="anchor" id="_deprecated000048"></a>Class <a class="el" href="classOpenBabel_1_1OBScoreGrid.shtml">OBScoreGrid</a>  </dt>
<dd>Will disappear in future versions. Use your own code.  </dd>
<dt><a class="anchor" id="_deprecated000065"></a>Member <a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a9aa91437a607c7d33353f38857add180">OBSmartsPattern::_growbond</a>  </dt>
<dd>(Not used)  </dd>
<dt><a class="anchor" id="_deprecated000085"></a>Member <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml#a9c5ec7f3f42fea1f014ac3f346c7aef4">OBTypeTable::Translate</a>  (char *to, const char *from)</dt>
<dd>Because there is no guarantee on the length of an atom type you should consider using std::string instead  </dd>
<dt><a class="anchor" id="_deprecated000029"></a>Member <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol, <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> *, bool ReZeroZ=true)</dt>
<dd>Use new <a class="el" href="group__stereo.shtml">Stereochemistry</a> classes.  </dd>
<dt><a class="anchor" id="_deprecated000028"></a>Member <a class="el" href="namespaceOpenBabel.shtml#ae050b0cbe133308c07688d2438155504">OpenBabel::construct_c_matrix</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;m)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000027"></a>Member <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;m)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000033"></a>Member <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol, <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> *atm, atomreftype i=input, atomreftype o=output)</dt>
<dd>Use new <a class="el" href="group__stereo.shtml">Stereochemistry</a> classes.  </dd>
<dt><a class="anchor" id="_deprecated000031"></a>Member <a class="el" href="namespaceOpenBabel.shtml#ad7009a91e72c28783be5346611efde3e">OpenBabel::GetChirality</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol, std::vector&lt; int &gt; &amp;chirality)</dt>
<dd>Use new <a class="el" href="group__stereo.shtml">Stereochemistry</a> classes.  </dd>
<dt><a class="anchor" id="_deprecated000032"></a>Member <a class="el" href="namespaceOpenBabel.shtml#a7483e613b770424c7f1ff797900b9987">OpenBabel::GetParity4Ref</a>  (std::vector&lt; unsigned int &gt; pref)</dt>
<dd>Use new <a class="el" href="group__stereo.shtml">Stereochemistry</a> classes.  </dd>
<dt><a class="anchor" id="_deprecated000026"></a>Member <a class="el" href="namespaceOpenBabel.shtml#af4c135379236431c7436651de978ef32">OpenBabel::GraphPotentials</a>  (<a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> &amp;mol, std::vector&lt; double &gt; &amp;pot)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000063"></a>Member <a class="el" href="namespaceOpenBabel.shtml#a362770307f86a3b9acd494d9ccbbcf51">OpenBabel::IsNear</a>  (const double &amp;a, const double &amp;b, const double epsilon)</dt>
<dd>Use <a class="el" href="namespaceOpenBabel.shtml#af464b3279bc3db8c58ca552ddb0e8e79">IsApprox()</a> instead  </dd>
<dt><a class="anchor" id="_deprecated000064"></a>Member <a class="el" href="namespaceOpenBabel.shtml#a29e51098e105d63b04b5517299d1b772">OpenBabel::IsNearZero</a>  (const double &amp;a, const double epsilon)</dt>
<dd></dd>
<dt><a class="anchor" id="_deprecated000030"></a>Member <a class="el" href="namespaceOpenBabel.shtml#a07c3e3dff340f78121cc2c15da53cdb2">OpenBabel::signed_volume</a>  (const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;a, const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;b, const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;c, const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;d)</dt>
<dd>Use new <a class="el" href="group__stereo.shtml">Stereochemistry</a> classes.  </dd>
<dt><a class="anchor" id="_deprecated000093"></a>Member <a class="el" href="namespaceOpenBabel.shtml#ac9aac27fe3b12d7201f8eb7cb95a3c57">OpenBabel::ThrowError</a>  (std::string &amp;str)</dt>
<dd>Throw an error through the <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml" title="Handle error messages, warnings, debugging information and the like. ">OpenBabel::OBMessageHandler</a> class  </dd>
<dt><a class="anchor" id="_deprecated000092"></a>Member <a class="el" href="namespaceOpenBabel.shtml#a32ba50e0b43cb1dfdf1978d1e72099c5">OpenBabel::ThrowError</a>  (char *str)</dt>
<dd>Throw an error through the <a class="el" href="classOpenBabel_1_1OBMessageHandler.shtml" title="Handle error messages, warnings, debugging information and the like. ">OpenBabel::OBMessageHandler</a> class  </dd>
<dt><a class="anchor" id="_deprecated000098"></a>Member <a class="el" href="namespaceOpenBabel.shtml#a00e2879019f2fb0fc689a7e5cb5d2008">OpenBabel::vectorAngle</a>  (const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;v1, const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;v2)</dt>
<dd>This method will probably replaced by a safer algorithm in the future. </dd>
<dt><a class="anchor" id="_deprecated000094"></a>Class <a class="el" href="classOpenBabel_1_1patty.shtml">patty</a>  </dt>
<dd>This code is currently not used by the Open Babel library. Instead, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges. ">OBAtomTyper</a> and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml" title="Assigns aromatic typing to atoms and bonds. ">OBAromaticTyper</a> are used. Unless there is interest in retaining this independent class, it will be removed in the future. </dd>
<dt><a class="anchor" id="_deprecated000083"></a>Member <a class="el" href="classOpenBabel_1_1vector3.shtml#ab7c3fdae52a4c4bc27354cb2411028e4">vector3::operator!=</a>  (const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;other) const</dt>
<dd>This method uses unreliable floating point == comparisons Use <a class="el" href="classOpenBabel_1_1vector3.shtml#aafb6c144d5be85832af8cf4346751c2d" title="Safe comparison for floating-point vector3. ">vector3::IsApprox()</a> instead.  </dd>
<dt><a class="anchor" id="_deprecated000082"></a>Member <a class="el" href="classOpenBabel_1_1vector3.shtml#afc691b83e01d075402e13b5d05646564">vector3::operator==</a>  (const <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> &amp;) const</dt>
<dd>This method uses unreliable floating point == comparisons Use <a class="el" href="classOpenBabel_1_1vector3.shtml#aafb6c144d5be85832af8cf4346751c2d" title="Safe comparison for floating-point vector3. ">vector3::IsApprox()</a> instead. </dd>
</dl>
</div></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
