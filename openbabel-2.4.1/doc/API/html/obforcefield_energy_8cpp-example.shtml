<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>obforcefield_energy.cpp</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">obforcefield_energy.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<p>Example showing how to compute the enrgy for a molecule.</p>
<div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="obconversion_8h.shtml">openbabel/obconversion.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="shared__ptr_8h.shtml">openbabel/shared_ptr.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="forcefield_8h.shtml">openbabel/forcefield.h</a>&gt;</span></div><div class="line"></div><div class="line"><span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">using namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a>;</div><div class="line"></div><div class="line"><span class="comment">// Helper function to read molecule from file</span></div><div class="line">shared_ptr&lt;OBMol&gt; GetMol(<span class="keyword">const</span> std::string &amp;filename)</div><div class="line">{</div><div class="line">  <span class="comment">// Create the OBMol object.</span></div><div class="line">  shared_ptr&lt;OBMol&gt; mol(<span class="keyword">new</span> <a name="_a0"></a><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>);</div><div class="line"></div><div class="line">  <span class="comment">// Create the OBConversion object.</span></div><div class="line">  <a name="_a1"></a><a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> conv;</div><div class="line">  <a name="_a2"></a><a class="code" href="classOpenBabel_1_1OBFormat.shtml">OBFormat</a> *format = conv.<a name="a3"></a><a class="code" href="classOpenBabel_1_1OBConversion.shtml#a3f85a8c30f5c913e08225f85c6bc020b">FormatFromExt</a>(filename.c_str());</div><div class="line">  <span class="keywordflow">if</span> (!format || !conv.<a name="a4"></a><a class="code" href="classOpenBabel_1_1OBConversion.shtml#a9ea0b4fd606d186df3973cfca1dfe601">SetInFormat</a>(format)) {</div><div class="line">    std::cout &lt;&lt; <span class="stringliteral">&quot;Could not find input format for file &quot;</span> &lt;&lt; filename &lt;&lt; std::endl;</div><div class="line">    <span class="keywordflow">return</span> mol;</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="comment">// Open the file.</span></div><div class="line">  std::ifstream ifs(filename.c_str());</div><div class="line">  <span class="keywordflow">if</span> (!ifs) {</div><div class="line">    std::cout &lt;&lt; <span class="stringliteral">&quot;Could not open &quot;</span> &lt;&lt; filename &lt;&lt; <span class="stringliteral">&quot; for reading.&quot;</span> &lt;&lt; std::endl;</div><div class="line">    <span class="keywordflow">return</span> mol;</div><div class="line">  }</div><div class="line">  <span class="comment">// Read the molecule.</span></div><div class="line">  <span class="keywordflow">if</span> (!conv.<a name="a5"></a><a class="code" href="classOpenBabel_1_1OBConversion.shtml#a1204f9b613067a04ebfe881a58775918">Read</a>(mol.get(), &amp;ifs)) {</div><div class="line">    std::cout &lt;&lt; <span class="stringliteral">&quot;Could not read molecule from file &quot;</span> &lt;&lt; filename &lt;&lt; std::endl;</div><div class="line">    <span class="keywordflow">return</span> mol;</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="keywordflow">return</span> mol;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div><div class="line">{</div><div class="line">  <span class="keywordflow">if</span> (argc &lt; 2) {</div><div class="line">    std::cout &lt;&lt; <span class="stringliteral">&quot;Usage: &quot;</span> &lt;&lt; argv[0] &lt;&lt; <span class="stringliteral">&quot; &lt;filename&gt;&quot;</span> &lt;&lt; std::endl;</div><div class="line">    <span class="keywordflow">return</span> 1;</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="comment">// Read the file.</span></div><div class="line">  shared_ptr&lt;OBMol&gt; mol = GetMol(argv[1]);</div><div class="line"></div><div class="line">  <span class="comment">// Get the forcefield.</span></div><div class="line">  <a name="_a6"></a><a class="code" href="classOpenBabel_1_1OBForceField.shtml">OBForceField</a> *ff = OBForceField::FindType(<span class="stringliteral">&quot;MMFF94&quot;</span>);</div><div class="line">  <span class="keywordflow">if</span> (!ff) {</div><div class="line">    std::cout &lt;&lt; <span class="stringliteral">&quot;Could not find forcefield.&quot;</span> &lt;&lt; std::endl;</div><div class="line">    <span class="keywordflow">return</span> 1;</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="comment">// Setup the forcefield.</span></div><div class="line">  <span class="keywordflow">if</span> (!ff-&gt;<a name="a7"></a><a class="code" href="classOpenBabel_1_1OBForceField.shtml#a85e63dfcf5b43e5ae867815f0398c87e">Setup</a>(mol)) {</div><div class="line">    std::cout &lt;&lt; <span class="stringliteral">&quot;Could not setup forcefield.&quot;</span> &lt;&lt; std::endl;</div><div class="line">    <span class="keywordflow">return</span> 1;</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="comment">// Print the enegy and unit.</span></div><div class="line">  std::cout &lt;&lt; ff-&gt;<a name="a8"></a><a class="code" href="classOpenBabel_1_1OBForceField.shtml#ad9242de2f838fb94efcd85f7182a6f83">Energy</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; ff-&gt;<a name="a9"></a><a class="code" href="classOpenBabel_1_1OBForceField.shtml#a1107abae4af40cd96faa7385b4de79c2">GetUnit</a>() &lt;&lt; std::endl;</div><div class="line"></div><div class="line">  <span class="keywordflow">return</span> 0;</div><div class="line">}</div></div><!-- fragment --> </div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
