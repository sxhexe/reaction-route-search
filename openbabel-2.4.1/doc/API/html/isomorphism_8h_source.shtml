<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>isomorphism.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">isomorphism.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="isomorphism_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">  isomophism.h - OBIsomorphismMapper class for finding isomorphisms.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">  Copyright (C) 2010 by Tim Vandermeersch</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">  This file is part of the Open Babel project.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">  For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">  This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">  it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">  the Free Software Foundation; either version 2 of the License, or</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">  (at your option) any later version.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">  This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">  GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">  You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">  along with this program; if not, write to the Free Software</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">  02110-1301, USA.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> **********************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef OB_ISOMORPHISM_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define OB_ISOMORPHISM_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a> {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">class </span>OBQuery;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper.shtml">   76</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml">OBIsomorphismMapper</a></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a97df663c0fc8a3ba6e9113802cac5c82">   83</a></span>&#160;      <span class="keyword">typedef</span> std::vector&lt; std::pair&lt;unsigned int,unsigned int&gt; &gt; <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a97df663c0fc8a3ba6e9113802cac5c82">Mapping</a>;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#af45ae29000944170414da618d8d5d677">   88</a></span>&#160;      <span class="keyword">typedef</span> std::vector&lt; Mapping &gt; <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#af45ae29000944170414da618d8d5d677">Mappings</a>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml">OBIsomorphismMapper</a>(<a class="code" href="classOpenBabel_1_1OBQuery.shtml">OBQuery</a> *query);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml">OBIsomorphismMapper</a>();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml">OBIsomorphismMapper</a>* GetInstance(<a class="code" href="classOpenBabel_1_1OBQuery.shtml">OBQuery</a> *query, <span class="keyword">const</span> std::string &amp;algorithm = std::string(<span class="stringliteral">&quot;VF2&quot;</span>));</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">void</span> MapFirst(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *queried, Mapping &amp;map, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;mask = <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>()) = 0;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">void</span> MapUnique(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *queried, Mappings &amp;maps, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;mask = <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>()) = 0;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">void</span> MapAll(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *queried, Mappings &amp;maps, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;mask = <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>(), std::size_t maxMemory = 3000000) = 0;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml">  147</a></span>&#160;      <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml">Functor</a></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml#ab890a520140b6cc0c5f5fe05a6bf4f10">  150</a></span>&#160;          <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml#ab890a520140b6cc0c5f5fe05a6bf4f10">~Functor</a>() {}</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;          <span class="keyword">virtual</span> <span class="keywordtype">bool</span> operator()(Mapping &amp;map) = 0;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      };</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">void</span> MapGeneric(<a class="code" href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml">Functor</a> &amp;functor, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *queried, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;mask = <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>()) = 0;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a3f1b7a8e3d742835665503376bf8643d">  174</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a3f1b7a8e3d742835665503376bf8643d">SetTimeout</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> seconds) { m_timeout = seconds; }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a095cd6b4cbaab0cba9c46ea592ed899c">  177</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBQuery.shtml">OBQuery</a> *<a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a095cd6b4cbaab0cba9c46ea592ed899c">m_query</a>; </div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#acda4225670d6511a6b4055aa91a387f9">  178</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#acda4225670d6511a6b4055aa91a387f9">m_timeout</a>; </div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  };</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="group__substructure.shtml#ga4edd651fb377c60f3b7ac2f48b7f5e57">  181</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="group__substructure.shtml#ga4edd651fb377c60f3b7ac2f48b7f5e57">MapsTo</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a97df663c0fc8a3ba6e9113802cac5c82">OBIsomorphismMapper::Mapping</a> &amp;map, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> queryIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;queriedIndex)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    OBIsomorphismMapper::Mapping::const_iterator i;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">for</span> (i = map.begin(); i != map.end(); ++i)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordflow">if</span> (i-&gt;first == queryIndex) {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        queriedIndex = i-&gt;second;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="group__substructure.shtml#ga9373f6c3f788157de6f03c9403be34c4">  199</a></span>&#160;  <span class="keyword">typedef</span> <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a97df663c0fc8a3ba6e9113802cac5c82">OBIsomorphismMapper::Mapping</a> <a class="code" href="group__substructure.shtml#ga9373f6c3f788157de6f03c9403be34c4">Automorphism</a>;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="group__substructure.shtml#ga6179e6c11d4f797e8d0ef6ac5c9f25a8">  205</a></span>&#160;  <span class="keyword">typedef</span> <a class="code" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#af45ae29000944170414da618d8d5d677">OBIsomorphismMapper::Mappings</a> <a class="code" href="group__substructure.shtml#ga6179e6c11d4f797e8d0ef6ac5c9f25a8">Automorphisms</a>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  OBAPI <span class="keywordtype">bool</span> <a class="code" href="group__substructure.shtml#ga16841a730cf92c8e51a804ad8d746307">FindAutomorphisms</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol, std::vector&lt;OBIsomorphismMapper::Mapping&gt; &amp;aut, <span class="keyword">const</span> std::vector&lt;unsigned int&gt; &amp;symmetry_classes,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;mask = <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>(), std::size_t maxMemory = 3000000);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  OBAPI <span class="keywordtype">bool</span> <a class="code" href="group__substructure.shtml#ga16841a730cf92c8e51a804ad8d746307">FindAutomorphisms</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol, std::vector&lt;OBIsomorphismMapper::Mapping&gt; &amp;aut, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;mask = <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>(),</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      std::size_t maxMemory = 3000000);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  OBAPI <span class="keywordtype">void</span> <a class="code" href="group__substructure.shtml#ga16841a730cf92c8e51a804ad8d746307">FindAutomorphisms</a>(<a class="code" href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml">OBIsomorphismMapper::Functor</a> &amp;functor, <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      <span class="keyword">const</span> std::vector&lt;unsigned int&gt; &amp;symmetry_classes, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;mask = <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>());</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;}</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBQuery_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBQuery.shtml">OpenBabel::OBQuery</a></div><div class="ttdoc">A substructure query. </div><div class="ttdef"><b>Definition:</b> query.h:195</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml">OpenBabel::OBIsomorphismMapper::Functor</a></div><div class="ttdoc">Functor base class to be used in combination with MapGeneric. </div><div class="ttdef"><b>Definition:</b> isomorphism.h:147</div></div>
<div class="ttc" id="group__substructure_shtml_ga6179e6c11d4f797e8d0ef6ac5c9f25a8"><div class="ttname"><a href="group__substructure.shtml#ga6179e6c11d4f797e8d0ef6ac5c9f25a8">OpenBabel::Automorphisms</a></div><div class="ttdeci">OBIsomorphismMapper::Mappings Automorphisms</div><div class="ttdoc">A group of automorphic permutations. </div><div class="ttdef"><b>Definition:</b> isomorphism.h:205</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:113</div></div>
<div class="ttc" id="mol_8h_shtml"><div class="ttname"><a href="mol_8h.shtml">mol.h</a></div><div class="ttdoc">Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel) ...</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBitVec_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBitVec.shtml">OpenBabel::OBBitVec</a></div><div class="ttdoc">A speed-optimized vector of bits. </div><div class="ttdef"><b>Definition:</b> bitvec.h:57</div></div>
<div class="ttc" id="group__substructure_shtml_ga16841a730cf92c8e51a804ad8d746307"><div class="ttname"><a href="group__substructure.shtml#ga16841a730cf92c8e51a804ad8d746307">OpenBabel::FindAutomorphisms</a></div><div class="ttdeci">bool FindAutomorphisms(OBMol *mol, std::vector&lt; OBIsomorphismMapper::Mapping &gt; &amp;aut, const std::vector&lt; unsigned int &gt; &amp;symmetry_classes, const OBBitVec &amp;mask=OBBitVec(), std::size_t maxMemory=3000000)</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_shtml_a3f1b7a8e3d742835665503376bf8643d"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a3f1b7a8e3d742835665503376bf8643d">OpenBabel::OBIsomorphismMapper::SetTimeout</a></div><div class="ttdeci">void SetTimeout(unsigned int seconds)</div><div class="ttdef"><b>Definition:</b> isomorphism.h:174</div></div>
<div class="ttc" id="group__substructure_shtml_ga9373f6c3f788157de6f03c9403be34c4"><div class="ttname"><a href="group__substructure.shtml#ga9373f6c3f788157de6f03c9403be34c4">OpenBabel::Automorphism</a></div><div class="ttdeci">OBIsomorphismMapper::Mapping Automorphism</div><div class="ttdoc">A single automorphic permutation. </div><div class="ttdef"><b>Definition:</b> isomorphism.h:199</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_shtml_a97df663c0fc8a3ba6e9113802cac5c82"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a97df663c0fc8a3ba6e9113802cac5c82">OpenBabel::OBIsomorphismMapper::Mapping</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt; &gt; Mapping</div><div class="ttdef"><b>Definition:</b> isomorphism.h:83</div></div>
<div class="ttc" id="group__substructure_shtml_ga4edd651fb377c60f3b7ac2f48b7f5e57"><div class="ttname"><a href="group__substructure.shtml#ga4edd651fb377c60f3b7ac2f48b7f5e57">OpenBabel::MapsTo</a></div><div class="ttdeci">bool MapsTo(const OBIsomorphismMapper::Mapping &amp;map, unsigned int queryIndex, unsigned int &amp;queriedIndex)</div><div class="ttdef"><b>Definition:</b> isomorphism.h:181</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_shtml_a095cd6b4cbaab0cba9c46ea592ed899c"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a095cd6b4cbaab0cba9c46ea592ed899c">OpenBabel::OBIsomorphismMapper::m_query</a></div><div class="ttdeci">OBQuery * m_query</div><div class="ttdoc">The search query. </div><div class="ttdef"><b>Definition:</b> isomorphism.h:177</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_shtml_acda4225670d6511a6b4055aa91a387f9"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper.shtml#acda4225670d6511a6b4055aa91a387f9">OpenBabel::OBIsomorphismMapper::m_timeout</a></div><div class="ttdeci">unsigned int m_timeout</div><div class="ttdoc">The timeout in seconds. </div><div class="ttdef"><b>Definition:</b> isomorphism.h:178</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper.shtml">OpenBabel::OBIsomorphismMapper</a></div><div class="ttdoc">Abstract class defining interface for isomorphism (i.e. substructure) searches. </div><div class="ttdef"><b>Definition:</b> isomorphism.h:76</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_shtml_af45ae29000944170414da618d8d5d677"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper.shtml#af45ae29000944170414da618d8d5d677">OpenBabel::OBIsomorphismMapper::Mappings</a></div><div class="ttdeci">std::vector&lt; Mapping &gt; Mappings</div><div class="ttdef"><b>Definition:</b> isomorphism.h:88</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor_shtml_ab890a520140b6cc0c5f5fe05a6bf4f10"><div class="ttname"><a href="classOpenBabel_1_1OBIsomorphismMapper_1_1Functor.shtml#ab890a520140b6cc0c5f5fe05a6bf4f10">OpenBabel::OBIsomorphismMapper::Functor::~Functor</a></div><div class="ttdeci">virtual ~Functor()</div><div class="ttdef"><b>Definition:</b> isomorphism.h:150</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:29 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
