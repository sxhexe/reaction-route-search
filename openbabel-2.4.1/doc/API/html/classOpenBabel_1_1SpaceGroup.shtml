<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>SpaceGroup Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1SpaceGroup-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SpaceGroup Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="spacegroup_8h_source.shtml">openbabel/math/spacegroup.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaff95ae977a162888b91b1dd9a385c37"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#aaff95ae977a162888b91b1dd9a385c37">SpaceGroup</a> ()</td></tr>
<tr class="separator:aaff95ae977a162888b91b1dd9a385c37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cba611670b2b7c8754242b5f500cdec"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a6cba611670b2b7c8754242b5f500cdec">~SpaceGroup</a> ()</td></tr>
<tr class="separator:a6cba611670b2b7c8754242b5f500cdec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac8bbb3e3c283722a681c012daf6d31d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#aac8bbb3e3c283722a681c012daf6d31d">SetHMName</a> (const char *name)</td></tr>
<tr class="separator:aac8bbb3e3c283722a681c012daf6d31d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a187cb02cf6cfc7ff146f12940c1ba4a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a187cb02cf6cfc7ff146f12940c1ba4a1">SetHMName</a> (const std::string &amp;name)</td></tr>
<tr class="separator:a187cb02cf6cfc7ff146f12940c1ba4a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7455f5d6c96b0ae2e36fc11965c34bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#ae7455f5d6c96b0ae2e36fc11965c34bc">SetHallName</a> (const char *name)</td></tr>
<tr class="separator:ae7455f5d6c96b0ae2e36fc11965c34bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50e5af834059842019b2383154556856"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a50e5af834059842019b2383154556856">SetHallName</a> (const std::string &amp;name)</td></tr>
<tr class="separator:a50e5af834059842019b2383154556856"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c8d608f8b5fa8c20b79b2f3780d2ba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#ac5c8d608f8b5fa8c20b79b2f3780d2ba">SetId</a> (unsigned n)</td></tr>
<tr class="separator:ac5c8d608f8b5fa8c20b79b2f3780d2ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6957eacc9ea85e6e67a9d964c6d4ced"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#ac6957eacc9ea85e6e67a9d964c6d4ced">AddTransform</a> (const std::string &amp;s)</td></tr>
<tr class="separator:ac6957eacc9ea85e6e67a9d964c6d4ced"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f74bb3ee0fd76fa95d0803364470401"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a1f74bb3ee0fd76fa95d0803364470401">GetHMName</a> () const</td></tr>
<tr class="separator:a1f74bb3ee0fd76fa95d0803364470401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68b2ef9f136f90decf6034ed11bc7814"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a68b2ef9f136f90decf6034ed11bc7814">GetHallName</a> () const</td></tr>
<tr class="separator:a68b2ef9f136f90decf6034ed11bc7814"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c2ca7d3ab453cf590c836893ae12754"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a8c2ca7d3ab453cf590c836893ae12754">GetId</a> () const</td></tr>
<tr class="separator:a8c2ca7d3ab453cf590c836893ae12754"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4b39937a5abae6000d09c5517ecfc7b"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#af4b39937a5abae6000d09c5517ecfc7b">GetOriginAlternative</a> () const</td></tr>
<tr class="separator:af4b39937a5abae6000d09c5517ecfc7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67793f32351fdcbd14b964539014274d"><td class="memItemLeft" align="right" valign="top">std::list&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a67793f32351fdcbd14b964539014274d">Transform</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v) const</td></tr>
<tr class="separator:a67793f32351fdcbd14b964539014274d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85df2a4fbd3cf118e437a3b727687f08"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const  *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a85df2a4fbd3cf118e437a3b727687f08">BeginTransform</a> (<a class="el" href="namespaceOpenBabel.shtml#a7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;i) const</td></tr>
<tr class="separator:a85df2a4fbd3cf118e437a3b727687f08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa65a6e83cc3cf6695531453aa2e93aa6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const  *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#aa65a6e83cc3cf6695531453aa2e93aa6">NextTransform</a> (<a class="el" href="namespaceOpenBabel.shtml#a7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;i) const</td></tr>
<tr class="separator:aa65a6e83cc3cf6695531453aa2e93aa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3053a7c0ada34598119f6768fdad5138"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a3053a7c0ada34598119f6768fdad5138">RegisterSpaceGroup</a> (int nb=0,...)</td></tr>
<tr class="separator:a3053a7c0ada34598119f6768fdad5138"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adffce32081f884ef3144d1f6cc0a1bbb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#adffce32081f884ef3144d1f6cc0a1bbb">operator==</a> (const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;) const</td></tr>
<tr class="separator:adffce32081f884ef3144d1f6cc0a1bbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae559d23a17136db88f4ef5132061f16d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#ae559d23a17136db88f4ef5132061f16d">operator!=</a> (const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;other) const</td></tr>
<tr class="separator:ae559d23a17136db88f4ef5132061f16d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac532c4b500b1a85ea22217f2c65a70ed"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#ac532c4b500b1a85ea22217f2c65a70ed">IsValid</a> () const</td></tr>
<tr class="separator:ac532c4b500b1a85ea22217f2c65a70ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a2787ce8a302b665bc4f059670f2e68ca"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a2787ce8a302b665bc4f059670f2e68ca">GetSpaceGroup</a> (char const *name)</td></tr>
<tr class="separator:a2787ce8a302b665bc4f059670f2e68ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95a213aecae334a88a385c647318361e"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a95a213aecae334a88a385c647318361e">GetSpaceGroup</a> (const std::string &amp;name)</td></tr>
<tr class="separator:a95a213aecae334a88a385c647318361e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c9e8975976f2e714078943728a800c5"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#a2c9e8975976f2e714078943728a800c5">GetSpaceGroup</a> (unsigned id)</td></tr>
<tr class="separator:a2c9e8975976f2e714078943728a800c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc5179fa55c4d176d458cadb7ffd2afe"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#adc5179fa55c4d176d458cadb7ffd2afe">Find</a> (<a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *group)</td></tr>
<tr class="separator:adc5179fa55c4d176d458cadb7ffd2afe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Handle crystallographic space group symmetry. </p>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1transform3d.shtml" title="Handle 3D transformations, such as space group definitions. ">transform3d</a> </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aaff95ae977a162888b91b1dd9a385c37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaff95ae977a162888b91b1dd9a385c37">&sect;&nbsp;</a></span>SpaceGroup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6cba611670b2b7c8754242b5f500cdec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cba611670b2b7c8754242b5f500cdec">&sect;&nbsp;</a></span>~SpaceGroup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aac8bbb3e3c283722a681c012daf6d31d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac8bbb3e3c283722a681c012daf6d31d">&sect;&nbsp;</a></span>SetHMName() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetHMName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a187cb02cf6cfc7ff146f12940c1ba4a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a187cb02cf6cfc7ff146f12940c1ba4a1">&sect;&nbsp;</a></span>SetHMName() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHMName </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae7455f5d6c96b0ae2e36fc11965c34bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7455f5d6c96b0ae2e36fc11965c34bc">&sect;&nbsp;</a></span>SetHallName() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetHallName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a50e5af834059842019b2383154556856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50e5af834059842019b2383154556856">&sect;&nbsp;</a></span>SetHallName() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetHallName </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5c8d608f8b5fa8c20b79b2f3780d2ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5c8d608f8b5fa8c20b79b2f3780d2ba">&sect;&nbsp;</a></span>SetId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetId </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac6957eacc9ea85e6e67a9d964c6d4ced"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6957eacc9ea85e6e67a9d964c6d4ced">&sect;&nbsp;</a></span>AddTransform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddTransform </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1f74bb3ee0fd76fa95d0803364470401"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f74bb3ee0fd76fa95d0803364470401">&sect;&nbsp;</a></span>GetHMName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; GetHMName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a68b2ef9f136f90decf6034ed11bc7814"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68b2ef9f136f90decf6034ed11bc7814">&sect;&nbsp;</a></span>GetHallName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; GetHallName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8c2ca7d3ab453cf590c836893ae12754"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c2ca7d3ab453cf590c836893ae12754">&sect;&nbsp;</a></span>GetId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned GetId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#adc5179fa55c4d176d458cadb7ffd2afe">SpaceGroup::Find()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a33f334e6dc0a506fa095d3c6ade71aec">OBUnitCell::GetLatticeType()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acdf326578eba3096d54adf5195bd615e">OBUnitCell::GetSpaceGroupNumber()</a>.</p>

</div>
</div>
<a id="af4b39937a5abae6000d09c5517ecfc7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4b39937a5abae6000d09c5517ecfc7b">&sect;&nbsp;</a></span>GetOriginAlternative()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetOriginAlternative </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a67793f32351fdcbd14b964539014274d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67793f32351fdcbd14b964539014274d">&sect;&nbsp;</a></span>Transform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">list&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt; Transform </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div>
<a id="a85df2a4fbd3cf118e437a3b727687f08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85df2a4fbd3cf118e437a3b727687f08">&sect;&nbsp;</a></span>BeginTransform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const  * BeginTransform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa65a6e83cc3cf6695531453aa2e93aa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa65a6e83cc3cf6695531453aa2e93aa6">&sect;&nbsp;</a></span>NextTransform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> const  * NextTransform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a7ae0ba0c317c360c22eaa4b481e2dc87">transform3dIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2787ce8a302b665bc4f059670f2e68ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2787ce8a302b665bc4f059670f2e68ca">&sect;&nbsp;</a></span>GetSpaceGroup() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * GetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">char const *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a76ccdf2ccfbefae104ff52932dcf11c1">OBUnitCell::SetSpaceGroup()</a>.</p>

</div>
</div>
<a id="a95a213aecae334a88a385c647318361e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95a213aecae334a88a385c647318361e">&sect;&nbsp;</a></span>GetSpaceGroup() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * GetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c9e8975976f2e714078943728a800c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c9e8975976f2e714078943728a800c5">&sect;&nbsp;</a></span>GetSpaceGroup() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * GetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adc5179fa55c4d176d458cadb7ffd2afe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc5179fa55c4d176d458cadb7ffd2afe">&sect;&nbsp;</a></span>Find()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> * Find </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3053a7c0ada34598119f6768fdad5138"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3053a7c0ada34598119f6768fdad5138">&sect;&nbsp;</a></span>RegisterSpaceGroup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nb</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adffce32081f884ef3144d1f6cc0a1bbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adffce32081f884ef3144d1f6cc0a1bbb">&sect;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>sg</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae559d23a17136db88f4ef5132061f16d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae559d23a17136db88f4ef5132061f16d">&sect;&nbsp;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac532c4b500b1a85ea22217f2c65a70ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac532c4b500b1a85ea22217f2c65a70ed">&sect;&nbsp;</a></span>IsValid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsValid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#adc5179fa55c4d176d458cadb7ffd2afe">SpaceGroup::Find()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="spacegroup_8h_source.shtml">spacegroup.h</a></li>
<li><a class="el" href="spacegroup_8cpp.shtml">spacegroup.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
