<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBAtom Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBAtom-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBAtom Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="atom_8h_source.shtml">openbabel/atom.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBAtom:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBAtom.png" usemap="#OBAtom_map" alt=""/>
  <map id="OBAtom_map" name="OBAtom_map">
<area href="classOpenBabel_1_1OBBase.shtml" title="Base Class. " alt="OBBase" shape="rect" coords="0,0,58,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afbdb429fe4a7d37960636a555de77326"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afbdb429fe4a7d37960636a555de77326">StereoFlag</a> </td></tr>
<tr class="separator:afbdb429fe4a7d37960636a555de77326"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad5b5ccb4d16c9ce269b65ccc4e7fa1ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad5b5ccb4d16c9ce269b65ccc4e7fa1ae">OBAtom</a> ()</td></tr>
<tr class="separator:ad5b5ccb4d16c9ce269b65ccc4e7fa1ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52876d92719e68259ca43bf5cd19349a"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a52876d92719e68259ca43bf5cd19349a">~OBAtom</a> ()</td></tr>
<tr class="separator:a52876d92719e68259ca43bf5cd19349a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fa1416db7f7f223cb5d77cc7a916f2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3fa1416db7f7f223cb5d77cc7a916f2e">operator=</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;)</td></tr>
<tr class="separator:a3fa1416db7f7f223cb5d77cc7a916f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86f5522afaa8e213fd39c0ab71cc4ac1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a86f5522afaa8e213fd39c0ab71cc4ac1">operator==</a> (const <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *other) const</td></tr>
<tr class="separator:a86f5522afaa8e213fd39c0ab71cc4ac1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2ee969f23433f548e39a909547869c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">Duplicate</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr class="separator:af2ee969f23433f548e39a909547869c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad12fd937da5f4b0c4562888252fe214b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad12fd937da5f4b0c4562888252fe214b">Clear</a> ()</td></tr>
<tr class="separator:ad12fd937da5f4b0c4562888252fe214b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae93c2ea0464618c797ae509fb3f3f455"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae93c2ea0464618c797ae509fb3f3f455">GetDistance</a> (int index)</td></tr>
<tr class="separator:ae93c2ea0464618c797ae509fb3f3f455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2a0e52810ad157f41a9ecbbae90ee48"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac2a0e52810ad157f41a9ecbbae90ee48">GetDistance</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr class="separator:ac2a0e52810ad157f41a9ecbbae90ee48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a247959fa683036745a1daca24fd4b219"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a247959fa683036745a1daca24fd4b219">GetDistance</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> *v)</td></tr>
<tr class="separator:a247959fa683036745a1daca24fd4b219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02dada3ad01505b2d4ddcbe7b9f006c8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a02dada3ad01505b2d4ddcbe7b9f006c8">GetAngle</a> (int b, int c)</td></tr>
<tr class="separator:a02dada3ad01505b2d4ddcbe7b9f006c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d6d9bdda3f480d358c14b2010034d41"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6d6d9bdda3f480d358c14b2010034d41">GetAngle</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *b, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *c)</td></tr>
<tr class="separator:a6d6d9bdda3f480d358c14b2010034d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdc8ffeb0749b563e1108a9ceaa0b394"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *, <a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *)</td></tr>
<tr class="separator:abdc8ffeb0749b563e1108a9ceaa0b394"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">CastAndClear</a> (bool clear=true)</td></tr>
<tr class="separator:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a6c35f6a88ad291ed821c856e4d887f"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a0a6c35f6a88ad291ed821c856e4d887f">GetTitle</a> (bool replaceNewlines=true) const</td></tr>
<tr class="separator:a0a6c35f6a88ad291ed821c856e4d887f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a366c8a142b8c16554597e82320dfd0e0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">SetTitle</a> (const char *)</td></tr>
<tr class="separator:a366c8a142b8c16554597e82320dfd0e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to set atomic information</div></td></tr>
<tr class="memitem:ab994a975e39f5c62288f4f972b6f90c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab994a975e39f5c62288f4f972b6f90c9">SetIdx</a> (int idx)</td></tr>
<tr class="separator:ab994a975e39f5c62288f4f972b6f90c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a383094c5a19383cf09f3dfb4c1de1da2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a383094c5a19383cf09f3dfb4c1de1da2">SetId</a> (unsigned long id)</td></tr>
<tr class="separator:a383094c5a19383cf09f3dfb4c1de1da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca5228f1b568f7076cd930ad0902a83"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a9ca5228f1b568f7076cd930ad0902a83">SetHyb</a> (int hyb)</td></tr>
<tr class="separator:a9ca5228f1b568f7076cd930ad0902a83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a573a9f96a971854938ab2db5eb4d4851"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a573a9f96a971854938ab2db5eb4d4851">SetAtomicNum</a> (int atomicnum)</td></tr>
<tr class="separator:a573a9f96a971854938ab2db5eb4d4851"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b69b7f0259fe3dcbde073f36ebf1c8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a90b69b7f0259fe3dcbde073f36ebf1c8">SetIsotope</a> (unsigned int iso)</td></tr>
<tr class="separator:a90b69b7f0259fe3dcbde073f36ebf1c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ebf98749415a00a56fdbc77f87fdc87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4ebf98749415a00a56fdbc77f87fdc87">SetImplicitValence</a> (int val)</td></tr>
<tr class="separator:a4ebf98749415a00a56fdbc77f87fdc87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae048690c14e9258cc653231a56d5dfda"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae048690c14e9258cc653231a56d5dfda">IncrementImplicitValence</a> ()</td></tr>
<tr class="separator:ae048690c14e9258cc653231a56d5dfda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7acb91a903a31d698dc25d296b988f7f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7acb91a903a31d698dc25d296b988f7f">DecrementImplicitValence</a> ()</td></tr>
<tr class="separator:a7acb91a903a31d698dc25d296b988f7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d084182d025e6fa000b928807d7689"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa1d084182d025e6fa000b928807d7689">SetFormalCharge</a> (int fcharge)</td></tr>
<tr class="separator:aa1d084182d025e6fa000b928807d7689"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a299285ee1effd21803b3c042a376e149"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a299285ee1effd21803b3c042a376e149">SetSpinMultiplicity</a> (short spin)</td></tr>
<tr class="separator:a299285ee1effd21803b3c042a376e149"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a473f946fc45e9a7e5479d260e4cfd107"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a473f946fc45e9a7e5479d260e4cfd107">SetType</a> (const char *type)</td></tr>
<tr class="separator:a473f946fc45e9a7e5479d260e4cfd107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd853960ce2a2382a7d2d451d5ab450"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aadd853960ce2a2382a7d2d451d5ab450">SetType</a> (const std::string &amp;type)</td></tr>
<tr class="separator:aadd853960ce2a2382a7d2d451d5ab450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a963851351ab3c084233a82d367f15607"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a963851351ab3c084233a82d367f15607">SetPartialCharge</a> (double pcharge)</td></tr>
<tr class="separator:a963851351ab3c084233a82d367f15607"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b9594d66359ec366d2590459d0b617f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3b9594d66359ec366d2590459d0b617f">SetVector</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>
<tr class="separator:a3b9594d66359ec366d2590459d0b617f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad69e26aebea5d59b5d79ccd514631297"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad69e26aebea5d59b5d79ccd514631297">SetVector</a> (const double <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a833e1cf314b7b7a5537b2b6a56fee6a5">x</a>, const double <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aca424ddaf2902c1cde483f37813d4278">y</a>, const double <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae7bc7213001e326be4d4eb2d8a035c34">z</a>)</td></tr>
<tr class="separator:ad69e26aebea5d59b5d79ccd514631297"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff361260a8a4e9ea703d5d38f5fc671"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671">SetCoordPtr</a> (double **c)</td></tr>
<tr class="separator:aeff361260a8a4e9ea703d5d38f5fc671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f11d9c7a42f6be6e4b6272526f3ad09"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5f11d9c7a42f6be6e4b6272526f3ad09">SetVector</a> ()</td></tr>
<tr class="separator:a5f11d9c7a42f6be6e4b6272526f3ad09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade786f15ee67979fbb9c48970b22e184"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184">SetResidue</a> (<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *res)</td></tr>
<tr class="separator:ade786f15ee67979fbb9c48970b22e184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a962b3010305cfb80ba816a0e54097dee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a962b3010305cfb80ba816a0e54097dee">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *ptr)</td></tr>
<tr class="separator:a962b3010305cfb80ba816a0e54097dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d29498c15007d9b6729e26784f23a5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3d29498c15007d9b6729e26784f23a5b">SetAromatic</a> ()</td></tr>
<tr class="separator:a3d29498c15007d9b6729e26784f23a5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fcf3bf429f36281a43c879e40e75f34"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2fcf3bf429f36281a43c879e40e75f34">UnsetAromatic</a> ()</td></tr>
<tr class="separator:a2fcf3bf429f36281a43c879e40e75f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf069c94123595712cb7fa847b87e449"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#adf069c94123595712cb7fa847b87e449">SetClockwiseStereo</a> ()</td></tr>
<tr class="separator:adf069c94123595712cb7fa847b87e449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af328f0aa99465103074b1d336c393919"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af328f0aa99465103074b1d336c393919">SetAntiClockwiseStereo</a> ()</td></tr>
<tr class="separator:af328f0aa99465103074b1d336c393919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ddbbbc5f8e185c43e634a0425311275"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6ddbbbc5f8e185c43e634a0425311275">SetPositiveStereo</a> ()</td></tr>
<tr class="separator:a6ddbbbc5f8e185c43e634a0425311275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea322d9d450ee48fb2e89a4f7c34deda"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aea322d9d450ee48fb2e89a4f7c34deda">SetNegativeStereo</a> ()</td></tr>
<tr class="separator:aea322d9d450ee48fb2e89a4f7c34deda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdf42f73fe8a0cec0db3c3e544830fcc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afdf42f73fe8a0cec0db3c3e544830fcc">UnsetStereo</a> ()</td></tr>
<tr class="separator:afdf42f73fe8a0cec0db3c3e544830fcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6a016e7f67cf564e5f80254c425f65c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae6a016e7f67cf564e5f80254c425f65c">SetInRing</a> ()</td></tr>
<tr class="separator:ae6a016e7f67cf564e5f80254c425f65c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4e5a4c67101743f644b047b632d058b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad4e5a4c67101743f644b047b632d058b">SetChiral</a> ()</td></tr>
<tr class="separator:ad4e5a4c67101743f644b047b632d058b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fa3634d92a924e5af69208768e839a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3fa3634d92a924e5af69208768e839a5">ClearCoordPtr</a> ()</td></tr>
<tr class="separator:a3fa3634d92a924e5af69208768e839a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to retrieve atomic information</div></td></tr>
<tr class="memitem:a34d5bb9535dadccfdaaae8b98dab2078"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a34d5bb9535dadccfdaaae8b98dab2078">GetFormalCharge</a> () const</td></tr>
<tr class="separator:a34d5bb9535dadccfdaaae8b98dab2078"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90250b249ffa0fcb4daa83bde1ff4614"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a90250b249ffa0fcb4daa83bde1ff4614">GetAtomicNum</a> () const</td></tr>
<tr class="separator:a90250b249ffa0fcb4daa83bde1ff4614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad61d9e7b9ecdf9ac58a7f0a65a50b066"><td class="memItemLeft" align="right" valign="top">unsigned short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad61d9e7b9ecdf9ac58a7f0a65a50b066">GetIsotope</a> () const</td></tr>
<tr class="separator:ad61d9e7b9ecdf9ac58a7f0a65a50b066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a546f896e98331fe14e5746c53a4a543f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a546f896e98331fe14e5746c53a4a543f">GetSpinMultiplicity</a> () const</td></tr>
<tr class="separator:a546f896e98331fe14e5746c53a4a543f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c881c14b105f45a8d7f555aedc12964"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2c881c14b105f45a8d7f555aedc12964">GetAtomicMass</a> () const</td></tr>
<tr class="separator:a2c881c14b105f45a8d7f555aedc12964"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab36dd05b9bb678077bbfd52a952ca72a"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab36dd05b9bb678077bbfd52a952ca72a">GetExactMass</a> () const</td></tr>
<tr class="separator:ab36dd05b9bb678077bbfd52a952ca72a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44b77545e83209582e42f375c8f40474"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a> () const</td></tr>
<tr class="separator:a44b77545e83209582e42f375c8f40474"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadfb6c1a92a9a3c0187c1099e75b6583"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aadfb6c1a92a9a3c0187c1099e75b6583">GetIndex</a> () const</td></tr>
<tr class="separator:aadfb6c1a92a9a3c0187c1099e75b6583"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dd98e3e99e394dce75b285c451028b1"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6dd98e3e99e394dce75b285c451028b1">GetId</a> () const</td></tr>
<tr class="separator:a6dd98e3e99e394dce75b285c451028b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a534869887e7780bf59a97b9c7e38cac9"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a534869887e7780bf59a97b9c7e38cac9">GetCoordinateIdx</a> () const</td></tr>
<tr class="separator:a534869887e7780bf59a97b9c7e38cac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a036023769d4fee171548943838fa0df1"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a036023769d4fee171548943838fa0df1">GetCIdx</a> () const</td></tr>
<tr class="separator:a036023769d4fee171548943838fa0df1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bb9aaaed179e592414edfa0331788f6"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7bb9aaaed179e592414edfa0331788f6">GetValence</a> () const</td></tr>
<tr class="separator:a7bb9aaaed179e592414edfa0331788f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cfb24ccc82420ec902371aafa91d67e"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5cfb24ccc82420ec902371aafa91d67e">GetHyb</a> () const</td></tr>
<tr class="separator:a5cfb24ccc82420ec902371aafa91d67e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f36aa26768975a23a6c7b819e79cc0"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad9f36aa26768975a23a6c7b819e79cc0">GetImplicitValence</a> () const</td></tr>
<tr class="separator:ad9f36aa26768975a23a6c7b819e79cc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7fc4fb37c3e28286d47d36b812303d9"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa7fc4fb37c3e28286d47d36b812303d9">GetHvyValence</a> () const</td></tr>
<tr class="separator:aa7fc4fb37c3e28286d47d36b812303d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03272525cd445da2a6ec5507c62fdbda"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a03272525cd445da2a6ec5507c62fdbda">GetHeteroValence</a> () const</td></tr>
<tr class="separator:a03272525cd445da2a6ec5507c62fdbda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f02f5442f2ed3aa2045587d3319ab7e"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7f02f5442f2ed3aa2045587d3319ab7e">GetType</a> ()</td></tr>
<tr class="separator:a7f02f5442f2ed3aa2045587d3319ab7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac302cda48a4a650a3f8cf1dfe9a0cb1e"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac302cda48a4a650a3f8cf1dfe9a0cb1e">GetX</a> () const</td></tr>
<tr class="separator:ac302cda48a4a650a3f8cf1dfe9a0cb1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c302e1e24ca25bc362746dc51c22510"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2c302e1e24ca25bc362746dc51c22510">GetY</a> () const</td></tr>
<tr class="separator:a2c302e1e24ca25bc362746dc51c22510"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e4abcd59d8d2c945e851ed92593826"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad5e4abcd59d8d2c945e851ed92593826">GetZ</a> () const</td></tr>
<tr class="separator:ad5e4abcd59d8d2c945e851ed92593826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a833e1cf314b7b7a5537b2b6a56fee6a5"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a833e1cf314b7b7a5537b2b6a56fee6a5">x</a> () const</td></tr>
<tr class="separator:a833e1cf314b7b7a5537b2b6a56fee6a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca424ddaf2902c1cde483f37813d4278"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aca424ddaf2902c1cde483f37813d4278">y</a> () const</td></tr>
<tr class="separator:aca424ddaf2902c1cde483f37813d4278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7bc7213001e326be4d4eb2d8a035c34"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae7bc7213001e326be4d4eb2d8a035c34">z</a> () const</td></tr>
<tr class="separator:ae7bc7213001e326be4d4eb2d8a035c34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9dd6c6924f23479933e0b8779a4bec2"><td class="memItemLeft" align="right" valign="top">double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a> ()</td></tr>
<tr class="separator:af9dd6c6924f23479933e0b8779a4bec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad15ec0c7f87cea35b02269fd53be159c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad15ec0c7f87cea35b02269fd53be159c">GetVector</a> ()</td></tr>
<tr class="separator:ad15ec0c7f87cea35b02269fd53be159c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfb61c187228a966c63ec0c68da89d4a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#adfb61c187228a966c63ec0c68da89d4a">GetVector</a> () const</td></tr>
<tr class="separator:adfb61c187228a966c63ec0c68da89d4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeccf78db112723467e7756a5734c82b9"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeccf78db112723467e7756a5734c82b9">GetPartialCharge</a> ()</td></tr>
<tr class="separator:aeccf78db112723467e7756a5734c82b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8533afa0177a165ca51941872f85aee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae8533afa0177a165ca51941872f85aee">GetResidue</a> ()</td></tr>
<tr class="separator:ae8533afa0177a165ca51941872f85aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afac526c6de01759b568caddae4c4f2c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afac526c6de01759b568caddae4c4f2c3">GetResidue</a> (bool perception)</td></tr>
<tr class="separator:afac526c6de01759b568caddae4c4f2c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8480b61159bc6cb861b17341dc2b29a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad8480b61159bc6cb861b17341dc2b29a">GetParent</a> ()</td></tr>
<tr class="separator:ad8480b61159bc6cb861b17341dc2b29a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a818650a1b97f10bbc2204520ef65ad27"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a818650a1b97f10bbc2204520ef65ad27">GetNewBondVector</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v, double length)</td></tr>
<tr class="separator:a818650a1b97f10bbc2204520ef65ad27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed271572fc66bbef1751cac6ccf3cade"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aed271572fc66bbef1751cac6ccf3cade">GetBond</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr class="separator:aed271572fc66bbef1751cac6ccf3cade"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3bbdba4326cf884eeb110b02f7caef7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad3bbdba4326cf884eeb110b02f7caef7">GetNextAtom</a> ()</td></tr>
<tr class="separator:ad3bbdba4326cf884eeb110b02f7caef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr class="memitem:ac4ea48df79e239b506d3501dd42adde9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac4ea48df79e239b506d3501dd42adde9">BeginBonds</a> ()</td></tr>
<tr class="separator:ac4ea48df79e239b506d3501dd42adde9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87859f951e8ea33345b76d93014486c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a87859f951e8ea33345b76d93014486c9">EndBonds</a> ()</td></tr>
<tr class="separator:a87859f951e8ea33345b76d93014486c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d21c9b65678905c6d7d461160fcd9f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad9d21c9b65678905c6d7d461160fcd9f">BeginBond</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr class="separator:ad9d21c9b65678905c6d7d461160fcd9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a133c681e9534e7255b1fae272c40a511"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a133c681e9534e7255b1fae272c40a511">NextBond</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr class="separator:a133c681e9534e7255b1fae272c40a511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60c99e07cbd015b89dd0f41525150a74"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a60c99e07cbd015b89dd0f41525150a74">BeginNbrAtom</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr class="separator:a60c99e07cbd015b89dd0f41525150a74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37ef92842ef05f2084102f45b6a05caa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a37ef92842ef05f2084102f45b6a05caa">NextNbrAtom</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr class="separator:a37ef92842ef05f2084102f45b6a05caa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Addition of residue/bond info. for an atom</div></td></tr>
<tr class="memitem:a616b5aac27eec22be5be998bc15d6349"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a616b5aac27eec22be5be998bc15d6349">NewResidue</a> ()</td></tr>
<tr class="separator:a616b5aac27eec22be5be998bc15d6349"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e3b0d3b268e6abe26f87d4c422c31cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3e3b0d3b268e6abe26f87d4c422c31cd">AddResidue</a> (<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *res)</td></tr>
<tr class="separator:a3e3b0d3b268e6abe26f87d4c422c31cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85fa173a3c3f488fc691a11eaad81439"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a85fa173a3c3f488fc691a11eaad81439">DeleteResidue</a> ()</td></tr>
<tr class="separator:a85fa173a3c3f488fc691a11eaad81439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5abeab08afbd305a51b9a9b5bd8fe356"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5abeab08afbd305a51b9a9b5bd8fe356">AddBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr class="separator:a5abeab08afbd305a51b9a9b5bd8fe356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1773630938cf6a028368394b666d06bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1773630938cf6a028368394b666d06bf">InsertBond</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i, <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr class="separator:a1773630938cf6a028368394b666d06bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af47adec983369f903208f5fbae863406"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af47adec983369f903208f5fbae863406">DeleteBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr class="separator:af47adec983369f903208f5fbae863406"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03fe71c8266435b7a76682e5c1472894"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a03fe71c8266435b7a76682e5c1472894">ClearBond</a> ()</td></tr>
<tr class="separator:a03fe71c8266435b7a76682e5c1472894"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Builder utilities</div></td></tr>
<tr class="memitem:a51618686d8ad1b5f66ff2fc2c607493e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">HtoMethyl</a> ()</td></tr>
<tr class="separator:a51618686d8ad1b5f66ff2fc2c607493e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7a144a4ef755d5cc31e0d2e47a2e84a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">SetHybAndGeom</a> (int)</td></tr>
<tr class="separator:af7a144a4ef755d5cc31e0d2e47a2e84a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a92c9eb656eb9ef43f03c717a38adc3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1a92c9eb656eb9ef43f03c717a38adc3">ForceNoH</a> ()</td></tr>
<tr class="separator:a1a92c9eb656eb9ef43f03c717a38adc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55e8f858833eee0408aee7b0f1b9c22c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a55e8f858833eee0408aee7b0f1b9c22c">HasNoHForced</a> ()</td></tr>
<tr class="separator:a55e8f858833eee0408aee7b0f1b9c22c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03e54abd32434bd610bfd4430d91b7b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a03e54abd32434bd610bfd4430d91b7b9">ForceImplH</a> ()</td></tr>
<tr class="separator:a03e54abd32434bd610bfd4430d91b7b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8920c0ef5c32f64887d09c3b2da857d5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8920c0ef5c32f64887d09c3b2da857d5">HasImplHForced</a> ()</td></tr>
<tr class="separator:a8920c0ef5c32f64887d09c3b2da857d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Property information</div></td></tr>
<tr class="memitem:a3be22bbc7a222c8f7255a6f79d937cb4"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3be22bbc7a222c8f7255a6f79d937cb4">CountFreeOxygens</a> () const</td></tr>
<tr class="separator:a3be22bbc7a222c8f7255a6f79d937cb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9e3255d3d68b9d1d4ddd49989e7380"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#adc9e3255d3d68b9d1d4ddd49989e7380">CountFreeSulfurs</a> () const</td></tr>
<tr class="separator:adc9e3255d3d68b9d1d4ddd49989e7380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f16ab619578cd847cd1fa024f4ee708"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7f16ab619578cd847cd1fa024f4ee708">ImplicitHydrogenCount</a> () const</td></tr>
<tr class="separator:a7f16ab619578cd847cd1fa024f4ee708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43f36d8b94ce8835b79689adfa9afad8"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a43f36d8b94ce8835b79689adfa9afad8">ExplicitHydrogenCount</a> (bool ExcludeIsotopes=false) const</td></tr>
<tr class="separator:a43f36d8b94ce8835b79689adfa9afad8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef9a302705cda0731e77f82f3b1483a0"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aef9a302705cda0731e77f82f3b1483a0">MemberOfRingCount</a> () const</td></tr>
<tr class="separator:aef9a302705cda0731e77f82f3b1483a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4a516c81946e3a8c0ca80420358dbe2"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af4a516c81946e3a8c0ca80420358dbe2">MemberOfRingSize</a> () const</td></tr>
<tr class="separator:af4a516c81946e3a8c0ca80420358dbe2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a477acbd6186fc09959e879d26b3af56f"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a477acbd6186fc09959e879d26b3af56f">CountRingBonds</a> () const</td></tr>
<tr class="separator:a477acbd6186fc09959e879d26b3af56f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83db73f33e51b011f21358bd5a0463ff"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a83db73f33e51b011f21358bd5a0463ff">SmallestBondAngle</a> ()</td></tr>
<tr class="separator:a83db73f33e51b011f21358bd5a0463ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9468871377da00c7b949b20d6d17f3d"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae9468871377da00c7b949b20d6d17f3d">AverageBondAngle</a> ()</td></tr>
<tr class="separator:ae9468871377da00c7b949b20d6d17f3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a437ef8d4fce62b10898a074ec147c8c5"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a437ef8d4fce62b10898a074ec147c8c5">BOSum</a> () const</td></tr>
<tr class="separator:a437ef8d4fce62b10898a074ec147c8c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac724d08f837518953468665b9dc5ab23"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac724d08f837518953468665b9dc5ab23">KBOSum</a> () const</td></tr>
<tr class="separator:ac724d08f837518953468665b9dc5ab23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fea4e6f09eb8fbfde323d22ae2c6e3e"><td class="memItemLeft" align="right" valign="top">std::pair&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3fea4e6f09eb8fbfde323d22ae2c6e3e">LewisAcidBaseCounts</a> () const</td></tr>
<tr class="separator:a3fea4e6f09eb8fbfde323d22ae2c6e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3177d9e8b583d3cda02b90c141894c5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae3177d9e8b583d3cda02b90c141894c5">HasResidue</a> ()</td></tr>
<tr class="separator:ae3177d9e8b583d3cda02b90c141894c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf8e48cf13e5ccecd7eaf64bf4393081"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#acf8e48cf13e5ccecd7eaf64bf4393081">IsHetAtom</a> ()</td></tr>
<tr class="separator:acf8e48cf13e5ccecd7eaf64bf4393081"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab633bc0f8f40dfcedf42940ab8a5316c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab633bc0f8f40dfcedf42940ab8a5316c">IsHydrogen</a> ()</td></tr>
<tr class="separator:ab633bc0f8f40dfcedf42940ab8a5316c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7102b6e4d75ace5bcc21957c9a696110"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7102b6e4d75ace5bcc21957c9a696110">IsHydrogen</a> () const</td></tr>
<tr class="separator:a7102b6e4d75ace5bcc21957c9a696110"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f0a167775136e911cd349cdd8923b24"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1f0a167775136e911cd349cdd8923b24">IsCarbon</a> ()</td></tr>
<tr class="separator:a1f0a167775136e911cd349cdd8923b24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacb82bc548922e4f1276a255f212f143"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aacb82bc548922e4f1276a255f212f143">IsNitrogen</a> ()</td></tr>
<tr class="separator:aacb82bc548922e4f1276a255f212f143"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7e8030ce19d79c9ad0b3cfbf116dc59"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7e8030ce19d79c9ad0b3cfbf116dc59">IsOxygen</a> ()</td></tr>
<tr class="separator:af7e8030ce19d79c9ad0b3cfbf116dc59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71152591d5cc51fc2f3701ff7de7dfd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa71152591d5cc51fc2f3701ff7de7dfd">IsSulfur</a> ()</td></tr>
<tr class="separator:aa71152591d5cc51fc2f3701ff7de7dfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8c7f052f9380b98eef3b83da640eba3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab8c7f052f9380b98eef3b83da640eba3">IsPhosphorus</a> ()</td></tr>
<tr class="separator:ab8c7f052f9380b98eef3b83da640eba3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeda62da8823b248654404fb15f314a66"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeda62da8823b248654404fb15f314a66">IsAromatic</a> () const</td></tr>
<tr class="separator:aeda62da8823b248654404fb15f314a66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae016e13adf41d7c12a3d22147f0b870e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae016e13adf41d7c12a3d22147f0b870e">IsInRing</a> () const</td></tr>
<tr class="separator:ae016e13adf41d7c12a3d22147f0b870e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc6f8e669a1810e383ab1459324c38e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aefc6f8e669a1810e383ab1459324c38e">IsInRingSize</a> (int) const</td></tr>
<tr class="separator:aefc6f8e669a1810e383ab1459324c38e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad89058fb178a4b056a0786a5ddc8e162"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad89058fb178a4b056a0786a5ddc8e162">IsHeteroatom</a> ()</td></tr>
<tr class="separator:ad89058fb178a4b056a0786a5ddc8e162"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d150980792220d4929ac312bfce1636"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5d150980792220d4929ac312bfce1636">IsNotCorH</a> ()</td></tr>
<tr class="separator:a5d150980792220d4929ac312bfce1636"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35892bf1255c1b8824c870e5460fd641"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a35892bf1255c1b8824c870e5460fd641">IsConnected</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr class="separator:a35892bf1255c1b8824c870e5460fd641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a895cbd0d89d126571465b59ee0a3b79a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a895cbd0d89d126571465b59ee0a3b79a">IsOneThree</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr class="separator:a895cbd0d89d126571465b59ee0a3b79a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b5c7353abc13edd81339fc58206a3b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad1b5c7353abc13edd81339fc58206a3b">IsOneFour</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr class="separator:ad1b5c7353abc13edd81339fc58206a3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7dd88da6d7a1e72f636c50586d5551d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab7dd88da6d7a1e72f636c50586d5551d">IsCarboxylOxygen</a> ()</td></tr>
<tr class="separator:ab7dd88da6d7a1e72f636c50586d5551d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b1d4c9a297629beacb66c0ef04070e9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5b1d4c9a297629beacb66c0ef04070e9">IsPhosphateOxygen</a> ()</td></tr>
<tr class="separator:a5b1d4c9a297629beacb66c0ef04070e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76ecda2fd4bf9207310088f25f526ea8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a76ecda2fd4bf9207310088f25f526ea8">IsSulfateOxygen</a> ()</td></tr>
<tr class="separator:a76ecda2fd4bf9207310088f25f526ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a256fca254282407b1342875266769463"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a256fca254282407b1342875266769463">IsNitroOxygen</a> ()</td></tr>
<tr class="separator:a256fca254282407b1342875266769463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8299dd769242a441864a7ad2fcb92b6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac8299dd769242a441864a7ad2fcb92b6">IsAmideNitrogen</a> ()</td></tr>
<tr class="separator:ac8299dd769242a441864a7ad2fcb92b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6da4cfc5bbc2e4c9b358bccd5d97e51f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6da4cfc5bbc2e4c9b358bccd5d97e51f">IsPolarHydrogen</a> ()</td></tr>
<tr class="separator:a6da4cfc5bbc2e4c9b358bccd5d97e51f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae519982c28911c0906e9181c46d7bdbc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae519982c28911c0906e9181c46d7bdbc">IsNonPolarHydrogen</a> ()</td></tr>
<tr class="separator:ae519982c28911c0906e9181c46d7bdbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad651ae188decc15fa8ec3907860e585e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad651ae188decc15fa8ec3907860e585e">IsAromaticNOxide</a> ()</td></tr>
<tr class="separator:ad651ae188decc15fa8ec3907860e585e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63258442848bd8e29e0d5224e145ad83"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63258442848bd8e29e0d5224e145ad83">IsChiral</a> ()</td></tr>
<tr class="separator:a63258442848bd8e29e0d5224e145ad83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afca1f93ec35d38ad6b7e8eb634bd5d45"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">IsAxial</a> ()</td></tr>
<tr class="separator:afca1f93ec35d38ad6b7e8eb634bd5d45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d1f38bbe03483629778078dcc4e75a0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4d1f38bbe03483629778078dcc4e75a0">IsClockwise</a> ()</td></tr>
<tr class="separator:a4d1f38bbe03483629778078dcc4e75a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3abb70d4f818b9c3e416928afa2e844"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af3abb70d4f818b9c3e416928afa2e844">IsAntiClockwise</a> ()</td></tr>
<tr class="separator:af3abb70d4f818b9c3e416928afa2e844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9880a080dd0bce244291bde514b67d20"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a9880a080dd0bce244291bde514b67d20">IsPositiveStereo</a> ()</td></tr>
<tr class="separator:a9880a080dd0bce244291bde514b67d20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61e5344c34c172e9b889e59255aff6de"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a61e5344c34c172e9b889e59255aff6de">IsNegativeStereo</a> ()</td></tr>
<tr class="separator:a61e5344c34c172e9b889e59255aff6de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8844e382c76003229ee5fdd0341aacee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8844e382c76003229ee5fdd0341aacee">HasChiralitySpecified</a> ()</td></tr>
<tr class="separator:a8844e382c76003229ee5fdd0341aacee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63911efd550113b275239d322670986d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63911efd550113b275239d322670986d">HasChiralVolume</a> ()</td></tr>
<tr class="separator:a63911efd550113b275239d322670986d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63e02252214e540d56815820715f1ae3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63e02252214e540d56815820715f1ae3">IsHbondAcceptor</a> ()</td></tr>
<tr class="separator:a63e02252214e540d56815820715f1ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bd101b96407cc7fe209277dd26cc975"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8bd101b96407cc7fe209277dd26cc975">IsHbondAcceptorSimple</a> ()</td></tr>
<tr class="separator:a8bd101b96407cc7fe209277dd26cc975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71e3c9571430e3d6587f7b80ee8fb926"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a71e3c9571430e3d6587f7b80ee8fb926">IsHbondDonor</a> ()</td></tr>
<tr class="separator:a71e3c9571430e3d6587f7b80ee8fb926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135d08515315b5daa95e6081dc104a38"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a135d08515315b5daa95e6081dc104a38">IsHbondDonorH</a> ()</td></tr>
<tr class="separator:a135d08515315b5daa95e6081dc104a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c05d5c41594ed1af3afe5af29032968"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4c05d5c41594ed1af3afe5af29032968">IsMetal</a> ()</td></tr>
<tr class="separator:a4c05d5c41594ed1af3afe5af29032968"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f5a47b31d2c120928f77dad66e655cc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">HasAlphaBetaUnsat</a> (bool includePandS=true)</td></tr>
<tr class="separator:a4f5a47b31d2c120928f77dad66e655cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addb891e1fa000764b9030d5e08c0c67a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#addb891e1fa000764b9030d5e08c0c67a">HasBondOfOrder</a> (unsigned int bo)</td></tr>
<tr class="separator:addb891e1fa000764b9030d5e08c0c67a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fc49ec59966a08059750ecd2e9d20a5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4fc49ec59966a08059750ecd2e9d20a5">CountBondsOfOrder</a> (unsigned int bo)</td></tr>
<tr class="separator:a4fc49ec59966a08059750ecd2e9d20a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d1a92d262f9ae24f29fa80d96d70128"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2d1a92d262f9ae24f29fa80d96d70128">HighestBondOrder</a> ()</td></tr>
<tr class="separator:a2d1a92d262f9ae24f29fa80d96d70128"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3d85200b00bf0ad59725175d606acfe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae3d85200b00bf0ad59725175d606acfe">HasNonSingleBond</a> ()</td></tr>
<tr class="separator:ae3d85200b00bf0ad59725175d606acfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af347b80d156587c2287754345606c78d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af347b80d156587c2287754345606c78d">HasSingleBond</a> ()</td></tr>
<tr class="separator:af347b80d156587c2287754345606c78d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cb35a21cc08897bc7f9b01ae4561e50"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a0cb35a21cc08897bc7f9b01ae4561e50">HasDoubleBond</a> ()</td></tr>
<tr class="separator:a0cb35a21cc08897bc7f9b01ae4561e50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11bf8aa7f79e9b9bdef2602808bb794d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a11bf8aa7f79e9b9bdef2602808bb794d">HasAromaticBond</a> ()</td></tr>
<tr class="separator:a11bf8aa7f79e9b9bdef2602808bb794d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfdefac42d3c895920f1f715f0d710a5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#abfdefac42d3c895920f1f715f0d710a5">MatchesSMARTS</a> (const char *)</td></tr>
<tr class="separator:abfdefac42d3c895920f1f715f0d710a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Generic data handling methods (via OBGenericData)</div></td></tr>
<tr class="memitem:a86dd58fc1da5652d70e823fa77cc1637"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a86dd58fc1da5652d70e823fa77cc1637">HasData</a> (const std::string &amp;)</td></tr>
<tr class="separator:a86dd58fc1da5652d70e823fa77cc1637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01b429ffcaf47cf265acd439ed2faca0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>
<tr class="separator:a01b429ffcaf47cf265acd439ed2faca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cb103f12f49d86132ece200000da830"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6cb103f12f49d86132ece200000da830">HasData</a> (const unsigned int type)</td></tr>
<tr class="separator:a6cb103f12f49d86132ece200000da830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a797e5b4d20b6233062d2fdba78a08e06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>
<tr class="separator:a797e5b4d20b6233062d2fdba78a08e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab586df65e3f115b69510820b34098ce9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>
<tr class="separator:ab586df65e3f115b69510820b34098ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a030adad5b052ff3d390f13e1f981201e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a030adad5b052ff3d390f13e1f981201e">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&gt; &amp;)</td></tr>
<tr class="separator:a030adad5b052ff3d390f13e1f981201e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa068a2a7b64d2ee73aedb8c6e3cf0c4c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">DeleteData</a> (const std::string &amp;s)</td></tr>
<tr class="separator:aa068a2a7b64d2ee73aedb8c6e3cf0c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6b0ec89bfea783825b3b466e4dbc00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr class="separator:adb6b0ec89bfea783825b3b466e4dbc00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6f692332837387535e337413d0100de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa6f692332837387535e337413d0100de">CloneData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr class="separator:aa6f692332837387535e337413d0100de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de970fc10391cb7f06c77e3b492f582"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a2de970fc10391cb7f06c77e3b492f582">DataSize</a> () const</td></tr>
<tr class="separator:a2de970fc10391cb7f06c77e3b492f582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee672d91b694547fb072fdaa8e03cfe9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aee672d91b694547fb072fdaa8e03cfe9">GetData</a> (const unsigned int type)</td></tr>
<tr class="separator:aee672d91b694547fb072fdaa8e03cfe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f0eade8b5924eec28ad50f0ce2031f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a22f0eade8b5924eec28ad50f0ce2031f">GetData</a> (const std::string &amp;)</td></tr>
<tr class="separator:a22f0eade8b5924eec28ad50f0ce2031f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483b277678a8ca48998742c80985fd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>
<tr class="separator:a483b277678a8ca48998742c80985fd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a551ff0a0ed3fa58745dff0ecacdaa"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>
<tr class="separator:a90a551ff0a0ed3fa58745dff0ecacdaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa959146c3f7b458009dc04f61b5a2e7f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa959146c3f7b458009dc04f61b5a2e7f">GetData</a> (<a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source)</td></tr>
<tr class="separator:aa959146c3f7b458009dc04f61b5a2e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb56decc1b824c9fad980fc22e1d778c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#afb56decc1b824c9fad980fc22e1d778c">GetAllData</a> (const unsigned int type)</td></tr>
<tr class="separator:afb56decc1b824c9fad980fc22e1d778c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15b47c65393d46fde62d1f0a19bcf9fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a> ()</td></tr>
<tr class="separator:a15b47c65393d46fde62d1f0a19bcf9fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a117c836710dd3aaa8748509262a5c280"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">EndData</a> ()</td></tr>
<tr class="separator:a117c836710dd3aaa8748509262a5c280"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6bb6ed5c064e3957d8dd03aba51e61f7"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>
<tr class="separator:a6bb6ed5c064e3957d8dd03aba51e61f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a6368d7673f23186649b2969ade3661d7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6368d7673f23186649b2969ade3661d7">Visit</a></td></tr>
<tr class="separator:a6368d7673f23186649b2969ade3661d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:acc0aec564b42e181709de3699656f5b1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#acc0aec564b42e181709de3699656f5b1">GetFlag</a> () const</td></tr>
<tr class="separator:acc0aec564b42e181709de3699656f5b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcdab8f96dc4fdc2940749e527087245"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#adcdab8f96dc4fdc2940749e527087245">SetFlag</a> (int flag)</td></tr>
<tr class="separator:adcdab8f96dc4fdc2940749e527087245"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a1dc0419a66d2e7288214342de43b7a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3a1dc0419a66d2e7288214342de43b7a">HasFlag</a> (int flag)</td></tr>
<tr class="separator:a3a1dc0419a66d2e7288214342de43b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a2a4ac28765690d9b074521327cb4876b"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2a4ac28765690d9b074521327cb4876b">_ele</a></td></tr>
<tr class="separator:a2a4ac28765690d9b074521327cb4876b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3e028e65ae7c0dac55997f2cb7281ce"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab3e028e65ae7c0dac55997f2cb7281ce">_impval</a></td></tr>
<tr class="separator:ab3e028e65ae7c0dac55997f2cb7281ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad4c66def6b16fe190ac28633fb1f3f"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2ad4c66def6b16fe190ac28633fb1f3f">_type</a> [<a class="el" href="atom_8h.shtml#a17ee9e29394f0bd750a589cd03e69ff1">OBATOM_TYPE_LEN</a>]</td></tr>
<tr class="separator:a2ad4c66def6b16fe190ac28633fb1f3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e636025c5db07bf67523b31a55f6327"><td class="memItemLeft" align="right" valign="top">short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6e636025c5db07bf67523b31a55f6327">_fcharge</a></td></tr>
<tr class="separator:a6e636025c5db07bf67523b31a55f6327"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad60f474b9381f875e4b6e3f5df457c9a"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad60f474b9381f875e4b6e3f5df457c9a">_isotope</a></td></tr>
<tr class="separator:ad60f474b9381f875e4b6e3f5df457c9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec3b74d938a5e47bc6a6627f64d86e27"><td class="memItemLeft" align="right" valign="top">short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aec3b74d938a5e47bc6a6627f64d86e27">_spinmultiplicity</a></td></tr>
<tr class="separator:aec3b74d938a5e47bc6a6627f64d86e27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1219a011a5e0ec59c67a5a873d81986c"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a></td></tr>
<tr class="separator:a1219a011a5e0ec59c67a5a873d81986c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa15238ffbdb1330727678c9d6553d6ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa15238ffbdb1330727678c9d6553d6ba">_parent</a></td></tr>
<tr class="separator:aa15238ffbdb1330727678c9d6553d6ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c7208419c7703e947e9a1c365838b98"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3c7208419c7703e947e9a1c365838b98">_vbond</a></td></tr>
<tr class="separator:a3c7208419c7703e947e9a1c365838b98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef178db02607fe00f112bd1a7f5f4d2b"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aef178db02607fe00f112bd1a7f5f4d2b">_cidx</a></td></tr>
<tr class="separator:aef178db02607fe00f112bd1a7f5f4d2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d400386667c899017669303bdec09cd"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5d400386667c899017669303bdec09cd">_hyb</a></td></tr>
<tr class="separator:a5d400386667c899017669303bdec09cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cc9f88f4cc5fda10e7932cd59a87f16"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5cc9f88f4cc5fda10e7932cd59a87f16">_flags</a></td></tr>
<tr class="separator:a5cc9f88f4cc5fda10e7932cd59a87f16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4b9cf0b2f94fc6befff220367fccd0a"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae4b9cf0b2f94fc6befff220367fccd0a">_pcharge</a></td></tr>
<tr class="separator:ae4b9cf0b2f94fc6befff220367fccd0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91a32f6c060e12e4d188974db5b111d3"><td class="memItemLeft" align="right" valign="top">double **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a91a32f6c060e12e4d188974db5b111d3">_c</a></td></tr>
<tr class="separator:a91a32f6c060e12e4d188974db5b111d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8dcade9402fad862f0391488350ea3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae8dcade9402fad862f0391488350ea3e">_v</a></td></tr>
<tr class="separator:ae8dcade9402fad862f0391488350ea3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac26545dc3d68694f0a7b6f4a776f7a17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac26545dc3d68694f0a7b6f4a776f7a17">_residue</a></td></tr>
<tr class="separator:ac26545dc3d68694f0a7b6f4a776f7a17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accc49a515c7a81154bd46a8ea8a16204"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#accc49a515c7a81154bd46a8ea8a16204">_id</a></td></tr>
<tr class="separator:accc49a515c7a81154bd46a8ea8a16204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7811cf8aadbf3b3477c560b0ef2f797"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>
<tr class="separator:af7811cf8aadbf3b3477c560b0ef2f797"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Atom class. </p>
<p>To understand the <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> class it is important to state a key decision on which the design was based. The <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> class not only holds data, but facilitates extraction of data perceived from both the atom and the molecule. This prevents the <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> class from becoming overly large and complicated.</p>
<p>A number of data extraction methods perform what is called <a href="http://en.wikipedia.org/wiki/Lazy_evaluation">`Lazy Evaluation,'</a> which is essentially on-the-fly evaluation. For example, when an atom is queried as to whether it is cyclic or what it's hybridization state is the information is perceived automatically. The perception of a particular trait is actually performed on the entire molecule the first time it is requested of an atom or bond, and stored for subsequent requests for the same trait of additional atoms or bonds.The <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> class is similar to <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> and the whole of Open Babel in that data access and modification is done through Get and Set methods.</p>
<p>The following code demonstrates how to print out the atom numbers, element numbers, and coordinates of a molecule: </p><div class="fragment"><div class="line">OBMol mol;</div><div class="line"></div><div class="line"><a class="code" href="obiter_8h.shtml#afb051cb17b46d381998c24fc41db2a79">FOR_ATOMS_OF_MOL</a>(atom, mol)</div><div class="line">{</div><div class="line">   cout &lt;&lt; atom-&gt;GetIdx() &lt;&lt; ` `;</div><div class="line">   cout &lt;&lt; atom-&gt;GetAtomicNum() &lt;&lt; ` `;</div><div class="line">   cout &lt;&lt; atom-&gt;GetVector() &lt;&lt; endl;</div><div class="line">}</div></div><!-- fragment --><p> A number of the property member functions indicate that atoms have some knowledge of their covalently attached neighbor atoms. Bonding information is partly redundant within a molecule in that an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> has a complete list of bonds in a molecule, and an <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> has a list bonds of which it is a member. The following code demonstrates how an <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> uses its bond information to loop over atoms attached to itself: </p><div class="fragment"><div class="line">OBMol mol;</div><div class="line"><a class="code" href="classOpenBabel_1_1OBAtom.shtml#ad5b5ccb4d16c9ce269b65ccc4e7fa1ae">OBAtom</a> *atom;</div><div class="line"></div><div class="line">atom = mol.GetAtom(1);</div><div class="line"><a class="code" href="obiter_8h.shtml#a18326b3c74bff171f5807ce9725e0c47">FOR_NBORS_OF_ATOM</a>(nbr, atom)</div><div class="line">{</div><div class="line">   cout &lt;&lt; <span class="stringliteral">&quot;atom #&quot;</span> &lt;&lt; atom-&gt;GetIdx() &lt;&lt; <span class="stringliteral">&quot; is attached to atom #&quot;</span></div><div class="line">        &lt;&lt; nbr-&gt;GetIdx() &lt;&lt; endl;</div><div class="line">}</div></div><!-- fragment --><p>should produce an output like </p><div class="fragment"><div class="line">atom #1 is attached to atom #2</div></div><!-- fragment --> </div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="afbdb429fe4a7d37960636a555de77326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbdb429fe4a7d37960636a555de77326">&sect;&nbsp;</a></span>StereoFlag</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afbdb429fe4a7d37960636a555de77326">StereoFlag</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad5b5ccb4d16c9ce269b65ccc4e7fa1ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5b5ccb4d16c9ce269b65ccc4e7fa1ae">&sect;&nbsp;</a></span>OBAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a id="a52876d92719e68259ca43bf5cd19349a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52876d92719e68259ca43bf5cd19349a">&sect;&nbsp;</a></span>~OBAtom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="acc0aec564b42e181709de3699656f5b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc0aec564b42e181709de3699656f5b1">&sect;&nbsp;</a></span>GetFlag()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetFlag </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>All flags </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>.</p>

</div>
</div>
<a id="adcdab8f96dc4fdc2940749e527087245"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcdab8f96dc4fdc2940749e527087245">&sect;&nbsp;</a></span>SetFlag()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetFlag </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the bitwise <code>flag</code>. </p>

</div>
</div>
<a id="a3a1dc0419a66d2e7288214342de43b7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a1dc0419a66d2e7288214342de43b7a">&sect;&nbsp;</a></span>HasFlag()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasFlag </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>True of the atom has the <code>flag</code> </dd></dl>

</div>
</div>
<a id="a3fa1416db7f7f223cb5d77cc7a916f2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fa1416db7f7f223cb5d77cc7a916f2e">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignment. </p>

</div>
</div>
<a id="a86f5522afaa8e213fd39c0ab71cc4ac1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86f5522afaa8e213fd39c0ab71cc4ac1">&sect;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Equivalence. </p>

</div>
</div>
<a id="af2ee969f23433f548e39a909547869c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2ee969f23433f548e39a909547869c7">&sect;&nbsp;</a></span>Duplicate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Duplicate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Duplicate another atom. Copies all information with the exception of index </p><dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div>
<a id="ad12fd937da5f4b0c4562888252fe214b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad12fd937da5f4b0c4562888252fe214b">&sect;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Clear all data. Calls <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object. ">OBBase::Clear()</a> to handle any generic data. </p><dl class="section return"><dt>Returns</dt><dd>True if successful. </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b">OBBase</a>.</p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>.</p>

</div>
</div>
<a id="ab994a975e39f5c62288f4f972b6f90c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab994a975e39f5c62288f4f972b6f90c9">&sect;&nbsp;</a></span>SetIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set atom index (i.e., in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad08c2c13224b533dfbc799371d937317">OBMol::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac32ffc23db124156a953e8e5cb923ccd">OBMol::EndModify()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>.</p>

</div>
</div>
<a id="a383094c5a19383cf09f3dfb4c1de1da2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a383094c5a19383cf09f3dfb4c1de1da2">&sect;&nbsp;</a></span>SetId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetId </td>
          <td>(</td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad08c2c13224b533dfbc799371d937317">OBMol::AddAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>.</p>

</div>
</div>
<a id="a9ca5228f1b568f7076cd930ad0902a83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ca5228f1b568f7076cd930ad0902a83">&sect;&nbsp;</a></span>SetHyb()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetHyb </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>hyb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set atom hybridization (i.e., 1 = sp, 2 = sp2, 3 = sp3 ...) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ae773554c61c3b4f4c855ead5bec93ee6">OBAtomTyper::AssignHyb()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="a573a9f96a971854938ab2db5eb4d4851"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a573a9f96a971854938ab2db5eb4d4851">&sect;&nbsp;</a></span>SetAtomicNum()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAtomicNum </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>atomicnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set atomic number. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBChemTsfm.shtml#a1df01dc22c67cc084e1c82b8f9333cab">OBChemTsfm::Apply()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>.</p>

</div>
</div>
<a id="a90b69b7f0259fe3dcbde073f36ebf1c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90b69b7f0259fe3dcbde073f36ebf1c8">&sect;&nbsp;</a></span>SetIsotope()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIsotope </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>iso</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set isotope number (actual atomic weight is tabulated automatically, 0 = most abundant) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>.</p>

</div>
</div>
<a id="a4ebf98749415a00a56fdbc77f87fdc87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ebf98749415a00a56fdbc77f87fdc87">&sect;&nbsp;</a></span>SetImplicitValence()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetImplicitValence </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the implicit valence to <code>val</code>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad63a6fe97b17d6de0522747fc6fbf86f">OBAtomTyper::AssignImplicitValence()</a>.</p>

</div>
</div>
<a id="ae048690c14e9258cc653231a56d5dfda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae048690c14e9258cc653231a56d5dfda">&sect;&nbsp;</a></span>IncrementImplicitValence()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void IncrementImplicitValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Increase the implicit valence by one. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>.</p>

</div>
</div>
<a id="a7acb91a903a31d698dc25d296b988f7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7acb91a903a31d698dc25d296b988f7f">&sect;&nbsp;</a></span>DecrementImplicitValence()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DecrementImplicitValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Decrease the implicit valence by one. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>.</p>

</div>
</div>
<a id="aa1d084182d025e6fa000b928807d7689"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1d084182d025e6fa000b928807d7689">&sect;&nbsp;</a></span>SetFormalCharge()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetFormalCharge </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fcharge</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the formal charge of the atom to <code>fcharge</code>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, <a class="el" href="classOpenBabel_1_1OBChemTsfm.shtml#a1df01dc22c67cc084e1c82b8f9333cab">OBChemTsfm::Apply()</a>, <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abcf2e89fef03dd291e22507c51af8965">OBMol::ConvertZeroBonds()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a54b6a6c4fabf98535ff08b25ea9b0bfc">OBMol::MakeDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad69498ec216d37651bbcfd6e76d7c67a">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a id="a299285ee1effd21803b3c042a376e149"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a299285ee1effd21803b3c042a376e149">&sect;&nbsp;</a></span>SetSpinMultiplicity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpinMultiplicity </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>spin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the atomic spin to <code>spin</code>. See _spinmultiplicity. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, and <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>.</p>

</div>
</div>
<a id="a473f946fc45e9a7e5479d260e4cfd107"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a473f946fc45e9a7e5479d260e4cfd107">&sect;&nbsp;</a></span>SetType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the atomic type symbol (see <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml" title="Atom Type Translation Table. ">OBTypeTable</a> and <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges. ">OBAtomTyper</a> for more) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>.</p>

</div>
</div>
<a id="aadd853960ce2a2382a7d2d451d5ab450"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadd853960ce2a2382a7d2d451d5ab450">&sect;&nbsp;</a></span>SetType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the atomic type symbol (see <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml" title="Atom Type Translation Table. ">OBTypeTable</a> and <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges. ">OBAtomTyper</a> for more) </p>

</div>
</div>
<a id="a963851351ab3c084233a82d367f15607"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a963851351ab3c084233a82d367f15607">&sect;&nbsp;</a></span>SetPartialCharge()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetPartialCharge </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>pcharge</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the partial charge to <code>pcharge</code>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBPhModel.shtml#ae078817f50ab066f54fe58eb3d0dfd63">OBPhModel::AssignSeedPartialCharge()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeccf78db112723467e7756a5734c82b9">OBAtom::GetPartialCharge()</a>.</p>

</div>
</div>
<a id="a3b9594d66359ec366d2590459d0b617f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b9594d66359ec366d2590459d0b617f">&sect;&nbsp;</a></span>SetVector() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the coordinate vector for this atom to <code>v</code> as a <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a228de88f48ee3ca6a11554b74d82dedd">OBMol::Align()</a>, <a class="el" href="namespaceOpenBabel.shtml#a56bd19e6ce3d11cd0ccdc0420e91ada3">OpenBabel::ApplyRotMatToBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1b5760b4c75b7631fffb54f84140b3e3">OBMol::BeginModify()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, <a class="el" href="namespaceOpenBabel.shtml#a742566d425db558fa968c725f8a708cc">OpenBabel::generateDiagram()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="namespaceOpenBabel.shtml#a23997cd29f45df86f90e4f7de02baccd">OpenBabel::groupRedraw()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3be6b6496e799b9308b6c1beb927c265">OpenBabel::InternalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f08066361ace92acfa362df93fafd76">OBForceField::LineSearch()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a2a6bafaddf41c8eb9d0bda246bb07c85">OBForceField::NumericalDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a499789742e7b2021f26f8d1cfe04045f">OBForceField::NumericalSecondDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac271a3bf117a79400817b696d11ea4a7">OBForceField::SetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06b2f4ac9f082f41da3ae01d4bb3f1cc">OBForceField::SetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>, <a class="el" href="classOpenBabel_1_1OBPointGroup.shtml#adfa92d36cdbb24952729e1446cf3975c">OBPointGroup::Symmetrize()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a837dd6b4440b4fe77f23976bbdaa64a3">OBForceField::ValidateSteepestDescent()</a>.</p>

</div>
</div>
<a id="ad69e26aebea5d59b5d79ccd514631297"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad69e26aebea5d59b5d79ccd514631297">&sect;&nbsp;</a></span>SetVector() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the coordinate vector for this atom based on <code>x</code> <code>y</code> &amp; <code>z</code>. </p>

</div>
</div>
<a id="aeff361260a8a4e9ea703d5d38f5fc671"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeff361260a8a4e9ea703d5d38f5fc671">&sect;&nbsp;</a></span>SetCoordPtr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetCoordPtr </td>
          <td>(</td>
          <td class="paramtype">double **&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the position of this atom from a pointer-driven array of coordinates. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac32ffc23db124156a953e8e5cb923ccd">OBMol::EndModify()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a10c76fe88720e6ca2e17865b847edbf7">OBMol::SetCoordinates()</a>.</p>

</div>
</div>
<a id="a5f11d9c7a42f6be6e4b6272526f3ad09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f11d9c7a42f6be6e4b6272526f3ad09">&sect;&nbsp;</a></span>SetVector() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the position of this atom based on the internal pointer array (i.e. from <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671" title="Set the position of this atom from a pointer-driven array of coordinates. ">SetCoordPtr()</a> ) </p>

</div>
</div>
<a id="ade786f15ee67979fbb9c48970b22e184"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade786f15ee67979fbb9c48970b22e184">&sect;&nbsp;</a></span>SetResidue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetResidue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td>
          <td class="paramname"><em>res</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Attach an <a class="el" href="classOpenBabel_1_1OBResidue.shtml" title="Residue information. ">OBResidue</a> <code>res</code> as containing this atom. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>.</p>

</div>
</div>
<a id="a962b3010305cfb80ba816a0e54097dee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a962b3010305cfb80ba816a0e54097dee">&sect;&nbsp;</a></span>SetParent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Attach an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> <code>ptr</code> as the parent container for this atom. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad08c2c13224b533dfbc799371d937317">OBMol::AddAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>.</p>

</div>
</div>
<a id="a3d29498c15007d9b6729e26784f23a5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d29498c15007d9b6729e26784f23a5b">&sect;&nbsp;</a></span>SetAromatic()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAromatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mark atom as being aromatic. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>.</p>

</div>
</div>
<a id="a2fcf3bf429f36281a43c879e40e75f34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fcf3bf429f36281a43c879e40e75f34">&sect;&nbsp;</a></span>UnsetAromatic()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetAromatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear aromatic information from the atom. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>.</p>

</div>
</div>
<a id="adf069c94123595712cb7fa847b87e449"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf069c94123595712cb7fa847b87e449">&sect;&nbsp;</a></span>SetClockwiseStereo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetClockwiseStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000001">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a id="af328f0aa99465103074b1d336c393919"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af328f0aa99465103074b1d336c393919">&sect;&nbsp;</a></span>SetAntiClockwiseStereo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAntiClockwiseStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000002">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a id="a6ddbbbc5f8e185c43e634a0425311275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ddbbbc5f8e185c43e634a0425311275">&sect;&nbsp;</a></span>SetPositiveStereo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetPositiveStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000003">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a id="aea322d9d450ee48fb2e89a4f7c34deda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea322d9d450ee48fb2e89a4f7c34deda">&sect;&nbsp;</a></span>SetNegativeStereo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetNegativeStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000004">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a id="afdf42f73fe8a0cec0db3c3e544830fcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdf42f73fe8a0cec0db3c3e544830fcc">&sect;&nbsp;</a></span>UnsetStereo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000005">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a id="ae6a016e7f67cf564e5f80254c425f65c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6a016e7f67cf564e5f80254c425f65c">&sect;&nbsp;</a></span>SetInRing()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetInRing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mark an atom as belonging to at least one ring. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a242fc84ac802af94d65d8807a5638e2f">OpenBabel::FindRings()</a>.</p>

</div>
</div>
<a id="ad4e5a4c67101743f644b047b632d058b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4e5a4c67101743f644b047b632d058b">&sect;&nbsp;</a></span>SetChiral()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetChiral </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mark an atom as being chiral with unknown stereochemistry. </p>

</div>
</div>
<a id="a3fa3634d92a924e5af69208768e839a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fa3634d92a924e5af69208768e839a5">&sect;&nbsp;</a></span>ClearCoordPtr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ClearCoordPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear the internal coordinate pointer. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1b5760b4c75b7631fffb54f84140b3e3">OBMol::BeginModify()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>.</p>

</div>
</div>
<a id="a34d5bb9535dadccfdaaae8b98dab2078"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34d5bb9535dadccfdaaae8b98dab2078">&sect;&nbsp;</a></span>GetFormalCharge()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetFormalCharge </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the formal charge for this atom </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abcf2e89fef03dd291e22507c51af8965">OBMol::ConvertZeroBonds()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBChargeModel.shtml#aefec0fbdf06bb4199614da22f1a9deee">OBChargeModel::FillChargeVectors()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab78d46b60f04702fa6f450ef6f8dae62">OBMol::GetTotalCharge()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a70e9abbda50786ef068ca7b99768ba85">OpenBabel::IsSuppressibleHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a54b6a6c4fabf98535ff08b25ea9b0bfc">OBMol::MakeDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad69498ec216d37651bbcfd6e76d7c67a">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a id="a90250b249ffa0fcb4daa83bde1ff4614"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90250b249ffa0fcb4daa83bde1ff4614">&sect;&nbsp;</a></span>GetAtomicNum()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetAtomicNum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the atomic number for this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abcf2e89fef03dd291e22507c51af8965">OBMol::ConvertZeroBonds()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a69c4665c3756720ac6f0d62b2488fdd6">OpenBabel::GetCorrectedBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a4cb9ded766d46989223816771b033155">OBBond::GetEquibLength()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>, <a class="el" href="namespaceOpenBabel.shtml#add2cdb4d7ec3918bac8fa18eb32d4d4c">OpenBabel::isFerroceneBond()</a>, <a class="el" href="classOpenBabel_1_1OBStericConformerFilter.shtml#aa37ca1a89ffb71694922e4b90b012ab2">OBStericConformerFilter::IsGood()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae519982c28911c0906e9181c46d7bdbc">OBAtom::IsNonPolarHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6da4cfc5bbc2e4c9b358bccd5d97e51f">OBAtom::IsPolarHydrogen()</a>, <a class="el" href="namespaceOpenBabel.shtml#a7b44d43b56950aff23fbca88664ad996">OpenBabel::isPotentialAromaticAtom()</a>, <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml#ae23c9361ebb2522c63aacb2656c90720">OBQueryAtom::Matches()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="ad61d9e7b9ecdf9ac58a7f0a65a50b066"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad61d9e7b9ecdf9ac58a7f0a65a50b066">&sect;&nbsp;</a></span>GetIsotope()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short int GetIsotope </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the isotope for this atom, if specified, or 0 for unspecified </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a43f36d8b94ce8835b79689adfa9afad8">OBAtom::ExplicitHydrogenCount()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a70e9abbda50786ef068ca7b99768ba85">OpenBabel::IsSuppressibleHydrogen()</a>.</p>

</div>
</div>
<a id="a546f896e98331fe14e5746c53a4a543f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a546f896e98331fe14e5746c53a4a543f">&sect;&nbsp;</a></span>GetSpinMultiplicity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetSpinMultiplicity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the atomic spin, e.g., 0 (default) for normal atoms - note that this value is a convention, 2 for radical 1 or 3 for carbene </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa431b859ed26f5a45e6ddc3448da1d1f">OBMol::GetTotalSpinMultiplicity()</a>, and <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>.</p>

</div>
</div>
<a id="a2c881c14b105f45a8d7f555aedc12964"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c881c14b105f45a8d7f555aedc12964">&sect;&nbsp;</a></span>GetAtomicMass()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAtomicMass </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the atomic mass of this atom given by standard IUPAC average molar mass </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a77cd52b60b431c19aa7debcd0d92e07d">OBMol::GetMolWt()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>.</p>

</div>
</div>
<a id="ab36dd05b9bb678077bbfd52a952ca72a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab36dd05b9bb678077bbfd52a952ca72a">&sect;&nbsp;</a></span>GetExactMass()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetExactMass </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the atomic mass of this atom given by the isotope (default of 0 gives the most abundant isotope) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7cac960f30506aa53d083983845032df">OBMol::GetExactMass()</a>.</p>

</div>
</div>
<a id="a44b77545e83209582e42f375c8f40474"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44b77545e83209582e42f375c8f40474">&sect;&nbsp;</a></span>GetIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the internal atom index (e.g., inside an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad08c2c13224b533dfbc799371d937317">OBMol::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a228de88f48ee3ca6a11554b74d82dedd">OBMol::Align()</a>, <a class="el" href="namespaceOpenBabel.shtml#a56bd19e6ce3d11cd0ccdc0420e91ada3">OpenBabel::ApplyRotMatToBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aebb6df8ada02a3046ee20ad777c99ad7">OBMol::AreInSameRing()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3354aff787347f50d69b3f75a2ab4912">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="namespaceOpenBabel.shtml#aac15077eefb9e377d3c400f1f2273826">OpenBabel::CartesianToInternal()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af74913b3d793c41d1f005afdba11da35">OBMol::ContigFragList()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8f302cc167630d63e3ca5a4c4d86e41b">OpenBabel::CreateNewClassVector()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#a953354b2def4be81e4615eabb05f99ae">OBMolAtomBFSIter::CurrentDepth()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#a31ce8b089ca36508940585406a2f93f1">OpenBabel::expand_cycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac918a56b1ce85885d791b5981d2102cd">OpenBabel::expand_kekulize_lssr()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af1afc15e37f48f63ea001277fef0e289">OBMol::expandcycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="namespaceOpenBabel.shtml#a62de79552e98ffdb88a9b8509a705158">OpenBabel::expandKekulize()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a7f1d7465125c206ca70c21ab5db30560">OBSmartsMatcher::FastSingleMatch()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aab919f74b99e785e8b70b3c8908d50ca">OBMol::FindChildren()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa797df5bf72cb5e220e13171dd9c7d4a">OBMol::FindLargestFragment()</a>, <a class="el" href="namespaceOpenBabel.shtml#a242fc84ac802af94d65d8807a5638e2f">OpenBabel::FindRings()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ae11a8ddd132109c3a14328bb7676d9f7">OBBond::GetBeginAtomIdx()</a>, <a class="el" href="namespaceOpenBabel.shtml#a534fe2a629963b79ffbd499f461ca5df">OpenBabel::GetDFFVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f53ed138507e197a36be75e58a24da">OBBond::GetEndAtomIdx()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49cdac533695572555a6f9dcad81de46">OpenBabel::getFragment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3ab05c6d2aa0e1597398b85b825b57b1">OBBuilder::GetFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad0da17ffd83c1041f1d0657404b4724d">OBForceField::GetGradient()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac4260148aa21c7ada7d625bc0c6f2f7a">OBMol::GetGTDVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ae3aba2dee7140a159fb534747bb2dc7a">OBBond::GetNbrAtomIdx()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBGraphSym.shtml#a7ab3d90cf40eaebfc62669b9f98f3581">OBGraphSym::GetSymmetry()</a>, <a class="el" href="namespaceOpenBabel.shtml#a07faa5acbed4a3cbbfd0d711321c0439">OpenBabel::has_leftover_electrons()</a>, <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3be6b6496e799b9308b6c1beb927c265">OpenBabel::InternalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#abf7ff40c898c129bba2020623f7394b3">OBRotorList::IsFixedBond()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#acafd9be7a3a74bed05e552a20aa0fccf">OBForceField::IsInSameRing()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a30bcd8070ca5df7d8f9c665e22666d2e">OBRing::IsMember()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#a70e9abbda50786ef068ca7b99768ba85">OpenBabel::IsSuppressibleHydrogen()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#abfdefac42d3c895920f1f715f0d710a5">OBAtom::MatchesSMARTS()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#ac46bde575f155b4c67ec277d7659a847">OBMolAtomBFSIter::OBMolAtomBFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#a30e32a5f76406721c6e04f431e2d46bc">OBMolAtomDFSIter::OBMolAtomDFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a19ad5800c1b20981621429c4c16a845e">OBMolPairIter::OBMolPairIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#aaf97dbc49b4f8743f21874c99257de73">OBMolAtomDFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#aa2197b65eb45814b73aac6f4f061e436">OBMolAtomBFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a82f19c09f49162a5d747e6d302f2bd74">OBMolPairIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3fa1416db7f7f223cb5d77cc7a916f2e">OBAtom::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a86f5522afaa8e213fd39c0ab71cc4ac1">OBAtom::operator==()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#aad45f9f1cd93fdef9c658091f034cce5">OBAromaticTyper::PropagatePotentialAromatic()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a2d560c7f2e4a9fdd1814ed8e09bd02">OBMol::RenumberAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a501e76993e9deb8ec8ab24c464d4ed3c">OBMol::SetTorsion()</a>, <a class="el" href="classOpenBabel_1_1OBProxGrid.shtml#a396800b8a8f488a60854d5ae69c89658">OBProxGrid::Setup()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a2530846ca78e83a8050a28ccbbc76059">OBSmartsMatcher::SetupAtomMatchTable()</a>, <a class="el" href="classOpenBabel_1_1OBFFCalculation2.shtml#aa063f21c51ee71ca470bce2e7042b815">OBFFCalculation2::SetupPointers()</a>, <a class="el" href="classOpenBabel_1_1OBFFCalculation3.shtml#aa063f21c51ee71ca470bce2e7042b815">OBFFCalculation3::SetupPointers()</a>, <a class="el" href="classOpenBabel_1_1OBFFCalculation4.shtml#a23b6e1e5e28cdcd7afc3113b7a3bdbea">OBFFCalculation4::SetupPointers()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad69498ec216d37651bbcfd6e76d7c67a">OBMol::start_kekulize()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7bc49547f1ea2ebf09864495d324fe67">OBForceField::UpdatePairsSimple()</a>.</p>

</div>
</div>
<a id="aadfb6c1a92a9a3c0187c1099e75b6583"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadfb6c1a92a9a3c0187c1099e75b6583">&sect;&nbsp;</a></span>GetIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, and <a class="el" href="classOpenBabel_1_1OBIsomorphismMapper.shtml#a89cf32c6e6d4f6fce6a61a3e70cd2a39">OBIsomorphismMapper::GetInstance()</a>.</p>

</div>
</div>
<a id="a6dd98e3e99e394dce75b285c451028b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dd98e3e99e394dce75b285c451028b1">&sect;&nbsp;</a></span>GetId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long GetId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad08c2c13224b533dfbc799371d937317">OBMol::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="a534869887e7780bf59a97b9c7e38cac9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a534869887e7780bf59a97b9c7e38cac9">&sect;&nbsp;</a></span>GetCoordinateIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetCoordinateIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the index into a pointer-driven array as used by GetCoordPtr() or <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671" title="Set the position of this atom from a pointer-driven array of coordinates. ">SetCoordPtr()</a> </dd></dl>

</div>
</div>
<a id="a036023769d4fee171548943838fa0df1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a036023769d4fee171548943838fa0df1">&sect;&nbsp;</a></span>GetCIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetCIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000006">Deprecated:</a></b></dt><dd>Use <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a534869887e7780bf59a97b9c7e38cac9">GetCoordinateIdx()</a> instead </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3d3039fda855c4c8c37c8345f0b51a64">OpenBabel::SetRotorToAngle()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a501e76993e9deb8ec8ab24c464d4ed3c">OBMol::SetTorsion()</a>.</p>

</div>
</div>
<a id="a7bb9aaaed179e592414edfa0331788f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bb9aaaed179e592414edfa0331788f6">&sect;&nbsp;</a></span>GetValence()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current number of explicit connections </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad63a6fe97b17d6de0522747fc6fbf86f">OBAtomTyper::AssignImplicitValence()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae050b0cbe133308c07688d2438155504">OpenBabel::construct_c_matrix()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#add2cdb4d7ec3918bac8fa18eb32d4d4c">OpenBabel::isFerroceneBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad69498ec216d37651bbcfd6e76d7c67a">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a id="a5cfb24ccc82420ec902371aafa91d67e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cfb24ccc82420ec902371aafa91d67e">&sect;&nbsp;</a></span>GetHyb()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHyb </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The hybridization of this atom: 1 for sp, 2 for sp2, 3 for sp3, 4 for sq. planar, 5 for trig. bipy, 6 for octahedral </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a4cb9ded766d46989223816771b033155">OBBond::GetEquibLength()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>.</p>

</div>
</div>
<a id="ad9f36aa26768975a23a6c7b819e79cc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9f36aa26768975a23a6c7b819e79cc0">&sect;&nbsp;</a></span>GetImplicitValence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetImplicitValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The implicit valence of this atom type (i.e. maximum number of connections expected) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad63a6fe97b17d6de0522747fc6fbf86f">OBAtomTyper::AssignImplicitValence()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="namespaceOpenBabel.shtml#ad87b019400c810f14603c6532435030b">OpenBabel::GetCurrentValence()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a86eb2acbb9c5811e645df18b8b0bacf7">OBBond::IsAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a8e455dc2d94f2394a21dd76db3af8325">OpenBabel::ValenceSum()</a>.</p>

</div>
</div>
<a id="aa7fc4fb37c3e28286d47d36b812303d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7fc4fb37c3e28286d47d36b812303d9">&sect;&nbsp;</a></span>GetHvyValence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHvyValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of non-hydrogens connected to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3be22bbc7a222c8f7255a6f79d937cb4">OBAtom::CountFreeOxygens()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#adc9e3255d3d68b9d1d4ddd49989e7380">OBAtom::CountFreeSulfurs()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>, <a class="el" href="namespaceOpenBabel.shtml#a7b44d43b56950aff23fbca88664ad996">OpenBabel::isPotentialAromaticAtom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#a47ebe26957d5b56a72772cfd24a29db1">OpenBabel::IsSulfoneOxygen()</a>, <a class="el" href="namespaceOpenBabel.shtml#a70e9abbda50786ef068ca7b99768ba85">OpenBabel::IsSuppressibleHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>.</p>

</div>
</div>
<a id="a03272525cd445da2a6ec5507c62fdbda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03272525cd445da2a6ec5507c62fdbda">&sect;&nbsp;</a></span>GetHeteroValence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHeteroValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of heteroatoms connected to an atom </dd></dl>

</div>
</div>
<a id="a7f02f5442f2ed3aa2045587d3319ab7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f02f5442f2ed3aa2045587d3319ab7e">&sect;&nbsp;</a></span>GetType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the atomic type (e.g., for molecular mechanics) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>.</p>

</div>
</div>
<a id="ac302cda48a4a650a3f8cf1dfe9a0cb1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac302cda48a4a650a3f8cf1dfe9a0cb1e">&sect;&nbsp;</a></span>GetX()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the x coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#adca4fce8e3ab8fd1eacd396af7c9adbb">OBBond::GetLength()</a>, <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>, and <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>.</p>

</div>
</div>
<a id="a2c302e1e24ca25bc362746dc51c22510"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c302e1e24ca25bc362746dc51c22510">&sect;&nbsp;</a></span>GetY()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the y coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#adca4fce8e3ab8fd1eacd396af7c9adbb">OBBond::GetLength()</a>, <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>, and <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>.</p>

</div>
</div>
<a id="ad5e4abcd59d8d2c945e851ed92593826"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5e4abcd59d8d2c945e851ed92593826">&sect;&nbsp;</a></span>GetZ()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetZ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the z coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#adca4fce8e3ab8fd1eacd396af7c9adbb">OBBond::GetLength()</a>, and <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>.</p>

</div>
</div>
<a id="a833e1cf314b7b7a5537b2b6a56fee6a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a833e1cf314b7b7a5537b2b6a56fee6a5">&sect;&nbsp;</a></span>x()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double x </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the x coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afbf33662dacd733285409dfd85696457">OBMol::Has2D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4aaa8b5151395ad66ecfe896ca8a0114">OBMol::Has3D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a837dd6b4440b4fe77f23976bbdaa64a3">OBForceField::ValidateSteepestDescent()</a>.</p>

</div>
</div>
<a id="aca424ddaf2902c1cde483f37813d4278"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca424ddaf2902c1cde483f37813d4278">&sect;&nbsp;</a></span>y()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double y </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the y coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afbf33662dacd733285409dfd85696457">OBMol::Has2D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4aaa8b5151395ad66ecfe896ca8a0114">OBMol::Has3D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a837dd6b4440b4fe77f23976bbdaa64a3">OBForceField::ValidateSteepestDescent()</a>.</p>

</div>
</div>
<a id="ae7bc7213001e326be4d4eb2d8a035c34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7bc7213001e326be4d4eb2d8a035c34">&sect;&nbsp;</a></span>z()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double z </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the z coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afbf33662dacd733285409dfd85696457">OBMol::Has2D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4aaa8b5151395ad66ecfe896ca8a0114">OBMol::Has3D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>.</p>

</div>
</div>
<a id="af9dd6c6924f23479933e0b8779a4bec2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9dd6c6924f23479933e0b8779a4bec2">&sect;&nbsp;</a></span>GetCoordinate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double* GetCoordinate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the coordinates as a double* or NULL if none.</dd></dl>
<p>See <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671" title="Set the position of this atom from a pointer-driven array of coordinates. ">SetCoordPtr()</a> for more. If no coordinate pointer is used (e.g., only <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a>), NULL will be returned. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, <a class="el" href="classOpenBabel_1_1OBFFCalculation2.shtml#aa063f21c51ee71ca470bce2e7042b815">OBFFCalculation2::SetupPointers()</a>, <a class="el" href="classOpenBabel_1_1OBFFCalculation3.shtml#aa063f21c51ee71ca470bce2e7042b815">OBFFCalculation3::SetupPointers()</a>, <a class="el" href="classOpenBabel_1_1OBFFCalculation4.shtml#a23b6e1e5e28cdcd7afc3113b7a3bdbea">OBFFCalculation4::SetupPointers()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7bc49547f1ea2ebf09864495d324fe67">OBForceField::UpdatePairsSimple()</a>.</p>

</div>
</div>
<a id="ad15ec0c7f87cea35b02269fd53be159c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad15ec0c7f87cea35b02269fd53be159c">&sect;&nbsp;</a></span>GetVector() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp; GetVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the coordinates as a <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> object </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a228de88f48ee3ca6a11554b74d82dedd">OBMol::Align()</a>, <a class="el" href="namespaceOpenBabel.shtml#a56bd19e6ce3d11cd0ccdc0420e91ada3">OpenBabel::ApplyRotMatToBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae9468871377da00c7b949b20d6d17f3d">OBAtom::AverageBondAngle()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#aac15077eefb9e377d3c400f1f2273826">OpenBabel::CartesianToInternal()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac32ffc23db124156a953e8e5cb923ccd">OBMol::EndModify()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#a6a9ca08185bebf3307c4a1acd31e58c3">OBAlign::GetAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6d6d9bdda3f480d358c14b2010034d41">OBAtom::GetAngle()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac2a0e52810ad157f41a9ecbbae90ee48">OBAtom::GetDistance()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#adfd902d8de9eeb32ea476fe916a329fd">OBMol::GetTorsion()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abdda89a787d7ae0639d5127c2f6a4dfb">OBMol::HasNonZeroCoords()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#aed0dfa6939f68b337f13fbcf4e0f3da7">OBBond::IsDoubleBondGeometry()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f08066361ace92acfa362df93fafd76">OBForceField::LineSearch()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a2a6bafaddf41c8eb9d0bda246bb07c85">OBForceField::NumericalDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a499789742e7b2021f26f8d1cfe04045f">OBForceField::NumericalSecondDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#ac56e2c2ffd9fdf7448b3bda78cdc9549">OBAlign::SetRefMol()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#a2a325b0a2af5bbc3511c6f536e686e21">OBAlign::SetTargetMol()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a501e76993e9deb8ec8ab24c464d4ed3c">OBMol::SetTorsion()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a83db73f33e51b011f21358bd5a0463ff">OBAtom::SmallestBondAngle()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ab97bb4c77a46265bdedaead1a6463ca7">OBBuilder::Swap()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>.</p>

</div>
</div>
<a id="adfb61c187228a966c63ec0c68da89d4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfb61c187228a966c63ec0c68da89d4a">&sect;&nbsp;</a></span>GetVector() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp; GetVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the coordinates as a <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> object </dd></dl>

</div>
</div>
<a id="aeccf78db112723467e7756a5734c82b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeccf78db112723467e7756a5734c82b9">&sect;&nbsp;</a></span>GetPartialCharge()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetPartialCharge </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the partial charge of this atom, calculating a Gasteiger charge if needed </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBChargeModel.shtml#aefec0fbdf06bb4199614da22f1a9deee">OBChargeModel::FillChargeVectors()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>.</p>

</div>
</div>
<a id="ae8533afa0177a165ca51941872f85aee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8533afa0177a165ca51941872f85aee">&sect;&nbsp;</a></span>GetResidue() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> * GetResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the residue which contains this atom, or NULL if none exists </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a22b1621d9012f2f83460a4a6ad591cdd">OBResidue::GetBonds()</a>.</p>

</div>
</div>
<a id="afac526c6de01759b568caddae4c4f2c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afac526c6de01759b568caddae4c4f2c3">&sect;&nbsp;</a></span>GetResidue() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> * GetResidue </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>perception</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">perception</td><td>implies whether chain perception should occur </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the residue which contains this atom, or NULL if none exists </dd></dl>

</div>
</div>
<a id="ad8480b61159bc6cb861b17341dc2b29a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8480b61159bc6cb861b17341dc2b29a">&sect;&nbsp;</a></span>GetParent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* GetParent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the molecule which contains this atom, or NULL if none exists </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a033f4bd8d32f76ae6b7151e1c89bae60">OpenBabel::addNbrs()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3354aff787347f50d69b3f75a2ab4912">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, and <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>.</p>

</div>
</div>
<a id="a818650a1b97f10bbc2204520ef65ad27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a818650a1b97f10bbc2204520ef65ad27">&sect;&nbsp;</a></span>GetNewBondVector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetNewBondVector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a vector for a new bond from this atom, with length given by the supplied parameter </p><dl class="section return"><dt>Returns</dt><dd>success or failure </dd></dl>

</div>
</div>
<a id="aed271572fc66bbef1751cac6ccf3cade"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed271572fc66bbef1751cac6ccf3cade">&sect;&nbsp;</a></span>GetBond()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * GetBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>nbr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the <a class="el" href="classOpenBabel_1_1OBBond.shtml" title="Bond class. ">OBBond</a> object between this atom and that supplied, or NULL if the two atoms are not bonded </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#a13eb26f56a8a475622fba5fc01d4d50e">OpenBabel::CorrectBadResonanceForm()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="ad3bbdba4326cf884eeb110b02f7caef7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3bbdba4326cf884eeb110b02f7caef7">&sect;&nbsp;</a></span>GetNextAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * GetNextAtom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a pointer to the "next" atom (by atom index) in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>, or NULL if no such atom exists. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000007">Deprecated:</a></b></dt><dd>Use any of the other iterator methods. This method will be removed in the future. </dd></dl>

</div>
</div>
<a id="ac4ea48df79e239b506d3501dd42adde9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4ea48df79e239b506d3501dd42adde9">&sect;&nbsp;</a></span>BeginBonds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> BeginBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator to the beginning of the bonds to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>.</p>

</div>
</div>
<a id="a87859f951e8ea33345b76d93014486c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87859f951e8ea33345b76d93014486c9">&sect;&nbsp;</a></span>EndBonds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> EndBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator to the end of the bonds to this atom </dd></dl>

</div>
</div>
<a id="ad9d21c9b65678905c6d7d461160fcd9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9d21c9b65678905c6d7d461160fcd9f">&sect;&nbsp;</a></span>BeginBond()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * BeginBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the iterator <code>i</code> to the beginning of the bonds </p><dl class="section return"><dt>Returns</dt><dd>The first bond to this atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af74913b3d793c41d1f005afdba11da35">OBMol::ContigFragList()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa797df5bf72cb5e220e13171dd9c7d4a">OBMol::FindLargestFragment()</a>, <a class="el" href="namespaceOpenBabel.shtml#a242fc84ac802af94d65d8807a5638e2f">OpenBabel::FindRings()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a22b1621d9012f2f83460a4a6ad591cdd">OBResidue::GetBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#ad87b019400c810f14603c6532435030b">OpenBabel::GetCurrentValence()</a>, <a class="el" href="namespaceOpenBabel.shtml#a534fe2a629963b79ffbd499f461ca5df">OpenBabel::GetDFFVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac4260148aa21c7ada7d625bc0c6f2f7a">OBMol::GetGTDVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a86eb2acbb9c5811e645df18b8b0bacf7">OBBond::IsAmide()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac8299dd769242a441864a7ad2fcb92b6">OBAtom::IsAmideNitrogen()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a783023d0c499c732c067d566c90b67ae">OBBond::IsEster()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad1b5c7353abc13edd81339fc58206a3b">OBAtom::IsOneFour()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a895cbd0d89d126571465b59ee0a3b79a">OBAtom::IsOneThree()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="namespaceOpenBabel.shtml#a47ebe26957d5b56a72772cfd24a29db1">OpenBabel::IsSulfoneOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a54b6a6c4fabf98535ff08b25ea9b0bfc">OBMol::MakeDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a8e455dc2d94f2394a21dd76db3af8325">OpenBabel::ValenceSum()</a>.</p>

</div>
</div>
<a id="a133c681e9534e7255b1fae272c40a511"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a133c681e9534e7255b1fae272c40a511">&sect;&nbsp;</a></span>NextBond()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * NextBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Increment the iterator <code>i</code> </p><dl class="section return"><dt>Returns</dt><dd>The next bond to this atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af74913b3d793c41d1f005afdba11da35">OBMol::ContigFragList()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa797df5bf72cb5e220e13171dd9c7d4a">OBMol::FindLargestFragment()</a>, <a class="el" href="namespaceOpenBabel.shtml#a242fc84ac802af94d65d8807a5638e2f">OpenBabel::FindRings()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a22b1621d9012f2f83460a4a6ad591cdd">OBResidue::GetBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#ad87b019400c810f14603c6532435030b">OpenBabel::GetCurrentValence()</a>, <a class="el" href="namespaceOpenBabel.shtml#a534fe2a629963b79ffbd499f461ca5df">OpenBabel::GetDFFVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac4260148aa21c7ada7d625bc0c6f2f7a">OBMol::GetGTDVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a86eb2acbb9c5811e645df18b8b0bacf7">OBBond::IsAmide()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac8299dd769242a441864a7ad2fcb92b6">OBAtom::IsAmideNitrogen()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a783023d0c499c732c067d566c90b67ae">OBBond::IsEster()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad1b5c7353abc13edd81339fc58206a3b">OBAtom::IsOneFour()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a895cbd0d89d126571465b59ee0a3b79a">OBAtom::IsOneThree()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="namespaceOpenBabel.shtml#a47ebe26957d5b56a72772cfd24a29db1">OpenBabel::IsSulfoneOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a54b6a6c4fabf98535ff08b25ea9b0bfc">OBMol::MakeDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a8e455dc2d94f2394a21dd76db3af8325">OpenBabel::ValenceSum()</a>.</p>

</div>
</div>
<a id="a60c99e07cbd015b89dd0f41525150a74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60c99e07cbd015b89dd0f41525150a74">&sect;&nbsp;</a></span>BeginNbrAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * BeginNbrAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the iterator <code>i</code> to the beginning of the bonds </p><dl class="section return"><dt>Returns</dt><dd>The first neighboring atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3354aff787347f50d69b3f75a2ab4912">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ace02501ed235e4e6c37dca0585bb46bf">OBMol::DeleteHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#a31ce8b089ca36508940585406a2f93f1">OpenBabel::expand_cycle()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af1afc15e37f48f63ea001277fef0e289">OBMol::expandcycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a7f1d7465125c206ca70c21ab5db30560">OBSmartsMatcher::FastSingleMatch()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aab919f74b99e785e8b70b3c8908d50ca">OBMol::FindChildren()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7d160784c8ea86c2884f88446d9a17b1">OBMol::GetBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#aed0dfa6939f68b337f13fbcf4e0f3da7">OBBond::IsDoubleBondGeometry()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#abf7ff40c898c129bba2020623f7394b3">OBRotorList::IsFixedBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#ac46bde575f155b4c67ec277d7659a847">OBMolAtomBFSIter::OBMolAtomBFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#a30e32a5f76406721c6e04f431e2d46bc">OBMolAtomDFSIter::OBMolAtomDFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#aaf97dbc49b4f8743f21874c99257de73">OBMolAtomDFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#aa2197b65eb45814b73aac6f4f061e436">OBMolAtomBFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#aad45f9f1cd93fdef9c658091f034cce5">OBAromaticTyper::PropagatePotentialAromatic()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>.</p>

</div>
</div>
<a id="a37ef92842ef05f2084102f45b6a05caa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37ef92842ef05f2084102f45b6a05caa">&sect;&nbsp;</a></span>NextNbrAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * NextNbrAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Increment the iterator <code>i</code> </p><dl class="section return"><dt>Returns</dt><dd>The next neighboring atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3354aff787347f50d69b3f75a2ab4912">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ace02501ed235e4e6c37dca0585bb46bf">OBMol::DeleteHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#a31ce8b089ca36508940585406a2f93f1">OpenBabel::expand_cycle()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af1afc15e37f48f63ea001277fef0e289">OBMol::expandcycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a43f36d8b94ce8835b79689adfa9afad8">OBAtom::ExplicitHydrogenCount()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a7f1d7465125c206ca70c21ab5db30560">OBSmartsMatcher::FastSingleMatch()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aab919f74b99e785e8b70b3c8908d50ca">OBMol::FindChildren()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7d160784c8ea86c2884f88446d9a17b1">OBMol::GetBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#abf7ff40c898c129bba2020623f7394b3">OBRotorList::IsFixedBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#ac46bde575f155b4c67ec277d7659a847">OBMolAtomBFSIter::OBMolAtomBFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#a30e32a5f76406721c6e04f431e2d46bc">OBMolAtomDFSIter::OBMolAtomDFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#aaf97dbc49b4f8743f21874c99257de73">OBMolAtomDFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#aa2197b65eb45814b73aac6f4f061e436">OBMolAtomBFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#aad45f9f1cd93fdef9c658091f034cce5">OBAromaticTyper::PropagatePotentialAromatic()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>.</p>

</div>
</div>
<a id="ae93c2ea0464618c797ae509fb3f3f455"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae93c2ea0464618c797ae509fb3f3f455">&sect;&nbsp;</a></span>GetDistance() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDistance </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the distance to the atom defined by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5595d8755d9ec6f539143f7d059124d0">OBMol::GetAtom()</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>.</p>

</div>
</div>
<a id="ac2a0e52810ad157f41a9ecbbae90ee48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2a0e52810ad157f41a9ecbbae90ee48">&sect;&nbsp;</a></span>GetDistance() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDistance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the distance to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> </dd></dl>

</div>
</div>
<a id="a247959fa683036745a1daca24fd4b219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a247959fa683036745a1daca24fd4b219">&sect;&nbsp;</a></span>GetDistance() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDistance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> *&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the distance to the coordinates of the supplied <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.4 </dd></dl>

</div>
</div>
<a id="a02dada3ad01505b2d4ddcbe7b9f006c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02dada3ad01505b2d4ddcbe7b9f006c8">&sect;&nbsp;</a></span>GetAngle() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAngle </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1589aac9963e7a8f58bffb24d85b9a16">OBMol::GetAngle()</a>.</p>

</div>
</div>
<a id="a6d6d9bdda3f480d358c14b2010034d41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d6d9bdda3f480d358c14b2010034d41">&sect;&nbsp;</a></span>GetAngle() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAngle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>

</div>
</div>
<a id="a616b5aac27eec22be5be998bc15d6349"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a616b5aac27eec22be5be998bc15d6349">&sect;&nbsp;</a></span>NewResidue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NewResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If no residue has been set for this atom, create a new one. </p>

</div>
</div>
<a id="a3e3b0d3b268e6abe26f87d4c422c31cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e3b0d3b268e6abe26f87d4c422c31cd">&sect;&nbsp;</a></span>AddResidue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AddResidue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td>
          <td class="paramname"><em>res</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add (set) the residue for this atom. </p>

</div>
</div>
<a id="a85fa173a3c3f488fc691a11eaad81439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85fa173a3c3f488fc691a11eaad81439">&sect;&nbsp;</a></span>DeleteResidue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete any residue associated with this atom. </p>

</div>
</div>
<a id="a5abeab08afbd305a51b9a9b5bd8fe356"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5abeab08afbd305a51b9a9b5bd8fe356">&sect;&nbsp;</a></span>AddBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AddBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a bond to the internal list. Does not update the bond. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, and <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>.</p>

</div>
</div>
<a id="a1773630938cf6a028368394b666d06bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1773630938cf6a028368394b666d06bf">&sect;&nbsp;</a></span>InsertBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void InsertBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Insert <code>bond</code> into the internal list at the position from <code>i</code> Does not modify the bond. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>.</p>

</div>
</div>
<a id="af47adec983369f903208f5fbae863406"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af47adec983369f903208f5fbae863406">&sect;&nbsp;</a></span>DeleteBond()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find <code>bond</code> and remove it from the internal list. Does not update the bond. </p>

</div>
</div>
<a id="a03fe71c8266435b7a76682e5c1472894"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03fe71c8266435b7a76682e5c1472894">&sect;&nbsp;</a></span>ClearBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ClearBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear all bonding information in this atom (does not delete them) </p>

</div>
</div>
<a id="a51618686d8ad1b5f66ff2fc2c607493e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51618686d8ad1b5f66ff2fc2c607493e">&sect;&nbsp;</a></span>HtoMethyl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HtoMethyl </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If this is a hydrogen atom, transform into a methyl group. </p>
<dl class="section return"><dt>Returns</dt><dd>success or failure </dd></dl>

</div>
</div>
<a id="af7a144a4ef755d5cc31e0d2e47a2e84a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7a144a4ef755d5cc31e0d2e47a2e84a">&sect;&nbsp;</a></span>SetHybAndGeom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetHybAndGeom </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>hyb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Change the hybridization of this atom and modify the geometry accordingly </p><dl class="section return"><dt>Returns</dt><dd>success or failure</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000084">Deprecated:</a></b></dt><dd>This will be removed in future versions of Open Babel </dd></dl>

</div>
</div>
<a id="a1a92c9eb656eb9ef43f03c717a38adc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a92c9eb656eb9ef43f03c717a38adc3">&sect;&nbsp;</a></span>ForceNoH()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ForceNoH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mark that atom has no hydrogens attached. </p>

</div>
</div>
<a id="a55e8f858833eee0408aee7b0f1b9c22c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55e8f858833eee0408aee7b0f1b9c22c">&sect;&nbsp;</a></span>HasNoHForced()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasNoHForced </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>if atom has been marked as having no hydrogens attached </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>.</p>

</div>
</div>
<a id="a03e54abd32434bd610bfd4430d91b7b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03e54abd32434bd610bfd4430d91b7b9">&sect;&nbsp;</a></span>ForceImplH()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ForceImplH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Mark that atom is not hydrogen deficient (For SMILES input) </p><dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

</div>
</div>
<a id="a8920c0ef5c32f64887d09c3b2da857d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8920c0ef5c32f64887d09c3b2da857d5">&sect;&nbsp;</a></span>HasImplHForced()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasImplHForced </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>if atom has been marked as having no hydrogens attached </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>.</p>

</div>
</div>
<a id="a3be22bbc7a222c8f7255a6f79d937cb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3be22bbc7a222c8f7255a6f79d937cb4">&sect;&nbsp;</a></span>CountFreeOxygens()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int CountFreeOxygens </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of oxygen atoms connected that only have one heavy valence </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab7dd88da6d7a1e72f636c50586d5551d">OBAtom::IsCarboxylOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a256fca254282407b1342875266769463">OBAtom::IsNitroOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5b1d4c9a297629beacb66c0ef04070e9">OBAtom::IsPhosphateOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a76ecda2fd4bf9207310088f25f526ea8">OBAtom::IsSulfateOxygen()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a47ebe26957d5b56a72772cfd24a29db1">OpenBabel::IsSulfoneOxygen()</a>.</p>

</div>
</div>
<a id="adc9e3255d3d68b9d1d4ddd49989e7380"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc9e3255d3d68b9d1d4ddd49989e7380">&sect;&nbsp;</a></span>CountFreeSulfurs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int CountFreeSulfurs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of sulfur atoms connected that only have one heavy valence </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.4 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab7dd88da6d7a1e72f636c50586d5551d">OBAtom::IsCarboxylOxygen()</a>.</p>

</div>
</div>
<a id="a7f16ab619578cd847cd1fa024f4ee708"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f16ab619578cd847cd1fa024f4ee708">&sect;&nbsp;</a></span>ImplicitHydrogenCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ImplicitHydrogenCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of hydrogens needed to fill the implicit valence of this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#abcf2e89fef03dd291e22507c51af8965">OBMol::ConvertZeroBonds()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7cac960f30506aa53d083983845032df">OBMol::GetExactMass()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a77cd52b60b431c19aa7debcd0d92e07d">OBMol::GetMolWt()</a>.</p>

</div>
</div>
<a id="a43f36d8b94ce8835b79689adfa9afad8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43f36d8b94ce8835b79689adfa9afad8">&sect;&nbsp;</a></span>ExplicitHydrogenCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ExplicitHydrogenCount </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ExcludeIsotopes</em> = <code>false</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of hydrogens explicitly bound to this atom, optionally excluding D,T and isotope explicitly set to 1 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="aef9a302705cda0731e77f82f3b1483a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef9a302705cda0731e77f82f3b1483a0">&sect;&nbsp;</a></span>MemberOfRingCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int MemberOfRingCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of rings that contain this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>.</p>

</div>
</div>
<a id="af4a516c81946e3a8c0ca80420358dbe2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4a516c81946e3a8c0ca80420358dbe2">&sect;&nbsp;</a></span>MemberOfRingSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int MemberOfRingSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The size of the smallest ring that contains this atom (0 if not in a ring) </dd></dl>

</div>
</div>
<a id="a477acbd6186fc09959e879d26b3af56f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a477acbd6186fc09959e879d26b3af56f">&sect;&nbsp;</a></span>CountRingBonds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int CountRingBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of explicit ring connections to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>.</p>

</div>
</div>
<a id="a83db73f33e51b011f21358bd5a0463ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83db73f33e51b011f21358bd5a0463ff">&sect;&nbsp;</a></span>SmallestBondAngle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double SmallestBondAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The smallest angle of bonds to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>.</p>

</div>
</div>
<a id="ae9468871377da00c7b949b20d6d17f3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9468871377da00c7b949b20d6d17f3d">&sect;&nbsp;</a></span>AverageBondAngle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double AverageBondAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The average angle of bonds to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="a437ef8d4fce62b10898a074ec147c8c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a437ef8d4fce62b10898a074ec147c8c5">&sect;&nbsp;</a></span>BOSum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int BOSum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The sum of the bond orders of the bonds to the atom (i.e. double bond = 2...) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a54b6a6c4fabf98535ff08b25ea9b0bfc">OBMol::MakeDativeBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="ac724d08f837518953468665b9dc5ab23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac724d08f837518953468665b9dc5ab23">&sect;&nbsp;</a></span>KBOSum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int KBOSum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The sum of the bond orders of bonds to the atom, considering only KDouble, KTriple bonds </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000008">Deprecated:</a></b></dt><dd>Use <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a437ef8d4fce62b10898a074ec147c8c5">BOSum()</a> instead </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>.</p>

</div>
</div>
<a id="a3fea4e6f09eb8fbfde323d22ae2c6e3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fea4e6f09eb8fbfde323d22ae2c6e3e">&sect;&nbsp;</a></span>LewisAcidBaseCounts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pair&lt; int, int &gt; LewisAcidBaseCounts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Lewis acid/base vacancies for this atom </p><dl class="section return"><dt>Returns</dt><dd>A pair of integers, where first is acid count and second is base count </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.3</dd></dl>
<p>The returned values count whole lone pairs, so the acid count is the number of electron pairs desired and the base count is the number of electron pairs available.</p>
<pre class="fragment">Algorithm from:
Clark, A. M. Accurate Specification of Molecular Structures: The Case for
Zero-Order Bonds and Explicit Hydrogen Counting. Journal of Chemical Information
and Modeling, 51, 3149-3157 (2011). http://pubs.acs.org/doi/abs/10.1021/ci200488k
</pre> 
<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#abcf2e89fef03dd291e22507c51af8965">OBMol::ConvertZeroBonds()</a>.</p>

</div>
</div>
<a id="ae3177d9e8b583d3cda02b90c141894c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3177d9e8b583d3cda02b90c141894c5">&sect;&nbsp;</a></span>HasResidue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is there any residue information? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>.</p>

</div>
</div>
<a id="acf8e48cf13e5ccecd7eaf64bf4393081"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf8e48cf13e5ccecd7eaf64bf4393081">&sect;&nbsp;</a></span>IsHetAtom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHetAtom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this a HETATM in a residue (returns false if not in a residue) </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.4 </dd></dl>

</div>
</div>
<a id="ab633bc0f8f40dfcedf42940ab8a5316c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab633bc0f8f40dfcedf42940ab8a5316c">&sect;&nbsp;</a></span>IsHydrogen() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom hydrogen? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4e2ddc39752d20fabcda1afc1cc4e8e4">OBMol::DeleteHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a43f36d8b94ce8835b79689adfa9afad8">OBAtom::ExplicitHydrogenCount()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7cac960f30506aa53d083983845032df">OBMol::GetExactMass()</a>, <a class="el" href="namespaceOpenBabel.shtml#aa5e97bc8a80ef2bf7fe9aae240ec1e62">OpenBabel::GetHeavyAtomCoords()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa7fc4fb37c3e28286d47d36b812303d9">OBAtom::GetHvyValence()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a77cd52b60b431c19aa7debcd0d92e07d">OBMol::GetMolWt()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBStericConformerFilter.shtml#aa37ca1a89ffb71694922e4b90b012ab2">OBStericConformerFilter::IsGood()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a71e3c9571430e3d6587f7b80ee8fb926">OBAtom::IsHbondDonor()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afa92da4c4cfc01b7c0d4385f487b42a4">OBMol::NumHvyAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#ac56e2c2ffd9fdf7448b3bda78cdc9549">OBAlign::SetRefMol()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#a2a325b0a2af5bbc3511c6f536e686e21">OBAlign::SetTargetMol()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="a7102b6e4d75ace5bcc21957c9a696110"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7102b6e4d75ace5bcc21957c9a696110">&sect;&nbsp;</a></span>IsHydrogen() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1f0a167775136e911cd349cdd8923b24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f0a167775136e911cd349cdd8923b24">&sect;&nbsp;</a></span>IsCarbon()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCarbon </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom carbon? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a7e62ffcac6073c5fb792d2f5bc62c522">OpenBabel::potentialAromaticBonds()</a>.</p>

</div>
</div>
<a id="aacb82bc548922e4f1276a255f212f143"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacb82bc548922e4f1276a255f212f143">&sect;&nbsp;</a></span>IsNitrogen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNitrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom nitrogen? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a54b6a6c4fabf98535ff08b25ea9b0bfc">OBMol::MakeDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad69498ec216d37651bbcfd6e76d7c67a">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a id="af7e8030ce19d79c9ad0b3cfbf116dc59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7e8030ce19d79c9ad0b3cfbf116dc59">&sect;&nbsp;</a></span>IsOxygen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom oxygen? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3be22bbc7a222c8f7255a6f79d937cb4">OBAtom::CountFreeOxygens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad651ae188decc15fa8ec3907860e585e">OBAtom::IsAromaticNOxide()</a>, <a class="el" href="namespaceOpenBabel.shtml#a47ebe26957d5b56a72772cfd24a29db1">OpenBabel::IsSulfoneOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>.</p>

</div>
</div>
<a id="aa71152591d5cc51fc2f3701ff7de7dfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa71152591d5cc51fc2f3701ff7de7dfd">&sect;&nbsp;</a></span>IsSulfur()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSulfur </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom sulfur? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#adc9e3255d3d68b9d1d4ddd49989e7380">OBAtom::CountFreeSulfurs()</a>, <a class="el" href="namespaceOpenBabel.shtml#a51fe0e9eb03d3a861ca5d5c794acf011">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad69498ec216d37651bbcfd6e76d7c67a">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a id="ab8c7f052f9380b98eef3b83da640eba3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8c7f052f9380b98eef3b83da640eba3">&sect;&nbsp;</a></span>IsPhosphorus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPhosphorus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom phosphorus? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>.</p>

</div>
</div>
<a id="aeda62da8823b248654404fb15f314a66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeda62da8823b248654404fb15f314a66">&sect;&nbsp;</a></span>IsAromatic()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom aromatic? </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, and <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml#ae23c9361ebb2522c63aacb2656c90720">OBQueryAtom::Matches()</a>.</p>

</div>
</div>
<a id="ae016e13adf41d7c12a3d22147f0b870e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae016e13adf41d7c12a3d22147f0b870e">&sect;&nbsp;</a></span>IsInRing()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom in a ring? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml#ae23c9361ebb2522c63aacb2656c90720">OBQueryAtom::Matches()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>.</p>

</div>
</div>
<a id="aefc6f8e669a1810e383ab1459324c38e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefc6f8e669a1810e383ab1459324c38e">&sect;&nbsp;</a></span>IsInRingSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRingSize </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is the atom in a ring of a given size? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>.</p>

</div>
</div>
<a id="ad89058fb178a4b056a0786a5ddc8e162"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad89058fb178a4b056a0786a5ddc8e162">&sect;&nbsp;</a></span>IsHeteroatom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHeteroatom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom an element in the 15th or 16th main groups (i.e., N, O, P, S ...) ? </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a03272525cd445da2a6ec5507c62fdbda">OBAtom::GetHeteroValence()</a>.</p>

</div>
</div>
<a id="a5d150980792220d4929ac312bfce1636"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d150980792220d4929ac312bfce1636">&sect;&nbsp;</a></span>IsNotCorH()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNotCorH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom any element except carbon or hydrogen? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a54b6a6c4fabf98535ff08b25ea9b0bfc">OBMol::MakeDativeBonds()</a>.</p>

</div>
</div>
<a id="a35892bf1255c1b8824c870e5460fd641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35892bf1255c1b8824c870e5460fd641">&sect;&nbsp;</a></span>IsConnected()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConnected </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom directly connected to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a>? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="classOpenBabel_1_1OBStericConformerFilter.shtml#aa37ca1a89ffb71694922e4b90b012ab2">OBStericConformerFilter::IsGood()</a>, <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a19ad5800c1b20981621429c4c16a845e">OBMolPairIter::OBMolPairIter()</a>, and <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a82f19c09f49162a5d747e6d302f2bd74">OBMolPairIter::operator++()</a>.</p>

</div>
</div>
<a id="a895cbd0d89d126571465b59ee0a3b79a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a895cbd0d89d126571465b59ee0a3b79a">&sect;&nbsp;</a></span>IsOneThree()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneThree </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> in a 1,3 bonding pattern? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a19ad5800c1b20981621429c4c16a845e">OBMolPairIter::OBMolPairIter()</a>, and <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a82f19c09f49162a5d747e6d302f2bd74">OBMolPairIter::operator++()</a>.</p>

</div>
</div>
<a id="ad1b5c7353abc13edd81339fc58206a3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1b5c7353abc13edd81339fc58206a3b">&sect;&nbsp;</a></span>IsOneFour()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneFour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> in a 1,4 bonding pattern? </dd></dl>

</div>
</div>
<a id="ab7dd88da6d7a1e72f636c50586d5551d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7dd88da6d7a1e72f636c50586d5551d">&sect;&nbsp;</a></span>IsCarboxylOxygen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCarboxylOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom an oxygen in a carboxyl (-CO2 or CO2H) group? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, and <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>.</p>

</div>
</div>
<a id="a5b1d4c9a297629beacb66c0ef04070e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b1d4c9a297629beacb66c0ef04070e9">&sect;&nbsp;</a></span>IsPhosphateOxygen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPhosphateOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom an oxygen in a phosphate (R-PO3) group? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>.</p>

</div>
</div>
<a id="a76ecda2fd4bf9207310088f25f526ea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76ecda2fd4bf9207310088f25f526ea8">&sect;&nbsp;</a></span>IsSulfateOxygen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSulfateOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom an oxygen in a sulfate (-SO3) group? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>.</p>

</div>
</div>
<a id="a256fca254282407b1342875266769463"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a256fca254282407b1342875266769463">&sect;&nbsp;</a></span>IsNitroOxygen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNitroOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom an oxygen in a nitro (-NO2) group? </dd></dl>

</div>
</div>
<a id="ac8299dd769242a441864a7ad2fcb92b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8299dd769242a441864a7ad2fcb92b6">&sect;&nbsp;</a></span>IsAmideNitrogen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAmideNitrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if nitrogen is part of an amide. </p>
<dl class="section return"><dt>Returns</dt><dd>Is this atom a nitrogen in an amide (-C(=O)NR2) group? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>.</p>

</div>
</div>
<a id="a6da4cfc5bbc2e4c9b358bccd5d97e51f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6da4cfc5bbc2e4c9b358bccd5d97e51f">&sect;&nbsp;</a></span>IsPolarHydrogen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPolarHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom a hydrogen connected to a polar atom (i.e., N, O, P, S) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a43904e621e60855bc1818b56a7bd4b93">OBMol::DeletePolarHydrogens()</a>.</p>

</div>
</div>
<a id="ae519982c28911c0906e9181c46d7bdbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae519982c28911c0906e9181c46d7bdbc">&sect;&nbsp;</a></span>IsNonPolarHydrogen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNonPolarHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom a hydrogen connected to a non-polar atom (i.e., C) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a2993ead33ec2a4b15dd536d798ff844d">OBMol::DeleteNonPolarHydrogens()</a>.</p>

</div>
</div>
<a id="ad651ae188decc15fa8ec3907860e585e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad651ae188decc15fa8ec3907860e585e">&sect;&nbsp;</a></span>IsAromaticNOxide()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromaticNOxide </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom an aromatic nitrogen with at least one double bond to an oxygen atom </dd></dl>

</div>
</div>
<a id="a63258442848bd8e29e0d5224e145ad83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63258442848bd8e29e0d5224e145ad83">&sect;&nbsp;</a></span>IsChiral()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsChiral </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom chiral?</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000011">Todo:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>.</p>

</div>
</div>
<a id="afca1f93ec35d38ad6b7e8eb634bd5d45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afca1f93ec35d38ad6b7e8eb634bd5d45">&sect;&nbsp;</a></span>IsAxial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAxial </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom an axial atom in a ring </dd></dl>

</div>
</div>
<a id="a4d1f38bbe03483629778078dcc4e75a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d1f38bbe03483629778078dcc4e75a0">&sect;&nbsp;</a></span>IsClockwise()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsClockwise </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000009">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a id="af3abb70d4f818b9c3e416928afa2e844"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3abb70d4f818b9c3e416928afa2e844">&sect;&nbsp;</a></span>IsAntiClockwise()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAntiClockwise </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000010">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a id="a9880a080dd0bce244291bde514b67d20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9880a080dd0bce244291bde514b67d20">&sect;&nbsp;</a></span>IsPositiveStereo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPositiveStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000011">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a id="a61e5344c34c172e9b889e59255aff6de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61e5344c34c172e9b889e59255aff6de">&sect;&nbsp;</a></span>IsNegativeStereo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNegativeStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000012">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a id="a8844e382c76003229ee5fdd0341aacee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8844e382c76003229ee5fdd0341aacee">&sect;&nbsp;</a></span>HasChiralitySpecified()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasChiralitySpecified </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000013">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a id="a63911efd550113b275239d322670986d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63911efd550113b275239d322670986d">&sect;&nbsp;</a></span>HasChiralVolume()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasChiralVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000014">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a id="a63e02252214e540d56815820715f1ae3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63e02252214e540d56815820715f1ae3">&sect;&nbsp;</a></span>IsHbondAcceptor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondAcceptor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom a hydrogen-bond acceptor (considering also atom surrounding) </dd></dl>

</div>
</div>
<a id="a8bd101b96407cc7fe209277dd26cc975"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bd101b96407cc7fe209277dd26cc975">&sect;&nbsp;</a></span>IsHbondAcceptorSimple()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondAcceptorSimple </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom a hydrogen-bond acceptor (old function)? </dd></dl>

</div>
</div>
<a id="a71e3c9571430e3d6587f7b80ee8fb926"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71e3c9571430e3d6587f7b80ee8fb926">&sect;&nbsp;</a></span>IsHbondDonor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondDonor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom a hydrogen-bond donor? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a135d08515315b5daa95e6081dc104a38">OBAtom::IsHbondDonorH()</a>.</p>

</div>
</div>
<a id="a135d08515315b5daa95e6081dc104a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a135d08515315b5daa95e6081dc104a38">&sect;&nbsp;</a></span>IsHbondDonorH()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondDonorH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this a hydrogen atom attached to a hydrogen-bond donor? </dd></dl>

</div>
</div>
<a id="a4c05d5c41594ed1af3afe5af29032968"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c05d5c41594ed1af3afe5af29032968">&sect;&nbsp;</a></span>IsMetal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMetal </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Is this atom a metal? </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.4 </dd></dl>

</div>
</div>
<a id="a4f5a47b31d2c120928f77dad66e655cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f5a47b31d2c120928f77dad66e655cc">&sect;&nbsp;</a></span>HasAlphaBetaUnsat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasAlphaBetaUnsat </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>includePandS</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether a neighboring atom (alpha) has an unsaturated bond to a third atom (beta). </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">includePandS</td><td>Whether to include phosphorus and sulfur neighbors in this determination (or to exclude them)</td></tr>
  </table>
  </dd>
</dl>
<p>This can be sketched as follows </p><div class="fragment"><div class="line"><span class="charliteral">&#39;*&#39;</span></div><div class="line">   \</div><div class="line">    a=b</div></div><!-- fragment --><p> where a and b are the 'apha' and 'beta' atoms, respectively and '*' indicates the current atom. </p>

</div>
</div>
<a id="addb891e1fa000764b9030d5e08c0c67a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addb891e1fa000764b9030d5e08c0c67a">&sect;&nbsp;</a></span>HasBondOfOrder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasBondOfOrder </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>bo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether this atom is connected to any bond with order == <code>bo</code> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="a4fc49ec59966a08059750ecd2e9d20a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fc49ec59966a08059750ecd2e9d20a5">&sect;&nbsp;</a></span>CountBondsOfOrder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CountBondsOfOrder </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>bo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The count of bonds connected to this atom with order == <code>bo</code> </dd></dl>

</div>
</div>
<a id="a2d1a92d262f9ae24f29fa80d96d70128"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d1a92d262f9ae24f29fa80d96d70128">&sect;&nbsp;</a></span>HighestBondOrder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int HighestBondOrder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The maximum bond order for this atom </dd></dl>

</div>
</div>
<a id="ae3d85200b00bf0ad59725175d606acfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3d85200b00bf0ad59725175d606acfe">&sect;&nbsp;</a></span>HasNonSingleBond()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasNonSingleBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether this atom is connected to any bond with order &gt;1 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="af347b80d156587c2287754345606c78d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af347b80d156587c2287754345606c78d">&sect;&nbsp;</a></span>HasSingleBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasSingleBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Does this atom have a single bond </dd></dl>

</div>
</div>
<a id="a0cb35a21cc08897bc7f9b01ae4561e50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cb35a21cc08897bc7f9b01ae4561e50">&sect;&nbsp;</a></span>HasDoubleBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasDoubleBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Does this atom have a double bond </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>.</p>

</div>
</div>
<a id="a11bf8aa7f79e9b9bdef2602808bb794d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11bf8aa7f79e9b9bdef2602808bb794d">&sect;&nbsp;</a></span>HasAromaticBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasAromaticBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Does this atom have an aromatic bond </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>.</p>

</div>
</div>
<a id="abfdefac42d3c895920f1f715f0d710a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfdefac42d3c895920f1f715f0d710a5">&sect;&nbsp;</a></span>MatchesSMARTS()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool MatchesSMARTS </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pattern</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether this atom matches the first atom in a given SMARTS pattern </dd></dl>

</div>
</div>
<a id="abdc8ffeb0749b563e1108a9ceaa0b394"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdc8ffeb0749b563e1108a9ceaa0b394">&sect;&nbsp;</a></span>DoTransformations()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Perform a set of transformations specified by the user</p>
<p>Typically these are program options to filter or modify an object For example, see <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab72bba66cc9e40fb3b657a30d87bbe6d">OBMol::ClassDescription()</a> Base type does nothing </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol</a>.</p>

</div>
</div>
<a id="a6bb6ed5c064e3957d8dd03aba51e61f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bb6ed5c064e3957d8dd03aba51e61f7">&sect;&nbsp;</a></span>ClassDescription()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A list of descriptions of command-line options for <a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations()</a> </dd></dl>

</div>
</div>
<a id="ab2f0cea1c162bbe8dd603528a3da5c87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2f0cea1c162bbe8dd603528a3da5c87">&sect;&nbsp;</a></span>CastAndClear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T* CastAndClear </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clear</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>By default clears the object. Called from ReadMolecule of most format classes. </p>

</div>
</div>
<a id="a0a6c35f6a88ad291ed821c856e4d887f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a6c35f6a88ad291ed821c856e4d887f">&sect;&nbsp;</a></span>GetTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* GetTitle </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>replaceNewlines</em> = <code>true</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base type does nothing Made virtual around r3535 to simplify code which passes around OBBase*. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a2ac1fac8a7d7ad373c39710b62b3e0a7">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a id="a366c8a142b8c16554597e82320dfd0e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a366c8a142b8c16554597e82320dfd0e0">&sect;&nbsp;</a></span>SetTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetTitle </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#acfe3b729dc90c4c5e21684e3a60653af">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a id="a86dd58fc1da5652d70e823fa77cc1637"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86dd58fc1da5652d70e823fa77cc1637">&sect;&nbsp;</a></span>HasData() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a4e794d96851deaad479e17b30928a3cd">OBDescriptor::MatchPairData()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a2a5208bfd803385534526eea570bf6b0">OBMoleculeFormat::ReadChemObjectImpl()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="a01b429ffcaf47cf265acd439ed2faca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01b429ffcaf47cf265acd439ed2faca0">&sect;&nbsp;</a></span>HasData() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists </dd></dl>

</div>
</div>
<a id="a6cb103f12f49d86132ece200000da830"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cb103f12f49d86132ece200000da830">&sect;&nbsp;</a></span>HasData() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists, for a given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a id="a797e5b4d20b6233062d2fdba78a08e06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a797e5b4d20b6233062d2fdba78a08e06">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete any data matching the given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1a089d9c827830b5a9a2e644b267e510">OBDescriptor::DeleteProperties()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a2d560c7f2e4a9fdd1814ed8e09bd02">OBMol::RenumberAtoms()</a>.</p>

</div>
</div>
<a id="ab586df65e3f115b69510820b34098ce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab586df65e3f115b69510820b34098ce9">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>gd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete the given generic data from this object. </p>

</div>
</div>
<a id="a030adad5b052ff3d390f13e1f981201e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a030adad5b052ff3d390f13e1f981201e">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>vg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete all of the given generic data from this object. </p>

</div>
</div>
<a id="aa068a2a7b64d2ee73aedb8c6e3cf0c4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes the generic data with the specified attribute, returning false if not found. </p>

</div>
</div>
<a id="adb6b0ec89bfea783825b3b466e4dbc00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb6b0ec89bfea783825b3b466e4dbc00">&sect;&nbsp;</a></span>SetData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a data object; does nothing if d==NULL. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ac14285658929bd5af45a1560cb1ec15b">AliasData::RevertToAliasForm()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="aa6f692332837387535e337413d0100de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6f692332837387535e337413d0100de">&sect;&nbsp;</a></span>CloneData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CloneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a copy of a data object; does nothing if d == NULL </p><dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>.</p>

</div>
</div>
<a id="a2de970fc10391cb7f06c77e3b492f582"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2de970fc10391cb7f06c77e3b492f582">&sect;&nbsp;</a></span>DataSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t DataSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data. ">OBGenericData</a> items attached to this molecule. </dd></dl>

</div>
</div>
<a id="aee672d91b694547fb072fdaa8e03cfe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee672d91b694547fb072fdaa8e03cfe9">&sect;&nbsp;</a></span>GetData() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the first matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> or NULL if nothing matches </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#a632be87a51811b515f7e9a5fc18e4476">OpenBabel::extract_thermochemistry()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a48b73b591ecad6e541b5ceedb6618715">OBMolAngleIter::OBMolAngleIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a15547553c4072355819acbcf350dde77">OBMolRingIter::OBMolRingIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml#a7746689f376b4b9f2fc6a103dc101d38">OBMolTorsionIter::OBMolTorsionIter()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>.</p>

</div>
</div>
<a id="a22f0eade8b5924eec28ad50f0ce2031f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f0eade8b5924eec28ad50f0ce2031f">&sect;&nbsp;</a></span>GetData() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a id="a483b277678a8ca48998742c80985fd0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483b277678a8ca48998742c80985fd0b">&sect;&nbsp;</a></span>GetData() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a id="a90a551ff0a0ed3fa58745dff0ecacdaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a551ff0a0ed3fa58745dff0ecacdaa">&sect;&nbsp;</a></span>GetData() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all data, suitable for iterating </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="aa959146c3f7b458009dc04f61b5a2e7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa959146c3f7b458009dc04f61b5a2e7f">&sect;&nbsp;</a></span>GetData() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all data with a specific origin, suitable for iterating </dd></dl>

</div>
</div>
<a id="afb56decc1b824c9fad980fc22e1d778c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb56decc1b824c9fad980fc22e1d778c">&sect;&nbsp;</a></span>GetAllData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetAllData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the all matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> or an empty vector if nothing matches </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3280c4291f365e26ad615eb38c877b25">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="a15b47c65393d46fde62d1f0a19bcf9fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15b47c65393d46fde62d1f0a19bcf9fa">&sect;&nbsp;</a></span>BeginData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> BeginData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator pointing to the beginning of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a117c836710dd3aaa8748509262a5c280"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a117c836710dd3aaa8748509262a5c280">&sect;&nbsp;</a></span>EndData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> EndData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator pointing to the end of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a2a4ac28765690d9b074521327cb4876b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a4ac28765690d9b074521327cb4876b">&sect;&nbsp;</a></span>_ele</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char _ele</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>atomic number (type unsigned char to minimize space &ndash; allows for 0..255 elements) </p>

</div>
</div>
<a id="ab3e028e65ae7c0dac55997f2cb7281ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3e028e65ae7c0dac55997f2cb7281ce">&sect;&nbsp;</a></span>_impval</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char _impval</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>implicit valence </p>

</div>
</div>
<a id="a2ad4c66def6b16fe190ac28633fb1f3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ad4c66def6b16fe190ac28633fb1f3f">&sect;&nbsp;</a></span>_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char _type[<a class="el" href="atom_8h.shtml#a17ee9e29394f0bd750a589cd03e69ff1">OBATOM_TYPE_LEN</a>]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>atomic type </p>

</div>
</div>
<a id="a6e636025c5db07bf67523b31a55f6327"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e636025c5db07bf67523b31a55f6327">&sect;&nbsp;</a></span>_fcharge</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">short _fcharge</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>formal charge </p>

</div>
</div>
<a id="ad60f474b9381f875e4b6e3f5df457c9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad60f474b9381f875e4b6e3f5df457c9a">&sect;&nbsp;</a></span>_isotope</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short _isotope</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>isotope (0 = most abundant) </p>

</div>
</div>
<a id="aec3b74d938a5e47bc6a6627f64d86e27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec3b74d938a5e47bc6a6627f64d86e27">&sect;&nbsp;</a></span>_spinmultiplicity</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">short _spinmultiplicity</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>atomic spin, e.g., 2 for radical 1 or 3 for carbene </p>

</div>
</div>
<a id="a1219a011a5e0ec59c67a5a873d81986c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1219a011a5e0ec59c67a5a873d81986c">&sect;&nbsp;</a></span>_idx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _idx</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>unique node index (<a class="el" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab994a975e39f5c62288f4f972b6f90c9" title="Set atom index (i.e., in an OBMol) ">SetIdx()</a>) </p>

</div>
</div>
<a id="aa15238ffbdb1330727678c9d6553d6ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa15238ffbdb1330727678c9d6553d6ba">&sect;&nbsp;</a></span>_parent</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* _parent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>parent molecule (if any) </p>

</div>
</div>
<a id="a3c7208419c7703e947e9a1c365838b98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c7208419c7703e947e9a1c365838b98">&sect;&nbsp;</a></span>_vbond</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>*&gt; _vbond</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>bonds to this atom &ndash; assumed to be one of the endpoints </p>

</div>
</div>
<a id="aef178db02607fe00f112bd1a7f5f4d2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef178db02607fe00f112bd1a7f5f4d2b">&sect;&nbsp;</a></span>_cidx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _cidx</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>index into coordinate array </p>

</div>
</div>
<a id="a5d400386667c899017669303bdec09cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d400386667c899017669303bdec09cd">&sect;&nbsp;</a></span>_hyb</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short _hyb</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>hybridization </p>

</div>
</div>
<a id="a5cc9f88f4cc5fda10e7932cd59a87f16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cc9f88f4cc5fda10e7932cd59a87f16">&sect;&nbsp;</a></span>_flags</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short _flags</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>bitwise flags (e.g. aromaticity) </p>

</div>
</div>
<a id="ae4b9cf0b2f94fc6befff220367fccd0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4b9cf0b2f94fc6befff220367fccd0a">&sect;&nbsp;</a></span>_pcharge</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _pcharge</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>partial charge </p>

</div>
</div>
<a id="a91a32f6c060e12e4d188974db5b111d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91a32f6c060e12e4d188974db5b111d3">&sect;&nbsp;</a></span>_c</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double** _c</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>coordinate array in double* </p>

</div>
</div>
<a id="ae8dcade9402fad862f0391488350ea3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8dcade9402fad862f0391488350ea3e">&sect;&nbsp;</a></span>_v</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> _v</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>coordinate vector </p>

</div>
</div>
<a id="ac26545dc3d68694f0a7b6f4a776f7a17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac26545dc3d68694f0a7b6f4a776f7a17">&sect;&nbsp;</a></span>_residue</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>* _residue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>parent residue (if applicable) </p>

</div>
</div>
<a id="accc49a515c7a81154bd46a8ea8a16204"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accc49a515c7a81154bd46a8ea8a16204">&sect;&nbsp;</a></span>_id</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long _id</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>unique id </p>

</div>
</div>
<a id="a6368d7673f23186649b2969ade3661d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6368d7673f23186649b2969ade3661d7">&sect;&nbsp;</a></span>Visit</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Visit</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Used internally by graph traversal algorithms. </p>

</div>
</div>
<a id="af7811cf8aadbf3b3477c560b0ef2f797"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7811cf8aadbf3b3477c560b0ef2f797">&sect;&nbsp;</a></span>_vdata</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; _vdata</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Custom data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aafa7e4623d4c3c0305b5523ca8a77e14">OBMol::OBMol()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="atom_8h_source.shtml">atom.h</a></li>
<li><a class="el" href="atom_8cpp.shtml">atom.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
