<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>conformersearch.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">conformersearch.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="conformersearch_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">conformersearch.h - Conformer searching using genetic algorithm.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 2010 Tim Vandermeersch</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2012 Materials Design, Inc.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_CONFORMERSEARCH_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_CONFORMERSEARCH_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="rotor_8h.shtml">openbabel/rotor.h</a>&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="rotamer_8h.shtml">openbabel/rotamer.h</a>&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a> {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">   29</a></span>&#160;  <span class="keyword">typedef</span> std::vector&lt;int&gt; <a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">RotorKey</a>;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">   30</a></span>&#160;  <span class="keyword">typedef</span> std::vector&lt;RotorKey&gt; <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a>;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a9e6627493ac696e72867261d976dcde7">   31</a></span>&#160;  <span class="keyword">typedef</span> std::map&lt;std::vector&lt;int&gt;,<span class="keywordtype">double</span>&gt; <a class="code" href="namespaceOpenBabel.shtml#a9e6627493ac696e72867261d976dcde7">mapRotorEnergy</a>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">//  OBConformerFilter(s)</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerFilter.shtml">   54</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsGood(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keyword">const</span> RotorKey &amp;key, <span class="keywordtype">double</span> *coords) = 0;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a>() = 0;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  };</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerFilters.shtml">   79</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml">OBConformerFilters</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerFilters.shtml#a70f9d4f020f9d1f777a9987d1d2457b6">   85</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml#a70f9d4f020f9d1f777a9987d1d2457b6">OBConformerFilters</a>(<span class="keyword">const</span> std::vector&lt;OBConformerFilter*&gt; &amp;filters) : m_filters(filters)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      }</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerFilters.shtml#aa37ca1a89ffb71694922e4b90b012ab2">   92</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml#aa37ca1a89ffb71694922e4b90b012ab2">IsGood</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keyword">const</span> RotorKey &amp;key, <span class="keywordtype">double</span> *coords)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; m_filters.size(); ++i)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;          <span class="keywordflow">if</span> (!m_filters[i]-&gt;IsGood(mol, key, coords))</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerFilters.shtml#a18cff861d594e096ca411d3cefafe114">  100</a></span>&#160;      std::vector&lt;OBConformerFilter*&gt; <a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml#a18cff861d594e096ca411d3cefafe114">m_filters</a>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  };</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBStericConformerFilter.shtml">  112</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBStericConformerFilter.shtml">OBStericConformerFilter</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <a class="code" href="classOpenBabel_1_1OBStericConformerFilter.shtml">OBStericConformerFilter</a> ();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <a class="code" href="classOpenBabel_1_1OBStericConformerFilter.shtml">OBStericConformerFilter</a> (<span class="keywordtype">double</span> cutoff, <span class="keywordtype">double</span> vdw_factor = 0.5, <span class="keywordtype">bool</span> check_hydrogens = <span class="keyword">true</span>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="keywordtype">bool</span> IsGood(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keyword">const</span> RotorKey &amp;key, <span class="keywordtype">double</span> *coords);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keywordtype">double</span> m_cutoff; </div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordtype">double</span> m_vdw_factor;              </div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordtype">bool</span> m_check_hydrogens;           </div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  };</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="comment">//  OBConformerScore(s)</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerScore.shtml">  143</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">  149</a></span>&#160;      <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> { HighScore, LowScore };</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> GetPreferred() = 0;</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cfa518f6bbe779cc0085da5461c257fd8a6">  157</a></span>&#160;      <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> { Highest, Lowest, <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cfa518f6bbe779cc0085da5461c257fd8a6">Sum</a>, Average };</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> GetConvergence() = 0;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> RotorKeys &amp;keys,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;          <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers) = 0;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a>() = 0;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  };</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRMSDConformerScore.shtml">  178</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml">OBRMSDConformerScore</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">  181</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> <a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">GetPreferred</a>() { <span class="keywordflow">return</span> HighScore; }</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">  182</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> <a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">GetConvergence</a>() { <span class="keywordflow">return</span> Average; }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> RotorKeys &amp;keys,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  };</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBEnergyConformerScore.shtml">  192</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml">OBEnergyConformerScore</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a1cc2afa4f35f3b5d3124b02aec31d59c">  195</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a1cc2afa4f35f3b5d3124b02aec31d59c">OBEnergyConformerScore</a> () {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        energy_map.clear ();</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        energy_ncompute = 0;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        energy_nrequest = 0;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;      }</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a23c4ebfa5b5ac02c6ae80e341abd1997">  200</a></span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a23c4ebfa5b5ac02c6ae80e341abd1997">GetNbEnergyCompute</a> () {<span class="keywordflow">return</span> energy_ncompute;}</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#afcec3965334493a8dc91082a6fba71eb">  201</a></span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#afcec3965334493a8dc91082a6fba71eb">GetNbEnergyRequest</a> () {<span class="keywordflow">return</span> energy_nrequest;}</div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">  202</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">GetPreferred</a>() { <span class="keywordflow">return</span> LowScore; }</div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">  203</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">GetConvergence</a>() { <span class="keywordflow">return</span> Lowest; }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> RotorKeys &amp;keys,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;          <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      mapRotorEnergy energy_map;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> energy_ncompute;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> energy_nrequest;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  };</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  </div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml">  217</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml">OBMinimizingEnergyConformerScore</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a3f38c0aa726c1f175843452a5bec6e5e">  220</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a3f38c0aa726c1f175843452a5bec6e5e">OBMinimizingEnergyConformerScore</a> () {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        energy_map.clear ();</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        energy_ncompute = 0;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        energy_nrequest = 0;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      }</div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a23c4ebfa5b5ac02c6ae80e341abd1997">  225</a></span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a23c4ebfa5b5ac02c6ae80e341abd1997">GetNbEnergyCompute</a> () {<span class="keywordflow">return</span> energy_ncompute;}</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#afcec3965334493a8dc91082a6fba71eb">  226</a></span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#afcec3965334493a8dc91082a6fba71eb">GetNbEnergyRequest</a> () {<span class="keywordflow">return</span> energy_nrequest;}</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">  227</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> <a class="code" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">GetPreferred</a>() { <span class="keywordflow">return</span> LowScore; }</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">  228</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> <a class="code" href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">GetConvergence</a>() { <span class="keywordflow">return</span> Lowest; }</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> RotorKeys &amp;keys,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;          <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;      mapRotorEnergy energy_map;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> energy_ncompute;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> energy_nrequest;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  };</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml">  246</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml">OBMinimizingRMSDConformerScore</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">  249</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> <a class="code" href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">GetPreferred</a>() { <span class="keywordflow">return</span> HighScore; }</div><div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">  250</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> <a class="code" href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">GetConvergence</a>() { <span class="keywordflow">return</span> Average; }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> RotorKeys &amp;keys,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;          <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  };</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="comment">//  OBConformerSearch</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml">  267</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml">OBConformerSearch</a></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  {</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml">OBConformerSearch</a>();</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      ~<a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml">OBConformerSearch</a>();</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      <span class="keywordtype">bool</span> Setup(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <span class="keywordtype">int</span> numConformers = 30, <span class="keywordtype">int</span> numChildren = 5,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;          <span class="keywordtype">int</span> mutability = 5, <span class="keywordtype">int</span> convergence = 25);</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a5ee2e4f8c4c9cc9fed9949e54b8c728e">  290</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a5ee2e4f8c4c9cc9fed9949e54b8c728e">SetNumConformers</a>(<span class="keywordtype">int</span> numConformers) { m_numConformers = numConformers; }</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a25b1f90c4963a806ac4aa898f542afa3">  294</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a25b1f90c4963a806ac4aa898f542afa3">SetNumChildren</a>(<span class="keywordtype">int</span> numChildren) { m_numChildren = numChildren; }</div><div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a375b8f03c5cd5fd162cea6bd78c14356">  298</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a375b8f03c5cd5fd162cea6bd78c14356">SetMutability</a>(<span class="keywordtype">int</span> mutability) { m_mutability = mutability; }</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a259d7fb57066383560678537a93d79ad">  303</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a259d7fb57066383560678537a93d79ad">SetConvergence</a>(<span class="keywordtype">int</span> convergence) { m_convergence = convergence; }</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a045f339459d9cc1892cfe9dcdbed2b60">  307</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a045f339459d9cc1892cfe9dcdbed2b60">SetFixedBonds</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;fixedBonds) { m_fixedBonds = fixedBonds; }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a95879a373f39c05163d27941df8c18c6">  318</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a95879a373f39c05163d27941df8c18c6">SetFilter</a>(<a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a> *filter)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      {</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keyword">delete</span> m_filter;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        m_filter = filter;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      }</div><div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#ab6e866e55e02b792a2b3837ee949bbfd">  332</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#ab6e866e55e02b792a2b3837ee949bbfd">SetScore</a>(<a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a> *score)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keyword">delete</span> m_score;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        m_score = score;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      }</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="keywordtype">void</span> Search();</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a2bf9537e529fc57100050f307f57e7e4">  343</a></span>&#160;      <span class="keyword">const</span> RotorKeys&amp; <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a2bf9537e529fc57100050f307f57e7e4">GetRotorKeys</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keyword">      </span>{</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="keywordflow">return</span> m_rotorKeys;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      }</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;      <span class="keywordtype">void</span> GetConformers(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      <span class="comment">/* @brief Set an output stream for logging. If NULL pointer is provided, logging is disabled. */</span></div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#af7b2a201a381d6649a2c64c624c09bcc">  351</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#af7b2a201a381d6649a2c64c624c09bcc">SetLogStream</a>  (std::ostream *sptr) {m_logstream = sptr;}</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      <span class="comment">/*************************************************/</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;      <span class="comment">/* Methods related to fitness sharing parameters */</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      </div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      <span class="comment">/* @brief Set the use of fitness sharing ON (default) or OFF*/</span></div><div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a8b78e329a0b9f084598748fc9068f772">  357</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a8b78e329a0b9f084598748fc9068f772">SetSharing</a> (<span class="keywordtype">bool</span> value = <span class="keyword">true</span>)  {use_sharing = value;}</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      </div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;      <span class="comment">/* @brief Get the targeted number of niches, for dynamic niche sharing */</span></div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a4c1d31f2ffacd2ab50246296712c5867">  360</a></span>&#160;      <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a4c1d31f2ffacd2ab50246296712c5867">GetNbNiches</a> () {<span class="keywordflow">return</span> nb_niches;}</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      </div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="comment">/* @brief Set the targeted number of niches, for dynamic niche sharing */</span></div><div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a5500b10d2f1f7186f673a54d31761805">  363</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a5500b10d2f1f7186f673a54d31761805">SetNbNiches</a> (<span class="keywordtype">int</span> value) {nb_niches = value;}</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      </div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;      <span class="comment">/* @brief Get niches radius, for dynamic niche sharing.*/</span></div><div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a42fb6f85ae955e54faa795fece7fab60">  366</a></span>&#160;      <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a42fb6f85ae955e54faa795fece7fab60">GetNicheRadius</a> () {<span class="keywordflow">return</span> niche_radius;}</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      </div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;      <span class="comment">/* @brief Set niches radius, for dynamic niche sharing.*/</span></div><div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a9bc4449a28ea672b34c61518c41c4756">  369</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a9bc4449a28ea672b34c61518c41c4756">SetNicheRadius</a> (<span class="keywordtype">int</span> value) {niche_radius = value;}</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;      </div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="comment">/* @brief Get the alpha sharing parameter */</span></div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#aeb9eecb1535a8c9e3f03dc239d9efd5b">  372</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#aeb9eecb1535a8c9e3f03dc239d9efd5b">GetAlphaSharing</a> () {<span class="keywordflow">return</span> alpha_share;}</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      </div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;      <span class="comment">/* @brief Set the alpha sharing parameter */</span></div><div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#af9d9931d2ca16e3fdd0e925ee42c9504">  375</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#af9d9931d2ca16e3fdd0e925ee42c9504">SetAlphaSharing</a> (<span class="keywordtype">double</span> value) {alpha_share = value;}</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;      </div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;      <span class="comment">/* @brief Get the sigma sharing parameter */</span></div><div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#aae7f6e1d84579aac9e38d1924a979c34">  378</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#aae7f6e1d84579aac9e38d1924a979c34">GetSigmaSharing</a> () {<span class="keywordflow">return</span> sigma_share;}</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;      </div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;      <span class="comment">/* @brief Set the sigma sharing parameter */</span></div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#ab359bbac9732fb8f0ae76b9f2af8124b">  381</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#ab359bbac9732fb8f0ae76b9f2af8124b">SetSigmaSharing</a> (<span class="keywordtype">double</span> value) {sigma_share = value;}</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      </div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      <span class="comment">/* @brief Get the (uniform) crossover probability */</span></div><div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a3761084e240d6db1cb4b4bde6741776a">  384</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a3761084e240d6db1cb4b4bde6741776a">GetCrossoverProbability</a> () {<span class="keywordflow">return</span> p_crossover;}</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      </div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      <span class="comment">/* @brief Set the (uniform) crossover probability */</span></div><div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#ae6a06dff8ecfd4753066af35bf9d0105">  387</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#ae6a06dff8ecfd4753066af35bf9d0105">SetCrossoverProbability</a> (<span class="keywordtype">double</span> value) {p_crossover = value;}</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      </div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;      <span class="comment">/* @brief Get the niche mating probability, for dynamic niche sharing */</span></div><div class="line"><a name="l00390"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#af03cf1b7f38438ad713020df90865c9b">  390</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#af03cf1b7f38438ad713020df90865c9b">GetNicheMating</a> () {<span class="keywordflow">return</span> niche_mating;}</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;      </div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      <span class="comment">/* @brief Set the (uniform) crossover probability */</span></div><div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#a583e9ccd144c5e844888d56ff1faef24">  393</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a583e9ccd144c5e844888d56ff1faef24">SetNicheMating</a> (<span class="keywordtype">double</span> value) {niche_mating = value;}</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;      </div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;      <span class="comment">/* @brief Set the local optimization rate */</span></div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#ac1250fd95f8b4f89b1be6dcd3981985d">  396</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#ac1250fd95f8b4f89b1be6dcd3981985d">SetLocalOptRate</a> (<span class="keywordtype">int</span> value) {local_opt_rate = value;}</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      </div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;      <span class="comment">/* @brief Get the local optimization rate*/</span></div><div class="line"><a name="l00399"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerSearch.shtml#acdd7ca5d20bdd2cd0683a91cfda73969">  399</a></span>&#160;      <span class="keywordtype">int</span>  <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#acdd7ca5d20bdd2cd0683a91cfda73969">SetLocalOptRate</a>() {<span class="keywordflow">return</span> local_opt_rate;}</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    </div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;      <span class="keywordtype">void</span> NextGeneration();</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;      <span class="keywordtype">double</span> MakeSelection();</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;      <span class="keywordtype">bool</span> IsUniqueKey(<span class="keyword">const</span> RotorKeys &amp;keys, <span class="keyword">const</span> RotorKey &amp;key) <span class="keyword">const</span>;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      <span class="keywordtype">bool</span> IsGood(<span class="keyword">const</span> RotorKey &amp;key);</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      <span class="keywordtype">int</span> key_distance (<span class="keyword">const</span> RotorKey &amp;key1, <span class="keyword">const</span> RotorKey &amp;key2);      </div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      <span class="keywordtype">int</span> local_opt ();</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      <span class="keywordtype">int</span> reproduce (RotorKey &amp;key1, RotorKey &amp;key2);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      <span class="keywordtype">int</span> score_population ();</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      <span class="keywordtype">int</span> share_fitness ();</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      <span class="keywordtype">double</span> sharing_generation ();</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_numConformers; </div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      <span class="keywordtype">int</span> m_numChildren; </div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      <span class="keywordtype">int</span> m_mutability; </div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      <span class="keywordtype">int</span> m_convergence; </div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;      </div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      std::vector&lt;double&gt; vscores;                    </div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      std::vector&lt;double&gt; vshared_fitnes;             </div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      std::vector&lt;std::vector &lt;int&gt; &gt; dynamic_niches; </div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;      std::vector&lt;int&gt; niche_map;                     </div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      </div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;      <a class="code" href="classOpenBabel_1_1OBRandom.shtml">OBRandom</a> unique_generator; </div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;      <span class="keywordtype">bool</span> use_sharing;         </div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      <span class="keywordtype">double</span> alpha_share;       </div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      <span class="keywordtype">int</span> sigma_share;          </div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      <span class="keywordtype">int</span> nb_niches;            </div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      <span class="keywordtype">int</span> niche_radius;         </div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      <span class="keywordtype">double</span> p_crossover;       </div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <span class="keywordtype">double</span> niche_mating;      </div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      <span class="keywordtype">int</span> local_opt_rate;       </div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>      m_fixedBonds; </div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>         m_mol; </div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      <a class="code" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a>   m_rotorList; </div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      RotorKeys     m_rotorKeys; </div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a> *m_filter;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a>  *m_score;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      std::ostream *m_logstream;        </div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  };</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;};</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a5500b10d2f1f7186f673a54d31761805"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a5500b10d2f1f7186f673a54d31761805">OpenBabel::OBConformerSearch::SetNbNiches</a></div><div class="ttdeci">void SetNbNiches(int value)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:363</div></div>
<div class="ttc" id="classOpenBabel_1_1OBEnergyConformerScore_shtml_a58c03d41bd16b4017639f6bf41f8de45"><div class="ttname"><a href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">OpenBabel::OBEnergyConformerScore::GetConvergence</a></div><div class="ttdeci">Convergence GetConvergence()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:203</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingRMSDConformerScore_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml">OpenBabel::OBMinimizingRMSDConformerScore</a></div><div class="ttdoc">An RMSD conformer scoring class, after a short minimization. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:246</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a5ee2e4f8c4c9cc9fed9949e54b8c728e"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a5ee2e4f8c4c9cc9fed9949e54b8c728e">OpenBabel::OBConformerSearch::SetNumConformers</a></div><div class="ttdeci">void SetNumConformers(int numConformers)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:290</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a42fb6f85ae955e54faa795fece7fab60"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a42fb6f85ae955e54faa795fece7fab60">OpenBabel::OBConformerSearch::GetNicheRadius</a></div><div class="ttdeci">int GetNicheRadius()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:366</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a2bf9537e529fc57100050f307f57e7e4"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a2bf9537e529fc57100050f307f57e7e4">OpenBabel::OBConformerSearch::GetRotorKeys</a></div><div class="ttdeci">const RotorKeys &amp; GetRotorKeys() const</div><div class="ttdef"><b>Definition:</b> conformersearch.h:343</div></div>
<div class="ttc" id="classOpenBabel_1_1OBEnergyConformerScore_shtml_a23c4ebfa5b5ac02c6ae80e341abd1997"><div class="ttname"><a href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a23c4ebfa5b5ac02c6ae80e341abd1997">OpenBabel::OBEnergyConformerScore::GetNbEnergyCompute</a></div><div class="ttdeci">long unsigned int GetNbEnergyCompute()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:200</div></div>
<div class="ttc" id="classOpenBabel_1_1OBEnergyConformerScore_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBEnergyConformerScore.shtml">OpenBabel::OBEnergyConformerScore</a></div><div class="ttdoc">A lowest energy conformer scoring class. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:192</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerFilters_shtml_a70f9d4f020f9d1f777a9987d1d2457b6"><div class="ttname"><a href="classOpenBabel_1_1OBConformerFilters.shtml#a70f9d4f020f9d1f777a9987d1d2457b6">OpenBabel::OBConformerFilters::OBConformerFilters</a></div><div class="ttdeci">OBConformerFilters(const std::vector&lt; OBConformerFilter *&gt; &amp;filters)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:85</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingEnergyConformerScore_shtml_a3f38c0aa726c1f175843452a5bec6e5e"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a3f38c0aa726c1f175843452a5bec6e5e">OpenBabel::OBMinimizingEnergyConformerScore::OBMinimizingEnergyConformerScore</a></div><div class="ttdeci">OBMinimizingEnergyConformerScore()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:220</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerScore_shtml_a11429dfa214276750cb761b6261485cfa518f6bbe779cc0085da5461c257fd8a6"><div class="ttname"><a href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cfa518f6bbe779cc0085da5461c257fd8a6">OpenBabel::OBConformerScore::Sum</a></div><div class="ttdef"><b>Definition:</b> conformersearch.h:157</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerFilters_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBConformerFilters.shtml">OpenBabel::OBConformerFilters</a></div><div class="ttdoc">Class for combining OBConformerFilter objects. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:79</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingEnergyConformerScore_shtml_afcec3965334493a8dc91082a6fba71eb"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#afcec3965334493a8dc91082a6fba71eb">OpenBabel::OBMinimizingEnergyConformerScore::GetNbEnergyRequest</a></div><div class="ttdeci">long unsigned int GetNbEnergyRequest()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:226</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerFilters_shtml_a18cff861d594e096ca411d3cefafe114"><div class="ttname"><a href="classOpenBabel_1_1OBConformerFilters.shtml#a18cff861d594e096ca411d3cefafe114">OpenBabel::OBConformerFilters::m_filters</a></div><div class="ttdeci">std::vector&lt; OBConformerFilter * &gt; m_filters</div><div class="ttdef"><b>Definition:</b> conformersearch.h:100</div></div>
<div class="ttc" id="classOpenBabel_1_1OBEnergyConformerScore_shtml_afcec3965334493a8dc91082a6fba71eb"><div class="ttname"><a href="classOpenBabel_1_1OBEnergyConformerScore.shtml#afcec3965334493a8dc91082a6fba71eb">OpenBabel::OBEnergyConformerScore::GetNbEnergyRequest</a></div><div class="ttdeci">long unsigned int GetNbEnergyRequest()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:201</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_ae6a06dff8ecfd4753066af35bf9d0105"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#ae6a06dff8ecfd4753066af35bf9d0105">OpenBabel::OBConformerSearch::SetCrossoverProbability</a></div><div class="ttdeci">void SetCrossoverProbability(double value)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:387</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a8b78e329a0b9f084598748fc9068f772"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a8b78e329a0b9f084598748fc9068f772">OpenBabel::OBConformerSearch::SetSharing</a></div><div class="ttdeci">void SetSharing(bool value=true)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:357</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a4c1d31f2ffacd2ab50246296712c5867"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a4c1d31f2ffacd2ab50246296712c5867">OpenBabel::OBConformerSearch::GetNbNiches</a></div><div class="ttdeci">int GetNbNiches()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:360</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingEnergyConformerScore_shtml_a58c03d41bd16b4017639f6bf41f8de45"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">OpenBabel::OBMinimizingEnergyConformerScore::GetConvergence</a></div><div class="ttdeci">Convergence GetConvergence()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:228</div></div>
<div class="ttc" id="rotor_8h_shtml"><div class="ttname"><a href="rotor_8h.shtml">rotor.h</a></div><div class="ttdoc">Rotate torsional according to rotor rules. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotorList_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRotorList.shtml">OpenBabel::OBRotorList</a></div><div class="ttdoc">Given an OBMol, set up a list of possibly rotatable torsions,. </div><div class="ttdef"><b>Definition:</b> rotor.h:446</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_aae7f6e1d84579aac9e38d1924a979c34"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#aae7f6e1d84579aac9e38d1924a979c34">OpenBabel::OBConformerSearch::GetSigmaSharing</a></div><div class="ttdeci">double GetSigmaSharing()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:378</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:113</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerFilters_shtml_aa37ca1a89ffb71694922e4b90b012ab2"><div class="ttname"><a href="classOpenBabel_1_1OBConformerFilters.shtml#aa37ca1a89ffb71694922e4b90b012ab2">OpenBabel::OBConformerFilters::IsGood</a></div><div class="ttdeci">bool IsGood(const OBMol &amp;mol, const RotorKey &amp;key, double *coords)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:92</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_ac1250fd95f8b4f89b1be6dcd3981985d"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#ac1250fd95f8b4f89b1be6dcd3981985d">OpenBabel::OBConformerSearch::SetLocalOptRate</a></div><div class="ttdeci">void SetLocalOptRate(int value)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:396</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a25b1f90c4963a806ac4aa898f542afa3"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a25b1f90c4963a806ac4aa898f542afa3">OpenBabel::OBConformerSearch::SetNumChildren</a></div><div class="ttdeci">void SetNumChildren(int numChildren)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:294</div></div>
<div class="ttc" id="mol_8h_shtml"><div class="ttname"><a href="mol_8h.shtml">mol.h</a></div><div class="ttdoc">Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel) ...</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a259d7fb57066383560678537a93d79ad"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a259d7fb57066383560678537a93d79ad">OpenBabel::OBConformerSearch::SetConvergence</a></div><div class="ttdeci">void SetConvergence(int convergence)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:303</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_acdd7ca5d20bdd2cd0683a91cfda73969"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#acdd7ca5d20bdd2cd0683a91cfda73969">OpenBabel::OBConformerSearch::SetLocalOptRate</a></div><div class="ttdeci">int SetLocalOptRate()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:399</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingEnergyConformerScore_shtml_acd1109a84508503c02e429be0fd3960b"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">OpenBabel::OBMinimizingEnergyConformerScore::GetPreferred</a></div><div class="ttdeci">Preferred GetPreferred()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:227</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_ab359bbac9732fb8f0ae76b9f2af8124b"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#ab359bbac9732fb8f0ae76b9f2af8124b">OpenBabel::OBConformerSearch::SetSigmaSharing</a></div><div class="ttdeci">void SetSigmaSharing(double value)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:381</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a375b8f03c5cd5fd162cea6bd78c14356"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a375b8f03c5cd5fd162cea6bd78c14356">OpenBabel::OBConformerSearch::SetMutability</a></div><div class="ttdeci">void SetMutability(int mutability)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:298</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a087fe4bdc2d57b56addb4b9fd7fc0415"><div class="ttname"><a href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">OpenBabel::RotorKey</a></div><div class="ttdeci">std::vector&lt; int &gt; RotorKey</div><div class="ttdef"><b>Definition:</b> conformersearch.h:29</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBitVec_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBitVec.shtml">OpenBabel::OBBitVec</a></div><div class="ttdoc">A speed-optimized vector of bits. </div><div class="ttdef"><b>Definition:</b> bitvec.h:57</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingRMSDConformerScore_shtml_acd1109a84508503c02e429be0fd3960b"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">OpenBabel::OBMinimizingRMSDConformerScore::GetPreferred</a></div><div class="ttdeci">Preferred GetPreferred()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:249</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a9e6627493ac696e72867261d976dcde7"><div class="ttname"><a href="namespaceOpenBabel.shtml#a9e6627493ac696e72867261d976dcde7">OpenBabel::mapRotorEnergy</a></div><div class="ttdeci">std::map&lt; std::vector&lt; int &gt;, double &gt; mapRotorEnergy</div><div class="ttdef"><b>Definition:</b> conformersearch.h:31</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingEnergyConformerScore_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml">OpenBabel::OBMinimizingEnergyConformerScore</a></div><div class="ttdoc">A lowest energy conformer scoring class (after minimization) </div><div class="ttdef"><b>Definition:</b> conformersearch.h:217</div></div>
<div class="ttc" id="classOpenBabel_1_1OBStericConformerFilter_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBStericConformerFilter.shtml">OpenBabel::OBStericConformerFilter</a></div><div class="ttdoc">A steric conformer filter class. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:112</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_af7b2a201a381d6649a2c64c624c09bcc"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#af7b2a201a381d6649a2c64c624c09bcc">OpenBabel::OBConformerSearch::SetLogStream</a></div><div class="ttdeci">void SetLogStream(std::ostream *sptr)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:351</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerScore_shtml_a11429dfa214276750cb761b6261485cf"><div class="ttname"><a href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">OpenBabel::OBConformerScore::Convergence</a></div><div class="ttdeci">Convergence</div><div class="ttdef"><b>Definition:</b> conformersearch.h:157</div></div>
<div class="ttc" id="classOpenBabel_1_1OBEnergyConformerScore_shtml_a1cc2afa4f35f3b5d3124b02aec31d59c"><div class="ttname"><a href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a1cc2afa4f35f3b5d3124b02aec31d59c">OpenBabel::OBEnergyConformerScore::OBEnergyConformerScore</a></div><div class="ttdeci">OBEnergyConformerScore()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:195</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRandom_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRandom.shtml">OpenBabel::OBRandom</a></div><div class="ttdoc">Random number generator. </div><div class="ttdef"><b>Definition:</b> rand.h:68</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ad5ae0fb6c3d3406efb549fbc9f8c26f0"><div class="ttname"><a href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">OpenBabel::RotorKeys</a></div><div class="ttdeci">std::vector&lt; RotorKey &gt; RotorKeys</div><div class="ttdef"><b>Definition:</b> conformersearch.h:30</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a583e9ccd144c5e844888d56ff1faef24"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a583e9ccd144c5e844888d56ff1faef24">OpenBabel::OBConformerSearch::SetNicheMating</a></div><div class="ttdeci">void SetNicheMating(double value)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:393</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml">OpenBabel::OBConformerSearch</a></div><div class="ttdoc">Conformer searching using genetic algorithm. See Conformer Searching. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:267</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerScore_shtml_ae5293b2df07c4f01e42a925f954fe199"><div class="ttname"><a href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">OpenBabel::OBConformerScore::Preferred</a></div><div class="ttdeci">Preferred</div><div class="ttdef"><b>Definition:</b> conformersearch.h:149</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_af03cf1b7f38438ad713020df90865c9b"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#af03cf1b7f38438ad713020df90865c9b">OpenBabel::OBConformerSearch::GetNicheMating</a></div><div class="ttdeci">double GetNicheMating()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:390</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerFilter_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBConformerFilter.shtml">OpenBabel::OBConformerFilter</a></div><div class="ttdoc">Interface used by OBConformerSearch for filtering conformers. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:54</div></div>
<div class="ttc" id="rotamer_8h_shtml"><div class="ttname"><a href="rotamer_8h.shtml">rotamer.h</a></div><div class="ttdoc">Handle rotamer list data. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBRMSDConformerScore_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRMSDConformerScore.shtml">OpenBabel::OBRMSDConformerScore</a></div><div class="ttdoc">A RMSD conformer scoring class. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:178</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_af9d9931d2ca16e3fdd0e925ee42c9504"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#af9d9931d2ca16e3fdd0e925ee42c9504">OpenBabel::OBConformerSearch::SetAlphaSharing</a></div><div class="ttdeci">void SetAlphaSharing(double value)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:375</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_aeb9eecb1535a8c9e3f03dc239d9efd5b"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#aeb9eecb1535a8c9e3f03dc239d9efd5b">OpenBabel::OBConformerSearch::GetAlphaSharing</a></div><div class="ttdeci">double GetAlphaSharing()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:372</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a95879a373f39c05163d27941df8c18c6"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a95879a373f39c05163d27941df8c18c6">OpenBabel::OBConformerSearch::SetFilter</a></div><div class="ttdeci">void SetFilter(OBConformerFilter *filter)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:318</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a3761084e240d6db1cb4b4bde6741776a"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a3761084e240d6db1cb4b4bde6741776a">OpenBabel::OBConformerSearch::GetCrossoverProbability</a></div><div class="ttdeci">double GetCrossoverProbability()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:384</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRMSDConformerScore_shtml_acd1109a84508503c02e429be0fd3960b"><div class="ttname"><a href="classOpenBabel_1_1OBRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">OpenBabel::OBRMSDConformerScore::GetPreferred</a></div><div class="ttdeci">Preferred GetPreferred()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:181</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerScore_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBConformerScore.shtml">OpenBabel::OBConformerScore</a></div><div class="ttdoc">Interface used by OBConformerSearch for scoring conformers. </div><div class="ttdef"><b>Definition:</b> conformersearch.h:143</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingEnergyConformerScore_shtml_a23c4ebfa5b5ac02c6ae80e341abd1997"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingEnergyConformerScore.shtml#a23c4ebfa5b5ac02c6ae80e341abd1997">OpenBabel::OBMinimizingEnergyConformerScore::GetNbEnergyCompute</a></div><div class="ttdeci">long unsigned int GetNbEnergyCompute()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:225</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_ab6e866e55e02b792a2b3837ee949bbfd"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#ab6e866e55e02b792a2b3837ee949bbfd">OpenBabel::OBConformerSearch::SetScore</a></div><div class="ttdeci">void SetScore(OBConformerScore *score)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:332</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a9bc4449a28ea672b34c61518c41c4756"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a9bc4449a28ea672b34c61518c41c4756">OpenBabel::OBConformerSearch::SetNicheRadius</a></div><div class="ttdeci">void SetNicheRadius(int value)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:369</div></div>
<div class="ttc" id="classOpenBabel_1_1OBEnergyConformerScore_shtml_acd1109a84508503c02e429be0fd3960b"><div class="ttname"><a href="classOpenBabel_1_1OBEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">OpenBabel::OBEnergyConformerScore::GetPreferred</a></div><div class="ttdeci">Preferred GetPreferred()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:202</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRMSDConformerScore_shtml_a58c03d41bd16b4017639f6bf41f8de45"><div class="ttname"><a href="classOpenBabel_1_1OBRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">OpenBabel::OBRMSDConformerScore::GetConvergence</a></div><div class="ttdeci">Convergence GetConvergence()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:182</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMinimizingRMSDConformerScore_shtml_a58c03d41bd16b4017639f6bf41f8de45"><div class="ttname"><a href="classOpenBabel_1_1OBMinimizingRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">OpenBabel::OBMinimizingRMSDConformerScore::GetConvergence</a></div><div class="ttdeci">Convergence GetConvergence()</div><div class="ttdef"><b>Definition:</b> conformersearch.h:250</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerSearch_shtml_a045f339459d9cc1892cfe9dcdbed2b60"><div class="ttname"><a href="classOpenBabel_1_1OBConformerSearch.shtml#a045f339459d9cc1892cfe9dcdbed2b60">OpenBabel::OBConformerSearch::SetFixedBonds</a></div><div class="ttdeci">void SetFixedBonds(const OBBitVec &amp;fixedBonds)</div><div class="ttdef"><b>Definition:</b> conformersearch.h:307</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
