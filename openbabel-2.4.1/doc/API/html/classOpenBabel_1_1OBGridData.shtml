<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBGridData Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBGridData.shtml">OBGridData</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBGridData-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBGridData Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="griddata_8h_source.shtml">openbabel/griddata.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBGridData:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBGridData.png" usemap="#OBGridData_map" alt=""/>
  <map id="OBGridData_map" name="OBGridData_map">
<area href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data. " alt="OBGenericData" shape="rect" coords="0,0,101,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:abceb2331ad056e3c5ad27894199a49ed"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49ed">Unit</a> { <a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49eda1ed8947227c706dcf6ce20f2dabecbb0">BOHR</a>, 
<a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49edac0ff23bb2caec4483def76b5ac62f0ad">ANGSTROM</a>, 
<a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49edadbf1dee1b8cd7ea3c82661943c7b74f4">OTHER</a>
 }</td></tr>
<tr class="separator:abceb2331ad056e3c5ad27894199a49ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3759224f5030c8385542bcb899465b6e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a3759224f5030c8385542bcb899465b6e">OBGridData</a> ()</td></tr>
<tr class="separator:a3759224f5030c8385542bcb899465b6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f927f99da289ae1cb3f9da64ee9d429"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a7f927f99da289ae1cb3f9da64ee9d429">~OBGridData</a> ()</td></tr>
<tr class="separator:a7f927f99da289ae1cb3f9da64ee9d429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab00b0697ccbb41c687e4031c1f5e6761"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *) const</td></tr>
<tr class="separator:ab00b0697ccbb41c687e4031c1f5e6761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae3d15983201a2a115701b2c538fef77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>
<tr class="separator:aae3d15983201a2a115701b2c538fef77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45613e34598a9584fb0120ef3fdab9e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>
<tr class="separator:a45613e34598a9584fb0120ef3fdab9e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac61fc66ef692e79290d6eaf7231db92c"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac61fc66ef692e79290d6eaf7231db92c">GetAttribute</a> () const</td></tr>
<tr class="separator:ac61fc66ef692e79290d6eaf7231db92c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91834e24b299c63cdf2cb77795298446"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a91834e24b299c63cdf2cb77795298446">GetDataType</a> () const</td></tr>
<tr class="separator:a91834e24b299c63cdf2cb77795298446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6145f0df06364b6d58c728368db8f992"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a6145f0df06364b6d58c728368db8f992">GetValue</a> () const</td></tr>
<tr class="separator:a6145f0df06364b6d58c728368db8f992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf131b210114ba636246ffc8dcb2ea13"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adf131b210114ba636246ffc8dcb2ea13">GetOrigin</a> () const</td></tr>
<tr class="separator:adf131b210114ba636246ffc8dcb2ea13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Property Methods</div></td></tr>
<tr class="memitem:a2506aa5bc58519af8249951bad3a8ca1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a2506aa5bc58519af8249951bad3a8ca1">GetAxes</a> (double x[3], double y[3], double z[3]) const</td></tr>
<tr class="separator:a2506aa5bc58519af8249951bad3a8ca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2660623f2838d9b15c4791894840a86"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#af2660623f2838d9b15c4791894840a86">GetXAxis</a> () const</td></tr>
<tr class="separator:af2660623f2838d9b15c4791894840a86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e75c477573adb43c6f52a500ebed42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#aa6e75c477573adb43c6f52a500ebed42">GetYAxis</a> () const</td></tr>
<tr class="separator:aa6e75c477573adb43c6f52a500ebed42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99e8dcac1e888ef4b6094f960aa2f1b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a99e8dcac1e888ef4b6094f960aa2f1b6">GetZAxis</a> () const</td></tr>
<tr class="separator:a99e8dcac1e888ef4b6094f960aa2f1b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c4a5205066d398244174f8b69ea25d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#af8c4a5205066d398244174f8b69ea25d">GetAxes</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v1, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v2, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v3) const</td></tr>
<tr class="separator:af8c4a5205066d398244174f8b69ea25d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae850a7acdb17ba0187c501d04d3f7d1f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#ae850a7acdb17ba0187c501d04d3f7d1f">GetNumberOfPoints</a> (int &amp;nx, int &amp;ny, int &amp;nz) const</td></tr>
<tr class="separator:ae850a7acdb17ba0187c501d04d3f7d1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a385c554a4fc164e8696e0513d2741a34"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a385c554a4fc164e8696e0513d2741a34">GetNumberOfPoints</a> () const</td></tr>
<tr class="separator:a385c554a4fc164e8696e0513d2741a34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa00249834eac86b0bf4613330eca0517"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#aa00249834eac86b0bf4613330eca0517">GetNumberOfSteps</a> (int steps[3]) const</td></tr>
<tr class="separator:aa00249834eac86b0bf4613330eca0517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4171d8822ea8547a31ead2ae9d422fae"><td class="memItemLeft" align="right" valign="top">std::vector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a4171d8822ea8547a31ead2ae9d422fae">GetValues</a> () const</td></tr>
<tr class="separator:a4171d8822ea8547a31ead2ae9d422fae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a560cc0b9f553656eea71db1ee5b1e6b6"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a560cc0b9f553656eea71db1ee5b1e6b6">GetValue</a> (int i, int j, int k) const</td></tr>
<tr class="separator:a560cc0b9f553656eea71db1ee5b1e6b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a480b02018de705e2a63c80c95c99ffd4"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a480b02018de705e2a63c80c95c99ffd4">GetValue</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> pos) const</td></tr>
<tr class="separator:a480b02018de705e2a63c80c95c99ffd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cd7ee7f668dabef0e698bf4f4f3b323"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49ed">Unit</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a4cd7ee7f668dabef0e698bf4f4f3b323">GetUnit</a> () const</td></tr>
<tr class="separator:a4cd7ee7f668dabef0e698bf4f4f3b323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7fe8273e4c5e0740943c4bd167f16a2"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#ac7fe8273e4c5e0740943c4bd167f16a2">GetMinValue</a> () const</td></tr>
<tr class="separator:ac7fe8273e4c5e0740943c4bd167f16a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0608b3a1a5e4e232f67ce480fcc476f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#aa0608b3a1a5e4e232f67ce480fcc476f">GetMaxValue</a> () const</td></tr>
<tr class="separator:aa0608b3a1a5e4e232f67ce480fcc476f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e7d9391141f92781431f96fbf3873f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a5e7d9391141f92781431f96fbf3873f1">GetOriginVector</a> () const</td></tr>
<tr class="separator:a5e7d9391141f92781431f96fbf3873f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e78d586538f223a571eeedd466f3f32"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a0e78d586538f223a571eeedd466f3f32">GetOriginVector</a> (double o[3]) const</td></tr>
<tr class="separator:a0e78d586538f223a571eeedd466f3f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae435252e69e13835404bb285680a9e38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#ae435252e69e13835404bb285680a9e38">GetMaxVector</a> () const</td></tr>
<tr class="separator:ae435252e69e13835404bb285680a9e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a9320bb84689b6dfa8160dc73b9ad6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a70a9320bb84689b6dfa8160dc73b9ad6">GetUnrestricted</a> () const</td></tr>
<tr class="separator:a70a9320bb84689b6dfa8160dc73b9ad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f4cf56657428b2634ffed3acdf16f48"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a9f4cf56657428b2634ffed3acdf16f48">GetNumSymmetries</a> () const</td></tr>
<tr class="separator:a9f4cf56657428b2634ffed3acdf16f48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Modification Methods</div></td></tr>
<tr class="memitem:a8e057288f32449cbd79175447a8eec49"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a8e057288f32449cbd79175447a8eec49">SetNumberOfPoints</a> (int nx, int ny, int nz)</td></tr>
<tr class="separator:a8e057288f32449cbd79175447a8eec49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b9fb0de3277dd55625e632bc4f0ab5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;origin, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;x, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;y, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;z)</td></tr>
<tr class="separator:a0b9fb0de3277dd55625e632bc4f0ab5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a009627e179cde33c9c0150d6a06214fd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a009627e179cde33c9c0150d6a06214fd">SetLimits</a> (const double origin[3], const double x[3], const double y[3], const double z[3])</td></tr>
<tr class="separator:a009627e179cde33c9c0150d6a06214fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e87e5ca8491e61def25764da4fdb46d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a8e87e5ca8491e61def25764da4fdb46d">SetValue</a> (int i, int j, int k, double val)</td></tr>
<tr class="separator:a8e87e5ca8491e61def25764da4fdb46d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3384333ba39252b46f5189ca43baa2d1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a3384333ba39252b46f5189ca43baa2d1">SetValues</a> (const std::vector&lt; double &gt; &amp;v)</td></tr>
<tr class="separator:a3384333ba39252b46f5189ca43baa2d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29b2f36979b70af2f1793b4754e6d4b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a29b2f36979b70af2f1793b4754e6d4b4">SetUnit</a> (<a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49ed">Unit</a> u)</td></tr>
<tr class="separator:a29b2f36979b70af2f1793b4754e6d4b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4c371035d64f046b9728f27fbe48678"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#ad4c371035d64f046b9728f27fbe48678">SetUnrestricted</a> (bool u)</td></tr>
<tr class="separator:ad4c371035d64f046b9728f27fbe48678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fc7e124f35cd07bffc7a9acb2c6f294"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a6fc7e124f35cd07bffc7a9acb2c6f294">SetNumSymmetries</a> (int s)</td></tr>
<tr class="separator:a6fc7e124f35cd07bffc7a9acb2c6f294"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:adceb77134f15418a66cf1124dcef1b51"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>
<tr class="separator:adceb77134f15418a66cf1124dcef1b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31291823d487a4a47f24aae5870505ef"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a></td></tr>
<tr class="separator:a31291823d487a4a47f24aae5870505ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a239606b62a534e4df7626ea0cfdfb856"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>
<tr class="separator:a239606b62a534e4df7626ea0cfdfb856"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Store values for numeric grids such as orbitals or electrostatic potential. </p>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol) ...">OBFloatGrid</a></dd></dl>
<p><a class="el" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential. ">OBGridData</a> facilitates attaching grids and cubes to molecular data. A "grid" is data representing some function f(x,y,z), such as a molecule's electrostatic potential or molecular orbitals. This need not be a "cube" even though this file format from Gaussian is frequently used. Axes need not be identical, and indeed do not need to be orthogonal.</p>
<p>Open Babel supports reading several types of grid file formats, including Gaussian cube, and OpenDX. The latter is notably used by the APBS program for numeric evaluation of molecular and protein electrostatic potential.</p>
<div class="fragment"><div class="line"><a class="code" href="classOpenBabel_1_1OBGridData.shtml#a3759224f5030c8385542bcb899465b6e">OBGridData</a> *gd = <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBGridData.shtml#a3759224f5030c8385542bcb899465b6e">OBGridData</a>;</div><div class="line">gd-&gt;SetAttribute(<span class="stringliteral">&quot;Example Grid&quot;</span>); <span class="comment">// the title of the grid -- e.g., for user display</span></div><div class="line">vector&lt;int&gt; voxels(3); <span class="comment">// the number of voxels in each direction</span></div><div class="line">vector3 origin; <span class="comment">// the beginning x, y, z coordinate of the grid</span></div><div class="line">vector&lt;vector3&gt; axes; <span class="comment">// the xyz displacements for each of the grid axes</span></div><div class="line">...</div><div class="line">gd-&gt;SetNumberOfPoints(voxels[0], voxels[1], voxels[2]);</div><div class="line">gd-&gt;SetLimits(origin, axes[0], axes[1], axes[2]);</div><div class="line">gd-&gt;SetUnit(<a class="code" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49edac0ff23bb2caec4483def76b5ac62f0ad">OBGridData::ANGSTROM</a>);</div><div class="line">gd-&gt;SetOrigin(<a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a887e83e320499ec89236722bbdf56f50">fileformatInput</a>); <span class="comment">// i.e., is this data from a file or determined by Open Babel</span></div><div class="line"></div><div class="line"><span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 0; k &lt; voxels[2]; ++k)</div><div class="line">  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; voxels[1]; ++j)</div><div class="line">    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; voxels[0]; ++i)</div><div class="line">      {</div><div class="line">        gd-&gt;SetValue(i, j, k,</div><div class="line">                     grid[k*voxels[0]*voxels[1] + j*voxels[0] + i]);</div><div class="line">      }</div><div class="line"></div><div class="line">mol-&gt;SetData(gd);</div></div><!-- fragment --><div class="fragment"><div class="line"><span class="keywordflow">if</span> (mol-&gt;HasData(<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d">OBGenericDataType::GridData</a>)) {</div><div class="line">  vector&lt;OBGenericData*&gt; grids = mol-&gt;GetAllData(<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d">OBGenericDataType::GridData</a>)</div><div class="line">  <span class="comment">// Output the name of the grid</span></div><div class="line">  <span class="keywordflow">if</span> (grids[0] != NULL)</div><div class="line">    cout &lt;&lt; grids[0]-&gt;GetAttribute();</div><div class="line">}</div></div><!-- fragment --> </div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="abceb2331ad056e3c5ad27894199a49ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abceb2331ad056e3c5ad27894199a49ed">&sect;&nbsp;</a></span>Unit</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49ed">Unit</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unit of measure for grid spacings. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="abceb2331ad056e3c5ad27894199a49eda1ed8947227c706dcf6ce20f2dabecbb0"></a>BOHR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abceb2331ad056e3c5ad27894199a49edac0ff23bb2caec4483def76b5ac62f0ad"></a>ANGSTROM&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abceb2331ad056e3c5ad27894199a49edadbf1dee1b8cd7ea3c82661943c7b74f4"></a>OTHER&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3759224f5030c8385542bcb899465b6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3759224f5030c8385542bcb899465b6e">&sect;&nbsp;</a></span>OBGridData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGridData.shtml">OBGridData</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a id="a7f927f99da289ae1cb3f9da64ee9d429"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f927f99da289ae1cb3f9da64ee9d429">&sect;&nbsp;</a></span>~OBGridData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBGridData.shtml">OBGridData</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2506aa5bc58519af8249951bad3a8ca1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2506aa5bc58519af8249951bad3a8ca1">&sect;&nbsp;</a></span>GetAxes() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetAxes </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em>[3]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the three axes parallel to the grid edges. The length of the returned vector is the step along that direction. </dd></dl>

</div>
</div>
<a id="af2660623f2838d9b15c4791894840a86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2660623f2838d9b15c4791894840a86">&sect;&nbsp;</a></span>GetXAxis()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetXAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>X axis direction. </dd></dl>

</div>
</div>
<a id="aa6e75c477573adb43c6f52a500ebed42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6e75c477573adb43c6f52a500ebed42">&sect;&nbsp;</a></span>GetYAxis()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetYAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Y axis direction. </dd></dl>

</div>
</div>
<a id="a99e8dcac1e888ef4b6094f960aa2f1b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99e8dcac1e888ef4b6094f960aa2f1b6">&sect;&nbsp;</a></span>GetZAxis()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetZAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Z axis direction. </dd></dl>

</div>
</div>
<a id="af8c4a5205066d398244174f8b69ea25d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8c4a5205066d398244174f8b69ea25d">&sect;&nbsp;</a></span>GetAxes() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetAxes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the three axes parallel to the grid edges </dd></dl>

</div>
</div>
<a id="ae850a7acdb17ba0187c501d04d3f7d1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae850a7acdb17ba0187c501d04d3f7d1f">&sect;&nbsp;</a></span>GetNumberOfPoints() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetNumberOfPoints </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nz</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>number of points along the three axes parallel to the grid edges. </dd></dl>

</div>
</div>
<a id="a385c554a4fc164e8696e0513d2741a34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a385c554a4fc164e8696e0513d2741a34">&sect;&nbsp;</a></span>GetNumberOfPoints() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetNumberOfPoints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>total number of points in the grid. </dd></dl>

</div>
</div>
<a id="aa00249834eac86b0bf4613330eca0517"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa00249834eac86b0bf4613330eca0517">&sect;&nbsp;</a></span>GetNumberOfSteps()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetNumberOfSteps </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>steps</em>[3]</td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>number of points along the three axes parallel to the grid edges. </dd></dl>

</div>
</div>
<a id="a4171d8822ea8547a31ead2ae9d422fae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4171d8822ea8547a31ead2ae9d422fae">&sect;&nbsp;</a></span>GetValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; double &gt; GetValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>grid values as a vector of doubles. </dd></dl>

</div>
</div>
<a id="a560cc0b9f553656eea71db1ee5b1e6b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a560cc0b9f553656eea71db1ee5b1e6b6">&sect;&nbsp;</a></span>GetValue() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>k</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the value at position i, j, k in the grid. </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="a480b02018de705e2a63c80c95c99ffd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a480b02018de705e2a63c80c95c99ffd4">&sect;&nbsp;</a></span>GetValue() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the value at a position in the grid (by interpolation) </dd></dl>

</div>
</div>
<a id="a4cd7ee7f668dabef0e698bf4f4f3b323"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cd7ee7f668dabef0e698bf4f4f3b323">&sect;&nbsp;</a></span>GetUnit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49ed">OBGridData::Unit</a> GetUnit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the unit of measure for grid spacings. </dd></dl>

</div>
</div>
<a id="ac7fe8273e4c5e0740943c4bd167f16a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7fe8273e4c5e0740943c4bd167f16a2">&sect;&nbsp;</a></span>GetMinValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetMinValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the minimum value of all points in the grid. </dd></dl>

</div>
</div>
<a id="aa0608b3a1a5e4e232f67ce480fcc476f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0608b3a1a5e4e232f67ce480fcc476f">&sect;&nbsp;</a></span>GetMaxValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetMaxValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum value of all points in the grid. </dd></dl>

</div>
</div>
<a id="a5e7d9391141f92781431f96fbf3873f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e7d9391141f92781431f96fbf3873f1">&sect;&nbsp;</a></span>GetOriginVector() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetOriginVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. ">vector3</a> of the origin (i.e., the minimum x, y, and z coords of the grid). </dd></dl>

</div>
</div>
<a id="a0e78d586538f223a571eeedd466f3f32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e78d586538f223a571eeedd466f3f32">&sect;&nbsp;</a></span>GetOriginVector() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetOriginVector </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>o</em>[3]</td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">o</td><td>set to the origin (i.e., the minimum x, y, and z coords of the grid). </td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000056">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a5e7d9391141f92781431f96fbf3873f1">GetOriginVector()</a> </dd></dl>

</div>
</div>
<a id="ae435252e69e13835404bb285680a9e38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae435252e69e13835404bb285680a9e38">&sect;&nbsp;</a></span>GetMaxVector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMaxVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The maximum point in the grid. </dd></dl>

</div>
</div>
<a id="a70a9320bb84689b6dfa8160dc73b9ad6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70a9320bb84689b6dfa8160dc73b9ad6">&sect;&nbsp;</a></span>GetUnrestricted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetUnrestricted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the unrestricted flag. </dd></dl>

</div>
</div>
<a id="a9f4cf56657428b2634ffed3acdf16f48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f4cf56657428b2634ffed3acdf16f48">&sect;&nbsp;</a></span>GetNumSymmetries()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetNumSymmetries </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of symmetries. </dd></dl>

</div>
</div>
<a id="a8e057288f32449cbd79175447a8eec49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e057288f32449cbd79175447a8eec49">&sect;&nbsp;</a></span>SetNumberOfPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumberOfPoints </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nz</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set number of points along the three axes. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="a0b9fb0de3277dd55625e632bc4f0ab5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b9fb0de3277dd55625e632bc4f0ab5b">&sect;&nbsp;</a></span>SetLimits() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>origin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the limits (i.e., the origin point and the axes) NOTE: You must set the number of points first, with SetNumberOfPoints so the grid spacing can be calculated </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="a009627e179cde33c9c0150d6a06214fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a009627e179cde33c9c0150d6a06214fd">&sect;&nbsp;</a></span>SetLimits() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>origin</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>x</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>y</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>z</em>[3]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000057">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBGridData.shtml#a0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits(const vector3 &amp;origin, const vector3 &amp;x, const vector3 &amp;y, const vector3 &amp;z)</a> </dd></dl>

</div>
</div>
<a id="a8e87e5ca8491e61def25764da4fdb46d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e87e5ca8491e61def25764da4fdb46d">&sect;&nbsp;</a></span>SetValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set an individual value, grid must have been initialised. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="a3384333ba39252b46f5189ca43baa2d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3384333ba39252b46f5189ca43baa2d1">&sect;&nbsp;</a></span>SetValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetValues </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the values, this vector must match the dimensions of the grid. </p>

</div>
</div>
<a id="a29b2f36979b70af2f1793b4754e6d4b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29b2f36979b70af2f1793b4754e6d4b4">&sect;&nbsp;</a></span>SetUnit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetUnit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49ed">OBGridData::Unit</a>&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the unit of measure. </p>

</div>
</div>
<a id="ad4c371035d64f046b9728f27fbe48678"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4c371035d64f046b9728f27fbe48678">&sect;&nbsp;</a></span>SetUnrestricted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetUnrestricted </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the unrestricted flag. </p>

</div>
</div>
<a id="a6fc7e124f35cd07bffc7a9acb2c6f294"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fc7e124f35cd07bffc7a9acb2c6f294">&sect;&nbsp;</a></span>SetNumSymmetries()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumSymmetries </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the number of symmetries. </p>

</div>
</div>
<a id="ab00b0697ccbb41c687e4031c1f5e6761"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab00b0697ccbb41c687e4031c1f5e6761">&sect;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* Clone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMatrixData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBMatrixData</a>, <a class="el" href="classOpenBabel_1_1OBVectorData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBVectorData</a>, <a class="el" href="classOpenBabel_1_1OBRotationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBRotationData</a>, <a class="el" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBElectronicTransitionData</a>, <a class="el" href="classOpenBabel_1_1OBOrbitalData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBOrbitalData</a>, <a class="el" href="classOpenBabel_1_1OBDOSData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBDOSData</a>, <a class="el" href="classOpenBabel_1_1OBVibrationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBVibrationData</a>, <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBSerialNums</a>, <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBChiralData</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBAngleData</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBTorsionData</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBSymmetryData</a>, <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBConformerData</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBUnitCell</a>, <a class="el" href="classOpenBabel_1_1OBRingData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBRingData</a>, <a class="el" href="classOpenBabel_1_1OBCisTransStereo.shtml#a3935ba48816d0feefb2e2d941d1b4ba6">OBCisTransStereo</a>, <a class="el" href="classOpenBabel_1_1OBVirtualBond.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBVirtualBond</a>, <a class="el" href="classOpenBabel_1_1OBTetrahedralStereo.shtml#a3935ba48816d0feefb2e2d941d1b4ba6">OBTetrahedralStereo</a>, <a class="el" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml#a3935ba48816d0feefb2e2d941d1b4ba6">OBSquarePlanarStereo</a>, <a class="el" href="classOpenBabel_1_1OBSetData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBSetData</a>, <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a340df9e4f2c1c91ca091a91ed451da5e">OBNasaThermoData</a>, <a class="el" href="classOpenBabel_1_1OBPairTemplate.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBPairTemplate&lt; ValueT &gt;</a>, <a class="el" href="classOpenBabel_1_1OBPairData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBPairData</a>, <a class="el" href="classOpenBabel_1_1OBExternalBondData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBExternalBondData</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">AliasData</a>, <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList</a>, <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBCommentData</a>, <a class="el" href="classOpenBabel_1_1OBAtomClassData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBAtomClassData</a>, and <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a340df9e4f2c1c91ca091a91ed451da5e">OBRateData</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBase.shtml#aa6f692332837387535e337413d0100de">OBBase::CloneData()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="aae3d15983201a2a115701b2c538fef77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae3d15983201a2a115701b2c538fef77">&sect;&nbsp;</a></span>SetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the attribute (key), which can be used to retrieve this data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="a45613e34598a9584fb0120ef3fdab9e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45613e34598a9584fb0120ef3fdab9e0">&sect;&nbsp;</a></span>SetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the origin of this data, which can be used to filter the data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="ac61fc66ef692e79290d6eaf7231db92c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac61fc66ef692e79290d6eaf7231db92c">&sect;&nbsp;</a></span>GetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a632be87a51811b515f7e9a5fc18e4476">OpenBabel::extract_thermochemistry()</a>, and <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div>
<a id="a91834e24b299c63cdf2cb77795298446"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91834e24b299c63cdf2cb77795298446">&sect;&nbsp;</a></span>GetDataType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a id="a6145f0df06364b6d58c728368db8f992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6145f0df06364b6d58c728368db8f992">&sect;&nbsp;</a></span>GetValue() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base class returns a default value (the attribute type) but should never be called. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBPairData.shtml#a6145f0df06364b6d58c728368db8f992">OBPairData</a>, and <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#a6145f0df06364b6d58c728368db8f992">OBCommentData</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>.</p>

</div>
</div>
<a id="adf131b210114ba636246ffc8dcb2ea13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf131b210114ba636246ffc8dcb2ea13">&sect;&nbsp;</a></span>GetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="adceb77134f15418a66cf1124dcef1b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adceb77134f15418a66cf1124dcef1b51">&sect;&nbsp;</a></span>_attr</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _attr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute tag (e.g., "UnitCell", "Comment" or "Author") </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a31291823d487a4a47f24aae5870505ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31291823d487a4a47f24aae5870505ef">&sect;&nbsp;</a></span>_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute type &ndash; declared for each subclass </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a239606b62a534e4df7626ea0cfdfb856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a239606b62a534e4df7626ea0cfdfb856">&sect;&nbsp;</a></span>_source</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> _source</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>source of data for accounting </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#a7c2db1828edcca7ff07c8591744ec3a4">OBConformerData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#ae1e415e9a406f4965be7352a3c66fa3a">OBSymmetryData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#ab526e7eddb908b711e19aa355d133241">OBTorsionData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#af0af03b552fac05db59787be08a443eb">OBAngleData::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#a2d8a571296610389b9427aef139b1d8d">OBChiralData::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="griddata_8h_source.shtml">griddata.h</a></li>
<li><a class="el" href="griddata_8cpp.shtml">griddata.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
