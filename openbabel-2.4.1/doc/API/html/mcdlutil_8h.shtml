<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>mcdlutil.h File Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">mcdlutil.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a href="mcdlutil_8h_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceOpenBabel"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a02160f654223d43c521ab445b7eb7b2a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="mcdlutil_8h.shtml#a02160f654223d43c521ab445b7eb7b2a">NELEMMCDL</a>&#160;&#160;&#160;121</td></tr>
<tr class="separator:a02160f654223d43c521ab445b7eb7b2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a47053116206f7c8cf7b278aec7e35cb1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a47053116206f7c8cf7b278aec7e35cb1">hydrogenValency</a> (int na)</td></tr>
<tr class="separator:a47053116206f7c8cf7b278aec7e35cb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa51b217d32346d4f341a227be63de160"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#aa51b217d32346d4f341a227be63de160">maxValency</a> (int na)</td></tr>
<tr class="separator:aa51b217d32346d4f341a227be63de160"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2919564689dee084f06b0eb433779cb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#ad2919564689dee084f06b0eb433779cb">alternate</a> (OBMol *pmol, const int nH[], int bondOrders [])</td></tr>
<tr class="separator:ad2919564689dee084f06b0eb433779cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a207029ffc607d34863546dddbe014d6b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a207029ffc607d34863546dddbe014d6b">alternate</a> (const std::vector&lt; int &gt; aPosition, const std::vector&lt; int &gt; aCharge, const std::vector&lt; int &gt; aRad, const std::vector&lt; int &gt; nHydr, const std::vector&lt; int &gt; iA1, const std::vector&lt; int &gt; iA2, std::vector&lt; int &gt; &amp;bondOrders, int nAtoms, int nBonds)</td></tr>
<tr class="separator:a207029ffc607d34863546dddbe014d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2830d51995ac9802efa4aad43121ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#aec2830d51995ac9802efa4aad43121ca">generateDiagram</a> (OBMol *pmol)</td></tr>
<tr class="separator:aec2830d51995ac9802efa4aad43121ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a827934a434ef208e2644aecb679ec930"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a827934a434ef208e2644aecb679ec930">generateDiagram</a> (const std::vector&lt; int &gt; iA1, const std::vector&lt; int &gt; iA2, std::vector&lt; double &gt; &amp;rx, std::vector&lt; double &gt; &amp;ry, int nAtoms, int nBonds)</td></tr>
<tr class="separator:a827934a434ef208e2644aecb679ec930"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a742566d425db558fa968c725f8a708cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a742566d425db558fa968c725f8a708cc">generateDiagram</a> (OBMol *pmol, std::ostream &amp;ofs)</td></tr>
<tr class="separator:a742566d425db558fa968c725f8a708cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60aab5dcc934001076e5079960cb9be4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a60aab5dcc934001076e5079960cb9be4">fragmentSearch</a> (OBMol *query, OBMol *structure)</td></tr>
<tr class="separator:a60aab5dcc934001076e5079960cb9be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0561905f67fffeb3fae74b786fab642"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#aa0561905f67fffeb3fae74b786fab642">fragmentSearch</a> (const std::vector&lt; int &gt; aPositionQuery, const std::vector&lt; int &gt; iA1Query, const std::vector&lt; int &gt; iA2Query, const std::vector&lt; int &gt; bondTypesQuery, const std::vector&lt; int &gt; aPositionStructure, const std::vector&lt; int &gt; iA1Structure, const std::vector&lt; int &gt; iA2Structure, const std::vector&lt; int &gt; bondTypesStructure, int nAtomsQuery, int nBondsQuery, int nAtomsStructure, int nBondsStructure)</td></tr>
<tr class="separator:aa0561905f67fffeb3fae74b786fab642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16e9982dc3b96f14397fe55ede7b8f1f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a16e9982dc3b96f14397fe55ede7b8f1f">equivalenceList</a> (OBMol *pmol, std::vector&lt; int &gt; &amp;eqList)</td></tr>
<tr class="separator:a16e9982dc3b96f14397fe55ede7b8f1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e78d25ada5c11fba4e216e1d782e5b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a6e78d25ada5c11fba4e216e1d782e5b7">equivalenceList</a> (const std::vector&lt; int &gt; aPosition, const std::vector&lt; int &gt; aCharge, const std::vector&lt; int &gt; aRad, const std::vector&lt; int &gt; iA1, const std::vector&lt; int &gt; iA2, const std::vector&lt; int &gt; bondTypes, std::vector&lt; int &gt; &amp;eqList, int nAtoms, int nBonds)</td></tr>
<tr class="separator:a6e78d25ada5c11fba4e216e1d782e5b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaa889d3747ea9e2ba1a83207556dce3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">addFragment</a> (OBMol *molecule, OBMol *fragment, int molAN, int fragAN, int molBN, int fragBN, bool isAddition)</td></tr>
<tr class="separator:adaa889d3747ea9e2ba1a83207556dce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abce282c45ee77ea965aaacd47b4e8d72"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#abce282c45ee77ea965aaacd47b4e8d72">createStereoLists</a> (OBMol *pmol, std::vector&lt; int &gt; &amp;bondStereoList, std::vector&lt; int &gt; &amp;atomStereoList, std::vector&lt; int &gt; &amp;eqList)</td></tr>
<tr class="separator:abce282c45ee77ea965aaacd47b4e8d72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29e765f8943f7aa7b50aca9380196e96"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a29e765f8943f7aa7b50aca9380196e96">getAtomMCDL</a> (OBMol *pmol, int ntatoms, const std::vector&lt; int &gt; ix, const std::vector&lt; int &gt; aNumber, const std::vector&lt; int &gt; atomStereoList, const std::vector&lt; int &gt; eqList)</td></tr>
<tr class="separator:a29e765f8943f7aa7b50aca9380196e96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd680ed8783717254f074205cd6b24a4"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#acd680ed8783717254f074205cd6b24a4">getBondMCDL</a> (OBMol *pmol, int nbStore, int ntatoms, const std::vector&lt; int &gt; ix, const std::vector&lt; int &gt; aNumber, int bonds[MAXBONDS][4], const std::vector&lt; int &gt; bondStereoList, const std::vector&lt; int &gt; eqList)</td></tr>
<tr class="separator:acd680ed8783717254f074205cd6b24a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c50491b940d1a3d368bf7eba3bebfa1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a3c50491b940d1a3d368bf7eba3bebfa1">implementAtomStereo</a> (std::vector&lt; int &gt; &amp;iA1, std::vector&lt; int &gt; &amp;iA2, std::vector&lt; int &gt; &amp;stereoBonds, const std::vector&lt; double &gt;rx, const std::vector&lt; double &gt; ry, int acount, int bcount, std::string astereo)</td></tr>
<tr class="separator:a3c50491b940d1a3d368bf7eba3bebfa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a417a2925a2ec60c86ff3edc04ce4142c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a417a2925a2ec60c86ff3edc04ce4142c">implementBondStereo</a> (const std::vector&lt; int &gt; iA1, const std::vector&lt; int &gt; iA2, std::vector&lt; double &gt; &amp;rx, std::vector&lt; double &gt; &amp;ry, int acount, int bcount, std::string bstereo)</td></tr>
<tr class="separator:a417a2925a2ec60c86ff3edc04ce4142c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23997cd29f45df86f90e4f7de02baccd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a23997cd29f45df86f90e4f7de02baccd">groupRedraw</a> (OBMol *pmol, int bondN, int atomN, bool atomNInGroup)</td></tr>
<tr class="separator:a23997cd29f45df86f90e4f7de02baccd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82011594cefb0a924a4cc938800de614"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a82011594cefb0a924a4cc938800de614">canonizeMCDL</a> (const std::string atomBlock, std::vector&lt; std::string &gt; &amp;structureList)</td></tr>
<tr class="separator:a82011594cefb0a924a4cc938800de614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a41a690c691e47bc63facef0e2e449d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a6a41a690c691e47bc63facef0e2e449d">parseFormula</a> (const std::string formulaString, std::vector&lt; int &gt; &amp;enumber, int &amp;valency)</td></tr>
<tr class="separator:a6a41a690c691e47bc63facef0e2e449d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa14c59df78025ce6e8dfd3f27feb106"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#aaa14c59df78025ce6e8dfd3f27feb106">prepareTest</a> (OBMol *pmol, std::ostream &amp;ofs)</td></tr>
<tr class="separator:aaa14c59df78025ce6e8dfd3f27feb106"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a82ccfbdf4943a4e74a708edafcced9f6"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a82ccfbdf4943a4e74a708edafcced9f6">MAXBONDS</a> =300</td></tr>
<tr class="separator:a82ccfbdf4943a4e74a708edafcced9f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22febe826ea2f93f69725fbef532c921"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#a22febe826ea2f93f69725fbef532c921">MAXFRAGS</a> =200</td></tr>
<tr class="separator:a22febe826ea2f93f69725fbef532c921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab91841d785674a38b34fcf2fd9685142"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#ab91841d785674a38b34fcf2fd9685142">MAXCHARS</a> =1000</td></tr>
<tr class="separator:ab91841d785674a38b34fcf2fd9685142"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad087045047b2155479ef662be1be3abc"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#ad087045047b2155479ef662be1be3abc">MAX_DEPTH</a> =10</td></tr>
<tr class="separator:ad087045047b2155479ef662be1be3abc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1eec14ce20cfaf366e19721f1f27090"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml#ad1eec14ce20cfaf366e19721f1f27090">NELEMMAX</a> =120</td></tr>
<tr class="separator:ad1eec14ce20cfaf366e19721f1f27090"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>2D molecule coordinate generation. </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a02160f654223d43c521ab445b7eb7b2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02160f654223d43c521ab445b7eb7b2a">&sect;&nbsp;</a></span>NELEMMCDL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define NELEMMCDL&#160;&#160;&#160;121</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a47053116206f7c8cf7b278aec7e35cb1">OpenBabel::hydrogenValency()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>, <a class="el" href="namespaceOpenBabel.shtml#aa51b217d32346d4f341a227be63de160">OpenBabel::maxValency()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a6a41a690c691e47bc63facef0e2e449d">OpenBabel::parseFormula()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:29 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
