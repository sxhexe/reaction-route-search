<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>atomclass.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">atomclass.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="atomclass_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">Copyright (C) 2007 by Chris Morley</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#ifndef OB_ATOMCLASS_H</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#define OB_ATOMCLASS_H</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml">openbabel/base.h</a>&gt;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">// This macro is used in DLL builds. If it has not</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">// been set in babelconfig.h, define it as nothing.</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifndef OBAPI</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">  #define OBAPI</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml">   40</a></span>&#160;<span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml">OBAtomClassData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#a9683dd28083044f5c5ecf3bd4d828265">   43</a></span>&#160;  std::map&lt;int,int&gt; <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#a9683dd28083044f5c5ecf3bd4d828265">_map</a>; <span class="comment">//index is atom index; value is class</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#a1c34a34b14ff00d2e2c71d60fa14b669">   45</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#a1c34a34b14ff00d2e2c71d60fa14b669">OBAtomClassData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;Atom Class&quot;</span>, 0x7882){ }</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">   46</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml">OBAtomClassData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#aa71d36872f416feaa853788a7a7a7ef8">   49</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a>(){ _map.clear(); }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#a515d0a9cc93e86e83e13ea46a85e527a">   52</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#a515d0a9cc93e86e83e13ea46a85e527a">Add</a>(<span class="keywordtype">int</span> indx, <span class="keywordtype">int</span> cl) { _map[indx] = cl;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#a3d3cf317d8d9c28e9a16e32cfed8c512">   55</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#a3d3cf317d8d9c28e9a16e32cfed8c512">HasClass</a>(<span class="keywordtype">int</span> indx)<span class="keyword">const </span>{ <span class="keywordflow">return</span> _map.find(indx)!=_map.end(); }</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#ab97bd8475c8f2a4bb79a63223389f6b6">   57</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#ab97bd8475c8f2a4bb79a63223389f6b6">GetClass</a>(<span class="keywordtype">int</span> indx)<span class="keyword">const</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    std::map&lt;int,int&gt;::const_iterator pos = _map.find(indx);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span>(pos!=_map.end())</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordflow">return</span> pos-&gt;second;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">return</span> -9999;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#afa70e660173650d06ba8957abd2ad7d2">   67</a></span>&#160;  std::string <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#afa70e660173650d06ba8957abd2ad7d2">GetClassString</a>(<span class="keywordtype">int</span> indx)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::map&lt;int,int&gt;::const_iterator pos = _map.find(indx);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span>(pos!=_map.end())</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      ss &lt;&lt; <span class="charliteral">&#39;:&#39;</span> &lt;&lt; pos-&gt;second;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomClassData.shtml#af4b57d21919c42d55af03391f91a1c08">   75</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtomClassData.shtml#af4b57d21919c42d55af03391f91a1c08">size</a>(){ <span class="keywordflow">return</span> _map.size(); }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;};</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;} <span class="comment">//namespace</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#endif // OB_ATOMCLASS_H</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_a3d3cf317d8d9c28e9a16e32cfed8c512"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#a3d3cf317d8d9c28e9a16e32cfed8c512">OpenBabel::OBAtomClassData::HasClass</a></div><div class="ttdeci">bool HasClass(int indx) const</div><div class="ttdef"><b>Definition:</b> atomclass.h:55</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml">OpenBabel::OBGenericData</a></div><div class="ttdoc">Base class for generic data. </div><div class="ttdef"><b>Definition:</b> base.h:189</div></div>
<div class="ttc" id="base_8h_shtml"><div class="ttname"><a href="base_8h.shtml">base.h</a></div><div class="ttdoc">Base classes to build a graph. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_afa70e660173650d06ba8957abd2ad7d2"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#afa70e660173650d06ba8957abd2ad7d2">OpenBabel::OBAtomClassData::GetClassString</a></div><div class="ttdeci">std::string GetClassString(int indx)</div><div class="ttdef"><b>Definition:</b> atomclass.h:67</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml">OpenBabel::OBAtomClassData</a></div><div class="ttdoc">Handle atom classes in reaction SMILES/SMIRKS. </div><div class="ttdef"><b>Definition:</b> atomclass.h:40</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_a1c34a34b14ff00d2e2c71d60fa14b669"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#a1c34a34b14ff00d2e2c71d60fa14b669">OpenBabel::OBAtomClassData::OBAtomClassData</a></div><div class="ttdeci">OBAtomClassData()</div><div class="ttdef"><b>Definition:</b> atomclass.h:45</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_aa71d36872f416feaa853788a7a7a7ef8"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#aa71d36872f416feaa853788a7a7a7ef8">OpenBabel::OBAtomClassData::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Erase contents. </div><div class="ttdef"><b>Definition:</b> atomclass.h:49</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_ab97bd8475c8f2a4bb79a63223389f6b6"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#ab97bd8475c8f2a4bb79a63223389f6b6">OpenBabel::OBAtomClassData::GetClass</a></div><div class="ttdeci">int GetClass(int indx) const</div><div class="ttdef"><b>Definition:</b> atomclass.h:57</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_a515d0a9cc93e86e83e13ea46a85e527a"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#a515d0a9cc93e86e83e13ea46a85e527a">OpenBabel::OBAtomClassData::Add</a></div><div class="ttdeci">void Add(int indx, int cl)</div><div class="ttdoc">Add an individual value. </div><div class="ttdef"><b>Definition:</b> atomclass.h:52</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBAtomClassData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> atomclass.h:46</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_af4b57d21919c42d55af03391f91a1c08"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#af4b57d21919c42d55af03391f91a1c08">OpenBabel::OBAtomClassData::size</a></div><div class="ttdeci">int size()</div><div class="ttdef"><b>Definition:</b> atomclass.h:75</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:240</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomClassData_shtml_a9683dd28083044f5c5ecf3bd4d828265"><div class="ttname"><a href="classOpenBabel_1_1OBAtomClassData.shtml#a9683dd28083044f5c5ecf3bd4d828265">OpenBabel::OBAtomClassData::_map</a></div><div class="ttdeci">std::map&lt; int, int &gt; _map</div><div class="ttdef"><b>Definition:</b> atomclass.h:43</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
