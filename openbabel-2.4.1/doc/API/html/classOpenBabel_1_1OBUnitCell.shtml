<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBUnitCell Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBUnitCell-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBUnitCell Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="generic_8h_source.shtml">openbabel/generic.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBUnitCell:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBUnitCell.png" usemap="#OBUnitCell_map" alt=""/>
  <map id="OBUnitCell_map" name="OBUnitCell_map">
<area href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data. " alt="OBGenericData" shape="rect" coords="0,0,101,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ae2ee58ec34164a3ea47d51ab6ffc5c78"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> { <br />
&#160;&#160;<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4">Undefined</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7">Triclinic</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff">Monoclinic</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8">Orthorhombic</a>, 
<br />
&#160;&#160;<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21">Tetragonal</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a67f25c654b88f3bdcb76dd7a853f1296">Rhombohedral</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b">Hexagonal</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a7105ea83819b1af6af85747e20b462b4">Cubic</a>
<br />
 }</td></tr>
<tr class="separator:ae2ee58ec34164a3ea47d51ab6ffc5c78"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a96db3347da90d28cb56ed1272e75bc02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a96db3347da90d28cb56ed1272e75bc02">OBUnitCell</a> ()</td></tr>
<tr class="separator:a96db3347da90d28cb56ed1272e75bc02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb80e2ac4dcdfbebcf43eddaf03494de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acb80e2ac4dcdfbebcf43eddaf03494de">OBUnitCell</a> (const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;)</td></tr>
<tr class="separator:acb80e2ac4dcdfbebcf43eddaf03494de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab00b0697ccbb41c687e4031c1f5e6761"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *) const</td></tr>
<tr class="separator:ab00b0697ccbb41c687e4031c1f5e6761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29eaffe421897707aa12103bec99d3c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a29eaffe421897707aa12103bec99d3c9">~OBUnitCell</a> ()</td></tr>
<tr class="separator:a29eaffe421897707aa12103bec99d3c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b44a40637c9fcb48e7b90b69db7538f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;)</td></tr>
<tr class="separator:a4b44a40637c9fcb48e7b90b69db7538f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acca66a4b8a38d190c178b6ed85f9b8ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">SetData</a> (const double a, const double b, const double c, const double alpha, const double beta, const double gamma)</td></tr>
<tr class="separator:acca66a4b8a38d190c178b6ed85f9b8ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa087a37fcd1c8b08d5d58277caefbc9a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa087a37fcd1c8b08d5d58277caefbc9a">SetData</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v1, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v2, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v3)</td></tr>
<tr class="separator:aa087a37fcd1c8b08d5d58277caefbc9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a305d661a815053b610cb220fdfc3922c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a305d661a815053b610cb220fdfc3922c">SetData</a> (const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> m)</td></tr>
<tr class="separator:a305d661a815053b610cb220fdfc3922c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c53fadff602620ff82a9a0c3ceda85a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4c53fadff602620ff82a9a0c3ceda85a">SetOffset</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v1)</td></tr>
<tr class="separator:a4c53fadff602620ff82a9a0c3ceda85a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6f21a0fb4b93bb99f210559a1a6d7d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac6f21a0fb4b93bb99f210559a1a6d7d7">SetSpaceGroup</a> (const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *sg)</td></tr>
<tr class="separator:ac6f21a0fb4b93bb99f210559a1a6d7d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76ccdf2ccfbefae104ff52932dcf11c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a76ccdf2ccfbefae104ff52932dcf11c1">SetSpaceGroup</a> (const std::string sg)</td></tr>
<tr class="separator:a76ccdf2ccfbefae104ff52932dcf11c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0d7e7ddcd3c5e3c48c6b24908d8404f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae0d7e7ddcd3c5e3c48c6b24908d8404f">SetSpaceGroup</a> (const int sg)</td></tr>
<tr class="separator:ae0d7e7ddcd3c5e3c48c6b24908d8404f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6516b3a121b34a94e19201da06104afa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a6516b3a121b34a94e19201da06104afa">SetLatticeType</a> (const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> lt)</td></tr>
<tr class="separator:a6516b3a121b34a94e19201da06104afa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5cee9c530db13a5ec558a3783893315"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">FillUnitCell</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *)</td></tr>
<tr class="separator:af5cee9c530db13a5ec558a3783893315"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bacc0010fd34814039b26758da67dae"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a3bacc0010fd34814039b26758da67dae">GetA</a> ()</td></tr>
<tr class="separator:a3bacc0010fd34814039b26758da67dae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ca46e3ddb9b15db1b5971aa7c4a332"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a71ca46e3ddb9b15db1b5971aa7c4a332">GetA</a> () const</td></tr>
<tr class="separator:a71ca46e3ddb9b15db1b5971aa7c4a332"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0f9682b3743c4ec91dd9fd16bb5bd82"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac0f9682b3743c4ec91dd9fd16bb5bd82">GetB</a> ()</td></tr>
<tr class="separator:ac0f9682b3743c4ec91dd9fd16bb5bd82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d1ca648c4d55ad3275e0737e3ca6ecc"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a1d1ca648c4d55ad3275e0737e3ca6ecc">GetB</a> () const</td></tr>
<tr class="separator:a1d1ca648c4d55ad3275e0737e3ca6ecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a229a18fdc499aafe149c55011f9fb2fb"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a229a18fdc499aafe149c55011f9fb2fb">GetC</a> ()</td></tr>
<tr class="separator:a229a18fdc499aafe149c55011f9fb2fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29fff830d7b77eb427ef8fc733d15e17"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a29fff830d7b77eb427ef8fc733d15e17">GetC</a> () const</td></tr>
<tr class="separator:a29fff830d7b77eb427ef8fc733d15e17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6897ba879a5e0f5ac4ac5aefeb94601d"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a6897ba879a5e0f5ac4ac5aefeb94601d">GetAlpha</a> ()</td></tr>
<tr class="separator:a6897ba879a5e0f5ac4ac5aefeb94601d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeabaff376398e216c49714233a8a2e3"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aaeabaff376398e216c49714233a8a2e3">GetAlpha</a> () const</td></tr>
<tr class="separator:aaeabaff376398e216c49714233a8a2e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b788f95c3fa1f2cc9aedaa1b92b78a1"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a8b788f95c3fa1f2cc9aedaa1b92b78a1">GetBeta</a> ()</td></tr>
<tr class="separator:a8b788f95c3fa1f2cc9aedaa1b92b78a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d0e243a601d66ba5c1c95762eea45d0"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a3d0e243a601d66ba5c1c95762eea45d0">GetBeta</a> () const</td></tr>
<tr class="separator:a3d0e243a601d66ba5c1c95762eea45d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53b3c98860a330a6b95074945fc2895f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a53b3c98860a330a6b95074945fc2895f">GetGamma</a> ()</td></tr>
<tr class="separator:a53b3c98860a330a6b95074945fc2895f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16ebee183db5b1e08f722602c07b7a44"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a16ebee183db5b1e08f722602c07b7a44">GetGamma</a> () const</td></tr>
<tr class="separator:a16ebee183db5b1e08f722602c07b7a44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a545d26772ece9dda5ed6bd4a6f71f45b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a545d26772ece9dda5ed6bd4a6f71f45b">GetOffset</a> ()</td></tr>
<tr class="separator:a545d26772ece9dda5ed6bd4a6f71f45b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece8b73e7c8211d5ed0c74baf58cb58c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aece8b73e7c8211d5ed0c74baf58cb58c">GetOffset</a> () const</td></tr>
<tr class="separator:aece8b73e7c8211d5ed0c74baf58cb58c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81676bc2dbd807644f7d5acd1b1a2dc9"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a81676bc2dbd807644f7d5acd1b1a2dc9">GetSpaceGroup</a> ()</td></tr>
<tr class="separator:a81676bc2dbd807644f7d5acd1b1a2dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab095c8d5b34f45a89234da38eb87371b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ab095c8d5b34f45a89234da38eb87371b">GetSpaceGroup</a> () const</td></tr>
<tr class="separator:ab095c8d5b34f45a89234da38eb87371b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22dbea225bd03af66ef0db074cff402e"><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a22dbea225bd03af66ef0db074cff402e">GetSpaceGroupName</a> ()</td></tr>
<tr class="separator:a22dbea225bd03af66ef0db074cff402e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b16714ce2c29cfda0cd0094a874052f"><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a6b16714ce2c29cfda0cd0094a874052f">GetSpaceGroupName</a> () const</td></tr>
<tr class="separator:a6b16714ce2c29cfda0cd0094a874052f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9f161e4f11054773946dbe12e13936d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af9f161e4f11054773946dbe12e13936d">GetLatticeType</a> (int spacegroup)</td></tr>
<tr class="separator:af9f161e4f11054773946dbe12e13936d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33f334e6dc0a506fa095d3c6ade71aec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a33f334e6dc0a506fa095d3c6ade71aec">GetLatticeType</a> (int spacegroup) const</td></tr>
<tr class="separator:a33f334e6dc0a506fa095d3c6ade71aec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e65ff07e1ef7e28f87c0f2a3a58a1ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2e65ff07e1ef7e28f87c0f2a3a58a1ce">GetLatticeType</a> ()</td></tr>
<tr class="separator:a2e65ff07e1ef7e28f87c0f2a3a58a1ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e1c320f73909c95b6b0b68b726b8a78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">GetLatticeType</a> () const</td></tr>
<tr class="separator:a4e1c320f73909c95b6b0b68b726b8a78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb87d0c709fca5bbafe5908a2290eccb"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#afb87d0c709fca5bbafe5908a2290eccb">GetCellVectors</a> ()</td></tr>
<tr class="separator:afb87d0c709fca5bbafe5908a2290eccb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9876418d08424706cc37d6f8d23116d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ad9876418d08424706cc37d6f8d23116d">GetCellVectors</a> () const</td></tr>
<tr class="separator:ad9876418d08424706cc37d6f8d23116d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2cb274fb0a8e40a1df98af82b2da063"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">GetCellMatrix</a> ()</td></tr>
<tr class="separator:ac2cb274fb0a8e40a1df98af82b2da063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00b3c406e65edf13852a3d453d002b06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a00b3c406e65edf13852a3d453d002b06">GetCellMatrix</a> () const</td></tr>
<tr class="separator:a00b3c406e65edf13852a3d453d002b06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5f9712690d49282a620ae9b8b2b48a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">GetOrthoMatrix</a> ()</td></tr>
<tr class="separator:a5d5f9712690d49282a620ae9b8b2b48a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226d37e0c414fc29b83a932c81b038fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a226d37e0c414fc29b83a932c81b038fe">GetOrthoMatrix</a> () const</td></tr>
<tr class="separator:a226d37e0c414fc29b83a932c81b038fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11d813575f888440c6a9c9ebf53ea37e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix</a> ()</td></tr>
<tr class="separator:a11d813575f888440c6a9c9ebf53ea37e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08fe56b35e4ab52acede701c5845ffce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a08fe56b35e4ab52acede701c5845ffce">GetOrientationMatrix</a> () const</td></tr>
<tr class="separator:a08fe56b35e4ab52acede701c5845ffce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ac2c43b65936f802681d33aff49bc25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">GetFractionalMatrix</a> ()</td></tr>
<tr class="separator:a2ac2c43b65936f802681d33aff49bc25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c67fccaf0b03a9e6eed368d2744d7cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4c67fccaf0b03a9e6eed368d2744d7cf">GetFractionalMatrix</a> () const</td></tr>
<tr class="separator:a4c67fccaf0b03a9e6eed368d2744d7cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a429755f02991b509eb78b70466e2fb5e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">FractionalToCartesian</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac)</td></tr>
<tr class="separator:a429755f02991b509eb78b70466e2fb5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39439488d806ef4ca6b43f0f9f84b2cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a39439488d806ef4ca6b43f0f9f84b2cc">FractionalToCartesian</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac) const</td></tr>
<tr class="separator:a39439488d806ef4ca6b43f0f9f84b2cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae04a9f37ac44205cdbcbcd29ce2e8471"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">CartesianToFractional</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart)</td></tr>
<tr class="separator:ae04a9f37ac44205cdbcbcd29ce2e8471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa319e3756b542e64ae4bb96147c8b453"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa319e3756b542e64ae4bb96147c8b453">CartesianToFractional</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart) const</td></tr>
<tr class="separator:aa319e3756b542e64ae4bb96147c8b453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2343254a6cfe37221a4f79bd7db8e1da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2343254a6cfe37221a4f79bd7db8e1da">WrapCartesianCoordinate</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart)</td></tr>
<tr class="separator:a2343254a6cfe37221a4f79bd7db8e1da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d00b763369df91f85872c6e343fec07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a7d00b763369df91f85872c6e343fec07">WrapCartesianCoordinate</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart) const</td></tr>
<tr class="separator:a7d00b763369df91f85872c6e343fec07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17fa7c484e6c603aad0a1dd1e53d21ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a17fa7c484e6c603aad0a1dd1e53d21ed">WrapFractionalCoordinate</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac)</td></tr>
<tr class="separator:a17fa7c484e6c603aad0a1dd1e53d21ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaec07c3aaf87a4d9503b31e3629b8ef0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aaec07c3aaf87a4d9503b31e3629b8ef0">WrapFractionalCoordinate</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac) const</td></tr>
<tr class="separator:aaec07c3aaf87a4d9503b31e3629b8ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67c485a54f295cf80b85e3bf6c14c29f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a67c485a54f295cf80b85e3bf6c14c29f">GetSpaceGroupNumber</a> (std::string name=&quot;&quot;)</td></tr>
<tr class="separator:a67c485a54f295cf80b85e3bf6c14c29f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdf326578eba3096d54adf5195bd615e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acdf326578eba3096d54adf5195bd615e">GetSpaceGroupNumber</a> (std::string name=&quot;&quot;) const</td></tr>
<tr class="separator:acdf326578eba3096d54adf5195bd615e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4531707d182740586778f9fe8c4e49f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa4531707d182740586778f9fe8c4e49f">GetCellVolume</a> ()</td></tr>
<tr class="separator:aa4531707d182740586778f9fe8c4e49f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91e74c4e431188e7c75171794a752317"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a91e74c4e431188e7c75171794a752317">GetCellVolume</a> () const</td></tr>
<tr class="separator:a91e74c4e431188e7c75171794a752317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae3d15983201a2a115701b2c538fef77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>
<tr class="separator:aae3d15983201a2a115701b2c538fef77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45613e34598a9584fb0120ef3fdab9e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>
<tr class="separator:a45613e34598a9584fb0120ef3fdab9e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac61fc66ef692e79290d6eaf7231db92c"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac61fc66ef692e79290d6eaf7231db92c">GetAttribute</a> () const</td></tr>
<tr class="separator:ac61fc66ef692e79290d6eaf7231db92c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91834e24b299c63cdf2cb77795298446"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a91834e24b299c63cdf2cb77795298446">GetDataType</a> () const</td></tr>
<tr class="separator:a91834e24b299c63cdf2cb77795298446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6145f0df06364b6d58c728368db8f992"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a6145f0df06364b6d58c728368db8f992">GetValue</a> () const</td></tr>
<tr class="separator:a6145f0df06364b6d58c728368db8f992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf131b210114ba636246ffc8dcb2ea13"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adf131b210114ba636246ffc8dcb2ea13">GetOrigin</a> () const</td></tr>
<tr class="separator:adf131b210114ba636246ffc8dcb2ea13"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a8d02fbc6c58e1abe5c8043f1253f6ab9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a8d02fbc6c58e1abe5c8043f1253f6ab9">_mOrtho</a></td></tr>
<tr class="separator:a8d02fbc6c58e1abe5c8043f1253f6ab9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2497d0bb15408f8670722631fd8d90b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2497d0bb15408f8670722631fd8d90b8">_mOrient</a></td></tr>
<tr class="separator:a2497d0bb15408f8670722631fd8d90b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e04f720581a30502f781e620fb56af6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e04f720581a30502f781e620fb56af6">_offset</a></td></tr>
<tr class="separator:a4e04f720581a30502f781e620fb56af6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7186c492d40a6b69092700ff8aee83"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2f7186c492d40a6b69092700ff8aee83">_spaceGroupName</a></td></tr>
<tr class="separator:a2f7186c492d40a6b69092700ff8aee83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c98685360a568cd4473b1931e2765d8"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a9c98685360a568cd4473b1931e2765d8">_spaceGroup</a></td></tr>
<tr class="separator:a9c98685360a568cd4473b1931e2765d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a474459fcdeb63c82700a345e59330645"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a474459fcdeb63c82700a345e59330645">_lattice</a></td></tr>
<tr class="separator:a474459fcdeb63c82700a345e59330645"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adceb77134f15418a66cf1124dcef1b51"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>
<tr class="separator:adceb77134f15418a66cf1124dcef1b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31291823d487a4a47f24aae5870505ef"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a></td></tr>
<tr class="separator:a31291823d487a4a47f24aae5870505ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a239606b62a534e4df7626ea0cfdfb856"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>
<tr class="separator:a239606b62a534e4df7626ea0cfdfb856"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Used for storing information about periodic boundary conditions with conversion to/from translation vectors and (a, b, c, alpha, beta, gamma) </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="ae2ee58ec34164a3ea47d51ab6ffc5c78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2ee58ec34164a3ea47d51ab6ffc5c78">&sect;&nbsp;</a></span>LatticeType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4"></a>Undefined&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7"></a>Triclinic&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff"></a>Monoclinic&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8"></a>Orthorhombic&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21"></a>Tetragonal&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78a67f25c654b88f3bdcb76dd7a853f1296"></a>Rhombohedral&#160;</td><td class="fielddoc"><p>also called trigonal </p>
</td></tr>
<tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b"></a>Hexagonal&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae2ee58ec34164a3ea47d51ab6ffc5c78a7105ea83819b1af6af85747e20b462b4"></a>Cubic&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a96db3347da90d28cb56ed1272e75bc02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96db3347da90d28cb56ed1272e75bc02">&sect;&nbsp;</a></span>OBUnitCell() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>public constructor </p>

</div>
</div>
<a id="acb80e2ac4dcdfbebcf43eddaf03494de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb80e2ac4dcdfbebcf43eddaf03494de">&sect;&nbsp;</a></span>OBUnitCell() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a29eaffe421897707aa12103bec99d3c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29eaffe421897707aa12103bec99d3c9">&sect;&nbsp;</a></span>~OBUnitCell()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab00b0697ccbb41c687e4031c1f5e6761"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab00b0697ccbb41c687e4031c1f5e6761">&sect;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* Clone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBGenericData</a>.</p>

</div>
</div>
<a id="a4b44a40637c9fcb48e7b90b69db7538f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b44a40637c9fcb48e7b90b69db7538f">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acca66a4b8a38d190c178b6ed85f9b8ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acca66a4b8a38d190c178b6ed85f9b8ed">&sect;&nbsp;</a></span>SetData() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>gamma</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs the cell matrix in lower triangular form from the values supplied. </p>
<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#calculateOrthogonalisationMatrix">blue-obelisk:calculateOrthogonalisationMatrix</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>The length a </td></tr>
    <tr><td class="paramname">b</td><td>The length b </td></tr>
    <tr><td class="paramname">c</td><td>The length c </td></tr>
    <tr><td class="paramname">alpha</td><td>The angle alpha </td></tr>
    <tr><td class="paramname">beta</td><td>The angle beta </td></tr>
    <tr><td class="paramname">gamma</td><td>The angle gamma </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a305d661a815053b610cb220fdfc3922c">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a id="aa087a37fcd1c8b08d5d58277caefbc9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa087a37fcd1c8b08d5d58277caefbc9a">&sect;&nbsp;</a></span>SetData() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs the cell matrix using the supplied row vectors. </p>
<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#calculateOrthogonalisationMatrix">blue-obelisk:calculateOrthogonalisationMatrix</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">v1</td><td>The x-vector </td></tr>
    <tr><td class="paramname">v2</td><td>The y-vector </td></tr>
    <tr><td class="paramname">v3</td><td>The z-vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#afb87d0c709fca5bbafe5908a2290eccb">OBUnitCell::GetCellVectors</a> </dd></dl>

</div>
</div>
<a id="a305d661a815053b610cb220fdfc3922c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a305d661a815053b610cb220fdfc3922c">&sect;&nbsp;</a></span>SetData() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the unit cell matrix. </p>
<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#calculateOrthogonalisationMatrix">blue-obelisk:calculateOrthogonalisationMatrix</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>The unit cell matrix (row vectors) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd></dl>

</div>
</div>
<a id="a4c53fadff602620ff82a9a0c3ceda85a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c53fadff602620ff82a9a0c3ceda85a">&sect;&nbsp;</a></span>SetOffset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetOffset </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the offset to the origin to <code>v1</code>. </p>

</div>
</div>
<a id="ac6f21a0fb4b93bb99f210559a1a6d7d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6f21a0fb4b93bb99f210559a1a6d7d7">&sect;&nbsp;</a></span>SetSpaceGroup() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td>
          <td class="paramname"><em>sg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the space group for this unit cell. Does not create an <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml" title="Used to hold the point-group and/or space-group symmetry. ">OBSymmetryData</a> entry </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div>
<a id="a76ccdf2ccfbefae104ff52932dcf11c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76ccdf2ccfbefae104ff52932dcf11c1">&sect;&nbsp;</a></span>SetSpaceGroup() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>sg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the space group symbol for this unit cell. Does not create an <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml" title="Used to hold the point-group and/or space-group symmetry. ">OBSymmetryData</a> entry or attempt to convert between different symbol notations </p>

</div>
</div>
<a id="ae0d7e7ddcd3c5e3c48c6b24908d8404f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0d7e7ddcd3c5e3c48c6b24908d8404f">&sect;&nbsp;</a></span>SetSpaceGroup() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>sg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the space group for this unit cell. Each spacegroup-symbol has a numeric equivalent which is easier to use to convert between notations. Does not create an <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml" title="Used to hold the point-group and/or space-group symmetry. ">OBSymmetryData</a> entry or attempt to convert between different symbol notations </p>

</div>
</div>
<a id="a6516b3a121b34a94e19201da06104afa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6516b3a121b34a94e19201da06104afa">&sect;&nbsp;</a></span>SetLatticeType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLatticeType </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td>
          <td class="paramname"><em>lt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the Bravais lattice type for this unit cell. </p>

</div>
</div>
<a id="af5cee9c530db13a5ec558a3783893315"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5cee9c530db13a5ec558a3783893315">&sect;&nbsp;</a></span>FillUnitCell()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FillUnitCell </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Duplicate symmetry-unique atoms to fill out the unit cell of the molecule, based on the known space group </p>

</div>
</div>
<a id="a3bacc0010fd34814039b26758da67dae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bacc0010fd34814039b26758da67dae">&sect;&nbsp;</a></span>GetA() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetA </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000003">Todo:</a></b></dt><dd>Remove nonconst overloads in <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml" title="Used for storing information about periodic boundary conditions with conversion to/from translation v...">OBUnitCell</a> on next version bump </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>vector a </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a id="a71ca46e3ddb9b15db1b5971aa7c4a332"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71ca46e3ddb9b15db1b5971aa7c4a332">&sect;&nbsp;</a></span>GetA() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetA </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac0f9682b3743c4ec91dd9fd16bb5bd82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0f9682b3743c4ec91dd9fd16bb5bd82">&sect;&nbsp;</a></span>GetB() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>vector b </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a id="a1d1ca648c4d55ad3275e0737e3ca6ecc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d1ca648c4d55ad3275e0737e3ca6ecc">&sect;&nbsp;</a></span>GetB() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a229a18fdc499aafe149c55011f9fb2fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a229a18fdc499aafe149c55011f9fb2fb">&sect;&nbsp;</a></span>GetC() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>vector c </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a id="a29fff830d7b77eb427ef8fc733d15e17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29fff830d7b77eb427ef8fc733d15e17">&sect;&nbsp;</a></span>GetC() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6897ba879a5e0f5ac4ac5aefeb94601d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6897ba879a5e0f5ac4ac5aefeb94601d">&sect;&nbsp;</a></span>GetAlpha() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAlpha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>angle alpha </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a id="aaeabaff376398e216c49714233a8a2e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaeabaff376398e216c49714233a8a2e3">&sect;&nbsp;</a></span>GetAlpha() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAlpha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8b788f95c3fa1f2cc9aedaa1b92b78a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b788f95c3fa1f2cc9aedaa1b92b78a1">&sect;&nbsp;</a></span>GetBeta() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetBeta </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>angle beta </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a id="a3d0e243a601d66ba5c1c95762eea45d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d0e243a601d66ba5c1c95762eea45d0">&sect;&nbsp;</a></span>GetBeta() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetBeta </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a53b3c98860a330a6b95074945fc2895f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53b3c98860a330a6b95074945fc2895f">&sect;&nbsp;</a></span>GetGamma() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetGamma </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>angle gamma </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a id="a16ebee183db5b1e08f722602c07b7a44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16ebee183db5b1e08f722602c07b7a44">&sect;&nbsp;</a></span>GetGamma() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetGamma </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a545d26772ece9dda5ed6bd4a6f71f45b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a545d26772ece9dda5ed6bd4a6f71f45b">&sect;&nbsp;</a></span>GetOffset() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetOffset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>any offset in the origin of the periodic boundaries </dd></dl>

</div>
</div>
<a id="aece8b73e7c8211d5ed0c74baf58cb58c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aece8b73e7c8211d5ed0c74baf58cb58c">&sect;&nbsp;</a></span>GetOffset() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetOffset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a81676bc2dbd807644f7d5acd1b1a2dc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81676bc2dbd807644f7d5acd1b1a2dc9">&sect;&nbsp;</a></span>GetSpaceGroup() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* GetSpaceGroup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the text representation of the space group for this unit cell </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div>
<a id="ab095c8d5b34f45a89234da38eb87371b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab095c8d5b34f45a89234da38eb87371b">&sect;&nbsp;</a></span>GetSpaceGroup() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* GetSpaceGroup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a22dbea225bd03af66ef0db074cff402e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22dbea225bd03af66ef0db074cff402e">&sect;&nbsp;</a></span>GetSpaceGroupName() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string GetSpaceGroupName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the text representation of the space group for this unit cell </dd></dl>

</div>
</div>
<a id="a6b16714ce2c29cfda0cd0094a874052f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b16714ce2c29cfda0cd0094a874052f">&sect;&nbsp;</a></span>GetSpaceGroupName() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string GetSpaceGroupName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af9f161e4f11054773946dbe12e13936d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9f161e4f11054773946dbe12e13936d">&sect;&nbsp;</a></span>GetLatticeType() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> GetLatticeType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>spacegroup</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>lattice type (based on the <code>spacegroup</code>) </dd></dl>

</div>
</div>
<a id="a33f334e6dc0a506fa095d3c6ade71aec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33f334e6dc0a506fa095d3c6ade71aec">&sect;&nbsp;</a></span>GetLatticeType() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">OBUnitCell::LatticeType</a> GetLatticeType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>spacegroup</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2e65ff07e1ef7e28f87c0f2a3a58a1ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e65ff07e1ef7e28f87c0f2a3a58a1ce">&sect;&nbsp;</a></span>GetLatticeType() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> GetLatticeType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>lattice type (based on angles and distances) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a id="a4e1c320f73909c95b6b0b68b726b8a78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e1c320f73909c95b6b0b68b726b8a78">&sect;&nbsp;</a></span>GetLatticeType() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">OBUnitCell::LatticeType</a> GetLatticeType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afb87d0c709fca5bbafe5908a2290eccb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb87d0c709fca5bbafe5908a2290eccb">&sect;&nbsp;</a></span>GetCellVectors() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&gt; GetCellVectors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>v1, v2, v3 cell vectors </dd></dl>

</div>
</div>
<a id="ad9876418d08424706cc37d6f8d23116d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9876418d08424706cc37d6f8d23116d">&sect;&nbsp;</a></span>GetCellVectors() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt; GetCellVectors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#convertNotionalIntoCartesianCoordinates">blue-obelisk:convertNotionalIntoCartesianCoordinates</a> </p>

</div>
</div>
<a id="ac2cb274fb0a8e40a1df98af82b2da063"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2cb274fb0a8e40a1df98af82b2da063">&sect;&nbsp;</a></span>GetCellMatrix() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetCellMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Access to the cell matrix as row vectors, useful for writing input files. Equivalent to the transpose of <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix()</a> * <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">GetOrthoMatrix()</a> </p><dl class="section return"><dt>Returns</dt><dd>The cell matrix with row vectors. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">OBUnitCell::GetOrthoMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">OBUnitCell::GetFractionalMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">OBUnitCell::GetOrientationMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ad9876418d08424706cc37d6f8d23116d">OBUnitCell::GetCellVectors()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a91e74c4e431188e7c75171794a752317">OBUnitCell::GetCellVolume()</a>.</p>

</div>
</div>
<a id="a00b3c406e65edf13852a3d453d002b06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00b3c406e65edf13852a3d453d002b06">&sect;&nbsp;</a></span>GetCellMatrix() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetCellMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d5f9712690d49282a620ae9b8b2b48a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d5f9712690d49282a620ae9b8b2b48a">&sect;&nbsp;</a></span>GetOrthoMatrix() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrthoMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The orthogonalization matrix, used for converting from fractional to Cartesian coords. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">OBUnitCell::GetFractionalMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">OBUnitCell::GetOrientationMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

</div>
</div>
<a id="a226d37e0c414fc29b83a932c81b038fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a226d37e0c414fc29b83a932c81b038fe">&sect;&nbsp;</a></span>GetOrthoMatrix() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrthoMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a11d813575f888440c6a9c9ebf53ea37e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11d813575f888440c6a9c9ebf53ea37e">&sect;&nbsp;</a></span>GetOrientationMatrix() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrientationMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Used to convert fractional and cartesian coordinates if the cell is not oriented in standard form (a parallel to x axis, b in xy plane) </p><dl class="section return"><dt>Returns</dt><dd>The orientation matrix </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">OBUnitCell::GetOrthoMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">OBUnitCell::GetFractionalMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

</div>
</div>
<a id="a08fe56b35e4ab52acede701c5845ffce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08fe56b35e4ab52acede701c5845ffce">&sect;&nbsp;</a></span>GetOrientationMatrix() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrientationMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2ac2c43b65936f802681d33aff49bc25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ac2c43b65936f802681d33aff49bc25">&sect;&nbsp;</a></span>GetFractionalMatrix() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetFractionalMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The fractionalization matrix, used for converting from Cartesian to fractional coords. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">OBUnitCell::GetOrthoMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">OBUnitCell::GetOrientationMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

</div>
</div>
<a id="a4c67fccaf0b03a9e6eed368d2744d7cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c67fccaf0b03a9e6eed368d2744d7cf">&sect;&nbsp;</a></span>GetFractionalMatrix() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetFractionalMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a429755f02991b509eb78b70466e2fb5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a429755f02991b509eb78b70466e2fb5e">&sect;&nbsp;</a></span>FractionalToCartesian() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> FractionalToCartesian </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>frac</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convenience function to convert fractional coordinates to cartesian coordinates. Returns</p>
<p><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix()</a> * <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">GetOrthoMatrix()</a> * frac + <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a545d26772ece9dda5ed6bd4a6f71f45b">GetOffset()</a> </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">frac</td><td>Vector of fractional coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Cartesian coordinates </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a7d00b763369df91f85872c6e343fec07">OBUnitCell::WrapCartesianCoordinate()</a>.</p>

</div>
</div>
<a id="a39439488d806ef4ca6b43f0f9f84b2cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39439488d806ef4ca6b43f0f9f84b2cc">&sect;&nbsp;</a></span>FractionalToCartesian() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> FractionalToCartesian </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>frac</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae04a9f37ac44205cdbcbcd29ce2e8471"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae04a9f37ac44205cdbcbcd29ce2e8471">&sect;&nbsp;</a></span>CartesianToFractional() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> CartesianToFractional </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>cart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convenience function to convert cartesian coordinates to fractional coordinates. Returns</p>
<p><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">GetFractionalMatrix()</a> * <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix()</a>.inverse() * (cart - <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a545d26772ece9dda5ed6bd4a6f71f45b">GetOffset()</a>) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cart</td><td>Vector of cartesian coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Fractional coordinates </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a7d00b763369df91f85872c6e343fec07">OBUnitCell::WrapCartesianCoordinate()</a>.</p>

</div>
</div>
<a id="aa319e3756b542e64ae4bb96147c8b453"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa319e3756b542e64ae4bb96147c8b453">&sect;&nbsp;</a></span>CartesianToFractional() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> CartesianToFractional </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>cart</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2343254a6cfe37221a4f79bd7db8e1da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2343254a6cfe37221a4f79bd7db8e1da">&sect;&nbsp;</a></span>WrapCartesianCoordinate() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapCartesianCoordinate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>cart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Wraps cartesian coordinate to fall within the unit cell. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cart</td><td>Vector of cartesian coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Cartesian coordinates within cell boundaries. </dd></dl>

</div>
</div>
<a id="a7d00b763369df91f85872c6e343fec07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d00b763369df91f85872c6e343fec07">&sect;&nbsp;</a></span>WrapCartesianCoordinate() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapCartesianCoordinate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>cart</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a17fa7c484e6c603aad0a1dd1e53d21ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17fa7c484e6c603aad0a1dd1e53d21ed">&sect;&nbsp;</a></span>WrapFractionalCoordinate() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapFractionalCoordinate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>frac</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Wraps fractional coordinate to fall within the unit cell. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">frac</td><td>Vector of fractional coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Fractional coordinates within cell boundaries (between 0 and 1). </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000004">Todo:</a></b></dt><dd>Make <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a17fa7c484e6c603aad0a1dd1e53d21ed">OBUnitCell::WrapFractionalCoordinate</a> static in the next ABI break </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a7d00b763369df91f85872c6e343fec07">OBUnitCell::WrapCartesianCoordinate()</a>.</p>

</div>
</div>
<a id="aaec07c3aaf87a4d9503b31e3629b8ef0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaec07c3aaf87a4d9503b31e3629b8ef0">&sect;&nbsp;</a></span>WrapFractionalCoordinate() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapFractionalCoordinate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>frac</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a67c485a54f295cf80b85e3bf6c14c29f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67c485a54f295cf80b85e3bf6c14c29f">&sect;&nbsp;</a></span>GetSpaceGroupNumber() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetSpaceGroupNumber </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The numeric value of the given spacegroup </dd></dl>

</div>
</div>
<a id="acdf326578eba3096d54adf5195bd615e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdf326578eba3096d54adf5195bd615e">&sect;&nbsp;</a></span>GetSpaceGroupNumber() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetSpaceGroupNumber </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4531707d182740586778f9fe8c4e49f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4531707d182740586778f9fe8c4e49f">&sect;&nbsp;</a></span>GetCellVolume() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetCellVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The cell volume (in Angstroms^3) </dd></dl>

</div>
</div>
<a id="a91e74c4e431188e7c75171794a752317"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91e74c4e431188e7c75171794a752317">&sect;&nbsp;</a></span>GetCellVolume() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetCellVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aae3d15983201a2a115701b2c538fef77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae3d15983201a2a115701b2c538fef77">&sect;&nbsp;</a></span>SetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the attribute (key), which can be used to retrieve this data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="a45613e34598a9584fb0120ef3fdab9e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45613e34598a9584fb0120ef3fdab9e0">&sect;&nbsp;</a></span>SetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the origin of this data, which can be used to filter the data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="ac61fc66ef692e79290d6eaf7231db92c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac61fc66ef692e79290d6eaf7231db92c">&sect;&nbsp;</a></span>GetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a632be87a51811b515f7e9a5fc18e4476">OpenBabel::extract_thermochemistry()</a>, and <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div>
<a id="a91834e24b299c63cdf2cb77795298446"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91834e24b299c63cdf2cb77795298446">&sect;&nbsp;</a></span>GetDataType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a id="a6145f0df06364b6d58c728368db8f992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6145f0df06364b6d58c728368db8f992">&sect;&nbsp;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base class returns a default value (the attribute type) but should never be called. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBPairData.shtml#a6145f0df06364b6d58c728368db8f992">OBPairData</a>, and <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#a6145f0df06364b6d58c728368db8f992">OBCommentData</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>.</p>

</div>
</div>
<a id="adf131b210114ba636246ffc8dcb2ea13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf131b210114ba636246ffc8dcb2ea13">&sect;&nbsp;</a></span>GetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a8d02fbc6c58e1abe5c8043f1253f6ab9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d02fbc6c58e1abe5c8043f1253f6ab9">&sect;&nbsp;</a></span>_mOrtho</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> _mOrtho</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa319e3756b542e64ae4bb96147c8b453">OBUnitCell::CartesianToFractional()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a39439488d806ef4ca6b43f0f9f84b2cc">OBUnitCell::FractionalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a71ca46e3ddb9b15db1b5971aa7c4a332">OBUnitCell::GetA()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aaeabaff376398e216c49714233a8a2e3">OBUnitCell::GetAlpha()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a1d1ca648c4d55ad3275e0737e3ca6ecc">OBUnitCell::GetB()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a3d0e243a601d66ba5c1c95762eea45d0">OBUnitCell::GetBeta()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a29fff830d7b77eb427ef8fc733d15e17">OBUnitCell::GetC()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a00b3c406e65edf13852a3d453d002b06">OBUnitCell::GetCellMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4c67fccaf0b03a9e6eed368d2744d7cf">OBUnitCell::GetFractionalMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a16ebee183db5b1e08f722602c07b7a44">OBUnitCell::GetGamma()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a226d37e0c414fc29b83a932c81b038fe">OBUnitCell::GetOrthoMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a id="a2497d0bb15408f8670722631fd8d90b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2497d0bb15408f8670722631fd8d90b8">&sect;&nbsp;</a></span>_mOrient</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> _mOrient</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa319e3756b542e64ae4bb96147c8b453">OBUnitCell::CartesianToFractional()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a39439488d806ef4ca6b43f0f9f84b2cc">OBUnitCell::FractionalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a00b3c406e65edf13852a3d453d002b06">OBUnitCell::GetCellMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a08fe56b35e4ab52acede701c5845ffce">OBUnitCell::GetOrientationMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a id="a4e04f720581a30502f781e620fb56af6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e04f720581a30502f781e620fb56af6">&sect;&nbsp;</a></span>_offset</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> _offset</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa319e3756b542e64ae4bb96147c8b453">OBUnitCell::CartesianToFractional()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a39439488d806ef4ca6b43f0f9f84b2cc">OBUnitCell::FractionalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aece8b73e7c8211d5ed0c74baf58cb58c">OBUnitCell::GetOffset()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4c53fadff602620ff82a9a0c3ceda85a">OBUnitCell::SetOffset()</a>.</p>

</div>
</div>
<a id="a2f7186c492d40a6b69092700ff8aee83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f7186c492d40a6b69092700ff8aee83">&sect;&nbsp;</a></span>_spaceGroupName</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _spaceGroupName</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acdf326578eba3096d54adf5195bd615e">OBUnitCell::GetSpaceGroupNumber()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a id="a9c98685360a568cd4473b1931e2765d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c98685360a568cd4473b1931e2765d8">&sect;&nbsp;</a></span>_spaceGroup</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* _spaceGroup</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a33f334e6dc0a506fa095d3c6ade71aec">OBUnitCell::GetLatticeType()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acdf326578eba3096d54adf5195bd615e">OBUnitCell::GetSpaceGroupNumber()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a id="a474459fcdeb63c82700a345e59330645"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a474459fcdeb63c82700a345e59330645">&sect;&nbsp;</a></span>_lattice</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> _lattice</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e1c320f73909c95b6b0b68b726b8a78">OBUnitCell::GetLatticeType()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a id="adceb77134f15418a66cf1124dcef1b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adceb77134f15418a66cf1124dcef1b51">&sect;&nbsp;</a></span>_attr</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _attr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute tag (e.g., "UnitCell", "Comment" or "Author") </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a31291823d487a4a47f24aae5870505ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31291823d487a4a47f24aae5870505ef">&sect;&nbsp;</a></span>_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute type &ndash; declared for each subclass </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a239606b62a534e4df7626ea0cfdfb856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a239606b62a534e4df7626ea0cfdfb856">&sect;&nbsp;</a></span>_source</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> _source</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>source of data for accounting </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#a7c2db1828edcca7ff07c8591744ec3a4">OBConformerData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#ae1e415e9a406f4965be7352a3c66fa3a">OBSymmetryData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#ab526e7eddb908b711e19aa355d133241">OBTorsionData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#af0af03b552fac05db59787be08a443eb">OBAngleData::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#a2d8a571296610389b9427aef139b1d8d">OBChiralData::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="generic_8h_source.shtml">generic.h</a></li>
<li><a class="el" href="generic_8cpp.shtml">generic.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
