<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>obiter.h File Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle">
<div class="title">obiter.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;openbabel/babelconfig.h&gt;</code><br />
<code>#include &lt;<a class="el" href="base_8h_source.shtml">openbabel/base.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="bitvec_8h_source.shtml">openbabel/bitvec.h</a>&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &lt;stack&gt;</code><br />
<code>#include &lt;queue&gt;</code><br />
</div>
<p><a href="obiter_8h_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAtomIter.shtml">OBMolAtomIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml">OBMolAtomDFSIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml">OBMolAtomBFSIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondBFSIter.shtml">OBMolBondBFSIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OBMolBondIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OBAtomAtomIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OBResidueIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidueAtomIter.shtml">OBResidueAtomIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml">OBMolTorsionIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml">OBMolPairIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceOpenBabel"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:afb051cb17b46d381998c24fc41db2a79"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#afb051cb17b46d381998c24fc41db2a79">FOR_ATOMS_OF_MOL</a>(a,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAtomIter.shtml">OpenBabel::OBMolAtomIter</a>     a(m); a; ++a )</td></tr>
<tr class="separator:afb051cb17b46d381998c24fc41db2a79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16c0f68c4f2d476fae98338b31e77e46"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a16c0f68c4f2d476fae98338b31e77e46">FOR_BONDS_OF_MOL</a>(b,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OpenBabel::OBMolBondIter</a>     b(m); b; ++b )</td></tr>
<tr class="separator:a16c0f68c4f2d476fae98338b31e77e46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18326b3c74bff171f5807ce9725e0c47"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a18326b3c74bff171f5807ce9725e0c47">FOR_NBORS_OF_ATOM</a>(a,  p)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OpenBabel::OBAtomAtomIter</a>    a(p); a; ++a )</td></tr>
<tr class="separator:a18326b3c74bff171f5807ce9725e0c47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa102b7f8200028ba654f022dc63fdf35"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#aa102b7f8200028ba654f022dc63fdf35">FOR_BONDS_OF_ATOM</a>(b,  p)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OpenBabel::OBAtomBondIter</a>    b(p); b; ++b )</td></tr>
<tr class="separator:aa102b7f8200028ba654f022dc63fdf35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483bbcfb9673a775c47ab6adf8e53451"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a483bbcfb9673a775c47ab6adf8e53451">FOR_RESIDUES_OF_MOL</a>(r,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OpenBabel::OBResidueIter</a>     r(m); r; ++r )</td></tr>
<tr class="separator:a483bbcfb9673a775c47ab6adf8e53451"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4f83897733e3f3a1fb1ff9a1a85db1f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#aa4f83897733e3f3a1fb1ff9a1a85db1f">FOR_ATOMS_OF_RESIDUE</a>(a,  r)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBResidueAtomIter.shtml">OpenBabel::OBResidueAtomIter</a> a(r); a; ++a )</td></tr>
<tr class="separator:aa4f83897733e3f3a1fb1ff9a1a85db1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15820464f7b1f60c2d343932d5eda8cd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a15820464f7b1f60c2d343932d5eda8cd">FOR_DFS_OF_MOL</a>(a,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml">OpenBabel::OBMolAtomDFSIter</a>  a(m); a; ++a )</td></tr>
<tr class="separator:a15820464f7b1f60c2d343932d5eda8cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c427f32f67339fb215933423bace3e4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a7c427f32f67339fb215933423bace3e4">FOR_BFS_OF_MOL</a>(a,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml">OpenBabel::OBMolAtomBFSIter</a>  a(m); a; ++a )</td></tr>
<tr class="separator:a7c427f32f67339fb215933423bace3e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cccdc28607ea86191978c1473f09a40"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a4cccdc28607ea86191978c1473f09a40">FOR_BONDBFS_OF_MOL</a>(b,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolBondBFSIter.shtml">OpenBabel::OBMolBondBFSIter</a>  b(m); b; ++b )</td></tr>
<tr class="separator:a4cccdc28607ea86191978c1473f09a40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9205e106e30c7af1cafcca57d52c7692"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a9205e106e30c7af1cafcca57d52c7692">FOR_RINGS_OF_MOL</a>(r,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OpenBabel::OBMolRingIter</a>     r(m); r; ++r )</td></tr>
<tr class="separator:a9205e106e30c7af1cafcca57d52c7692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fc0ae63791285f6155fa53658c2e4ae"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a1fc0ae63791285f6155fa53658c2e4ae">FOR_ANGLES_OF_MOL</a>(a,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OpenBabel::OBMolAngleIter</a>    a(m); a; ++a )</td></tr>
<tr class="separator:a1fc0ae63791285f6155fa53658c2e4ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee758b2fef3dcacb197e41b5819d7465"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#aee758b2fef3dcacb197e41b5819d7465">FOR_TORSIONS_OF_MOL</a>(t,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml">OpenBabel::OBMolTorsionIter</a>  t(m); t; ++t )</td></tr>
<tr class="separator:aee758b2fef3dcacb197e41b5819d7465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a640062d330b1455694059113b560a4aa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="obiter_8h.shtml#a640062d330b1455694059113b560a4aa">FOR_PAIRS_OF_MOL</a>(p,  m)&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml">OpenBabel::OBMolPairIter</a>     p(m); p; ++p )</td></tr>
<tr class="separator:a640062d330b1455694059113b560a4aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>STL-style iterators for Open Babel. </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="afb051cb17b46d381998c24fc41db2a79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb051cb17b46d381998c24fc41db2a79">&sect;&nbsp;</a></span>FOR_ATOMS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_ATOMS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAtomIter.shtml">OpenBabel::OBMolAtomIter</a>     a(m); a; ++a )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62429f9b662a5d62b500ec2fedf7f67c">OBMol::AssignTotalChargeToAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="namespaceOpenBabel.shtml#abfb2d29563ee1a81f2e70a51d55c83cf">OpenBabel::CompileAutomorphismQuery()</a>, <a class="el" href="group__substructure.shtml#ga9307ec0c55a4d2b7ee933b53a3a84ce5">OpenBabel::CompileMoleculeQuery()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7e253a1997cddeb4fd5eaa79e6e42610">OBForceField::ConjugateGradientsInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aef9f033a26aaedb027c2a99de04a9646">OBForceField::ConjugateGradientsTakeNSteps()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#a0d8f018cbaaa9d313b45e468f77afea2">OBAtomTyper::CorrectAromaticNitrogens()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8c466035b972dddd7f5ebd27f04f685b">OBForceField::CorrectVelocities()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a0d97557b9f37191cce473fbfd4636a54">OBForceField::DetectExplosion()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7b4196fee783bef9070d3d50ba91ff84">OBForceField::DistanceGeometry()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ae9f7de4324a4a476ca0663772c1a6bfa">OBForceField::GenerateVelocities()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBChargeModel.shtml#a9b1ae06b444f49a68b2e2c8ac9a0c534">OBChargeModel::GetDipoleMoment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a997bc4b84a93d285f63efa60cbb8ee8d">OBMol::GetSpacedFormula()</a>, <a class="el" href="namespaceOpenBabel.shtml#a67f559671aa9d68ce3888baab8f7fc1a">OpenBabel::has_leftover_electrons()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3be6b6496e799b9308b6c1beb927c265">OpenBabel::InternalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a638c3bbd2aff3edd2b372fd087ccf99d">OBForceField::IsSetupNeeded()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a52ae121410bc166d73eb4200f6127842">OBForceField::MolecularDynamicsTakeNSteps()</a>, <a class="el" href="classOpenBabel_1_1OBGraphSym.shtml#ab2b78319f588bac47323cfd3aaca8c7c">OBGraphSym::OBGraphSym()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a95220f9d1cc8cb66548a504c451094c0">OBForceField::PrintFormalCharges()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a12dc30d677cadcf672458a5b60460559">OBForceField::PrintPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5aade506ba2985dc08c1368c01f45b63">OBForceField::PrintTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad022f259b6d08561e0c609fdc8484a6a">OBForceField::PrintVelocities()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ac14285658929bd5af45a1560cb1ec15b">AliasData::RevertToAliasForm()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac271a3bf117a79400817b696d11ea4a7">OBForceField::SetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06b2f4ac9f082f41da3ae01d4bb3f1cc">OBForceField::SetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ab2cea937bb0224112a6f79758a099932">OBForceField::SteepestDescentTakeNSteps()</a>, <a class="el" href="classOpenBabel_1_1OBPointGroup.shtml#adfa92d36cdbb24952729e1446cf3975c">OBPointGroup::Symmetrize()</a>, and <a class="el" href="classOpenBabel_1_1OBAlign.shtml#a3748ab33ffd81acda5060963bdae971a">OBAlign::UpdateCoords()</a>.</p>

</div>
</div>
<a id="a16c0f68c4f2d476fae98338b31e77e46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16c0f68c4f2d476fae98338b31e77e46">&sect;&nbsp;</a></span>FOR_BONDS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_BONDS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolBondIter.shtml">OpenBabel::OBMolBondIter</a>     b(m); b; ++b )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="namespaceOpenBabel.shtml#abfb2d29563ee1a81f2e70a51d55c83cf">OpenBabel::CompileAutomorphismQuery()</a>, <a class="el" href="group__substructure.shtml#ga9307ec0c55a4d2b7ee933b53a3a84ce5">OpenBabel::CompileMoleculeQuery()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a0d97557b9f37191cce473fbfd4636a54">OBForceField::DetectExplosion()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a638c3bbd2aff3edd2b372fd087ccf99d">OBForceField::IsSetupNeeded()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>.</p>

</div>
</div>
<a id="a18326b3c74bff171f5807ce9725e0c47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18326b3c74bff171f5807ce9725e0c47">&sect;&nbsp;</a></span>FOR_NBORS_OF_ATOM</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_NBORS_OF_ATOM</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">p&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml">OpenBabel::OBAtomAtomIter</a>    a(p); a; ++a )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a033f4bd8d32f76ae6b7151e1c89bae60">OpenBabel::addNbrs()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a26e58d067cc3985a84fbf5cfa031947d">OBBuilder::AddNbrs()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7b4196fee783bef9070d3d50ba91ff84">OBForceField::DistanceGeometry()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a0e3ffef22e9d0e3a960e1ddc3c7a3af0">OpenBabel::getFragment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63e02252214e540d56815820715f1ae3">OBAtom::IsHbondAcceptor()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ab4077f1ebf77386df177be76a63b6b10">OBChainsParser::PerceiveChains()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="aa102b7f8200028ba654f022dc63fdf35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa102b7f8200028ba654f022dc63fdf35">&sect;&nbsp;</a></span>FOR_BONDS_OF_ATOM</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_BONDS_OF_ATOM</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">p&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OpenBabel::OBAtomBondIter</a>    b(p); b; ++b )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abcf2e89fef03dd291e22507c51af8965">OBMol::ConvertZeroBonds()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ae12d082d7bc7adb2e9fd621adf27ccb6">OBMol::FindChildren()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#af5f2eb9394954bc877f2638eb208ac5a">OpenBabel::get_bonds_of_ring()</a>, <a class="el" href="namespaceOpenBabel.shtml#a07faa5acbed4a3cbbfd0d711321c0439">OpenBabel::has_leftover_electrons()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="a483bbcfb9673a775c47ab6adf8e53451"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483bbcfb9673a775c47ab6adf8e53451">&sect;&nbsp;</a></span>FOR_RESIDUES_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_RESIDUES_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">r, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBResidueIter.shtml">OpenBabel::OBResidueIter</a>     r(m); r; ++r )</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4f83897733e3f3a1fb1ff9a1a85db1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4f83897733e3f3a1fb1ff9a1a85db1f">&sect;&nbsp;</a></span>FOR_ATOMS_OF_RESIDUE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_ATOMS_OF_RESIDUE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">r&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBResidueAtomIter.shtml">OpenBabel::OBResidueAtomIter</a> a(r); a; ++a )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="a15820464f7b1f60c2d343932d5eda8cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15820464f7b1f60c2d343932d5eda8cd">&sect;&nbsp;</a></span>FOR_DFS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_DFS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml">OpenBabel::OBMolAtomDFSIter</a>  a(m); a; ++a )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ac543a42f2765cba8535d145519372bc5">OBBuilder::Build()</a>.</p>

</div>
</div>
<a id="a7c427f32f67339fb215933423bace3e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c427f32f67339fb215933423bace3e4">&sect;&nbsp;</a></span>FOR_BFS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_BFS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml">OpenBabel::OBMolAtomBFSIter</a>  a(m); a; ++a )</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4cccdc28607ea86191978c1473f09a40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cccdc28607ea86191978c1473f09a40">&sect;&nbsp;</a></span>FOR_BONDBFS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_BONDBFS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolBondBFSIter.shtml">OpenBabel::OBMolBondBFSIter</a>  b(m); b; ++b )</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9205e106e30c7af1cafcca57d52c7692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9205e106e30c7af1cafcca57d52c7692">&sect;&nbsp;</a></span>FOR_RINGS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_RINGS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">r, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OpenBabel::OBMolRingIter</a>     r(m); r; ++r )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#afd34dcbc8bd8c0fba2433b39f1e1d61b">OBRotamerList::Setup()</a>.</p>

</div>
</div>
<a id="a1fc0ae63791285f6155fa53658c2e4ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fc0ae63791285f6155fa53658c2e4ae">&sect;&nbsp;</a></span>FOR_ANGLES_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_ANGLES_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OpenBabel::OBMolAngleIter</a>    a(m); a; ++a )</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aee758b2fef3dcacb197e41b5819d7465"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee758b2fef3dcacb197e41b5819d7465">&sect;&nbsp;</a></span>FOR_TORSIONS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_TORSIONS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">t, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml">OpenBabel::OBMolTorsionIter</a>  t(m); t; ++t )</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a640062d330b1455694059113b560a4aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a640062d330b1455694059113b560a4aa">&sect;&nbsp;</a></span>FOR_PAIRS_OF_MOL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FOR_PAIRS_OF_MOL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">p, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">m&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;for( <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml">OpenBabel::OBMolPairIter</a>     p(m); p; ++p )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa1d27b0f4f43d58d416528cd24215307">OBForceField::GetNumPairs()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7bc49547f1ea2ebf09864495d324fe67">OBForceField::UpdatePairsSimple()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:29 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
