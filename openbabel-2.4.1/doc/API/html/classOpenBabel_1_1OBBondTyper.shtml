<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBBondTyper Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBBondTyper.shtml">OBBondTyper</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBBondTyper-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBBondTyper Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="bondtyper_8h_source.shtml">openbabel/bondtyper.cpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBBondTyper:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBBondTyper.png" usemap="#OBBondTyper_map" alt=""/>
  <map id="OBBondTyper_map" name="OBBondTyper_map">
<area href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files. " alt="OBGlobalDataBase" shape="rect" coords="0,0,120,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af7ac382f652408141331e40f908c46b0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#af7ac382f652408141331e40f908c46b0">OBBondTyper</a> ()</td></tr>
<tr class="separator:af7ac382f652408141331e40f908c46b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72db550a153a452b1ed3d4ac2cc0d90c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#a72db550a153a452b1ed3d4ac2cc0d90c">~OBBondTyper</a> ()</td></tr>
<tr class="separator:a72db550a153a452b1ed3d4ac2cc0d90c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e3b6d38df0786ccf7f938d60e386aae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a1e3b6d38df0786ccf7f938d60e386aae">Init</a> ()</td></tr>
<tr class="separator:a1e3b6d38df0786ccf7f938d60e386aae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49002f92ad6a1c71d7f9148271770b7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">SetReadDirectory</a> (char *dir)</td></tr>
<tr class="separator:a49002f92ad6a1c71d7f9148271770b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd0630d27e20f38de4c753ca68e2282"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">SetEnvironmentVariable</a> (char *var)</td></tr>
<tr class="separator:a2bd0630d27e20f38de4c753ca68e2282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">OBBondTyper Database Utilities</div></td></tr>
<tr class="memitem:ae59fef8af62e52629bf2576e34a26801"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#ae59fef8af62e52629bf2576e34a26801">ParseLine</a> (const char *)</td></tr>
<tr class="separator:ae59fef8af62e52629bf2576e34a26801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab7c531e5ffc5174e57a85e853931534"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a> ()</td></tr>
<tr class="separator:aab7c531e5ffc5174e57a85e853931534"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Bond Perception Routines</div></td></tr>
<tr class="memitem:aa5af3b65ac3956ea6ee5e16198e5bb7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">AssignFunctionalGroupBonds</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:aa5af3b65ac3956ea6ee5e16198e5bb7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a40756214f69d1c40ad70b64ae9fdc08d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">_init</a></td></tr>
<tr class="separator:a40756214f69d1c40ad70b64ae9fdc08d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a08560f2b4885250c586c550f2d7af"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">_dataptr</a></td></tr>
<tr class="separator:a45a08560f2b4885250c586c550f2d7af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a895aefe990ffe9af66bb5cd4e37d3579"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">_filename</a></td></tr>
<tr class="separator:a895aefe990ffe9af66bb5cd4e37d3579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c2f62a9907553e5feb1ecef65c6c386"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">_dir</a></td></tr>
<tr class="separator:a2c2f62a9907553e5feb1ecef65c6c386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d93159b6eee0cb302451621106f61c7"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">_subdir</a></td></tr>
<tr class="separator:a5d93159b6eee0cb302451621106f61c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d06c3aed77fb9e118b337bed557928"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">_envvar</a></td></tr>
<tr class="separator:a87d06c3aed77fb9e118b337bed557928"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Assigns bond types for file formats without bond information. </p>
<p>The <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml" title="Assigns bond types for file formats without bond information. ">OBBondTyper</a> class is designed to read in a list of bond typing rules and apply them to molecules. It is called from the <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178" title="Attempts to perceive multiple bonds based on geometries. ">OBMol::PerceiveBondOrders()</a> method. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af7ac382f652408141331e40f908c46b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7ac382f652408141331e40f908c46b0">&sect;&nbsp;</a></span>OBBondTyper()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBondTyper.shtml">OBBondTyper</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a72db550a153a452b1ed3d4ac2cc0d90c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72db550a153a452b1ed3d4ac2cc0d90c">&sect;&nbsp;</a></span>~OBBondTyper()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBBondTyper.shtml">OBBondTyper</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae59fef8af62e52629bf2576e34a26801"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae59fef8af62e52629bf2576e34a26801">&sect;&nbsp;</a></span>ParseLine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParseLine </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Specified by particular table classes (parses an individual data line) </p>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">OBGlobalDataBase</a>.</p>

</div>
</div>
<a id="aab7c531e5ffc5174e57a85e853931534"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab7c531e5ffc5174e57a85e853931534">&sect;&nbsp;</a></span>GetSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t GetSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the size of the database (for error checking) </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">OBGlobalDataBase</a>.</p>

</div>
</div>
<a id="aa5af3b65ac3956ea6ee5e16198e5bb7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5af3b65ac3956ea6ee5e16198e5bb7a">&sect;&nbsp;</a></span>AssignFunctionalGroupBonds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AssignFunctionalGroupBonds </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assign bonds to functional groups based on the bond typer database. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a id="a1e3b6d38df0786ccf7f938d60e386aae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e3b6d38df0786ccf7f938d60e386aae">&sect;&nbsp;</a></span>Init()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Init </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read in the data file, falling back as needed. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#addb143a5ae2f64420fa692a14489288b">OBRotorList::Init()</a>.</p>

</div>
</div>
<a id="a49002f92ad6a1c71d7f9148271770b7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49002f92ad6a1c71d7f9148271770b7a">&sect;&nbsp;</a></span>SetReadDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetReadDirectory </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>dir</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the directory before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed. ">Init()</a> </p>

</div>
</div>
<a id="a2bd0630d27e20f38de4c753ca68e2282"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bd0630d27e20f38de4c753ca68e2282">&sect;&nbsp;</a></span>SetEnvironmentVariable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetEnvironmentVariable </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>var</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the environment variable to use before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed. ">Init()</a> </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a40756214f69d1c40ad70b64ae9fdc08d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40756214f69d1c40ad70b64ae9fdc08d">&sect;&nbsp;</a></span>_init</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool _init</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Whether the data been read already. </p>

</div>
</div>
<a id="a45a08560f2b4885250c586c550f2d7af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45a08560f2b4885250c586c550f2d7af">&sect;&nbsp;</a></span>_dataptr</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* _dataptr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default data table if file is unreadable. </p>

</div>
</div>
<a id="a895aefe990ffe9af66bb5cd4e37d3579"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a895aefe990ffe9af66bb5cd4e37d3579">&sect;&nbsp;</a></span>_filename</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _filename</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>File to search for. </p>

</div>
</div>
<a id="a2c2f62a9907553e5feb1ecef65c6c386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c2f62a9907553e5feb1ecef65c6c386">&sect;&nbsp;</a></span>_dir</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _dir</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Data directory for file if _envvar fails. </p>

</div>
</div>
<a id="a5d93159b6eee0cb302451621106f61c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d93159b6eee0cb302451621106f61c7">&sect;&nbsp;</a></span>_subdir</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _subdir</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subdirectory (if using environment variable) </p>

</div>
</div>
<a id="a87d06c3aed77fb9e118b337bed557928"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87d06c3aed77fb9e118b337bed557928">&sect;&nbsp;</a></span>_envvar</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _envvar</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Environment variable to check first. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="bondtyper_8h_source.shtml">bondtyper.h</a></li>
<li><a class="el" href="bondtyper_8cpp.shtml">bondtyper.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
