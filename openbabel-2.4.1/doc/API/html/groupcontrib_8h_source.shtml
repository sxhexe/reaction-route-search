<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>groupcontrib.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">groupcontrib.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="groupcontrib_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">groupcontrib.h - Handle group contribution algorithms.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 2007      by Tim Vandermeersch</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">              2001-2007 by Stephen Jelfs</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">              2001-2007 by Joerg Kurt Wegner, me@cheminformatics.eu</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">Original version: JOELib2, http://joelib.sf.net</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#ifndef OB_GROUPCONTRIB_H</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#define OB_GROUPCONTRIB_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="parsmart_8h.shtml">openbabel/parsmart.h</a>&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="descriptor_8h.shtml">openbabel/descriptor.h</a>&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">// This macro is used in DLL builds. If it has not</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">// been set in babelconfig.h, define it as nothing.</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#ifndef OBDESC</span></div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="groupcontrib_8h.shtml#a040701d52ed53f60eaeb431aa77adb6d">   33</a></span>&#160;<span class="preprocessor">        #define OBDESC</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGroupContrib.shtml">   45</a></span>&#160;<span class="keyword">class </span><a class="code" href="groupcontrib_8h.shtml#a040701d52ed53f60eaeb431aa77adb6d">OBDESC</a> <a class="code" href="classOpenBabel_1_1OBGroupContrib.shtml">OBGroupContrib</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBDescriptor.shtml">OBDescriptor</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <a class="code" href="classOpenBabel_1_1OBGroupContrib.shtml">OBGroupContrib</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* ID, <span class="keyword">const</span> <span class="keywordtype">char</span>* filename, <span class="keyword">const</span> <span class="keywordtype">char</span>* descr)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    : <a class="code" href="classOpenBabel_1_1OBDescriptor.shtml">OBDescriptor</a>(ID, <span class="keyword">false</span>), _filename(filename), _descr(descr), _debug(<span class="keyword">false</span>){}</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* Description();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGroupContrib.shtml#ab91e9dba77605edc84876eac596f2094">   60</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGroupContrib.shtml">OBGroupContrib</a>* <a class="code" href="classOpenBabel_1_1OBGroupContrib.shtml#ab91e9dba77605edc84876eac596f2094">MakeInstance</a>(<span class="keyword">const</span> std::vector&lt;std::string&gt;&amp; textlines)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBGroupContrib.shtml">OBGroupContrib</a>(textlines[1].c_str(),textlines[2].c_str(),textlines[3].c_str());</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">double</span> Predict(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* pOb, std::string* param=NULL);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">bool</span> ParseFile();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* _filename;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* _descr;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  std::vector&lt;std::pair&lt;OBSmartsPattern*, double&gt; &gt; _contribsHeavy; </div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  std::vector&lt;std::pair&lt;OBSmartsPattern*, double&gt; &gt; _contribsHydrogen; </div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">bool</span> _debug;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;};</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">/* The classes OBLogp, OBPSA and OBMR have been replaced by instances of</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">OBGroupContrib with different IDs.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">So instead of:</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">      OBLogp logP;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">      cout &lt;&lt; &quot;logP  &quot; &lt;&lt; logP.Predict(mol) &lt;&lt; endl;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">use:</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">      OBDescriptor* pDesc = OBDescriptor::FindType(&quot;logP&quot;)</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">      if(pDesc)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">        cout &lt;&lt; &quot;logP  &quot; &lt;&lt; pDesc-&gt;Predict(&amp;mol) &lt;&lt; endl;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">*/</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;} <span class="comment">// end namespace OpenBabel</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#endif // OB_GROUPCONTRIB_H</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBGroupContrib_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGroupContrib.shtml">OpenBabel::OBGroupContrib</a></div><div class="ttdoc">Handle group contribution algorithms. </div><div class="ttdef"><b>Definition:</b> groupcontrib.h:45</div></div>
<div class="ttc" id="descriptor_8h_shtml"><div class="ttname"><a href="descriptor_8h.shtml">descriptor.h</a></div><div class="ttdoc">Base class for molecular descriptors. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBGroupContrib_shtml_ab91e9dba77605edc84876eac596f2094"><div class="ttname"><a href="classOpenBabel_1_1OBGroupContrib.shtml#ab91e9dba77605edc84876eac596f2094">OpenBabel::OBGroupContrib::MakeInstance</a></div><div class="ttdeci">virtual OBGroupContrib * MakeInstance(const std::vector&lt; std::string &gt; &amp;textlines)</div><div class="ttdef"><b>Definition:</b> groupcontrib.h:60</div></div>
<div class="ttc" id="mol_8h_shtml"><div class="ttname"><a href="mol_8h.shtml">mol.h</a></div><div class="ttdoc">Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel) ...</div></div>
<div class="ttc" id="groupcontrib_8h_shtml_a040701d52ed53f60eaeb431aa77adb6d"><div class="ttname"><a href="groupcontrib_8h.shtml#a040701d52ed53f60eaeb431aa77adb6d">OBDESC</a></div><div class="ttdeci">#define OBDESC</div><div class="ttdef"><b>Definition:</b> groupcontrib.h:33</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDescriptor_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBDescriptor.shtml">OpenBabel::OBDescriptor</a></div><div class="ttdoc">Base class for molecular properties, descriptors or features. </div><div class="ttdef"><b>Definition:</b> descriptor.h:34</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:240</div></div>
<div class="ttc" id="parsmart_8h_shtml"><div class="ttname"><a href="parsmart_8h.shtml">parsmart.h</a></div><div class="ttdoc">Daylight SMARTS parser. </div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
