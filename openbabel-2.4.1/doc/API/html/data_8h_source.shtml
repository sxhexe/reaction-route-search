<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>data.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">data.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="data_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">data.h - Global data and resource file parsers.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_DATA_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_DATA_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">class </span>OBAtom;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">class </span>OBMol;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">class </span>OBBitVec;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml">   49</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">   52</a></span>&#160;      <span class="keywordtype">bool</span>         <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">_init</a>;               </div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">   53</a></span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span>  *<a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">_dataptr</a>;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">   54</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">_filename</a>;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">   55</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">_dir</a>;                </div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">   56</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">_subdir</a>;     </div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">   57</a></span>&#160;      std::string  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">_envvar</a>;     </div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a36b81861b36e935bf0a39dee7745c3ed">   61</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a36b81861b36e935bf0a39dee7745c3ed">OBGlobalDataBase</a>(): _init(false), _dataptr(NULL) { }</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a8556118660d5608e1c18a8e67a93df4c">   63</a></span>&#160;      <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a8556118660d5608e1c18a8e67a93df4c">~OBGlobalDataBase</a>()                  {}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">void</span>  Init();</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">   67</a></span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">GetSize</a>()                 { <span class="keywordflow">return</span> 0;}</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">   69</a></span>&#160;      <span class="keywordtype">void</span>  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">SetReadDirectory</a>(<span class="keywordtype">char</span> *dir)            { _dir = dir;    }</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">   71</a></span>&#160;      <span class="keywordtype">void</span>  <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">SetEnvironmentVariable</a>(<span class="keywordtype">char</span> *var)      { _envvar = var; }</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">   73</a></span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">ParseLine</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*)          {}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    };</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml">   82</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBElement.shtml">OBElement</a></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">int</span> _num;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">char</span> _symbol[4];</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      std::string _name;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">double</span> _Rcov,_Rvdw,_mass,_elNeg,_ARENeg,_ionize,_elAffinity;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">double</span> _red, _green, _blue;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">int</span> _maxbonds;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#adc9911e43430fd65726f393308db7e6e">   92</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBElement.shtml#adc9911e43430fd65726f393308db7e6e">OBElement</a>()    {}</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#aade9292237f46323dd52c6822919a791">  109</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBElement.shtml#aade9292237f46323dd52c6822919a791">OBElement</a>(<span class="keywordtype">int</span> num, <span class="keyword">const</span> <span class="keywordtype">char</span> *sym, <span class="keywordtype">double</span> ARENeg, <span class="keywordtype">double</span> rcov,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordtype">double</span> rvdw, <span class="keywordtype">int</span> maxbo, <span class="keywordtype">double</span> mass, <span class="keywordtype">double</span> elNeg, <span class="keywordtype">double</span> ionize,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordtype">double</span> elAffin, <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel.shtml#a8759fc55507d155f4eb9fa303cfecc59">red</a>, <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel.shtml#ac12598cc2108fbc1e3ba8d1c3c92bb12">green</a>, <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel.shtml#a19b2b376a1bda5b375eca394cff7f129">blue</a>,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                std::string name) :</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        _num(num), _name(name), _Rcov(rcov), _Rvdw(rvdw), _mass(mass),</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        _elNeg(elNeg), _ARENeg(ARENeg), _ionize(ionize), _elAffinity(elAffin),</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        _red(red), _green(green), _blue(blue),</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        _maxbonds(maxbo)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;          strncpy(_symbol, sym, 3); <span class="comment">// Make sure to leave 4th character for null</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a8f31c44517534e1f574a8863b62a3393">  122</a></span>&#160;      <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a8f31c44517534e1f574a8863b62a3393">GetAtomicNum</a>()         {       <span class="keywordflow">return</span>(_num);    }</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a084678724fe2a604272869011725a54f">  124</a></span>&#160;      <span class="keywordtype">char</span> *<a class="code" href="classOpenBabel_1_1OBElement.shtml#a084678724fe2a604272869011725a54f">GetSymbol</a>()          {       <span class="keywordflow">return</span>(_symbol); }</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a75c2e30ac7073faf1846c1d95f10477e">  126</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a75c2e30ac7073faf1846c1d95f10477e">GetCovalentRad</a>()    {       <span class="keywordflow">return</span>(_Rcov);   }</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a7efca557d66da627333df398980c6126">  128</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a7efca557d66da627333df398980c6126">GetVdwRad</a>()         {       <span class="keywordflow">return</span>(_Rvdw);   }</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#ae10e5ef3968d6e55522d0480cea9c660">  130</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#ae10e5ef3968d6e55522d0480cea9c660">GetMass</a>()           {       <span class="keywordflow">return</span>(_mass);   }</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a40026d51ab0e4e95dff002676ccac3b1">  132</a></span>&#160;      <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a40026d51ab0e4e95dff002676ccac3b1">GetMaxBonds</a>()          {       <span class="keywordflow">return</span>(_maxbonds);}</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a79b6be626237d9dba8525e2ed748dd43">  134</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a79b6be626237d9dba8525e2ed748dd43">GetElectroNeg</a>()     {       <span class="keywordflow">return</span>(_elNeg);  }</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a1c07be5f389f4e10159862452c3bba68">  136</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a1c07be5f389f4e10159862452c3bba68">GetAllredRochowElectroNeg</a>() { <span class="keywordflow">return</span>(_ARENeg); }</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a440bfda6981c965bd3064ab806f6e8d2">  138</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a440bfda6981c965bd3064ab806f6e8d2">GetIonization</a>()     {       <span class="keywordflow">return</span>(_ionize);  }</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#aaa8e88b8910a30ae9de3ef9b3aab921c">  140</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#aaa8e88b8910a30ae9de3ef9b3aab921c">GetElectronAffinity</a>(){      <span class="keywordflow">return</span>(_elAffinity);  }</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a8facce7acc5e95194c232b9bbd1363d5">  142</a></span>&#160;      std::string <a class="code" href="classOpenBabel_1_1OBElement.shtml#a8facce7acc5e95194c232b9bbd1363d5">GetName</a>()      {       <span class="keywordflow">return</span>(_name);    }</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a7b09cecd8e93a824444dd769ac756c0f">  144</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a7b09cecd8e93a824444dd769ac756c0f">GetRed</a>()            {       <span class="keywordflow">return</span>(_red);     }</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#ad75a0aa975fc5c2b3228306e590ef399">  146</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#ad75a0aa975fc5c2b3228306e590ef399">GetGreen</a>()          {       <span class="keywordflow">return</span>(_green);   }</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElement.shtml#a9108d11a6d6f06fb9788b2fd10f2e9d0">  148</a></span>&#160;      <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBElement.shtml#a9108d11a6d6f06fb9788b2fd10f2e9d0">GetBlue</a>()           {       <span class="keywordflow">return</span>(_blue);    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    };</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="comment">// class introduction in data.cpp</span></div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElementTable.shtml">  152</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBElementTable.shtml">OBElementTable</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      std::vector&lt;OBElement*&gt; _element;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <a class="code" href="classOpenBabel_1_1OBElementTable.shtml">OBElementTable</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      ~<a class="code" href="classOpenBabel_1_1OBElementTable.shtml">OBElementTable</a>();</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="keywordtype">void</span>  ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>              GetNumberOfElements();</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElementTable.shtml#aab7c531e5ffc5174e57a85e853931534">  166</a></span>&#160;      <span class="keywordtype">size_t</span>    <a class="code" href="classOpenBabel_1_1OBElementTable.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> GetNumberOfElements(); }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordtype">int</span>   GetAtomicNum(<span class="keyword">const</span> <span class="keywordtype">char</span> *);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordtype">int</span>   GetAtomicNum(<span class="keyword">const</span> <span class="keywordtype">char</span> *, <span class="keywordtype">int</span> &amp;iso);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="keywordtype">int</span>   GetAtomicNum(std::string name, <span class="keywordtype">int</span> &amp;iso);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span> *GetSymbol(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      <span class="keywordtype">double</span> GetVdwRad(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      <span class="keywordtype">double</span> GetCovalentRad(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordtype">double</span> GetMass(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <span class="keywordtype">double</span> CorrectedBondRad(<span class="keywordtype">int</span>,<span class="keywordtype">int</span> = 3); <span class="comment">// atomic #, hybridization</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"></span>      <span class="keywordtype">double</span> CorrectedVdwRad(<span class="keywordtype">int</span>,<span class="keywordtype">int</span> = 3); <span class="comment">// atomic #, hybridization</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"></span>      <span class="keywordtype">int</span>       GetMaxBonds(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordtype">double</span> GetElectroNeg(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      <span class="keywordtype">double</span> GetAllredRochowElectroNeg(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordtype">double</span> GetIonization(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordtype">double</span> GetElectronAffinity(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      std::vector&lt;double&gt; GetRGB(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      std::string GetName(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    };</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="comment">// class introduction in data.cpp</span></div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsotopeTable.shtml">  208</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBIsotopeTable.shtml">OBIsotopeTable</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      std::vector&lt;std::vector&lt;std::pair &lt;unsigned int, double&gt; &gt; &gt; _isotopes;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <a class="code" href="classOpenBabel_1_1OBIsotopeTable.shtml">OBIsotopeTable</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsotopeTable.shtml#a509d31ff06b39b2db2a538be6eef77a1">  215</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBIsotopeTable.shtml#a509d31ff06b39b2db2a538be6eef77a1">~OBIsotopeTable</a>()    {}</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBIsotopeTable.shtml#aab7c531e5ffc5174e57a85e853931534">  218</a></span>&#160;      <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBIsotopeTable.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> _isotopes.size(); }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">void</span>      ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordtype">double</span>    GetExactMass(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> atomicNum,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> isotope = 0);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    };</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml">  235</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml">OBAtomHOF</a></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="keyword">private</span>:</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      std::string _element,_method,_desc,_unit;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordtype">double</span> _T,_value;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordtype">int</span> _charge;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordtype">int</span> _multiplicity;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a0c4efd8937d3cd93f360c715d93a9b04">  255</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a0c4efd8937d3cd93f360c715d93a9b04">OBAtomHOF</a>(std::string element,<span class="keywordtype">int</span> charge,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;              std::string method,std::string desc,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;              <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>,<span class="keywordtype">double</span> value,<span class="keywordtype">int</span> multiplicity,</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;              std::string unit)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        _element      = element;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        _charge       = charge;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        _method       = method;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        _desc         = desc;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        _T            = <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        _value        = value;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        _multiplicity = multiplicity;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        _unit         = unit;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#ae5673d7815404bcb484cb2f1dfce0d91">  271</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#ae5673d7815404bcb484cb2f1dfce0d91">~OBAtomHOF</a>() {}</div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a7688a3a7b9a13482694ba86fc48a20eb">  273</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a7688a3a7b9a13482694ba86fc48a20eb">Element</a>() { <span class="keywordflow">return</span> _element; }</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a0f74195bcc89c070de5d82995da7cd15">  275</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a0f74195bcc89c070de5d82995da7cd15">Charge</a>()          { <span class="keywordflow">return</span> _charge; }</div><div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#af7b80e792fbac7a10303596489271db7">  277</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#af7b80e792fbac7a10303596489271db7">Method</a>()  { <span class="keywordflow">return</span> _method; }</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a35728b87e146323874948dac9fbcadbd">  279</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a35728b87e146323874948dac9fbcadbd">Desc</a>()    { <span class="keywordflow">return</span> _desc; }</div><div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#ac9ca5ae9a3c0fb10701a535dab8beefc">  281</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#ac9ca5ae9a3c0fb10701a535dab8beefc">T</a>()            { <span class="keywordflow">return</span> _T; }</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a2d2806afc5e8067368c3eea0ca8eeecf">  283</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a2d2806afc5e8067368c3eea0ca8eeecf">Value</a>()        { <span class="keywordflow">return</span> _value; }</div><div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a684f706b4c9e1bac0a473badab0e65f0">  285</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a684f706b4c9e1bac0a473badab0e65f0">Multiplicity</a>()    { <span class="keywordflow">return</span> _multiplicity; }</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomHOF.shtml#a368fe56caaa9f637c13ea5ef32c21f08">  287</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBAtomHOF.shtml#a368fe56caaa9f637c13ea5ef32c21f08">Unit</a>()    { <span class="keywordflow">return</span> _unit; }</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  };</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">  301</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">OBAtomicHeatOfFormationTable</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    std::vector&lt;OBAtomHOF&gt; _atomhof;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">OBAtomicHeatOfFormationTable</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#a309cb4652c37cc75a9a0bf88067c9593">  309</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#a309cb4652c37cc75a9a0bf88067c9593">~OBAtomicHeatOfFormationTable</a>() {}</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#aab7c531e5ffc5174e57a85e853931534">  312</a></span>&#160;      <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> _atomhof.size(); }</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      <span class="keywordtype">void</span>      ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      <span class="keywordtype">int</span>       GetHeatOfFormation(std::string elem, </div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                               <span class="keywordtype">int</span> charge,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                               std::string method,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                               <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>, <span class="keywordtype">double</span> *dhof0,</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                               <span class="keywordtype">double</span> *dhofT,<span class="keywordtype">double</span> *S0T);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    };</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="comment">// class introduction in data.cpp</span></div><div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTypeTable.shtml">  338</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml">OBTypeTable</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    {</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      <span class="keywordtype">int</span>             _linecount;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>    _ncols,_nrows;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      <span class="keywordtype">int</span>             _from,_to;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      std::vector&lt;std::string&gt; _colnames;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      std::vector&lt;std::vector&lt;std::string&gt; &gt; _table;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;      <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml">OBTypeTable</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTypeTable.shtml#a72cd4a33759982430a7db60c3d392fee">  349</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml#a72cd4a33759982430a7db60c3d392fee">~OBTypeTable</a>() {}</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTypeTable.shtml#aab7c531e5ffc5174e57a85e853931534">  354</a></span>&#160;      <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBTypeTable.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> _table.size(); }</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;      <span class="keywordtype">bool</span> SetFromType(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;      <span class="keywordtype">bool</span> SetToType(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      <span class="keywordtype">bool</span> Translate(<span class="keywordtype">char</span> *to, <span class="keyword">const</span> <span class="keywordtype">char</span> *from); <span class="comment">// to, from</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment"></span>      <span class="keywordtype">bool</span> Translate(std::string &amp;to, <span class="keyword">const</span> std::string &amp;from); <span class="comment">// to, from</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment"></span>      std::string Translate(<span class="keyword">const</span> std::string &amp;from);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;      std::string GetFromType();</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      std::string GetToType();</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    };</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBResidueData.shtml">  380</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBResidueData.shtml">OBResidueData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml">OBGlobalDataBase</a></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      <span class="keywordtype">int</span>                                               _resnum;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      std::vector&lt;std::string&gt;                          _resname;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      std::vector&lt;std::vector&lt;std::string&gt; &gt;            _resatoms;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      std::vector&lt;std::vector&lt;std::pair&lt;std::string,int&gt; &gt; &gt; _resbonds;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      <span class="comment">//variables used only temporarily for parsing resdata.txt</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      std::vector&lt;std::string&gt;                          _vatmtmp;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;      std::vector&lt;std::pair&lt;std::string,int&gt; &gt;          _vtmp;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      <a class="code" href="classOpenBabel_1_1OBResidueData.shtml">OBResidueData</a>();</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;      <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBResidueData.shtml#aab7c531e5ffc5174e57a85e853931534">  396</a></span>&#160;      <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBResidueData.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>() { <span class="keywordflow">return</span> _resname.size(); }</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;      <span class="keywordtype">bool</span> SetResName(<span class="keyword">const</span> std::string &amp;);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;      <span class="keywordtype">int</span>  LookupBO(<span class="keyword">const</span> std::string &amp;);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;      <span class="keywordtype">int</span>  LookupBO(<span class="keyword">const</span> std::string &amp;, <span class="keyword">const</span> std::string&amp;);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;      <span class="keywordtype">bool</span> LookupType(<span class="keyword">const</span> std::string &amp;,std::string&amp;,<span class="keywordtype">int</span>&amp;);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      <span class="keywordtype">bool</span> AssignBonds(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;,<a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    };</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;} <span class="comment">// end namespace OpenBabel</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  </div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="preprocessor">#endif //DATA_H</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBAtomicHeatOfFormationTable_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml">OpenBabel::OBAtomicHeatOfFormationTable</a></div><div class="ttdoc">Atomic Heat of Formation Table. </div><div class="ttdef"><b>Definition:</b> data.h:301</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_ad75a0aa975fc5c2b3228306e590ef399"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#ad75a0aa975fc5c2b3228306e590ef399">OpenBabel::OBElement::GetGreen</a></div><div class="ttdeci">double GetGreen()</div><div class="ttdef"><b>Definition:</b> data.h:146</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a7b09cecd8e93a824444dd769ac756c0f"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a7b09cecd8e93a824444dd769ac756c0f">OpenBabel::OBElement::GetRed</a></div><div class="ttdeci">double GetRed()</div><div class="ttdef"><b>Definition:</b> data.h:144</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBResidueIndex_shtml_a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce"><div class="ttname"><a href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">OpenBabel::OBResidueIndex::T</a></div><div class="ttdef"><b>Definition:</b> residue.h:340</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a1c07be5f389f4e10159862452c3bba68"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a1c07be5f389f4e10159862452c3bba68">OpenBabel::OBElement::GetAllredRochowElectroNeg</a></div><div class="ttdeci">double GetAllredRochowElectroNeg()</div><div class="ttdef"><b>Definition:</b> data.h:136</div></div>
<div class="ttc" id="classOpenBabel_1_1OBResidueData_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBResidueData.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBResidueData::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:396</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_aaa8e88b8910a30ae9de3ef9b3aab921c"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#aaa8e88b8910a30ae9de3ef9b3aab921c">OpenBabel::OBElement::GetElectronAffinity</a></div><div class="ttdeci">double GetElectronAffinity()</div><div class="ttdef"><b>Definition:</b> data.h:140</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a2bd0630d27e20f38de4c753ca68e2282"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">OpenBabel::OBGlobalDataBase::SetEnvironmentVariable</a></div><div class="ttdeci">void SetEnvironmentVariable(char *var)</div><div class="ttdoc">Set the environment variable to use before calling Init() </div><div class="ttdef"><b>Definition:</b> data.h:71</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a440bfda6981c965bd3064ab806f6e8d2"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a440bfda6981c965bd3064ab806f6e8d2">OpenBabel::OBElement::GetIonization</a></div><div class="ttdeci">double GetIonization()</div><div class="ttdef"><b>Definition:</b> data.h:138</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomicHeatOfFormationTable_shtml_a309cb4652c37cc75a9a0bf88067c9593"><div class="ttname"><a href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#a309cb4652c37cc75a9a0bf88067c9593">OpenBabel::OBAtomicHeatOfFormationTable::~OBAtomicHeatOfFormationTable</a></div><div class="ttdeci">~OBAtomicHeatOfFormationTable()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> data.h:309</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_af7b80e792fbac7a10303596489271db7"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#af7b80e792fbac7a10303596489271db7">OpenBabel::OBAtomHOF::Method</a></div><div class="ttdeci">std::string Method()</div><div class="ttdoc">Return the method used for the measurement/calculation. </div><div class="ttdef"><b>Definition:</b> data.h:277</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml">OpenBabel::OBElement</a></div><div class="ttdoc">Individual element data type. </div><div class="ttdef"><b>Definition:</b> data.h:82</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_aade9292237f46323dd52c6822919a791"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#aade9292237f46323dd52c6822919a791">OpenBabel::OBElement::OBElement</a></div><div class="ttdeci">OBElement(int num, const char *sym, double ARENeg, double rcov, double rvdw, int maxbo, double mass, double elNeg, double ionize, double elAffin, double red, double green, double blue, std::string name)</div><div class="ttdef"><b>Definition:</b> data.h:109</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:113</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a0f74195bcc89c070de5d82995da7cd15"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a0f74195bcc89c070de5d82995da7cd15">OpenBabel::OBAtomHOF::Charge</a></div><div class="ttdeci">int Charge()</div><div class="ttdoc">Return the formal charge. </div><div class="ttdef"><b>Definition:</b> data.h:275</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_ae5673d7815404bcb484cb2f1dfce0d91"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#ae5673d7815404bcb484cb2f1dfce0d91">OpenBabel::OBAtomHOF::~OBAtomHOF</a></div><div class="ttdeci">~OBAtomHOF()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> data.h:271</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a36b81861b36e935bf0a39dee7745c3ed"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a36b81861b36e935bf0a39dee7745c3ed">OpenBabel::OBGlobalDataBase::OBGlobalDataBase</a></div><div class="ttdeci">OBGlobalDataBase()</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> data.h:61</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_adc9911e43430fd65726f393308db7e6e"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#adc9911e43430fd65726f393308db7e6e">OpenBabel::OBElement::OBElement</a></div><div class="ttdeci">OBElement()</div><div class="ttdef"><b>Definition:</b> data.h:92</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a8f31c44517534e1f574a8863b62a3393"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a8f31c44517534e1f574a8863b62a3393">OpenBabel::OBElement::GetAtomicNum</a></div><div class="ttdeci">int GetAtomicNum()</div><div class="ttdef"><b>Definition:</b> data.h:122</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a9a84dbfb089769dec48cd6f6eca1057b"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">OpenBabel::OBGlobalDataBase::ParseLine</a></div><div class="ttdeci">virtual void ParseLine(const char *)</div><div class="ttdoc">Specified by particular table classes (parses an individual data line) </div><div class="ttdef"><b>Definition:</b> data.h:73</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a8facce7acc5e95194c232b9bbd1363d5"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a8facce7acc5e95194c232b9bbd1363d5">OpenBabel::OBElement::GetName</a></div><div class="ttdeci">std::string GetName()</div><div class="ttdef"><b>Definition:</b> data.h:142</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a49002f92ad6a1c71d7f9148271770b7a"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">OpenBabel::OBGlobalDataBase::SetReadDirectory</a></div><div class="ttdeci">void SetReadDirectory(char *dir)</div><div class="ttdoc">Set the directory before calling Init() </div><div class="ttdef"><b>Definition:</b> data.h:69</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a79b6be626237d9dba8525e2ed748dd43"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a79b6be626237d9dba8525e2ed748dd43">OpenBabel::OBElement::GetElectroNeg</a></div><div class="ttdeci">double GetElectroNeg()</div><div class="ttdef"><b>Definition:</b> data.h:134</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a5d93159b6eee0cb302451621106f61c7"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">OpenBabel::OBGlobalDataBase::_subdir</a></div><div class="ttdeci">std::string _subdir</div><div class="ttdoc">Subdirectory (if using environment variable) </div><div class="ttdef"><b>Definition:</b> data.h:56</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a19b2b376a1bda5b375eca394cff7f129"><div class="ttname"><a href="namespaceOpenBabel.shtml#a19b2b376a1bda5b375eca394cff7f129">OpenBabel::blue</a></div><div class="ttdeci">static const char * blue</div><div class="ttdef"><b>Definition:</b> isomorphism.cpp:29</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a895aefe990ffe9af66bb5cd4e37d3579"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">OpenBabel::OBGlobalDataBase::_filename</a></div><div class="ttdeci">std::string _filename</div><div class="ttdoc">File to search for. </div><div class="ttdef"><b>Definition:</b> data.h:54</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBitVec_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBitVec.shtml">OpenBabel::OBBitVec</a></div><div class="ttdoc">A speed-optimized vector of bits. </div><div class="ttdef"><b>Definition:</b> bitvec.h:57</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ac12598cc2108fbc1e3ba8d1c3c92bb12"><div class="ttname"><a href="namespaceOpenBabel.shtml#ac12598cc2108fbc1e3ba8d1c3c92bb12">OpenBabel::green</a></div><div class="ttdeci">static const char * green</div><div class="ttdef"><b>Definition:</b> isomorphism.cpp:27</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTypeTable_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBTypeTable.shtml">OpenBabel::OBTypeTable</a></div><div class="ttdoc">Atom Type Translation Table. </div><div class="ttdef"><b>Definition:</b> data.h:338</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a8759fc55507d155f4eb9fa303cfecc59"><div class="ttname"><a href="namespaceOpenBabel.shtml#a8759fc55507d155f4eb9fa303cfecc59">OpenBabel::red</a></div><div class="ttdeci">static const char * red</div><div class="ttdef"><b>Definition:</b> isomorphism.cpp:26</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a7efca557d66da627333df398980c6126"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a7efca557d66da627333df398980c6126">OpenBabel::OBElement::GetVdwRad</a></div><div class="ttdeci">double GetVdwRad()</div><div class="ttdef"><b>Definition:</b> data.h:128</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a368fe56caaa9f637c13ea5ef32c21f08"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a368fe56caaa9f637c13ea5ef32c21f08">OpenBabel::OBAtomHOF::Unit</a></div><div class="ttdeci">std::string Unit()</div><div class="ttdoc">Return the (energy) unit. </div><div class="ttdef"><b>Definition:</b> data.h:287</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTypeTable_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBTypeTable.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBTypeTable::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:354</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a8556118660d5608e1c18a8e67a93df4c"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a8556118660d5608e1c18a8e67a93df4c">OpenBabel::OBGlobalDataBase::~OBGlobalDataBase</a></div><div class="ttdeci">virtual ~OBGlobalDataBase()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> data.h:63</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsotopeTable_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBIsotopeTable.shtml">OpenBabel::OBIsotopeTable</a></div><div class="ttdoc">Table of atomic isotope masses. </div><div class="ttdef"><b>Definition:</b> data.h:208</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElementTable_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBElementTable.shtml">OpenBabel::OBElementTable</a></div><div class="ttdoc">Periodic Table of the Elements. </div><div class="ttdef"><b>Definition:</b> data.h:152</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a75c2e30ac7073faf1846c1d95f10477e"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a75c2e30ac7073faf1846c1d95f10477e">OpenBabel::OBElement::GetCovalentRad</a></div><div class="ttdeci">double GetCovalentRad()</div><div class="ttdef"><b>Definition:</b> data.h:126</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTypeTable_shtml_a72cd4a33759982430a7db60c3d392fee"><div class="ttname"><a href="classOpenBabel_1_1OBTypeTable.shtml#a72cd4a33759982430a7db60c3d392fee">OpenBabel::OBTypeTable::~OBTypeTable</a></div><div class="ttdeci">~OBTypeTable()</div><div class="ttdef"><b>Definition:</b> data.h:349</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a40756214f69d1c40ad70b64ae9fdc08d"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">OpenBabel::OBGlobalDataBase::_init</a></div><div class="ttdeci">bool _init</div><div class="ttdoc">Whether the data been read already. </div><div class="ttdef"><b>Definition:</b> data.h:52</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a40026d51ab0e4e95dff002676ccac3b1"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a40026d51ab0e4e95dff002676ccac3b1">OpenBabel::OBElement::GetMaxBonds</a></div><div class="ttdeci">int GetMaxBonds()</div><div class="ttdef"><b>Definition:</b> data.h:132</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomicHeatOfFormationTable_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBAtomicHeatOfFormationTable.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBAtomicHeatOfFormationTable::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:312</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a45a08560f2b4885250c586c550f2d7af"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">OpenBabel::OBGlobalDataBase::_dataptr</a></div><div class="ttdeci">const char * _dataptr</div><div class="ttdoc">Default data table if file is unreadable. </div><div class="ttdef"><b>Definition:</b> data.h:53</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a35728b87e146323874948dac9fbcadbd"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a35728b87e146323874948dac9fbcadbd">OpenBabel::OBAtomHOF::Desc</a></div><div class="ttdeci">std::string Desc()</div><div class="ttdoc">Return specification of the measurement/calculation type. </div><div class="ttdef"><b>Definition:</b> data.h:279</div></div>
<div class="ttc" id="classOpenBabel_1_1OBResidueData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBResidueData.shtml">OpenBabel::OBResidueData</a></div><div class="ttdoc">Table of common biomolecule residues (for PDB or other files). </div><div class="ttdef"><b>Definition:</b> data.h:380</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a084678724fe2a604272869011725a54f"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a084678724fe2a604272869011725a54f">OpenBabel::OBElement::GetSymbol</a></div><div class="ttdeci">char * GetSymbol()</div><div class="ttdef"><b>Definition:</b> data.h:124</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_ae10e5ef3968d6e55522d0480cea9c660"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#ae10e5ef3968d6e55522d0480cea9c660">OpenBabel::OBElement::GetMass</a></div><div class="ttdeci">double GetMass()</div><div class="ttdef"><b>Definition:</b> data.h:130</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsotopeTable_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBIsotopeTable.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBIsotopeTable::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:218</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a2c2f62a9907553e5feb1ecef65c6c386"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">OpenBabel::OBGlobalDataBase::_dir</a></div><div class="ttdeci">std::string _dir</div><div class="ttdoc">Data directory for file if _envvar fails. </div><div class="ttdef"><b>Definition:</b> data.h:55</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a87d06c3aed77fb9e118b337bed557928"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">OpenBabel::OBGlobalDataBase::_envvar</a></div><div class="ttdeci">std::string _envvar</div><div class="ttdoc">Environment variable to check first. </div><div class="ttdef"><b>Definition:</b> data.h:57</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElement_shtml_a9108d11a6d6f06fb9788b2fd10f2e9d0"><div class="ttname"><a href="classOpenBabel_1_1OBElement.shtml#a9108d11a6d6f06fb9788b2fd10f2e9d0">OpenBabel::OBElement::GetBlue</a></div><div class="ttdeci">double GetBlue()</div><div class="ttdef"><b>Definition:</b> data.h:148</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_ac9ca5ae9a3c0fb10701a535dab8beefc"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#ac9ca5ae9a3c0fb10701a535dab8beefc">OpenBabel::OBAtomHOF::T</a></div><div class="ttdeci">double T()</div><div class="ttdoc">Return the temperature. </div><div class="ttdef"><b>Definition:</b> data.h:281</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml_a5ebfe2dd02a8ba2b7e84f1f6d55c74cd"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">OpenBabel::OBGlobalDataBase::GetSize</a></div><div class="ttdeci">virtual size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:67</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElementTable_shtml_aab7c531e5ffc5174e57a85e853931534"><div class="ttname"><a href="classOpenBabel_1_1OBElementTable.shtml#aab7c531e5ffc5174e57a85e853931534">OpenBabel::OBElementTable::GetSize</a></div><div class="ttdeci">size_t GetSize()</div><div class="ttdef"><b>Definition:</b> data.h:166</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml">OpenBabel::OBAtomHOF</a></div><div class="ttdoc">helper class for OBAtomicHeatOfFormationTable </div><div class="ttdef"><b>Definition:</b> data.h:235</div></div>
<div class="ttc" id="classOpenBabel_1_1OBIsotopeTable_shtml_a509d31ff06b39b2db2a538be6eef77a1"><div class="ttname"><a href="classOpenBabel_1_1OBIsotopeTable.shtml#a509d31ff06b39b2db2a538be6eef77a1">OpenBabel::OBIsotopeTable::~OBIsotopeTable</a></div><div class="ttdeci">~OBIsotopeTable()</div><div class="ttdef"><b>Definition:</b> data.h:215</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a684f706b4c9e1bac0a473badab0e65f0"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a684f706b4c9e1bac0a473badab0e65f0">OpenBabel::OBAtomHOF::Multiplicity</a></div><div class="ttdeci">int Multiplicity()</div><div class="ttdoc">Return the multiplicity. </div><div class="ttdef"><b>Definition:</b> data.h:285</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a2d2806afc5e8067368c3eea0ca8eeecf"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a2d2806afc5e8067368c3eea0ca8eeecf">OpenBabel::OBAtomHOF::Value</a></div><div class="ttdeci">double Value()</div><div class="ttdoc">Return the (energy) value. </div><div class="ttdef"><b>Definition:</b> data.h:283</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a0c4efd8937d3cd93f360c715d93a9b04"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a0c4efd8937d3cd93f360c715d93a9b04">OpenBabel::OBAtomHOF::OBAtomHOF</a></div><div class="ttdeci">OBAtomHOF(std::string element, int charge, std::string method, std::string desc, double T, double value, int multiplicity, std::string unit)</div><div class="ttdoc">Initialize Heat of Formation for atom. </div><div class="ttdef"><b>Definition:</b> data.h:255</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGlobalDataBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGlobalDataBase.shtml">OpenBabel::OBGlobalDataBase</a></div><div class="ttdoc">Base data table class, handles reading data files. </div><div class="ttdef"><b>Definition:</b> data.h:49</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtomHOF_shtml_a7688a3a7b9a13482694ba86fc48a20eb"><div class="ttname"><a href="classOpenBabel_1_1OBAtomHOF.shtml#a7688a3a7b9a13482694ba86fc48a20eb">OpenBabel::OBAtomHOF::Element</a></div><div class="ttdeci">std::string Element()</div><div class="ttdoc">Return the chemical element. </div><div class="ttdef"><b>Definition:</b> data.h:273</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
