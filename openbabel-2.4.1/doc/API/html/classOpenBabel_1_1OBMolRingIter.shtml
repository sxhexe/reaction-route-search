<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBMolRingIter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1OBMolRingIter-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBMolRingIter Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="obiter_8h_source.shtml">openbabel/obiter.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4201ae784613cc343f4c85aff073f8b6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a4201ae784613cc343f4c85aff073f8b6">OBMolRingIter</a> ()</td></tr>
<tr class="separator:a4201ae784613cc343f4c85aff073f8b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15547553c4072355819acbcf350dde77"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a15547553c4072355819acbcf350dde77">OBMolRingIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol)</td></tr>
<tr class="separator:a15547553c4072355819acbcf350dde77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22b44f56d902ee546801e1ed709177a7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a22b44f56d902ee546801e1ed709177a7">OBMolRingIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:a22b44f56d902ee546801e1ed709177a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fbba8ac448491d75c01dc700ab9abbb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a5fbba8ac448491d75c01dc700ab9abbb">OBMolRingIter</a> (const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;ri)</td></tr>
<tr class="separator:a5fbba8ac448491d75c01dc700ab9abbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d382621222fab3106bbf62d88d12c16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a1d382621222fab3106bbf62d88d12c16">~OBMolRingIter</a> ()</td></tr>
<tr class="separator:a1d382621222fab3106bbf62d88d12c16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa55f07012153c6567722fd73b52c7ae8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#aa55f07012153c6567722fd73b52c7ae8">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;ri)</td></tr>
<tr class="separator:aa55f07012153c6567722fd73b52c7ae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b76affb3b5d35fa419ac234144038b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a67b76affb3b5d35fa419ac234144038b">operator bool</a> () const</td></tr>
<tr class="separator:a67b76affb3b5d35fa419ac234144038b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a468d7175593dfa1d0bf6b21d17102611"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a468d7175593dfa1d0bf6b21d17102611">operator++</a> ()</td></tr>
<tr class="separator:a468d7175593dfa1d0bf6b21d17102611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a844ba4085c67152f80a56529ff358a46"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a844ba4085c67152f80a56529ff358a46">operator++</a> (int)</td></tr>
<tr class="separator:a844ba4085c67152f80a56529ff358a46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af19aafb1ac310e24268489943d2b396c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#af19aafb1ac310e24268489943d2b396c">operator-&gt;</a> () const</td></tr>
<tr class="separator:af19aafb1ac310e24268489943d2b396c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac317fc2b4760f26e505cae63ef43d721"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#ac317fc2b4760f26e505cae63ef43d721">operator*</a> () const</td></tr>
<tr class="separator:ac317fc2b4760f26e505cae63ef43d721"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Iterate over all rings in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>. </p>
<dl class="section since"><dt>Since</dt><dd>version 2.1</dd></dl>
<p>To facilitate iteration through all rings in a molecule, without resorting to ring indexes (which may change in the future) a variety of iterator classes and methods are provided. One word of warning is that these iterator methods automatically call <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477" title="Find Smallest Set of Smallest Rings (see OBRing class for more details) ">OBMol::FindSSSR()</a> which may involve a significant performance hit on large molecules.</p>
<p>Calling iterator classes has been made significantly easier by a series of macros in the <a class="el" href="obiter_8h.shtml" title="STL-style iterators for Open Babel. ">obiter.h</a> header file:</p>
<div class="fragment"><div class="line">\#define <a class="code" href="obiter_8h.shtml#a9205e106e30c7af1cafcca57d52c7692">FOR_RINGS_OF_MOL</a>(r,m)     for( <a class="code" href="classOpenBabel_1_1OBMolRingIter.shtml#a4201ae784613cc343f4c85aff073f8b6">OBMolRingIter</a>     r(m); r; ++r )</div></div><!-- fragment --><p>Here is an example: </p><div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="obiter_8h.shtml">openbabel/obiter.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"></div><div class="line"><a class="code" href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a> mol;</div><div class="line"><a class="code" href="obiter_8h.shtml#a9205e106e30c7af1cafcca57d52c7692">FOR_RINGS_OF_MOL</a>(r, mol)</div><div class="line">{</div><div class="line">   <span class="comment">// The variable r behaves like OBRing* when used with -&gt; and * but</span></div><div class="line">   <span class="comment">// but needs to be explicitly converted when appearing as a parameter</span></div><div class="line">   <span class="comment">// in a function call - use &amp;*r</span></div><div class="line"></div><div class="line">}</div></div><!-- fragment --> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4201ae784613cc343f4c85aff073f8b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4201ae784613cc343f4c85aff073f8b6">&sect;&nbsp;</a></span>OBMolRingIter() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a15547553c4072355819acbcf350dde77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15547553c4072355819acbcf350dde77">&sect;&nbsp;</a></span>OBMolRingIter() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a22b44f56d902ee546801e1ed709177a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22b44f56d902ee546801e1ed709177a7">&sect;&nbsp;</a></span>OBMolRingIter() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5fbba8ac448491d75c01dc700ab9abbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fbba8ac448491d75c01dc700ab9abbb">&sect;&nbsp;</a></span>OBMolRingIter() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&#160;</td>
          <td class="paramname"><em>ri</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d382621222fab3106bbf62d88d12c16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d382621222fab3106bbf62d88d12c16">&sect;&nbsp;</a></span>~OBMolRingIter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa55f07012153c6567722fd73b52c7ae8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa55f07012153c6567722fd73b52c7ae8">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp;&#160;</td>
          <td class="paramname"><em>ri</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a67b76affb3b5d35fa419ac234144038b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67b76affb3b5d35fa419ac234144038b">&sect;&nbsp;</a></span>operator bool()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether the iterator can advance (i.e., there are more rings) </dd></dl>

</div>
</div>
<a id="a468d7175593dfa1d0bf6b21d17102611"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a468d7175593dfa1d0bf6b21d17102611">&sect;&nbsp;</a></span>operator++() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> &amp; operator++ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Preincrement &ndash; advance to the next ring (if any) and return. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a844ba4085c67152f80a56529ff358a46">OBMolRingIter::operator++()</a>.</p>

</div>
</div>
<a id="a844ba4085c67152f80a56529ff358a46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a844ba4085c67152f80a56529ff358a46">&sect;&nbsp;</a></span>operator++() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml">OBMolRingIter</a> operator++ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Postincrement &ndash; return the current state and advance to the next ring. </p>

</div>
</div>
<a id="af19aafb1ac310e24268489943d2b396c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af19aafb1ac310e24268489943d2b396c">&sect;&nbsp;</a></span>operator->()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>* operator-&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A pointer to the current ring (if any) </dd></dl>

</div>
</div>
<a id="ac317fc2b4760f26e505cae63ef43d721"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac317fc2b4760f26e505cae63ef43d721">&sect;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>&amp; operator* </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A reference to the current ring (if any) </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="obiter_8h_source.shtml">obiter.h</a></li>
<li><a class="el" href="obiter_8cpp.shtml">obiter.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
