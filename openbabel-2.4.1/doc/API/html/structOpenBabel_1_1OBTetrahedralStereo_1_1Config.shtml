<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBTetrahedralStereo::Config Struct Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBTetrahedralStereo.shtml">OBTetrahedralStereo</a></li><li class="navelem"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBTetrahedralStereo::Config Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="tetrahedral_8h_source.shtml">openbabel/stereo/tetrahedral.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a539a941e29cde8d13e413c515d9801cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a539a941e29cde8d13e413c515d9801cd">Config</a> ()</td></tr>
<tr class="separator:a539a941e29cde8d13e413c515d9801cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1410755ad2d5b4c0f3a6b9f0c9f04789"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a1410755ad2d5b4c0f3a6b9f0c9f04789">Config</a> (unsigned long _center, unsigned long from_or_towards, const <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;_refs, <a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> _winding=<a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31adc82829d52b935bb1ba087f98f44dac7">OBStereo::Clockwise</a>, <a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> _view=<a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7ad67cd67454910029af59ecf137366d0e">OBStereo::ViewFrom</a>)</td></tr>
<tr class="separator:a1410755ad2d5b4c0f3a6b9f0c9f04789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a853e5ab6d10ba2fadd20f7463f3323b5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a853e5ab6d10ba2fadd20f7463f3323b5">operator==</a> (const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;other) const</td></tr>
<tr class="separator:a853e5ab6d10ba2fadd20f7463f3323b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91ab02a035905b00f8d490818067dce7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a91ab02a035905b00f8d490818067dce7">operator!=</a> (const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;other) const</td></tr>
<tr class="separator:a91ab02a035905b00f8d490818067dce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a3237fb5e8bbcbececce85cb5d85195b6"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a></td></tr>
<tr class="separator:a3237fb5e8bbcbececce85cb5d85195b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa88a28c7375e3d579bb0c28ef8a1cb57"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#aa88a28c7375e3d579bb0c28ef8a1cb57">towards</a></td></tr>
<tr class="separator:aa88a28c7375e3d579bb0c28ef8a1cb57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Data members defining stereochemistry.</div></td></tr>
<tr class="memitem:a822b3ed2ceea391277903da02d1fd0a2"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a></td></tr>
<tr class="separator:a822b3ed2ceea391277903da02d1fd0a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7efe28eea394ed7142369e3d45126a9"><td class="memItemLeft" >union {</td></tr>
<tr class="memitem:a3237fb5e8bbcbececce85cb5d85195b6"><td class="memItemLeft" >&#160;&#160;&#160;unsigned long&#160;&#160;&#160;<a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a></td></tr>
<tr class="separator:a3237fb5e8bbcbececce85cb5d85195b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa88a28c7375e3d579bb0c28ef8a1cb57"><td class="memItemLeft" >&#160;&#160;&#160;unsigned long&#160;&#160;&#160;<a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#aa88a28c7375e3d579bb0c28ef8a1cb57">towards</a></td></tr>
<tr class="separator:aa88a28c7375e3d579bb0c28ef8a1cb57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7efe28eea394ed7142369e3d45126a9"><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:ab7efe28eea394ed7142369e3d45126a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e3f2a8fefc9f694040bbb8685cb61e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a></td></tr>
<tr class="separator:a3e3f2a8fefc9f694040bbb8685cb61e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ea32436f7428861ff7d4543570f4451"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a></td></tr>
<tr class="separator:a4ea32436f7428861ff7d4543570f4451"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a41b22504236f1bc6908201a3289184"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3a41b22504236f1bc6908201a3289184">view</a></td></tr>
<tr class="separator:a3a41b22504236f1bc6908201a3289184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad137707f900f599f5f403d9639e2aec3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a></td></tr>
<tr class="separator:ad137707f900f599f5f403d9639e2aec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Stereochemical configuration for tetrahedral stereocenters. </p>
<p>The config struct represents the stereochemistry in a well defined way. For tetrahedral stereo centers, the following data members define the special orientation of the atoms:</p>
<ul>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> <code>center:</code> Atom id of the stereogenic center atom.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> <code>from/towards</code>: Atom id (or <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a>) for the atom to view from/towards.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <code>refs:</code> The three remaining atom ids (may also contain one <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da7295d9aeb6e0e6f3a5b77aa0ce7ed0db" title="No Ref set (invalid Ref) ">OBStereo::NoRef</a> element if from/towards is set to a real atom id).</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> <code>view:</code> Specify the viewing from or towards the atom with <code>from/towards</code> id.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> <code>winding:</code> Clockwise or AntiClockwise (order in the Refs <code>refs</code> list)</li>
</ul>
<div class="image">
<img src="tetrahedral.png" alt="tetrahedral.png"/>
</div>
<p>Only <code>center</code> is specific for <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">OBTetrahedralStereo::Config</a>. The other data members occur in all <a class="el" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml" title="Base class for handling and storing non-planar stereochemistry with 4 reference atom ids...">OBTetraNonPlanarStereo</a> derived classes. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a539a941e29cde8d13e413c515d9801cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a539a941e29cde8d13e413c515d9801cd">&sect;&nbsp;</a></span>Config() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default constructor. Initializes the <code>from/torards</code> and <code>center</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da7295d9aeb6e0e6f3a5b77aa0ce7ed0db" title="No Ref set (invalid Ref) ">OBStereo::NoRef</a>, the <code>winding</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31adc82829d52b935bb1ba087f98f44dac7" title="Clockwise winding. ">OBStereo::Clockwise</a> and <code>view</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7ad67cd67454910029af59ecf137366d0e" title="view from the atom (id parameter) towards the center atom ">OBStereo::ViewFrom</a>. </p>

</div>
</div>
<a id="a1410755ad2d5b4c0f3a6b9f0c9f04789"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1410755ad2d5b4c0f3a6b9f0c9f04789">&sect;&nbsp;</a></span>Config() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>_center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>from_or_towards</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;&#160;</td>
          <td class="paramname"><em>_refs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a>&#160;</td>
          <td class="paramname"><em>_winding</em> = <code><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31adc82829d52b935bb1ba087f98f44dac7">OBStereo::Clockwise</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a>&#160;</td>
          <td class="paramname"><em>_view</em> = <code><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7ad67cd67454910029af59ecf137366d0e">OBStereo::ViewFrom</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor with all parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">_center</td><td>The center (chiral) atom id. </td></tr>
    <tr><td class="paramname">from_or_towards</td><td>The atom id from which to view or view towards (see <code>view</code>). </td></tr>
    <tr><td class="paramname">_refs</td><td>The 3 reference ids. </td></tr>
    <tr><td class="paramname">_winding</td><td>The winding for the 3 ids in <code>_refs</code>. </td></tr>
    <tr><td class="paramname">_view</td><td>Specify viewing from or towards the atom with <code>from_or_towards</code> id. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a853e5ab6d10ba2fadd20f7463f3323b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a853e5ab6d10ba2fadd20f7463f3323b5">&sect;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equal to operator. Comparing <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">OBTetrahedralStereo::Config</a> structs is done using the information stored in the struct's data members (i.e. <code>view</code>, <code>winding</code>, <code>from/towards</code> and <code>refs</code>).</p>
<p>There are a number of cases resuling in false being returned:</p><ul>
<li>The centers don't match.</li>
<li>One of the Refs lists does not contain 3 elements.</li>
<li>2 or more <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a> values in a single <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">Config</a> struct</li>
</ul>
<p>When either <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">Config</a> struct is unspecified (i.e. the stereochemistry implied is accidental), true is returned.</p>
<p>It doesn't matter if the two <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">Config</a> structs use the same view, same from/towards Ref or the same winding. All needed conversions will be carried out automatically (see OBTetraNonPlanerStereo::ToConfig). These conversions ensure the spacial orientation of the 4 groups remains unchanged.</p>
<p>Another key feature is the ability to comapre <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">Config</a> structs regardless of implicit (<a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a>) or explicit hydrogens. This is best illustrated with some examples. In these examples the same ref has already been selected as from/towards atom and both use the same winding and view direction. We will focus on how the three remaining refs are interpreted.</p>
<pre class="fragment">  234 == 234 // true
  2H4 == 234 // 3 is missing, must be the implicit --&gt; 234 == 234 // true
  2H4 == 243 // same as above, but now 234 == 243 // false
  234 == H34 // 2 is missing, must be implicit --&gt; 234 == 234 // true
</pre><p>By comparing the second and third example above, it can be clearly seen that the value of 1 Ref can actually be ignored. It's position in the sequence (or the winding) is defined by the two explicit Ref values.</p>
<dl class="section return"><dt>Returns</dt><dd>True if both <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">Config</a> structs represent the same stereochemistry. </dd></dl>

</div>
</div>
<a id="a91ab02a035905b00f8d490818067dce7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91ab02a035905b00f8d490818067dce7">&sect;&nbsp;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Not equal to operator. This is the inverse of the Equal to operator==.</p>
<dl class="section return"><dt>Returns</dt><dd>True if the two <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters. ">Config</a> structs represent a different stereochemistry. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a822b3ed2ceea391277903da02d1fd0a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a822b3ed2ceea391277903da02d1fd0a2">&sect;&nbsp;</a></span>center</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long center</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">OBTetrahedralConfig::Convert()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="a3237fb5e8bbcbececce85cb5d85195b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3237fb5e8bbcbececce85cb5d85195b6">&sect;&nbsp;</a></span>from</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long from</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">OBTetrahedralConfig::Convert()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>, and <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a1b196e01d93eb74fb83afbc4bc6ca548">OBTetrahedralConfig::operator==()</a>.</p>

</div>
</div>
<a id="aa88a28c7375e3d579bb0c28ef8a1cb57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa88a28c7375e3d579bb0c28ef8a1cb57">&sect;&nbsp;</a></span>towards</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long towards</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab7efe28eea394ed7142369e3d45126a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7efe28eea394ed7142369e3d45126a9">&sect;&nbsp;</a></span>@16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union { ... } </td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This anonymous union helps to keep code clean. Both the <code>from</code> and <code>towards</code> data members contain the same <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> (same memory address) but can be used interchangeably to match the context of the code. The real viewing direction is specified by the <code>view</code> data member. </p>

</div>
</div>
<a id="a3e3f2a8fefc9f694040bbb8685cb61e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e3f2a8fefc9f694040bbb8685cb61e1">&sect;&nbsp;</a></span>refs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> refs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The 3 reference ids. </p>

<p>Referenced by <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">OBTetrahedralConfig::Convert()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>, and <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a1b196e01d93eb74fb83afbc4bc6ca548">OBTetrahedralConfig::operator==()</a>.</p>

</div>
</div>
<a id="a4ea32436f7428861ff7d4543570f4451"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ea32436f7428861ff7d4543570f4451">&sect;&nbsp;</a></span>winding</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> winding</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">OBTetrahedralConfig::Convert()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a id="a3a41b22504236f1bc6908201a3289184"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a41b22504236f1bc6908201a3289184">&sect;&nbsp;</a></span>view</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> view</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specify viewing from or towards the atom with <code>from/towards</code> id. </p>

<p>Referenced by <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">OBTetrahedralConfig::Convert()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a id="ad137707f900f599f5f403d9639e2aec3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad137707f900f599f5f403d9639e2aec3">&sect;&nbsp;</a></span>specified</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool specified</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>True if the stereochemistry is specified. When false, the described special orientation is only accidental (i.e. unspecified). </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">OBTetrahedralConfig::Convert()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="tetrahedral_8h_source.shtml">tetrahedral.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
