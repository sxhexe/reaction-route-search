<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>base.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">base.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="base_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">base.h - Base class for OpenBabel objects</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_BASE_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_BASE_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="tokenst_8h.shtml">openbabel/tokenst.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#ifdef UNUSED</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#elif (__GNUC__ == 4)</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor"># define UNUSED(x) UNUSED_ ## x __attribute__((unused))</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#elif defined(__LCLINT__)</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"># define UNUSED(x) </span><span class="comment">/*@unused@*/</span><span class="preprocessor"> x</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"># define UNUSED(x) x</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="comment">//Forward declaration of the base class for OBMol OBReaction, OBAtom, etc.</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="comment">//Declaration later in this file.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">class </span>OBBase;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">class </span>OBConversion; <span class="comment">//used only as pointer</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  OBAPI std::string <a class="code" href="namespaceOpenBabel.shtml#a456fbf388c19a1a63a95fe60d28dd869">OBReleaseVersion</a>();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml">   62</a></span>&#160;  <span class="keyword">namespace </span>OBGenericDataType</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">enum</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e">   67</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e">UndefinedData</a> =      0,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a">   70</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a">PairData</a>      =      1,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baed27589416d0d35119923437b476c33c">   73</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baed27589416d0d35119923437b476c33c">EnergyData</a>    =      2,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad015d8b14f8fa9e2c8107ec0b6d637a2">   76</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad015d8b14f8fa9e2c8107ec0b6d637a2">CommentData</a>   =      3,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baa8504383b864769bce6f9962ff55711c">   79</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baa8504383b864769bce6f9962ff55711c">ConformerData</a> =      4,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55babbdeac68debaebaea148a0f2271c8128">   82</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55babbdeac68debaebaea148a0f2271c8128">ExternalBondData</a> =   5,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba6792a664f1614a75f33128e139392ef1">   85</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba6792a664f1614a75f33128e139392ef1">RotamerList</a> =        6,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba71d63bc919dfc9800e9e274301882557">   88</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba71d63bc919dfc9800e9e274301882557">VirtualBondData</a> =    7,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba614fe63c6aaa519336589c0b3dcbcdb9">   91</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba614fe63c6aaa519336589c0b3dcbcdb9">RingData</a> =           8,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba9cf293f0b1ed83d3b1b804ca947ddcd8">   94</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba9cf293f0b1ed83d3b1b804ca947ddcd8">TorsionData</a> =        9,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba99b8d17f7ee6c09b008ab6bf5b5bf0cc">   97</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba99b8d17f7ee6c09b008ab6bf5b5bf0cc">AngleData</a> =         10,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00">  100</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00">SerialNums</a> =        11,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba26d8504c2596c9ef59dab47c01a4dd1b">  103</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba26d8504c2596c9ef59dab47c01a4dd1b">UnitCell</a> =          12,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab44db07941815c91fbc8e01f66252208">  106</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab44db07941815c91fbc8e01f66252208">SpinData</a> =          13,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bae1fbcef5ed6d30c670148af84890d0af">  109</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bae1fbcef5ed6d30c670148af84890d0af">ChargeData</a> =        14,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2ed92f76270c3218036e96ad1044301d">  112</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2ed92f76270c3218036e96ad1044301d">SymmetryData</a> =      15,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baab3b5ad7023167aa297c4c555c10acdd">  115</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baab3b5ad7023167aa297c4c555c10acdd">ChiralData</a> =        16,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baac4fd2f8c1bedfe2d09c303e9c1b8e0a">  118</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baac4fd2f8c1bedfe2d09c303e9c1b8e0a">OccupationData</a> =    17,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba5b0d37c5cdfbcc15ee852b769c25d1b7">  121</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba5b0d37c5cdfbcc15ee852b769c25d1b7">DensityData</a> =       18,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2">  124</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2">ElectronicData</a> =    19,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2">  127</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2">VibrationData</a> =     20,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899">  130</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899">RotationData</a> =      21,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55badd3a99a5a7d554d150d7241368f2ba1d">  133</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55badd3a99a5a7d554d150d7241368f2ba1d">NuclearData</a> =       22,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">  136</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a> =           23,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d">  139</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d">GridData</a> =          24,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9">  142</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9">VectorData</a> =        25,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe">  145</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe">MatrixData</a> =        26,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3f9974bdbccde7c26064d7ec21d570ef">  148</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3f9974bdbccde7c26064d7ec21d570ef">StereoData</a> =        27,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a">  151</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a">DOSData</a> =           28,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8">  154</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8">ElectronicTransitionData</a> = 29,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="comment">// space for up to 2^14 more entries...</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad4a188d7201f00f99ec649edead73c1e">  159</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad4a188d7201f00f99ec649edead73c1e">CustomData0</a> = 16384,</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7bd8533c833569ccbd4a701378ccffb7">  160</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7bd8533c833569ccbd4a701378ccffb7">CustomData1</a> = 16385,</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7be53c3112d0111bbbee98cefbac4850">  161</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7be53c3112d0111bbbee98cefbac4850">CustomData2</a> = 16386,</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba012e8681e30646e38989b9a0f6ace98f">  162</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba012e8681e30646e38989b9a0f6ace98f">CustomData3</a> = 16387,</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba342cb4110346a130dc73e4e3491533de">  163</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba342cb4110346a130dc73e4e3491533de">CustomData4</a> = 16388,</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf20627567e8d1835670ff531d5cb9d1a">  164</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf20627567e8d1835670ff531d5cb9d1a">CustomData5</a> = 16389,</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4c2040d0daf33eff43588933be9150a7">  165</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4c2040d0daf33eff43588933be9150a7">CustomData6</a> = 16390,</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba40d766aa8e0726ef56b99986ec4d275d">  166</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba40d766aa8e0726ef56b99986ec4d275d">CustomData7</a> = 16391,</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab32f4336d6de7ee7fdf6557bcd9b01c4">  167</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab32f4336d6de7ee7fdf6557bcd9b01c4">CustomData8</a> = 16392,</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4a0f2b355a4e2d24d617f2824c165a61">  168</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4a0f2b355a4e2d24d617f2824c165a61">CustomData9</a> = 16393,</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba240964387d336b8321d240044762c8e6">  169</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba240964387d336b8321d240044762c8e6">CustomData10</a> = 16394,</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba806a44c47ce81d45527562fca2917d0f">  170</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba806a44c47ce81d45527562fca2917d0f">CustomData11</a> = 16395,</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3b6e862da975578f9b8f2a5cef18935c">  171</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3b6e862da975578f9b8f2a5cef18935c">CustomData12</a> = 16396,</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bafe6b84e76821b52a2eb5f3a761dc8c6a">  172</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bafe6b84e76821b52a2eb5f3a761dc8c6a">CustomData13</a> = 16397,</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3cbbbad42fbfe9766b0892ccc88b47c5">  173</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3cbbbad42fbfe9766b0892ccc88b47c5">CustomData14</a> = 16398,</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8051d4056f7d8a89233dfa0ebc949bc1">  174</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8051d4056f7d8a89233dfa0ebc949bc1">CustomData15</a> = 16399</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    };</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  } <span class="comment">// end namespace</span></div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">  177</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> {</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048">  178</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048">any</a>,                 </div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a887e83e320499ec89236722bbdf56f50">  179</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a887e83e320499ec89236722bbdf56f50">fileformatInput</a>,     </div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a928a3db32b4975c3d42d0ca5d8d9f44d">  180</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a928a3db32b4975c3d42d0ca5d8d9f44d">userInput</a>,           </div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14ab1c8706dce6832c9ce173260ba2bf392">  181</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14ab1c8706dce6832c9ce173260ba2bf392">perceived</a>,           </div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a6aef01ed9b1c198e6944f87e370f00b2">  182</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a6aef01ed9b1c198e6944f87e370f00b2">external</a>,            </div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a140dc6ce49ef5aee319af1854c3dad23">  183</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a140dc6ce49ef5aee319af1854c3dad23">local</a>                </div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  };</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="comment">// Class introduction in generic.cpp</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="comment">// This base class declaration  has no dependence on mol.h</span></div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml">  189</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">  192</a></span>&#160;    std::string  <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a>;  </div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">  193</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a>;  </div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">  194</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>   <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="keyword">const</span> std::string attr = <span class="stringliteral">&quot;undefined&quot;</span>,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type =  <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e">OBGenericDataType::UndefinedData</a>,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                  <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source = <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048">any</a>);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">//Use default copy constructor and assignment operators</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="comment">//OBGenericData(const OBGenericData&amp;);</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">/* Virtual constructors added. see</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">       http://www.parashift.com/c++-faq-lite/abcs.html#faq-22.5</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">       to allow copying given only a base class OBGenericData pointer.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">       It may be necessary to cast the return pointer to the derived class</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">       type, since we are doing without Covariant Return Types</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">       http://www.parashift.com/c++-faq-lite/virtual-functions.html#faq-20.8</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">       A derived class may return NULL if copying is inappropriate */</span></div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  210</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keyword">    </span>{ <span class="keywordflow">return</span> NULL; }</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#acb834533508953a264ed93b74fddad8d">  212</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#acb834533508953a264ed93b74fddad8d">~OBGenericData</a>()    {}</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="comment">//Use default copy constructor and assignment operators</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="comment">//OBGenericData&amp; operator=(const OBGenericData &amp;src);</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">  217</a></span>&#160;    <span class="keywordtype">void</span>                      <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">SetAttribute</a>(<span class="keyword">const</span> std::string &amp;v)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {        _attr = v;        }</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">  220</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a>(<span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s) { _source = s; }</div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#ac61fc66ef692e79290d6eaf7231db92c">  222</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> std::string &amp;<a class="code" href="classOpenBabel_1_1OBGenericData.shtml#ac61fc66ef692e79290d6eaf7231db92c">GetAttribute</a>()<span class="keyword">  const</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keyword">    </span>{        <span class="keywordflow">return</span>(_attr);    }</div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#a91834e24b299c63cdf2cb77795298446">  225</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a91834e24b299c63cdf2cb77795298446">GetDataType</a>()<span class="keyword">    const</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">    </span>{        <span class="keywordflow">return</span>(_type);    }</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#a6145f0df06364b6d58c728368db8f992">  229</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> std::string &amp;<a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a6145f0df06364b6d58c728368db8f992">GetValue</a>()<span class="keyword">  const</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keyword">    </span>{                   <span class="keywordflow">return</span> _attr; }</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBGenericData.shtml#adf131b210114ba636246ffc8dcb2ea13">  231</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#adf131b210114ba636246ffc8dcb2ea13">GetOrigin</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">    </span>{     <span class="keywordflow">return</span> _source; }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  };</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">  236</a></span>&#160;  <span class="keyword">typedef</span> std::vector&lt;OBGenericData*&gt;::iterator <a class="code" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="comment">// introduction in base.cpp</span></div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml">  240</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a7a58af02c4e2dd0d9b174b3032f1ffa3">  243</a></span>&#160;      <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml#a7a58af02c4e2dd0d9b174b3032f1ffa3">~OBBase</a>()</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;          <span class="keywordflow">if</span> (!_vdata.empty())</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;              std::vector&lt;OBGenericData*&gt;::iterator m;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;              <span class="keywordflow">for</span> (m = _vdata.begin();m != _vdata.end();m++)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="keyword">delete</span> *m;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;              _vdata.clear();</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            }</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Clear();</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">  262</a></span>&#160;      <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <a class="code" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations</a>(<span class="keyword">const</span> std::map&lt;std::string,std::string&gt;* <span class="comment">/*pOptions*/</span>,</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                                        <a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* <span class="comment">/*pConv*/</span>)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">this</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">  269</a></span>&#160;      <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a>()</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        {</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;          <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      <span class="keyword">template</span>&lt; <span class="keyword">class</span> T &gt;</div><div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">  276</a></span>&#160;      <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>* <a class="code" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">CastAndClear</a>(<span class="keywordtype">bool</span> clear=<span class="keyword">true</span>)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>* pOb = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;          <span class="keywordflow">if</span>(pOb &amp;&amp; clear)<span class="comment">// Clear only if this is of target class</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            Clear();</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;          <span class="keywordflow">return</span> pOb;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        }</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="comment">//Currently no title data member in base class.</span></div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a0a6c35f6a88ad291ed821c856e4d887f">  287</a></span>&#160;      <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>  *<a class="code" href="classOpenBabel_1_1OBBase.shtml#a0a6c35f6a88ad291ed821c856e4d887f">GetTitle</a>(<span class="keywordtype">bool</span> UNUSED(replaceNewlines) = <span class="keyword">true</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;}</div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">  288</a></span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">void</span>  <a class="code" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">SetTitle</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *) {}</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      <span class="keywordtype">bool</span>                              HasData(<span class="keyword">const</span> std::string &amp;);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      <span class="keywordtype">bool</span>                              HasData(<span class="keyword">const</span> <span class="keywordtype">char</span> *);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      <span class="keywordtype">bool</span>                              HasData(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      <span class="keywordtype">void</span>                              DeleteData(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      <span class="keywordtype">void</span>                              DeleteData(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      <span class="keywordtype">void</span>                              DeleteData(std::vector&lt;OBGenericData*&gt;&amp;);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      <span class="keywordtype">bool</span>                              DeleteData(<span class="keyword">const</span> std::string&amp; s);</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">  307</a></span>&#160;      <span class="keywordtype">void</span>                              <a class="code" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">SetData</a>(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        {</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;          <span class="keywordflow">if</span>(d) _vdata.push_back(d);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        }</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      <span class="keywordtype">void</span>                              CloneData(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d);</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a2de970fc10391cb7f06c77e3b492f582">  315</a></span>&#160;      <span class="keywordtype">size_t</span>                      <a class="code" href="classOpenBabel_1_1OBBase.shtml#a2de970fc10391cb7f06c77e3b492f582">DataSize</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span>(_vdata.size()); }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>                    *GetData(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>                    *GetData(<span class="keyword">const</span> std::string&amp;);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>                    *GetData(<span class="keyword">const</span> <span class="keywordtype">char</span> *);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      std::vector&lt;OBGenericData*&gt;       GetAllData(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);</div><div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">  329</a></span>&#160;      std::vector&lt;OBGenericData*&gt;      &amp;<a class="code" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a>() { <span class="keywordflow">return</span>(_vdata); }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      std::vector&lt;OBGenericData*&gt;      GetData(<a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source);</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">  333</a></span>&#160;      OBDataIterator  <a class="code" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a>()</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        { <span class="keywordflow">return</span>(_vdata.begin());        }</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">  336</a></span>&#160;      OBDataIterator  <a class="code" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">EndData</a>()</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        { <span class="keywordflow">return</span>(_vdata.end());          }</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">  340</a></span>&#160;      std::vector&lt;OBGenericData*&gt; <a class="code" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a>; </div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    };</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;} <span class="comment">//namespace OpenBabel</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="preprocessor">#endif // OB_BASE_H</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bab44db07941815c91fbc8e01f66252208"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab44db07941815c91fbc8e01f66252208">OpenBabel::OBGenericDataType::SpinData</a></div><div class="ttdoc">Spin data, including NMR, atomic and molecular spin, etc. </div><div class="ttdef"><b>Definition:</b> base.h:106</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBResidueIndex_shtml_a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce"><div class="ttname"><a href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">OpenBabel::OBResidueIndex::T</a></div><div class="ttdef"><b>Definition:</b> residue.h:340</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2">OpenBabel::OBGenericDataType::VibrationData</a></div><div class="ttdoc">Vibrational modes, frequencies, etc. </div><div class="ttdef"><b>Definition:</b> base.h:127</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml">OpenBabel::OBGenericData</a></div><div class="ttdoc">Base class for generic data. </div><div class="ttdef"><b>Definition:</b> base.h:189</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe">OpenBabel::OBGenericDataType::MatrixData</a></div><div class="ttdoc">Matrix data (i.e., a 3x3 matrix like a rotation or quadrupole moment) </div><div class="ttdef"><b>Definition:</b> base.h:145</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_a91834e24b299c63cdf2cb77795298446"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#a91834e24b299c63cdf2cb77795298446">OpenBabel::OBGenericData::GetDataType</a></div><div class="ttdeci">unsigned int GetDataType() const</div><div class="ttdef"><b>Definition:</b> base.h:225</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba3f9974bdbccde7c26064d7ec21d570ef"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3f9974bdbccde7c26064d7ec21d570ef">OpenBabel::OBGenericDataType::StereoData</a></div><div class="ttdoc">Stereochemistry data (see OBStereoBase) </div><div class="ttdef"><b>Definition:</b> base.h:148</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a6bb6ed5c064e3957d8dd03aba51e61f7"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">OpenBabel::OBBase::ClassDescription</a></div><div class="ttdeci">static const char * ClassDescription()</div><div class="ttdef"><b>Definition:</b> base.h:269</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba4a0f2b355a4e2d24d617f2824c165a61"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4a0f2b355a4e2d24d617f2824c165a61">OpenBabel::OBGenericDataType::CustomData9</a></div><div class="ttdef"><b>Definition:</b> base.h:168</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_acb834533508953a264ed93b74fddad8d"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#acb834533508953a264ed93b74fddad8d">OpenBabel::OBGenericData::~OBGenericData</a></div><div class="ttdeci">virtual ~OBGenericData()</div><div class="ttdef"><b>Definition:</b> base.h:212</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba5b0d37c5cdfbcc15ee852b769c25d1b7"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba5b0d37c5cdfbcc15ee852b769c25d1b7">OpenBabel::OBGenericDataType::DensityData</a></div><div class="ttdoc">Density (cube) data and surfaces. </div><div class="ttdef"><b>Definition:</b> base.h:121</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBGenericData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> base.h:210</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba71d63bc919dfc9800e9e274301882557"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba71d63bc919dfc9800e9e274301882557">OpenBabel::OBGenericDataType::VirtualBondData</a></div><div class="ttdoc">Info. for storing bonds to atoms yet to be added, i.e. OBVirtualBond. </div><div class="ttdef"><b>Definition:</b> base.h:88</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConversion_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBConversion.shtml">OpenBabel::OBConversion</a></div><div class="ttdoc">Class to convert from one format to another. </div><div class="ttdef"><b>Definition:</b> obconversion.h:60</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bad4a188d7201f00f99ec649edead73c1e"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad4a188d7201f00f99ec649edead73c1e">OpenBabel::OBGenericDataType::CustomData0</a></div><div class="ttdoc">Custom (user-defined data) </div><div class="ttdef"><b>Definition:</b> base.h:159</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a87d90c5296e904e126b8520e1daacc14ab1c8706dce6832c9ce173260ba2bf392"><div class="ttname"><a href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14ab1c8706dce6832c9ce173260ba2bf392">OpenBabel::perceived</a></div><div class="ttdoc">Perceived by Open Babel library methods. </div><div class="ttdef"><b>Definition:</b> base.h:181</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_abdc8ffeb0749b563e1108a9ceaa0b394"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">OpenBabel::OBBase::DoTransformations</a></div><div class="ttdeci">virtual OBBase * DoTransformations(const std::map&lt; std::string, std::string &gt; *, OBConversion *)</div><div class="ttdef"><b>Definition:</b> base.h:262</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_ac61fc66ef692e79290d6eaf7231db92c"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#ac61fc66ef692e79290d6eaf7231db92c">OpenBabel::OBGenericData::GetAttribute</a></div><div class="ttdeci">virtual const std::string &amp; GetAttribute() const</div><div class="ttdef"><b>Definition:</b> base.h:222</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba26d8504c2596c9ef59dab47c01a4dd1b"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba26d8504c2596c9ef59dab47c01a4dd1b">OpenBabel::OBGenericDataType::UnitCell</a></div><div class="ttdoc">Crystallographic unit cell data, i.e., OBUnitCell. </div><div class="ttdef"><b>Definition:</b> base.h:103</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a7a58af02c4e2dd0d9b174b3032f1ffa3"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a7a58af02c4e2dd0d9b174b3032f1ffa3">OpenBabel::OBBase::~OBBase</a></div><div class="ttdeci">virtual ~OBBase()</div><div class="ttdef"><b>Definition:</b> base.h:243</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_af7811cf8aadbf3b3477c560b0ef2f797"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">OpenBabel::OBBase::_vdata</a></div><div class="ttdeci">std::vector&lt; OBGenericData * &gt; _vdata</div><div class="ttdoc">Custom data. </div><div class="ttdef"><b>Definition:</b> base.h:340</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_adb6b0ec89bfea783825b3b466e4dbc00"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">OpenBabel::OBBase::SetData</a></div><div class="ttdeci">void SetData(OBGenericData *d)</div><div class="ttdoc">Adds a data object; does nothing if d==NULL. </div><div class="ttdef"><b>Definition:</b> base.h:307</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_a31291823d487a4a47f24aae5870505ef"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">OpenBabel::OBGenericData::_type</a></div><div class="ttdeci">unsigned int _type</div><div class="ttdoc">attribute type – declared for each subclass </div><div class="ttdef"><b>Definition:</b> base.h:193</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bae1fbcef5ed6d30c670148af84890d0af"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bae1fbcef5ed6d30c670148af84890d0af">OpenBabel::OBGenericDataType::ChargeData</a></div><div class="ttdoc">Arbitrary partial and total charges, dipole moments, etc. </div><div class="ttdef"><b>Definition:</b> base.h:109</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a15b47c65393d46fde62d1f0a19bcf9fa"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">OpenBabel::OBBase::BeginData</a></div><div class="ttdeci">OBDataIterator BeginData()</div><div class="ttdef"><b>Definition:</b> base.h:333</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba6792a664f1614a75f33128e139392ef1"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba6792a664f1614a75f33128e139392ef1">OpenBabel::OBGenericDataType::RotamerList</a></div><div class="ttdoc">Information for generating &amp; manipulating rotamers, i.e. OBRotamerList. </div><div class="ttdef"><b>Definition:</b> base.h:85</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baa8504383b864769bce6f9962ff55711c"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baa8504383b864769bce6f9962ff55711c">OpenBabel::OBGenericDataType::ConformerData</a></div><div class="ttdoc">Arbitrary information about conformers, i.e., OBConformerData. </div><div class="ttdef"><b>Definition:</b> base.h:79</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8">OpenBabel::OBGenericDataType::ElectronicTransitionData</a></div><div class="ttdoc">Electronic transition data (e.g., UV/Vis, excitation energies, etc.) </div><div class="ttdef"><b>Definition:</b> base.h:154</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899">OpenBabel::OBGenericDataType::RotationData</a></div><div class="ttdoc">Rotational energy information. </div><div class="ttdef"><b>Definition:</b> base.h:130</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a87d90c5296e904e126b8520e1daacc14a140dc6ce49ef5aee319af1854c3dad23"><div class="ttname"><a href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a140dc6ce49ef5aee319af1854c3dad23">OpenBabel::local</a></div><div class="ttdoc">Not for routine external use (e.g. in sdf or cml properties) </div><div class="ttdef"><b>Definition:</b> base.h:183</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba7bd8533c833569ccbd4a701378ccffb7"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7bd8533c833569ccbd4a701378ccffb7">OpenBabel::OBGenericDataType::CustomData1</a></div><div class="ttdef"><b>Definition:</b> base.h:160</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">OpenBabel::OBGenericDataType::SetData</a></div><div class="ttdoc">Set Data (a set of OBGenericData) </div><div class="ttdef"><b>Definition:</b> base.h:136</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d">OpenBabel::OBGenericDataType::GridData</a></div><div class="ttdoc">Grid Data (e.g., 3D grids of data a.k.a. cubes) </div><div class="ttdef"><b>Definition:</b> base.h:139</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a456fbf388c19a1a63a95fe60d28dd869"><div class="ttname"><a href="namespaceOpenBabel.shtml#a456fbf388c19a1a63a95fe60d28dd869">OpenBabel::OBReleaseVersion</a></div><div class="ttdeci">std::string OBReleaseVersion()</div><div class="ttdef"><b>Definition:</b> base.cpp:29</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a87d90c5296e904e126b8520e1daacc14"><div class="ttname"><a href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">OpenBabel::DataOrigin</a></div><div class="ttdeci">DataOrigin</div><div class="ttdef"><b>Definition:</b> base.h:177</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bad015d8b14f8fa9e2c8107ec0b6d637a2"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad015d8b14f8fa9e2c8107ec0b6d637a2">OpenBabel::OBGenericDataType::CommentData</a></div><div class="ttdoc">Storing text comments (one per molecule, atom, bond, etc.) (for other data, e.g., author...</div><div class="ttdef"><b>Definition:</b> base.h:76</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55babbdeac68debaebaea148a0f2271c8128"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55babbdeac68debaebaea148a0f2271c8128">OpenBabel::OBGenericDataType::ExternalBondData</a></div><div class="ttdoc">Bond data external to OpenBabel, i.e., OBExternalBond, OBExternalBondData. </div><div class="ttdef"><b>Definition:</b> base.h:82</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a">OpenBabel::OBGenericDataType::PairData</a></div><div class="ttdoc">Arbitrary key/value data, i.e., OBPairData. </div><div class="ttdef"><b>Definition:</b> base.h:70</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55badd3a99a5a7d554d150d7241368f2ba1d"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55badd3a99a5a7d554d150d7241368f2ba1d">OpenBabel::OBGenericDataType::NuclearData</a></div><div class="ttdoc">Nuclear transitions (e.g., decay, capture, fission, fusion) </div><div class="ttdef"><b>Definition:</b> base.h:133</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a2de970fc10391cb7f06c77e3b492f582"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a2de970fc10391cb7f06c77e3b492f582">OpenBabel::OBBase::DataSize</a></div><div class="ttdeci">size_t DataSize() const</div><div class="ttdef"><b>Definition:</b> base.h:315</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a117c836710dd3aaa8748509262a5c280"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">OpenBabel::OBBase::EndData</a></div><div class="ttdeci">OBDataIterator EndData()</div><div class="ttdef"><b>Definition:</b> base.h:336</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba3b6e862da975578f9b8f2a5cef18935c"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3b6e862da975578f9b8f2a5cef18935c">OpenBabel::OBGenericDataType::CustomData12</a></div><div class="ttdef"><b>Definition:</b> base.h:171</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_aae3d15983201a2a115701b2c538fef77"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">OpenBabel::OBGenericData::SetAttribute</a></div><div class="ttdeci">void SetAttribute(const std::string &amp;v)</div><div class="ttdoc">Set the attribute (key), which can be used to retrieve this data. </div><div class="ttdef"><b>Definition:</b> base.h:217</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba614fe63c6aaa519336589c0b3dcbcdb9"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba614fe63c6aaa519336589c0b3dcbcdb9">OpenBabel::OBGenericDataType::RingData</a></div><div class="ttdoc">Information on rings in a molecule, i.e., OBRingData. </div><div class="ttdef"><b>Definition:</b> base.h:91</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a366c8a142b8c16554597e82320dfd0e0"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">OpenBabel::OBBase::SetTitle</a></div><div class="ttdeci">virtual void SetTitle(const char *)</div><div class="ttdef"><b>Definition:</b> base.h:288</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba4c2040d0daf33eff43588933be9150a7"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4c2040d0daf33eff43588933be9150a7">OpenBabel::OBGenericDataType::CustomData6</a></div><div class="ttdef"><b>Definition:</b> base.h:165</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e">OpenBabel::OBGenericDataType::UndefinedData</a></div><div class="ttdoc">Unknown data type (default) </div><div class="ttdef"><b>Definition:</b> base.h:67</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baac4fd2f8c1bedfe2d09c303e9c1b8e0a"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baac4fd2f8c1bedfe2d09c303e9c1b8e0a">OpenBabel::OBGenericDataType::OccupationData</a></div><div class="ttdoc">Atomic and molecular occupation data (e.g., for crystal structures) </div><div class="ttdef"><b>Definition:</b> base.h:118</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a">OpenBabel::OBGenericDataType::DOSData</a></div><div class="ttdoc">Density of States data (fermi energy and energy vs. density data) </div><div class="ttdef"><b>Definition:</b> base.h:151</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a87d90c5296e904e126b8520e1daacc14a887e83e320499ec89236722bbdf56f50"><div class="ttname"><a href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a887e83e320499ec89236722bbdf56f50">OpenBabel::fileformatInput</a></div><div class="ttdoc">Read from an input file. </div><div class="ttdef"><b>Definition:</b> base.h:179</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba8051d4056f7d8a89233dfa0ebc949bc1"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8051d4056f7d8a89233dfa0ebc949bc1">OpenBabel::OBGenericDataType::CustomData15</a></div><div class="ttdef"><b>Definition:</b> base.h:174</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba3cbbbad42fbfe9766b0892ccc88b47c5"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3cbbbad42fbfe9766b0892ccc88b47c5">OpenBabel::OBGenericDataType::CustomData14</a></div><div class="ttdef"><b>Definition:</b> base.h:173</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a87d90c5296e904e126b8520e1daacc14a6aef01ed9b1c198e6944f87e370f00b2"><div class="ttname"><a href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a6aef01ed9b1c198e6944f87e370f00b2">OpenBabel::external</a></div><div class="ttdoc">Added by an external program. </div><div class="ttdef"><b>Definition:</b> base.h:182</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bafe6b84e76821b52a2eb5f3a761dc8c6a"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bafe6b84e76821b52a2eb5f3a761dc8c6a">OpenBabel::OBGenericDataType::CustomData13</a></div><div class="ttdef"><b>Definition:</b> base.h:172</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9">OpenBabel::OBGenericDataType::VectorData</a></div><div class="ttdoc">Vector Data (i.e., one vector like a dipole moment) </div><div class="ttdef"><b>Definition:</b> base.h:142</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba7be53c3112d0111bbbee98cefbac4850"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7be53c3112d0111bbbee98cefbac4850">OpenBabel::OBGenericDataType::CustomData2</a></div><div class="ttdef"><b>Definition:</b> base.h:161</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba806a44c47ce81d45527562fca2917d0f"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba806a44c47ce81d45527562fca2917d0f">OpenBabel::OBGenericDataType::CustomData11</a></div><div class="ttdef"><b>Definition:</b> base.h:170</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba2ed92f76270c3218036e96ad1044301d"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2ed92f76270c3218036e96ad1044301d">OpenBabel::OBGenericDataType::SymmetryData</a></div><div class="ttdoc">Symmetry data – point and space groups, transforms, etc. i.e., OBSymmetryData. </div><div class="ttdef"><b>Definition:</b> base.h:112</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2">OpenBabel::OBGenericDataType::ElectronicData</a></div><div class="ttdoc">Electronic levels, redox states, orbitals, etc. </div><div class="ttdef"><b>Definition:</b> base.h:124</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baf20627567e8d1835670ff531d5cb9d1a"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf20627567e8d1835670ff531d5cb9d1a">OpenBabel::OBGenericDataType::CustomData5</a></div><div class="ttdef"><b>Definition:</b> base.h:164</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba240964387d336b8321d240044762c8e6"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba240964387d336b8321d240044762c8e6">OpenBabel::OBGenericDataType::CustomData10</a></div><div class="ttdef"><b>Definition:</b> base.h:169</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_a239606b62a534e4df7626ea0cfdfb856"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">OpenBabel::OBGenericData::_source</a></div><div class="ttdeci">DataOrigin _source</div><div class="ttdoc">source of data for accounting </div><div class="ttdef"><b>Definition:</b> base.h:194</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_adf131b210114ba636246ffc8dcb2ea13"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#adf131b210114ba636246ffc8dcb2ea13">OpenBabel::OBGenericData::GetOrigin</a></div><div class="ttdeci">virtual DataOrigin GetOrigin() const</div><div class="ttdef"><b>Definition:</b> base.h:231</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_a6145f0df06364b6d58c728368db8f992"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#a6145f0df06364b6d58c728368db8f992">OpenBabel::OBGenericData::GetValue</a></div><div class="ttdeci">virtual const std::string &amp; GetValue() const</div><div class="ttdoc">Base class returns a default value (the attribute type) but should never be called. </div><div class="ttdef"><b>Definition:</b> base.h:229</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bab32f4336d6de7ee7fdf6557bcd9b01c4"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab32f4336d6de7ee7fdf6557bcd9b01c4">OpenBabel::OBGenericDataType::CustomData8</a></div><div class="ttdef"><b>Definition:</b> base.h:167</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00">OpenBabel::OBGenericDataType::SerialNums</a></div><div class="ttdoc">Residue serial numbers. </div><div class="ttdef"><b>Definition:</b> base.h:100</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a0a6c35f6a88ad291ed821c856e4d887f"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a0a6c35f6a88ad291ed821c856e4d887f">OpenBabel::OBBase::GetTitle</a></div><div class="ttdeci">virtual const char * GetTitle(bool replaceNewlines=true) const</div><div class="ttdoc">Base type does nothing Made virtual around r3535 to simplify code which passes around OBBase*...</div><div class="ttdef"><b>Definition:</b> base.h:287</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba99b8d17f7ee6c09b008ab6bf5b5bf0cc"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba99b8d17f7ee6c09b008ab6bf5b5bf0cc">OpenBabel::OBGenericDataType::AngleData</a></div><div class="ttdoc">Bond angles in a molecule, i.e., OBAngle, OBAngleData. </div><div class="ttdef"><b>Definition:</b> base.h:97</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba012e8681e30646e38989b9a0f6ace98f"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba012e8681e30646e38989b9a0f6ace98f">OpenBabel::OBGenericDataType::CustomData3</a></div><div class="ttdef"><b>Definition:</b> base.h:162</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_a90a551ff0a0ed3fa58745dff0ecacdaa"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">OpenBabel::OBBase::GetData</a></div><div class="ttdeci">std::vector&lt; OBGenericData * &gt; &amp; GetData()</div><div class="ttdef"><b>Definition:</b> base.h:329</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ad5ca88aa35c43da1b791c7703ec8978d"><div class="ttname"><a href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OpenBabel::OBDataIterator</a></div><div class="ttdeci">std::vector&lt; OBGenericData * &gt;::iterator OBDataIterator</div><div class="ttdoc">A standard iterator over vectors of OBGenericData (e.g., inherited from OBBase) </div><div class="ttdef"><b>Definition:</b> base.h:236</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048"><div class="ttname"><a href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048">OpenBabel::any</a></div><div class="ttdoc">Undefined or unspecified (default) </div><div class="ttdef"><b>Definition:</b> base.h:178</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:240</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baab3b5ad7023167aa297c4c555c10acdd"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baab3b5ad7023167aa297c4c555c10acdd">OpenBabel::OBGenericDataType::ChiralData</a></div><div class="ttdoc">Arbitrary chiral information (atom, bond, molecule, etc.) i.e., OBChiralData. </div><div class="ttdef"><b>Definition:</b> base.h:115</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml_ab2f0cea1c162bbe8dd603528a3da5c87"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">OpenBabel::OBBase::CastAndClear</a></div><div class="ttdeci">T * CastAndClear(bool clear=true)</div><div class="ttdoc">By default clears the object. Called from ReadMolecule of most format classes. </div><div class="ttdef"><b>Definition:</b> base.h:276</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a87d90c5296e904e126b8520e1daacc14a928a3db32b4975c3d42d0ca5d8d9f44d"><div class="ttname"><a href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a928a3db32b4975c3d42d0ca5d8d9f44d">OpenBabel::userInput</a></div><div class="ttdoc">Added by the user. </div><div class="ttdef"><b>Definition:</b> base.h:180</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_adceb77134f15418a66cf1124dcef1b51"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">OpenBabel::OBGenericData::_attr</a></div><div class="ttdeci">std::string _attr</div><div class="ttdoc">attribute tag (e.g., &quot;UnitCell&quot;, &quot;Comment&quot; or &quot;Author&quot;) </div><div class="ttdef"><b>Definition:</b> base.h:192</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baed27589416d0d35119923437b476c33c"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baed27589416d0d35119923437b476c33c">OpenBabel::OBGenericDataType::EnergyData</a></div><div class="ttdoc">Energetics data (e.g., total energy, heat of formation, etc.) </div><div class="ttdef"><b>Definition:</b> base.h:73</div></div>
<div class="ttc" id="tokenst_8h_shtml"><div class="ttname"><a href="tokenst_8h.shtml">tokenst.h</a></div><div class="ttdoc">Tokenize strings, open data files. </div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba9cf293f0b1ed83d3b1b804ca947ddcd8"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba9cf293f0b1ed83d3b1b804ca947ddcd8">OpenBabel::OBGenericDataType::TorsionData</a></div><div class="ttdoc">Information about torsion/dihedral angles, i.e., OBTorsionData and OBTorsion. </div><div class="ttdef"><b>Definition:</b> base.h:94</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba40d766aa8e0726ef56b99986ec4d275d"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba40d766aa8e0726ef56b99986ec4d275d">OpenBabel::OBGenericDataType::CustomData7</a></div><div class="ttdef"><b>Definition:</b> base.h:166</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml_a45613e34598a9584fb0120ef3fdab9e0"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">OpenBabel::OBGenericData::SetOrigin</a></div><div class="ttdeci">void SetOrigin(const DataOrigin s)</div><div class="ttdoc">Set the origin of this data, which can be used to filter the data. </div><div class="ttdef"><b>Definition:</b> base.h:220</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba342cb4110346a130dc73e4e3491533de"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba342cb4110346a130dc73e4e3491533de">OpenBabel::OBGenericDataType::CustomData4</a></div><div class="ttdef"><b>Definition:</b> base.h:163</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
