<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>reaction.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">reaction.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="reaction_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">reaction.h - Handle chemical reactions (i.e., lists of reagents and products).</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 2005 by Chris Morley</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#ifndef OB_REACT_H</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#define OB_REACT_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="shared__ptr_8h.shtml">openbabel/shared_ptr.h</a>&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml">   36</a></span>&#160;<span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBReaction.shtml">OBReaction</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  std::vector&lt;obsharedptr&lt;OBMol&gt; &gt; _reactants;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  std::vector&lt;obsharedptr&lt;OBMol&gt; &gt; _products;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  obsharedptr&lt;OBMol&gt; _ts;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  obsharedptr&lt;OBMol&gt; _agent;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  std::string _title;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  std::string _comment;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">bool</span> _reversible;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#ad4146c04740bf08485bdea0a457015b0">   47</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ad4146c04740bf08485bdea0a457015b0">OBReaction</a>() : _reversible(false)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  {}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a51a38a7f32e61c112b0bc3664a54a842">   50</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a51a38a7f32e61c112b0bc3664a54a842">NumReactants</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">  </span>{ <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span> (_reactants.size()); }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#ab1b34fb15f43c3aed742170c0eb5b202">   53</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ab1b34fb15f43c3aed742170c0eb5b202">NumProducts</a>()<span class="keyword">const</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">  </span>{ <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span> (_products.size()); }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a7321d9a839875b08f3cdf44a1e36bef2">   56</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a7321d9a839875b08f3cdf44a1e36bef2">AddReactant</a>(<span class="keyword">const</span> obsharedptr&lt;OBMol&gt; sp)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  { _reactants.push_back(sp); }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a8ddc0991e6c2bfbe0f3ae0416512c513">   59</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a8ddc0991e6c2bfbe0f3ae0416512c513">AddProduct</a>(<span class="keyword">const</span> obsharedptr&lt;OBMol&gt; sp)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  { _products.push_back(sp); }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a9d54b5fb6e4078b254b90292dcf9d866">   62</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a9d54b5fb6e4078b254b90292dcf9d866">SetTransitionState</a>(<span class="keyword">const</span> obsharedptr&lt;OBMol&gt; sp)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  { _ts = sp; }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#ac359552291cfa4b54a7585f367c3b72e">   65</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ac359552291cfa4b54a7585f367c3b72e">AddAgent</a>(<span class="keyword">const</span> obsharedptr&lt;OBMol&gt; sp)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  { _agent = sp; }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a7c40aba55341c341e733e8e5bb1ce1fc">   68</a></span>&#160;  obsharedptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a7c40aba55341c341e733e8e5bb1ce1fc">GetReactant</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> i)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    obsharedptr&lt;OBMol&gt; sp;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span>(i&lt;_reactants.size())</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      sp = _reactants[i];</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span> sp; <span class="comment">//returns empty if out of range</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a4de49d98cbf1c7905370df4b00e6bb8e">   75</a></span>&#160;  obsharedptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a4de49d98cbf1c7905370df4b00e6bb8e">GetProduct</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> i)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    obsharedptr&lt;OBMol&gt; sp;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span>(i&lt;_products.size())</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      sp = _products[i];</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">return</span> sp; <span class="comment">//returns empty if out of range</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a8400a98250aba47e76e83ca69d904e50">   83</a></span>&#160;  obsharedptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a8400a98250aba47e76e83ca69d904e50">GetTransitionState</a>()<span class="keyword">const</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">  </span>{ <span class="keywordflow">return</span> _ts; }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#accee2dd9166a43d0de3b894abf46d310">   86</a></span>&#160;  obsharedptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#accee2dd9166a43d0de3b894abf46d310">GetAgent</a>()<span class="keyword">const</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">  </span>{ <span class="keywordflow">return</span> _agent; }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a8ad1e166810eccd216c2039ffc737245">   89</a></span>&#160;  std::string <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a8ad1e166810eccd216c2039ffc737245">GetTitle</a>()<span class="keyword">        const </span>{ <span class="keywordflow">return</span> _title; }</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a48a637df6f8f461eb51006dcfecda0ff">   90</a></span>&#160;  std::string <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a48a637df6f8f461eb51006dcfecda0ff">GetComment</a>()<span class="keyword">      const </span>{ <span class="keywordflow">return</span> _comment; }</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a54294c70e5c7d4e8edacbdde65a07ab3">   91</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a54294c70e5c7d4e8edacbdde65a07ab3">SetTitle</a>(<span class="keyword">const</span> std::string&amp; title) { _title=title; }</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a172c10e306c608ed9687a06d065dcf7d">   92</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a172c10e306c608ed9687a06d065dcf7d">SetComment</a>(<span class="keyword">const</span> std::string&amp; comment) { _comment=comment; }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a7b7d2a81ca0b31b6803ed748f9fbe3d5">   94</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a7b7d2a81ca0b31b6803ed748f9fbe3d5">IsReversible</a>()<span class="keyword"> const       </span>{<span class="keywordflow">return</span> _reversible;}</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#ab8592aab9b061be89f1d86e642d748b4">   95</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ab8592aab9b061be89f1d86e642d748b4">SetReversible</a>(<span class="keywordtype">bool</span> b=<span class="keyword">true</span>) {_reversible=b;}</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">   97</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a>()</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot; reactions\n&quot;</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBReaction.shtml#ad12fd937da5f4b0c4562888252fe214b">  102</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ad12fd937da5f4b0c4562888252fe214b">Clear</a>()</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    _reactants.clear();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    _products.clear();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    _ts.reset();</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    _agent.reset();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    _title.clear();</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    _comment.clear();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    _reversible = <span class="keyword">false</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;} <span class="comment">//namespace OpenBabel</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_ad4146c04740bf08485bdea0a457015b0"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#ad4146c04740bf08485bdea0a457015b0">OpenBabel::OBReaction::OBReaction</a></div><div class="ttdeci">OBReaction()</div><div class="ttdef"><b>Definition:</b> reaction.h:47</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a8ddc0991e6c2bfbe0f3ae0416512c513"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a8ddc0991e6c2bfbe0f3ae0416512c513">OpenBabel::OBReaction::AddProduct</a></div><div class="ttdeci">void AddProduct(const obsharedptr&lt; OBMol &gt; sp)</div><div class="ttdef"><b>Definition:</b> reaction.h:59</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a4de49d98cbf1c7905370df4b00e6bb8e"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a4de49d98cbf1c7905370df4b00e6bb8e">OpenBabel::OBReaction::GetProduct</a></div><div class="ttdeci">obsharedptr&lt; OBMol &gt; GetProduct(const unsigned i)</div><div class="ttdef"><b>Definition:</b> reaction.h:75</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a48a637df6f8f461eb51006dcfecda0ff"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a48a637df6f8f461eb51006dcfecda0ff">OpenBabel::OBReaction::GetComment</a></div><div class="ttdeci">std::string GetComment() const</div><div class="ttdef"><b>Definition:</b> reaction.h:90</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_ab8592aab9b061be89f1d86e642d748b4"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#ab8592aab9b061be89f1d86e642d748b4">OpenBabel::OBReaction::SetReversible</a></div><div class="ttdeci">void SetReversible(bool b=true)</div><div class="ttdef"><b>Definition:</b> reaction.h:95</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml">OpenBabel::OBReaction</a></div><div class="ttdoc">Used to store chemical reactions (i.e., reactants -&gt; products) </div><div class="ttdef"><b>Definition:</b> reaction.h:36</div></div>
<div class="ttc" id="mol_8h_shtml"><div class="ttname"><a href="mol_8h.shtml">mol.h</a></div><div class="ttdoc">Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel) ...</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a51a38a7f32e61c112b0bc3664a54a842"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a51a38a7f32e61c112b0bc3664a54a842">OpenBabel::OBReaction::NumReactants</a></div><div class="ttdeci">int NumReactants() const</div><div class="ttdef"><b>Definition:</b> reaction.h:50</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a7321d9a839875b08f3cdf44a1e36bef2"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a7321d9a839875b08f3cdf44a1e36bef2">OpenBabel::OBReaction::AddReactant</a></div><div class="ttdeci">void AddReactant(const obsharedptr&lt; OBMol &gt; sp)</div><div class="ttdef"><b>Definition:</b> reaction.h:56</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a7c40aba55341c341e733e8e5bb1ce1fc"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a7c40aba55341c341e733e8e5bb1ce1fc">OpenBabel::OBReaction::GetReactant</a></div><div class="ttdeci">obsharedptr&lt; OBMol &gt; GetReactant(const unsigned i)</div><div class="ttdef"><b>Definition:</b> reaction.h:68</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a172c10e306c608ed9687a06d065dcf7d"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a172c10e306c608ed9687a06d065dcf7d">OpenBabel::OBReaction::SetComment</a></div><div class="ttdeci">void SetComment(const std::string &amp;comment)</div><div class="ttdef"><b>Definition:</b> reaction.h:92</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_accee2dd9166a43d0de3b894abf46d310"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#accee2dd9166a43d0de3b894abf46d310">OpenBabel::OBReaction::GetAgent</a></div><div class="ttdeci">obsharedptr&lt; OBMol &gt; GetAgent() const</div><div class="ttdef"><b>Definition:</b> reaction.h:86</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_ac359552291cfa4b54a7585f367c3b72e"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#ac359552291cfa4b54a7585f367c3b72e">OpenBabel::OBReaction::AddAgent</a></div><div class="ttdeci">void AddAgent(const obsharedptr&lt; OBMol &gt; sp)</div><div class="ttdef"><b>Definition:</b> reaction.h:65</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a7b7d2a81ca0b31b6803ed748f9fbe3d5"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a7b7d2a81ca0b31b6803ed748f9fbe3d5">OpenBabel::OBReaction::IsReversible</a></div><div class="ttdeci">bool IsReversible() const</div><div class="ttdef"><b>Definition:</b> reaction.h:94</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a54294c70e5c7d4e8edacbdde65a07ab3"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a54294c70e5c7d4e8edacbdde65a07ab3">OpenBabel::OBReaction::SetTitle</a></div><div class="ttdeci">void SetTitle(const std::string &amp;title)</div><div class="ttdef"><b>Definition:</b> reaction.h:91</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a6bb6ed5c064e3957d8dd03aba51e61f7"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">OpenBabel::OBReaction::ClassDescription</a></div><div class="ttdeci">static const char * ClassDescription()</div><div class="ttdef"><b>Definition:</b> reaction.h:97</div></div>
<div class="ttc" id="shared__ptr_8h_shtml"><div class="ttname"><a href="shared__ptr_8h.shtml">shared_ptr.h</a></div><div class="ttdoc">Shared pointer. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_ab1b34fb15f43c3aed742170c0eb5b202"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#ab1b34fb15f43c3aed742170c0eb5b202">OpenBabel::OBReaction::NumProducts</a></div><div class="ttdeci">int NumProducts() const</div><div class="ttdef"><b>Definition:</b> reaction.h:53</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a8400a98250aba47e76e83ca69d904e50"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a8400a98250aba47e76e83ca69d904e50">OpenBabel::OBReaction::GetTransitionState</a></div><div class="ttdeci">obsharedptr&lt; OBMol &gt; GetTransitionState() const</div><div class="ttdef"><b>Definition:</b> reaction.h:83</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_ad12fd937da5f4b0c4562888252fe214b"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#ad12fd937da5f4b0c4562888252fe214b">OpenBabel::OBReaction::Clear</a></div><div class="ttdeci">bool Clear()</div><div class="ttdoc">Clear any and all data associated with this object. </div><div class="ttdef"><b>Definition:</b> reaction.h:102</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:240</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a8ad1e166810eccd216c2039ffc737245"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a8ad1e166810eccd216c2039ffc737245">OpenBabel::OBReaction::GetTitle</a></div><div class="ttdeci">std::string GetTitle() const</div><div class="ttdef"><b>Definition:</b> reaction.h:89</div></div>
<div class="ttc" id="classOpenBabel_1_1OBReaction_shtml_a9d54b5fb6e4078b254b90292dcf9d866"><div class="ttname"><a href="classOpenBabel_1_1OBReaction.shtml#a9d54b5fb6e4078b254b90292dcf9d866">OpenBabel::OBReaction::SetTransitionState</a></div><div class="ttdeci">void SetTransitionState(const obsharedptr&lt; OBMol &gt; sp)</div><div class="ttdef"><b>Definition:</b> reaction.h:62</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:29 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
