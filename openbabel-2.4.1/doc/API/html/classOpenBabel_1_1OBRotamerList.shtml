<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBRotamerList Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml">OBRotamerList</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBRotamerList-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBRotamerList Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rotamer_8h_source.shtml">openbabel/rotamer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBRotamerList:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBRotamerList.png" usemap="#OBRotamerList_map" alt=""/>
  <map id="OBRotamerList_map" name="OBRotamerList_map">
<area href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data. " alt="OBGenericData" shape="rect" coords="0,0,101,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa1cef5a8affd0b0f75891495f1674805"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#aa1cef5a8affd0b0f75891495f1674805">OBRotamerList</a> ()</td></tr>
<tr class="separator:aa1cef5a8affd0b0f75891495f1674805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b6bdffe6ade9a2965ceaae38bb9340"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *parent) const</td></tr>
<tr class="separator:ab7b6bdffe6ade9a2965ceaae38bb9340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a193afbb27085bc1183ea8f415c99b989"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a193afbb27085bc1183ea8f415c99b989">~OBRotamerList</a> ()</td></tr>
<tr class="separator:a193afbb27085bc1183ea8f415c99b989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd34dcbc8bd8c0fba2433b39f1e1d61b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#afd34dcbc8bd8c0fba2433b39f1e1d61b">Setup</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a> &amp;)</td></tr>
<tr class="separator:afd34dcbc8bd8c0fba2433b39f1e1d61b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ecbed112a3ccc6252b88d4432b94c6e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a7ecbed112a3ccc6252b88d4432b94c6e">Setup</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, unsigned char *ref, int nrotors)</td></tr>
<tr class="separator:a7ecbed112a3ccc6252b88d4432b94c6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acec7eb06ebdea2ad5380429c895fbff3"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#acec7eb06ebdea2ad5380429c895fbff3">NumRotors</a> () const</td></tr>
<tr class="separator:acec7eb06ebdea2ad5380429c895fbff3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add4e6ba7b3a1dbd14607e23096de4212"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#add4e6ba7b3a1dbd14607e23096de4212">NumRotamers</a> () const</td></tr>
<tr class="separator:add4e6ba7b3a1dbd14607e23096de4212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a731bb8e81cfd2699e1bfeb0c24fc7d2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a731bb8e81cfd2699e1bfeb0c24fc7d2b">AddRotamer</a> (double *)</td></tr>
<tr class="separator:a731bb8e81cfd2699e1bfeb0c24fc7d2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1abcce8335b5b98eb2ef691138e864eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a1abcce8335b5b98eb2ef691138e864eb">AddRotamer</a> (int *key)</td></tr>
<tr class="separator:a1abcce8335b5b98eb2ef691138e864eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab12cefb04ee9382126d785c965b99454"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab12cefb04ee9382126d785c965b99454">AddRotamer</a> (std::vector&lt; int &gt; key)</td></tr>
<tr class="separator:ab12cefb04ee9382126d785c965b99454"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2244fa5b56d6a839a32de2fd11156472"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a2244fa5b56d6a839a32de2fd11156472">AddRotamer</a> (unsigned char *key)</td></tr>
<tr class="separator:a2244fa5b56d6a839a32de2fd11156472"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f752b5a14fe102c0c274166e40f8eb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a6f752b5a14fe102c0c274166e40f8eb4">AddRotamers</a> (unsigned char *arr, int nconf)</td></tr>
<tr class="separator:a6f752b5a14fe102c0c274166e40f8eb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5e36f37fe489ad4ad34605ddb34ecc1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#af5e36f37fe489ad4ad34605ddb34ecc1">GetReferenceArray</a> (unsigned char *) const</td></tr>
<tr class="separator:af5e36f37fe489ad4ad34605ddb34ecc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f0fbaf701b38d36aaa0a225de04841d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; double * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a3f0fbaf701b38d36aaa0a225de04841d">CreateConformerList</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:a3f0fbaf701b38d36aaa0a225de04841d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe1bdcf71f1f6ae8263de2a0a0d5ada3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#abe1bdcf71f1f6ae8263de2a0a0d5ada3">ExpandConformerList</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, std::vector&lt; double *&gt; &amp;confs)</td></tr>
<tr class="separator:abe1bdcf71f1f6ae8263de2a0a0d5ada3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a769b901b37f0d05c32169473653d639a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a769b901b37f0d05c32169473653d639a">SetCurrentCoordinates</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, std::vector&lt; int &gt; arr)</td></tr>
<tr class="separator:a769b901b37f0d05c32169473653d639a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91c3efe37db1542a2f553440143915f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a91c3efe37db1542a2f553440143915f9">SetBaseCoordinateSets</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:a91c3efe37db1542a2f553440143915f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9505348a751e84dd12df813ad8e239aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a9505348a751e84dd12df813ad8e239aa">SetBaseCoordinateSets</a> (std::vector&lt; double *&gt; bc, unsigned int N)</td></tr>
<tr class="separator:a9505348a751e84dd12df813ad8e239aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc7ea5c9356d1597bec2d328bcdc3b07"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#adc7ea5c9356d1597bec2d328bcdc3b07">NumBaseCoordinateSets</a> () const</td></tr>
<tr class="separator:adc7ea5c9356d1597bec2d328bcdc3b07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae59bb16c36669c064faee0ff91b3a422"><td class="memItemLeft" align="right" valign="top">double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ae59bb16c36669c064faee0ff91b3a422">GetBaseCoordinateSet</a> (unsigned int i) const</td></tr>
<tr class="separator:ae59bb16c36669c064faee0ff91b3a422"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f0695eb7d6ff6321032d88655ae8d25"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a2f0695eb7d6ff6321032d88655ae8d25">NumAtoms</a> () const</td></tr>
<tr class="separator:a2f0695eb7d6ff6321032d88655ae8d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae3d15983201a2a115701b2c538fef77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>
<tr class="separator:aae3d15983201a2a115701b2c538fef77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45613e34598a9584fb0120ef3fdab9e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>
<tr class="separator:a45613e34598a9584fb0120ef3fdab9e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac61fc66ef692e79290d6eaf7231db92c"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac61fc66ef692e79290d6eaf7231db92c">GetAttribute</a> () const</td></tr>
<tr class="separator:ac61fc66ef692e79290d6eaf7231db92c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91834e24b299c63cdf2cb77795298446"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a91834e24b299c63cdf2cb77795298446">GetDataType</a> () const</td></tr>
<tr class="separator:a91834e24b299c63cdf2cb77795298446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6145f0df06364b6d58c728368db8f992"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a6145f0df06364b6d58c728368db8f992">GetValue</a> () const</td></tr>
<tr class="separator:a6145f0df06364b6d58c728368db8f992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf131b210114ba636246ffc8dcb2ea13"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adf131b210114ba636246ffc8dcb2ea13">GetOrigin</a> () const</td></tr>
<tr class="separator:adf131b210114ba636246ffc8dcb2ea13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr class="memitem:a2948e1a74f2c22c575d6ddc6643f6ef1"><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned char * &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a2948e1a74f2c22c575d6ddc6643f6ef1">BeginRotamer</a> ()</td></tr>
<tr class="separator:a2948e1a74f2c22c575d6ddc6643f6ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a589d2df01c6f3e1cb1bf95b25e804409"><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned char * &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a589d2df01c6f3e1cb1bf95b25e804409">EndRotamer</a> ()</td></tr>
<tr class="separator:a589d2df01c6f3e1cb1bf95b25e804409"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:adceb77134f15418a66cf1124dcef1b51"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>
<tr class="separator:adceb77134f15418a66cf1124dcef1b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31291823d487a4a47f24aae5870505ef"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a></td></tr>
<tr class="separator:a31291823d487a4a47f24aae5870505ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a239606b62a534e4df7626ea0cfdfb856"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>
<tr class="separator:a239606b62a534e4df7626ea0cfdfb856"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Supports a set of rotamer coordinate sets for some number of potentially rotatable bonds. </p>
<p>A high-level class for rotamer / conformer generation, intended mainly for use with the related class <a class="el" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,. ">OBRotorList</a> and the <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml" title="Database of default hybridization torsional rules and SMARTS-defined OBRotorRule objects. ">OBRotorRules</a> database</p>
<p>Rotamers represent conformational isomers formed simply by rotation of dihedral angles. On the other hand, conformers may include geometric relaxation (i.e., slight modification of bond lengths, bond angles, etc.)</p>
<p>The following shows an example of generating 2 conformers using different rotor states. Similar code could be used for systematic or Monte Carlo conformer sampling when combined with energy evaluation (molecular mechanics or otherwise).</p>
<div class="fragment"><div class="line">OBRotorList rl; <span class="comment">// used to sample all rotatable bonds via the OBRotorRules data</span></div><div class="line"><span class="comment">// If you want to &quot;fix&quot; any particular atoms (i.e., freeze them in space)</span></div><div class="line"><span class="comment">// then set up an OBBitVec of the fixed atoms and call</span></div><div class="line"><span class="comment">// rl.SetFixAtoms(bitvec);</span></div><div class="line">rl.Setup(mol);</div><div class="line"></div><div class="line"><span class="comment">// How many rotatable bonds are there?</span></div><div class="line">cerr &lt;&lt; <span class="stringliteral">&quot; Number of rotors: &quot;</span> &lt;&lt; rl.Size() &lt;&lt; endl;</div><div class="line"></div><div class="line"><span class="comment">// indexed from 1, rotorKey[0] = 0</span></div><div class="line">std::vector&lt;int&gt; rotorKey(rl.Size() + 1, 0);</div><div class="line"></div><div class="line"><span class="comment">// each entry represents the configuration of a rotor</span></div><div class="line"><span class="comment">// e.g. indexes into OBRotor::GetResolution() -- the different angles</span></div><div class="line"><span class="comment">//   to sample for a rotamer search</span></div><div class="line"><span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; rl.Size() + 1; ++i)</div><div class="line">rotorKey[i] = 0; <span class="comment">// could be anything from 0 .. OBRotor-&gt;GetResolution().size()</span></div><div class="line"><span class="comment">// -1 is for no rotation</span></div><div class="line"></div><div class="line"><span class="comment">// The OBRotamerList can generate conformations (i.e., coordinate sets)</span></div><div class="line"><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#aa1cef5a8affd0b0f75891495f1674805">OBRotamerList</a> rotamers;</div><div class="line">rotamers.SetBaseCoordinateSets(mol);</div><div class="line">rotamers.Setup(mol, rl);</div><div class="line"></div><div class="line">rotamers.AddRotamer(rotorKey);</div><div class="line">rotorKey[1] = 2; <span class="comment">// switch one rotor</span></div><div class="line">rotamers.AddRotamer(rotorKey);</div><div class="line"></div><div class="line">rotamers.ExpandConformerList(mol, mol.GetConformers());</div><div class="line"></div><div class="line"><span class="comment">// change the molecule conformation</span></div><div class="line">mol.SetConformer(0); <span class="comment">// rotorKey 0, 0, ...</span></div><div class="line">conv.Write(&amp;mol);</div><div class="line"></div><div class="line">mol.SetConformer(1); <span class="comment">// rotorKey 0, 2, ...</span></div></div><!-- fragment --> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa1cef5a8affd0b0f75891495f1674805"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1cef5a8affd0b0f75891495f1674805">&sect;&nbsp;</a></span>OBRotamerList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml">OBRotamerList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a193afbb27085bc1183ea8f415c99b989"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a193afbb27085bc1183ea8f415c99b989">&sect;&nbsp;</a></span>~OBRotamerList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBRotamerList.shtml">OBRotamerList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab7b6bdffe6ade9a2965ceaae38bb9340"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7b6bdffe6ade9a2965ceaae38bb9340">&sect;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * Clone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"><em>parent</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBGenericData</a>.</p>

</div>
</div>
<a id="afd34dcbc8bd8c0fba2433b39f1e1d61b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd34dcbc8bd8c0fba2433b39f1e1d61b">&sect;&nbsp;</a></span>Setup() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Setup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a> &amp;&#160;</td>
          <td class="paramname"><em>rl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set up a rotamer list based on an already created <a class="el" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,. ">OBRotorList</a>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a61c5a147dfccff2c6c3c3c37dbeda28a">OBForceField::FastRotorSearch()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a6af0e090e596e74f00ff0f9347d143a7">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a9084f759abbf98766f3fed69c14b568a">OBConformerSearch::Setup()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#abf19a37194fdf234f4fcbe6b8616d2ff">OBForceField::SystematicRotorSearchInitialize()</a>, <a class="el" href="namespaceOpenBabel.shtml#afa641f7ef2f87464db0231f320116ecb">OpenBabel::UpdateConformersFromTree()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a308e084198342c54de6f1fb695f23a6d">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div>
<a id="a7ecbed112a3ccc6252b88d4432b94c6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ecbed112a3ccc6252b88d4432b94c6e">&sect;&nbsp;</a></span>Setup() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Setup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>ref</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nrotors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set up a rotamer list based on the supplied reference atoms and the number of rotors </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mol</td><td>The molecule to evaluate </td></tr>
    <tr><td class="paramname">ref</td><td>An array of the 4 dihedral atoms for each rotor </td></tr>
    <tr><td class="paramname">nrotors</td><td>The number of rotors (i.e., the size of ref / 4) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="acec7eb06ebdea2ad5380429c895fbff3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acec7eb06ebdea2ad5380429c895fbff3">&sect;&nbsp;</a></span>NumRotors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumRotors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of rotatable bonds considered </dd></dl>

</div>
</div>
<a id="add4e6ba7b3a1dbd14607e23096de4212"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add4e6ba7b3a1dbd14607e23096de4212">&sect;&nbsp;</a></span>NumRotamers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumRotamers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of rotamer (conformation) coordinate sets </dd></dl>

</div>
</div>
<a id="a731bb8e81cfd2699e1bfeb0c24fc7d2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a731bb8e81cfd2699e1bfeb0c24fc7d2b">&sect;&nbsp;</a></span>AddRotamer() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a rotamer to the list based on the supplied coordinate set as a double*. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a6af0e090e596e74f00ff0f9347d143a7">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a9084f759abbf98766f3fed69c14b568a">OBConformerSearch::Setup()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#abf19a37194fdf234f4fcbe6b8616d2ff">OBForceField::SystematicRotorSearchInitialize()</a>.</p>

</div>
</div>
<a id="a1abcce8335b5b98eb2ef691138e864eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1abcce8335b5b98eb2ef691138e864eb">&sect;&nbsp;</a></span>AddRotamer() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a rotamer to the list based on <code>key</code> as a configuration of the individual rotor bonds. </p>

</div>
</div>
<a id="ab12cefb04ee9382126d785c965b99454"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab12cefb04ee9382126d785c965b99454">&sect;&nbsp;</a></span>AddRotamer() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a rotamer to the list based on <code>key</code> as a configuration of the individual rotor bonds. </p>

</div>
</div>
<a id="a2244fa5b56d6a839a32de2fd11156472"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2244fa5b56d6a839a32de2fd11156472">&sect;&nbsp;</a></span>AddRotamer() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a rotamer to the list based on <code>key</code> as a configuration of the individual rotor bonds. </p>

</div>
</div>
<a id="a6f752b5a14fe102c0c274166e40f8eb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f752b5a14fe102c0c274166e40f8eb4">&sect;&nbsp;</a></span>AddRotamers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamers </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nconf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add <code>nconf</code> rotamers based on <code>as</code> an array of configurations much like <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a731bb8e81cfd2699e1bfeb0c24fc7d2b" title="Add a rotamer to the list based on the supplied coordinate set as a double*. ">AddRotamer()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>.</p>

</div>
</div>
<a id="af5e36f37fe489ad4ad34605ddb34ecc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5e36f37fe489ad4ad34605ddb34ecc1">&sect;&nbsp;</a></span>GetReferenceArray()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetReferenceArray </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>ref</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A reference array (as used by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a731bb8e81cfd2699e1bfeb0c24fc7d2b" title="Add a rotamer to the list based on the supplied coordinate set as a double*. ">AddRotamer()</a> as a configuration of the individual rotor bonds </dd></dl>

</div>
</div>
<a id="a2948e1a74f2c22c575d6ddc6643f6ef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2948e1a74f2c22c575d6ddc6643f6ef1">&sect;&nbsp;</a></span>BeginRotamer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned char*&gt;::iterator BeginRotamer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a589d2df01c6f3e1cb1bf95b25e804409"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a589d2df01c6f3e1cb1bf95b25e804409">&sect;&nbsp;</a></span>EndRotamer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned char*&gt;::iterator EndRotamer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3f0fbaf701b38d36aaa0a225de04841d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f0fbaf701b38d36aaa0a225de04841d">&sect;&nbsp;</a></span>CreateConformerList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; double * &gt; CreateConformerList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a conformer list using the internal base set of coordinates. </p>
<dl class="section return"><dt>Returns</dt><dd>The set of coordinates by rotating the bonds in each rotamer </dd></dl>

</div>
</div>
<a id="abe1bdcf71f1f6ae8263de2a0a0d5ada3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe1bdcf71f1f6ae8263de2a0a0d5ada3">&sect;&nbsp;</a></span>ExpandConformerList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ExpandConformerList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; double *&gt; &amp;&#160;</td>
          <td class="paramname"><em>confs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a conformer list using the internal base set of coordinates. </p>
<dl class="section return"><dt>Returns</dt><dd>The set of coordinates as a reference in <code>confs</code> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a6af0e090e596e74f00ff0f9347d143a7">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a9084f759abbf98766f3fed69c14b568a">OBConformerSearch::Setup()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#abf19a37194fdf234f4fcbe6b8616d2ff">OBForceField::SystematicRotorSearchInitialize()</a>.</p>

</div>
</div>
<a id="a769b901b37f0d05c32169473653d639a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a769b901b37f0d05c32169473653d639a">&sect;&nbsp;</a></span>SetCurrentCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetCurrentCoordinates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt;&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Change the current coordinate set </p><dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a61c5a147dfccff2c6c3c3c37dbeda28a">OBForceField::FastRotorSearch()</a>, <a class="el" href="namespaceOpenBabel.shtml#afa641f7ef2f87464db0231f320116ecb">OpenBabel::UpdateConformersFromTree()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a308e084198342c54de6f1fb695f23a6d">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div>
<a id="a91c3efe37db1542a2f553440143915f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91c3efe37db1542a2f553440143915f9">&sect;&nbsp;</a></span>SetBaseCoordinateSets() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetBaseCoordinateSets </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copies the mol's conformers (the coordinates, NOT the pointers) into the object as base coordinates. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a61c5a147dfccff2c6c3c3c37dbeda28a">OBForceField::FastRotorSearch()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a6af0e090e596e74f00ff0f9347d143a7">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a9084f759abbf98766f3fed69c14b568a">OBConformerSearch::Setup()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#abf19a37194fdf234f4fcbe6b8616d2ff">OBForceField::SystematicRotorSearchInitialize()</a>, <a class="el" href="namespaceOpenBabel.shtml#afa641f7ef2f87464db0231f320116ecb">OpenBabel::UpdateConformersFromTree()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a308e084198342c54de6f1fb695f23a6d">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div>
<a id="a9505348a751e84dd12df813ad8e239aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9505348a751e84dd12df813ad8e239aa">&sect;&nbsp;</a></span>SetBaseCoordinateSets() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetBaseCoordinateSets </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; double *&gt;&#160;</td>
          <td class="paramname"><em>bc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>N</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the coordinates in bc, NOT the pointers, into this object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bc</td><td>The conformer set for the molecule </td></tr>
    <tr><td class="paramname">N</td><td>The number of atoms in the molecule </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="adc7ea5c9356d1597bec2d328bcdc3b07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc7ea5c9356d1597bec2d328bcdc3b07">&sect;&nbsp;</a></span>NumBaseCoordinateSets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumBaseCoordinateSets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of "base" coordinate sets (i.e., the number of conformers in the base <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>) </dd></dl>

</div>
</div>
<a id="ae59bb16c36669c064faee0ff91b3a422"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae59bb16c36669c064faee0ff91b3a422">&sect;&nbsp;</a></span>GetBaseCoordinateSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double* GetBaseCoordinateSet </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a pointer to a specific base pointer (i.e., specific conformer) </p>

</div>
</div>
<a id="a2f0695eb7d6ff6321032d88655ae8d25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f0695eb7d6ff6321032d88655ae8d25">&sect;&nbsp;</a></span>NumAtoms()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of atoms in the base <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> </dd></dl>

</div>
</div>
<a id="aae3d15983201a2a115701b2c538fef77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae3d15983201a2a115701b2c538fef77">&sect;&nbsp;</a></span>SetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the attribute (key), which can be used to retrieve this data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="a45613e34598a9584fb0120ef3fdab9e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45613e34598a9584fb0120ef3fdab9e0">&sect;&nbsp;</a></span>SetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the origin of this data, which can be used to filter the data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="ac61fc66ef692e79290d6eaf7231db92c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac61fc66ef692e79290d6eaf7231db92c">&sect;&nbsp;</a></span>GetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a632be87a51811b515f7e9a5fc18e4476">OpenBabel::extract_thermochemistry()</a>, and <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div>
<a id="a91834e24b299c63cdf2cb77795298446"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91834e24b299c63cdf2cb77795298446">&sect;&nbsp;</a></span>GetDataType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a id="a6145f0df06364b6d58c728368db8f992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6145f0df06364b6d58c728368db8f992">&sect;&nbsp;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base class returns a default value (the attribute type) but should never be called. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBPairData.shtml#a6145f0df06364b6d58c728368db8f992">OBPairData</a>, and <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#a6145f0df06364b6d58c728368db8f992">OBCommentData</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>.</p>

</div>
</div>
<a id="adf131b210114ba636246ffc8dcb2ea13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf131b210114ba636246ffc8dcb2ea13">&sect;&nbsp;</a></span>GetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="adceb77134f15418a66cf1124dcef1b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adceb77134f15418a66cf1124dcef1b51">&sect;&nbsp;</a></span>_attr</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _attr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute tag (e.g., "UnitCell", "Comment" or "Author") </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a31291823d487a4a47f24aae5870505ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31291823d487a4a47f24aae5870505ef">&sect;&nbsp;</a></span>_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute type &ndash; declared for each subclass </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a239606b62a534e4df7626ea0cfdfb856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a239606b62a534e4df7626ea0cfdfb856">&sect;&nbsp;</a></span>_source</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> _source</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>source of data for accounting </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#a7c2db1828edcca7ff07c8591744ec3a4">OBConformerData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#ae1e415e9a406f4965be7352a3c66fa3a">OBSymmetryData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#ab526e7eddb908b711e19aa355d133241">OBTorsionData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#af0af03b552fac05db59787be08a443eb">OBAngleData::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#a2d8a571296610389b9427aef139b1d8d">OBChiralData::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="rotamer_8h_source.shtml">rotamer.h</a></li>
<li><a class="el" href="rotamer_8cpp.shtml">rotamer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
