<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>FilteringInputStreambuf&lt; Extractor &gt; Class Template Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml">FilteringInputStreambuf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1FilteringInputStreambuf-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FilteringInputStreambuf&lt; Extractor &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="lineend_8h_source.shtml">openbabel/lineend.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for FilteringInputStreambuf&lt; Extractor &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1FilteringInputStreambuf.png" usemap="#FilteringInputStreambuf_3C_20Extractor_20_3E_map" alt=""/>
  <map id="FilteringInputStreambuf_3C_20Extractor_20_3E_map" name="FilteringInputStreambuf&lt; Extractor &gt;_map">
<area href="classOpenBabel_1_1FilteringInputStream.shtml" title="A stream interface for FilteringInputStreambuf. " alt="FilteringInputStream&lt; Extractor &gt;" shape="rect" coords="0,112,217,136"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afa9d7f6189d4bbc86e0f1bd6f752aa3b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#afa9d7f6189d4bbc86e0f1bd6f752aa3b">FilteringInputStreambuf</a> (std::istream *source=NULL)</td></tr>
<tr class="separator:afa9d7f6189d4bbc86e0f1bd6f752aa3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a848f7550d0280c87631b47f76c715013"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a848f7550d0280c87631b47f76c715013">~FilteringInputStreambuf</a> ()</td></tr>
<tr class="separator:a848f7550d0280c87631b47f76c715013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71cbc6b1ec560d3788dac4c02e9328da"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a71cbc6b1ec560d3788dac4c02e9328da">overflow</a> (int)</td></tr>
<tr class="separator:a71cbc6b1ec560d3788dac4c02e9328da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a175cdf589e167db22f30ccacdf98e007"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a175cdf589e167db22f30ccacdf98e007">underflow</a> ()</td></tr>
<tr class="separator:a175cdf589e167db22f30ccacdf98e007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a553fc1343cc7a747775864d1d124a5d5"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a553fc1343cc7a747775864d1d124a5d5">sync</a> ()</td></tr>
<tr class="separator:a553fc1343cc7a747775864d1d124a5d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea680f1e3476af107476e375aaac4b6d"><td class="memItemLeft" align="right" valign="top">virtual std::streampos&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#aea680f1e3476af107476e375aaac4b6d">seekoff</a> (std::streamoff off, std::ios_base::seekdir way, std::ios_base::openmode which=std::ios_base::in|std::ios_base::out)</td></tr>
<tr class="separator:aea680f1e3476af107476e375aaac4b6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f073109a0b2c593a7c63967869c366d"><td class="memItemLeft" align="right" valign="top">virtual std::streampos&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a9f073109a0b2c593a7c63967869c366d">seekpos</a> (std::streampos sp, std::ios_base::openmode which=std::ios_base::in|std::ios_base::out)</td></tr>
<tr class="separator:a9f073109a0b2c593a7c63967869c366d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a16737c21975ce1c3bdfc87ca9ad915"><td class="memItemLeft" align="right" valign="top">std::istream *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a5a16737c21975ce1c3bdfc87ca9ad915">GetSource</a> () const</td></tr>
<tr class="separator:a5a16737c21975ce1c3bdfc87ca9ad915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1c2a8c1ce327ff535bddaed49f1cbc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#acc1c2a8c1ce327ff535bddaed49f1cbc">SetSource</a> (std::istream *newsource)</td></tr>
<tr class="separator:acc1c2a8c1ce327ff535bddaed49f1cbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class Extractor&gt;<br />
class OpenBabel::FilteringInputStreambuf&lt; Extractor &gt;</h3>

<p>Delivers characters from an istream or streambuf from a source while filtering. </p>
<p>Based on an article by James Kanze, "Filtering Streambufs" <a href="http://kanze.james.neuf.fr/articles/fltrsbf1.html">http://kanze.james.neuf.fr/articles/fltrsbf1.html</a></p>
<p>A <a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml" title="Delivers characters from an istream or streambuf from a source while filtering. ">FilteringInputStreambuf</a> delivers characters on request to an istream or a destination rdbuf(). It receives them from a source rdbuf. In doing the transfer it filters them in a way decided by the class specified in template parameter Extractor.</p>
<p>seekg and tellg requests from the stream are passed through to source rdbuf. This allows return to a position in the input data that was previously noted. This is adequate to allow <a class="el" href="namespaceOpenBabel.shtml" title="Global namespace for all Open Babel code. ">OpenBabel</a>'s fastsearch indexing, but may not be good enough for some other applications that use random access.</p>
<p>A class <a class="el" href="classOpenBabel_1_1LineEndingExtractor.shtml" title="Replaces CRLF (DOS) and CR (Mac OS 9) line endings by LF (POSIX) ">LineEndingExtractor</a> converts DOS and MAC line endings to the UNIX line ending.</p>
<p>This filtering process is potentially extendable, with a chain of FilteringInputStreambufs each carrying out its filtering task. For instance a decompression streambuf could feed a LineEnding filter, which in tern was read by an input stream. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="afa9d7f6189d4bbc86e0f1bd6f752aa3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa9d7f6189d4bbc86e0f1bd6f752aa3b">&sect;&nbsp;</a></span>FilteringInputStreambuf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml">FilteringInputStreambuf</a> </td>
          <td>(</td>
          <td class="paramtype">std::istream *&#160;</td>
          <td class="paramname"><em>source</em> = <code>NULL</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a848f7550d0280c87631b47f76c715013"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a848f7550d0280c87631b47f76c715013">&sect;&nbsp;</a></span>~FilteringInputStreambuf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml">FilteringInputStreambuf</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a71cbc6b1ec560d3788dac4c02e9328da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71cbc6b1ec560d3788dac4c02e9328da">&sect;&nbsp;</a></span>overflow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int overflow </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a175cdf589e167db22f30ccacdf98e007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a175cdf589e167db22f30ccacdf98e007">&sect;&nbsp;</a></span>underflow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int underflow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a71cbc6b1ec560d3788dac4c02e9328da">FilteringInputStreambuf&lt; Extractor &gt;::overflow()</a>.</p>

</div>
</div>
<a id="a553fc1343cc7a747775864d1d124a5d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a553fc1343cc7a747775864d1d124a5d5">&sect;&nbsp;</a></span>sync()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a71cbc6b1ec560d3788dac4c02e9328da">FilteringInputStreambuf&lt; Extractor &gt;::overflow()</a>.</p>

</div>
</div>
<a id="aea680f1e3476af107476e375aaac4b6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea680f1e3476af107476e375aaac4b6d">&sect;&nbsp;</a></span>seekoff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::streampos seekoff </td>
          <td>(</td>
          <td class="paramtype">std::streamoff&#160;</td>
          <td class="paramname"><em>off</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ios_base::seekdir&#160;</td>
          <td class="paramname"><em>way</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ios_base::openmode&#160;</td>
          <td class="paramname"><em>which</em> = <code>std::ios_base::in&#160;|&#160;std::ios_base::out</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f073109a0b2c593a7c63967869c366d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f073109a0b2c593a7c63967869c366d">&sect;&nbsp;</a></span>seekpos()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::streampos seekpos </td>
          <td>(</td>
          <td class="paramtype">std::streampos&#160;</td>
          <td class="paramname"><em>sp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ios_base::openmode&#160;</td>
          <td class="paramname"><em>which</em> = <code>std::ios_base::in&#160;|&#160;std::ios_base::out</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a16737c21975ce1c3bdfc87ca9ad915"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a16737c21975ce1c3bdfc87ca9ad915">&sect;&nbsp;</a></span>GetSource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::istream* GetSource </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns current source. </p>

</div>
</div>
<a id="acc1c2a8c1ce327ff535bddaed49f1cbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc1c2a8c1ce327ff535bddaed49f1cbc">&sect;&nbsp;</a></span>SetSource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSource </td>
          <td>(</td>
          <td class="paramtype">std::istream *&#160;</td>
          <td class="paramname"><em>newsource</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Changes the source. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="lineend_8h_source.shtml">lineend.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
