<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>generic.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">generic.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="generic_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">generic.h - Handle generic data classes. Custom data for atoms, bonds, etc.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2010 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_GENERIC_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_GENERIC_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="spacegroup_8h.shtml">openbabel/math/spacegroup.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="obutil_8h.shtml">openbabel/obutil.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml">openbabel/base.h</a>&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="comment">// Forward declarations</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">class </span>OBBase;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">class </span>OBAtom;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keyword">class </span>OBBond;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">class </span>OBMol;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keyword">class </span>OBRing;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBCommentData.shtml">   45</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBCommentData.shtml">OBCommentData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBCommentData.shtml#abfcfad17c10b3bb5b39412d927518e43">   48</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBCommentData.shtml#abfcfad17c10b3bb5b39412d927518e43">_data</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classOpenBabel_1_1OBCommentData.shtml">OBCommentData</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classOpenBabel_1_1OBCommentData.shtml">OBCommentData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBCommentData.shtml">OBCommentData</a>&amp;);</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBCommentData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">   52</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBCommentData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBCommentData.shtml">OBCommentData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classOpenBabel_1_1OBCommentData.shtml">OBCommentData</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBCommentData.shtml">OBCommentData</a> &amp;src);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBCommentData.shtml#a71ec30c014852fe90aed06daa76e378b">   56</a></span>&#160;    <span class="keywordtype">void</span>          <a class="code" href="classOpenBabel_1_1OBCommentData.shtml#a71ec30c014852fe90aed06daa76e378b">SetData</a>(<span class="keyword">const</span> std::string &amp;data)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    { _data = data; <a class="code" href="namespaceOpenBabel.shtml#ae8d9d7dd615b5fa7b533c075fe744d8f">Trim</a>(_data); }</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBCommentData.shtml#a0f90c3ff45f5d9a13c71f46dba0770e5">   58</a></span>&#160;    <span class="keywordtype">void</span>          <a class="code" href="classOpenBabel_1_1OBCommentData.shtml#a0f90c3ff45f5d9a13c71f46dba0770e5">SetData</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *d)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {_data = d; <a class="code" href="namespaceOpenBabel.shtml#ae8d9d7dd615b5fa7b533c075fe744d8f">Trim</a>(_data);     }</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBCommentData.shtml#a181123deb29bb853771bb72608c7e81b">   60</a></span>&#160;    <span class="keyword">const</span> std::string &amp;<a class="code" href="classOpenBabel_1_1OBCommentData.shtml#a181123deb29bb853771bb72608c7e81b">GetData</a>()<span class="keyword">              const</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">    </span>{        <span class="keywordflow">return</span>(_data);      }</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBCommentData.shtml#a6145f0df06364b6d58c728368db8f992">   62</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> std::string &amp;<a class="code" href="classOpenBabel_1_1OBCommentData.shtml#a6145f0df06364b6d58c728368db8f992">GetValue</a>()<span class="keyword">              const</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">    </span>{        <span class="keywordflow">return</span>(_data);      }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  };</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml">   69</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml">OBExternalBond</a></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">int</span>     _idx;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *_atom;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *_bond;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#aa3e2d107afd3e69aee9bf52b47d1444c">   75</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#aa3e2d107afd3e69aee9bf52b47d1444c">OBExternalBond</a>(): _idx(0), _atom(NULL), _bond(NULL) {}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml">OBExternalBond</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *,<a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *,<span class="keywordtype">int</span>);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml">OBExternalBond</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml">OBExternalBond</a> &amp;);</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#a359543c25a72cf7a9ab33ab75b9b5f1e">   78</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#a359543c25a72cf7a9ab33ab75b9b5f1e">~OBExternalBond</a>()   {}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#a141f8abda99de827deec22f935dc9e31">   80</a></span>&#160;    <span class="keywordtype">int</span>     <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#a141f8abda99de827deec22f935dc9e31">GetIdx</a>()<span class="keyword">  const    </span>{        <span class="keywordflow">return</span>(_idx);    }</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#aa50dcd20da6bba326a2f820ded0c1b19">   81</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#aa50dcd20da6bba326a2f820ded0c1b19">GetAtom</a>()<span class="keyword"> const    </span>{        <span class="keywordflow">return</span>(_atom);   }</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#a61f7b16bfa66a44e7092b0605157ca10">   82</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *<a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#a61f7b16bfa66a44e7092b0605157ca10">GetBond</a>()<span class="keyword"> const    </span>{        <span class="keywordflow">return</span>(_bond);   }</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#ab994a975e39f5c62288f4f972b6f90c9">   83</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#ab994a975e39f5c62288f4f972b6f90c9">SetIdx</a>(<span class="keywordtype">int</span> idx)       {        _idx = idx;      }</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#a84cdb57aaf88aa0a94f4f4a1dd0f0252">   84</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#a84cdb57aaf88aa0a94f4f4a1dd0f0252">SetAtom</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) {        _atom = atom;    }</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBond.shtml#a75c73979e73fb44e48424150fa0208c7">   85</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBExternalBond.shtml#a75c73979e73fb44e48424150fa0208c7">SetBond</a>(<a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond) {        _bond = bond;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  };</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBondData.shtml">   90</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBExternalBondData.shtml">OBExternalBondData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBondData.shtml#a8b0c5550b7332d65d1c285004891cff2">   93</a></span>&#160;    std::vector&lt;OBExternalBond&gt; <a class="code" href="classOpenBabel_1_1OBExternalBondData.shtml#a8b0c5550b7332d65d1c285004891cff2">_vexbnd</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="classOpenBabel_1_1OBExternalBondData.shtml">OBExternalBondData</a>();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">//Copying is not used and too much work to set up</span></div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBondData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">   98</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBExternalBondData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> NULL;}</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*,<a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>*,<span class="keywordtype">int</span>);</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBExternalBondData.shtml#a11f9065de21b2a826607337504954584">  101</a></span>&#160;    std::vector&lt;OBExternalBond&gt; *<a class="code" href="classOpenBabel_1_1OBExternalBondData.shtml#a11f9065de21b2a826607337504954584">GetData</a>()</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span>(&amp;_vexbnd);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  };</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairData.shtml">  112</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBPairData.shtml">OBPairData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairData.shtml#a366a2531a9485fdfb2f6abbe528d99e1">  115</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBPairData.shtml#a366a2531a9485fdfb2f6abbe528d99e1">_value</a>; </div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classOpenBabel_1_1OBPairData.shtml">OBPairData</a>();</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  118</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBPairData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">      </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBPairData.shtml">OBPairData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairData.shtml#aef706f61b8b25bb7de414f46bbe317b3">  120</a></span>&#160;    <span class="keywordtype">void</span>    <a class="code" href="classOpenBabel_1_1OBPairData.shtml#aef706f61b8b25bb7de414f46bbe317b3">SetValue</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *v)        {      _value = v;    }</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairData.shtml#a36b6ff14e0bae8e56e4637ab727fc8cb">  121</a></span>&#160;    <span class="keywordtype">void</span>    <a class="code" href="classOpenBabel_1_1OBPairData.shtml#a36b6ff14e0bae8e56e4637ab727fc8cb">SetValue</a>(<span class="keyword">const</span> std::string &amp;v) {      _value = v;    }</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairData.shtml#a6145f0df06364b6d58c728368db8f992">  122</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> std::string &amp;<a class="code" href="classOpenBabel_1_1OBPairData.shtml#a6145f0df06364b6d58c728368db8f992">GetValue</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">    </span>{      <span class="keywordflow">return</span>(_value);    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  };</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">// More detailed description in generic.cpp</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> ValueT&gt;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairTemplate.shtml">  130</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml">OBPairTemplate</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> <span class="comment">// Note: no OBAPI should be used</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairTemplate.shtml#a8e244c63178d867c1294ea6011dc73ff">  133</a></span>&#160;    ValueT <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml#a8e244c63178d867c1294ea6011dc73ff">_value</a>; </div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairTemplate.shtml#abbe664b8fa3b004481772438aa0c1e8c">  135</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml#abbe664b8fa3b004481772438aa0c1e8c">OBPairTemplate</a>():</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;PairData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a">PairData</a>) {};</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairTemplate.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  137</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keyword">      </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml">OBPairTemplate&lt;ValueT&gt;</a>(*this);}</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairTemplate.shtml#a8525d460be3e43a8e605d854a2c9e246">  139</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml#a8525d460be3e43a8e605d854a2c9e246">SetValue</a>(<span class="keyword">const</span> ValueT t)             { _value = t;     }</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairTemplate.shtml#ac95dfe161401ea01bb343f4ca680078d">  140</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> ValueT &amp;<a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml#ac95dfe161401ea01bb343f4ca680078d">GetGenericValue</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span>(_value); }</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBPairTemplate.shtml#a3073ff7ccf70074e0f6d12feca08be41">  141</a></span>&#160;    <span class="keyword">const</span> ValueT &amp;<a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml#a3073ff7ccf70074e0f6d12feca08be41">GetGenericValueDef</a>(<span class="keyword">const</span> ValueT &amp;def_val)<span class="keyword"> const</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">    </span>{ </div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordflow">if</span>(<span class="keyword">this</span> == NULL)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span> def_val;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordflow">else</span>      </div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> GetGenericValue(); </div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  };</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a0bdf8334aad62a6bb7ad50f58060c9b6">  151</a></span>&#160;  <span class="keyword">typedef</span> <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml">OBPairTemplate&lt;int&gt;</a>     <a class="code" href="namespaceOpenBabel.shtml#a0bdf8334aad62a6bb7ad50f58060c9b6">OBPairInteger</a>;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a5ba6d4475315df1100427dc98074c087">  153</a></span>&#160;  <span class="keyword">typedef</span> <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml">OBPairTemplate&lt;double&gt;</a>  <a class="code" href="namespaceOpenBabel.shtml#a5ba6d4475315df1100427dc98074c087">OBPairFloatingPoint</a>;</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a292afe6930530f12172ef452712fc5e3">  155</a></span>&#160;  <span class="keyword">typedef</span> <a class="code" href="classOpenBabel_1_1OBPairTemplate.shtml">OBPairTemplate&lt;bool&gt;</a>    <a class="code" href="namespaceOpenBabel.shtml#a292afe6930530f12172ef452712fc5e3">OBPairBool</a>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml">  160</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBSetData.shtml">OBSetData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#ae4896f79700c8d654fc8f7dcef4eb30a">  163</a></span>&#160;    std::vector&lt;OBGenericData *&gt; <a class="code" href="classOpenBabel_1_1OBSetData.shtml#ae4896f79700c8d654fc8f7dcef4eb30a">_vdata</a>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#a1998d348b757cd3146c83750f00d8c8a">  165</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OBSetData.shtml#a1998d348b757cd3146c83750f00d8c8a">OBSetData</a>() : <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;SetData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>) {}</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  166</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBSetData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBSetData.shtml">OBSetData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#a3e36d0e80af7574cee4f2240b8f372dd">  169</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBSetData.shtml#a3e36d0e80af7574cee4f2240b8f372dd">AddData</a>(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">if</span>(d)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;          _vdata.push_back(d);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#a843f5ca9523fa7c3ecd22eb3f87a207d">  178</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBSetData.shtml#a843f5ca9523fa7c3ecd22eb3f87a207d">SetData</a>(std::vector&lt;OBGenericData *&gt; &amp;vdata)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      _vdata = vdata;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#a74418cc8cd2b2a72f8e1778b0cd58a48">  184</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *<a class="code" href="classOpenBabel_1_1OBSetData.shtml#a74418cc8cd2b2a72f8e1778b0cd58a48">GetData</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *s)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      std::vector&lt;OBGenericData*&gt;::iterator i;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordflow">for</span> (i = _vdata.begin();i != _vdata.end();++i)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">if</span> ((*i)-&gt;GetAttribute() == s)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          <span class="keywordflow">return</span>(*i);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordflow">return</span>(NULL);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#ac1fc78db5080260be71f604ee5bbfcd2">  196</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *<a class="code" href="classOpenBabel_1_1OBSetData.shtml#ac1fc78db5080260be71f604ee5bbfcd2">GetData</a>(<span class="keyword">const</span> std::string &amp;s)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      std::vector&lt;OBGenericData*&gt;::iterator i;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordflow">for</span> (i = _vdata.begin();i != _vdata.end();++i)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">if</span> ((*i)-&gt;GetAttribute() == s)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          <span class="keywordflow">return</span>(*i);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordflow">return</span>(NULL);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#a206596836060899943e2c60406ef8300">  208</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> std::vector&lt;OBGenericData *&gt; &amp;<a class="code" href="classOpenBabel_1_1OBSetData.shtml#a206596836060899943e2c60406ef8300">GetData</a>() const <span class="comment">//now virtual and const</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;      <span class="keywordflow">return</span>(_vdata);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#a2dd0afcc5538601c2a39a3b7871faff2">  214</a></span>&#160;    std::vector&lt;OBGenericData*&gt;::iterator <a class="code" href="classOpenBabel_1_1OBSetData.shtml#a2dd0afcc5538601c2a39a3b7871faff2">GetBegin</a>()</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">return</span> _vdata.begin();</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      }</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#ae26106f464c8cb2959a7705a606f7da0">  220</a></span>&#160;    std::vector&lt;OBGenericData*&gt;::iterator <a class="code" href="classOpenBabel_1_1OBSetData.shtml#ae26106f464c8cb2959a7705a606f7da0">GetEnd</a>()</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">return</span> _vdata.end();</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSetData.shtml#ace768b2c55b1d16a47b8fdcda84515ea">  226</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBSetData.shtml#ace768b2c55b1d16a47b8fdcda84515ea">DeleteData</a>(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *gd)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      std::vector&lt;OBGenericData*&gt;::iterator i;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordflow">for</span> (i = _vdata.begin();i != _vdata.end();++i)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">if</span> (*i == gd)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;          {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keyword">delete</span> *i;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            _vdata.erase(i);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">break</span>; <span class="comment">// Done, don&#39;t do anything more, since iterator is invalid</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;          }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  }; <span class="comment">// OBSetData</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml">  243</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml">OBVirtualBond</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#aeb2c09a43f4c8b6256dbed5faf85d768">  246</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#aeb2c09a43f4c8b6256dbed5faf85d768">_bgn</a>;</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#abb406f6b7d63af84fda76dbcdbac66c5">  247</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#abb406f6b7d63af84fda76dbcdbac66c5">_end</a>;</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#af7c67fda80d169e7af68407f88740499">  248</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#af7c67fda80d169e7af68407f88740499">_ord</a>;</div><div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#aa753c6ca5d794e055f8b4b590c6ba538">  249</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#aa753c6ca5d794e055f8b4b590c6ba538">_stereo</a>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml">OBVirtualBond</a>();</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  252</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml">OBVirtualBond</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml">OBVirtualBond</a>(<span class="keywordtype">int</span>,<span class="keywordtype">int</span>,<span class="keywordtype">int</span>,<span class="keywordtype">int</span> stereo=0);</div><div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#a064aa6b502655795918788af438b0208">  254</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#a064aa6b502655795918788af438b0208">GetBgn</a>()    {      <span class="keywordflow">return</span>(_bgn);    }</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#afc186d85b94bae6548e433324215fff6">  255</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#afc186d85b94bae6548e433324215fff6">GetEnd</a>()    {      <span class="keywordflow">return</span>(_end);    }</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#aeaca5975b0354f81d10792199fee7d4d">  256</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#aeaca5975b0354f81d10792199fee7d4d">GetOrder</a>()  {      <span class="keywordflow">return</span>(_ord);    }</div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVirtualBond.shtml#a9695376d762d4fd2b12da6f51a99fb92">  257</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBVirtualBond.shtml#a9695376d762d4fd2b12da6f51a99fb92">GetStereo</a>() {      <span class="keywordflow">return</span>(_stereo); }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  };</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml">  262</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBRingData.shtml">OBRingData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml#a2da396a9610e4fd1218b885407375568">  265</a></span>&#160;    std::vector&lt;OBRing*&gt; <a class="code" href="classOpenBabel_1_1OBRingData.shtml#a2da396a9610e4fd1218b885407375568">_vr</a>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="classOpenBabel_1_1OBRingData.shtml">OBRingData</a>();</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="classOpenBabel_1_1OBRingData.shtml">OBRingData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBRingData.shtml">OBRingData</a> &amp;);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="comment">// When copying a molecule, don&#39;t copy the RingData. Why not? Well,</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="comment">// if you do, you&#39;ll end up with two RingDatas because one will already</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="comment">// exist due to Kekulize() in EndModify() in operator= in OBMol. Having</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="comment">// more than one RingData causes problems as one of them can become invalid</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">// and cause segfaults.</span></div><div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  274</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBRingData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> NULL;}</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    ~<a class="code" href="classOpenBabel_1_1OBRingData.shtml">OBRingData</a>();</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="classOpenBabel_1_1OBRingData.shtml">OBRingData</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBRingData.shtml">OBRingData</a> &amp;);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml#a1d0de5369a163c62b547a0faf5f599c1">  279</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBRingData.shtml#a1d0de5369a163c62b547a0faf5f599c1">SetData</a>(std::vector&lt;OBRing*&gt; &amp;vr)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    {</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      _vr = vr;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml#a120222dc719c5f6a711770dce699535b">  283</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBRingData.shtml#a120222dc719c5f6a711770dce699535b">PushBack</a>(<a class="code" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> *r)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      _vr.push_back(r);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml#a45043bd4256fcf9d62e0cb45e024c466">  287</a></span>&#160;    std::vector&lt;OBRing*&gt; &amp;<a class="code" href="classOpenBabel_1_1OBRingData.shtml#a45043bd4256fcf9d62e0cb45e024c466">GetData</a>()</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      {</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">return</span>(_vr);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml#aa1a05257821a8156625beabb7dd58e0b">  292</a></span>&#160;    std::vector&lt;OBRing*&gt;::iterator <a class="code" href="classOpenBabel_1_1OBRingData.shtml#aa1a05257821a8156625beabb7dd58e0b">BeginRings</a>()</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      { <span class="keywordflow">return</span>(_vr.begin()); }</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRingData.shtml#a07ad405727c652a6a280d821b9d1ac47">  294</a></span>&#160;    std::vector&lt;OBRing*&gt;::iterator <a class="code" href="classOpenBabel_1_1OBRingData.shtml#a07ad405727c652a6a280d821b9d1ac47">EndRings</a>()</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      { <span class="keywordflow">return</span>(_vr.end()); }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <a class="code" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> *BeginRing(std::vector&lt;OBRing*&gt;::iterator &amp;i);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> *NextRing(std::vector&lt;OBRing*&gt;::iterator &amp;i);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  };</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml">  304</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4">  307</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> { <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4">Undefined</a>,</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7">  308</a></span>&#160;                       <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7">Triclinic</a>,</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff">  309</a></span>&#160;                       <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff">Monoclinic</a>,</div><div class="line"><a name="l00310"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8">  310</a></span>&#160;                       <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8">Orthorhombic</a>,</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21">  311</a></span>&#160;                       <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21">Tetragonal</a>,</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a67f25c654b88f3bdcb76dd7a853f1296">  312</a></span>&#160;                       Rhombohedral ,</div><div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b">  313</a></span>&#160;                       <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b">Hexagonal</a>,</div><div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a7105ea83819b1af6af85747e20b462b4">  314</a></span>&#160;                       Cubic};</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a8d02fbc6c58e1abe5c8043f1253f6ab9">  318</a></span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a8d02fbc6c58e1abe5c8043f1253f6ab9">_mOrtho</a>;<span class="comment">// Orthogonal matrix of column vectors</span></div><div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a2497d0bb15408f8670722631fd8d90b8">  319</a></span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a2497d0bb15408f8670722631fd8d90b8">_mOrient</a>;<span class="comment">// Orientation matrix</span></div><div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a4e04f720581a30502f781e620fb56af6">  320</a></span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a4e04f720581a30502f781e620fb56af6">_offset</a>;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a2f7186c492d40a6b69092700ff8aee83">  321</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a2f7186c492d40a6b69092700ff8aee83">_spaceGroupName</a>;</div><div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a9c98685360a568cd4473b1931e2765d8">  322</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a9c98685360a568cd4473b1931e2765d8">_spaceGroup</a>;</div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a474459fcdeb63c82700a345e59330645">  323</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a474459fcdeb63c82700a345e59330645">_lattice</a>;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a>();</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;);</div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  328</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keyword">    </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a29eaffe421897707aa12103bec99d3c9">  330</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a29eaffe421897707aa12103bec99d3c9">~OBUnitCell</a>()    {}</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<span class="keyword">const</span> <span class="keywordtype">double</span> a, <span class="keyword">const</span> <span class="keywordtype">double</span> b, <span class="keyword">const</span> <span class="keywordtype">double</span> c,</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                 <span class="keyword">const</span> <span class="keywordtype">double</span> alpha, <span class="keyword">const</span> <span class="keywordtype">double</span> beta, <span class="keyword">const</span> <span class="keywordtype">double</span> gamma);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> v1, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> v2, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> v3);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> m);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordtype">void</span> SetOffset(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> v1);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ac6f21a0fb4b93bb99f210559a1a6d7d7">  366</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ac6f21a0fb4b93bb99f210559a1a6d7d7">SetSpaceGroup</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* sg) { _spaceGroup = sg; }</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a76ccdf2ccfbefae104ff52932dcf11c1">  371</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a76ccdf2ccfbefae104ff52932dcf11c1">SetSpaceGroup</a>(<span class="keyword">const</span> std::string sg) { _spaceGroup = <a class="code" href="classOpenBabel_1_1SpaceGroup.shtml#a2787ce8a302b665bc4f059670f2e68ca">SpaceGroup::GetSpaceGroup</a> (sg);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                                               _spaceGroupName = sg; }</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ae0d7e7ddcd3c5e3c48c6b24908d8404f">  379</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae0d7e7ddcd3c5e3c48c6b24908d8404f">SetSpaceGroup</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> sg) { _spaceGroup = <a class="code" href="classOpenBabel_1_1SpaceGroup.shtml#a2787ce8a302b665bc4f059670f2e68ca">SpaceGroup::GetSpaceGroup</a> (sg); }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a6516b3a121b34a94e19201da06104afa">  382</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a6516b3a121b34a94e19201da06104afa">SetLatticeType</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> lt) { _lattice = lt; }</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keywordtype">void</span> FillUnitCell(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *);</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordtype">double</span> GetA();</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordtype">double</span> GetA() <span class="keyword">const</span>;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordtype">double</span> GetB();</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordtype">double</span> GetB() <span class="keyword">const</span>;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordtype">double</span> GetC();</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keywordtype">double</span> GetC() <span class="keyword">const</span>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordtype">double</span> GetAlpha();</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordtype">double</span> GetAlpha() <span class="keyword">const</span>;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordtype">double</span> GetBeta();</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordtype">double</span> GetBeta() <span class="keyword">const</span>;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordtype">double</span> GetGamma();</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keywordtype">double</span> GetGamma() <span class="keyword">const</span>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetOffset();</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetOffset() <span class="keyword">const</span>;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a81676bc2dbd807644f7d5acd1b1a2dc9">  413</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a81676bc2dbd807644f7d5acd1b1a2dc9">GetSpaceGroup</a>() { <span class="keywordflow">return</span>(_spaceGroup); }</div><div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#ab095c8d5b34f45a89234da38eb87371b">  414</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ab095c8d5b34f45a89234da38eb87371b">GetSpaceGroup</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(_spaceGroup); }</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a22dbea225bd03af66ef0db074cff402e">  417</a></span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a22dbea225bd03af66ef0db074cff402e">GetSpaceGroupName</a>() { <span class="keywordflow">return</span>(_spaceGroupName); }</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBUnitCell.shtml#a6b16714ce2c29cfda0cd0094a874052f">  418</a></span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#a6b16714ce2c29cfda0cd0094a874052f">GetSpaceGroupName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(_spaceGroupName); }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> GetLatticeType( <span class="keywordtype">int</span> spacegroup );</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> GetLatticeType( <span class="keywordtype">int</span> spacegroup ) <span class="keyword">const</span>;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> GetLatticeType();</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <a class="code" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> GetLatticeType() <span class="keyword">const</span>;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    std::vector&lt;vector3&gt; GetCellVectors();</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    std::vector&lt;vector3&gt; GetCellVectors() <span class="keyword">const</span>;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>   GetCellMatrix();</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>   GetCellMatrix() <span class="keyword">const</span>;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrthoMatrix();</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrthoMatrix() <span class="keyword">const</span>;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrientationMatrix();</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrientationMatrix() <span class="keyword">const</span>;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetFractionalMatrix();</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetFractionalMatrix() <span class="keyword">const</span>;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> FractionalToCartesian(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> FractionalToCartesian(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac) <span class="keyword">const</span>;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> CartesianToFractional(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> CartesianToFractional(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart) <span class="keyword">const</span>;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapCartesianCoordinate(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapCartesianCoordinate(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart) <span class="keyword">const</span>;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapFractionalCoordinate(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapFractionalCoordinate(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac) <span class="keyword">const</span>;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keywordtype">int</span> GetSpaceGroupNumber( std::string name = <span class="stringliteral">&quot;&quot;</span> );</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keywordtype">int</span> GetSpaceGroupNumber( std::string name = <span class="stringliteral">&quot;&quot;</span> ) <span class="keyword">const</span>;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keywordtype">double</span> GetCellVolume();</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keywordtype">double</span> GetCellVolume() <span class="keyword">const</span>;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  };</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml">  511</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerData.shtml">OBConformerData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;  {</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a6c0b393e8fabed75f977c2ef2e9776b4">  515</a></span>&#160;    std::vector&lt;unsigned short&gt;              <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a6c0b393e8fabed75f977c2ef2e9776b4">_vDimension</a>;</div><div class="line"><a name="l00517"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#ad069a68962fcc260bd3d4a1f4fc37fcb">  517</a></span>&#160;    std::vector&lt;double&gt;                      <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#ad069a68962fcc260bd3d4a1f4fc37fcb">_vEnergies</a>;</div><div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a89ef302474a75b75e95f99892462da96">  519</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a89ef302474a75b75e95f99892462da96">_vForces</a>;</div><div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#ac6c0bfd74d984fed427c1ced49acef5a">  521</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#ac6c0bfd74d984fed427c1ced49acef5a">_vVelocity</a>;</div><div class="line"><a name="l00523"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#aaea44fb2ea8511661a37ff43c6df9149">  523</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#aaea44fb2ea8511661a37ff43c6df9149">_vDisplace</a>;</div><div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#aff183e0156f477b106269c9524d8b4dd">  525</a></span>&#160;    std::vector&lt;std::string&gt;                 <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#aff183e0156f477b106269c9524d8b4dd">_vData</a>;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml">OBConformerData</a>();</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml">OBConformerData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml">OBConformerData</a> &amp;);</div><div class="line"><a name="l00530"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  530</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml">OBConformerData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00531"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a1e909f0c20e17b79ecc51ae05b57f78f">  531</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a1e909f0c20e17b79ecc51ae05b57f78f">~OBConformerData</a>()    {}</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml">OBConformerData</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml">OBConformerData</a> &amp;);</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a98270b6a5c308d32731da6e0347604f8">  535</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a98270b6a5c308d32731da6e0347604f8">SetDimension</a>(std::vector&lt;unsigned short&gt; vd) { _vDimension = vd; }</div><div class="line"><a name="l00536"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a83d2707a7d694d2dcbca91b52e537953">  536</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a83d2707a7d694d2dcbca91b52e537953">SetEnergies</a>(std::vector&lt;double&gt; ve) { _vEnergies = ve; }</div><div class="line"><a name="l00537"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#ae5e8b9cfa509d47b804cd62dabec4384">  537</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#ae5e8b9cfa509d47b804cd62dabec4384">SetForces</a>(std::vector&lt; std::vector&lt; vector3 &gt; &gt; vf) {_vForces = vf;}</div><div class="line"><a name="l00538"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a10e686c1334aab2838abd83f0e43c15d">  538</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a10e686c1334aab2838abd83f0e43c15d">SetVelocities</a>(std::vector&lt; std::vector&lt; vector3 &gt; &gt; vv)</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    { _vVelocity = vv; }</div><div class="line"><a name="l00540"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a97fd4b5e51251d3647a1d8744f5fc178">  540</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a97fd4b5e51251d3647a1d8744f5fc178">SetDisplacements</a>(std::vector&lt; std::vector&lt; vector3 &gt; &gt; vd)</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    { _vDisplace = vd; }</div><div class="line"><a name="l00542"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a6a42c8d13245d5d0c11476c56e6a6e33">  542</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a6a42c8d13245d5d0c11476c56e6a6e33">SetData</a>(std::vector&lt;std::string&gt; vdat) { _vData = vdat; }</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a11ede097c372a7bca3ac9bbc8325aade">  544</a></span>&#160;    std::vector&lt;unsigned short&gt; <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a11ede097c372a7bca3ac9bbc8325aade">GetDimension</a>() { <span class="keywordflow">return</span> _vDimension; }</div><div class="line"><a name="l00545"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a3d8b242eebd5ab58552d535f86bd1609">  545</a></span>&#160;    std::vector&lt;double&gt;         <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a3d8b242eebd5ab58552d535f86bd1609">GetEnergies</a>()  { <span class="keywordflow">return</span> _vEnergies; }</div><div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#ab47a820667f55e0899534778c414c21d">  546</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt; <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#ab47a820667f55e0899534778c414c21d">GetForces</a>() {<span class="keywordflow">return</span> _vForces; }</div><div class="line"><a name="l00547"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a045c32551393c9123ffcaaf64b68f8df">  547</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt; <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a045c32551393c9123ffcaaf64b68f8df">GetVelocities</a>()</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;      {<span class="keywordflow">return</span> _vVelocity;}</div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a0f4fc4a438c20ca17dc4164245723b61">  549</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt; <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a0f4fc4a438c20ca17dc4164245723b61">GetDisplacements</a>()</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;      {<span class="keywordflow">return</span> _vDisplace;}</div><div class="line"><a name="l00551"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBConformerData.shtml#a10bc2a88336b4e3de55ce7112ad07811">  551</a></span>&#160;    std::vector&lt;std::string&gt;    <a class="code" href="classOpenBabel_1_1OBConformerData.shtml#a10bc2a88336b4e3de55ce7112ad07811">GetData</a>() { <span class="keywordflow">return</span> _vData; }</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  };</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml">  559</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml">OBSymmetryData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;  {</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00562"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#a472527c3649b76aaaa28597ba3f214dd">  562</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#a472527c3649b76aaaa28597ba3f214dd">_spaceGroup</a>;</div><div class="line"><a name="l00563"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#a4a2dc3eb5d3a544b8afe7507b7189fe9">  563</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#a4a2dc3eb5d3a544b8afe7507b7189fe9">_pointGroup</a>;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml">OBSymmetryData</a>();</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml">OBSymmetryData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml">OBSymmetryData</a> &amp;);</div><div class="line"><a name="l00567"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  567</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml">OBSymmetryData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00568"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#aaf4df0ae2afcaf39df55df81e0a18a5a">  568</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#aaf4df0ae2afcaf39df55df81e0a18a5a">~OBSymmetryData</a>()    {}</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml">OBSymmetryData</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml">OBSymmetryData</a> &amp;);</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#a2ceb8f352cca6f223aff43d41f4fb2f1">  572</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#a2ceb8f352cca6f223aff43d41f4fb2f1">SetData</a>(std::string pg, std::string sg = <span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    { _pointGroup = pg; _spaceGroup = sg; }</div><div class="line"><a name="l00574"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#a614446afd9dea92d4da7e8c8095aa107">  574</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#a614446afd9dea92d4da7e8c8095aa107">SetPointGroup</a>(std::string pg) { _pointGroup = pg; }</div><div class="line"><a name="l00575"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#aef06d0d2bb4513684db4b052f487d45a">  575</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#aef06d0d2bb4513684db4b052f487d45a">SetSpaceGroup</a>(std::string sg) { _spaceGroup = sg; }</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#aed0b54749bded9681b917dbbe6ce1800">  577</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#aed0b54749bded9681b917dbbe6ce1800">GetPointGroup</a>() { <span class="keywordflow">return</span> _pointGroup; }</div><div class="line"><a name="l00578"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSymmetryData.shtml#a90903c2ee1d02cbf37d5162541691f4f">  578</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBSymmetryData.shtml#a90903c2ee1d02cbf37d5162541691f4f">GetSpaceGroup</a>() { <span class="keywordflow">return</span> _spaceGroup; }</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;  };</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml">  584</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;  {</div><div class="line"><a name="l00586"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#ac59e55249c26b7453efa178aab836428">  586</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>;</div><div class="line"><a name="l00587"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#a7633b32d47d66ecdfb4f3db46e7e1422">  587</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a>;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00590"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#aa0d884087af9a4eac62349cdd16f0e52">  590</a></span>&#160;    std::pair&lt;OBAtom*,OBAtom*&gt; <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#aa0d884087af9a4eac62349cdd16f0e52">_bc</a>;</div><div class="line"><a name="l00592"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#adae49ee49ed76ec2af6149f2a20f34bf">  592</a></span>&#160;    std::vector&lt;triple&lt;OBAtom*,OBAtom*,double&gt; &gt; <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#adae49ee49ed76ec2af6149f2a20f34bf">_ads</a>;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#ab97992a9144899afd3b91c39dcc8e5e4">  594</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#ab97992a9144899afd3b91c39dcc8e5e4">OBTorsion</a>(): _bc((<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)NULL, (<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)NULL)      {      }</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="comment">//protected for use only by friend classes</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *);</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    std::vector&lt;quad&lt;OBAtom*,OBAtom*,OBAtom*,OBAtom*&gt; &gt; GetTorsions();</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a> &amp;);</div><div class="line"><a name="l00602"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#a42a5dd5b1bb3906af399c66764589c23">  602</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#a42a5dd5b1bb3906af399c66764589c23">~OBTorsion</a>()      {}</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a> &amp;);</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordtype">void</span> Clear();</div><div class="line"><a name="l00607"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#a31d1053aee208079bcc3c5e1884774df">  607</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#a31d1053aee208079bcc3c5e1884774df">Empty</a>()    {      <span class="keywordflow">return</span>(_bc.first == 0 &amp;&amp; _bc.second == 0);    }</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <span class="keywordtype">bool</span> AddTorsion(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a,<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *b, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *c,<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *d);</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keywordtype">bool</span> AddTorsion(<a class="code" href="structOpenBabel_1_1quad.shtml">quad&lt;OBAtom*,OBAtom*,OBAtom*,OBAtom*&gt;</a> &amp;atoms);</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    <span class="keywordtype">bool</span> SetAngle(<span class="keywordtype">double</span> radians, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index = 0);</div><div class="line"><a name="l00613"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#aa2c22321e05df8c58066c30bef2cf927">  613</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#aa2c22321e05df8c58066c30bef2cf927">SetData</a>(<a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * <span class="comment">/*bond*/</span>) { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <span class="keywordtype">bool</span> GetAngle(<span class="keywordtype">double</span> &amp;radians, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index =0);</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetBondIdx();</div><div class="line"><a name="l00619"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#a0af4f3bf511770f64efd9b03197fe05d">  619</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#a0af4f3bf511770f64efd9b03197fe05d">GetSize</a>()<span class="keyword"> const    </span>{      <span class="keywordflow">return</span> _ads.size();    }</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#a16b7e8677bd43d8292b1f0485e4d1d5e">  623</a></span>&#160;    std::pair&lt;OBAtom*,OBAtom*&gt;                  <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#a16b7e8677bd43d8292b1f0485e4d1d5e">GetBC</a>()</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;      {</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordflow">return</span>(_bc);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;      }</div><div class="line"><a name="l00629"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsion.shtml#a223305867f2593a05ebbc37bdc9bb674">  629</a></span>&#160;    std::vector&lt;triple&lt;OBAtom*,OBAtom*,double&gt; &gt; <a class="code" href="classOpenBabel_1_1OBTorsion.shtml#a223305867f2593a05ebbc37bdc9bb674">GetADs</a>()</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    {</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;      <span class="keywordflow">return</span>(_ads) ;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    }</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <span class="keywordtype">bool</span> IsProtonRotor();</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;  };</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsionData.shtml">  641</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;  {</div><div class="line"><a name="l00643"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsionData.shtml#ac59e55249c26b7453efa178aab836428">  643</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00646"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsionData.shtml#a8284d9e040299fd3ee667ad31e34a8d3">  646</a></span>&#160;    std::vector&lt;OBTorsion&gt; <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml#a8284d9e040299fd3ee667ad31e34a8d3">_torsions</a>;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a>();</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a> &amp;);</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00655"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  655</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keyword">    </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml">OBTorsionData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <span class="keywordtype">void</span> Clear();</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsionData.shtml#a9ce867c471907a6d2a54c1873c9e10e9">  662</a></span>&#160;    std::vector&lt;OBTorsion&gt; <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml#a9ce867c471907a6d2a54c1873c9e10e9">GetData</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="keyword">      </span>{</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">return</span> _torsions;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;      }</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBTorsionData.shtml#a0af4f3bf511770f64efd9b03197fe05d">  669</a></span>&#160;    <span class="keywordtype">size_t</span>      <a class="code" href="classOpenBabel_1_1OBTorsionData.shtml#a0af4f3bf511770f64efd9b03197fe05d">GetSize</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;      <span class="keywordflow">return</span> _torsions.size();</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    }</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<a class="code" href="classOpenBabel_1_1OBTorsion.shtml">OBTorsion</a> &amp;torsion);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keywordtype">bool</span> FillTorsionArray(std::vector&lt;std::vector&lt;unsigned int&gt; &gt; &amp;torsions);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;  };</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml">  681</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;  {</div><div class="line"><a name="l00683"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#ac59e55249c26b7453efa178aab836428">  683</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>;</div><div class="line"><a name="l00684"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#ac2fadcaf6e1d7246db44fd04d90df423">  684</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a>;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="comment">//member data</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#a6d6d58b7c653e7457ce0d0c2a907f9aa">  690</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>                *<a class="code" href="classOpenBabel_1_1OBAngle.shtml#a6d6d58b7c653e7457ce0d0c2a907f9aa">_vertex</a>;</div><div class="line"><a name="l00691"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#aed0a513f416c5140e604577971e1dd5c">  691</a></span>&#160;    std::pair&lt;OBAtom*,OBAtom*&gt;  <a class="code" href="classOpenBabel_1_1OBAngle.shtml#aed0a513f416c5140e604577971e1dd5c">_termini</a>;</div><div class="line"><a name="l00692"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#a8ebc49284f65cb6d82c40fba0f9111b4">  692</a></span>&#160;    <span class="keywordtype">double</span>                  <a class="code" href="classOpenBabel_1_1OBAngle.shtml#a8ebc49284f65cb6d82c40fba0f9111b4">_radians</a>;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    <span class="comment">//protected member functions</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a>();  <span class="comment">//protect constructor for use only by friend classes</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *vertex,<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a,<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *b);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <a class="code" href="structOpenBabel_1_1triple.shtml">triple&lt;OBAtom*,OBAtom*,OBAtom*&gt;</a> GetAtoms();</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keywordtype">void</span> SortByIndex();</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a> &amp;);</div><div class="line"><a name="l00705"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#a35e160e815b78f064cd07164bf5aebb2">  705</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngle.shtml#a35e160e815b78f064cd07164bf5aebb2">~OBAngle</a>()</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;      {</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        _vertex = NULL;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;      }</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a> &amp;operator = (<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a> &amp;);</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="keywordtype">bool</span>     <a class="code" href="namespaceOpenBabel.shtml#ac001b331f648fbbd8590576f59d4d2ab">operator ==</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a> &amp;);</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="keywordtype">void</span>  Clear();</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#aa8238cc457ba8f2b2ec938d5a3aa591b">  717</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBAngle.shtml#aa8238cc457ba8f2b2ec938d5a3aa591b">GetAngle</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;      <span class="keywordflow">return</span>(_radians);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    }</div><div class="line"><a name="l00723"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngle.shtml#a55f96888e82a56edfa241a34f3271ae0">  723</a></span>&#160;    <span class="keywordtype">void</span>  <a class="code" href="classOpenBabel_1_1OBAngle.shtml#a55f96888e82a56edfa241a34f3271ae0">SetAngle</a>(<span class="keywordtype">double</span> angle)</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    {</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;      _radians = angle;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    }</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordtype">void</span>  SetAtoms(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *vertex,<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a,<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *b);</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <span class="keywordtype">void</span>  SetAtoms(<a class="code" href="structOpenBabel_1_1triple.shtml">triple&lt;OBAtom*,OBAtom*,OBAtom*&gt;</a> &amp;atoms);</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;  };</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00734"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngleData.shtml">  734</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;  {</div><div class="line"><a name="l00736"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngleData.shtml#ac59e55249c26b7453efa178aab836428">  736</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00739"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngleData.shtml#a259e7ee82fbf67240f0b058ce4293d2e">  739</a></span>&#160;    std::vector&lt;OBAngle&gt; <a class="code" href="classOpenBabel_1_1OBAngleData.shtml#a259e7ee82fbf67240f0b058ce4293d2e">_angles</a>;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a>();</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a> &amp;);</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00745"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngleData.shtml#a87ade60f96e83b51d4357559ec77cd82">  745</a></span>&#160;    std::vector&lt;OBAngle&gt; <a class="code" href="classOpenBabel_1_1OBAngleData.shtml#a87ade60f96e83b51d4357559ec77cd82">GetData</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="keyword">      </span>{</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        <span class="keywordflow">return</span>(_angles);</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;      }</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a> &amp;operator =(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a> &amp;);</div><div class="line"><a name="l00752"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngleData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  752</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBAngleData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="keyword">    </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBAngleData.shtml">OBAngleData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="keywordtype">void</span> Clear();</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> FillAngleArray(<span class="keywordtype">int</span> **angles, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;size);</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <span class="keywordtype">bool</span> FillAngleArray(std::vector&lt;std::vector&lt;unsigned int&gt; &gt; &amp;angles);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <span class="keywordtype">void</span>         <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<a class="code" href="classOpenBabel_1_1OBAngle.shtml">OBAngle</a> &amp;);</div><div class="line"><a name="l00762"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAngleData.shtml#a0af4f3bf511770f64efd9b03197fe05d">  762</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBAngleData.shtml#a0af4f3bf511770f64efd9b03197fe05d">GetSize</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;      <span class="keywordflow">return</span> _angles.size();</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    }</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  };</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00768"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">  768</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">atomreftype</a>{</div><div class="line"><a name="l00769"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8ae6eb596f7e638118128651043ff38545">  769</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8ae6eb596f7e638118128651043ff38545">output</a>,     </div><div class="line"><a name="l00770"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8a37943061a284187ff6e555ac7093f528">  770</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8a37943061a284187ff6e555ac7093f528">input</a>,      </div><div class="line"><a name="l00771"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8a103458136e7028a1a9b7349e64967810">  771</a></span>&#160;    <a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8a103458136e7028a1a9b7349e64967810">calcvolume</a>  </div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;  }; <span class="comment">// sets which atom4ref is accessed by OBChiralData</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00777"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml">  777</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;  {</div><div class="line"><a name="l00779"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#ac59e55249c26b7453efa178aab836428">  779</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>;</div><div class="line"><a name="l00780"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#ac0625d6c1f6b8002765c09a45d400c4d">  780</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00783"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#a89411064df2cf2407f4a89f75a5ea618">  783</a></span>&#160;    std::vector&lt;unsigned int&gt; <a class="code" href="classOpenBabel_1_1OBChiralData.shtml#a89411064df2cf2407f4a89f75a5ea618">_atom4refs</a>; </div><div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#a9886384fc77ff9471fc26cd16f822324">  784</a></span>&#160;    std::vector&lt;unsigned int&gt; <a class="code" href="classOpenBabel_1_1OBChiralData.shtml#a9886384fc77ff9471fc26cd16f822324">_atom4refo</a>; </div><div class="line"><a name="l00785"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#a9f82047fe27246702be9b5032768ffb5">  785</a></span>&#160;    std::vector&lt;unsigned int&gt; <a class="code" href="classOpenBabel_1_1OBChiralData.shtml#a9f82047fe27246702be9b5032768ffb5">_atom4refc</a>; </div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#a22c1e0c27cee34369adf919eed3e3aac">  789</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBChiralData.shtml#a22c1e0c27cee34369adf919eed3e3aac">parity</a>;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    <a class="code" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a>();</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    <a class="code" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a> &amp;src);</div><div class="line"><a name="l00795"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  795</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBChiralData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a>(*<span class="keyword">this</span>); }</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <a class="code" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a> &amp;operator =(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBChiralData.shtml">OBChiralData</a> &amp;);</div><div class="line"><a name="l00798"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBChiralData.shtml#abc2d4b013efd6a8788da4a31489d28b9">  798</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBChiralData.shtml#abc2d4b013efd6a8788da4a31489d28b9">~OBChiralData</a>(){}</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keywordtype">void</span> Clear();</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    std::vector&lt;unsigned int&gt; GetAtom4Refs(<a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">atomreftype</a> t) <span class="keyword">const</span>;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetAtomRef(<span class="keywordtype">int</span> a,<a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">atomreftype</a> t);</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <span class="keywordtype">bool</span> SetAtom4Refs(std::vector&lt;unsigned int&gt; atom4refs, <a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">atomreftype</a> t);</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <span class="keywordtype">int</span> AddAtomRef(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> atomref, <a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">atomreftype</a> t);</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetSize(<a class="code" href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">atomreftype</a> t) <span class="keyword">const</span>;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;  };</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSerialNums.shtml">  816</a></span>&#160; <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBSerialNums.shtml">OBSerialNums</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;  {</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00819"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSerialNums.shtml#a9452a3c2c31da208c07429f21506f423">  819</a></span>&#160;    std::map&lt;int, OBAtom*&gt; <a class="code" href="classOpenBabel_1_1OBSerialNums.shtml#a9452a3c2c31da208c07429f21506f423">_serialMap</a>; </div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div><div class="line"><a name="l00823"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSerialNums.shtml#ac133c97c2adaeacc4a476bb27bc24500">  823</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OBSerialNums.shtml#ac133c97c2adaeacc4a476bb27bc24500">OBSerialNums</a>() :</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;obSerialNums&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00">SerialNums</a>)</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;      {}</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;</div><div class="line"><a name="l00827"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSerialNums.shtml#a0b0be14ee04253bb90997df9884a94ca">  827</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OBSerialNums.shtml#a0b0be14ee04253bb90997df9884a94ca">OBSerialNums</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBSerialNums.shtml">OBSerialNums</a> &amp;cp) : <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(cp)</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    {</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;      _serialMap = cp.<a class="code" href="classOpenBabel_1_1OBSerialNums.shtml#a9452a3c2c31da208c07429f21506f423">_serialMap</a>;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    }</div><div class="line"><a name="l00833"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSerialNums.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  833</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBSerialNums.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="keyword">    </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBSerialNums.shtml">OBSerialNums</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00836"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSerialNums.shtml#a392c3230c9d3cca11b1e4d57bdd2ddfd">  836</a></span>&#160;    std::map&lt;int,OBAtom*&gt; &amp;<a class="code" href="classOpenBabel_1_1OBSerialNums.shtml#a392c3230c9d3cca11b1e4d57bdd2ddfd">GetData</a>()    { <span class="keywordflow">return</span> _serialMap;    }</div><div class="line"><a name="l00837"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBSerialNums.shtml#aca58b64b964da63d832ce0ad1c7ed730">  837</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBSerialNums.shtml#aca58b64b964da63d832ce0ad1c7ed730">SetData</a>(std::map&lt;int,OBAtom*&gt; &amp;sm) { _serialMap = sm;  }</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;  };</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;</div><div class="line"><a name="l00843"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml">  843</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml">OBVibrationData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;  {</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00847"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#a84619fd6eb56bada6e0c68c54798bde0">  847</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt; <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#a84619fd6eb56bada6e0c68c54798bde0">_vLx</a>;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;</div><div class="line"><a name="l00850"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#a443d61f7fd264880b7233b3d727a5828">  850</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#a443d61f7fd264880b7233b3d727a5828">_vFrequencies</a>;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#ae7963c2698fd4975c7060b1c5438b272">  853</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#ae7963c2698fd4975c7060b1c5438b272">_vIntensities</a>;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;</div><div class="line"><a name="l00856"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#ac0a11832241a5fc28ac860aa326ba3c7">  856</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#ac0a11832241a5fc28ac860aa326ba3c7">_vRamanActivities</a>;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00859"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#ad6eff9b28ddb91e20a4e4f1648e21f37">  859</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#ad6eff9b28ddb91e20a4e4f1648e21f37">OBVibrationData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;VibrationData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2">VibrationData</a>){};</div><div class="line"><a name="l00860"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#ac935ab00b5625a4def7fbe6333ede664">  860</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#ac935ab00b5625a4def7fbe6333ede664">~OBVibrationData</a>() {}</div><div class="line"><a name="l00861"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  861</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>*)<span class="keyword"> const</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="keyword">         </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml">OBVibrationData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml">OBVibrationData</a> &amp; operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml">OBVibrationData</a> &amp;);</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<span class="keyword">const</span> std::vector&lt; std::vector&lt; vector3 &gt; &gt; &amp; lx,</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp; frequencies,</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp; intensities);</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<span class="keyword">const</span> std::vector&lt; std::vector&lt; vector3 &gt; &gt; &amp;,</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp;,</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp;,</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp;);</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;</div><div class="line"><a name="l00874"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#ac97e8fd919f733fa03de1b70f5ee9ea8">  874</a></span>&#160;    std::vector&lt; std::vector&lt; vector3 &gt; &gt; <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#ac97e8fd919f733fa03de1b70f5ee9ea8">GetLx</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vLx; }</div><div class="line"><a name="l00876"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#a4710d82ad5bc5a3ea469148513a6a05f">  876</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#a4710d82ad5bc5a3ea469148513a6a05f">GetFrequencies</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vFrequencies; }</div><div class="line"><a name="l00878"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#afd7bd331d7f62a7891b6615b1d1d6f5a">  878</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#afd7bd331d7f62a7891b6615b1d1d6f5a">GetIntensities</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vIntensities; }</div><div class="line"><a name="l00880"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVibrationData.shtml#a0c29ce1b1222c2342245ff45f7fee54d">  880</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBVibrationData.shtml#a0c29ce1b1222c2342245ff45f7fee54d">GetRamanActivities</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vRamanActivities; }</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetNumberOfFrequencies() <span class="keyword">const</span>;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;};</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml">  888</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBDOSData.shtml">OBDOSData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;  {</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00892"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#abac522be53893f4e95ffe90e4423e9b7">  892</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#abac522be53893f4e95ffe90e4423e9b7">_fermi</a>;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;</div><div class="line"><a name="l00895"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#ad069a68962fcc260bd3d4a1f4fc37fcb">  895</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#ad069a68962fcc260bd3d4a1f4fc37fcb">_vEnergies</a>;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00898"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#af901a3a7668a1729466dd8fcfe3cae21">  898</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#af901a3a7668a1729466dd8fcfe3cae21">_vDensities</a>;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00901"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#a551c36cae879624b97356cf0aed85e5c">  901</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#a551c36cae879624b97356cf0aed85e5c">_vIntegration</a>;</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00904"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#a8e1b6f674958d6a07abb778f4b7e203e">  904</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#a8e1b6f674958d6a07abb778f4b7e203e">OBDOSData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;DOSData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a">DOSData</a>){};</div><div class="line"><a name="l00905"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#a1ebcd47ca2ff7b5950607d0cdc10dd6f">  905</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#a1ebcd47ca2ff7b5950607d0cdc10dd6f">~OBDOSData</a>() {}</div><div class="line"><a name="l00906"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  906</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>*)<span class="keyword"> const</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="keyword">         </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBDOSData.shtml">OBDOSData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    <a class="code" href="classOpenBabel_1_1OBDOSData.shtml">OBDOSData</a> &amp; operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBDOSData.shtml">OBDOSData</a> &amp;);</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<span class="keywordtype">double</span>,</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp;,</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp;,</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp;);</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div><div class="line"><a name="l00916"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#a4ead9f82750c29ffd92054dd64bebbf1">  916</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#a4ead9f82750c29ffd92054dd64bebbf1">GetFermiEnergy</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_fermi; }</div><div class="line"><a name="l00918"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#a56edd7b7680e89060aa3dc51d4ada8a5">  918</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#a56edd7b7680e89060aa3dc51d4ada8a5">GetEnergies</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vEnergies; }</div><div class="line"><a name="l00920"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#a7ed63bf8b88d0e46e9bda0ec86d84a72">  920</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#a7ed63bf8b88d0e46e9bda0ec86d84a72">GetDensities</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vDensities; }</div><div class="line"><a name="l00922"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBDOSData.shtml#ade82f620db3580ccda7bfb106846b277">  922</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBDOSData.shtml#ade82f620db3580ccda7bfb106846b277">GetIntegration</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vIntegration; }</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;  };</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;</div><div class="line"><a name="l00929"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml">  929</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBOrbital.shtml">OBOrbital</a></div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;  {</div><div class="line"><a name="l00931"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#a28f7444cea7d79c814b94579da41f1e3">  931</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml">OBOrbitalData</a>;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00933"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#ad93165c379393f8eb17506f1f9820a1a">  933</a></span>&#160;    <span class="keywordtype">double</span>       <a class="code" href="classOpenBabel_1_1OBOrbital.shtml#ad93165c379393f8eb17506f1f9820a1a">_energy</a>;         </div><div class="line"><a name="l00934"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#abece6e2fb39058fe60114864abdfc592">  934</a></span>&#160;    <span class="keywordtype">double</span>       <a class="code" href="classOpenBabel_1_1OBOrbital.shtml#abece6e2fb39058fe60114864abdfc592">_occupation</a>;     </div><div class="line"><a name="l00935"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#abc035539018329c68382babb1648e1e3">  935</a></span>&#160;    std::string  <a class="code" href="classOpenBabel_1_1OBOrbital.shtml#abc035539018329c68382babb1648e1e3">_mullikenSymbol</a>; </div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00937"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#afd66805019461ffb95634bf0e79dc992">  937</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBOrbital.shtml#afd66805019461ffb95634bf0e79dc992">SetData</a>(<span class="keywordtype">double</span> energy, <span class="keywordtype">double</span> occupation = 2.0, std::string symbol = <span class="stringliteral">&quot;A&quot;</span>)</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    { _energy = energy; _occupation = occupation; _mullikenSymbol = symbol; }</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div><div class="line"><a name="l00940"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#a4dcfbb9780f44d5fca2effbc30b17ce0">  940</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBOrbital.shtml#a4dcfbb9780f44d5fca2effbc30b17ce0">GetEnergy</a>()<span class="keyword"> const        </span>{ <span class="keywordflow">return</span> _energy; }</div><div class="line"><a name="l00941"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#ae5d7e5e5fcbebc063f46f64888f7e758">  941</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBOrbital.shtml#ae5d7e5e5fcbebc063f46f64888f7e758">GetOccupation</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span> _occupation; }</div><div class="line"><a name="l00942"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbital.shtml#a88b2066c7f17a13c4f6d936a1e80bed1">  942</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBOrbital.shtml#a88b2066c7f17a13c4f6d936a1e80bed1">GetSymbol</a>()<span class="keyword"> const   </span>{ <span class="keywordflow">return</span> _mullikenSymbol; }</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;  };</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00947"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml">  947</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml">OBOrbitalData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;  {</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00950"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#afd15b15b68d5511ac566e95c537883e7">  950</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#afd15b15b68d5511ac566e95c537883e7">OBOrbitalData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;OrbitalData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2">ElectronicData</a>),</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;      _alphaHOMO(0), _betaHOMO(0), _openShell(false) {};</div><div class="line"><a name="l00952"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#ab152b3389d8c96e2ac4174ce5932499a">  952</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#ab152b3389d8c96e2ac4174ce5932499a">~OBOrbitalData</a>() {}</div><div class="line"><a name="l00953"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">  953</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>*)<span class="keyword"> const</span></div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="keyword">         </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml">OBOrbitalData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml">OBOrbitalData</a> &amp; operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml">OBOrbitalData</a> &amp;);</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;</div><div class="line"><a name="l00958"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a1aa001a5bb0835aecf6ac01d3097e5ac">  958</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a1aa001a5bb0835aecf6ac01d3097e5ac">SetAlphaOrbitals</a>(std::vector&lt;OBOrbital&gt; orbitalList)</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;    { _alphaOrbitals = orbitalList; }</div><div class="line"><a name="l00960"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#af50fed67352599bfd2adcc8a49c8e6f9">  960</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#af50fed67352599bfd2adcc8a49c8e6f9">SetBetaOrbitals</a>(std::vector&lt;OBOrbital&gt; orbitalList)</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    { _betaOrbitals = orbitalList; }</div><div class="line"><a name="l00962"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#adaea5fe04cd5876e6f2f8479fd6dc726">  962</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#adaea5fe04cd5876e6f2f8479fd6dc726">SetHOMO</a>(<span class="keywordtype">int</span> alpha, <span class="keywordtype">int</span> beta = 0)</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    { _alphaHOMO = alpha; _betaHOMO = beta; }</div><div class="line"><a name="l00964"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a59b26af6c838614c16d75c8246612698">  964</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a59b26af6c838614c16d75c8246612698">SetOpenShell</a>(<span class="keywordtype">bool</span> openShell)</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    { _openShell = openShell; }</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;</div><div class="line"><a name="l00967"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a7b32d28d61b3149a4a5b1051d86918b0">  967</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a7b32d28d61b3149a4a5b1051d86918b0">IsOpenShell</a>() { <span class="keywordflow">return</span> _openShell; }</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div><div class="line"><a name="l00969"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a1243d416863fddeed1c5ba20d7c7a419">  969</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a1243d416863fddeed1c5ba20d7c7a419">GetAlphaHOMO</a>() { <span class="keywordflow">return</span> _alphaHOMO; }</div><div class="line"><a name="l00970"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#adb5679cd09bed805338a74cc79b9b370">  970</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#adb5679cd09bed805338a74cc79b9b370">GetBetaHOMO</a>() { <span class="keywordflow">return</span> _betaHOMO; }</div><div class="line"><a name="l00971"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a82a690605d1d541a30d7ca1bd8e902be">  971</a></span>&#160;    std::vector&lt;OBOrbital&gt; <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a82a690605d1d541a30d7ca1bd8e902be">GetAlphaOrbitals</a>() { <span class="keywordflow">return</span> _alphaOrbitals; }</div><div class="line"><a name="l00972"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a14c67483d74fb40365254f84296d7cc7">  972</a></span>&#160;    std::vector&lt;OBOrbital&gt; <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a14c67483d74fb40365254f84296d7cc7">GetBetaOrbitals</a>() { <span class="keywordflow">return</span> _betaOrbitals; }</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    <span class="keywordtype">void</span> LoadClosedShellOrbitals(std::vector&lt;double&gt; energies, std::vector&lt;std::string&gt; symmetries, <span class="keywordtype">int</span> alphaHOMO);</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    <span class="keywordtype">void</span> LoadAlphaOrbitals(std::vector&lt;double&gt; energies, std::vector&lt;std::string&gt; symmetries, <span class="keywordtype">int</span> alphaHOMO);</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    <span class="keywordtype">void</span> LoadBetaOrbitals(std::vector&lt;double&gt; energies, std::vector&lt;std::string&gt; symmetries, <span class="keywordtype">int</span> betaHOMO);</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00983"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a6edf786e96b35505ffe9150905f5f06a">  983</a></span>&#160;    std::vector&lt;OBOrbital&gt; <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a6edf786e96b35505ffe9150905f5f06a">_alphaOrbitals</a>; </div><div class="line"><a name="l00984"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a91a7e06b86e18fd65689b1da2cdf193f">  984</a></span>&#160;    std::vector&lt;OBOrbital&gt; <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a91a7e06b86e18fd65689b1da2cdf193f">_betaOrbitals</a>;  </div><div class="line"><a name="l00985"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#aeec65125d586ace9d5764cc437b6e33d">  985</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#aeec65125d586ace9d5764cc437b6e33d">_alphaHOMO</a>;               </div><div class="line"><a name="l00986"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#a71b85b5ab742b2176819410e877ca1d8">  986</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#a71b85b5ab742b2176819410e877ca1d8">_betaHOMO</a>;                </div><div class="line"><a name="l00987"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBOrbitalData.shtml#afba45991614dc0f33e799a2c8760b9bd">  987</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBOrbitalData.shtml#afba45991614dc0f33e799a2c8760b9bd">_openShell</a>;                       </div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;  };</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div><div class="line"><a name="l00992"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml">  992</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml">OBElectronicTransitionData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;  {</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l00996"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a523167939ae7b279d2af900ef53ac0d9">  996</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a523167939ae7b279d2af900ef53ac0d9">_vWavelengths</a>;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;</div><div class="line"><a name="l00999"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#af300a4b44a417f4999c4378522e10d18">  999</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#af300a4b44a417f4999c4378522e10d18">_vForces</a>;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div><div class="line"><a name="l01002"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a94998f1366e53e7430a50209b05424ed"> 1002</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a94998f1366e53e7430a50209b05424ed">_vEDipole</a>;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;</div><div class="line"><a name="l01005"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ac555eb9ba9de86341d5a4a0c5a22f098"> 1005</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ac555eb9ba9de86341d5a4a0c5a22f098">_vRotatoryStrengthsVelocity</a>;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01008"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a35e7c9407fefcda3910c6fc7e06e9f73"> 1008</a></span>&#160;    std::vector&lt;double&gt;  <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a35e7c9407fefcda3910c6fc7e06e9f73">_vRotatoryStrengthsLength</a>;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l01011"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#afd34955993e8fa4ca5f54512c75ae2f6"> 1011</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#afd34955993e8fa4ca5f54512c75ae2f6">OBElectronicTransitionData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;ElectronicTransitionData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8">ElectronicTransitionData</a>) {}</div><div class="line"><a name="l01012"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a380b3a6c5dbb324cbae959d34e9c004e"> 1012</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a380b3a6c5dbb324cbae959d34e9c004e">~OBElectronicTransitionData</a>() {}</div><div class="line"><a name="l01013"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761"> 1013</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>*)<span class="keyword"> const</span></div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="keyword">         </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml">OBElectronicTransitionData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml">OBElectronicTransitionData</a> &amp; operator=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml">OBElectronicTransitionData</a> &amp;);</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">SetData</a>(<span class="keyword">const</span> std::vector&lt;double&gt; &amp; wavelengths,</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;                 <span class="keyword">const</span> std::vector&lt;double&gt; &amp; forces);</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    <span class="keywordtype">void</span> SetEDipole(<span class="keyword">const</span> std::vector&lt;double&gt; &amp;);</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    <span class="keywordtype">void</span> SetRotatoryStrengthsVelocity(<span class="keyword">const</span> std::vector&lt;double&gt; &amp;);</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    <span class="keywordtype">void</span> SetRotatoryStrengthsLength(<span class="keyword">const</span> std::vector&lt;double&gt; &amp;);</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01025"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#aa83f5870356582d5d98b6d92a7fe0a63"> 1025</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#aa83f5870356582d5d98b6d92a7fe0a63">GetWavelengths</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vWavelengths; }</div><div class="line"><a name="l01027"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ab79e03678de23fcca6a71d2b5a75063f"> 1027</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ab79e03678de23fcca6a71d2b5a75063f">GetForces</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vForces; }</div><div class="line"><a name="l01029"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a8a5d5893123109979287e6ed82efae0f"> 1029</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a8a5d5893123109979287e6ed82efae0f">GetEDipole</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vEDipole; }</div><div class="line"><a name="l01031"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#abe68de305caa7adad7d213c05e6e20fe"> 1031</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#abe68de305caa7adad7d213c05e6e20fe">GetRotatoryStrengthsVelocity</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vRotatoryStrengthsVelocity; }</div><div class="line"><a name="l01033"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a0241cfc005500b6686feb9a049923cb4"> 1033</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a0241cfc005500b6686feb9a049923cb4">GetRotatoryStrengthsLength</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> this-&gt;_vRotatoryStrengthsLength; }</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;};</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div><div class="line"><a name="l01039"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml"> 1039</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBRotationData.shtml">OBRotationData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160; {</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l01042"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09a6ce26a62afab55d7606ad4e92428b30c"> 1042</a></span>&#160;   <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09">RType</a>{<a class="code" href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09a6ce26a62afab55d7606ad4e92428b30c">UNKNOWN</a>, ASYMMETRIC, SYMMETRIC, LINEAR};</div><div class="line"><a name="l01043"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#af55b99b7ce56986ce4421f598bb7b1d7"> 1043</a></span>&#160;   <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#af55b99b7ce56986ce4421f598bb7b1d7">OBRotationData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;RotationData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899">RotationData</a>){}</div><div class="line"><a name="l01044"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#a519e86e5760ce996627dcf4fe5efab66"> 1044</a></span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#a519e86e5760ce996627dcf4fe5efab66">~OBRotationData</a>(){};</div><div class="line"><a name="l01045"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761"> 1045</a></span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>*)<span class="keyword"> const</span></div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="keyword">         </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBRotationData.shtml">OBRotationData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l01047"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#aa0e40eaa96ec46f0513b48fce93b7b76"> 1047</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#aa0e40eaa96ec46f0513b48fce93b7b76">SetData</a>(<a class="code" href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09">RType</a> RotorType, std::vector&lt;double&gt; RotationalConstants, <span class="keywordtype">int</span> SymmetryNumber)</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;   {</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;     RotConsts = RotationalConstants;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;     type = RotorType;</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;     SymNum = SymmetryNumber;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;   }</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;</div><div class="line"><a name="l01055"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#a0acbff6e2a208e73c10daf0d0a7f0d72"> 1055</a></span>&#160;   std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#a0acbff6e2a208e73c10daf0d0a7f0d72">GetRotConsts</a>()<span class="keyword">const</span>{ <span class="keywordflow">return</span> RotConsts; }</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;</div><div class="line"><a name="l01057"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#a36ab6ab400cbf925a15ddab8375c9faf"> 1057</a></span>&#160;   <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#a36ab6ab400cbf925a15ddab8375c9faf">GetSymmetryNumber</a>()<span class="keyword">const</span>{ <span class="keywordflow">return</span> SymNum; }</div><div class="line"><a name="l01058"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#a5964836146c69bff67fd35d753c2e35d"> 1058</a></span>&#160;   <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09">RType</a> <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#a5964836146c69bff67fd35d753c2e35d">GetRotorType</a>()<span class="keyword">const   </span>{ <span class="keywordflow">return</span> type; }</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160; <span class="keyword">protected</span>:</div><div class="line"><a name="l01061"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#a158f9d92716703712f00b3b041adc3cc"> 1061</a></span>&#160;   std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#a158f9d92716703712f00b3b041adc3cc">RotConsts</a>;</div><div class="line"><a name="l01062"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#a59b5e4d007a23da401e33d9f5eea2664"> 1062</a></span>&#160;   <span class="keywordtype">int</span>                 <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#a59b5e4d007a23da401e33d9f5eea2664">SymNum</a>;   </div><div class="line"><a name="l01063"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBRotationData.shtml#a90ab08fd1dc96f17cf3562d8afeb60c0"> 1063</a></span>&#160;   <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09">RType</a>               <a class="code" href="classOpenBabel_1_1OBRotationData.shtml#a90ab08fd1dc96f17cf3562d8afeb60c0">type</a>;     </div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160; };</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;</div><div class="line"><a name="l01069"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml"> 1069</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBVectorData.shtml">OBVectorData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160; {</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l01072"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml#a7ebf015db0f2457d856d0eb688769d41"> 1072</a></span>&#160;   <a class="code" href="classOpenBabel_1_1OBVectorData.shtml#a7ebf015db0f2457d856d0eb688769d41">OBVectorData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;VectorData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9">VectorData</a>){}</div><div class="line"><a name="l01073"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml#a9bdbefcdfbd801132866f1e77ba70aae"> 1073</a></span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBVectorData.shtml#a9bdbefcdfbd801132866f1e77ba70aae">~OBVectorData</a>(){};</div><div class="line"><a name="l01074"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml#ab00b0697ccbb41c687e4031c1f5e6761"> 1074</a></span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBVectorData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>*)<span class="keyword"> const</span></div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="keyword">         </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBVectorData.shtml">OBVectorData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l01076"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml#a7c9f75965bfdc8bd1debc7fba3797a65"> 1076</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBVectorData.shtml#a7c9f75965bfdc8bd1debc7fba3797a65">SetData</a>(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> z)</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;     { _vec = <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a>(x, y, z); }</div><div class="line"><a name="l01078"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml#a146acce5019a84cc73f48a23e39b8e6e"> 1078</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBVectorData.shtml#a146acce5019a84cc73f48a23e39b8e6e">SetData</a>(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> data)</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;     { _vec = data; }</div><div class="line"><a name="l01080"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml#ac18e5c8cbf9cedf2ae1e7f77c40e529d"> 1080</a></span>&#160;   <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="code" href="classOpenBabel_1_1OBVectorData.shtml#ac18e5c8cbf9cedf2ae1e7f77c40e529d">GetData</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="keyword">     </span>{ <span class="keywordflow">return</span> _vec; }</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160; <span class="keyword">protected</span>:</div><div class="line"><a name="l01084"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBVectorData.shtml#a0acc44e4b0579d4cd684edfc4f5a4007"> 1084</a></span>&#160;   <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a>            <a class="code" href="classOpenBabel_1_1OBVectorData.shtml#a0acc44e4b0579d4cd684edfc4f5a4007">_vec</a>; </div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160; };</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;</div><div class="line"><a name="l01090"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMatrixData.shtml"> 1090</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml">OBMatrixData</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;  {</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l01093"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMatrixData.shtml#a15f02a1883eb12f6980b542c40f26810"> 1093</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml#a15f02a1883eb12f6980b542c40f26810">OBMatrixData</a>(): <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>(<span class="stringliteral">&quot;MatrixData&quot;</span>, OBGenericDataType::<a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe">MatrixData</a>){}</div><div class="line"><a name="l01094"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMatrixData.shtml#abeefc08263da22a794ddf7a594a7e82a"> 1094</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml#abeefc08263da22a794ddf7a594a7e82a">~OBMatrixData</a>(){};</div><div class="line"><a name="l01095"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMatrixData.shtml#ab00b0697ccbb41c687e4031c1f5e6761"> 1095</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">Clone</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>*)<span class="keyword"> const</span></div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;<span class="keyword">          </span>{<span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml">OBMatrixData</a>(*<span class="keyword">this</span>);}</div><div class="line"><a name="l01097"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMatrixData.shtml#a9d238447321132fcc9109b7a1b39b480"> 1097</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml#a9d238447321132fcc9109b7a1b39b480">SetData</a>(<a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> data)</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;      { _matrix = data; }</div><div class="line"><a name="l01099"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMatrixData.shtml#a6138059beb490361a705d6a7bf361922"> 1099</a></span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml#a6138059beb490361a705d6a7bf361922">GetData</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;<span class="keyword">      </span>{ <span class="keywordflow">return</span> _matrix; }</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l01103"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBMatrixData.shtml#ae664fb7cf64216e4b362cd4e48b018f5"> 1103</a></span>&#160;    <a class="code" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>            <a class="code" href="classOpenBabel_1_1OBMatrixData.shtml#ae664fb7cf64216e4b362cd4e48b018f5">_matrix</a>; </div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;  };</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;</div><div class="line"><a name="l01109"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml"> 1109</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OBFreeGridPoint</a></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;  {</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l01112"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a0155ae9ef9ce5360a531a6f2954aa57b"> 1112</a></span>&#160;    <span class="keywordtype">double</span> _x,_y,<a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a0155ae9ef9ce5360a531a6f2954aa57b">_z</a>,_V;</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    </div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l01115"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a0d29cf331efb7fd1213d2ba67fe9c0df"> 1115</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a0d29cf331efb7fd1213d2ba67fe9c0df">OBFreeGridPoint</a>() {};</div><div class="line"><a name="l01116"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#ac4e565a482e1abd9cd5ad77e3e2a39bb"> 1116</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#ac4e565a482e1abd9cd5ad77e3e2a39bb">OBFreeGridPoint</a>(<span class="keywordtype">double</span> x,<span class="keywordtype">double</span> y,<span class="keywordtype">double</span> z,<span class="keywordtype">double</span> V) { _x = x; _y = y; _z = z; _V = V; }</div><div class="line"><a name="l01117"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#afdfecc840349fc6b5a750b142a1e8d22"> 1117</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#afdfecc840349fc6b5a750b142a1e8d22">~OBFreeGridPoint</a>() {};</div><div class="line"><a name="l01118"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a9fa6ce00a437dcb7c438cdf669a35fe6"> 1118</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a9fa6ce00a437dcb7c438cdf669a35fe6">GetX</a>() { <span class="keywordflow">return</span> _x; }</div><div class="line"><a name="l01119"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a6f947fc048c388c2ae724147a2e74ea2"> 1119</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a6f947fc048c388c2ae724147a2e74ea2">GetY</a>() { <span class="keywordflow">return</span> _y; }</div><div class="line"><a name="l01120"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a2917f1fdbf033388ba0f3b37f5a23303"> 1120</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a2917f1fdbf033388ba0f3b37f5a23303">GetZ</a>() { <span class="keywordflow">return</span> _z; }</div><div class="line"><a name="l01121"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#abe457d9fd6ec1a45210ce2e8286563eb"> 1121</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#abe457d9fd6ec1a45210ce2e8286563eb">GetV</a>() { <span class="keywordflow">return</span> _V; }</div><div class="line"><a name="l01122"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#ad78d96fd21033509be133340ff90c370"> 1122</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#ad78d96fd21033509be133340ff90c370">SetX</a>(<span class="keywordtype">double</span> x) { _x = x; }</div><div class="line"><a name="l01123"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#affbee34a095ac8d0ab1a4578ae261f07"> 1123</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#affbee34a095ac8d0ab1a4578ae261f07">SetY</a>(<span class="keywordtype">double</span> y) { _y = y; }</div><div class="line"><a name="l01124"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a51dc39bf2ae50dbfddf666232deac1ec"> 1124</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#a51dc39bf2ae50dbfddf666232deac1ec">SetZ</a>(<span class="keywordtype">double</span> z) { _z = z; }</div><div class="line"><a name="l01125"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGridPoint.shtml#ad7eba625acc8cde6149ee8f13341172e"> 1125</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml#ad7eba625acc8cde6149ee8f13341172e">SetV</a>(<span class="keywordtype">double</span> V) { _V = V; }</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;  };</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;  </div><div class="line"><a name="l01129"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a06c88120c4ba657484c76994abad6ff9"> 1129</a></span>&#160;  <span class="keyword">typedef</span> std::vector&lt;OBFreeGridPoint*&gt;::iterator <a class="code" href="namespaceOpenBabel.shtml#a06c88120c4ba657484c76994abad6ff9">OBFreeGridPointIterator</a>;</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;</div><div class="line"><a name="l01134"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml"> 1134</a></span>&#160;  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml">OBFreeGrid</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a></div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;  {</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;  <span class="keyword">protected</span>:</div><div class="line"><a name="l01137"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#a661c6652630774c287f0581ec96a5a5b"> 1137</a></span>&#160;    std::vector&lt;OBFreeGridPoint*&gt; <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#a661c6652630774c287f0581ec96a5a5b">_points</a>;  </div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;</div><div class="line"><a name="l01140"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#a9449e7f32d58aed4c9a7d69af5eb1f1c"> 1140</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#a9449e7f32d58aed4c9a7d69af5eb1f1c">OBFreeGrid</a>() </div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;    {</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    }</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;    </div><div class="line"><a name="l01144"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#a6867b3d993d3ea54fcbf15ace7e1d615"> 1144</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#a6867b3d993d3ea54fcbf15ace7e1d615">~OBFreeGrid</a>() </div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    {</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;      <span class="comment">//delete _points;</span></div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;    }</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;</div><div class="line"><a name="l01149"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#a4e1be8152abaa358a5e772ce525945b7"> 1149</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#a4e1be8152abaa358a5e772ce525945b7">NumPoints</a>() </div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;    { </div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;      <span class="keywordflow">return</span> _points.size(); </div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    }</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;    </div><div class="line"><a name="l01154"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#a709611fa0adf9887c075c5298178a6e4"> 1154</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#a709611fa0adf9887c075c5298178a6e4">AddPoint</a>(<span class="keywordtype">double</span> x,<span class="keywordtype">double</span> y,<span class="keywordtype">double</span> z, <span class="keywordtype">double</span> V) </div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;    {</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;      _points.push_back(<span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OpenBabel::OBFreeGridPoint</a>(x,y,z,V));</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    }</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;</div><div class="line"><a name="l01159"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#a88aab5fbed29d6a0f29ef9dbf24d35a3"> 1159</a></span>&#160;    OBFreeGridPointIterator <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#a88aab5fbed29d6a0f29ef9dbf24d35a3">BeginPoints</a>() </div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;    { </div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;      <span class="keywordflow">return</span> _points.begin(); </div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;    }</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    </div><div class="line"><a name="l01164"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#a36b56e087b5d4ab3bde7211488a281df"> 1164</a></span>&#160;    OBFreeGridPointIterator <a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#a36b56e087b5d4ab3bde7211488a281df">EndPoints</a>() </div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;    {</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;      <span class="keywordflow">return</span> _points.begin() + NumPoints(); </div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    }</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    </div><div class="line"><a name="l01169"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#af0f304416e5ff567dedf0f2ab6bdc5e7"> 1169</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OBFreeGridPoint</a> *<a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#af0f304416e5ff567dedf0f2ab6bdc5e7">BeginPoint</a>(OBFreeGridPointIterator &amp;i)</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    {</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;      i = _points.begin();</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;      <span class="keywordflow">return</span>((i == _points.end()) ? (<a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OBFreeGridPoint</a>*)NULL : (<a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OBFreeGridPoint</a>*)*i);</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;    }</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;</div><div class="line"><a name="l01175"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFreeGrid.shtml#ac1c0a75388f059fc605f07f57debcb3d"> 1175</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OBFreeGridPoint</a> *<a class="code" href="classOpenBabel_1_1OBFreeGrid.shtml#ac1c0a75388f059fc605f07f57debcb3d">NextPoint</a>(OBFreeGridPointIterator &amp;i)</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    {</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;      ++i;</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;      <span class="keywordflow">return</span>((i == _points.end()) ? (<a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OBFreeGridPoint</a>*)NULL : (<a class="code" href="classOpenBabel_1_1OBFreeGridPoint.shtml">OBFreeGridPoint</a>*)*i);</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    }</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;  };</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;  <span class="keyword">typedef</span> std::vector&lt;OBGenericData*&gt;::iterator <a class="code" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>;</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;} <span class="comment">//end namespace OpenBabel</span></div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="preprocessor">#endif // OB_GENERIC_H</span></div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_aa83f5870356582d5d98b6d92a7fe0a63"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#aa83f5870356582d5d98b6d92a7fe0a63">OpenBabel::OBElectronicTransitionData::GetWavelengths</a></div><div class="ttdeci">std::vector&lt; double &gt; GetWavelengths() const</div><div class="ttdef"><b>Definition:</b> generic.h:1025</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_ac1c0a75388f059fc605f07f57debcb3d"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#ac1c0a75388f059fc605f07f57debcb3d">OpenBabel::OBFreeGrid::NextPoint</a></div><div class="ttdeci">OBFreeGridPoint * NextPoint(OBFreeGridPointIterator &amp;i)</div><div class="ttdef"><b>Definition:</b> generic.h:1175</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_a0c29ce1b1222c2342245ff45f7fee54d"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#a0c29ce1b1222c2342245ff45f7fee54d">OpenBabel::OBVibrationData::GetRamanActivities</a></div><div class="ttdeci">std::vector&lt; double &gt; GetRamanActivities() const</div><div class="ttdef"><b>Definition:</b> generic.h:880</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml_a88b2066c7f17a13c4f6d936a1e80bed1"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml#a88b2066c7f17a13c4f6d936a1e80bed1">OpenBabel::OBOrbital::GetSymbol</a></div><div class="ttdeci">std::string GetSymbol() const</div><div class="ttdef"><b>Definition:</b> generic.h:942</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsionData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBTorsionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBTorsionData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:655</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_ab97992a9144899afd3b91c39dcc8e5e4"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#ab97992a9144899afd3b91c39dcc8e5e4">OpenBabel::OBTorsion::OBTorsion</a></div><div class="ttdeci">OBTorsion()</div><div class="ttdef"><b>Definition:</b> generic.h:594</div></div>
<div class="ttc" id="classOpenBabel_1_1SpaceGroup_shtml_a2787ce8a302b665bc4f059670f2e68ca"><div class="ttname"><a href="classOpenBabel_1_1SpaceGroup.shtml#a2787ce8a302b665bc4f059670f2e68ca">OpenBabel::SpaceGroup::GetSpaceGroup</a></div><div class="ttdeci">static const SpaceGroup * GetSpaceGroup(char const *name)</div><div class="ttdef"><b>Definition:</b> spacegroup.cpp:366</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b">OpenBabel::OBUnitCell::Hexagonal</a></div><div class="ttdef"><b>Definition:</b> generic.h:313</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairTemplate_shtml_abbe664b8fa3b004481772438aa0c1e8c"><div class="ttname"><a href="classOpenBabel_1_1OBPairTemplate.shtml#abbe664b8fa3b004481772438aa0c1e8c">OpenBabel::OBPairTemplate::OBPairTemplate</a></div><div class="ttdeci">OBPairTemplate()</div><div class="ttdef"><b>Definition:</b> generic.h:135</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae0d7e7ddcd3c5e3c48c6b24908d8404f"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae0d7e7ddcd3c5e3c48c6b24908d8404f">OpenBabel::OBUnitCell::SetSpaceGroup</a></div><div class="ttdeci">void SetSpaceGroup(const int sg)</div><div class="ttdef"><b>Definition:</b> generic.h:379</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_af901a3a7668a1729466dd8fcfe3cae21"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#af901a3a7668a1729466dd8fcfe3cae21">OpenBabel::OBDOSData::_vDensities</a></div><div class="ttdeci">std::vector&lt; double &gt; _vDensities</div><div class="ttdoc">Density of corresponding energy level (number of states / unit cell) </div><div class="ttdef"><b>Definition:</b> generic.h:898</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml">OpenBabel::OBRingData</a></div><div class="ttdoc">Used to store the SSSR set (filled in by OBMol::GetSSSR()) </div><div class="ttdef"><b>Definition:</b> generic.h:262</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_abac522be53893f4e95ffe90e4423e9b7"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#abac522be53893f4e95ffe90e4423e9b7">OpenBabel::OBDOSData::_fermi</a></div><div class="ttdeci">double _fermi</div><div class="ttdoc">Fermi energy (eV) as shown in _vEnergies. </div><div class="ttdef"><b>Definition:</b> generic.h:892</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_aa88341c74a59194a8884e929f97b87b8a37943061a284187ff6e555ac7093f528"><div class="ttname"><a href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8a37943061a284187ff6e555ac7093f528">OpenBabel::input</a></div><div class="ttdef"><b>Definition:</b> generic.h:770</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_a0155ae9ef9ce5360a531a6f2954aa57b"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#a0155ae9ef9ce5360a531a6f2954aa57b">OpenBabel::OBFreeGridPoint::_z</a></div><div class="ttdeci">double _z</div><div class="ttdef"><b>Definition:</b> generic.h:1112</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_a3e36d0e80af7574cee4f2240b8f372dd"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#a3e36d0e80af7574cee4f2240b8f372dd">OpenBabel::OBSetData::AddData</a></div><div class="ttdeci">void AddData(OBGenericData *d)</div><div class="ttdoc">Add an OBGenericData element to the set. </div><div class="ttdef"><b>Definition:</b> generic.h:169</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a59b26af6c838614c16d75c8246612698"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a59b26af6c838614c16d75c8246612698">OpenBabel::OBOrbitalData::SetOpenShell</a></div><div class="ttdeci">void SetOpenShell(bool openShell)</div><div class="ttdef"><b>Definition:</b> generic.h:964</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBOrbitalData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:953</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBSetData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:166</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngle_shtml_a6d6d58b7c653e7457ce0d0c2a907f9aa"><div class="ttname"><a href="classOpenBabel_1_1OBAngle.shtml#a6d6d58b7c653e7457ce0d0c2a907f9aa">OpenBabel::OBAngle::_vertex</a></div><div class="ttdeci">OBAtom * _vertex</div><div class="ttdef"><b>Definition:</b> generic.h:690</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSerialNums_shtml_a0b0be14ee04253bb90997df9884a94ca"><div class="ttname"><a href="classOpenBabel_1_1OBSerialNums.shtml#a0b0be14ee04253bb90997df9884a94ca">OpenBabel::OBSerialNums::OBSerialNums</a></div><div class="ttdeci">OBSerialNums(const OBSerialNums &amp;cp)</div><div class="ttdef"><b>Definition:</b> generic.h:827</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairTemplate_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBPairTemplate.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBPairTemplate::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:137</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_a359543c25a72cf7a9ab33ab75b9b5f1e"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#a359543c25a72cf7a9ab33ab75b9b5f1e">OpenBabel::OBExternalBond::~OBExternalBond</a></div><div class="ttdeci">~OBExternalBond()</div><div class="ttdef"><b>Definition:</b> generic.h:78</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngle_shtml_a8ebc49284f65cb6d82c40fba0f9111b4"><div class="ttname"><a href="classOpenBabel_1_1OBAngle.shtml#a8ebc49284f65cb6d82c40fba0f9111b4">OpenBabel::OBAngle::_radians</a></div><div class="ttdeci">double _radians</div><div class="ttdef"><b>Definition:</b> generic.h:692</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a6a42c8d13245d5d0c11476c56e6a6e33"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a6a42c8d13245d5d0c11476c56e6a6e33">OpenBabel::OBConformerData::SetData</a></div><div class="ttdeci">void SetData(std::vector&lt; std::string &gt; vdat)</div><div class="ttdef"><b>Definition:</b> generic.h:542</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_a709611fa0adf9887c075c5298178a6e4"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#a709611fa0adf9887c075c5298178a6e4">OpenBabel::OBFreeGrid::AddPoint</a></div><div class="ttdeci">void AddPoint(double x, double y, double z, double V)</div><div class="ttdef"><b>Definition:</b> generic.h:1154</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_a519e86e5760ce996627dcf4fe5efab66"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#a519e86e5760ce996627dcf4fe5efab66">OpenBabel::OBRotationData::~OBRotationData</a></div><div class="ttdeci">virtual ~OBRotationData()</div><div class="ttdef"><b>Definition:</b> generic.h:1044</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml_a0acc44e4b0579d4cd684edfc4f5a4007"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml#a0acc44e4b0579d4cd684edfc4f5a4007">OpenBabel::OBVectorData::_vec</a></div><div class="ttdeci">vector3 _vec</div><div class="ttdoc">3D vector to be stored </div><div class="ttdef"><b>Definition:</b> generic.h:1084</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml_a9bdbefcdfbd801132866f1e77ba70aae"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml#a9bdbefcdfbd801132866f1e77ba70aae">OpenBabel::OBVectorData::~OBVectorData</a></div><div class="ttdeci">virtual ~OBVectorData()</div><div class="ttdef"><b>Definition:</b> generic.h:1073</div></div>
<div class="ttc" id="classOpenBabel_1_1OBCommentData_shtml_a0f90c3ff45f5d9a13c71f46dba0770e5"><div class="ttname"><a href="classOpenBabel_1_1OBCommentData.shtml#a0f90c3ff45f5d9a13c71f46dba0770e5">OpenBabel::OBCommentData::SetData</a></div><div class="ttdeci">void SetData(const char *d)</div><div class="ttdef"><b>Definition:</b> generic.h:58</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngleData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAngleData.shtml">OpenBabel::OBAngleData</a></div><div class="ttdoc">Used to hold all angles in a molecule as generic data for OBMol. </div><div class="ttdef"><b>Definition:</b> generic.h:734</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae2ee58ec34164a3ea47d51ab6ffc5c78"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">OpenBabel::OBUnitCell::LatticeType</a></div><div class="ttdeci">LatticeType</div><div class="ttdef"><b>Definition:</b> generic.h:307</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_a0d29cf331efb7fd1213d2ba67fe9c0df"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#a0d29cf331efb7fd1213d2ba67fe9c0df">OpenBabel::OBFreeGridPoint::OBFreeGridPoint</a></div><div class="ttdeci">OBFreeGridPoint()</div><div class="ttdef"><b>Definition:</b> generic.h:1115</div></div>
<div class="ttc" id="classOpenBabel_1_1OBCommentData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBCommentData.shtml">OpenBabel::OBCommentData</a></div><div class="ttdoc">Used to store a comment string (can be multiple lines long) </div><div class="ttdef"><b>Definition:</b> generic.h:45</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_a31d1053aee208079bcc3c5e1884774df"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#a31d1053aee208079bcc3c5e1884774df">OpenBabel::OBTorsion::Empty</a></div><div class="ttdeci">bool Empty()</div><div class="ttdef"><b>Definition:</b> generic.h:607</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2">OpenBabel::OBGenericDataType::VibrationData</a></div><div class="ttdoc">Vibrational modes, frequencies, etc. </div><div class="ttdef"><b>Definition:</b> base.h:127</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a0f4fc4a438c20ca17dc4164245723b61"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a0f4fc4a438c20ca17dc4164245723b61">OpenBabel::OBConformerData::GetDisplacements</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; GetDisplacements()</div><div class="ttdef"><b>Definition:</b> generic.h:549</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_a7ed63bf8b88d0e46e9bda0ec86d84a72"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#a7ed63bf8b88d0e46e9bda0ec86d84a72">OpenBabel::OBDOSData::GetDensities</a></div><div class="ttdeci">std::vector&lt; double &gt; GetDensities() const</div><div class="ttdef"><b>Definition:</b> generic.h:920</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGenericData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGenericData.shtml">OpenBabel::OBGenericData</a></div><div class="ttdoc">Base class for generic data. </div><div class="ttdef"><b>Definition:</b> base.h:189</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_abe457d9fd6ec1a45210ce2e8286563eb"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#abe457d9fd6ec1a45210ce2e8286563eb">OpenBabel::OBFreeGridPoint::GetV</a></div><div class="ttdeci">double GetV()</div><div class="ttdef"><b>Definition:</b> generic.h:1121</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_ab79e03678de23fcca6a71d2b5a75063f"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ab79e03678de23fcca6a71d2b5a75063f">OpenBabel::OBElectronicTransitionData::GetForces</a></div><div class="ttdeci">std::vector&lt; double &gt; GetForces() const</div><div class="ttdef"><b>Definition:</b> generic.h:1027</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_ae4896f79700c8d654fc8f7dcef4eb30a"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#ae4896f79700c8d654fc8f7dcef4eb30a">OpenBabel::OBSetData::_vdata</a></div><div class="ttdeci">std::vector&lt; OBGenericData * &gt; _vdata</div><div class="ttdef"><b>Definition:</b> generic.h:163</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_a4a2dc3eb5d3a544b8afe7507b7189fe9"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#a4a2dc3eb5d3a544b8afe7507b7189fe9">OpenBabel::OBSymmetryData::_pointGroup</a></div><div class="ttdeci">std::string _pointGroup</div><div class="ttdef"><b>Definition:</b> generic.h:563</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe">OpenBabel::OBGenericDataType::MatrixData</a></div><div class="ttdoc">Matrix data (i.e., a 3x3 matrix like a rotation or quadrupole moment) </div><div class="ttdef"><b>Definition:</b> base.h:145</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_ad78d96fd21033509be133340ff90c370"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#ad78d96fd21033509be133340ff90c370">OpenBabel::OBFreeGridPoint::SetX</a></div><div class="ttdeci">void SetX(double x)</div><div class="ttdef"><b>Definition:</b> generic.h:1122</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_a75c73979e73fb44e48424150fa0208c7"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#a75c73979e73fb44e48424150fa0208c7">OpenBabel::OBExternalBond::SetBond</a></div><div class="ttdeci">void SetBond(OBBond *bond)</div><div class="ttdef"><b>Definition:</b> generic.h:85</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_a1998d348b757cd3146c83750f00d8c8a"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#a1998d348b757cd3146c83750f00d8c8a">OpenBabel::OBSetData::OBSetData</a></div><div class="ttdeci">OBSetData()</div><div class="ttdef"><b>Definition:</b> generic.h:165</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7">OpenBabel::OBUnitCell::Triclinic</a></div><div class="ttdef"><b>Definition:</b> generic.h:308</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_a8e1b6f674958d6a07abb778f4b7e203e"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#a8e1b6f674958d6a07abb778f4b7e203e">OpenBabel::OBDOSData::OBDOSData</a></div><div class="ttdeci">OBDOSData()</div><div class="ttdef"><b>Definition:</b> generic.h:904</div></div>
<div class="ttc" id="classOpenBabel_1_1OBCommentData_shtml_abfcfad17c10b3bb5b39412d927518e43"><div class="ttname"><a href="classOpenBabel_1_1OBCommentData.shtml#abfcfad17c10b3bb5b39412d927518e43">OpenBabel::OBCommentData::_data</a></div><div class="ttdeci">std::string _data</div><div class="ttdef"><b>Definition:</b> generic.h:48</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairData_shtml_a366a2531a9485fdfb2f6abbe528d99e1"><div class="ttname"><a href="classOpenBabel_1_1OBPairData.shtml#a366a2531a9485fdfb2f6abbe528d99e1">OpenBabel::OBPairData::_value</a></div><div class="ttdeci">std::string _value</div><div class="ttdoc">The data for this key/value pair. </div><div class="ttdef"><b>Definition:</b> generic.h:115</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBPairData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBPairData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:118</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_a6f947fc048c388c2ae724147a2e74ea2"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#a6f947fc048c388c2ae724147a2e74ea2">OpenBabel::OBFreeGridPoint::GetY</a></div><div class="ttdeci">double GetY()</div><div class="ttdef"><b>Definition:</b> generic.h:1119</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_aeaca5975b0354f81d10792199fee7d4d"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#aeaca5975b0354f81d10792199fee7d4d">OpenBabel::OBVirtualBond::GetOrder</a></div><div class="ttdeci">int GetOrder()</div><div class="ttdef"><b>Definition:</b> generic.h:256</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml_a146acce5019a84cc73f48a23e39b8e6e"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml#a146acce5019a84cc73f48a23e39b8e6e">OpenBabel::OBVectorData::SetData</a></div><div class="ttdeci">void SetData(vector3 data)</div><div class="ttdef"><b>Definition:</b> generic.h:1078</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_af0f304416e5ff567dedf0f2ab6bdc5e7"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#af0f304416e5ff567dedf0f2ab6bdc5e7">OpenBabel::OBFreeGrid::BeginPoint</a></div><div class="ttdeci">OBFreeGridPoint * BeginPoint(OBFreeGridPointIterator &amp;i)</div><div class="ttdef"><b>Definition:</b> generic.h:1169</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_aa88341c74a59194a8884e929f97b87b8ae6eb596f7e638118128651043ff38545"><div class="ttname"><a href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8ae6eb596f7e638118128651043ff38545">OpenBabel::output</a></div><div class="ttdef"><b>Definition:</b> generic.h:769</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a6b16714ce2c29cfda0cd0094a874052f"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a6b16714ce2c29cfda0cd0094a874052f">OpenBabel::OBUnitCell::GetSpaceGroupName</a></div><div class="ttdeci">const std::string GetSpaceGroupName() const</div><div class="ttdef"><b>Definition:</b> generic.h:418</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSerialNums_shtml_ac133c97c2adaeacc4a476bb27bc24500"><div class="ttname"><a href="classOpenBabel_1_1OBSerialNums.shtml#ac133c97c2adaeacc4a476bb27bc24500">OpenBabel::OBSerialNums::OBSerialNums</a></div><div class="ttdeci">OBSerialNums()</div><div class="ttdef"><b>Definition:</b> generic.h:823</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMatrixData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMatrixData.shtml">OpenBabel::OBMatrixData</a></div><div class="ttdoc">Used to hold a 3x3 matrix item (e.g., a quadrupole moment) </div><div class="ttdef"><b>Definition:</b> generic.h:1090</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRing_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRing.shtml">OpenBabel::OBRing</a></div><div class="ttdoc">Stores information on rings in a molecule from SSSR perception. </div><div class="ttdef"><b>Definition:</b> ring.h:39</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a10e686c1334aab2838abd83f0e43c15d"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a10e686c1334aab2838abd83f0e43c15d">OpenBabel::OBConformerData::SetVelocities</a></div><div class="ttdeci">void SetVelocities(std::vector&lt; std::vector&lt; vector3 &gt; &gt; vv)</div><div class="ttdef"><b>Definition:</b> generic.h:538</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml_a4dcfbb9780f44d5fca2effbc30b17ce0"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml#a4dcfbb9780f44d5fca2effbc30b17ce0">OpenBabel::OBOrbital::GetEnergy</a></div><div class="ttdeci">double GetEnergy() const</div><div class="ttdef"><b>Definition:</b> generic.h:940</div></div>
<div class="ttc" id="base_8h_shtml"><div class="ttname"><a href="base_8h.shtml">base.h</a></div><div class="ttdoc">Base classes to build a graph. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a2f7186c492d40a6b69092700ff8aee83"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a2f7186c492d40a6b69092700ff8aee83">OpenBabel::OBUnitCell::_spaceGroupName</a></div><div class="ttdeci">std::string _spaceGroupName</div><div class="ttdef"><b>Definition:</b> generic.h:321</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_a1ebcd47ca2ff7b5950607d0cdc10dd6f"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#a1ebcd47ca2ff7b5950607d0cdc10dd6f">OpenBabel::OBDOSData::~OBDOSData</a></div><div class="ttdeci">virtual ~OBDOSData()</div><div class="ttdef"><b>Definition:</b> generic.h:905</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_a88aab5fbed29d6a0f29ef9dbf24d35a3"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#a88aab5fbed29d6a0f29ef9dbf24d35a3">OpenBabel::OBFreeGrid::BeginPoints</a></div><div class="ttdeci">OBFreeGridPointIterator BeginPoints()</div><div class="ttdef"><b>Definition:</b> generic.h:1159</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml">OpenBabel::OBConformerData</a></div><div class="ttdoc">Used to hold data on conformers or geometry optimization steps. </div><div class="ttdef"><b>Definition:</b> generic.h:511</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_ab47a820667f55e0899534778c414c21d"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#ab47a820667f55e0899534778c414c21d">OpenBabel::OBConformerData::GetForces</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; GetForces()</div><div class="ttdef"><b>Definition:</b> generic.h:546</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a2497d0bb15408f8670722631fd8d90b8"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a2497d0bb15408f8670722631fd8d90b8">OpenBabel::OBUnitCell::_mOrient</a></div><div class="ttdeci">matrix3x3 _mOrient</div><div class="ttdef"><b>Definition:</b> generic.h:319</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_af50fed67352599bfd2adcc8a49c8e6f9"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#af50fed67352599bfd2adcc8a49c8e6f9">OpenBabel::OBOrbitalData::SetBetaOrbitals</a></div><div class="ttdeci">void SetBetaOrbitals(std::vector&lt; OBOrbital &gt; orbitalList)</div><div class="ttdef"><b>Definition:</b> generic.h:960</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_ad069a68962fcc260bd3d4a1f4fc37fcb"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#ad069a68962fcc260bd3d4a1f4fc37fcb">OpenBabel::OBConformerData::_vEnergies</a></div><div class="ttdeci">std::vector&lt; double &gt; _vEnergies</div><div class="ttdoc">Relative energies of conformers (preferably in kJ/mol) </div><div class="ttdef"><b>Definition:</b> generic.h:517</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_a9695376d762d4fd2b12da6f51a99fb92"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#a9695376d762d4fd2b12da6f51a99fb92">OpenBabel::OBVirtualBond::GetStereo</a></div><div class="ttdeci">int GetStereo()</div><div class="ttdef"><b>Definition:</b> generic.h:257</div></div>
<div class="ttc" id="structOpenBabel_1_1quad_shtml"><div class="ttname"><a href="structOpenBabel_1_1quad.shtml">OpenBabel::quad</a></div><div class="ttdoc">A 4-element templated, based on the design of the STL pair&lt;&gt; </div><div class="ttdef"><b>Definition:</b> obutil.h:290</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_ad069a68962fcc260bd3d4a1f4fc37fcb"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#ad069a68962fcc260bd3d4a1f4fc37fcb">OpenBabel::OBDOSData::_vEnergies</a></div><div class="ttdeci">std::vector&lt; double &gt; _vEnergies</div><div class="ttdoc">Energy levels (eV) </div><div class="ttdef"><b>Definition:</b> generic.h:895</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_afdfecc840349fc6b5a750b142a1e8d22"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#afdfecc840349fc6b5a750b142a1e8d22">OpenBabel::OBFreeGridPoint::~OBFreeGridPoint</a></div><div class="ttdeci">~OBFreeGridPoint()</div><div class="ttdef"><b>Definition:</b> generic.h:1117</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ac6f21a0fb4b93bb99f210559a1a6d7d7"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ac6f21a0fb4b93bb99f210559a1a6d7d7">OpenBabel::OBUnitCell::SetSpaceGroup</a></div><div class="ttdeci">void SetSpaceGroup(const SpaceGroup *sg)</div><div class="ttdef"><b>Definition:</b> generic.h:366</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairTemplate_shtml_a8525d460be3e43a8e605d854a2c9e246"><div class="ttname"><a href="classOpenBabel_1_1OBPairTemplate.shtml#a8525d460be3e43a8e605d854a2c9e246">OpenBabel::OBPairTemplate::SetValue</a></div><div class="ttdeci">void SetValue(const ValueT t)</div><div class="ttdef"><b>Definition:</b> generic.h:139</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a5ba6d4475315df1100427dc98074c087"><div class="ttname"><a href="namespaceOpenBabel.shtml#a5ba6d4475315df1100427dc98074c087">OpenBabel::OBPairFloatingPoint</a></div><div class="ttdeci">OBPairTemplate&lt; double &gt; OBPairFloatingPoint</div><div class="ttdoc">Store arbitrary key/value floating point data like OBPairData. </div><div class="ttdef"><b>Definition:</b> generic.h:153</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_aaf4df0ae2afcaf39df55df81e0a18a5a"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#aaf4df0ae2afcaf39df55df81e0a18a5a">OpenBabel::OBSymmetryData::~OBSymmetryData</a></div><div class="ttdeci">~OBSymmetryData()</div><div class="ttdef"><b>Definition:</b> generic.h:568</div></div>
<div class="ttc" id="classOpenBabel_1_1OBChiralData_shtml_a9886384fc77ff9471fc26cd16f822324"><div class="ttname"><a href="classOpenBabel_1_1OBChiralData.shtml#a9886384fc77ff9471fc26cd16f822324">OpenBabel::OBChiralData::_atom4refo</a></div><div class="ttdeci">std::vector&lt; unsigned int &gt; _atom4refo</div><div class="ttdoc">output atom references </div><div class="ttdef"><b>Definition:</b> generic.h:784</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsionData_shtml_a8284d9e040299fd3ee667ad31e34a8d3"><div class="ttname"><a href="classOpenBabel_1_1OBTorsionData.shtml#a8284d9e040299fd3ee667ad31e34a8d3">OpenBabel::OBTorsionData::_torsions</a></div><div class="ttdeci">std::vector&lt; OBTorsion &gt; _torsions</div><div class="ttdef"><b>Definition:</b> generic.h:646</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBVibrationData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:861</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_a90903c2ee1d02cbf37d5162541691f4f"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#a90903c2ee1d02cbf37d5162541691f4f">OpenBabel::OBSymmetryData::GetSpaceGroup</a></div><div class="ttdeci">std::string GetSpaceGroup()</div><div class="ttdef"><b>Definition:</b> generic.h:578</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_ac0a11832241a5fc28ac860aa326ba3c7"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#ac0a11832241a5fc28ac860aa326ba3c7">OpenBabel::OBVibrationData::_vRamanActivities</a></div><div class="ttdeci">std::vector&lt; double &gt; _vRamanActivities</div><div class="ttdoc">Raman activities. </div><div class="ttdef"><b>Definition:</b> generic.h:856</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml_a7c9f75965bfdc8bd1debc7fba3797a65"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml#a7c9f75965bfdc8bd1debc7fba3797a65">OpenBabel::OBVectorData::SetData</a></div><div class="ttdeci">void SetData(double x, double y, double z)</div><div class="ttdef"><b>Definition:</b> generic.h:1076</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a0bdf8334aad62a6bb7ad50f58060c9b6"><div class="ttname"><a href="namespaceOpenBabel.shtml#a0bdf8334aad62a6bb7ad50f58060c9b6">OpenBabel::OBPairInteger</a></div><div class="ttdeci">OBPairTemplate&lt; int &gt; OBPairInteger</div><div class="ttdoc">Store arbitrary key/value integer data like OBPairData. </div><div class="ttdef"><b>Definition:</b> generic.h:151</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_a0acbff6e2a208e73c10daf0d0a7f0d72"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#a0acbff6e2a208e73c10daf0d0a7f0d72">OpenBabel::OBRotationData::GetRotConsts</a></div><div class="ttdeci">std::vector&lt; double &gt; GetRotConsts() const</div><div class="ttdef"><b>Definition:</b> generic.h:1055</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBVirtualBond::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:252</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBondData_shtml_a11f9065de21b2a826607337504954584"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBondData.shtml#a11f9065de21b2a826607337504954584">OpenBabel::OBExternalBondData::GetData</a></div><div class="ttdeci">std::vector&lt; OBExternalBond &gt; * GetData()</div><div class="ttdef"><b>Definition:</b> generic.h:101</div></div>
<div class="ttc" id="classOpenBabel_1_1OBChiralData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBChiralData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBChiralData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:795</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_aa88341c74a59194a8884e929f97b87b8"><div class="ttname"><a href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8">OpenBabel::atomreftype</a></div><div class="ttdeci">atomreftype</div><div class="ttdef"><b>Definition:</b> generic.h:768</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml_abece6e2fb39058fe60114864abdfc592"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml#abece6e2fb39058fe60114864abdfc592">OpenBabel::OBOrbital::_occupation</a></div><div class="ttdeci">double _occupation</div><div class="ttdoc">usually 0, 1, or 2, but can be fractional (e.g., solid-state calcs) </div><div class="ttdef"><b>Definition:</b> generic.h:934</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml">OpenBabel::OBOrbitalData</a></div><div class="ttdoc">Used to hold information about orbital energies. </div><div class="ttdef"><b>Definition:</b> generic.h:947</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_a4e1be8152abaa358a5e772ce525945b7"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#a4e1be8152abaa358a5e772ce525945b7">OpenBabel::OBFreeGrid::NumPoints</a></div><div class="ttdeci">int NumPoints()</div><div class="ttdef"><b>Definition:</b> generic.h:1149</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml">OpenBabel::OBExternalBond</a></div><div class="ttdoc">Used to store information on an external bond (e.g., SMILES fragments) </div><div class="ttdef"><b>Definition:</b> generic.h:69</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a9c98685360a568cd4473b1931e2765d8"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a9c98685360a568cd4473b1931e2765d8">OpenBabel::OBUnitCell::_spaceGroup</a></div><div class="ttdeci">const SpaceGroup * _spaceGroup</div><div class="ttdef"><b>Definition:</b> generic.h:322</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_aef06d0d2bb4513684db4b052f487d45a"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#aef06d0d2bb4513684db4b052f487d45a">OpenBabel::OBSymmetryData::SetSpaceGroup</a></div><div class="ttdeci">void SetSpaceGroup(std::string sg)</div><div class="ttdef"><b>Definition:</b> generic.h:575</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_ac935ab00b5625a4def7fbe6333ede664"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#ac935ab00b5625a4def7fbe6333ede664">OpenBabel::OBVibrationData::~OBVibrationData</a></div><div class="ttdeci">virtual ~OBVibrationData()</div><div class="ttdef"><b>Definition:</b> generic.h:860</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_a59b5e4d007a23da401e33d9f5eea2664"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#a59b5e4d007a23da401e33d9f5eea2664">OpenBabel::OBRotationData::SymNum</a></div><div class="ttdeci">int SymNum</div><div class="ttdoc">Rotational Symmetry Number. </div><div class="ttdef"><b>Definition:</b> generic.h:1062</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_a36b56e087b5d4ab3bde7211488a281df"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#a36b56e087b5d4ab3bde7211488a281df">OpenBabel::OBFreeGrid::EndPoints</a></div><div class="ttdeci">OBFreeGridPointIterator EndPoints()</div><div class="ttdef"><b>Definition:</b> generic.h:1164</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml">OpenBabel::OBBond</a></div><div class="ttdoc">Bond class. </div><div class="ttdef"><b>Definition:</b> bond.h:69</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml">OpenBabel::OBDOSData</a></div><div class="ttdoc">Used to hold density of states information. </div><div class="ttdef"><b>Definition:</b> generic.h:888</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml_ad93165c379393f8eb17506f1f9820a1a"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml#ad93165c379393f8eb17506f1f9820a1a">OpenBabel::OBOrbital::_energy</a></div><div class="ttdeci">double _energy</div><div class="ttdoc">in electron volts </div><div class="ttdef"><b>Definition:</b> generic.h:933</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_a158f9d92716703712f00b3b041adc3cc"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#a158f9d92716703712f00b3b041adc3cc">OpenBabel::OBRotationData::RotConsts</a></div><div class="ttdeci">std::vector&lt; double &gt; RotConsts</div><div class="ttdoc">Rotational constants in GHz. </div><div class="ttdef"><b>Definition:</b> generic.h:1061</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a89ef302474a75b75e95f99892462da96"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a89ef302474a75b75e95f99892462da96">OpenBabel::OBConformerData::_vForces</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; _vForces</div><div class="ttdoc">Atomic forces for each conformer. </div><div class="ttdef"><b>Definition:</b> generic.h:519</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngle_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAngle.shtml">OpenBabel::OBAngle</a></div><div class="ttdoc">Used to hold the 3 atoms in an angle and the angle itself. </div><div class="ttdef"><b>Definition:</b> generic.h:681</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_afd7bd331d7f62a7891b6615b1d1d6f5a"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#afd7bd331d7f62a7891b6615b1d1d6f5a">OpenBabel::OBVibrationData::GetIntensities</a></div><div class="ttdeci">std::vector&lt; double &gt; GetIntensities() const</div><div class="ttdef"><b>Definition:</b> generic.h:878</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsionData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBTorsionData.shtml">OpenBabel::OBTorsionData</a></div><div class="ttdoc">Used to hold torsions as generic data for OBMol. </div><div class="ttdef"><b>Definition:</b> generic.h:641</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_a74418cc8cd2b2a72f8e1778b0cd58a48"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#a74418cc8cd2b2a72f8e1778b0cd58a48">OpenBabel::OBSetData::GetData</a></div><div class="ttdeci">OBGenericData * GetData(const char *s)</div><div class="ttdef"><b>Definition:</b> generic.h:184</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml">OpenBabel::OBTorsion</a></div><div class="ttdoc">Used to hold the torsion data for a single rotatable bond and all four atoms around it...</div><div class="ttdef"><b>Definition:</b> generic.h:584</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:113</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_ac6c0bfd74d984fed427c1ced49acef5a"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#ac6c0bfd74d984fed427c1ced49acef5a">OpenBabel::OBConformerData::_vVelocity</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; _vVelocity</div><div class="ttdoc">Atomic velocities for each conformer (e.g., trajectories) </div><div class="ttdef"><b>Definition:</b> generic.h:521</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8">OpenBabel::OBGenericDataType::ElectronicTransitionData</a></div><div class="ttdoc">Electronic transition data (e.g., UV/Vis, excitation energies, etc.) </div><div class="ttdef"><b>Definition:</b> base.h:154</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_adae49ee49ed76ec2af6149f2a20f34bf"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#adae49ee49ed76ec2af6149f2a20f34bf">OpenBabel::OBTorsion::_ads</a></div><div class="ttdeci">std::vector&lt; triple&lt; OBAtom *, OBAtom *, double &gt; &gt; _ads</div><div class="ttdoc">double is angle in radians </div><div class="ttdef"><b>Definition:</b> generic.h:592</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairTemplate_shtml_a3073ff7ccf70074e0f6d12feca08be41"><div class="ttname"><a href="classOpenBabel_1_1OBPairTemplate.shtml#a3073ff7ccf70074e0f6d12feca08be41">OpenBabel::OBPairTemplate::GetGenericValueDef</a></div><div class="ttdeci">const ValueT &amp; GetGenericValueDef(const ValueT &amp;def_val) const</div><div class="ttdef"><b>Definition:</b> generic.h:141</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMatrixData_shtml_abeefc08263da22a794ddf7a594a7e82a"><div class="ttname"><a href="classOpenBabel_1_1OBMatrixData.shtml#abeefc08263da22a794ddf7a594a7e82a">OpenBabel::OBMatrixData::~OBMatrixData</a></div><div class="ttdeci">virtual ~OBMatrixData()</div><div class="ttdef"><b>Definition:</b> generic.h:1094</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSerialNums_shtml_a392c3230c9d3cca11b1e4d57bdd2ddfd"><div class="ttname"><a href="classOpenBabel_1_1OBSerialNums.shtml#a392c3230c9d3cca11b1e4d57bdd2ddfd">OpenBabel::OBSerialNums::GetData</a></div><div class="ttdeci">std::map&lt; int, OBAtom * &gt; &amp; GetData()</div><div class="ttdef"><b>Definition:</b> generic.h:836</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSerialNums_shtml_a9452a3c2c31da208c07429f21506f423"><div class="ttname"><a href="classOpenBabel_1_1OBSerialNums.shtml#a9452a3c2c31da208c07429f21506f423">OpenBabel::OBSerialNums::_serialMap</a></div><div class="ttdeci">std::map&lt; int, OBAtom * &gt; _serialMap</div><div class="ttdoc">map between serial num </div><div class="ttdef"><b>Definition:</b> generic.h:819</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml">OpenBabel::OBVirtualBond</a></div><div class="ttdoc">Used to temporarily store bonds that reference an atom that has not yet been added to a molecule...</div><div class="ttdef"><b>Definition:</b> generic.h:243</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngle_shtml_aa8238cc457ba8f2b2ec938d5a3aa591b"><div class="ttname"><a href="classOpenBabel_1_1OBAngle.shtml#aa8238cc457ba8f2b2ec938d5a3aa591b">OpenBabel::OBAngle::GetAngle</a></div><div class="ttdeci">double GetAngle() const</div><div class="ttdef"><b>Definition:</b> generic.h:717</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a6516b3a121b34a94e19201da06104afa"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a6516b3a121b34a94e19201da06104afa">OpenBabel::OBUnitCell::SetLatticeType</a></div><div class="ttdeci">void SetLatticeType(const LatticeType lt)</div><div class="ttdoc">Set the Bravais lattice type for this unit cell. </div><div class="ttdef"><b>Definition:</b> generic.h:382</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a10bc2a88336b4e3de55ce7112ad07811"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a10bc2a88336b4e3de55ce7112ad07811">OpenBabel::OBConformerData::GetData</a></div><div class="ttdeci">std::vector&lt; std::string &gt; GetData()</div><div class="ttdef"><b>Definition:</b> generic.h:551</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899">OpenBabel::OBGenericDataType::RotationData</a></div><div class="ttdoc">Rotational energy information. </div><div class="ttdef"><b>Definition:</b> base.h:130</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_a141f8abda99de827deec22f935dc9e31"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#a141f8abda99de827deec22f935dc9e31">OpenBabel::OBExternalBond::GetIdx</a></div><div class="ttdeci">int GetIdx() const</div><div class="ttdef"><b>Definition:</b> generic.h:80</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_affbee34a095ac8d0ab1a4578ae261f07"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#affbee34a095ac8d0ab1a4578ae261f07">OpenBabel::OBFreeGridPoint::SetY</a></div><div class="ttdeci">void SetY(double y)</div><div class="ttdef"><b>Definition:</b> generic.h:1123</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_a472527c3649b76aaaa28597ba3f214dd"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#a472527c3649b76aaaa28597ba3f214dd">OpenBabel::OBSymmetryData::_spaceGroup</a></div><div class="ttdeci">std::string _spaceGroup</div><div class="ttdef"><b>Definition:</b> generic.h:562</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_ab152b3389d8c96e2ac4174ce5932499a"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#ab152b3389d8c96e2ac4174ce5932499a">OpenBabel::OBOrbitalData::~OBOrbitalData</a></div><div class="ttdeci">virtual ~OBOrbitalData()</div><div class="ttdef"><b>Definition:</b> generic.h:952</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngle_shtml_a35e160e815b78f064cd07164bf5aebb2"><div class="ttname"><a href="classOpenBabel_1_1OBAngle.shtml#a35e160e815b78f064cd07164bf5aebb2">OpenBabel::OBAngle::~OBAngle</a></div><div class="ttdeci">~OBAngle()</div><div class="ttdef"><b>Definition:</b> generic.h:705</div></div>
<div class="ttc" id="structOpenBabel_1_1triple_shtml"><div class="ttname"><a href="structOpenBabel_1_1triple.shtml">OpenBabel::triple</a></div><div class="ttdoc">A 3-element templated, based on the design of the STL pair&lt;&gt; </div><div class="ttdef"><b>Definition:</b> obutil.h:254</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_afba45991614dc0f33e799a2c8760b9bd"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#afba45991614dc0f33e799a2c8760b9bd">OpenBabel::OBOrbitalData::_openShell</a></div><div class="ttdeci">bool _openShell</div><div class="ttdoc">Whether we store both alpha and beta spin-orbitals (i.e., a restricted open-shell or unrestricted cal...</div><div class="ttdef"><b>Definition:</b> generic.h:987</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">OpenBabel::OBGenericDataType::SetData</a></div><div class="ttdoc">Set Data (a set of OBGenericData) </div><div class="ttdef"><b>Definition:</b> base.h:136</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff">OpenBabel::OBUnitCell::Monoclinic</a></div><div class="ttdef"><b>Definition:</b> generic.h:309</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a474459fcdeb63c82700a345e59330645"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a474459fcdeb63c82700a345e59330645">OpenBabel::OBUnitCell::_lattice</a></div><div class="ttdeci">LatticeType _lattice</div><div class="ttdef"><b>Definition:</b> generic.h:323</div></div>
<div class="ttc" id="classOpenBabel_1_1OBChiralData_shtml_a89411064df2cf2407f4a89f75a5ea618"><div class="ttname"><a href="classOpenBabel_1_1OBChiralData.shtml#a89411064df2cf2407f4a89f75a5ea618">OpenBabel::OBChiralData::_atom4refs</a></div><div class="ttdeci">std::vector&lt; unsigned int &gt; _atom4refs</div><div class="ttdoc">input atom references </div><div class="ttdef"><b>Definition:</b> generic.h:783</div></div>
<div class="ttc" id="classOpenBabel_1_1OBChiralData_shtml_abc2d4b013efd6a8788da4a31489d28b9"><div class="ttname"><a href="classOpenBabel_1_1OBChiralData.shtml#abc2d4b013efd6a8788da4a31489d28b9">OpenBabel::OBChiralData::~OBChiralData</a></div><div class="ttdeci">~OBChiralData()</div><div class="ttdef"><b>Definition:</b> generic.h:798</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_afd34955993e8fa4ca5f54512c75ae2f6"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#afd34955993e8fa4ca5f54512c75ae2f6">OpenBabel::OBElectronicTransitionData::OBElectronicTransitionData</a></div><div class="ttdeci">OBElectronicTransitionData()</div><div class="ttdef"><b>Definition:</b> generic.h:1011</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml_abc035539018329c68382babb1648e1e3"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml#abc035539018329c68382babb1648e1e3">OpenBabel::OBOrbital::_mullikenSymbol</a></div><div class="ttdeci">std::string _mullikenSymbol</div><div class="ttdoc">symmetry designation </div><div class="ttdef"><b>Definition:</b> generic.h:935</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_a0af4f3bf511770f64efd9b03197fe05d"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#a0af4f3bf511770f64efd9b03197fe05d">OpenBabel::OBTorsion::GetSize</a></div><div class="ttdeci">size_t GetSize() const</div><div class="ttdef"><b>Definition:</b> generic.h:619</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBondData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBondData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBExternalBondData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:98</div></div>
<div class="ttc" id="classOpenBabel_1_1OBChiralData_shtml_a22c1e0c27cee34369adf919eed3e3aac"><div class="ttname"><a href="classOpenBabel_1_1OBChiralData.shtml#a22c1e0c27cee34369adf919eed3e3aac">OpenBabel::OBChiralData::parity</a></div><div class="ttdeci">int parity</div><div class="ttdef"><b>Definition:</b> generic.h:789</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_abb406f6b7d63af84fda76dbcdbac66c5"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#abb406f6b7d63af84fda76dbcdbac66c5">OpenBabel::OBVirtualBond::_end</a></div><div class="ttdeci">int _end</div><div class="ttdef"><b>Definition:</b> generic.h:247</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml_ae5d7e5e5fcbebc063f46f64888f7e758"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml#ae5d7e5e5fcbebc063f46f64888f7e758">OpenBabel::OBOrbital::GetOccupation</a></div><div class="ttdeci">double GetOccupation() const</div><div class="ttdef"><b>Definition:</b> generic.h:941</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4">OpenBabel::OBUnitCell::Undefined</a></div><div class="ttdef"><b>Definition:</b> generic.h:307</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_adaea5fe04cd5876e6f2f8479fd6dc726"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#adaea5fe04cd5876e6f2f8479fd6dc726">OpenBabel::OBOrbitalData::SetHOMO</a></div><div class="ttdeci">void SetHOMO(int alpha, int beta=0)</div><div class="ttdef"><b>Definition:</b> generic.h:962</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_a223305867f2593a05ebbc37bdc9bb674"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#a223305867f2593a05ebbc37bdc9bb674">OpenBabel::OBTorsion::GetADs</a></div><div class="ttdeci">std::vector&lt; triple&lt; OBAtom *, OBAtom *, double &gt; &gt; GetADs()</div><div class="ttdef"><b>Definition:</b> generic.h:629</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_a4ead9f82750c29ffd92054dd64bebbf1"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#a4ead9f82750c29ffd92054dd64bebbf1">OpenBabel::OBDOSData::GetFermiEnergy</a></div><div class="ttdeci">double GetFermiEnergy() const</div><div class="ttdef"><b>Definition:</b> generic.h:916</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBUnitCell::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:328</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8">OpenBabel::OBUnitCell::Orthorhombic</a></div><div class="ttdef"><b>Definition:</b> generic.h:310</div></div>
<div class="ttc" id="classOpenBabel_1_1OBCommentData_shtml_a71ec30c014852fe90aed06daa76e378b"><div class="ttname"><a href="classOpenBabel_1_1OBCommentData.shtml#a71ec30c014852fe90aed06daa76e378b">OpenBabel::OBCommentData::SetData</a></div><div class="ttdeci">void SetData(const std::string &amp;data)</div><div class="ttdef"><b>Definition:</b> generic.h:56</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_aa50dcd20da6bba326a2f820ded0c1b19"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#aa50dcd20da6bba326a2f820ded0c1b19">OpenBabel::OBExternalBond::GetAtom</a></div><div class="ttdeci">OBAtom * GetAtom() const</div><div class="ttdef"><b>Definition:</b> generic.h:81</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngleData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBAngleData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBAngleData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:752</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_aaea44fb2ea8511661a37ff43c6df9149"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#aaea44fb2ea8511661a37ff43c6df9149">OpenBabel::OBConformerData::_vDisplace</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; _vDisplace</div><div class="ttdoc">Atomic displacements for each conformer (e.g., RMS distances) </div><div class="ttdef"><b>Definition:</b> generic.h:523</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBPairData.shtml">OpenBabel::OBPairData</a></div><div class="ttdoc">Used to store arbitrary text attribute/value relationships. </div><div class="ttdef"><b>Definition:</b> generic.h:112</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_ac97e8fd919f733fa03de1b70f5ee9ea8"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#ac97e8fd919f733fa03de1b70f5ee9ea8">OpenBabel::OBVibrationData::GetLx</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; GetLx() const</div><div class="ttdef"><b>Definition:</b> generic.h:874</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a97fd4b5e51251d3647a1d8744f5fc178"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a97fd4b5e51251d3647a1d8744f5fc178">OpenBabel::OBConformerData::SetDisplacements</a></div><div class="ttdeci">void SetDisplacements(std::vector&lt; std::vector&lt; vector3 &gt; &gt; vd)</div><div class="ttdef"><b>Definition:</b> generic.h:540</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a">OpenBabel::OBGenericDataType::PairData</a></div><div class="ttdoc">Arbitrary key/value data, i.e., OBPairData. </div><div class="ttdef"><b>Definition:</b> base.h:70</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_a9449e7f32d58aed4c9a7d69af5eb1f1c"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#a9449e7f32d58aed4c9a7d69af5eb1f1c">OpenBabel::OBFreeGrid::OBFreeGrid</a></div><div class="ttdeci">OBFreeGrid()</div><div class="ttdef"><b>Definition:</b> generic.h:1140</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_a843f5ca9523fa7c3ecd22eb3f87a207d"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#a843f5ca9523fa7c3ecd22eb3f87a207d">OpenBabel::OBSetData::SetData</a></div><div class="ttdeci">void SetData(std::vector&lt; OBGenericData *&gt; &amp;vdata)</div><div class="ttdoc">Set the array of data to a new vector. </div><div class="ttdef"><b>Definition:</b> generic.h:178</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_a2917f1fdbf033388ba0f3b37f5a23303"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#a2917f1fdbf033388ba0f3b37f5a23303">OpenBabel::OBFreeGridPoint::GetZ</a></div><div class="ttdeci">double GetZ()</div><div class="ttdef"><b>Definition:</b> generic.h:1120</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a11ede097c372a7bca3ac9bbc8325aade"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a11ede097c372a7bca3ac9bbc8325aade">OpenBabel::OBConformerData::GetDimension</a></div><div class="ttdeci">std::vector&lt; unsigned short &gt; GetDimension()</div><div class="ttdef"><b>Definition:</b> generic.h:544</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a14c67483d74fb40365254f84296d7cc7"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a14c67483d74fb40365254f84296d7cc7">OpenBabel::OBOrbitalData::GetBetaOrbitals</a></div><div class="ttdeci">std::vector&lt; OBOrbital &gt; GetBetaOrbitals()</div><div class="ttdef"><b>Definition:</b> generic.h:972</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairData_shtml_a36b6ff14e0bae8e56e4637ab727fc8cb"><div class="ttname"><a href="classOpenBabel_1_1OBPairData.shtml#a36b6ff14e0bae8e56e4637ab727fc8cb">OpenBabel::OBPairData::SetValue</a></div><div class="ttdeci">void SetValue(const std::string &amp;v)</div><div class="ttdef"><b>Definition:</b> generic.h:121</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a76ccdf2ccfbefae104ff52932dcf11c1"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a76ccdf2ccfbefae104ff52932dcf11c1">OpenBabel::OBUnitCell::SetSpaceGroup</a></div><div class="ttdeci">void SetSpaceGroup(const std::string sg)</div><div class="ttdef"><b>Definition:</b> generic.h:371</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngleData_shtml_a259e7ee82fbf67240f0b058ce4293d2e"><div class="ttname"><a href="classOpenBabel_1_1OBAngleData.shtml#a259e7ee82fbf67240f0b058ce4293d2e">OpenBabel::OBAngleData::_angles</a></div><div class="ttdeci">std::vector&lt; OBAngle &gt; _angles</div><div class="ttdef"><b>Definition:</b> generic.h:739</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml">OpenBabel::OBSetData</a></div><div class="ttdoc">Used to store arbitrary attribute/set relationships. Should be used to store a set of OBGenericData b...</div><div class="ttdef"><b>Definition:</b> generic.h:160</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairTemplate_shtml_a8e244c63178d867c1294ea6011dc73ff"><div class="ttname"><a href="classOpenBabel_1_1OBPairTemplate.shtml#a8e244c63178d867c1294ea6011dc73ff">OpenBabel::OBPairTemplate::_value</a></div><div class="ttdeci">ValueT _value</div><div class="ttdoc">The data for this key/value pair. </div><div class="ttdef"><b>Definition:</b> generic.h:133</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_a661c6652630774c287f0581ec96a5a5b"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#a661c6652630774c287f0581ec96a5a5b">OpenBabel::OBFreeGrid::_points</a></div><div class="ttdeci">std::vector&lt; OBFreeGridPoint * &gt; _points</div><div class="ttdoc">coordinates with accompanying float values </div><div class="ttdef"><b>Definition:</b> generic.h:1137</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21">OpenBabel::OBUnitCell::Tetragonal</a></div><div class="ttdef"><b>Definition:</b> generic.h:311</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_ac555eb9ba9de86341d5a4a0c5a22f098"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ac555eb9ba9de86341d5a4a0c5a22f098">OpenBabel::OBElectronicTransitionData::_vRotatoryStrengthsVelocity</a></div><div class="ttdeci">std::vector&lt; double &gt; _vRotatoryStrengthsVelocity</div><div class="ttdoc">Rotatory strengths (velocity) </div><div class="ttdef"><b>Definition:</b> generic.h:1005</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_af55b99b7ce56986ce4421f598bb7b1d7"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#af55b99b7ce56986ce4421f598bb7b1d7">OpenBabel::OBRotationData::OBRotationData</a></div><div class="ttdeci">OBRotationData()</div><div class="ttdef"><b>Definition:</b> generic.h:1043</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_ade82f620db3580ccda7bfb106846b277"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#ade82f620db3580ccda7bfb106846b277">OpenBabel::OBDOSData::GetIntegration</a></div><div class="ttdeci">std::vector&lt; double &gt; GetIntegration() const</div><div class="ttdef"><b>Definition:</b> generic.h:922</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml_ac18e5c8cbf9cedf2ae1e7f77c40e529d"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml#ac18e5c8cbf9cedf2ae1e7f77c40e529d">OpenBabel::OBVectorData::GetData</a></div><div class="ttdeci">vector3 GetData() const</div><div class="ttdef"><b>Definition:</b> generic.h:1080</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a71b85b5ab742b2176819410e877ca1d8"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a71b85b5ab742b2176819410e877ca1d8">OpenBabel::OBOrbitalData::_betaHOMO</a></div><div class="ttdeci">unsigned int _betaHOMO</div><div class="ttdoc">Highest occupied for _betaOrbitals (if needed) </div><div class="ttdef"><b>Definition:</b> generic.h:986</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml">OpenBabel::OBFreeGridPoint</a></div><div class="ttdoc">Helper class for OBFreeGrid Can hold a random coordinate and associated value. </div><div class="ttdef"><b>Definition:</b> generic.h:1109</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsionData_shtml_a0af4f3bf511770f64efd9b03197fe05d"><div class="ttname"><a href="classOpenBabel_1_1OBTorsionData.shtml#a0af4f3bf511770f64efd9b03197fe05d">OpenBabel::OBTorsionData::GetSize</a></div><div class="ttdeci">size_t GetSize() const</div><div class="ttdef"><b>Definition:</b> generic.h:669</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a292afe6930530f12172ef452712fc5e3"><div class="ttname"><a href="namespaceOpenBabel.shtml#a292afe6930530f12172ef452712fc5e3">OpenBabel::OBPairBool</a></div><div class="ttdeci">OBPairTemplate&lt; bool &gt; OBPairBool</div><div class="ttdoc">Store arbitrary key/value boolean data like OBPairData. </div><div class="ttdef"><b>Definition:</b> generic.h:155</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairTemplate_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBPairTemplate.shtml">OpenBabel::OBPairTemplate</a></div><div class="ttdoc">Used to store arbitrary attribute/value relationsips of any type. </div><div class="ttdef"><b>Definition:</b> generic.h:130</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_a523167939ae7b279d2af900ef53ac0d9"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a523167939ae7b279d2af900ef53ac0d9">OpenBabel::OBElectronicTransitionData::_vWavelengths</a></div><div class="ttdeci">std::vector&lt; double &gt; _vWavelengths</div><div class="ttdoc">Wavelengths (nm) </div><div class="ttdef"><b>Definition:</b> generic.h:996</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml_a7ebf015db0f2457d856d0eb688769d41"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml#a7ebf015db0f2457d856d0eb688769d41">OpenBabel::OBVectorData::OBVectorData</a></div><div class="ttdeci">OBVectorData()</div><div class="ttdef"><b>Definition:</b> generic.h:1072</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_aa0d884087af9a4eac62349cdd16f0e52"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#aa0d884087af9a4eac62349cdd16f0e52">OpenBabel::OBTorsion::_bc</a></div><div class="ttdeci">std::pair&lt; OBAtom *, OBAtom * &gt; _bc</div><div class="ttdef"><b>Definition:</b> generic.h:590</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_afc186d85b94bae6548e433324215fff6"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#afc186d85b94bae6548e433324215fff6">OpenBabel::OBVirtualBond::GetEnd</a></div><div class="ttdeci">int GetEnd()</div><div class="ttdef"><b>Definition:</b> generic.h:255</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_aa753c6ca5d794e055f8b4b590c6ba538"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#aa753c6ca5d794e055f8b4b590c6ba538">OpenBabel::OBVirtualBond::_stereo</a></div><div class="ttdeci">int _stereo</div><div class="ttdef"><b>Definition:</b> generic.h:249</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBConformerData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:530</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a">OpenBabel::OBGenericDataType::DOSData</a></div><div class="ttdoc">Density of States data (fermi energy and energy vs. density data) </div><div class="ttdef"><b>Definition:</b> base.h:151</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a82a690605d1d541a30d7ca1bd8e902be"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a82a690605d1d541a30d7ca1bd8e902be">OpenBabel::OBOrbitalData::GetAlphaOrbitals</a></div><div class="ttdeci">std::vector&lt; OBOrbital &gt; GetAlphaOrbitals()</div><div class="ttdef"><b>Definition:</b> generic.h:971</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_afd15b15b68d5511ac566e95c537883e7"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#afd15b15b68d5511ac566e95c537883e7">OpenBabel::OBOrbitalData::OBOrbitalData</a></div><div class="ttdeci">OBOrbitalData()</div><div class="ttdef"><b>Definition:</b> generic.h:950</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_a2ceb8f352cca6f223aff43d41f4fb2f1"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#a2ceb8f352cca6f223aff43d41f4fb2f1">OpenBabel::OBSymmetryData::SetData</a></div><div class="ttdeci">void SetData(std::string pg, std::string sg=&quot;&quot;)</div><div class="ttdef"><b>Definition:</b> generic.h:572</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_a551c36cae879624b97356cf0aed85e5c"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#a551c36cae879624b97356cf0aed85e5c">OpenBabel::OBDOSData::_vIntegration</a></div><div class="ttdeci">std::vector&lt; double &gt; _vIntegration</div><div class="ttdoc">Integrated DOS vector. </div><div class="ttdef"><b>Definition:</b> generic.h:901</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_aeec65125d586ace9d5764cc437b6e33d"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#aeec65125d586ace9d5764cc437b6e33d">OpenBabel::OBOrbitalData::_alphaHOMO</a></div><div class="ttdeci">unsigned int _alphaHOMO</div><div class="ttdoc">Highest occupied molecular orbital for _alphaOrbitals. </div><div class="ttdef"><b>Definition:</b> generic.h:985</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a3d8b242eebd5ab58552d535f86bd1609"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a3d8b242eebd5ab58552d535f86bd1609">OpenBabel::OBConformerData::GetEnergies</a></div><div class="ttdeci">std::vector&lt; double &gt; GetEnergies()</div><div class="ttdef"><b>Definition:</b> generic.h:545</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml">OpenBabel::OBOrbital</a></div><div class="ttdoc">Used to store energy, occupation, and orbital symmetry of a particular orbital. </div><div class="ttdef"><b>Definition:</b> generic.h:929</div></div>
<div class="ttc" id="classOpenBabel_1_1vector3_shtml"><div class="ttname"><a href="classOpenBabel_1_1vector3.shtml">OpenBabel::vector3</a></div><div class="ttdoc">Represents a vector in 3-dimensional real space. </div><div class="ttdef"><b>Definition:</b> vector3.h:45</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_a42a5dd5b1bb3906af399c66764589c23"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#a42a5dd5b1bb3906af399c66764589c23">OpenBabel::OBTorsion::~OBTorsion</a></div><div class="ttdeci">~OBTorsion()</div><div class="ttdef"><b>Definition:</b> generic.h:602</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_a56edd7b7680e89060aa3dc51d4ada8a5"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#a56edd7b7680e89060aa3dc51d4ada8a5">OpenBabel::OBDOSData::GetEnergies</a></div><div class="ttdeci">std::vector&lt; double &gt; GetEnergies() const</div><div class="ttdef"><b>Definition:</b> generic.h:918</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a8d02fbc6c58e1abe5c8043f1253f6ab9"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a8d02fbc6c58e1abe5c8043f1253f6ab9">OpenBabel::OBUnitCell::_mOrtho</a></div><div class="ttdeci">matrix3x3 _mOrtho</div><div class="ttdef"><b>Definition:</b> generic.h:318</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSerialNums_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBSerialNums.shtml">OpenBabel::OBSerialNums</a></div><div class="ttdoc">Defines a map between serial numbers (e.g., in a PDB file) and OBAtom objects inside a molecule...</div><div class="ttdef"><b>Definition:</b> generic.h:816</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMatrixData_shtml_ae664fb7cf64216e4b362cd4e48b018f5"><div class="ttname"><a href="classOpenBabel_1_1OBMatrixData.shtml#ae664fb7cf64216e4b362cd4e48b018f5">OpenBabel::OBMatrixData::_matrix</a></div><div class="ttdeci">matrix3x3 _matrix</div><div class="ttdoc">3x3 matrix to be stored </div><div class="ttdef"><b>Definition:</b> generic.h:1103</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a98270b6a5c308d32731da6e0347604f8"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a98270b6a5c308d32731da6e0347604f8">OpenBabel::OBConformerData::SetDimension</a></div><div class="ttdeci">void SetDimension(std::vector&lt; unsigned short &gt; vd)</div><div class="ttdef"><b>Definition:</b> generic.h:535</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_ac1fc78db5080260be71f604ee5bbfcd2"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#ac1fc78db5080260be71f604ee5bbfcd2">OpenBabel::OBSetData::GetData</a></div><div class="ttdeci">OBGenericData * GetData(const std::string &amp;s)</div><div class="ttdef"><b>Definition:</b> generic.h:196</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMatrixData_shtml_a6138059beb490361a705d6a7bf361922"><div class="ttname"><a href="classOpenBabel_1_1OBMatrixData.shtml#a6138059beb490361a705d6a7bf361922">OpenBabel::OBMatrixData::GetData</a></div><div class="ttdeci">matrix3x3 GetData() const</div><div class="ttdef"><b>Definition:</b> generic.h:1099</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSerialNums_shtml_aca58b64b964da63d832ce0ad1c7ed730"><div class="ttname"><a href="classOpenBabel_1_1OBSerialNums.shtml#aca58b64b964da63d832ce0ad1c7ed730">OpenBabel::OBSerialNums::SetData</a></div><div class="ttdeci">void SetData(std::map&lt; int, OBAtom *&gt; &amp;sm)</div><div class="ttdef"><b>Definition:</b> generic.h:837</div></div>
<div class="ttc" id="classOpenBabel_1_1matrix3x3_shtml"><div class="ttname"><a href="classOpenBabel_1_1matrix3x3.shtml">OpenBabel::matrix3x3</a></div><div class="ttdoc">Represents a real 3x3 matrix. </div><div class="ttdef"><b>Definition:</b> matrix3x3.h:42</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a4e04f720581a30502f781e620fb56af6"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a4e04f720581a30502f781e620fb56af6">OpenBabel::OBUnitCell::_offset</a></div><div class="ttdeci">vector3 _offset</div><div class="ttdef"><b>Definition:</b> generic.h:320</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_adb5679cd09bed805338a74cc79b9b370"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#adb5679cd09bed805338a74cc79b9b370">OpenBabel::OBOrbitalData::GetBetaHOMO</a></div><div class="ttdeci">unsigned int GetBetaHOMO()</div><div class="ttdef"><b>Definition:</b> generic.h:970</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbital_shtml_afd66805019461ffb95634bf0e79dc992"><div class="ttname"><a href="classOpenBabel_1_1OBOrbital.shtml#afd66805019461ffb95634bf0e79dc992">OpenBabel::OBOrbital::SetData</a></div><div class="ttdeci">void SetData(double energy, double occupation=2.0, std::string symbol=&quot;A&quot;)</div><div class="ttdef"><b>Definition:</b> generic.h:937</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a83d2707a7d694d2dcbca91b52e537953"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a83d2707a7d694d2dcbca91b52e537953">OpenBabel::OBConformerData::SetEnergies</a></div><div class="ttdeci">void SetEnergies(std::vector&lt; double &gt; ve)</div><div class="ttdef"><b>Definition:</b> generic.h:536</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairData_shtml_aef706f61b8b25bb7de414f46bbe317b3"><div class="ttname"><a href="classOpenBabel_1_1OBPairData.shtml#aef706f61b8b25bb7de414f46bbe317b3">OpenBabel::OBPairData::SetValue</a></div><div class="ttdeci">void SetValue(const char *v)</div><div class="ttdef"><b>Definition:</b> generic.h:120</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_a90ab08fd1dc96f17cf3562d8afeb60c0"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#a90ab08fd1dc96f17cf3562d8afeb60c0">OpenBabel::OBRotationData::type</a></div><div class="ttdeci">RType type</div><div class="ttdoc">linear, symmetric or asymmetric top </div><div class="ttdef"><b>Definition:</b> generic.h:1063</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_abe68de305caa7adad7d213c05e6e20fe"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#abe68de305caa7adad7d213c05e6e20fe">OpenBabel::OBElectronicTransitionData::GetRotatoryStrengthsVelocity</a></div><div class="ttdeci">std::vector&lt; double &gt; GetRotatoryStrengthsVelocity() const</div><div class="ttdef"><b>Definition:</b> generic.h:1031</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBondData_shtml_a8b0c5550b7332d65d1c285004891cff2"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBondData.shtml#a8b0c5550b7332d65d1c285004891cff2">OpenBabel::OBExternalBondData::_vexbnd</a></div><div class="ttdeci">std::vector&lt; OBExternalBond &gt; _vexbnd</div><div class="ttdef"><b>Definition:</b> generic.h:93</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_afda39669e25831ec186e17cb437dba09"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09">OpenBabel::OBRotationData::RType</a></div><div class="ttdeci">RType</div><div class="ttdef"><b>Definition:</b> generic.h:1042</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBElectronicTransitionData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:1013</div></div>
<div class="ttc" id="classOpenBabel_1_1OBChiralData_shtml_a9f82047fe27246702be9b5032768ffb5"><div class="ttname"><a href="classOpenBabel_1_1OBChiralData.shtml#a9f82047fe27246702be9b5032768ffb5">OpenBabel::OBChiralData::_atom4refc</a></div><div class="ttdeci">std::vector&lt; unsigned int &gt; _atom4refc</div><div class="ttdoc">calcvolume references </div><div class="ttdef"><b>Definition:</b> generic.h:785</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_a94998f1366e53e7430a50209b05424ed"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a94998f1366e53e7430a50209b05424ed">OpenBabel::OBElectronicTransitionData::_vEDipole</a></div><div class="ttdeci">std::vector&lt; double &gt; _vEDipole</div><div class="ttdoc">Electric dipole strengths. </div><div class="ttdef"><b>Definition:</b> generic.h:1002</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a22dbea225bd03af66ef0db074cff402e"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a22dbea225bd03af66ef0db074cff402e">OpenBabel::OBUnitCell::GetSpaceGroupName</a></div><div class="ttdeci">const std::string GetSpaceGroupName()</div><div class="ttdef"><b>Definition:</b> generic.h:417</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_a51dc39bf2ae50dbfddf666232deac1ec"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#a51dc39bf2ae50dbfddf666232deac1ec">OpenBabel::OBFreeGridPoint::SetZ</a></div><div class="ttdeci">void SetZ(double z)</div><div class="ttdef"><b>Definition:</b> generic.h:1124</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a29eaffe421897707aa12103bec99d3c9"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a29eaffe421897707aa12103bec99d3c9">OpenBabel::OBUnitCell::~OBUnitCell</a></div><div class="ttdeci">~OBUnitCell()</div><div class="ttdef"><b>Definition:</b> generic.h:330</div></div>
<div class="ttc" id="classOpenBabel_1_1OBCommentData_shtml_a181123deb29bb853771bb72608c7e81b"><div class="ttname"><a href="classOpenBabel_1_1OBCommentData.shtml#a181123deb29bb853771bb72608c7e81b">OpenBabel::OBCommentData::GetData</a></div><div class="ttdeci">const std::string &amp; GetData() const</div><div class="ttdef"><b>Definition:</b> generic.h:60</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9">OpenBabel::OBGenericDataType::VectorData</a></div><div class="ttdoc">Vector Data (i.e., one vector like a dipole moment) </div><div class="ttdef"><b>Definition:</b> base.h:142</div></div>
<div class="ttc" id="classOpenBabel_1_1OBCommentData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBCommentData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBCommentData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:52</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml">OpenBabel::OBUnitCell</a></div><div class="ttdoc">Used for storing information about periodic boundary conditions with conversion to/from translation v...</div><div class="ttdef"><b>Definition:</b> generic.h:304</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a6c0b393e8fabed75f977c2ef2e9776b4"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a6c0b393e8fabed75f977c2ef2e9776b4">OpenBabel::OBConformerData::_vDimension</a></div><div class="ttdeci">std::vector&lt; unsigned short &gt; _vDimension</div><div class="ttdoc">Dimensionalities of conformers. </div><div class="ttdef"><b>Definition:</b> generic.h:515</div></div>
<div class="ttc" id="classOpenBabel_1_1OBCommentData_shtml_a6145f0df06364b6d58c728368db8f992"><div class="ttname"><a href="classOpenBabel_1_1OBCommentData.shtml#a6145f0df06364b6d58c728368db8f992">OpenBabel::OBCommentData::GetValue</a></div><div class="ttdeci">virtual const std::string &amp; GetValue() const</div><div class="ttdoc">Base class returns a default value (the attribute type) but should never be called. </div><div class="ttdef"><b>Definition:</b> generic.h:62</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml_aa1a05257821a8156625beabb7dd58e0b"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml#aa1a05257821a8156625beabb7dd58e0b">OpenBabel::OBRingData::BeginRings</a></div><div class="ttdeci">std::vector&lt; OBRing * &gt;::iterator BeginRings()</div><div class="ttdef"><b>Definition:</b> generic.h:292</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_a36ab6ab400cbf925a15ddab8375c9faf"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#a36ab6ab400cbf925a15ddab8375c9faf">OpenBabel::OBRotationData::GetSymmetryNumber</a></div><div class="ttdeci">int GetSymmetryNumber() const</div><div class="ttdef"><b>Definition:</b> generic.h:1057</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ae8d9d7dd615b5fa7b533c075fe744d8f"><div class="ttname"><a href="namespaceOpenBabel.shtml#ae8d9d7dd615b5fa7b533c075fe744d8f">OpenBabel::Trim</a></div><div class="ttdeci">std::string &amp; Trim(std::string &amp;txt)</div><div class="ttdoc">Remove leading and trailing whitespace from a string (docs in tokenst.cpp) </div><div class="ttdef"><b>Definition:</b> tokenst.cpp:135</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a7b32d28d61b3149a4a5b1051d86918b0"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a7b32d28d61b3149a4a5b1051d86918b0">OpenBabel::OBOrbitalData::IsOpenShell</a></div><div class="ttdeci">bool IsOpenShell()</div><div class="ttdef"><b>Definition:</b> generic.h:967</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairTemplate_shtml_ac95dfe161401ea01bb343f4ca680078d"><div class="ttname"><a href="classOpenBabel_1_1OBPairTemplate.shtml#ac95dfe161401ea01bb343f4ca680078d">OpenBabel::OBPairTemplate::GetGenericValue</a></div><div class="ttdeci">virtual const ValueT &amp; GetGenericValue() const</div><div class="ttdef"><b>Definition:</b> generic.h:140</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml_a2da396a9610e4fd1218b885407375568"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml#a2da396a9610e4fd1218b885407375568">OpenBabel::OBRingData::_vr</a></div><div class="ttdeci">std::vector&lt; OBRing * &gt; _vr</div><div class="ttdef"><b>Definition:</b> generic.h:265</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2">OpenBabel::OBGenericDataType::ElectronicData</a></div><div class="ttdoc">Electronic levels, redox states, orbitals, etc. </div><div class="ttdef"><b>Definition:</b> base.h:124</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_a0241cfc005500b6686feb9a049923cb4"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a0241cfc005500b6686feb9a049923cb4">OpenBabel::OBElectronicTransitionData::GetRotatoryStrengthsLength</a></div><div class="ttdeci">std::vector&lt; double &gt; GetRotatoryStrengthsLength() const</div><div class="ttdef"><b>Definition:</b> generic.h:1033</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml_a6867b3d993d3ea54fcbf15ace7e1d615"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml#a6867b3d993d3ea54fcbf15ace7e1d615">OpenBabel::OBFreeGrid::~OBFreeGrid</a></div><div class="ttdeci">~OBFreeGrid()</div><div class="ttdef"><b>Definition:</b> generic.h:1144</div></div>
<div class="ttc" id="classOpenBabel_1_1OBDOSData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBDOSData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBDOSData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:906</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a1243d416863fddeed1c5ba20d7c7a419"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a1243d416863fddeed1c5ba20d7c7a419">OpenBabel::OBOrbitalData::GetAlphaHOMO</a></div><div class="ttdeci">unsigned int GetAlphaHOMO()</div><div class="ttdef"><b>Definition:</b> generic.h:969</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml_a07ad405727c652a6a280d821b9d1ac47"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml#a07ad405727c652a6a280d821b9d1ac47">OpenBabel::OBRingData::EndRings</a></div><div class="ttdeci">std::vector&lt; OBRing * &gt;::iterator EndRings()</div><div class="ttdef"><b>Definition:</b> generic.h:294</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBGenericDataType_shtml_a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00"><div class="ttname"><a href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00">OpenBabel::OBGenericDataType::SerialNums</a></div><div class="ttdoc">Residue serial numbers. </div><div class="ttdef"><b>Definition:</b> base.h:100</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGrid_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGrid.shtml">OpenBabel::OBFreeGrid</a></div><div class="ttdoc">Handle double precision floating point data with coordinates not on a grid Can hold array of random c...</div><div class="ttdef"><b>Definition:</b> generic.h:1134</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_a064aa6b502655795918788af438b0208"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#a064aa6b502655795918788af438b0208">OpenBabel::OBVirtualBond::GetBgn</a></div><div class="ttdeci">int GetBgn()</div><div class="ttdef"><b>Definition:</b> generic.h:254</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_ad7eba625acc8cde6149ee8f13341172e"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#ad7eba625acc8cde6149ee8f13341172e">OpenBabel::OBFreeGridPoint::SetV</a></div><div class="ttdeci">void SetV(double V)</div><div class="ttdef"><b>Definition:</b> generic.h:1125</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_af7c67fda80d169e7af68407f88740499"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#af7c67fda80d169e7af68407f88740499">OpenBabel::OBVirtualBond::_ord</a></div><div class="ttdeci">int _ord</div><div class="ttdef"><b>Definition:</b> generic.h:248</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_ae7963c2698fd4975c7060b1c5438b272"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#ae7963c2698fd4975c7060b1c5438b272">OpenBabel::OBVibrationData::_vIntensities</a></div><div class="ttdeci">std::vector&lt; double &gt; _vIntensities</div><div class="ttdoc">Infrared absorption intensities in KM/Mole. </div><div class="ttdef"><b>Definition:</b> generic.h:853</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml_a1d0de5369a163c62b547a0faf5f599c1"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml#a1d0de5369a163c62b547a0faf5f599c1">OpenBabel::OBRingData::SetData</a></div><div class="ttdeci">void SetData(std::vector&lt; OBRing *&gt; &amp;vr)</div><div class="ttdef"><b>Definition:</b> generic.h:279</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_ace768b2c55b1d16a47b8fdcda84515ea"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#ace768b2c55b1d16a47b8fdcda84515ea">OpenBabel::OBSetData::DeleteData</a></div><div class="ttdeci">void DeleteData(OBGenericData *gd)</div><div class="ttdoc">Delete the matching OBGenericData element. </div><div class="ttdef"><b>Definition:</b> generic.h:226</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_a84619fd6eb56bada6e0c68c54798bde0"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#a84619fd6eb56bada6e0c68c54798bde0">OpenBabel::OBVibrationData::_vLx</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; _vLx</div><div class="ttdoc">Normal modes in 1/sqrt(a.u.) </div><div class="ttdef"><b>Definition:</b> generic.h:847</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVirtualBond_shtml_aeb2c09a43f4c8b6256dbed5faf85d768"><div class="ttname"><a href="classOpenBabel_1_1OBVirtualBond.shtml#aeb2c09a43f4c8b6256dbed5faf85d768">OpenBabel::OBVirtualBond::_bgn</a></div><div class="ttdeci">int _bgn</div><div class="ttdef"><b>Definition:</b> generic.h:246</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngle_shtml_a55f96888e82a56edfa241a34f3271ae0"><div class="ttname"><a href="classOpenBabel_1_1OBAngle.shtml#a55f96888e82a56edfa241a34f3271ae0">OpenBabel::OBAngle::SetAngle</a></div><div class="ttdeci">void SetAngle(double angle)</div><div class="ttdef"><b>Definition:</b> generic.h:723</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_aa0e40eaa96ec46f0513b48fce93b7b76"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#aa0e40eaa96ec46f0513b48fce93b7b76">OpenBabel::OBRotationData::SetData</a></div><div class="ttdeci">void SetData(RType RotorType, std::vector&lt; double &gt; RotationalConstants, int SymmetryNumber)</div><div class="ttdef"><b>Definition:</b> generic.h:1047</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml_a120222dc719c5f6a711770dce699535b"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml#a120222dc719c5f6a711770dce699535b">OpenBabel::OBRingData::PushBack</a></div><div class="ttdeci">void PushBack(OBRing *r)</div><div class="ttdef"><b>Definition:</b> generic.h:283</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml">OpenBabel::OBVectorData</a></div><div class="ttdoc">Used to hold a 3D vector item (e.g., a dipole moment) </div><div class="ttdef"><b>Definition:</b> generic.h:1069</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngle_shtml_aed0a513f416c5140e604577971e1dd5c"><div class="ttname"><a href="classOpenBabel_1_1OBAngle.shtml#aed0a513f416c5140e604577971e1dd5c">OpenBabel::OBAngle::_termini</a></div><div class="ttdeci">std::pair&lt; OBAtom *, OBAtom * &gt; _termini</div><div class="ttdef"><b>Definition:</b> generic.h:691</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_a35e7c9407fefcda3910c6fc7e06e9f73"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a35e7c9407fefcda3910c6fc7e06e9f73">OpenBabel::OBElectronicTransitionData::_vRotatoryStrengthsLength</a></div><div class="ttdeci">std::vector&lt; double &gt; _vRotatoryStrengthsLength</div><div class="ttdoc">Rotatory strengths (length) </div><div class="ttdef"><b>Definition:</b> generic.h:1008</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml">OpenBabel::OBSymmetryData</a></div><div class="ttdoc">Used to hold the point-group and/or space-group symmetry. </div><div class="ttdef"><b>Definition:</b> generic.h:559</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_a4710d82ad5bc5a3ea469148513a6a05f"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#a4710d82ad5bc5a3ea469148513a6a05f">OpenBabel::OBVibrationData::GetFrequencies</a></div><div class="ttdeci">std::vector&lt; double &gt; GetFrequencies() const</div><div class="ttdef"><b>Definition:</b> generic.h:876</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_a81676bc2dbd807644f7d5acd1b1a2dc9"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#a81676bc2dbd807644f7d5acd1b1a2dc9">OpenBabel::OBUnitCell::GetSpaceGroup</a></div><div class="ttdeci">const SpaceGroup * GetSpaceGroup()</div><div class="ttdef"><b>Definition:</b> generic.h:413</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a06c88120c4ba657484c76994abad6ff9"><div class="ttname"><a href="namespaceOpenBabel.shtml#a06c88120c4ba657484c76994abad6ff9">OpenBabel::OBFreeGridPointIterator</a></div><div class="ttdeci">std::vector&lt; OBFreeGridPoint * &gt;::iterator OBFreeGridPointIterator</div><div class="ttdoc">A standard iterator over a vector of FreeGridPoints. </div><div class="ttdef"><b>Definition:</b> generic.h:1129</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBRingData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:274</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_a206596836060899943e2c60406ef8300"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#a206596836060899943e2c60406ef8300">OpenBabel::OBSetData::GetData</a></div><div class="ttdeci">virtual const std::vector&lt; OBGenericData * &gt; &amp; GetData() const</div><div class="ttdoc">Gets the entire set. </div><div class="ttdef"><b>Definition:</b> generic.h:208</div></div>
<div class="ttc" id="classOpenBabel_1_1SpaceGroup_shtml"><div class="ttname"><a href="classOpenBabel_1_1SpaceGroup.shtml">OpenBabel::SpaceGroup</a></div><div class="ttdoc">Handle crystallographic space group symmetry. </div><div class="ttdef"><b>Definition:</b> spacegroup.h:35</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml">OpenBabel::OBVibrationData</a></div><div class="ttdoc">Used to hold the normal modes of a molecule, etc. </div><div class="ttdef"><b>Definition:</b> generic.h:843</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_aff183e0156f477b106269c9524d8b4dd"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#aff183e0156f477b106269c9524d8b4dd">OpenBabel::OBConformerData::_vData</a></div><div class="ttdeci">std::vector&lt; std::string &gt; _vData</div><div class="ttdoc">Additional data (as strings) </div><div class="ttdef"><b>Definition:</b> generic.h:525</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a1aa001a5bb0835aecf6ac01d3097e5ac"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a1aa001a5bb0835aecf6ac01d3097e5ac">OpenBabel::OBOrbitalData::SetAlphaOrbitals</a></div><div class="ttdeci">void SetAlphaOrbitals(std::vector&lt; OBOrbital &gt; orbitalList)</div><div class="ttdef"><b>Definition:</b> generic.h:958</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_ae5e8b9cfa509d47b804cd62dabec4384"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#ae5e8b9cfa509d47b804cd62dabec4384">OpenBabel::OBConformerData::SetForces</a></div><div class="ttdeci">void SetForces(std::vector&lt; std::vector&lt; vector3 &gt; &gt; vf)</div><div class="ttdef"><b>Definition:</b> generic.h:537</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ad5ca88aa35c43da1b791c7703ec8978d"><div class="ttname"><a href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OpenBabel::OBDataIterator</a></div><div class="ttdeci">std::vector&lt; OBGenericData * &gt;::iterator OBDataIterator</div><div class="ttdoc">A standard iterator over vectors of OBGenericData (e.g., inherited from OBBase) </div><div class="ttdef"><b>Definition:</b> base.h:236</div></div>
<div class="ttc" id="classOpenBabel_1_1OBUnitCell_shtml_ab095c8d5b34f45a89234da38eb87371b"><div class="ttname"><a href="classOpenBabel_1_1OBUnitCell.shtml#ab095c8d5b34f45a89234da38eb87371b">OpenBabel::OBUnitCell::GetSpaceGroup</a></div><div class="ttdeci">const SpaceGroup * GetSpaceGroup() const</div><div class="ttdef"><b>Definition:</b> generic.h:414</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBondData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBondData.shtml">OpenBabel::OBExternalBondData</a></div><div class="ttdoc">Used to store information on external bonds (e.g., in SMILES fragments) </div><div class="ttdef"><b>Definition:</b> generic.h:90</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngleData_shtml_a0af4f3bf511770f64efd9b03197fe05d"><div class="ttname"><a href="classOpenBabel_1_1OBAngleData.shtml#a0af4f3bf511770f64efd9b03197fe05d">OpenBabel::OBAngleData::GetSize</a></div><div class="ttdeci">size_t GetSize() const</div><div class="ttdef"><b>Definition:</b> generic.h:762</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRingData_shtml_a45043bd4256fcf9d62e0cb45e024c466"><div class="ttname"><a href="classOpenBabel_1_1OBRingData.shtml#a45043bd4256fcf9d62e0cb45e024c466">OpenBabel::OBRingData::GetData</a></div><div class="ttdeci">std::vector&lt; OBRing * &gt; &amp; GetData()</div><div class="ttdef"><b>Definition:</b> generic.h:287</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBRotationData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:1045</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMatrixData_shtml_a9d238447321132fcc9109b7a1b39b480"><div class="ttname"><a href="classOpenBabel_1_1OBMatrixData.shtml#a9d238447321132fcc9109b7a1b39b480">OpenBabel::OBMatrixData::SetData</a></div><div class="ttdeci">void SetData(matrix3x3 data)</div><div class="ttdef"><b>Definition:</b> generic.h:1097</div></div>
<div class="ttc" id="classOpenBabel_1_1OBChiralData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBChiralData.shtml">OpenBabel::OBChiralData</a></div><div class="ttdoc">Used to hold chiral inforamtion about the atom as OBGenericData. </div><div class="ttdef"><b>Definition:</b> generic.h:777</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_aa88341c74a59194a8884e929f97b87b8a103458136e7028a1a9b7349e64967810"><div class="ttname"><a href="namespaceOpenBabel.shtml#aa88341c74a59194a8884e929f97b87b8a103458136e7028a1a9b7349e64967810">OpenBabel::calcvolume</a></div><div class="ttdef"><b>Definition:</b> generic.h:771</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAngleData_shtml_a87ade60f96e83b51d4357559ec77cd82"><div class="ttname"><a href="classOpenBabel_1_1OBAngleData.shtml#a87ade60f96e83b51d4357559ec77cd82">OpenBabel::OBAngleData::GetData</a></div><div class="ttdeci">std::vector&lt; OBAngle &gt; GetData() const</div><div class="ttdoc">Gets the angle vector data. </div><div class="ttdef"><b>Definition:</b> generic.h:745</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_a2dd0afcc5538601c2a39a3b7871faff2"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#a2dd0afcc5538601c2a39a3b7871faff2">OpenBabel::OBSetData::GetBegin</a></div><div class="ttdeci">std::vector&lt; OBGenericData * &gt;::iterator GetBegin()</div><div class="ttdoc">Get the begin iterator. </div><div class="ttdef"><b>Definition:</b> generic.h:214</div></div>
<div class="ttc" id="obutil_8h_shtml"><div class="ttname"><a href="obutil_8h.shtml">obutil.h</a></div><div class="ttdoc">Various utility methods. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_a443d61f7fd264880b7233b3d727a5828"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#a443d61f7fd264880b7233b3d727a5828">OpenBabel::OBVibrationData::_vFrequencies</a></div><div class="ttdeci">std::vector&lt; double &gt; _vFrequencies</div><div class="ttdoc">Harmonic frequencies in inverse centimeters. </div><div class="ttdef"><b>Definition:</b> generic.h:850</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_a5964836146c69bff67fd35d753c2e35d"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#a5964836146c69bff67fd35d753c2e35d">OpenBabel::OBRotationData::GetRotorType</a></div><div class="ttdeci">RType GetRotorType() const</div><div class="ttdef"><b>Definition:</b> generic.h:1058</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMatrixData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBMatrixData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBMatrixData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:1095</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMatrixData_shtml_a15f02a1883eb12f6980b542c40f26810"><div class="ttname"><a href="classOpenBabel_1_1OBMatrixData.shtml#a15f02a1883eb12f6980b542c40f26810">OpenBabel::OBMatrixData::OBMatrixData</a></div><div class="ttdeci">OBMatrixData()</div><div class="ttdef"><b>Definition:</b> generic.h:1093</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_a16b7e8677bd43d8292b1f0485e4d1d5e"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#a16b7e8677bd43d8292b1f0485e4d1d5e">OpenBabel::OBTorsion::GetBC</a></div><div class="ttdeci">std::pair&lt; OBAtom *, OBAtom * &gt; GetBC()</div><div class="ttdef"><b>Definition:</b> generic.h:623</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_af300a4b44a417f4999c4378522e10d18"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#af300a4b44a417f4999c4378522e10d18">OpenBabel::OBElectronicTransitionData::_vForces</a></div><div class="ttdeci">std::vector&lt; double &gt; _vForces</div><div class="ttdoc">Oscillator strengths. </div><div class="ttdef"><b>Definition:</b> generic.h:999</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a1e909f0c20e17b79ecc51ae05b57f78f"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a1e909f0c20e17b79ecc51ae05b57f78f">OpenBabel::OBConformerData::~OBConformerData</a></div><div class="ttdeci">~OBConformerData()</div><div class="ttdef"><b>Definition:</b> generic.h:531</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml">OpenBabel::OBRotationData</a></div><div class="ttdoc">Used to hold the rotational constants and symmetry numbers. </div><div class="ttdef"><b>Definition:</b> generic.h:1039</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a91a7e06b86e18fd65689b1da2cdf193f"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a91a7e06b86e18fd65689b1da2cdf193f">OpenBabel::OBOrbitalData::_betaOrbitals</a></div><div class="ttdeci">std::vector&lt; OBOrbital &gt; _betaOrbitals</div><div class="ttdoc">Only used if needed (e.g., unrestricted calculations) </div><div class="ttdef"><b>Definition:</b> generic.h:984</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_aa3e2d107afd3e69aee9bf52b47d1444c"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#aa3e2d107afd3e69aee9bf52b47d1444c">OpenBabel::OBExternalBond::OBExternalBond</a></div><div class="ttdeci">OBExternalBond()</div><div class="ttdef"><b>Definition:</b> generic.h:75</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_a84cdb57aaf88aa0a94f4f4a1dd0f0252"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#a84cdb57aaf88aa0a94f4f4a1dd0f0252">OpenBabel::OBExternalBond::SetAtom</a></div><div class="ttdeci">void SetAtom(OBAtom *atom)</div><div class="ttdef"><b>Definition:</b> generic.h:84</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSetData_shtml_ae26106f464c8cb2959a7705a606f7da0"><div class="ttname"><a href="classOpenBabel_1_1OBSetData.shtml#ae26106f464c8cb2959a7705a606f7da0">OpenBabel::OBSetData::GetEnd</a></div><div class="ttdeci">std::vector&lt; OBGenericData * &gt;::iterator GetEnd()</div><div class="ttdoc">Get the end iterator. </div><div class="ttdef"><b>Definition:</b> generic.h:220</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_ac4e565a482e1abd9cd5ad77e3e2a39bb"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#ac4e565a482e1abd9cd5ad77e3e2a39bb">OpenBabel::OBFreeGridPoint::OBFreeGridPoint</a></div><div class="ttdeci">OBFreeGridPoint(double x, double y, double z, double V)</div><div class="ttdef"><b>Definition:</b> generic.h:1116</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSerialNums_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBSerialNums.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBSerialNums::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:833</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsionData_shtml_a9ce867c471907a6d2a54c1873c9e10e9"><div class="ttname"><a href="classOpenBabel_1_1OBTorsionData.shtml#a9ce867c471907a6d2a54c1873c9e10e9">OpenBabel::OBTorsionData::GetData</a></div><div class="ttdeci">std::vector&lt; OBTorsion &gt; GetData() const</div><div class="ttdef"><b>Definition:</b> generic.h:662</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_a8a5d5893123109979287e6ed82efae0f"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a8a5d5893123109979287e6ed82efae0f">OpenBabel::OBElectronicTransitionData::GetEDipole</a></div><div class="ttdeci">std::vector&lt; double &gt; GetEDipole() const</div><div class="ttdef"><b>Definition:</b> generic.h:1029</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml">OpenBabel::OBElectronicTransitionData</a></div><div class="ttdoc">Used to hold information about electronic transitions. </div><div class="ttdef"><b>Definition:</b> generic.h:992</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:240</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_aed0b54749bded9681b917dbbe6ce1800"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#aed0b54749bded9681b917dbbe6ce1800">OpenBabel::OBSymmetryData::GetPointGroup</a></div><div class="ttdeci">std::string GetPointGroup()</div><div class="ttdef"><b>Definition:</b> generic.h:577</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVibrationData_shtml_ad6eff9b28ddb91e20a4e4f1648e21f37"><div class="ttname"><a href="classOpenBabel_1_1OBVibrationData.shtml#ad6eff9b28ddb91e20a4e4f1648e21f37">OpenBabel::OBVibrationData::OBVibrationData</a></div><div class="ttdeci">OBVibrationData()</div><div class="ttdef"><b>Definition:</b> generic.h:859</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTorsion_shtml_aa2c22321e05df8c58066c30bef2cf927"><div class="ttname"><a href="classOpenBabel_1_1OBTorsion.shtml#aa2c22321e05df8c58066c30bef2cf927">OpenBabel::OBTorsion::SetData</a></div><div class="ttdeci">bool SetData(OBBond *)</div><div class="ttdef"><b>Definition:</b> generic.h:613</div></div>
<div class="ttc" id="spacegroup_8h_shtml"><div class="ttname"><a href="spacegroup_8h.shtml">spacegroup.h</a></div><div class="ttdoc">Handle Crystallographic Space Groups. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBConformerData_shtml_a045c32551393c9123ffcaaf64b68f8df"><div class="ttname"><a href="classOpenBabel_1_1OBConformerData.shtml#a045c32551393c9123ffcaaf64b68f8df">OpenBabel::OBConformerData::GetVelocities</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; vector3 &gt; &gt; GetVelocities()</div><div class="ttdef"><b>Definition:</b> generic.h:547</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_ab994a975e39f5c62288f4f972b6f90c9"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#ab994a975e39f5c62288f4f972b6f90c9">OpenBabel::OBExternalBond::SetIdx</a></div><div class="ttdeci">void SetIdx(int idx)</div><div class="ttdef"><b>Definition:</b> generic.h:83</div></div>
<div class="ttc" id="classOpenBabel_1_1OBVectorData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBVectorData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBVectorData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:1074</div></div>
<div class="ttc" id="classOpenBabel_1_1OBExternalBond_shtml_a61f7b16bfa66a44e7092b0605157ca10"><div class="ttname"><a href="classOpenBabel_1_1OBExternalBond.shtml#a61f7b16bfa66a44e7092b0605157ca10">OpenBabel::OBExternalBond::GetBond</a></div><div class="ttdeci">OBBond * GetBond() const</div><div class="ttdef"><b>Definition:</b> generic.h:82</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPairData_shtml_a6145f0df06364b6d58c728368db8f992"><div class="ttname"><a href="classOpenBabel_1_1OBPairData.shtml#a6145f0df06364b6d58c728368db8f992">OpenBabel::OBPairData::GetValue</a></div><div class="ttdeci">virtual const std::string &amp; GetValue() const</div><div class="ttdoc">Base class returns a default value (the attribute type) but should never be called. </div><div class="ttdef"><b>Definition:</b> generic.h:122</div></div>
<div class="ttc" id="classOpenBabel_1_1OBRotationData_shtml_afda39669e25831ec186e17cb437dba09a6ce26a62afab55d7606ad4e92428b30c"><div class="ttname"><a href="classOpenBabel_1_1OBRotationData.shtml#afda39669e25831ec186e17cb437dba09a6ce26a62afab55d7606ad4e92428b30c">OpenBabel::OBRotationData::UNKNOWN</a></div><div class="ttdef"><b>Definition:</b> generic.h:1042</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOrbitalData_shtml_a6edf786e96b35505ffe9150905f5f06a"><div class="ttname"><a href="classOpenBabel_1_1OBOrbitalData.shtml#a6edf786e96b35505ffe9150905f5f06a">OpenBabel::OBOrbitalData::_alphaOrbitals</a></div><div class="ttdeci">std::vector&lt; OBOrbital &gt; _alphaOrbitals</div><div class="ttdoc">List of orbitals. In case of unrestricted calculations, this contains the alpha spin-orbitals. </div><div class="ttdef"><b>Definition:</b> generic.h:983</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_a614446afd9dea92d4da7e8c8095aa107"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#a614446afd9dea92d4da7e8c8095aa107">OpenBabel::OBSymmetryData::SetPointGroup</a></div><div class="ttdeci">void SetPointGroup(std::string pg)</div><div class="ttdef"><b>Definition:</b> generic.h:574</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ac001b331f648fbbd8590576f59d4d2ab"><div class="ttname"><a href="namespaceOpenBabel.shtml#ac001b331f648fbbd8590576f59d4d2ab">OpenBabel::operator==</a></div><div class="ttdeci">bool operator==(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</div><div class="ttdef"><b>Definition:</b> bitvec.cpp:525</div></div>
<div class="ttc" id="classOpenBabel_1_1OBSymmetryData_shtml_ab00b0697ccbb41c687e4031c1f5e6761"><div class="ttname"><a href="classOpenBabel_1_1OBSymmetryData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OpenBabel::OBSymmetryData::Clone</a></div><div class="ttdeci">virtual OBGenericData * Clone(OBBase *) const</div><div class="ttdef"><b>Definition:</b> generic.h:567</div></div>
<div class="ttc" id="classOpenBabel_1_1OBElectronicTransitionData_shtml_a380b3a6c5dbb324cbae959d34e9c004e"><div class="ttname"><a href="classOpenBabel_1_1OBElectronicTransitionData.shtml#a380b3a6c5dbb324cbae959d34e9c004e">OpenBabel::OBElectronicTransitionData::~OBElectronicTransitionData</a></div><div class="ttdeci">virtual ~OBElectronicTransitionData()</div><div class="ttdef"><b>Definition:</b> generic.h:1012</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a></div><div class="ttdoc">Atom class. </div><div class="ttdef"><b>Definition:</b> atom.h:81</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFreeGridPoint_shtml_a9fa6ce00a437dcb7c438cdf669a35fe6"><div class="ttname"><a href="classOpenBabel_1_1OBFreeGridPoint.shtml#a9fa6ce00a437dcb7c438cdf669a35fe6">OpenBabel::OBFreeGridPoint::GetX</a></div><div class="ttdeci">double GetX()</div><div class="ttdef"><b>Definition:</b> generic.h:1118</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
