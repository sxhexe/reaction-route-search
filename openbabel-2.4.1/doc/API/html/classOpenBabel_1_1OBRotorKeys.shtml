<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBRotorKeys Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml">OBRotorKeys</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1OBRotorKeys-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBRotorKeys Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rotor_8h_source.shtml">openbabel/rotor.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1df6b471196fede2ca7816bdb48a55c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml#a1df6b471196fede2ca7816bdb48a55c4">OBRotorKeys</a> ()</td></tr>
<tr class="separator:a1df6b471196fede2ca7816bdb48a55c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71d36872f416feaa853788a7a7a7ef8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a> ()</td></tr>
<tr class="separator:aa71d36872f416feaa853788a7a7a7ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e2ff872d231d1a136588edf2f214812"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml#a5e2ff872d231d1a136588edf2f214812">NumKeys</a> ()</td></tr>
<tr class="separator:a5e2ff872d231d1a136588edf2f214812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978846687be54138173a299d169bce37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml#a978846687be54138173a299d169bce37">AddRotor</a> (unsigned int size)</td></tr>
<tr class="separator:a978846687be54138173a299d169bce37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3947d19ac087ef2cd68c2409920339c4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml#a3947d19ac087ef2cd68c2409920339c4">Next</a> ()</td></tr>
<tr class="separator:a3947d19ac087ef2cd68c2409920339c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea664b7db8e291318eda525a542aa7f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml#a0ea664b7db8e291318eda525a542aa7f">GetKey</a> ()</td></tr>
<tr class="separator:a0ea664b7db8e291318eda525a542aa7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A class to generate all possible rotorKeys. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1df6b471196fede2ca7816bdb48a55c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1df6b471196fede2ca7816bdb48a55c4">&sect;&nbsp;</a></span>OBRotorKeys()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotorKeys.shtml">OBRotorKeys</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A class to generate all possible rotorKeys. </p>
<p>This class can generate all possible rotor keys for a set of OBRotors which can all have their own resolution. Thanks to Yongjin Xu for this patch.</p>
<p>the code blow is taken from <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aad044993a4dab58de3b5f3ac6c5815fe">OBForceField::SystematicRotorSearch()</a>: </p><div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="rotor_8h.shtml">openbabel/rotor.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// See OBConversion class to fill the mol object.</span></div><div class="line">OBMol mol;</div><div class="line">OBRotorList rl;</div><div class="line">OBRotamerList rotamers;</div><div class="line"></div><div class="line">rl.Setup(_mol);</div><div class="line">rotamers.SetBaseCoordinateSets(_mol);</div><div class="line">rotamers.Setup(_mol, rl);</div><div class="line"></div><div class="line">cout &lt;&lt; <span class="stringliteral">&quot;number of rotatable bonds: &quot;</span> &lt;&lt;  rl.Size() &lt;&lt; endl;</div><div class="line"></div><div class="line"><span class="keywordflow">if</span> (!rl.Size()) { <span class="comment">// only one conformer</span></div><div class="line">  cout &lt;&lt; <span class="stringliteral">&quot;generated only one conformer&quot;</span> &lt;&lt; endl;</div><div class="line">  <span class="comment">// exit here</span></div><div class="line">}</div><div class="line"></div><div class="line"><a class="code" href="classOpenBabel_1_1OBRotorKeys.shtml#a1df6b471196fede2ca7816bdb48a55c4">OBRotorKeys</a> rotorKeys;</div><div class="line"><a class="code" href="namespaceOpenBabel.shtml#a434f394d0613a8ef6c119670ff49710f">OBRotorIterator</a> ri;</div><div class="line">OBRotor *rotor = rl.BeginRotor(ri);</div><div class="line"><span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt; rl.Size() + 1; ++i, rotor = rl.NextRotor(ri)) { <span class="comment">// foreach rotor</span></div><div class="line">  rotorKeys.AddRotor(rotor-&gt;GetResolution().size());</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keywordflow">while</span> (rotorKeys.Next()) {</div><div class="line">  std::vector&lt;int&gt; rotorKey = rotorKeys.GetKey();</div><div class="line">  cout &lt;&lt; <span class="stringliteral">&quot;rotorKey = &quot;</span> &lt;&lt; rotorKey[1] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; rotorKey[2] &lt;&lt; endl;</div><div class="line">  rotamers.AddRotamer(rotorKey);</div><div class="line">}</div><div class="line"></div><div class="line">rotamers.ExpandConformerList(_mol, _mol.GetConformers());</div></div><!-- fragment --><p>Constructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa71d36872f416feaa853788a7a7a7ef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa71d36872f416feaa853788a7a7a7ef8">&sect;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear all rotors. </p>

</div>
</div>
<a id="a5e2ff872d231d1a136588edf2f214812"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e2ff872d231d1a136588edf2f214812">&sect;&nbsp;</a></span>NumKeys()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumKeys </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of rotor keys (= number of possible conformers) </p>

</div>
</div>
<a id="a978846687be54138173a299d169bce37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a978846687be54138173a299d169bce37">&sect;&nbsp;</a></span>AddRotor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotor </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Add a rotor </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>the rotor resolution </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#abf19a37194fdf234f4fcbe6b8616d2ff">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="namespaceOpenBabel.shtml#afa641f7ef2f87464db0231f320116ecb">OpenBabel::UpdateConformersFromTree()</a>.</p>

</div>
</div>
<a id="a3947d19ac087ef2cd68c2409920339c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3947d19ac087ef2cd68c2409920339c4">&sect;&nbsp;</a></span>Next()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Next </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Select the next rotor key </p><dl class="section return"><dt>Returns</dt><dd>true if there are more rotor keys </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#abf19a37194fdf234f4fcbe6b8616d2ff">OBForceField::SystematicRotorSearchInitialize()</a>.</p>

</div>
</div>
<a id="a0ea664b7db8e291318eda525a542aa7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ea664b7db8e291318eda525a542aa7f">&sect;&nbsp;</a></span>GetKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; GetKey </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the currently selected rotor key </p><dl class="section return"><dt>Returns</dt><dd>current rotor key </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#abf19a37194fdf234f4fcbe6b8616d2ff">OBForceField::SystematicRotorSearchInitialize()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="rotor_8h_source.shtml">rotor.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
