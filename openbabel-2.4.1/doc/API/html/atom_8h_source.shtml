<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>atom.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">atom.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="atom_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">atom.h - Handle OBAtom class.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">Some portions Copyright (C) 2003 by Michael Banck</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef OB_ATOM_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#define OB_ATOM_H</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifndef EXTERN</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#  define EXTERN extern</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml">openbabel/base.h</a>&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="residue_8h.shtml">openbabel/residue.h</a>&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="vector3_8h.shtml">openbabel/math/vector3.h</a>&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">class </span>OBBond;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#ac0863bf2485bd66ba3afa6e50ddc20f6">   41</a></span>&#160;  <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">typedef</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> <a class="code" href="namespaceOpenBabel.shtml#ac0863bf2485bd66ba3afa6e50ddc20f6">OBNodeBase</a>;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">   46</a></span>&#160;  <span class="keyword">typedef</span> std::vector&lt;OBBond*&gt;::iterator <a class="code" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a>;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">   48</a></span>&#160;  <span class="keyword">typedef</span> std::vector&lt;OBAtom*&gt;::iterator <a class="code" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="comment">//ATOM Property Macros (flags)</span></div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="atom_8h.shtml#a7049a943ce03181c7004fe9ecd798f40">   52</a></span>&#160;<span class="comment"></span><span class="preprocessor">#define OB_4RING_ATOM     (1&lt;&lt;1)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#define OB_3RING_ATOM     (1&lt;&lt;2)</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#define OB_AROMATIC_ATOM  (1&lt;&lt;3)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#define OB_RING_ATOM      (1&lt;&lt;4)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#define OB_CSTEREO_ATOM   (1&lt;&lt;5)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#define OB_ACSTEREO_ATOM  (1&lt;&lt;6)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#define OB_DONOR_ATOM     (1&lt;&lt;7)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#define OB_ACCEPTOR_ATOM  (1&lt;&lt;8)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#define OB_CHIRAL_ATOM    (1&lt;&lt;9)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#define OB_POS_CHIRAL_ATOM (1&lt;&lt;10)</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#define OB_NEG_CHIRAL_ATOM (1&lt;&lt;11)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#define OB_ATOM_HAS_NO_H   (1&lt;&lt;12)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#define OB_ATOM_NOT_H_DEFICIENT (1&lt;&lt;13)</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="comment">// Class OBAtom</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="comment">// class introduction in atom.cpp</span></div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="atom_8h.shtml#a17ee9e29394f0bd750a589cd03e69ff1">   80</a></span>&#160;<span class="preprocessor"> #define OBATOM_TYPE_LEN 6</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml">   81</a></span>&#160; <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a2a4ac28765690d9b074521327cb4876b">   84</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>                 <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a2a4ac28765690d9b074521327cb4876b">_ele</a>;       </div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ab3e028e65ae7c0dac55997f2cb7281ce">   85</a></span>&#160;      <span class="keywordtype">char</span>                          <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ab3e028e65ae7c0dac55997f2cb7281ce">_impval</a>;    </div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a2ad4c66def6b16fe190ac28633fb1f3f">   86</a></span>&#160;      <span class="keywordtype">char</span>                          _type[<a class="code" href="atom_8h.shtml#a17ee9e29394f0bd750a589cd03e69ff1">OBATOM_TYPE_LEN</a>];   </div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a6e636025c5db07bf67523b31a55f6327">   87</a></span>&#160;      <span class="keywordtype">short</span>                         <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a6e636025c5db07bf67523b31a55f6327">_fcharge</a>;   </div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ad60f474b9381f875e4b6e3f5df457c9a">   88</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>                <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ad60f474b9381f875e4b6e3f5df457c9a">_isotope</a>;   </div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aec3b74d938a5e47bc6a6627f64d86e27">   89</a></span>&#160;      <span class="keywordtype">short</span>                         <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aec3b74d938a5e47bc6a6627f64d86e27">_spinmultiplicity</a>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a1219a011a5e0ec59c67a5a873d81986c">   91</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                  <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a>;       </div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aa15238ffbdb1330727678c9d6553d6ba">   92</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>                        *<a class="code" href="classOpenBabel_1_1OBAtom.shtml#aa15238ffbdb1330727678c9d6553d6ba">_parent</a>;    </div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a3c7208419c7703e947e9a1c365838b98">   93</a></span>&#160;      std::vector&lt;OBBond*&gt;          <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a3c7208419c7703e947e9a1c365838b98">_vbond</a>;     </div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aef178db02607fe00f112bd1a7f5f4d2b">   95</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                  <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aef178db02607fe00f112bd1a7f5f4d2b">_cidx</a>;      </div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a5d400386667c899017669303bdec09cd">   96</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>                <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a5d400386667c899017669303bdec09cd">_hyb</a>;       </div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a5cc9f88f4cc5fda10e7932cd59a87f16">   97</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>                <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a5cc9f88f4cc5fda10e7932cd59a87f16">_flags</a>;     </div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ae4b9cf0b2f94fc6befff220367fccd0a">   98</a></span>&#160;      <span class="keywordtype">double</span>                        <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ae4b9cf0b2f94fc6befff220367fccd0a">_pcharge</a>;   </div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a91a32f6c060e12e4d188974db5b111d3">   99</a></span>&#160;      <span class="keywordtype">double</span>                      **<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a91a32f6c060e12e4d188974db5b111d3">_c</a>;         </div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ae8dcade9402fad862f0391488350ea3e">  100</a></span>&#160;      <span class="keyword">mutable</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a>               <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ae8dcade9402fad862f0391488350ea3e">_v</a>;         </div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ac26545dc3d68694f0a7b6f4a776f7a17">  101</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>                    *<a class="code" href="classOpenBabel_1_1OBAtom.shtml#ac26545dc3d68694f0a7b6f4a776f7a17">_residue</a>;   </div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#accc49a515c7a81154bd46a8ea8a16204">  103</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>                 <a class="code" href="classOpenBabel_1_1OBAtom.shtml#accc49a515c7a81154bd46a8ea8a16204">_id</a>;        </div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#acc0aec564b42e181709de3699656f5b1">  106</a></span>&#160;      <span class="keywordtype">int</span>  <a class="code" href="classOpenBabel_1_1OBAtom.shtml#acc0aec564b42e181709de3699656f5b1">GetFlag</a>()<span class="keyword"> const    </span>{  <span class="keywordflow">return</span>(_flags);  }</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#adcdab8f96dc4fdc2940749e527087245">  108</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#adcdab8f96dc4fdc2940749e527087245">SetFlag</a>(<span class="keywordtype">int</span> flag)  { _flags |= flag;   }</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a3a1dc0419a66d2e7288214342de43b7a">  110</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a3a1dc0419a66d2e7288214342de43b7a">HasFlag</a>(<span class="keywordtype">int</span> flag)  {  <span class="keywordflow">return</span>((_flags &amp; flag) ? <span class="keyword">true</span> : <span class="keyword">false</span>); }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#afbdb429fe4a7d37960636a555de77326">  113</a></span>&#160;      <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#afbdb429fe4a7d37960636a555de77326">StereoFlag</a> {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      };</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a6368d7673f23186649b2969ade3661d7">  119</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a6368d7673f23186649b2969ade3661d7">Visit</a>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>();</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;operator = (<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;);</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a86f5522afaa8e213fd39c0ab71cc4ac1">  128</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a86f5522afaa8e213fd39c0ab71cc4ac1">operator==</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * other)<span class="keyword"> const </span>{  <span class="keywordflow">return</span> (GetIdx() == other-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>()); }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordtype">void</span> Duplicate(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordtype">bool</span> Clear();</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordtype">void</span> SetIdx(<span class="keywordtype">int</span> idx)    { _idx = idx; _cidx = (idx-1)*3; }</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a383094c5a19383cf09f3dfb4c1de1da2">  140</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a383094c5a19383cf09f3dfb4c1de1da2">SetId</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">id</span>) { _id = id; }</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a9ca5228f1b568f7076cd930ad0902a83">  142</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a9ca5228f1b568f7076cd930ad0902a83">SetHyb</a>(<span class="keywordtype">int</span> hyb)    { _hyb = hyb; }</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a573a9f96a971854938ab2db5eb4d4851">  144</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a573a9f96a971854938ab2db5eb4d4851">SetAtomicNum</a>(<span class="keywordtype">int</span> atomicnum)    { _ele = (char)atomicnum; }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="keywordtype">void</span> SetIsotope(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> iso);</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a4ebf98749415a00a56fdbc77f87fdc87">  148</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a4ebf98749415a00a56fdbc77f87fdc87">SetImplicitValence</a>(<span class="keywordtype">int</span> val)    { _impval = (char)val; }</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ae048690c14e9258cc653231a56d5dfda">  150</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ae048690c14e9258cc653231a56d5dfda">IncrementImplicitValence</a>()     { _impval++; }</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a7acb91a903a31d698dc25d296b988f7f">  152</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a7acb91a903a31d698dc25d296b988f7f">DecrementImplicitValence</a>()     { _impval--; }</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aa1d084182d025e6fa000b928807d7689">  154</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aa1d084182d025e6fa000b928807d7689">SetFormalCharge</a>(<span class="keywordtype">int</span> fcharge)   { _fcharge = fcharge; }</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a299285ee1effd21803b3c042a376e149">  156</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a299285ee1effd21803b3c042a376e149">SetSpinMultiplicity</a>(<span class="keywordtype">short</span> spin){ _spinmultiplicity = spin; }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordtype">void</span> SetType(<span class="keyword">const</span> <span class="keywordtype">char</span> *type);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordtype">void</span> SetType(<span class="keyword">const</span> std::string &amp;type);</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a963851351ab3c084233a82d367f15607">  162</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a963851351ab3c084233a82d367f15607">SetPartialCharge</a>(<span class="keywordtype">double</span> pcharge){ _pcharge = pcharge; }</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordtype">void</span> SetVector(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="keywordtype">void</span> SetVector(<span class="keyword">const</span> <span class="keywordtype">double</span> x,<span class="keyword">const</span> <span class="keywordtype">double</span> y,<span class="keyword">const</span> <span class="keywordtype">double</span> z);</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671">  168</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671">SetCoordPtr</a>(<span class="keywordtype">double</span> **c)        { _c = c; _cidx = (GetIdx()-1)*3; }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="keywordtype">void</span> SetVector();</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184">  172</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184">SetResidue</a>(<a class="code" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *res)     { _residue=res; }</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a962b3010305cfb80ba816a0e54097dee">  174</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a962b3010305cfb80ba816a0e54097dee">SetParent</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *ptr)          { _parent=ptr; }</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a3d29498c15007d9b6729e26784f23a5b">  176</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a3d29498c15007d9b6729e26784f23a5b">SetAromatic</a>()                  { SetFlag(<a class="code" href="atom_8h.shtml#ac08352e8abee93573a66f692f0827bd3">OB_AROMATIC_ATOM</a>); }</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a2fcf3bf429f36281a43c879e40e75f34">  178</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a2fcf3bf429f36281a43c879e40e75f34">UnsetAromatic</a>()                { _flags &amp;= (~(<a class="code" href="atom_8h.shtml#ac08352e8abee93573a66f692f0827bd3">OB_AROMATIC_ATOM</a>)); }</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#adf069c94123595712cb7fa847b87e449">  180</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#adf069c94123595712cb7fa847b87e449">SetClockwiseStereo</a>()           { SetFlag(<a class="code" href="atom_8h.shtml#a4cfdf58a49dd4ebfab6d8dada02fef43">OB_CSTEREO_ATOM</a>|<a class="code" href="atom_8h.shtml#a57a10e2d6bfa530e787d7e13cc9da15d">OB_CHIRAL_ATOM</a>); }</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#af328f0aa99465103074b1d336c393919">  182</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#af328f0aa99465103074b1d336c393919">SetAntiClockwiseStereo</a>()       { SetFlag(<a class="code" href="atom_8h.shtml#a7a0c4ca8c736e743fda131e25de50a26">OB_ACSTEREO_ATOM</a>|<a class="code" href="atom_8h.shtml#a57a10e2d6bfa530e787d7e13cc9da15d">OB_CHIRAL_ATOM</a>); }</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a6ddbbbc5f8e185c43e634a0425311275">  184</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a6ddbbbc5f8e185c43e634a0425311275">SetPositiveStereo</a>() { SetFlag(<a class="code" href="atom_8h.shtml#a2cac237d3ceb0758f76448ba35cf4fa5">OB_POS_CHIRAL_ATOM</a>|<a class="code" href="atom_8h.shtml#a57a10e2d6bfa530e787d7e13cc9da15d">OB_CHIRAL_ATOM</a>); }</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aea322d9d450ee48fb2e89a4f7c34deda">  186</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aea322d9d450ee48fb2e89a4f7c34deda">SetNegativeStereo</a>() { SetFlag(<a class="code" href="atom_8h.shtml#a28504d751913b6affc112690765c1ea6">OB_NEG_CHIRAL_ATOM</a>|<a class="code" href="atom_8h.shtml#a57a10e2d6bfa530e787d7e13cc9da15d">OB_CHIRAL_ATOM</a>); }</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#afdf42f73fe8a0cec0db3c3e544830fcc">  188</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#afdf42f73fe8a0cec0db3c3e544830fcc">UnsetStereo</a>()</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          _flags &amp;= ~(<a class="code" href="atom_8h.shtml#a7a0c4ca8c736e743fda131e25de50a26">OB_ACSTEREO_ATOM</a>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;          _flags &amp;= ~(<a class="code" href="atom_8h.shtml#a4cfdf58a49dd4ebfab6d8dada02fef43">OB_CSTEREO_ATOM</a>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;          _flags &amp;= ~(<a class="code" href="atom_8h.shtml#a2cac237d3ceb0758f76448ba35cf4fa5">OB_POS_CHIRAL_ATOM</a>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;          _flags &amp;= ~(<a class="code" href="atom_8h.shtml#a28504d751913b6affc112690765c1ea6">OB_NEG_CHIRAL_ATOM</a>);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;          _flags &amp;= ~(<a class="code" href="atom_8h.shtml#a57a10e2d6bfa530e787d7e13cc9da15d">OB_CHIRAL_ATOM</a>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        }</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ae6a016e7f67cf564e5f80254c425f65c">  197</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ae6a016e7f67cf564e5f80254c425f65c">SetInRing</a>()         { SetFlag(<a class="code" href="atom_8h.shtml#a5f2ffc18f5cc3589dd1978252169f11e">OB_RING_ATOM</a>); }</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ad4e5a4c67101743f644b047b632d058b">  199</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ad4e5a4c67101743f644b047b632d058b">SetChiral</a>()         { SetFlag(<a class="code" href="atom_8h.shtml#a57a10e2d6bfa530e787d7e13cc9da15d">OB_CHIRAL_ATOM</a>); }</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a3fa3634d92a924e5af69208768e839a5">  201</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a3fa3634d92a924e5af69208768e839a5">ClearCoordPtr</a>()     { _c = NULL; _cidx=0; }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      <span class="keywordtype">int</span>          GetFormalCharge()<span class="keyword">  const </span>{ <span class="keywordflow">return</span>(_fcharge);    }</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a90250b249ffa0fcb4daa83bde1ff4614">  209</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a90250b249ffa0fcb4daa83bde1ff4614">GetAtomicNum</a>()<span class="keyword">     const </span>{ <span class="keywordflow">return</span>((<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)_ele); }</div><div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ad61d9e7b9ecdf9ac58a7f0a65a50b066">  211</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ad61d9e7b9ecdf9ac58a7f0a65a50b066">GetIsotope</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(_isotope);    }</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a546f896e98331fe14e5746c53a4a543f">  214</a></span>&#160;      <span class="keywordtype">int</span>          <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a546f896e98331fe14e5746c53a4a543f">GetSpinMultiplicity</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(_spinmultiplicity); }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keywordtype">double</span>     GetAtomicMass()    <span class="keyword">const</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      <span class="keywordtype">double</span>     GetExactMass()     <span class="keyword">const</span>;</div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">  222</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>()<span class="keyword">           const </span>{ <span class="keywordflow">return</span>((<span class="keywordtype">int</span>)_idx);  }</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aadfb6c1a92a9a3c0187c1099e75b6583">  223</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aadfb6c1a92a9a3c0187c1099e75b6583">GetIndex</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _idx - 1; }</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a6dd98e3e99e394dce75b285c451028b1">  224</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a6dd98e3e99e394dce75b285c451028b1">GetId</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _id; }</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a534869887e7780bf59a97b9c7e38cac9">  227</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a534869887e7780bf59a97b9c7e38cac9">GetCoordinateIdx</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>((<span class="keywordtype">int</span>)_cidx); }</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a036023769d4fee171548943838fa0df1">  229</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a036023769d4fee171548943838fa0df1">GetCIdx</a>()<span class="keyword">          const </span>{ <span class="keywordflow">return</span>((<span class="keywordtype">int</span>)_cidx); }</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a7bb9aaaed179e592414edfa0331788f6">  231</a></span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a7bb9aaaed179e592414edfa0331788f6">GetValence</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)_vbond.size(); }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetHyb()             <span class="keyword">const</span>;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetImplicitValence() <span class="keyword">const</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetHvyValence()      <span class="keyword">const</span>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetHeteroValence()   <span class="keyword">const</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="keywordtype">char</span>        *GetType();</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ac302cda48a4a650a3f8cf1dfe9a0cb1e">  244</a></span>&#160;      <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ac302cda48a4a650a3f8cf1dfe9a0cb1e">GetX</a>()<span class="keyword"> const   </span>{        <span class="keywordflow">return</span>(x());    }</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a2c302e1e24ca25bc362746dc51c22510">  246</a></span>&#160;      <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a2c302e1e24ca25bc362746dc51c22510">GetY</a>()<span class="keyword"> const  </span>{        <span class="keywordflow">return</span>(y());    }</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ad5e4abcd59d8d2c945e851ed92593826">  248</a></span>&#160;      <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ad5e4abcd59d8d2c945e851ed92593826">GetZ</a>()<span class="keyword"> const  </span>{        <span class="keywordflow">return</span>(z());    }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      <span class="comment">// These methods check to see if there is a coordinate pointer</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="comment">// or an internal vector (e.g., SetCoordPtr())</span></div><div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a833e1cf314b7b7a5537b2b6a56fee6a5">  253</a></span>&#160;<span class="comment"></span>      <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a833e1cf314b7b7a5537b2b6a56fee6a5">x</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">if</span> (_c)            <span class="keywordflow">return</span>((*_c)[_cidx]);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">else</span>               <span class="keywordflow">return</span> _v.<a class="code" href="classOpenBabel_1_1vector3.shtml#a7b1e56edcce2dfec1f65354c4f55703e">x</a>();</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      }</div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aca424ddaf2902c1cde483f37813d4278">  258</a></span>&#160;      <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aca424ddaf2902c1cde483f37813d4278">y</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keywordflow">if</span> (_c)            <span class="keywordflow">return</span>((*_c)[_cidx+1]);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">else</span>               <span class="keywordflow">return</span> _v.<a class="code" href="classOpenBabel_1_1vector3.shtml#a9085cf790064f107bc57185b11ab2eee">y</a>();</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      }</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ae7bc7213001e326be4d4eb2d8a035c34">  263</a></span>&#160;      <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ae7bc7213001e326be4d4eb2d8a035c34">z</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">if</span> (_c)            <span class="keywordflow">return</span>((*_c)[_cidx+2]);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">else</span>               <span class="keywordflow">return</span> _v.<a class="code" href="classOpenBabel_1_1vector3.shtml#a89f6c6d834e9fec20840d1754c06016e">z</a>();</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      }</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">  271</a></span>&#160;      <span class="keywordtype">double</span>     *<a class="code" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a>(){</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">if</span> (_c)          <span class="keywordflow">return</span>(&amp;(*_c)[_cidx]);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordflow">else</span>             <span class="keywordflow">return</span> NULL;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a>   &amp;GetVector();</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a>   &amp;GetVector() <span class="keyword">const</span>;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="keywordtype">double</span>     GetPartialCharge();</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <a class="code" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *GetResidue();</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      <a class="code" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *GetResidue(<span class="keywordtype">bool</span> perception);</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ad8480b61159bc6cb861b17341dc2b29a">  287</a></span>&#160;      <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>     *<a class="code" href="classOpenBabel_1_1OBAtom.shtml#ad8480b61159bc6cb861b17341dc2b29a">GetParent</a>()        {<span class="keywordflow">return</span>((<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>*)_parent);}</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      <span class="keywordtype">bool</span>       GetNewBondVector(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v,<span class="keywordtype">double</span> length);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>    *GetBond(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>    *GetNextAtom();</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      OBBondIterator BeginBonds()</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        { <span class="keywordflow">return</span>(_vbond.begin()); }</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a87859f951e8ea33345b76d93014486c9">  307</a></span>&#160;      OBBondIterator <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a87859f951e8ea33345b76d93014486c9">EndBonds</a>()</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        { <span class="keywordflow">return</span>(_vbond.end());   }</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *BeginBond(OBBondIterator &amp;i);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *NextBond(OBBondIterator &amp;i);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *BeginNbrAtom(OBBondIterator &amp;i);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *NextNbrAtom(OBBondIterator &amp;i);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      <span class="keywordtype">double</span> GetDistance(<span class="keywordtype">int</span> index);</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;      <span class="keywordtype">double</span> GetDistance(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;      <span class="keywordtype">double</span> GetDistance(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a>* v);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;      <span class="keywordtype">double</span> GetAngle(<span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      <span class="keywordtype">double</span> GetAngle(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *b, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *c);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a616b5aac27eec22be5be998bc15d6349">  339</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a616b5aac27eec22be5be998bc15d6349">NewResidue</a>()</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        {</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;          <span class="keywordflow">if</span> (!_residue)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            _residue = <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        }</div><div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a3e3b0d3b268e6abe26f87d4c422c31cd">  345</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a3e3b0d3b268e6abe26f87d4c422c31cd">AddResidue</a>(<a class="code" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *res) { SetResidue(res); }</div><div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a85fa173a3c3f488fc691a11eaad81439">  347</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a85fa173a3c3f488fc691a11eaad81439">DeleteResidue</a>(){</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">if</span> (_residue) {</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;          <span class="keyword">delete</span> _residue;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;          _residue = NULL; <span class="comment">// Make sure to clear that a residue existed</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      }</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a5abeab08afbd305a51b9a9b5bd8fe356">  354</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a5abeab08afbd305a51b9a9b5bd8fe356">AddBond</a>(<a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond) { _vbond.push_back(bond); }</div><div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a1773630938cf6a028368394b666d06bf">  357</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a1773630938cf6a028368394b666d06bf">InsertBond</a>(OBBondIterator &amp;i, <a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;          _vbond.insert(i, bond);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      <span class="keywordtype">bool</span> DeleteBond(<a class="code" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>* bond);</div><div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a03fe71c8266435b7a76682e5c1472894">  364</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a03fe71c8266435b7a76682e5c1472894">ClearBond</a>() {_vbond.clear();}</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      <span class="keywordtype">bool</span> HtoMethyl();</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;      <span class="keywordtype">bool</span> SetHybAndGeom(<span class="keywordtype">int</span>);</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a1a92c9eb656eb9ef43f03c717a38adc3">  377</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a1a92c9eb656eb9ef43f03c717a38adc3">ForceNoH</a>() {SetFlag(<a class="code" href="atom_8h.shtml#aad40730c29a0be944d55f5b3e3f98ac9">OB_ATOM_HAS_NO_H</a>);}</div><div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a55e8f858833eee0408aee7b0f1b9c22c">  379</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a55e8f858833eee0408aee7b0f1b9c22c">HasNoHForced</a>() {<span class="keywordflow">return</span> HasFlag(<a class="code" href="atom_8h.shtml#aad40730c29a0be944d55f5b3e3f98ac9">OB_ATOM_HAS_NO_H</a>);}</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a03e54abd32434bd610bfd4430d91b7b9">  383</a></span>&#160;      <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a03e54abd32434bd610bfd4430d91b7b9">ForceImplH</a>() {SetFlag(<a class="code" href="atom_8h.shtml#ac41fb93bbf43756058cf90930dae22f1">OB_ATOM_NOT_H_DEFICIENT</a>);}</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a8920c0ef5c32f64887d09c3b2da857d5">  386</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a8920c0ef5c32f64887d09c3b2da857d5">HasImplHForced</a>() {<span class="keywordflow">return</span> HasFlag(<a class="code" href="atom_8h.shtml#ac41fb93bbf43756058cf90930dae22f1">OB_ATOM_NOT_H_DEFICIENT</a>);}</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  CountFreeOxygens()      <span class="keyword">const</span>;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  CountFreeSulfurs()      <span class="keyword">const</span>;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  ImplicitHydrogenCount() <span class="keyword">const</span>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  ExplicitHydrogenCount(<span class="keywordtype">bool</span> ExcludeIsotopes=<span class="keyword">false</span>) <span class="keyword">const</span>;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  MemberOfRingCount()     <span class="keyword">const</span>;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  MemberOfRingSize()    <span class="keyword">const</span>;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  CountRingBonds() <span class="keyword">const</span>;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;      <span class="keywordtype">double</span>      SmallestBondAngle();</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;      <span class="keywordtype">double</span>      AverageBondAngle();</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  BOSum()                 <span class="keyword">const</span>;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  KBOSum()                <span class="keyword">const</span>;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;      std::pair&lt;int, int&gt; LewisAcidBaseCounts() <span class="keyword">const</span>;</div><div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ae3177d9e8b583d3cda02b90c141894c5">  421</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ae3177d9e8b583d3cda02b90c141894c5">HasResidue</a>()    { <span class="keywordflow">return</span>(_residue != NULL);    }</div><div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#acf8e48cf13e5ccecd7eaf64bf4393081">  424</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#acf8e48cf13e5ccecd7eaf64bf4393081">IsHetAtom</a>() {</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keywordflow">if</span> (_residue == NULL)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;          <span class="keywordflow">return</span> _residue-&gt;<a class="code" href="classOpenBabel_1_1OBResidue.shtml#afdd62b9f57599767a533540bf8c4517c">IsHetAtom</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      }</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ab633bc0f8f40dfcedf42940ab8a5316c">  431</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ab633bc0f8f40dfcedf42940ab8a5316c">IsHydrogen</a>()    { <span class="keywordflow">return</span>(GetAtomicNum() == 1); }</div><div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a7102b6e4d75ace5bcc21957c9a696110">  432</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a7102b6e4d75ace5bcc21957c9a696110">IsHydrogen</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(GetAtomicNum() == 1); }</div><div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a1f0a167775136e911cd349cdd8923b24">  434</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a1f0a167775136e911cd349cdd8923b24">IsCarbon</a>()      { <span class="keywordflow">return</span>(GetAtomicNum() == 6); }</div><div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aacb82bc548922e4f1276a255f212f143">  436</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aacb82bc548922e4f1276a255f212f143">IsNitrogen</a>()    { <span class="keywordflow">return</span>(GetAtomicNum() == 7); }</div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#af7e8030ce19d79c9ad0b3cfbf116dc59">  438</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#af7e8030ce19d79c9ad0b3cfbf116dc59">IsOxygen</a>()      { <span class="keywordflow">return</span>(GetAtomicNum() == 8); }</div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#aa71152591d5cc51fc2f3701ff7de7dfd">  440</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#aa71152591d5cc51fc2f3701ff7de7dfd">IsSulfur</a>()      { <span class="keywordflow">return</span>(GetAtomicNum() == 16);}</div><div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#ab8c7f052f9380b98eef3b83da640eba3">  442</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ab8c7f052f9380b98eef3b83da640eba3">IsPhosphorus</a>()  { <span class="keywordflow">return</span>(GetAtomicNum() == 15);}</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      <span class="keywordtype">bool</span> IsAromatic()      <span class="keyword">const</span>;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;      <span class="keywordtype">bool</span> IsInRing()        <span class="keyword">const</span>;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      <span class="keywordtype">bool</span> IsInRingSize(<span class="keywordtype">int</span>) <span class="keyword">const</span>;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="keywordtype">bool</span> IsHeteroatom();</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      <span class="keywordtype">bool</span> IsNotCorH();</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;      <span class="keywordtype">bool</span> IsConnected(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      <span class="keywordtype">bool</span> IsOneThree(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      <span class="keywordtype">bool</span> IsOneFour(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      <span class="keywordtype">bool</span> IsCarboxylOxygen();</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      <span class="keywordtype">bool</span> IsPhosphateOxygen();</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;      <span class="keywordtype">bool</span> IsSulfateOxygen();</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      <span class="keywordtype">bool</span> IsNitroOxygen();</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      <span class="keywordtype">bool</span> IsAmideNitrogen();</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;      <span class="keywordtype">bool</span> IsPolarHydrogen();</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      <span class="keywordtype">bool</span> IsNonPolarHydrogen();</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;      <span class="keywordtype">bool</span> IsAromaticNOxide();</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;      <span class="keywordtype">bool</span> IsChiral();</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      <span class="keywordtype">bool</span> IsAxial();</div><div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a4d1f38bbe03483629778078dcc4e75a0">  486</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a4d1f38bbe03483629778078dcc4e75a0">IsClockwise</a>()         { <span class="keywordflow">return</span>(HasFlag(<a class="code" href="atom_8h.shtml#a4cfdf58a49dd4ebfab6d8dada02fef43">OB_CSTEREO_ATOM</a>));  }</div><div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#af3abb70d4f818b9c3e416928afa2e844">  488</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#af3abb70d4f818b9c3e416928afa2e844">IsAntiClockwise</a>()     { <span class="keywordflow">return</span>(HasFlag(<a class="code" href="atom_8h.shtml#a7a0c4ca8c736e743fda131e25de50a26">OB_ACSTEREO_ATOM</a>)); }</div><div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a9880a080dd0bce244291bde514b67d20">  490</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a9880a080dd0bce244291bde514b67d20">IsPositiveStereo</a>() { <span class="keywordflow">return</span>(HasFlag(<a class="code" href="atom_8h.shtml#a2cac237d3ceb0758f76448ba35cf4fa5">OB_POS_CHIRAL_ATOM</a>)); }</div><div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a61e5344c34c172e9b889e59255aff6de">  492</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a61e5344c34c172e9b889e59255aff6de">IsNegativeStereo</a>() { <span class="keywordflow">return</span>(HasFlag(<a class="code" href="atom_8h.shtml#a28504d751913b6affc112690765c1ea6">OB_NEG_CHIRAL_ATOM</a>)); }</div><div class="line"><a name="l00494"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a8844e382c76003229ee5fdd0341aacee">  494</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a8844e382c76003229ee5fdd0341aacee">HasChiralitySpecified</a>() { <span class="keywordflow">return</span>(HasFlag(<a class="code" href="atom_8h.shtml#a4cfdf58a49dd4ebfab6d8dada02fef43">OB_CSTEREO_ATOM</a>|<a class="code" href="atom_8h.shtml#a7a0c4ca8c736e743fda131e25de50a26">OB_ACSTEREO_ATOM</a>)); }</div><div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a63911efd550113b275239d322670986d">  496</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a63911efd550113b275239d322670986d">HasChiralVolume</a>() { <span class="keywordflow">return</span>(HasFlag(<a class="code" href="atom_8h.shtml#a2cac237d3ceb0758f76448ba35cf4fa5">OB_POS_CHIRAL_ATOM</a>|<a class="code" href="atom_8h.shtml#a28504d751913b6affc112690765c1ea6">OB_NEG_CHIRAL_ATOM</a>)); }</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;      <span class="keywordtype">bool</span> IsHbondAcceptor();</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;      <span class="keywordtype">bool</span> IsHbondAcceptorSimple();</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;      <span class="keywordtype">bool</span> IsHbondDonor();</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;      <span class="keywordtype">bool</span> IsHbondDonorH();</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;      <span class="keywordtype">bool</span> IsMetal();</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;      <span class="keywordtype">bool</span> HasAlphaBetaUnsat(<span class="keywordtype">bool</span> includePandS=<span class="keyword">true</span>);</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;      <span class="keywordtype">bool</span> HasBondOfOrder(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bo);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;      <span class="keywordtype">int</span>  CountBondsOfOrder(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bo);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      <span class="keywordtype">int</span>  HighestBondOrder();</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;      <span class="keywordtype">bool</span> HasNonSingleBond();</div><div class="line"><a name="l00522"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#af347b80d156587c2287754345606c78d">  522</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#af347b80d156587c2287754345606c78d">HasSingleBond</a>()    {        <span class="keywordflow">return</span>(HasBondOfOrder(1));    }</div><div class="line"><a name="l00524"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a0cb35a21cc08897bc7f9b01ae4561e50">  524</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a0cb35a21cc08897bc7f9b01ae4561e50">HasDoubleBond</a>()    {        <span class="keywordflow">return</span>(HasBondOfOrder(2));    }</div><div class="line"><a name="l00526"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBAtom.shtml#a11bf8aa7f79e9b9bdef2602808bb794d">  526</a></span>&#160;      <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBAtom.shtml#a11bf8aa7f79e9b9bdef2602808bb794d">HasAromaticBond</a>()  {        <span class="keywordflow">return</span>(HasBondOfOrder(5));    }</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;      <span class="keywordtype">bool</span> MatchesSMARTS(<span class="keyword">const</span> <span class="keywordtype">char</span> *);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    }; <span class="comment">// class OBAtom</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;}<span class="comment">// namespace OpenBabel</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="preprocessor">#endif   // OB_ATOM_H</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="ttc" id="atom_8h_shtml_a4cfdf58a49dd4ebfab6d8dada02fef43"><div class="ttname"><a href="atom_8h.shtml#a4cfdf58a49dd4ebfab6d8dada02fef43">OB_CSTEREO_ATOM</a></div><div class="ttdeci">#define OB_CSTEREO_ATOM</div><div class="ttdoc">Atom has clockwise SMILES chiral stereochemistry (i.e., &quot;@@&quot;) </div><div class="ttdef"><b>Definition:</b> atom.h:60</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a0cb35a21cc08897bc7f9b01ae4561e50"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a0cb35a21cc08897bc7f9b01ae4561e50">OpenBabel::OBAtom::HasDoubleBond</a></div><div class="ttdeci">bool HasDoubleBond()</div><div class="ttdef"><b>Definition:</b> atom.h:524</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aef178db02607fe00f112bd1a7f5f4d2b"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aef178db02607fe00f112bd1a7f5f4d2b">OpenBabel::OBAtom::_cidx</a></div><div class="ttdeci">unsigned int _cidx</div><div class="ttdoc">index into coordinate array </div><div class="ttdef"><b>Definition:</b> atom.h:95</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a9880a080dd0bce244291bde514b67d20"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a9880a080dd0bce244291bde514b67d20">OpenBabel::OBAtom::IsPositiveStereo</a></div><div class="ttdeci">bool IsPositiveStereo()</div><div class="ttdef"><b>Definition:</b> atom.h:490</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ab3e028e65ae7c0dac55997f2cb7281ce"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ab3e028e65ae7c0dac55997f2cb7281ce">OpenBabel::OBAtom::_impval</a></div><div class="ttdeci">char _impval</div><div class="ttdoc">implicit valence </div><div class="ttdef"><b>Definition:</b> atom.h:85</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a963851351ab3c084233a82d367f15607"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a963851351ab3c084233a82d367f15607">OpenBabel::OBAtom::SetPartialCharge</a></div><div class="ttdeci">void SetPartialCharge(double pcharge)</div><div class="ttdoc">Set the partial charge to pcharge. </div><div class="ttdef"><b>Definition:</b> atom.h:162</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ae4b9cf0b2f94fc6befff220367fccd0a"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ae4b9cf0b2f94fc6befff220367fccd0a">OpenBabel::OBAtom::_pcharge</a></div><div class="ttdeci">double _pcharge</div><div class="ttdoc">partial charge </div><div class="ttdef"><b>Definition:</b> atom.h:98</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ae048690c14e9258cc653231a56d5dfda"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ae048690c14e9258cc653231a56d5dfda">OpenBabel::OBAtom::IncrementImplicitValence</a></div><div class="ttdeci">void IncrementImplicitValence()</div><div class="ttdoc">Increase the implicit valence by one. </div><div class="ttdef"><b>Definition:</b> atom.h:150</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a6368d7673f23186649b2969ade3661d7"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a6368d7673f23186649b2969ade3661d7">OpenBabel::OBAtom::Visit</a></div><div class="ttdeci">bool Visit</div><div class="ttdoc">Used internally by graph traversal algorithms. </div><div class="ttdef"><b>Definition:</b> atom.h:119</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a573a9f96a971854938ab2db5eb4d4851"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a573a9f96a971854938ab2db5eb4d4851">OpenBabel::OBAtom::SetAtomicNum</a></div><div class="ttdeci">void SetAtomicNum(int atomicnum)</div><div class="ttdoc">Set atomic number. </div><div class="ttdef"><b>Definition:</b> atom.h:144</div></div>
<div class="ttc" id="vector3_8h_shtml"><div class="ttname"><a href="vector3_8h.shtml">vector3.h</a></div><div class="ttdoc">Handle 3D coordinates. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aacb82bc548922e4f1276a255f212f143"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aacb82bc548922e4f1276a255f212f143">OpenBabel::OBAtom::IsNitrogen</a></div><div class="ttdeci">bool IsNitrogen()</div><div class="ttdef"><b>Definition:</b> atom.h:436</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ae3177d9e8b583d3cda02b90c141894c5"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ae3177d9e8b583d3cda02b90c141894c5">OpenBabel::OBAtom::HasResidue</a></div><div class="ttdeci">bool HasResidue()</div><div class="ttdef"><b>Definition:</b> atom.h:421</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a962b3010305cfb80ba816a0e54097dee"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a962b3010305cfb80ba816a0e54097dee">OpenBabel::OBAtom::SetParent</a></div><div class="ttdeci">void SetParent(OBMol *ptr)</div><div class="ttdoc">Attach an OBMol ptr as the parent container for this atom. </div><div class="ttdef"><b>Definition:</b> atom.h:174</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ad60f474b9381f875e4b6e3f5df457c9a"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ad60f474b9381f875e4b6e3f5df457c9a">OpenBabel::OBAtom::_isotope</a></div><div class="ttdeci">unsigned short _isotope</div><div class="ttdoc">isotope (0 = most abundant) </div><div class="ttdef"><b>Definition:</b> atom.h:88</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a6dd98e3e99e394dce75b285c451028b1"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a6dd98e3e99e394dce75b285c451028b1">OpenBabel::OBAtom::GetId</a></div><div class="ttdeci">unsigned long GetId() const</div><div class="ttdef"><b>Definition:</b> atom.h:224</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a91a32f6c060e12e4d188974db5b111d3"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a91a32f6c060e12e4d188974db5b111d3">OpenBabel::OBAtom::_c</a></div><div class="ttdeci">double ** _c</div><div class="ttdoc">coordinate array in double* </div><div class="ttdef"><b>Definition:</b> atom.h:99</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_af328f0aa99465103074b1d336c393919"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#af328f0aa99465103074b1d336c393919">OpenBabel::OBAtom::SetAntiClockwiseStereo</a></div><div class="ttdeci">void SetAntiClockwiseStereo()</div><div class="ttdef"><b>Definition:</b> atom.h:182</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_acf8e48cf13e5ccecd7eaf64bf4393081"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#acf8e48cf13e5ccecd7eaf64bf4393081">OpenBabel::OBAtom::IsHetAtom</a></div><div class="ttdeci">bool IsHetAtom()</div><div class="ttdef"><b>Definition:</b> atom.h:424</div></div>
<div class="ttc" id="base_8h_shtml"><div class="ttname"><a href="base_8h.shtml">base.h</a></div><div class="ttdoc">Base classes to build a graph. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_afdf42f73fe8a0cec0db3c3e544830fcc"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#afdf42f73fe8a0cec0db3c3e544830fcc">OpenBabel::OBAtom::UnsetStereo</a></div><div class="ttdeci">void UnsetStereo()</div><div class="ttdef"><b>Definition:</b> atom.h:188</div></div>
<div class="ttc" id="atom_8h_shtml_a57a10e2d6bfa530e787d7e13cc9da15d"><div class="ttname"><a href="atom_8h.shtml#a57a10e2d6bfa530e787d7e13cc9da15d">OB_CHIRAL_ATOM</a></div><div class="ttdeci">#define OB_CHIRAL_ATOM</div><div class="ttdoc">Atom is chiral. </div><div class="ttdef"><b>Definition:</b> atom.h:68</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a85fa173a3c3f488fc691a11eaad81439"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a85fa173a3c3f488fc691a11eaad81439">OpenBabel::OBAtom::DeleteResidue</a></div><div class="ttdeci">void DeleteResidue()</div><div class="ttdoc">Delete any residue associated with this atom. </div><div class="ttdef"><b>Definition:</b> atom.h:347</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a5abeab08afbd305a51b9a9b5bd8fe356"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a5abeab08afbd305a51b9a9b5bd8fe356">OpenBabel::OBAtom::AddBond</a></div><div class="ttdeci">void AddBond(OBBond *bond)</div><div class="ttdoc">Add a bond to the internal list. Does not update the bond. </div><div class="ttdef"><b>Definition:</b> atom.h:354</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a299285ee1effd21803b3c042a376e149"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a299285ee1effd21803b3c042a376e149">OpenBabel::OBAtom::SetSpinMultiplicity</a></div><div class="ttdeci">void SetSpinMultiplicity(short spin)</div><div class="ttdoc">Set the atomic spin to spin. See _spinmultiplicity. </div><div class="ttdef"><b>Definition:</b> atom.h:156</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_af3abb70d4f818b9c3e416928afa2e844"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#af3abb70d4f818b9c3e416928afa2e844">OpenBabel::OBAtom::IsAntiClockwise</a></div><div class="ttdeci">bool IsAntiClockwise()</div><div class="ttdef"><b>Definition:</b> atom.h:488</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a383094c5a19383cf09f3dfb4c1de1da2"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a383094c5a19383cf09f3dfb4c1de1da2">OpenBabel::OBAtom::SetId</a></div><div class="ttdeci">void SetId(unsigned long id)</div><div class="ttdef"><b>Definition:</b> atom.h:140</div></div>
<div class="ttc" id="atom_8h_shtml_ac41fb93bbf43756058cf90930dae22f1"><div class="ttname"><a href="atom_8h.shtml#ac41fb93bbf43756058cf90930dae22f1">OB_ATOM_NOT_H_DEFICIENT</a></div><div class="ttdeci">#define OB_ATOM_NOT_H_DEFICIENT</div><div class="ttdoc">Atom is not hydrogen deficient. (for SMILES input) </div><div class="ttdef"><b>Definition:</b> atom.h:76</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a87859f951e8ea33345b76d93014486c9"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a87859f951e8ea33345b76d93014486c9">OpenBabel::OBAtom::EndBonds</a></div><div class="ttdeci">OBBondIterator EndBonds()</div><div class="ttdef"><b>Definition:</b> atom.h:307</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ad61d9e7b9ecdf9ac58a7f0a65a50b066"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ad61d9e7b9ecdf9ac58a7f0a65a50b066">OpenBabel::OBAtom::GetIsotope</a></div><div class="ttdeci">unsigned short int GetIsotope() const</div><div class="ttdef"><b>Definition:</b> atom.h:211</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ac302cda48a4a650a3f8cf1dfe9a0cb1e"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ac302cda48a4a650a3f8cf1dfe9a0cb1e">OpenBabel::OBAtom::GetX</a></div><div class="ttdeci">double GetX() const</div><div class="ttdef"><b>Definition:</b> atom.h:244</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a3fa3634d92a924e5af69208768e839a5"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a3fa3634d92a924e5af69208768e839a5">OpenBabel::OBAtom::ClearCoordPtr</a></div><div class="ttdeci">void ClearCoordPtr()</div><div class="ttdoc">Clear the internal coordinate pointer. </div><div class="ttdef"><b>Definition:</b> atom.h:201</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a3e3b0d3b268e6abe26f87d4c422c31cd"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a3e3b0d3b268e6abe26f87d4c422c31cd">OpenBabel::OBAtom::AddResidue</a></div><div class="ttdeci">void AddResidue(OBResidue *res)</div><div class="ttdoc">Add (set) the residue for this atom. </div><div class="ttdef"><b>Definition:</b> atom.h:345</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_afbdb429fe4a7d37960636a555de77326"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#afbdb429fe4a7d37960636a555de77326">OpenBabel::OBAtom::StereoFlag</a></div><div class="ttdeci">StereoFlag</div><div class="ttdef"><b>Definition:</b> atom.h:113</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a7102b6e4d75ace5bcc21957c9a696110"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a7102b6e4d75ace5bcc21957c9a696110">OpenBabel::OBAtom::IsHydrogen</a></div><div class="ttdeci">bool IsHydrogen() const</div><div class="ttdef"><b>Definition:</b> atom.h:432</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBond_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBond.shtml">OpenBabel::OBBond</a></div><div class="ttdoc">Bond class. </div><div class="ttdef"><b>Definition:</b> bond.h:69</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_af9dd6c6924f23479933e0b8779a4bec2"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">OpenBabel::OBAtom::GetCoordinate</a></div><div class="ttdeci">double * GetCoordinate()</div><div class="ttdef"><b>Definition:</b> atom.h:271</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ac0863bf2485bd66ba3afa6e50ddc20f6"><div class="ttname"><a href="namespaceOpenBabel.shtml#ac0863bf2485bd66ba3afa6e50ddc20f6">OpenBabel::OBNodeBase</a></div><div class="ttdeci">OBAtom OBNodeBase</div><div class="ttdoc">OBNodeBase is declared for backwards-compatibility with 2.0 and earlier code. </div><div class="ttdef"><b>Definition:</b> atom.h:41</div></div>
<div class="ttc" id="atom_8h_shtml_a5f2ffc18f5cc3589dd1978252169f11e"><div class="ttname"><a href="atom_8h.shtml#a5f2ffc18f5cc3589dd1978252169f11e">OB_RING_ATOM</a></div><div class="ttdeci">#define OB_RING_ATOM</div><div class="ttdoc">Atom is in a ring. </div><div class="ttdef"><b>Definition:</b> atom.h:58</div></div>
<div class="ttc" id="classOpenBabel_1_1vector3_shtml_a7b1e56edcce2dfec1f65354c4f55703e"><div class="ttname"><a href="classOpenBabel_1_1vector3.shtml#a7b1e56edcce2dfec1f65354c4f55703e">OpenBabel::vector3::x</a></div><div class="ttdeci">const double &amp; x() const</div><div class="ttdoc">Access function to get the x-coordinate of the vector. </div><div class="ttdef"><b>Definition:</b> vector3.h:238</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_adf069c94123595712cb7fa847b87e449"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#adf069c94123595712cb7fa847b87e449">OpenBabel::OBAtom::SetClockwiseStereo</a></div><div class="ttdeci">void SetClockwiseStereo()</div><div class="ttdef"><b>Definition:</b> atom.h:180</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_af7e8030ce19d79c9ad0b3cfbf116dc59"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#af7e8030ce19d79c9ad0b3cfbf116dc59">OpenBabel::OBAtom::IsOxygen</a></div><div class="ttdeci">bool IsOxygen()</div><div class="ttdef"><b>Definition:</b> atom.h:438</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a2a4ac28765690d9b074521327cb4876b"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a2a4ac28765690d9b074521327cb4876b">OpenBabel::OBAtom::_ele</a></div><div class="ttdeci">unsigned char _ele</div><div class="ttdoc">atomic number (type unsigned char to minimize space – allows for 0..255 elements) ...</div><div class="ttdef"><b>Definition:</b> atom.h:84</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:113</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ade786f15ee67979fbb9c48970b22e184"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184">OpenBabel::OBAtom::SetResidue</a></div><div class="ttdeci">void SetResidue(OBResidue *res)</div><div class="ttdoc">Attach an OBResidue res as containing this atom. </div><div class="ttdef"><b>Definition:</b> atom.h:172</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a036023769d4fee171548943838fa0df1"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a036023769d4fee171548943838fa0df1">OpenBabel::OBAtom::GetCIdx</a></div><div class="ttdeci">unsigned int GetCIdx() const</div><div class="ttdef"><b>Definition:</b> atom.h:229</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ab8c7f052f9380b98eef3b83da640eba3"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ab8c7f052f9380b98eef3b83da640eba3">OpenBabel::OBAtom::IsPhosphorus</a></div><div class="ttdeci">bool IsPhosphorus()</div><div class="ttdef"><b>Definition:</b> atom.h:442</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a1773630938cf6a028368394b666d06bf"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a1773630938cf6a028368394b666d06bf">OpenBabel::OBAtom::InsertBond</a></div><div class="ttdeci">void InsertBond(OBBondIterator &amp;i, OBBond *bond)</div><div class="ttdoc">Insert bond into the internal list at the position from i Does not modify the bond. </div><div class="ttdef"><b>Definition:</b> atom.h:357</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a3a1dc0419a66d2e7288214342de43b7a"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a3a1dc0419a66d2e7288214342de43b7a">OpenBabel::OBAtom::HasFlag</a></div><div class="ttdeci">bool HasFlag(int flag)</div><div class="ttdef"><b>Definition:</b> atom.h:110</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a11bf8aa7f79e9b9bdef2602808bb794d"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a11bf8aa7f79e9b9bdef2602808bb794d">OpenBabel::OBAtom::HasAromaticBond</a></div><div class="ttdeci">bool HasAromaticBond()</div><div class="ttdef"><b>Definition:</b> atom.h:526</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a86f5522afaa8e213fd39c0ab71cc4ac1"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a86f5522afaa8e213fd39c0ab71cc4ac1">OpenBabel::OBAtom::operator==</a></div><div class="ttdeci">bool operator==(const OBAtom *other) const</div><div class="ttdoc">Equivalence. </div><div class="ttdef"><b>Definition:</b> atom.h:128</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aa71152591d5cc51fc2f3701ff7de7dfd"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aa71152591d5cc51fc2f3701ff7de7dfd">OpenBabel::OBAtom::IsSulfur</a></div><div class="ttdeci">bool IsSulfur()</div><div class="ttdef"><b>Definition:</b> atom.h:440</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a7acb91a903a31d698dc25d296b988f7f"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a7acb91a903a31d698dc25d296b988f7f">OpenBabel::OBAtom::DecrementImplicitValence</a></div><div class="ttdeci">void DecrementImplicitValence()</div><div class="ttdoc">Decrease the implicit valence by one. </div><div class="ttdef"><b>Definition:</b> atom.h:152</div></div>
<div class="ttc" id="atom_8h_shtml_a7a0c4ca8c736e743fda131e25de50a26"><div class="ttname"><a href="atom_8h.shtml#a7a0c4ca8c736e743fda131e25de50a26">OB_ACSTEREO_ATOM</a></div><div class="ttdeci">#define OB_ACSTEREO_ATOM</div><div class="ttdoc">Atom has anticlockwise SMILES chiral stereochemistry (i.e., &quot;@&quot;) </div><div class="ttdef"><b>Definition:</b> atom.h:62</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a55e8f858833eee0408aee7b0f1b9c22c"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a55e8f858833eee0408aee7b0f1b9c22c">OpenBabel::OBAtom::HasNoHForced</a></div><div class="ttdeci">bool HasNoHForced()</div><div class="ttdef"><b>Definition:</b> atom.h:379</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a3d29498c15007d9b6729e26784f23a5b"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a3d29498c15007d9b6729e26784f23a5b">OpenBabel::OBAtom::SetAromatic</a></div><div class="ttdeci">void SetAromatic()</div><div class="ttdoc">Mark atom as being aromatic. </div><div class="ttdef"><b>Definition:</b> atom.h:176</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a4d1f38bbe03483629778078dcc4e75a0"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a4d1f38bbe03483629778078dcc4e75a0">OpenBabel::OBAtom::IsClockwise</a></div><div class="ttdeci">bool IsClockwise()</div><div class="ttdef"><b>Definition:</b> atom.h:486</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a3c7208419c7703e947e9a1c365838b98"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a3c7208419c7703e947e9a1c365838b98">OpenBabel::OBAtom::_vbond</a></div><div class="ttdeci">std::vector&lt; OBBond * &gt; _vbond</div><div class="ttdoc">bonds to this atom – assumed to be one of the endpoints </div><div class="ttdef"><b>Definition:</b> atom.h:93</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a61e5344c34c172e9b889e59255aff6de"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a61e5344c34c172e9b889e59255aff6de">OpenBabel::OBAtom::IsNegativeStereo</a></div><div class="ttdeci">bool IsNegativeStereo()</div><div class="ttdef"><b>Definition:</b> atom.h:492</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_aed11ccd81d7abaccbdf10486a5ae0402"><div class="ttname"><a href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OpenBabel::OBAtomIterator</a></div><div class="ttdeci">std::vector&lt; OBAtom * &gt;::iterator OBAtomIterator</div><div class="ttdoc">A standard iterator over a vector of atoms. </div><div class="ttdef"><b>Definition:</b> atom.h:48</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aa15238ffbdb1330727678c9d6553d6ba"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aa15238ffbdb1330727678c9d6553d6ba">OpenBabel::OBAtom::_parent</a></div><div class="ttdeci">OBMol * _parent</div><div class="ttdoc">parent molecule (if any) </div><div class="ttdef"><b>Definition:</b> atom.h:92</div></div>
<div class="ttc" id="atom_8h_shtml_ac08352e8abee93573a66f692f0827bd3"><div class="ttname"><a href="atom_8h.shtml#ac08352e8abee93573a66f692f0827bd3">OB_AROMATIC_ATOM</a></div><div class="ttdeci">#define OB_AROMATIC_ATOM</div><div class="ttdoc">Atom is aromatic. </div><div class="ttdef"><b>Definition:</b> atom.h:56</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a8844e382c76003229ee5fdd0341aacee"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a8844e382c76003229ee5fdd0341aacee">OpenBabel::OBAtom::HasChiralitySpecified</a></div><div class="ttdeci">bool HasChiralitySpecified()</div><div class="ttdef"><b>Definition:</b> atom.h:494</div></div>
<div class="ttc" id="classOpenBabel_1_1vector3_shtml_a9085cf790064f107bc57185b11ab2eee"><div class="ttname"><a href="classOpenBabel_1_1vector3.shtml#a9085cf790064f107bc57185b11ab2eee">OpenBabel::vector3::y</a></div><div class="ttdeci">const double &amp; y() const</div><div class="ttdoc">Access function to get the y-coordinate of the vector. </div><div class="ttdef"><b>Definition:</b> vector3.h:243</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ad4e5a4c67101743f644b047b632d058b"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ad4e5a4c67101743f644b047b632d058b">OpenBabel::OBAtom::SetChiral</a></div><div class="ttdeci">void SetChiral()</div><div class="ttdoc">Mark an atom as being chiral with unknown stereochemistry. </div><div class="ttdef"><b>Definition:</b> atom.h:199</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a54495d3eb8f9749d0237e6bda59e0abe"><div class="ttname"><a href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OpenBabel::OBBondIterator</a></div><div class="ttdeci">std::vector&lt; OBBond * &gt;::iterator OBBondIterator</div><div class="ttdoc">A standard iterator over a vector of bonds. </div><div class="ttdef"><b>Definition:</b> atom.h:46</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a5cc9f88f4cc5fda10e7932cd59a87f16"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a5cc9f88f4cc5fda10e7932cd59a87f16">OpenBabel::OBAtom::_flags</a></div><div class="ttdeci">unsigned short _flags</div><div class="ttdoc">bitwise flags (e.g. aromaticity) </div><div class="ttdef"><b>Definition:</b> atom.h:97</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a1219a011a5e0ec59c67a5a873d81986c"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a1219a011a5e0ec59c67a5a873d81986c">OpenBabel::OBAtom::_idx</a></div><div class="ttdeci">unsigned int _idx</div><div class="ttdoc">unique node index (GetIdx(), SetIdx()) </div><div class="ttdef"><b>Definition:</b> atom.h:91</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aeff361260a8a4e9ea703d5d38f5fc671"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671">OpenBabel::OBAtom::SetCoordPtr</a></div><div class="ttdeci">void SetCoordPtr(double **c)</div><div class="ttdoc">Set the position of this atom from a pointer-driven array of coordinates. </div><div class="ttdef"><b>Definition:</b> atom.h:168</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a4ebf98749415a00a56fdbc77f87fdc87"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a4ebf98749415a00a56fdbc77f87fdc87">OpenBabel::OBAtom::SetImplicitValence</a></div><div class="ttdeci">void SetImplicitValence(int val)</div><div class="ttdoc">Set the implicit valence to val. </div><div class="ttdef"><b>Definition:</b> atom.h:148</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a546f896e98331fe14e5746c53a4a543f"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a546f896e98331fe14e5746c53a4a543f">OpenBabel::OBAtom::GetSpinMultiplicity</a></div><div class="ttdeci">int GetSpinMultiplicity() const</div><div class="ttdef"><b>Definition:</b> atom.h:214</div></div>
<div class="ttc" id="classOpenBabel_1_1vector3_shtml"><div class="ttname"><a href="classOpenBabel_1_1vector3.shtml">OpenBabel::vector3</a></div><div class="ttdoc">Represents a vector in 3-dimensional real space. </div><div class="ttdef"><b>Definition:</b> vector3.h:45</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ae7bc7213001e326be4d4eb2d8a035c34"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ae7bc7213001e326be4d4eb2d8a035c34">OpenBabel::OBAtom::z</a></div><div class="ttdeci">double z() const</div><div class="ttdef"><b>Definition:</b> atom.h:263</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a63911efd550113b275239d322670986d"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a63911efd550113b275239d322670986d">OpenBabel::OBAtom::HasChiralVolume</a></div><div class="ttdeci">bool HasChiralVolume()</div><div class="ttdef"><b>Definition:</b> atom.h:496</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a90250b249ffa0fcb4daa83bde1ff4614"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a90250b249ffa0fcb4daa83bde1ff4614">OpenBabel::OBAtom::GetAtomicNum</a></div><div class="ttdeci">unsigned int GetAtomicNum() const</div><div class="ttdef"><b>Definition:</b> atom.h:209</div></div>
<div class="ttc" id="residue_8h_shtml"><div class="ttname"><a href="residue_8h.shtml">residue.h</a></div><div class="ttdoc">Defines for residue properties, names, etc. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ae8dcade9402fad862f0391488350ea3e"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ae8dcade9402fad862f0391488350ea3e">OpenBabel::OBAtom::_v</a></div><div class="ttdeci">vector3 _v</div><div class="ttdoc">coordinate vector </div><div class="ttdef"><b>Definition:</b> atom.h:100</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a03fe71c8266435b7a76682e5c1472894"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a03fe71c8266435b7a76682e5c1472894">OpenBabel::OBAtom::ClearBond</a></div><div class="ttdeci">void ClearBond()</div><div class="ttdoc">Clear all bonding information in this atom (does not delete them) </div><div class="ttdef"><b>Definition:</b> atom.h:364</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a833e1cf314b7b7a5537b2b6a56fee6a5"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a833e1cf314b7b7a5537b2b6a56fee6a5">OpenBabel::OBAtom::x</a></div><div class="ttdeci">double x() const</div><div class="ttdef"><b>Definition:</b> atom.h:253</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a9ca5228f1b568f7076cd930ad0902a83"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a9ca5228f1b568f7076cd930ad0902a83">OpenBabel::OBAtom::SetHyb</a></div><div class="ttdeci">void SetHyb(int hyb)</div><div class="ttdoc">Set atom hybridization (i.e., 1 = sp, 2 = sp2, 3 = sp3 ...) </div><div class="ttdef"><b>Definition:</b> atom.h:142</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a44b77545e83209582e42f375c8f40474"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">OpenBabel::OBAtom::GetIdx</a></div><div class="ttdeci">unsigned int GetIdx() const</div><div class="ttdef"><b>Definition:</b> atom.h:222</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aea322d9d450ee48fb2e89a4f7c34deda"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aea322d9d450ee48fb2e89a4f7c34deda">OpenBabel::OBAtom::SetNegativeStereo</a></div><div class="ttdeci">void SetNegativeStereo()</div><div class="ttdef"><b>Definition:</b> atom.h:186</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_acc0aec564b42e181709de3699656f5b1"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#acc0aec564b42e181709de3699656f5b1">OpenBabel::OBAtom::GetFlag</a></div><div class="ttdeci">int GetFlag() const</div><div class="ttdef"><b>Definition:</b> atom.h:106</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a6e636025c5db07bf67523b31a55f6327"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a6e636025c5db07bf67523b31a55f6327">OpenBabel::OBAtom::_fcharge</a></div><div class="ttdeci">short _fcharge</div><div class="ttdoc">formal charge </div><div class="ttdef"><b>Definition:</b> atom.h:87</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ac26545dc3d68694f0a7b6f4a776f7a17"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ac26545dc3d68694f0a7b6f4a776f7a17">OpenBabel::OBAtom::_residue</a></div><div class="ttdeci">OBResidue * _residue</div><div class="ttdoc">parent residue (if applicable) </div><div class="ttdef"><b>Definition:</b> atom.h:101</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a616b5aac27eec22be5be998bc15d6349"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a616b5aac27eec22be5be998bc15d6349">OpenBabel::OBAtom::NewResidue</a></div><div class="ttdeci">void NewResidue()</div><div class="ttdoc">If no residue has been set for this atom, create a new one. </div><div class="ttdef"><b>Definition:</b> atom.h:339</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aadfb6c1a92a9a3c0187c1099e75b6583"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aadfb6c1a92a9a3c0187c1099e75b6583">OpenBabel::OBAtom::GetIndex</a></div><div class="ttdeci">unsigned int GetIndex() const</div><div class="ttdef"><b>Definition:</b> atom.h:223</div></div>
<div class="ttc" id="atom_8h_shtml_aad40730c29a0be944d55f5b3e3f98ac9"><div class="ttname"><a href="atom_8h.shtml#aad40730c29a0be944d55f5b3e3f98ac9">OB_ATOM_HAS_NO_H</a></div><div class="ttdeci">#define OB_ATOM_HAS_NO_H</div><div class="ttdoc">Atom has no hydrogen attached. Temporary use only during input of some formats. </div><div class="ttdef"><b>Definition:</b> atom.h:74</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a2fcf3bf429f36281a43c879e40e75f34"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a2fcf3bf429f36281a43c879e40e75f34">OpenBabel::OBAtom::UnsetAromatic</a></div><div class="ttdeci">void UnsetAromatic()</div><div class="ttdoc">Clear aromatic information from the atom. </div><div class="ttdef"><b>Definition:</b> atom.h:178</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a5d400386667c899017669303bdec09cd"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a5d400386667c899017669303bdec09cd">OpenBabel::OBAtom::_hyb</a></div><div class="ttdeci">unsigned short _hyb</div><div class="ttdoc">hybridization </div><div class="ttdef"><b>Definition:</b> atom.h:96</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ab633bc0f8f40dfcedf42940ab8a5316c"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ab633bc0f8f40dfcedf42940ab8a5316c">OpenBabel::OBAtom::IsHydrogen</a></div><div class="ttdeci">bool IsHydrogen()</div><div class="ttdef"><b>Definition:</b> atom.h:431</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a534869887e7780bf59a97b9c7e38cac9"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a534869887e7780bf59a97b9c7e38cac9">OpenBabel::OBAtom::GetCoordinateIdx</a></div><div class="ttdeci">unsigned int GetCoordinateIdx() const</div><div class="ttdef"><b>Definition:</b> atom.h:227</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a2c302e1e24ca25bc362746dc51c22510"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a2c302e1e24ca25bc362746dc51c22510">OpenBabel::OBAtom::GetY</a></div><div class="ttdeci">double GetY() const</div><div class="ttdef"><b>Definition:</b> atom.h:246</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a03e54abd32434bd610bfd4430d91b7b9"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a03e54abd32434bd610bfd4430d91b7b9">OpenBabel::OBAtom::ForceImplH</a></div><div class="ttdeci">void ForceImplH()</div><div class="ttdef"><b>Definition:</b> atom.h:383</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_adcdab8f96dc4fdc2940749e527087245"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#adcdab8f96dc4fdc2940749e527087245">OpenBabel::OBAtom::SetFlag</a></div><div class="ttdeci">void SetFlag(int flag)</div><div class="ttdoc">Sets the bitwise flag. </div><div class="ttdef"><b>Definition:</b> atom.h:108</div></div>
<div class="ttc" id="classOpenBabel_1_1OBResidue_shtml_afdd62b9f57599767a533540bf8c4517c"><div class="ttname"><a href="classOpenBabel_1_1OBResidue.shtml#afdd62b9f57599767a533540bf8c4517c">OpenBabel::OBResidue::IsHetAtom</a></div><div class="ttdeci">bool IsHetAtom(OBAtom *atom) const</div><div class="ttdef"><b>Definition:</b> residue.cpp:1131</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aec3b74d938a5e47bc6a6627f64d86e27"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aec3b74d938a5e47bc6a6627f64d86e27">OpenBabel::OBAtom::_spinmultiplicity</a></div><div class="ttdeci">short _spinmultiplicity</div><div class="ttdoc">atomic spin, e.g., 2 for radical 1 or 3 for carbene </div><div class="ttdef"><b>Definition:</b> atom.h:89</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_af347b80d156587c2287754345606c78d"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#af347b80d156587c2287754345606c78d">OpenBabel::OBAtom::HasSingleBond</a></div><div class="ttdeci">bool HasSingleBond()</div><div class="ttdef"><b>Definition:</b> atom.h:522</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aa1d084182d025e6fa000b928807d7689"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aa1d084182d025e6fa000b928807d7689">OpenBabel::OBAtom::SetFormalCharge</a></div><div class="ttdeci">void SetFormalCharge(int fcharge)</div><div class="ttdoc">Set the formal charge of the atom to fcharge. </div><div class="ttdef"><b>Definition:</b> atom.h:154</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a6ddbbbc5f8e185c43e634a0425311275"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a6ddbbbc5f8e185c43e634a0425311275">OpenBabel::OBAtom::SetPositiveStereo</a></div><div class="ttdeci">void SetPositiveStereo()</div><div class="ttdef"><b>Definition:</b> atom.h:184</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a1f0a167775136e911cd349cdd8923b24"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a1f0a167775136e911cd349cdd8923b24">OpenBabel::OBAtom::IsCarbon</a></div><div class="ttdeci">bool IsCarbon()</div><div class="ttdef"><b>Definition:</b> atom.h:434</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ad8480b61159bc6cb861b17341dc2b29a"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ad8480b61159bc6cb861b17341dc2b29a">OpenBabel::OBAtom::GetParent</a></div><div class="ttdeci">OBMol * GetParent()</div><div class="ttdef"><b>Definition:</b> atom.h:287</div></div>
<div class="ttc" id="atom_8h_shtml_a17ee9e29394f0bd750a589cd03e69ff1"><div class="ttname"><a href="atom_8h.shtml#a17ee9e29394f0bd750a589cd03e69ff1">OBATOM_TYPE_LEN</a></div><div class="ttdeci">#define OBATOM_TYPE_LEN</div><div class="ttdef"><b>Definition:</b> atom.h:80</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ae6a016e7f67cf564e5f80254c425f65c"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ae6a016e7f67cf564e5f80254c425f65c">OpenBabel::OBAtom::SetInRing</a></div><div class="ttdeci">void SetInRing()</div><div class="ttdoc">Mark an atom as belonging to at least one ring. </div><div class="ttdef"><b>Definition:</b> atom.h:197</div></div>
<div class="ttc" id="classOpenBabel_1_1vector3_shtml_a89f6c6d834e9fec20840d1754c06016e"><div class="ttname"><a href="classOpenBabel_1_1vector3.shtml#a89f6c6d834e9fec20840d1754c06016e">OpenBabel::vector3::z</a></div><div class="ttdeci">const double &amp; z() const</div><div class="ttdoc">Access function to get the z-coordinate of the vector. </div><div class="ttdef"><b>Definition:</b> vector3.h:248</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a1a92c9eb656eb9ef43f03c717a38adc3"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a1a92c9eb656eb9ef43f03c717a38adc3">OpenBabel::OBAtom::ForceNoH</a></div><div class="ttdeci">void ForceNoH()</div><div class="ttdoc">Mark that atom has no hydrogens attached. </div><div class="ttdef"><b>Definition:</b> atom.h:377</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_aca424ddaf2902c1cde483f37813d4278"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#aca424ddaf2902c1cde483f37813d4278">OpenBabel::OBAtom::y</a></div><div class="ttdeci">double y() const</div><div class="ttdef"><b>Definition:</b> atom.h:258</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a8920c0ef5c32f64887d09c3b2da857d5"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a8920c0ef5c32f64887d09c3b2da857d5">OpenBabel::OBAtom::HasImplHForced</a></div><div class="ttdeci">bool HasImplHForced()</div><div class="ttdef"><b>Definition:</b> atom.h:386</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_ad5e4abcd59d8d2c945e851ed92593826"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#ad5e4abcd59d8d2c945e851ed92593826">OpenBabel::OBAtom::GetZ</a></div><div class="ttdeci">double GetZ() const</div><div class="ttdef"><b>Definition:</b> atom.h:248</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:240</div></div>
<div class="ttc" id="classOpenBabel_1_1OBResidue_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBResidue.shtml">OpenBabel::OBResidue</a></div><div class="ttdoc">Residue information. </div><div class="ttdef"><b>Definition:</b> residue.h:50</div></div>
<div class="ttc" id="atom_8h_shtml_a2cac237d3ceb0758f76448ba35cf4fa5"><div class="ttname"><a href="atom_8h.shtml#a2cac237d3ceb0758f76448ba35cf4fa5">OB_POS_CHIRAL_ATOM</a></div><div class="ttdeci">#define OB_POS_CHIRAL_ATOM</div><div class="ttdoc">Atom has + chiral volume. </div><div class="ttdef"><b>Definition:</b> atom.h:70</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a7bb9aaaed179e592414edfa0331788f6"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a7bb9aaaed179e592414edfa0331788f6">OpenBabel::OBAtom::GetValence</a></div><div class="ttdeci">unsigned int GetValence() const</div><div class="ttdef"><b>Definition:</b> atom.h:231</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_accc49a515c7a81154bd46a8ea8a16204"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#accc49a515c7a81154bd46a8ea8a16204">OpenBabel::OBAtom::_id</a></div><div class="ttdeci">unsigned long _id</div><div class="ttdoc">unique id </div><div class="ttdef"><b>Definition:</b> atom.h:103</div></div>
<div class="ttc" id="atom_8h_shtml_a28504d751913b6affc112690765c1ea6"><div class="ttname"><a href="atom_8h.shtml#a28504d751913b6affc112690765c1ea6">OB_NEG_CHIRAL_ATOM</a></div><div class="ttdeci">#define OB_NEG_CHIRAL_ATOM</div><div class="ttdoc">Atom has - chiral volume. </div><div class="ttdef"><b>Definition:</b> atom.h:72</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a></div><div class="ttdoc">Atom class. </div><div class="ttdef"><b>Definition:</b> atom.h:81</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
