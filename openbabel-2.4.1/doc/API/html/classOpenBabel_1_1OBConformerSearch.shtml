<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBConformerSearch Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml">OBConformerSearch</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1OBConformerSearch-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBConformerSearch Class Reference<div class="ingroups"><a class="el" href="group__conformer.shtml">Conformer Searching</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="conformersearch_8h_source.shtml">openbabel/conformersearch.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3d54183d8351d93903a41fb8e2d6eb7e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a3d54183d8351d93903a41fb8e2d6eb7e">OBConformerSearch</a> ()</td></tr>
<tr class="separator:a3d54183d8351d93903a41fb8e2d6eb7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92682a05ad305ecfb357868cda17b6c8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a92682a05ad305ecfb357868cda17b6c8">~OBConformerSearch</a> ()</td></tr>
<tr class="separator:a92682a05ad305ecfb357868cda17b6c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9084f759abbf98766f3fed69c14b568a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a9084f759abbf98766f3fed69c14b568a">Setup</a> (const <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, int numConformers=30, int numChildren=5, int mutability=5, int convergence=25)</td></tr>
<tr class="separator:a9084f759abbf98766f3fed69c14b568a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee2e4f8c4c9cc9fed9949e54b8c728e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a5ee2e4f8c4c9cc9fed9949e54b8c728e">SetNumConformers</a> (int numConformers)</td></tr>
<tr class="separator:a5ee2e4f8c4c9cc9fed9949e54b8c728e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25b1f90c4963a806ac4aa898f542afa3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a25b1f90c4963a806ac4aa898f542afa3">SetNumChildren</a> (int numChildren)</td></tr>
<tr class="separator:a25b1f90c4963a806ac4aa898f542afa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a375b8f03c5cd5fd162cea6bd78c14356"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a375b8f03c5cd5fd162cea6bd78c14356">SetMutability</a> (int mutability)</td></tr>
<tr class="separator:a375b8f03c5cd5fd162cea6bd78c14356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259d7fb57066383560678537a93d79ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a259d7fb57066383560678537a93d79ad">SetConvergence</a> (int convergence)</td></tr>
<tr class="separator:a259d7fb57066383560678537a93d79ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a045f339459d9cc1892cfe9dcdbed2b60"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a045f339459d9cc1892cfe9dcdbed2b60">SetFixedBonds</a> (const <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;fixedBonds)</td></tr>
<tr class="separator:a045f339459d9cc1892cfe9dcdbed2b60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95879a373f39c05163d27941df8c18c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a95879a373f39c05163d27941df8c18c6">SetFilter</a> (<a class="el" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a> *filter)</td></tr>
<tr class="separator:a95879a373f39c05163d27941df8c18c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6e866e55e02b792a2b3837ee949bbfd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#ab6e866e55e02b792a2b3837ee949bbfd">SetScore</a> (<a class="el" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a> *score)</td></tr>
<tr class="separator:ab6e866e55e02b792a2b3837ee949bbfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af648d58ec31e39dff6af003f8e6b5ca4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#af648d58ec31e39dff6af003f8e6b5ca4">Search</a> ()</td></tr>
<tr class="separator:af648d58ec31e39dff6af003f8e6b5ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bf9537e529fc57100050f307f57e7e4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a2bf9537e529fc57100050f307f57e7e4">GetRotorKeys</a> () const</td></tr>
<tr class="separator:a2bf9537e529fc57100050f307f57e7e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a908a9729ddc64dd383f093ab30a0aae3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">GetConformers</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:a908a9729ddc64dd383f093ab30a0aae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7b2a201a381d6649a2c64c624c09bcc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#af7b2a201a381d6649a2c64c624c09bcc">SetLogStream</a> (std::ostream *sptr)</td></tr>
<tr class="separator:af7b2a201a381d6649a2c64c624c09bcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b78e329a0b9f084598748fc9068f772"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a8b78e329a0b9f084598748fc9068f772">SetSharing</a> (bool value=true)</td></tr>
<tr class="separator:a8b78e329a0b9f084598748fc9068f772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c1d31f2ffacd2ab50246296712c5867"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a4c1d31f2ffacd2ab50246296712c5867">GetNbNiches</a> ()</td></tr>
<tr class="separator:a4c1d31f2ffacd2ab50246296712c5867"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5500b10d2f1f7186f673a54d31761805"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a5500b10d2f1f7186f673a54d31761805">SetNbNiches</a> (int value)</td></tr>
<tr class="separator:a5500b10d2f1f7186f673a54d31761805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42fb6f85ae955e54faa795fece7fab60"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a42fb6f85ae955e54faa795fece7fab60">GetNicheRadius</a> ()</td></tr>
<tr class="separator:a42fb6f85ae955e54faa795fece7fab60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc4449a28ea672b34c61518c41c4756"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a9bc4449a28ea672b34c61518c41c4756">SetNicheRadius</a> (int value)</td></tr>
<tr class="separator:a9bc4449a28ea672b34c61518c41c4756"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb9eecb1535a8c9e3f03dc239d9efd5b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#aeb9eecb1535a8c9e3f03dc239d9efd5b">GetAlphaSharing</a> ()</td></tr>
<tr class="separator:aeb9eecb1535a8c9e3f03dc239d9efd5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9d9931d2ca16e3fdd0e925ee42c9504"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#af9d9931d2ca16e3fdd0e925ee42c9504">SetAlphaSharing</a> (double value)</td></tr>
<tr class="separator:af9d9931d2ca16e3fdd0e925ee42c9504"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae7f6e1d84579aac9e38d1924a979c34"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#aae7f6e1d84579aac9e38d1924a979c34">GetSigmaSharing</a> ()</td></tr>
<tr class="separator:aae7f6e1d84579aac9e38d1924a979c34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab359bbac9732fb8f0ae76b9f2af8124b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#ab359bbac9732fb8f0ae76b9f2af8124b">SetSigmaSharing</a> (double value)</td></tr>
<tr class="separator:ab359bbac9732fb8f0ae76b9f2af8124b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3761084e240d6db1cb4b4bde6741776a"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a3761084e240d6db1cb4b4bde6741776a">GetCrossoverProbability</a> ()</td></tr>
<tr class="separator:a3761084e240d6db1cb4b4bde6741776a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6a06dff8ecfd4753066af35bf9d0105"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#ae6a06dff8ecfd4753066af35bf9d0105">SetCrossoverProbability</a> (double value)</td></tr>
<tr class="separator:ae6a06dff8ecfd4753066af35bf9d0105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af03cf1b7f38438ad713020df90865c9b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#af03cf1b7f38438ad713020df90865c9b">GetNicheMating</a> ()</td></tr>
<tr class="separator:af03cf1b7f38438ad713020df90865c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a583e9ccd144c5e844888d56ff1faef24"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a583e9ccd144c5e844888d56ff1faef24">SetNicheMating</a> (double value)</td></tr>
<tr class="separator:a583e9ccd144c5e844888d56ff1faef24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1250fd95f8b4f89b1be6dcd3981985d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#ac1250fd95f8b4f89b1be6dcd3981985d">SetLocalOptRate</a> (int value)</td></tr>
<tr class="separator:ac1250fd95f8b4f89b1be6dcd3981985d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdd7ca5d20bdd2cd0683a91cfda73969"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#acdd7ca5d20bdd2cd0683a91cfda73969">SetLocalOptRate</a> ()</td></tr>
<tr class="separator:acdd7ca5d20bdd2cd0683a91cfda73969"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Conformer searching using genetic algorithm. See <a class="el" href="group__conformer.shtml">Conformer Searching</a>. </p>
<dl class="section since"><dt>Since</dt><dd>2.3 </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="obconformersearch_default_8cpp-example.shtml#_a6">obconformersearch_default.cpp</a>.</dd>
</dl></div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3d54183d8351d93903a41fb8e2d6eb7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d54183d8351d93903a41fb8e2d6eb7e">&sect;&nbsp;</a></span>OBConformerSearch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml">OBConformerSearch</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a92682a05ad305ecfb357868cda17b6c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92682a05ad305ecfb357868cda17b6c8">&sect;&nbsp;</a></span>~OBConformerSearch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml">OBConformerSearch</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9084f759abbf98766f3fed69c14b568a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9084f759abbf98766f3fed69c14b568a">&sect;&nbsp;</a></span>Setup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Setup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numConformers</em> = <code>30</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numChildren</em> = <code>5</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mutability</em> = <code>5</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>convergence</em> = <code>25</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Setup this instance with the specified molecule.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mol</td><td>The molecule with initial conformer. </td></tr>
    <tr><td class="paramname">numConformers</td><td>The number of conformers that should be generated. This is also the number of conformers selected for each generation. </td></tr>
    <tr><td class="paramname">numChildren</td><td>When a new generation is generated, for each of the numConformers conformers, numChildren children are created. </td></tr>
    <tr><td class="paramname">mutability</td><td>The mutability determines how frequent a permutation occurs when generating the next generation. </td></tr>
    <tr><td class="paramname">convergence</td><td>The number of identical generations before considering the process converged. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="obconformersearch_default_8cpp-example.shtml#a7">obconformersearch_default.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="a5ee2e4f8c4c9cc9fed9949e54b8c728e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ee2e4f8c4c9cc9fed9949e54b8c728e">&sect;&nbsp;</a></span>SetNumConformers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumConformers </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numConformers</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the number of conformers. </p>

</div>
</div>
<a id="a25b1f90c4963a806ac4aa898f542afa3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25b1f90c4963a806ac4aa898f542afa3">&sect;&nbsp;</a></span>SetNumChildren()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumChildren </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numChildren</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the number of children generated for each parent. </p>

</div>
</div>
<a id="a375b8f03c5cd5fd162cea6bd78c14356"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a375b8f03c5cd5fd162cea6bd78c14356">&sect;&nbsp;</a></span>SetMutability()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetMutability </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mutability</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the mutability. </p>

</div>
</div>
<a id="a259d7fb57066383560678537a93d79ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a259d7fb57066383560678537a93d79ad">&sect;&nbsp;</a></span>SetConvergence()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetConvergence </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>convergence</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the convergence (i.e. number of generations that did not change the score before considering the iteration converged). </p>

</div>
</div>
<a id="a045f339459d9cc1892cfe9dcdbed2b60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a045f339459d9cc1892cfe9dcdbed2b60">&sect;&nbsp;</a></span>SetFixedBonds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetFixedBonds </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&#160;</td>
          <td class="paramname"><em>fixedBonds</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the bonds to be fixed. </p>

</div>
</div>
<a id="a95879a373f39c05163d27941df8c18c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95879a373f39c05163d27941df8c18c6">&sect;&nbsp;</a></span>SetFilter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetFilter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConformerFilter.shtml">OBConformerFilter</a> *&#160;</td>
          <td class="paramname"><em>filter</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the filter method used to check if a newly generated is acceptable. Typical examples are a steric filter or electrostatic energy filter. The filters make a binary selection and one group will be scored in the next step. A number of filters are provided by default but implementing a custom filter is easy.</p>
<p>There is also a <a class="el" href="classOpenBabel_1_1OBConformerFilters.shtml" title="Class for combining OBConformerFilter objects. ">OBConformerFilters</a> class to make it easy to use multiple filters. </p>

</div>
</div>
<a id="ab6e866e55e02b792a2b3837ee949bbfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6e866e55e02b792a2b3837ee949bbfd">&sect;&nbsp;</a></span>SetScore()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetScore </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConformerScore.shtml">OBConformerScore</a> *&#160;</td>
          <td class="paramname"><em>score</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>All acceptable conformers are scored to select the fittest conformers from the population. A higher score means the conformer is desired in the final set or next generation. Typical scoring would be force field energy to find the lowest energy conformer. Another example is the highest RMSD between conformer i and the closest conformer to create a diverse set of conformers. Diversity could also be expressed in other ways and implementing a scoring class is easy. </p>

</div>
</div>
<a id="af648d58ec31e39dff6af003f8e6b5ca4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af648d58ec31e39dff6af003f8e6b5ca4">&sect;&nbsp;</a></span>Search()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Search </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Perform conformer search using a genetic algorithm. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="obconformersearch_default_8cpp-example.shtml#a8">obconformersearch_default.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="a2bf9537e529fc57100050f307f57e7e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bf9537e529fc57100050f307f57e7e4">&sect;&nbsp;</a></span>GetRotorKeys()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a>&amp; GetRotorKeys </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="obconformersearch_default_8cpp-example.shtml#a9">obconformersearch_default.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="a908a9729ddc64dd383f093ab30a0aae3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a908a9729ddc64dd383f093ab30a0aae3">&sect;&nbsp;</a></span>GetConformers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetConformers </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="obconformersearch_default_8cpp-example.shtml#a10">obconformersearch_default.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="af7b2a201a381d6649a2c64c624c09bcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7b2a201a381d6649a2c64c624c09bcc">&sect;&nbsp;</a></span>SetLogStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLogStream </td>
          <td>(</td>
          <td class="paramtype">std::ostream *&#160;</td>
          <td class="paramname"><em>sptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8b78e329a0b9f084598748fc9068f772"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b78e329a0b9f084598748fc9068f772">&sect;&nbsp;</a></span>SetSharing()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSharing </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4c1d31f2ffacd2ab50246296712c5867"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c1d31f2ffacd2ab50246296712c5867">&sect;&nbsp;</a></span>GetNbNiches()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetNbNiches </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5500b10d2f1f7186f673a54d31761805"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5500b10d2f1f7186f673a54d31761805">&sect;&nbsp;</a></span>SetNbNiches()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetNbNiches </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a42fb6f85ae955e54faa795fece7fab60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42fb6f85ae955e54faa795fece7fab60">&sect;&nbsp;</a></span>GetNicheRadius()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetNicheRadius </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9bc4449a28ea672b34c61518c41c4756"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bc4449a28ea672b34c61518c41c4756">&sect;&nbsp;</a></span>SetNicheRadius()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetNicheRadius </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeb9eecb1535a8c9e3f03dc239d9efd5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb9eecb1535a8c9e3f03dc239d9efd5b">&sect;&nbsp;</a></span>GetAlphaSharing()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetAlphaSharing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af9d9931d2ca16e3fdd0e925ee42c9504"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9d9931d2ca16e3fdd0e925ee42c9504">&sect;&nbsp;</a></span>SetAlphaSharing()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAlphaSharing </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aae7f6e1d84579aac9e38d1924a979c34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae7f6e1d84579aac9e38d1924a979c34">&sect;&nbsp;</a></span>GetSigmaSharing()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetSigmaSharing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab359bbac9732fb8f0ae76b9f2af8124b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab359bbac9732fb8f0ae76b9f2af8124b">&sect;&nbsp;</a></span>SetSigmaSharing()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSigmaSharing </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3761084e240d6db1cb4b4bde6741776a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3761084e240d6db1cb4b4bde6741776a">&sect;&nbsp;</a></span>GetCrossoverProbability()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetCrossoverProbability </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae6a06dff8ecfd4753066af35bf9d0105"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6a06dff8ecfd4753066af35bf9d0105">&sect;&nbsp;</a></span>SetCrossoverProbability()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetCrossoverProbability </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af03cf1b7f38438ad713020df90865c9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af03cf1b7f38438ad713020df90865c9b">&sect;&nbsp;</a></span>GetNicheMating()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetNicheMating </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a583e9ccd144c5e844888d56ff1faef24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a583e9ccd144c5e844888d56ff1faef24">&sect;&nbsp;</a></span>SetNicheMating()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetNicheMating </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac1250fd95f8b4f89b1be6dcd3981985d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1250fd95f8b4f89b1be6dcd3981985d">&sect;&nbsp;</a></span>SetLocalOptRate() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLocalOptRate </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acdd7ca5d20bdd2cd0683a91cfda73969"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdd7ca5d20bdd2cd0683a91cfda73969">&sect;&nbsp;</a></span>SetLocalOptRate() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int SetLocalOptRate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="conformersearch_8h_source.shtml">conformersearch.h</a></li>
<li><a class="el" href="conformersearch_8cpp.shtml">conformersearch.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
