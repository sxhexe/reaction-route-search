<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBAtomBondIter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1OBAtomBondIter-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBAtomBondIter Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="obiter_8h_source.shtml">openbabel/obiter.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af28bfccc1ea71cb3c90d4131fd0ffaac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#af28bfccc1ea71cb3c90d4131fd0ffaac">OBAtomBondIter</a> ()</td></tr>
<tr class="separator:af28bfccc1ea71cb3c90d4131fd0ffaac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e72a6b50b1b53a7d3c4b96ea26bd76a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#a1e72a6b50b1b53a7d3c4b96ea26bd76a">OBAtomBondIter</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atm)</td></tr>
<tr class="separator:a1e72a6b50b1b53a7d3c4b96ea26bd76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb90927a24929dc3a21354889e70c374"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#acb90927a24929dc3a21354889e70c374">OBAtomBondIter</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;atm)</td></tr>
<tr class="separator:acb90927a24929dc3a21354889e70c374"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace16cb67903f2c62d22b4cfd998e465d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#ace16cb67903f2c62d22b4cfd998e465d">OBAtomBondIter</a> (const <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp;bi)</td></tr>
<tr class="separator:ace16cb67903f2c62d22b4cfd998e465d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8049d0d3287127c18a69a03a0ada3389"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#a8049d0d3287127c18a69a03a0ada3389">~OBAtomBondIter</a> ()</td></tr>
<tr class="separator:a8049d0d3287127c18a69a03a0ada3389"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85af07ceacfd66f0ca03ae29002f5141"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#a85af07ceacfd66f0ca03ae29002f5141">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp;bi)</td></tr>
<tr class="separator:a85af07ceacfd66f0ca03ae29002f5141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b76affb3b5d35fa419ac234144038b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#a67b76affb3b5d35fa419ac234144038b">operator bool</a> () const</td></tr>
<tr class="separator:a67b76affb3b5d35fa419ac234144038b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5bb33e493787775e92d38f36da65a0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#ad5bb33e493787775e92d38f36da65a0d">operator++</a> ()</td></tr>
<tr class="separator:ad5bb33e493787775e92d38f36da65a0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8d9ebb722fef1050db8537615f038ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#aa8d9ebb722fef1050db8537615f038ed">operator++</a> (int)</td></tr>
<tr class="separator:aa8d9ebb722fef1050db8537615f038ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c23da904e7b838d0482d3fce70e55b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#a8c23da904e7b838d0482d3fce70e55b8">operator-&gt;</a> () const</td></tr>
<tr class="separator:a8c23da904e7b838d0482d3fce70e55b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7225af7c4126cfe1bec7485ad6feb25b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#a7225af7c4126cfe1bec7485ad6feb25b">operator*</a> () const</td></tr>
<tr class="separator:a7225af7c4126cfe1bec7485ad6feb25b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Iterate over all bonds on an <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a>. </p>
<p>To facilitate iteration through all bonds on an atom, without resorting to bond indexes (which may change in the future) a variety of iterator classes and methods are provided.</p>
<p>This has been made significantly easier by a series of macros in the <a class="el" href="obiter_8h.shtml" title="STL-style iterators for Open Babel. ">obiter.h</a> header file:</p>
<div class="fragment"><div class="line">\#define <a class="code" href="obiter_8h.shtml#aa102b7f8200028ba654f022dc63fdf35">FOR_BONDS_OF_ATOM</a>(b,p)     for( <a class="code" href="classOpenBabel_1_1OBAtomBondIter.shtml#af28bfccc1ea71cb3c90d4131fd0ffaac">OBAtomBondIter</a>     b(p); b; ++b )</div></div><!-- fragment --><p>Here is an example: </p><div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="obiter_8h.shtml">openbabel/obiter.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"></div><div class="line"><a class="code" href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a> atom;</div><div class="line"><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> tripleBondCount;</div><div class="line"><a class="code" href="obiter_8h.shtml#aa102b7f8200028ba654f022dc63fdf35">FOR_BONDS_OF_ATOM</a>(b, atom)</div><div class="line">{</div><div class="line">   <span class="comment">// The variable b behaves like OBBond* when used with -&gt; and * but</span></div><div class="line">   <span class="comment">// but needs to be explicitly converted when appearing as a parameter</span></div><div class="line">   <span class="comment">// in a function call - use &amp;*b</span></div><div class="line">   <span class="keywordflow">if</span> (b-&gt;GetBO() == 3)</div><div class="line">      tripleBondCount++;</div><div class="line">}</div></div><!-- fragment --> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af28bfccc1ea71cb3c90d4131fd0ffaac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af28bfccc1ea71cb3c90d4131fd0ffaac">&sect;&nbsp;</a></span>OBAtomBondIter() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1e72a6b50b1b53a7d3c4b96ea26bd76a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e72a6b50b1b53a7d3c4b96ea26bd76a">&sect;&nbsp;</a></span>OBAtomBondIter() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acb90927a24929dc3a21354889e70c374"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb90927a24929dc3a21354889e70c374">&sect;&nbsp;</a></span>OBAtomBondIter() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&#160;</td>
          <td class="paramname"><em>atm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ace16cb67903f2c62d22b4cfd998e465d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace16cb67903f2c62d22b4cfd998e465d">&sect;&nbsp;</a></span>OBAtomBondIter() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp;&#160;</td>
          <td class="paramname"><em>bi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8049d0d3287127c18a69a03a0ada3389"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8049d0d3287127c18a69a03a0ada3389">&sect;&nbsp;</a></span>~OBAtomBondIter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a85af07ceacfd66f0ca03ae29002f5141"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85af07ceacfd66f0ca03ae29002f5141">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp;&#160;</td>
          <td class="paramname"><em>bi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a67b76affb3b5d35fa419ac234144038b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67b76affb3b5d35fa419ac234144038b">&sect;&nbsp;</a></span>operator bool()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether the iterator can still advance (i.e., visit more bonds) </dd></dl>

</div>
</div>
<a id="ad5bb33e493787775e92d38f36da65a0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5bb33e493787775e92d38f36da65a0d">&sect;&nbsp;</a></span>operator++() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> &amp; operator++ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Preincrement &ndash; advance to the next bond and return. </p>

</div>
</div>
<a id="aa8d9ebb722fef1050db8537615f038ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8d9ebb722fef1050db8537615f038ed">&sect;&nbsp;</a></span>operator++() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml">OBAtomBondIter</a> operator++ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Postincrement &ndash; return the current state and advance to the next bond. </p>

</div>
</div>
<a id="a8c23da904e7b838d0482d3fce70e55b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c23da904e7b838d0482d3fce70e55b8">&sect;&nbsp;</a></span>operator->()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>* operator-&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a pointer to the current bond </dd></dl>

</div>
</div>
<a id="a7225af7c4126cfe1bec7485ad6feb25b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7225af7c4126cfe1bec7485ad6feb25b">&sect;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>&amp; operator* </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference to the current bond </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="obiter_8h_source.shtml">obiter.h</a></li>
<li><a class="el" href="obiter_8cpp.shtml">obiter.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
