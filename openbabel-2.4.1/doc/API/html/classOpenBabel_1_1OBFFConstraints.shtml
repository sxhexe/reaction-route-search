<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBFFConstraints Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1OBFFConstraints-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBFFConstraints Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="forcefield_8h_source.shtml">openbabel/forcefield.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae5a473b68e3f49144e03ee8c99cec7b0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ae5a473b68e3f49144e03ee8c99cec7b0">OBFFConstraints</a> ()</td></tr>
<tr class="separator:ae5a473b68e3f49144e03ee8c99cec7b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabbe8ba0bb89a9324a43f54468bd6f11"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#aabbe8ba0bb89a9324a43f54468bd6f11">~OBFFConstraints</a> ()</td></tr>
<tr class="separator:aabbe8ba0bb89a9324a43f54468bd6f11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71d36872f416feaa853788a7a7a7ef8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a> ()</td></tr>
<tr class="separator:aa71d36872f416feaa853788a7a7a7ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5fd16d1e3dc861db030dab03b87f4e8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ad5fd16d1e3dc861db030dab03b87f4e8">GetConstraintEnergy</a> ()</td></tr>
<tr class="separator:ad5fd16d1e3dc861db030dab03b87f4e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa72374f7ad0c140529a3b010e7daf8af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#aa72374f7ad0c140529a3b010e7daf8af">GetGradient</a> (int a)</td></tr>
<tr class="separator:aa72374f7ad0c140529a3b010e7daf8af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23c4410bafb1dd9a449e8710e290fc64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a23c4410bafb1dd9a449e8710e290fc64">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> &amp;ai)</td></tr>
<tr class="separator:a23c4410bafb1dd9a449e8710e290fc64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b4049f17c690c761669547608a29448"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a3b4049f17c690c761669547608a29448">Setup</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:a3b4049f17c690c761669547608a29448"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to set constraints</div></td></tr>
<tr class="memitem:ac9ec43b972a3527b0177109fb471c6be"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ac9ec43b972a3527b0177109fb471c6be">SetFactor</a> (double factor)</td></tr>
<tr class="separator:ac9ec43b972a3527b0177109fb471c6be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8ae3696e95452349c4607d58c4d22fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ab8ae3696e95452349c4607d58c4d22fb">AddIgnore</a> (int a)</td></tr>
<tr class="separator:ab8ae3696e95452349c4607d58c4d22fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5800c3582d7de41d8f083d4fe6b75de4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a5800c3582d7de41d8f083d4fe6b75de4">AddAtomConstraint</a> (int a)</td></tr>
<tr class="separator:a5800c3582d7de41d8f083d4fe6b75de4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae22202328abe00f55d372e878279999b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ae22202328abe00f55d372e878279999b">AddAtomXConstraint</a> (int a)</td></tr>
<tr class="separator:ae22202328abe00f55d372e878279999b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0921729e3e6c132377c2aab8ded12ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ae0921729e3e6c132377c2aab8ded12ed">AddAtomYConstraint</a> (int a)</td></tr>
<tr class="separator:ae0921729e3e6c132377c2aab8ded12ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd75a15f84d65f464a0a4af4c44639ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#afd75a15f84d65f464a0a4af4c44639ac">AddAtomZConstraint</a> (int a)</td></tr>
<tr class="separator:afd75a15f84d65f464a0a4af4c44639ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b70932048e027b08ec61f403b2072d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a13b70932048e027b08ec61f403b2072d">AddDistanceConstraint</a> (int a, int b, double length)</td></tr>
<tr class="separator:a13b70932048e027b08ec61f403b2072d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4534496875adeb67374b7d5a35194968"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a4534496875adeb67374b7d5a35194968">AddAngleConstraint</a> (int a, int b, int c, double angle)</td></tr>
<tr class="separator:a4534496875adeb67374b7d5a35194968"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bec1b9b555729022a67186aa98a7c3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a5bec1b9b555729022a67186aa98a7c3c">AddTorsionConstraint</a> (int a, int b, int c, int d, double torsion)</td></tr>
<tr class="separator:a5bec1b9b555729022a67186aa98a7c3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bea7e159036a792452a1ef3d7d45c8b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a9bea7e159036a792452a1ef3d7d45c8b">DeleteConstraint</a> (int index)</td></tr>
<tr class="separator:a9bea7e159036a792452a1ef3d7d45c8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to get information about set constraints</div></td></tr>
<tr class="memitem:a5fda52380450913006d8b39593956910"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a5fda52380450913006d8b39593956910">GetFactor</a> ()</td></tr>
<tr class="separator:a5fda52380450913006d8b39593956910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24926108b770033792d015cb86aeffb3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a24926108b770033792d015cb86aeffb3">Size</a> () const</td></tr>
<tr class="separator:a24926108b770033792d015cb86aeffb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa20f96df2ce80c97197fb8d0cd7d96eb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#aa20f96df2ce80c97197fb8d0cd7d96eb">GetConstraintType</a> (int index) const</td></tr>
<tr class="separator:aa20f96df2ce80c97197fb8d0cd7d96eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9db2082beb5c86c4caf21f934740f28c"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a9db2082beb5c86c4caf21f934740f28c">GetConstraintValue</a> (int index) const</td></tr>
<tr class="separator:a9db2082beb5c86c4caf21f934740f28c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6f7b3a5c62b50b3f543441eb182e62e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ad6f7b3a5c62b50b3f543441eb182e62e">GetConstraintAtomA</a> (int index) const</td></tr>
<tr class="separator:ad6f7b3a5c62b50b3f543441eb182e62e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c50531f3de7e2e5552dfdc6bc672e66"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a0c50531f3de7e2e5552dfdc6bc672e66">GetConstraintAtomB</a> (int index) const</td></tr>
<tr class="separator:a0c50531f3de7e2e5552dfdc6bc672e66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6273d4790f2fc95beca8497b0987f74"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#ac6273d4790f2fc95beca8497b0987f74">GetConstraintAtomC</a> (int index) const</td></tr>
<tr class="separator:ac6273d4790f2fc95beca8497b0987f74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61647e61d962a18daa07d3f0d717d8b1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a61647e61d962a18daa07d3f0d717d8b1">GetConstraintAtomD</a> (int index) const</td></tr>
<tr class="separator:a61647e61d962a18daa07d3f0d717d8b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ef9644f813fd9ffba5f16718d1853d8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a1ef9644f813fd9ffba5f16718d1853d8">IsIgnored</a> (int a)</td></tr>
<tr class="separator:a1ef9644f813fd9ffba5f16718d1853d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b2f826c36d84c339e84ea30963c6a47"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a7b2f826c36d84c339e84ea30963c6a47">IsFixed</a> (int a)</td></tr>
<tr class="separator:a7b2f826c36d84c339e84ea30963c6a47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df69d12401e57429152f7dcda13c88b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a5df69d12401e57429152f7dcda13c88b">IsXFixed</a> (int a)</td></tr>
<tr class="separator:a5df69d12401e57429152f7dcda13c88b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8919a12934df438f2911041578c48a36"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a8919a12934df438f2911041578c48a36">IsYFixed</a> (int a)</td></tr>
<tr class="separator:a8919a12934df438f2911041578c48a36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0957b149d0a1a1968d23022788fb70a7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a0957b149d0a1a1968d23022788fb70a7">IsZFixed</a> (int a)</td></tr>
<tr class="separator:a0957b149d0a1a1968d23022788fb70a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa32799d67f2aeece7ee1a0d0ce78d488"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#aa32799d67f2aeece7ee1a0d0ce78d488">GetIgnoredBitVec</a> ()</td></tr>
<tr class="separator:aa32799d67f2aeece7ee1a0d0ce78d488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a770eb922e5625b67a4e40b83b8fdc8cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml#a770eb922e5625b67a4e40b83b8fdc8cc">GetFixedBitVec</a> ()</td></tr>
<tr class="separator:a770eb922e5625b67a4e40b83b8fdc8cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Internal class for <a class="el" href="classOpenBabel_1_1OBForceField.shtml" title="Base class for molecular mechanics force fields. ">OBForceField</a> to handle constraints. </p>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae5a473b68e3f49144e03ee8c99cec7b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5a473b68e3f49144e03ee8c99cec7b0">&sect;&nbsp;</a></span>OBFFConstraints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a id="aabbe8ba0bb89a9324a43f54468bd6f11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabbe8ba0bb89a9324a43f54468bd6f11">&sect;&nbsp;</a></span>~OBFFConstraints()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa71d36872f416feaa853788a7a7a7ef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa71d36872f416feaa853788a7a7a7ef8">&sect;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear all constraints. </p>

</div>
</div>
<a id="ad5fd16d1e3dc861db030dab03b87f4e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5fd16d1e3dc861db030dab03b87f4e8">&sect;&nbsp;</a></span>GetConstraintEnergy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetConstraintEnergy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the constraint energy. </p>

</div>
</div>
<a id="aa72374f7ad0c140529a3b010e7daf8af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa72374f7ad0c140529a3b010e7daf8af">&sect;&nbsp;</a></span>GetGradient()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetGradient </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the constraint gradient for atom with index a. </p>

</div>
</div>
<a id="a23c4410bafb1dd9a449e8710e290fc64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23c4410bafb1dd9a449e8710e290fc64">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> &amp;&#160;</td>
          <td class="paramname"><em>ai</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the constrain gradient for the atom. </p>

</div>
</div>
<a id="a3b4049f17c690c761669547608a29448"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b4049f17c690c761669547608a29448">&sect;&nbsp;</a></span>Setup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Setup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Translate indices to OBAtom* objects, this function is called from <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a85e63dfcf5b43e5ae867815f0398c87e">OBForceField::Setup</a>, this function doesn't have to be called from anywhere else. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac97dee57cf1c5abbbddff62294a01c3b">OBForceField::SetConstraints()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8bc55d583ab340cbbf2c1b787b007ccf">OBForceField::Setup()</a>.</p>

</div>
</div>
<a id="ac9ec43b972a3527b0177109fb471c6be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9ec43b972a3527b0177109fb471c6be">&sect;&nbsp;</a></span>SetFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFactor </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set Constraint factor. </p>

</div>
</div>
<a id="ab8ae3696e95452349c4607d58c4d22fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8ae3696e95452349c4607d58c4d22fb">&sect;&nbsp;</a></span>AddIgnore()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddIgnore </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Ignore the atom while setting up calculations. </p>

</div>
</div>
<a id="a5800c3582d7de41d8f083d4fe6b75de4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5800c3582d7de41d8f083d4fe6b75de4">&sect;&nbsp;</a></span>AddAtomConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtomConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fix the position of an atom. </p>

</div>
</div>
<a id="ae22202328abe00f55d372e878279999b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae22202328abe00f55d372e878279999b">&sect;&nbsp;</a></span>AddAtomXConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtomXConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fix the x coordinate of the atom position. </p>

</div>
</div>
<a id="ae0921729e3e6c132377c2aab8ded12ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0921729e3e6c132377c2aab8ded12ed">&sect;&nbsp;</a></span>AddAtomYConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtomYConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fix the y coordinate of the atom position. </p>

</div>
</div>
<a id="afd75a15f84d65f464a0a4af4c44639ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd75a15f84d65f464a0a4af4c44639ac">&sect;&nbsp;</a></span>AddAtomZConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtomZConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fix the z coordinate of the atom position. </p>

</div>
</div>
<a id="a13b70932048e027b08ec61f403b2072d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13b70932048e027b08ec61f403b2072d">&sect;&nbsp;</a></span>AddDistanceConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddDistanceConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constrain the bond length a-b. </p>

</div>
</div>
<a id="a4534496875adeb67374b7d5a35194968"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4534496875adeb67374b7d5a35194968">&sect;&nbsp;</a></span>AddAngleConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAngleConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>angle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constrain the angle a-b-c. </p>

</div>
</div>
<a id="a5bec1b9b555729022a67186aa98a7c3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bec1b9b555729022a67186aa98a7c3c">&sect;&nbsp;</a></span>AddTorsionConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddTorsionConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>torsion</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constrain the torsion angle a-b-c-d. </p>

</div>
</div>
<a id="a9bea7e159036a792452a1ef3d7d45c8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bea7e159036a792452a1ef3d7d45c8b">&sect;&nbsp;</a></span>DeleteConstraint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteConstraint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Delete a constraint </p><dl class="section user"><dt>index constraint index </dt><dd></dd></dl>

</div>
</div>
<a id="a5fda52380450913006d8b39593956910"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fda52380450913006d8b39593956910">&sect;&nbsp;</a></span>GetFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get Constraint factor. </p>

</div>
</div>
<a id="a24926108b770033792d015cb86aeffb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24926108b770033792d015cb86aeffb3">&sect;&nbsp;</a></span>Size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int Size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of set constraints </dd></dl>

</div>
</div>
<a id="aa20f96df2ce80c97197fb8d0cd7d96eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa20f96df2ce80c97197fb8d0cd7d96eb">&sect;&nbsp;</a></span>GetConstraintType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetConstraintType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The following constraint types are known: OBFF_CONST_IGNORE (ignore the atom while setting up calculations, forcefield implementations need to check this value in their setup function), OBFF_CONST_ATOM (fix atom position), OBFF_CONST_ATOM_X (fix x coordinate), OBFF_CONST_ATOM_Y (fix y coordinate), OBFF_CONST_ATOM_Z (fix z coordinate), OBFF_CONST_BOND (constrain bond length), OBFF_CONST_ANGLE (constrain angle), OBFF_CONST_TORSION (constrain torsion angle) </p><dl class="section return"><dt>Returns</dt><dd>the constraint type </dd></dl>

</div>
</div>
<a id="a9db2082beb5c86c4caf21f934740f28c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9db2082beb5c86c4caf21f934740f28c">&sect;&nbsp;</a></span>GetConstraintValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetConstraintValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The constraint value, this can be a bond length, angle or torsion angle depending on the constraint type. </dd></dl>

</div>
</div>
<a id="ad6f7b3a5c62b50b3f543441eb182e62e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6f7b3a5c62b50b3f543441eb182e62e">&sect;&nbsp;</a></span>GetConstraintAtomA()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetConstraintAtomA </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The constraint atom a (or fixed atom) </dd></dl>
<dl class="section user"><dt>index constraint index </dt><dd></dd></dl>

</div>
</div>
<a id="a0c50531f3de7e2e5552dfdc6bc672e66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c50531f3de7e2e5552dfdc6bc672e66">&sect;&nbsp;</a></span>GetConstraintAtomB()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetConstraintAtomB </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The constraint atom b </dd></dl>
<dl class="section user"><dt>index constraint index </dt><dd></dd></dl>

</div>
</div>
<a id="ac6273d4790f2fc95beca8497b0987f74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6273d4790f2fc95beca8497b0987f74">&sect;&nbsp;</a></span>GetConstraintAtomC()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetConstraintAtomC </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The constraint atom c </dd></dl>
<dl class="section user"><dt>index constraint index </dt><dd></dd></dl>

</div>
</div>
<a id="a61647e61d962a18daa07d3f0d717d8b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61647e61d962a18daa07d3f0d717d8b1">&sect;&nbsp;</a></span>GetConstraintAtomD()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetConstraintAtomD </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The constraint atom d </dd></dl>
<dl class="section user"><dt>index constraint index </dt><dd></dd></dl>

</div>
</div>
<a id="a1ef9644f813fd9ffba5f16718d1853d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ef9644f813fd9ffba5f16718d1853d8">&sect;&nbsp;</a></span>IsIgnored()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsIgnored </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if this atom is ignored </dd></dl>
<dl class="section user"><dt>a atom index </dt><dd></dd></dl>

</div>
</div>
<a id="a7b2f826c36d84c339e84ea30963c6a47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b2f826c36d84c339e84ea30963c6a47">&sect;&nbsp;</a></span>IsFixed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsFixed </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if this atom is fixed </dd></dl>
<dl class="section user"><dt>a atom index </dt><dd></dd></dl>

</div>
</div>
<a id="a5df69d12401e57429152f7dcda13c88b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5df69d12401e57429152f7dcda13c88b">&sect;&nbsp;</a></span>IsXFixed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsXFixed </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the x coordinate for this atom is fixed </dd></dl>
<dl class="section user"><dt>a atom index </dt><dd></dd></dl>

</div>
</div>
<a id="a8919a12934df438f2911041578c48a36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8919a12934df438f2911041578c48a36">&sect;&nbsp;</a></span>IsYFixed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsYFixed </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the y coordinate for this atom is fixed </dd></dl>
<dl class="section user"><dt>a atom index </dt><dd></dd></dl>

</div>
</div>
<a id="a0957b149d0a1a1968d23022788fb70a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0957b149d0a1a1968d23022788fb70a7">&sect;&nbsp;</a></span>IsZFixed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsZFixed </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the z coordinate for this atom is fixed </dd></dl>
<dl class="section user"><dt>a atom index </dt><dd></dd></dl>

</div>
</div>
<a id="aa32799d67f2aeece7ee1a0d0ce78d488"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa32799d67f2aeece7ee1a0d0ce78d488">&sect;&nbsp;</a></span>GetIgnoredBitVec()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> GetIgnoredBitVec </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the ignored atom indexes as bitvec. (used in <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a85e63dfcf5b43e5ae867815f0398c87e">OBForceField::Setup()</a> to determine if a call to <a class="el" href="classOpenBabel_1_1OBForceField.shtml#af2662d702c1eb43cc58c30d274712e3f">OBForceField::SetupCalculations()</a> is needed) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac97dee57cf1c5abbbddff62294a01c3b">OBForceField::SetConstraints()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8bc55d583ab340cbbf2c1b787b007ccf">OBForceField::Setup()</a>.</p>

</div>
</div>
<a id="a770eb922e5625b67a4e40b83b8fdc8cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a770eb922e5625b67a4e40b83b8fdc8cc">&sect;&nbsp;</a></span>GetFixedBitVec()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> GetFixedBitVec </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the fixed atom indexes as bitvec. (used in <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aad044993a4dab58de3b5f3ac6c5815fe">OBForceField::SystematicRotorSearch()</a> and similar) </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="forcefield_8h_source.shtml">forcefield.h</a></li>
<li><a class="el" href="forcefield_8cpp.shtml">forcefield.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
