<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>tokenst.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">tokenst.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tokenst_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">tokenst.h - Tokenize and trim strings; Open data files</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_TOKENST_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_TOKENST_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="comment">// Utility function prototypes</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  OBERROR <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a4adf0db17b2feeedf0ada8d21956ac0d">tokenize</a>(std::vector&lt;std::string&gt;&amp;, <span class="keyword">const</span> <span class="keywordtype">char</span> *buf, <span class="keyword">const</span> <span class="keywordtype">char</span> *delimstr=<span class="stringliteral">&quot; \t\n\r&quot;</span>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  OBERROR <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a4adf0db17b2feeedf0ada8d21956ac0d">tokenize</a>(std::vector&lt;std::string&gt;&amp;, std::string&amp;, <span class="keyword">const</span> <span class="keywordtype">char</span> *delimstr=<span class="stringliteral">&quot; \t\n\r&quot;</span>, <span class="keywordtype">int</span> limit=-1);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  OBERROR std::string&amp; <a class="code" href="namespaceOpenBabel.shtml#ae8d9d7dd615b5fa7b533c075fe744d8f">Trim</a>(std::string&amp; txt);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">// \return a string representation of a variable</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="namespaceOpenBabel.shtml#ac6af450f7e3ad5ffd27fb56461dcd177">   40</a></span>&#160;  std::string <a class="code" href="namespaceOpenBabel.shtml#ac6af450f7e3ad5ffd27fb56461dcd177">toString</a>(<a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a> val)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::ostringstream s;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    s &lt;&lt; val;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> s.str();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1DeleteObject.shtml">   48</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structOpenBabel_1_1DeleteObject.shtml">DeleteObject</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1DeleteObject.shtml#a4c8e80136c01c79e006ea8f7c5e6b45e">   51</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structOpenBabel_1_1DeleteObject.shtml#a4c8e80136c01c79e006ea8f7c5e6b45e">operator()</a>(<span class="keyword">const</span> <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>* ptr)<span class="keyword">const </span>{ <span class="keyword">delete</span> ptr; }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  };</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  OBERROR std::istream&amp; <a class="code" href="namespaceOpenBabel.shtml#a9858bede3a0f272573c0173a947bea18">ignore</a>(std::istream&amp; ifs, <span class="keyword">const</span> std::string&amp; txt);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="comment">// full documentation in tokenst.cpp</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  OBERROR std::string <a class="code" href="namespaceOpenBabel.shtml#add34ce6b9be332e5d87fd5087d4dc38d">OpenDatafile</a>(std::ifstream&amp; fs,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                 <span class="keyword">const</span> std::string&amp; filename,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                 <span class="keyword">const</span> std::string&amp; envvar = <span class="stringliteral">&quot;BABEL_DATADIR&quot;</span>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="comment">// Used by other code for reading files</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#ifdef WIN32</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">  #define FILE_SEP_CHAR &quot;\\&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="tokenst_8h.shtml#a7fc937c3aac7b76870d56fdc867f065a">   67</a></span>&#160;<span class="preprocessor">#define FILE_SEP_CHAR &quot;/&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}<span class="comment">//namespace</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="ttc" id="namespaceOpenBabel_1_1OBResidueIndex_shtml_a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce"><div class="ttname"><a href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">OpenBabel::OBResidueIndex::T</a></div><div class="ttdef"><b>Definition:</b> residue.h:340</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a9858bede3a0f272573c0173a947bea18"><div class="ttname"><a href="namespaceOpenBabel.shtml#a9858bede3a0f272573c0173a947bea18">OpenBabel::ignore</a></div><div class="ttdeci">std::istream &amp; ignore(std::istream &amp;ifs, const std::string &amp;txt)</div><div class="ttdoc">Read and discard all characters from input stream up to, and including, a string. ...</div><div class="ttdef"><b>Definition:</b> tokenst.cpp:155</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_add34ce6b9be332e5d87fd5087d4dc38d"><div class="ttname"><a href="namespaceOpenBabel.shtml#add34ce6b9be332e5d87fd5087d4dc38d">OpenBabel::OpenDatafile</a></div><div class="ttdeci">std::string OpenDatafile(std::ifstream &amp;fs, const std::string &amp;filename, const std::string &amp;envvar=&quot;BABEL_DATADIR&quot;)</div><div class="ttdoc">Opens a datafile in a directory where OpenBabel expects to find it. </div><div class="ttdef"><b>Definition:</b> tokenst.cpp:191</div></div>
<div class="ttc" id="structOpenBabel_1_1DeleteObject_shtml"><div class="ttname"><a href="structOpenBabel_1_1DeleteObject.shtml">OpenBabel::DeleteObject</a></div><div class="ttdoc">Functor for deleting containers of pointers. Scott Meyers, Effective STL, Item 7. ...</div><div class="ttdef"><b>Definition:</b> tokenst.h:48</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a4adf0db17b2feeedf0ada8d21956ac0d"><div class="ttname"><a href="namespaceOpenBabel.shtml#a4adf0db17b2feeedf0ada8d21956ac0d">OpenBabel::tokenize</a></div><div class="ttdeci">bool tokenize(std::vector&lt; std::string &gt; &amp;, const char *buf, const char *delimstr=&quot; \\)</div><div class="ttdef"><b>Definition:</b> tokenst.cpp:36</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ae8d9d7dd615b5fa7b533c075fe744d8f"><div class="ttname"><a href="namespaceOpenBabel.shtml#ae8d9d7dd615b5fa7b533c075fe744d8f">OpenBabel::Trim</a></div><div class="ttdeci">std::string &amp; Trim(std::string &amp;txt)</div><div class="ttdoc">Remove leading and trailing whitespace from a string (docs in tokenst.cpp) </div><div class="ttdef"><b>Definition:</b> tokenst.cpp:135</div></div>
<div class="ttc" id="structOpenBabel_1_1DeleteObject_shtml_a4c8e80136c01c79e006ea8f7c5e6b45e"><div class="ttname"><a href="structOpenBabel_1_1DeleteObject.shtml#a4c8e80136c01c79e006ea8f7c5e6b45e">OpenBabel::DeleteObject::operator()</a></div><div class="ttdeci">void operator()(const T *ptr) const</div><div class="ttdef"><b>Definition:</b> tokenst.h:51</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ac6af450f7e3ad5ffd27fb56461dcd177"><div class="ttname"><a href="namespaceOpenBabel.shtml#ac6af450f7e3ad5ffd27fb56461dcd177">OpenBabel::toString</a></div><div class="ttdeci">std::string toString(T val)</div><div class="ttdef"><b>Definition:</b> tokenst.h:40</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:29 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
