<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBSmartsMatcher Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml">OBSmartsMatcher</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classOpenBabel_1_1OBSmartsMatcher-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBSmartsMatcher Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="parsmart_8h_source.shtml">openbabel/parsmart.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab2a36f09ba1abd6cb748e74d433423ce"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ab2a36f09ba1abd6cb748e74d433423ce">OBSmartsMatcher</a> ()</td></tr>
<tr class="separator:ab2a36f09ba1abd6cb748e74d433423ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a464e4dc777a586ec969199dc4aaba764"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a464e4dc777a586ec969199dc4aaba764">~OBSmartsMatcher</a> ()</td></tr>
<tr class="separator:a464e4dc777a586ec969199dc4aaba764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d4c0074445aa349628c1d417794581b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">match</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> *pat, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;mlist, bool single=false)</td></tr>
<tr class="separator:a1d4c0074445aa349628c1d417794581b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad17bc9b49b2504cb30ba9f6e6650e891"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">EvalAtomExpr</a> (<a class="el" href="namespaceOpenBabel.shtml#a8df92ddf377e8839e49c4c1d4a617f1e">AtomExpr</a> *expr, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr class="separator:ad17bc9b49b2504cb30ba9f6e6650e891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fa6bba6b6ce0fe1eb4a52a3116eca1f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a6fa6bba6b6ce0fe1eb4a52a3116eca1f">EvalBondExpr</a> (<a class="el" href="namespaceOpenBabel.shtml#ac7bd9a9f7066eb36f2cfa568d180cb80">BondExpr</a> *expr, <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr class="separator:a6fa6bba6b6ce0fe1eb4a52a3116eca1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2530846ca78e83a8050a28ccbbc76059"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a2530846ca78e83a8050a28ccbbc76059">SetupAtomMatchTable</a> (std::vector&lt; std::vector&lt; bool &gt; &gt; &amp;<a class="el" href="namespaceOpenBabel.shtml#ab8d4d5690031703bcccb95ddbe7ebf0a">ttab</a>, const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> *pat, <a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:a2530846ca78e83a8050a28ccbbc76059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f1d7465125c206ca70c21ab5db30560"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a7f1d7465125c206ca70c21ab5db30560">FastSingleMatch</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> *pat, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;mlist)</td></tr>
<tr class="separator:a7f1d7465125c206ca70c21ab5db30560"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a0941360bb72df02227939bd307707c25"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::pair&lt; const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> *, std::vector&lt; bool &gt; &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a0941360bb72df02227939bd307707c25">RSCACHE</a></td></tr>
<tr class="separator:a0941360bb72df02227939bd307707c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dbd99a64fdb16a6ac0c48cb200449ad"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a6dbd99a64fdb16a6ac0c48cb200449ad">Fragments</a></td></tr>
<tr class="separator:a6dbd99a64fdb16a6ac0c48cb200449ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a129a7087cc88b19562f6840d91f2990f"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a129a7087cc88b19562f6840d91f2990f">OBSSMatch</a></td></tr>
<tr class="separator:a129a7087cc88b19562f6840d91f2990f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Internal class: performs matching; a wrapper around previous C matching code to make it thread safe. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab2a36f09ba1abd6cb748e74d433423ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2a36f09ba1abd6cb748e74d433423ce">&sect;&nbsp;</a></span>OBSmartsMatcher()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml">OBSmartsMatcher</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a464e4dc777a586ec969199dc4aaba764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a464e4dc777a586ec969199dc4aaba764">&sect;&nbsp;</a></span>~OBSmartsMatcher()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml">OBSmartsMatcher</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad17bc9b49b2504cb30ba9f6e6650e891"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad17bc9b49b2504cb30ba9f6e6650e891">&sect;&nbsp;</a></span>EvalAtomExpr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EvalAtomExpr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a8df92ddf377e8839e49c4c1d4a617f1e">AtomExpr</a> *&#160;</td>
          <td class="paramname"><em>expr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>.</p>

</div>
</div>
<a id="a6fa6bba6b6ce0fe1eb4a52a3116eca1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fa6bba6b6ce0fe1eb4a52a3116eca1f">&sect;&nbsp;</a></span>EvalBondExpr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EvalBondExpr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#ac7bd9a9f7066eb36f2cfa568d180cb80">BondExpr</a> *&#160;</td>
          <td class="paramname"><em>expr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>.</p>

</div>
</div>
<a id="a2530846ca78e83a8050a28ccbbc76059"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2530846ca78e83a8050a28ccbbc76059">&sect;&nbsp;</a></span>SetupAtomMatchTable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetupAtomMatchTable </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::vector&lt; bool &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>ttab</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> *&#160;</td>
          <td class="paramname"><em>pat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7f1d7465125c206ca70c21ab5db30560"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f1d7465125c206ca70c21ab5db30560">&sect;&nbsp;</a></span>FastSingleMatch()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FastSingleMatch </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> *&#160;</td>
          <td class="paramname"><em>pat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>mlist</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d4c0074445aa349628c1d417794581b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d4c0074445aa349628c1d417794581b">&sect;&nbsp;</a></span>match()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool match </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a> *&#160;</td>
          <td class="paramname"><em>pat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>mlist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>single</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#adda681cbeb3f22e43d35105ad4608b91">OBSmartsPattern::Match()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#aafeef4d5a61d7d6b3c5b6120267359a0">OBSmartsPattern::RestrictedMatch()</a>.</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a129a7087cc88b19562f6840d91f2990f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a129a7087cc88b19562f6840d91f2990f">&sect;&nbsp;</a></span>OBSSMatch</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml">OBSSMatch</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0941360bb72df02227939bd307707c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0941360bb72df02227939bd307707c25">&sect;&nbsp;</a></span>RSCACHE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::pair&lt;const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a>*,std::vector&lt;bool&gt; &gt; &gt; RSCACHE</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6dbd99a64fdb16a6ac0c48cb200449ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dbd99a64fdb16a6ac0c48cb200449ad">&sect;&nbsp;</a></span>Fragments</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;const <a class="el" href="structOpenBabel_1_1Pattern.shtml">Pattern</a>*&gt; Fragments</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="parsmart_8h_source.shtml">parsmart.h</a></li>
<li><a class="el" href="parsmart_8cpp.shtml">parsmart.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
