<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>bindings.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li><li class="navelem"><a class="el" href="dir_8fb503b1b9ed5a853b0ce57a9277e655.shtml">stereo</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">bindings.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="bindings_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="stereo_8h.shtml">openbabel/stereo/stereo.h</a>&gt;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a> {</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml">    5</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml">OBTetrahedralConfig</a></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  {</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#ifndef SWIG</span></div><div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">    8</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">OBTetrahedralStereo::Config</a> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml">OBTetrahedralConfig</a> &amp;other)</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    {</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;      <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">OBTetrahedralStereo::Config</a> config;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a> = other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a> = other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#afba3b75e1c6d7d58f0577283c68ff0f8">from_or_towards</a>;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a> = other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a> = other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3a41b22504236f1bc6908201a3289184">view</a> = other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">view</a>;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a> = other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    }</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a1b196e01d93eb74fb83afbc4bc6ca548">   21</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a1b196e01d93eb74fb83afbc4bc6ca548">operator==</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml">OBTetrahedralConfig</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a> != other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>)</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;      <span class="keywordflow">if</span> ((<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.size() != 3) || (other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.size() != 3))</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="comment">// return true if either is unspecified (i.e. accidental)</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordflow">if</span> (!<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a> || !other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a>)</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="comment">// Convert both Config&#39;s refs to same from, winding and view while</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="comment">// avoiding having an ImplicitRef in the &#39;from&#39; position of either</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">OBTetrahedralStereo::Config</a> thisConfig = <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(*<span class="keyword">this</span>), otherConfig = <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(other);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#afba3b75e1c6d7d58f0577283c68ff0f8">from_or_towards</a> == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        thisConfig = <a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#ac6f1bf41e38b3e8b182fa57269046070">OBTetraNonPlanarStereo::ToConfig</a>(thisConfig, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[0], <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">view</a>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        otherConfig = <a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#ac6f1bf41e38b3e8b182fa57269046070">OBTetraNonPlanarStereo::ToConfig</a>(otherConfig, thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">view</a>);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#afba3b75e1c6d7d58f0577283c68ff0f8">from_or_towards</a> == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        otherConfig = <a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#ac6f1bf41e38b3e8b182fa57269046070">OBTetraNonPlanarStereo::ToConfig</a>(otherConfig, other.<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[0], <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">view</a>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        thisConfig = <a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#ac6f1bf41e38b3e8b182fa57269046070">OBTetraNonPlanarStereo::ToConfig</a>(thisConfig, otherConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">view</a>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordflow">else</span> {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        otherConfig = <a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#ac6f1bf41e38b3e8b182fa57269046070">OBTetraNonPlanarStereo::ToConfig</a>(otherConfig, thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>, <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">view</a>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordflow">if</span> (!<a class="code" href="structOpenBabel_1_1OBStereo.shtml#abb14ec41d65b0dc4d49707a713da483f">OBStereo::ContainsSameRefs</a>(thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>, otherConfig.refs)) {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a7dd420f7528abb409341a8a5874143db">OBStereo::ContainsRef</a>(thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>)) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;          <span class="comment">// if both refs already contain ImplicitRef, return false</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;          <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a7dd420f7528abb409341a8a5874143db">OBStereo::ContainsRef</a>(otherConfig.refs, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>))</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;          <span class="comment">// example: *this       = 23H</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;          <span class="comment">//          otherConfig = 234 --&gt; 23H</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;          <span class="comment">// for each ref in otherConfig</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;          <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; otherConfig.refs.size(); ++i) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">for</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a1380cd3ca593dd317be63064b47e14db">OBStereo::RefIter</a> j = thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.begin(); j != thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.end(); ++j)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;              <span class="keywordflow">if</span> (otherConfig.refs.at(i) == *j)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                found = <span class="keyword">true</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">if</span> (!found) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;              <span class="comment">// the ref from otherConfig is not found in this config</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;              otherConfig.refs[i] = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;              <span class="keywordflow">break</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;          }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        } <span class="keywordflow">else</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;          <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a7dd420f7528abb409341a8a5874143db">OBStereo::ContainsRef</a>(otherConfig.refs, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>)) {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="comment">// if both refs already contain ImplicitRef, return false</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a7dd420f7528abb409341a8a5874143db">OBStereo::ContainsRef</a>(thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>))</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;              <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="comment">// example: *this       = 234</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="comment">//          otherConfig = 23H --&gt; 234</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="comment">// for each ref in *this</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.size(); ++i) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;              <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;              <span class="comment">// for each refs in otherConfig</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;              <span class="keywordflow">for</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a1380cd3ca593dd317be63064b47e14db">OBStereo::RefIter</a> j = otherConfig.refs.begin(); j != otherConfig.refs.end(); ++j)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="keywordflow">if</span> (thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.at(i) == *j)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                  found = <span class="keyword">true</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;              <span class="keywordflow">if</span> (!found) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">for</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a1380cd3ca593dd317be63064b47e14db">OBStereo::RefIter</a> j = otherConfig.refs.begin(); j != otherConfig.refs.end(); ++j)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                  <span class="keywordflow">if</span> (*j == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    *j = thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.at(i);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;              }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;          }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordtype">int</span> Ni1 = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a0ba3b9c408bae435888d6fdc69be280a">OBStereo::NumInversions</a>(thisConfig.<a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">int</span> Ni2 = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a0ba3b9c408bae435888d6fdc69be280a">OBStereo::NumInversions</a>(otherConfig.refs);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordflow">return</span> ((Ni1 + Ni2) % 2 == 0);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#aef4275009e6aa8a3c4a7cbd8767d0a23">  101</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#aef4275009e6aa8a3c4a7cbd8767d0a23">operator!=</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml">OBTetrahedralConfig</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">  106</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#afba3b75e1c6d7d58f0577283c68ff0f8">  107</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#afba3b75e1c6d7d58f0577283c68ff0f8">from_or_towards</a>;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">  108</a></span>&#160;    <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">  109</a></span>&#160;    <a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">  110</a></span>&#160;    <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">view</a>;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#ad137707f900f599f5f403d9639e2aec3">  111</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  };</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml">  114</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml">OBCisTransConfig</a></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#ifndef SWIG</span></div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">  117</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">OBCisTransStereo::Config</a> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">Convert</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml">OBCisTransConfig</a> &amp;other)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">OBCisTransStereo::Config</a> config;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a43ec7ce807e545cea2247cd68bc7b7e9">begin</a> = other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a43ec7ce807e545cea2247cd68bc7b7e9">begin</a>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#ac31c5196f50f192d5db1d85180b05aaf">end</a> = other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ac31c5196f50f192d5db1d85180b05aaf">end</a>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a> = other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a77f6538bd30b4203bd2b2bba33c28c85">shape</a> = other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">shape</a>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a> = other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml#a6402345e461821a38ee0538b3769437a">  129</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a6402345e461821a38ee0538b3769437a">operator==</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml">OBCisTransConfig</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordflow">if</span> ((begin != other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a43ec7ce807e545cea2247cd68bc7b7e9">begin</a>) &amp;&amp; (begin != other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ac31c5196f50f192d5db1d85180b05aaf">end</a>))</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="keywordflow">if</span> ((end != other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a43ec7ce807e545cea2247cd68bc7b7e9">begin</a>) &amp;&amp; (end != other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ac31c5196f50f192d5db1d85180b05aaf">end</a>))</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keywordflow">if</span> ((<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.size() != 4) || (other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.size() != 4))</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">OBCisTransStereo::Config</a> u1, u2;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="keywordflow">if</span> (!<a class="code" href="structOpenBabel_1_1OBStereo.shtml#abb14ec41d65b0dc4d49707a713da483f">OBStereo::ContainsSameRefs</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>, other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>)) {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">// find a ref that occurs in both</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">for</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a6f0021eb4868fb5540a2cedde823ada1">OBStereo::ConstRefIter</a> i = <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.begin(); i != <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.end(); ++i)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;          <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a7dd420f7528abb409341a8a5874143db">OBStereo::ContainsRef</a>(other.<a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>, *i)) {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            u1 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(*<span class="keyword">this</span>), *i, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u1.refs[0]</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            u2 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(other), *i, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u2.refs[0]</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">// check if they actualy share an id...</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">if</span> (u1.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.empty())</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="comment">// normalize the other Config struct</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        u1 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(*<span class="keyword">this</span>), <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.at(0), <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u1.refs[0]</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        u2 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(other), <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.at(0), <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u2.refs[0]</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="comment">// both now start with the same ref</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == u2.refs[2]);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordflow">if</span> ((u1.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>) || (u2.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>)) {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="comment">// 1 2 H 4</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">if</span> ((u1.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>) || (u2.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>)) {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;          <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[1] == u2.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[1]); <span class="comment">// 1 2 H H</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;          <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3] == u2.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3]); <span class="comment">// 1 H H 4</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      } <span class="keywordflow">else</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == u2.<a class="code" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2]); <span class="comment">// 1 2 3 4  &amp;  1 H 3 4  &amp;  1 2 3 H</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml#ac52a3562b774cb3c26c9dbd0cb701955">  171</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ac52a3562b774cb3c26c9dbd0cb701955">operator!=</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml">OBCisTransConfig</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml#ac31c5196f50f192d5db1d85180b05aaf">  176</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> begin, <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ac31c5196f50f192d5db1d85180b05aaf">end</a>;</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">  177</a></span>&#160;    <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">  178</a></span>&#160;    <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">shape</a>;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBCisTransConfig.shtml#ad137707f900f599f5f403d9639e2aec3">  179</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBCisTransConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  };</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml">  182</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml">OBSquarePlanarConfig</a></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#ifndef SWIG</span></div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#aeb0c4ca975feeddb9d5061cb09df4000">  185</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml">OBSquarePlanarStereo::Config</a> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#aeb0c4ca975feeddb9d5061cb09df4000">Convert</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml">OBSquarePlanarConfig</a> &amp;other)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    {</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml">OBSquarePlanarStereo::Config</a> config;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a> = other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a> = other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a77f6538bd30b4203bd2b2bba33c28c85">shape</a> = other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">shape</a>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      config.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a> = other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a>;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a41b53341344d2ea8042abfea883a9dab">  196</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a41b53341344d2ea8042abfea883a9dab">operator==</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml">OBSquarePlanarConfig</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a> != other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      <span class="keywordflow">if</span> ((<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.size() != 4) || (other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.size() != 4))</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml">OBSquarePlanarStereo::Config</a> u1, u2;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordflow">if</span> (!<a class="code" href="structOpenBabel_1_1OBStereo.shtml#abb14ec41d65b0dc4d49707a713da483f">OBStereo::ContainsSameRefs</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>, other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>)) {</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="comment">// find a ref that occurs in both</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">for</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a6f0021eb4868fb5540a2cedde823ada1">OBStereo::ConstRefIter</a> i = <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.begin(); i != <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.end(); ++i)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          <span class="keywordflow">if</span> (<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a7dd420f7528abb409341a8a5874143db">OBStereo::ContainsRef</a>(other.<a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>, *i)) {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            u1 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(*<span class="keyword">this</span>), *i, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u1.refs[0]</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            u2 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(other), *i, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u2.refs[0]</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="comment">// check if they actualy share an id...</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">if</span> (u1.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.empty())</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="comment">// normalize the other Config struct</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        u1 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(*<span class="keyword">this</span>), <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.at(0), <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u1.refs[0]</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        u2 = <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OBTetraPlanarStereo::ToConfig</a>(<a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">Convert</a>(other), <a class="code" href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>.at(0), <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>); <span class="comment">// refs[0] = u2.refs[0]</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="comment">// both now start with the same ref</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == u2.refs[2]);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordflow">if</span> ((u1.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>) || (u2.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>)) {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">// 1 2 H 4</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">if</span> ((u1.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>) || (u2.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3] == <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OBStereo::ImplicitRef</a>)) {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;          <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[1] == u2.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[1]); <span class="comment">// 1 2 H H</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;          <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3] == u2.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[3]); <span class="comment">// 1 H H 4</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        }</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      } <span class="keywordflow">else</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">return</span> (u1.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2] == u2.<a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>[2]); <span class="comment">// 1 2 3 4  &amp;  1 H 3 4  &amp;  1 2 3 H</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a18faf13ec53584f33f9beba948bcf459">  236</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a18faf13ec53584f33f9beba948bcf459">operator!=</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml">OBSquarePlanarConfig</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">  241</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>;</div><div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">  242</a></span>&#160;    <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a>;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">  243</a></span>&#160;    <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">shape</a>;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#ad137707f900f599f5f403d9639e2aec3">  244</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  };</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml_aeb0c4ca975feeddb9d5061cb09df4000"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#aeb0c4ca975feeddb9d5061cb09df4000">OpenBabel::OBSquarePlanarConfig::Convert</a></div><div class="ttdeci">static OBSquarePlanarStereo::Config Convert(const OBSquarePlanarConfig &amp;other)</div><div class="ttdef"><b>Definition:</b> bindings.h:185</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralStereo_1_1Config_shtml_a3e3f2a8fefc9f694040bbb8685cb61e1"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">OpenBabel::OBTetrahedralStereo::Config::refs</a></div><div class="ttdeci">OBStereo::Refs refs</div><div class="ttdoc">The 3 reference ids. </div><div class="ttdef"><b>Definition:</b> tetrahedral.h:176</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config_shtml_ad137707f900f599f5f403d9639e2aec3"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">OpenBabel::OBSquarePlanarStereo::Config::specified</a></div><div class="ttdeci">bool specified</div><div class="ttdef"><b>Definition:</b> squareplanar.h:173</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_a1b196e01d93eb74fb83afbc4bc6ca548"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a1b196e01d93eb74fb83afbc4bc6ca548">OpenBabel::OBTetrahedralConfig::operator==</a></div><div class="ttdeci">bool operator==(const OBTetrahedralConfig &amp;other) const</div><div class="ttdef"><b>Definition:</b> bindings.h:21</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config_shtml"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml">OpenBabel::OBSquarePlanarStereo::Config</a></div><div class="ttdoc">Stereochemical configuration for square planar stereocenters. </div><div class="ttdef"><b>Definition:</b> squareplanar.h:71</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config_shtml_a77f6538bd30b4203bd2b2bba33c28c85"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a77f6538bd30b4203bd2b2bba33c28c85">OpenBabel::OBSquarePlanarStereo::Config::shape</a></div><div class="ttdeci">OBStereo::Shape shape</div><div class="ttdoc">The shape of the 4 reference ids. </div><div class="ttdef"><b>Definition:</b> squareplanar.h:172</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_a822b3ed2ceea391277903da02d1fd0a2"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">OpenBabel::OBTetrahedralConfig::center</a></div><div class="ttdeci">unsigned long center</div><div class="ttdef"><b>Definition:</b> bindings.h:106</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralStereo_1_1Config_shtml_a3237fb5e8bbcbececce85cb5d85195b6"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">OpenBabel::OBTetrahedralStereo::Config::from</a></div><div class="ttdeci">unsigned long from</div><div class="ttdef"><b>Definition:</b> tetrahedral.h:173</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_a6f0021eb4868fb5540a2cedde823ada1"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#a6f0021eb4868fb5540a2cedde823ada1">OpenBabel::OBStereo::ConstRefIter</a></div><div class="ttdeci">Refs::const_iterator ConstRefIter</div><div class="ttdef"><b>Definition:</b> stereo.h:164</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml">OpenBabel::OBSquarePlanarConfig</a></div><div class="ttdef"><b>Definition:</b> bindings.h:182</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015">OpenBabel::OBStereo::ImplicitRef</a></div><div class="ttdoc">Implicit Ref (i.e. hydrogen, N lone pair, ...). </div><div class="ttdef"><b>Definition:</b> stereo.h:151</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml">OpenBabel::OBCisTransConfig</a></div><div class="ttdef"><b>Definition:</b> bindings.h:114</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml_a3e3f2a8fefc9f694040bbb8685cb61e1"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">OpenBabel::OBSquarePlanarConfig::refs</a></div><div class="ttdeci">OBStereo::Refs refs</div><div class="ttdef"><b>Definition:</b> bindings.h:242</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_a0ba3b9c408bae435888d6fdc69be280a"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#a0ba3b9c408bae435888d6fdc69be280a">OpenBabel::OBStereo::NumInversions</a></div><div class="ttdeci">static int NumInversions(const Refs &amp;refs)</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralStereo_1_1Config_shtml_a3a41b22504236f1bc6908201a3289184"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3a41b22504236f1bc6908201a3289184">OpenBabel::OBTetrahedralStereo::Config::view</a></div><div class="ttdeci">OBStereo::View view</div><div class="ttdoc">Specify viewing from or towards the atom with from/towards id. </div><div class="ttdef"><b>Definition:</b> tetrahedral.h:178</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_a08708e03d1a9b8691156344829188365"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a08708e03d1a9b8691156344829188365">OpenBabel::OBTetrahedralConfig::Convert</a></div><div class="ttdeci">static OBTetrahedralStereo::Config Convert(const OBTetrahedralConfig &amp;other)</div><div class="ttdef"><b>Definition:</b> bindings.h:8</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OpenBabel::OBStereo::ShapeU</a></div><div class="ttdef"><b>Definition:</b> stereo.h:109</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_aef4275009e6aa8a3c4a7cbd8767d0a23"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#aef4275009e6aa8a3c4a7cbd8767d0a23">OpenBabel::OBTetrahedralConfig::operator!=</a></div><div class="ttdeci">bool operator!=(const OBTetrahedralConfig &amp;other) const</div><div class="ttdef"><b>Definition:</b> bindings.h:101</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml_a41b53341344d2ea8042abfea883a9dab"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a41b53341344d2ea8042abfea883a9dab">OpenBabel::OBSquarePlanarConfig::operator==</a></div><div class="ttdeci">bool operator==(const OBSquarePlanarConfig &amp;other) const</div><div class="ttdef"><b>Definition:</b> bindings.h:196</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml_ad137707f900f599f5f403d9639e2aec3"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#ad137707f900f599f5f403d9639e2aec3">OpenBabel::OBSquarePlanarConfig::specified</a></div><div class="ttdeci">bool specified</div><div class="ttdef"><b>Definition:</b> bindings.h:244</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTetraPlanarStereo_shtml_a2feb933d2ed497f473d610552e77d529"><div class="ttname"><a href="classOpenBabel_1_1OBTetraPlanarStereo.shtml#a2feb933d2ed497f473d610552e77d529">OpenBabel::OBTetraPlanarStereo::ToConfig</a></div><div class="ttdeci">static ConfigType ToConfig(const ConfigType &amp;cfg, unsigned long start, OBStereo::Shape shape=OBStereo::ShapeU)</div><div class="ttdef"><b>Definition:</b> tetraplanar.h:90</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_a4ea32436f7428861ff7d4543570f4451"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a4ea32436f7428861ff7d4543570f4451">OpenBabel::OBTetrahedralConfig::winding</a></div><div class="ttdeci">OBStereo::Winding winding</div><div class="ttdef"><b>Definition:</b> bindings.h:109</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_ae471f79dad3df1484c82c25aa2f645c0"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">OpenBabel::OBCisTransConfig::Convert</a></div><div class="ttdeci">static OBCisTransStereo::Config Convert(const OBCisTransConfig &amp;other)</div><div class="ttdef"><b>Definition:</b> bindings.h:117</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_af1dfb9e747d80437422fdb5fba87c2c7"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OpenBabel::OBStereo::View</a></div><div class="ttdeci">View</div><div class="ttdef"><b>Definition:</b> stereo.h:119</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_a6402345e461821a38ee0538b3769437a"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#a6402345e461821a38ee0538b3769437a">OpenBabel::OBCisTransConfig::operator==</a></div><div class="ttdeci">bool operator==(const OBCisTransConfig &amp;other) const</div><div class="ttdef"><b>Definition:</b> bindings.h:129</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralStereo_1_1Config_shtml_ad137707f900f599f5f403d9639e2aec3"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">OpenBabel::OBTetrahedralStereo::Config::specified</a></div><div class="ttdeci">bool specified</div><div class="ttdef"><b>Definition:</b> tetrahedral.h:179</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_a7dd420f7528abb409341a8a5874143db"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#a7dd420f7528abb409341a8a5874143db">OpenBabel::OBStereo::ContainsRef</a></div><div class="ttdeci">static bool ContainsRef(const Refs &amp;refs, unsigned long ref)</div></div>
<div class="ttc" id="stereo_8h_shtml"><div class="ttname"><a href="stereo_8h.shtml">stereo.h</a></div><div class="ttdoc">Process molecular stereochemistry information. </div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_abb14ec41d65b0dc4d49707a713da483f"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#abb14ec41d65b0dc4d49707a713da483f">OpenBabel::OBStereo::ContainsSameRefs</a></div><div class="ttdeci">static bool ContainsSameRefs(const Refs &amp;refs1, const Refs &amp;refs2)</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransStereo_1_1Config_shtml_a3e3f2a8fefc9f694040bbb8685cb61e1"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">OpenBabel::OBCisTransStereo::Config::refs</a></div><div class="ttdeci">OBStereo::Refs refs</div><div class="ttdoc">The 4 reference ids. </div><div class="ttdef"><b>Definition:</b> cistrans.h:200</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml">OpenBabel::OBTetrahedralConfig</a></div><div class="ttdef"><b>Definition:</b> bindings.h:5</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_a55b506070847a13554f8b879c1bfb37c"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OpenBabel::OBStereo::Shape</a></div><div class="ttdeci">Shape</div><div class="ttdef"><b>Definition:</b> stereo.h:108</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_afba3b75e1c6d7d58f0577283c68ff0f8"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#afba3b75e1c6d7d58f0577283c68ff0f8">OpenBabel::OBTetrahedralConfig::from_or_towards</a></div><div class="ttdeci">unsigned long from_or_towards</div><div class="ttdef"><b>Definition:</b> bindings.h:107</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransStereo_1_1Config_shtml_ac31c5196f50f192d5db1d85180b05aaf"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#ac31c5196f50f192d5db1d85180b05aaf">OpenBabel::OBCisTransStereo::Config::end</a></div><div class="ttdeci">unsigned long end</div><div class="ttdef"><b>Definition:</b> cistrans.h:199</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralStereo_1_1Config_shtml"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">OpenBabel::OBTetrahedralStereo::Config</a></div><div class="ttdoc">Stereochemical configuration for tetrahedral stereocenters. </div><div class="ttdef"><b>Definition:</b> tetrahedral.h:84</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_a3e3f2a8fefc9f694040bbb8685cb61e1"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">OpenBabel::OBTetrahedralConfig::refs</a></div><div class="ttdeci">OBStereo::Refs refs</div><div class="ttdef"><b>Definition:</b> bindings.h:108</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml_a18faf13ec53584f33f9beba948bcf459"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a18faf13ec53584f33f9beba948bcf459">OpenBabel::OBSquarePlanarConfig::operator!=</a></div><div class="ttdeci">bool operator!=(const OBSquarePlanarConfig &amp;other) const</div><div class="ttdef"><b>Definition:</b> bindings.h:236</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransStereo_1_1Config_shtml_a77f6538bd30b4203bd2b2bba33c28c85"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a77f6538bd30b4203bd2b2bba33c28c85">OpenBabel::OBCisTransStereo::Config::shape</a></div><div class="ttdeci">OBStereo::Shape shape</div><div class="ttdoc">The shape of the 4 reference ids. </div><div class="ttdef"><b>Definition:</b> cistrans.h:201</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_ac31c5196f50f192d5db1d85180b05aaf"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#ac31c5196f50f192d5db1d85180b05aaf">OpenBabel::OBCisTransConfig::end</a></div><div class="ttdeci">unsigned long end</div><div class="ttdef"><b>Definition:</b> bindings.h:176</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_a3e3f2a8fefc9f694040bbb8685cb61e1"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">OpenBabel::OBCisTransConfig::refs</a></div><div class="ttdeci">OBStereo::Refs refs</div><div class="ttdef"><b>Definition:</b> bindings.h:177</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_ac3e0e8e3a194037cdf6103a95a1c6d31"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OpenBabel::OBStereo::Winding</a></div><div class="ttdeci">Winding</div><div class="ttdef"><b>Definition:</b> stereo.h:130</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config_shtml_a822b3ed2ceea391277903da02d1fd0a2"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">OpenBabel::OBSquarePlanarStereo::Config::center</a></div><div class="ttdeci">unsigned long center</div><div class="ttdef"><b>Definition:</b> squareplanar.h:170</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config_shtml_a3e3f2a8fefc9f694040bbb8685cb61e1"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">OpenBabel::OBSquarePlanarStereo::Config::refs</a></div><div class="ttdeci">OBStereo::Refs refs</div><div class="ttdoc">The 4 reference ids. </div><div class="ttdef"><b>Definition:</b> squareplanar.h:171</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransStereo_1_1Config_shtml_ad137707f900f599f5f403d9639e2aec3"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">OpenBabel::OBCisTransStereo::Config::specified</a></div><div class="ttdeci">bool specified</div><div class="ttdef"><b>Definition:</b> cistrans.h:202</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_ad137707f900f599f5f403d9639e2aec3"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#ad137707f900f599f5f403d9639e2aec3">OpenBabel::OBCisTransConfig::specified</a></div><div class="ttdeci">bool specified</div><div class="ttdef"><b>Definition:</b> bindings.h:179</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransStereo_1_1Config_shtml"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">OpenBabel::OBCisTransStereo::Config</a></div><div class="ttdoc">Stereochemical configuration for double-bond cis/trans stereochemistry. </div><div class="ttdef"><b>Definition:</b> cistrans.h:99</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml_a77f6538bd30b4203bd2b2bba33c28c85"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">OpenBabel::OBSquarePlanarConfig::shape</a></div><div class="ttdeci">OBStereo::Shape shape</div><div class="ttdef"><b>Definition:</b> bindings.h:243</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_aa6d4491769cb9af32f3ea22e9f9a66c4"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OpenBabel::OBStereo::Refs</a></div><div class="ttdeci">std::vector&lt; Ref &gt; Refs</div><div class="ttdef"><b>Definition:</b> stereo.h:156</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_a3a41b22504236f1bc6908201a3289184"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#a3a41b22504236f1bc6908201a3289184">OpenBabel::OBTetrahedralConfig::view</a></div><div class="ttdeci">OBStereo::View view</div><div class="ttdef"><b>Definition:</b> bindings.h:110</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralStereo_1_1Config_shtml_a822b3ed2ceea391277903da02d1fd0a2"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">OpenBabel::OBTetrahedralStereo::Config::center</a></div><div class="ttdeci">unsigned long center</div><div class="ttdef"><b>Definition:</b> tetrahedral.h:164</div></div>
<div class="ttc" id="structOpenBabel_1_1OBSquarePlanarConfig_shtml_a822b3ed2ceea391277903da02d1fd0a2"><div class="ttname"><a href="structOpenBabel_1_1OBSquarePlanarConfig.shtml#a822b3ed2ceea391277903da02d1fd0a2">OpenBabel::OBSquarePlanarConfig::center</a></div><div class="ttdeci">unsigned long center</div><div class="ttdef"><b>Definition:</b> bindings.h:241</div></div>
<div class="ttc" id="classOpenBabel_1_1OBTetraNonPlanarStereo_shtml_ac6f1bf41e38b3e8b182fa57269046070"><div class="ttname"><a href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml#ac6f1bf41e38b3e8b182fa57269046070">OpenBabel::OBTetraNonPlanarStereo::ToConfig</a></div><div class="ttdeci">static ConfigType ToConfig(const ConfigType &amp;cfg, unsigned long from_or_towards, OBStereo::Winding winding=OBStereo::Clockwise, OBStereo::View view=OBStereo::ViewFrom)</div><div class="ttdef"><b>Definition:</b> tetranonplanar.h:145</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_a77f6538bd30b4203bd2b2bba33c28c85"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#a77f6538bd30b4203bd2b2bba33c28c85">OpenBabel::OBCisTransConfig::shape</a></div><div class="ttdeci">OBStereo::Shape shape</div><div class="ttdef"><b>Definition:</b> bindings.h:178</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralStereo_1_1Config_shtml_a4ea32436f7428861ff7d4543570f4451"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a4ea32436f7428861ff7d4543570f4451">OpenBabel::OBTetrahedralStereo::Config::winding</a></div><div class="ttdeci">OBStereo::Winding winding</div><div class="ttdef"><b>Definition:</b> tetrahedral.h:177</div></div>
<div class="ttc" id="structOpenBabel_1_1OBTetrahedralConfig_shtml_ad137707f900f599f5f403d9639e2aec3"><div class="ttname"><a href="structOpenBabel_1_1OBTetrahedralConfig.shtml#ad137707f900f599f5f403d9639e2aec3">OpenBabel::OBTetrahedralConfig::specified</a></div><div class="ttdeci">bool specified</div><div class="ttdef"><b>Definition:</b> bindings.h:111</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransStereo_1_1Config_shtml_a43ec7ce807e545cea2247cd68bc7b7e9"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a43ec7ce807e545cea2247cd68bc7b7e9">OpenBabel::OBCisTransStereo::Config::begin</a></div><div class="ttdeci">unsigned long begin</div><div class="ttdef"><b>Definition:</b> cistrans.h:199</div></div>
<div class="ttc" id="structOpenBabel_1_1OBStereo_shtml_a1380cd3ca593dd317be63064b47e14db"><div class="ttname"><a href="structOpenBabel_1_1OBStereo.shtml#a1380cd3ca593dd317be63064b47e14db">OpenBabel::OBStereo::RefIter</a></div><div class="ttdeci">Refs::iterator RefIter</div><div class="ttdef"><b>Definition:</b> stereo.h:160</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_ac52a3562b774cb3c26c9dbd0cb701955"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#ac52a3562b774cb3c26c9dbd0cb701955">OpenBabel::OBCisTransConfig::operator!=</a></div><div class="ttdeci">bool operator!=(const OBCisTransConfig &amp;other) const</div><div class="ttdef"><b>Definition:</b> bindings.h:171</div></div>
<div class="ttc" id="structOpenBabel_1_1OBCisTransConfig_shtml_a43ec7ce807e545cea2247cd68bc7b7e9"><div class="ttname"><a href="structOpenBabel_1_1OBCisTransConfig.shtml#a43ec7ce807e545cea2247cd68bc7b7e9">OpenBabel::OBCisTransConfig::begin</a></div><div class="ttdeci">unsigned long begin</div><div class="ttdef"><b>Definition:</b> bindings.h:176</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
