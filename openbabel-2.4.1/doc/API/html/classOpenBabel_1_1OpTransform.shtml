<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OpTransform Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pro-static-attribs">Static Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OpTransform-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OpTransform Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="optransform_8h_source.shtml">openbabel/optransform.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OpTransform:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OpTransform.png" usemap="#OpTransform_map" alt=""/>
  <map id="OpTransform_map" name="OpTransform_map">
<area href="classOpenBabel_1_1OBOp.shtml" title="Operations to modify molecules before output. " alt="OBOp" shape="rect" coords="0,56,86,80"/>
<area href="classOpenBabel_1_1OBPlugin.shtml" title="Base class for all types of dynamic classes discovered at runtime. " alt="OBPlugin" shape="rect" coords="0,0,86,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a4e98002937e35472f2b829eaf98913d3"><td class="memItemLeft" align="right" valign="top">typedef const std::map&lt; std::string, std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a></td></tr>
<tr class="separator:a4e98002937e35472f2b829eaf98913d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0fd3c807ed3341c33070c93b14739bc8"><td class="memItemLeft" align="right" valign="top">typedef std::map&lt; const char *, <a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a> *, <a class="el" href="structOpenBabel_1_1CharPtrLess.shtml">CharPtrLess</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga0fd3c807ed3341c33070c93b14739bc8">PluginMapType</a></td></tr>
<tr class="separator:ga0fd3c807ed3341c33070c93b14739bc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8fac85f5497f873a2dd8734b47f0bdc0"><td class="memItemLeft" align="right" valign="top">typedef PluginMapType::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga8fac85f5497f873a2dd8734b47f0bdc0">PluginIterator</a></td></tr>
<tr class="separator:ga8fac85f5497f873a2dd8734b47f0bdc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a89c92f4e29130fbff3f9385dc4166368"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OpTransform.shtml#a89c92f4e29130fbff3f9385dc4166368">OpTransform</a> (const char *ID, const char *filename, const char *descr)</td></tr>
<tr class="separator:a89c92f4e29130fbff3f9385dc4166368"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d38cff6f979c8de63755d5171047f6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OpTransform.shtml#a9d38cff6f979c8de63755d5171047f6a">~OpTransform</a> ()</td></tr>
<tr class="separator:a9d38cff6f979c8de63755d5171047f6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a6b8d1611d5d963fc29982cc1ebcbf7"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OpTransform.shtml#a4a6b8d1611d5d963fc29982cc1ebcbf7">Description</a> ()</td></tr>
<tr class="separator:a4a6b8d1611d5d963fc29982cc1ebcbf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a606f36504fd752a959c86c61e44d5b58"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OpTransform.shtml#a606f36504fd752a959c86c61e44d5b58">WorksWith</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *pOb) const</td></tr>
<tr class="separator:a606f36504fd752a959c86c61e44d5b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d16b63b2ed4cf1fe9c8038388d3b4db"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OpTransform.shtml#a6d16b63b2ed4cf1fe9c8038388d3b4db">Do</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *pOb, const char *OptionText=NULL, <a class="el" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a> *pOptions=NULL, <a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *pConv=NULL)</td></tr>
<tr class="separator:a6d16b63b2ed4cf1fe9c8038388d3b4db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed21db4d9fb23cb30d0440e844a69f57"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OpTransform.shtml#aed21db4d9fb23cb30d0440e844a69f57">MakeInstance</a> (const std::vector&lt; std::string &gt; &amp;textlines)</td></tr>
<tr class="separator:aed21db4d9fb23cb30d0440e844a69f57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45dfda1fb13d3c26ab7f8f7631e3351c"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBOp.shtml#a45dfda1fb13d3c26ab7f8f7631e3351c">TypeID</a> ()</td></tr>
<tr class="separator:a45dfda1fb13d3c26ab7f8f7631e3351c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72b971e7aaf24917543e55e65e4f9898"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBOp.shtml#a72b971e7aaf24917543e55e65e4f9898">ProcessVec</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&gt; &amp;)</td></tr>
<tr class="separator:a72b971e7aaf24917543e55e65e4f9898"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0859fdbf134af95a8231eb32c73b7db"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gae0859fdbf134af95a8231eb32c73b7db">Display</a> (std::string &amp;txt, const char *param, const char *ID=NULL)</td></tr>
<tr class="separator:gae0859fdbf134af95a8231eb32c73b7db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e0b39e1326de703012f81ac2be7feba"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga3e0b39e1326de703012f81ac2be7feba">Init</a> ()</td></tr>
<tr class="separator:ga3e0b39e1326de703012f81ac2be7feba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa55e5ad893f2566c6874224f9174b7d2"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gaa55e5ad893f2566c6874224f9174b7d2">GetID</a> () const</td></tr>
<tr class="separator:gaa55e5ad893f2566c6874224f9174b7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaabc1385cbe63145ffec6edf1f2c3be98"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="group__plugins.shtml#ga0fd3c807ed3341c33070c93b14739bc8">PluginMapType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gaabc1385cbe63145ffec6edf1f2c3be98">GetMap</a> () const =0</td></tr>
<tr class="separator:gaabc1385cbe63145ffec6edf1f2c3be98"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a64e598f68f30107a74319b9fc6d26cd0"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBOp.shtml#a64e598f68f30107a74319b9fc6d26cd0">OpOptions</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *pOb)</td></tr>
<tr class="separator:a64e598f68f30107a74319b9fc6d26cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a139b43c8cee15687f02550c031e558d7"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBOp.shtml#a139b43c8cee15687f02550c031e558d7">DoOps</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *pOb, <a class="el" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a> *pOptions, <a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *pConv)</td></tr>
<tr class="separator:a139b43c8cee15687f02550c031e558d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga295dc7f1b94da710821c562bff3e7c97"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga295dc7f1b94da710821c562bff3e7c97">GetPlugin</a> (const char *Type, const char *ID)</td></tr>
<tr class="separator:ga295dc7f1b94da710821c562bff3e7c97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf95953a5793333ba51e978c4a0a00103"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gaf95953a5793333ba51e978c4a0a00103">ListAsVector</a> (const char *PluginID, const char *param, std::vector&lt; std::string &gt; &amp;vlist)</td></tr>
<tr class="separator:gaf95953a5793333ba51e978c4a0a00103"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fabfd2513038ae6ac475ac0ff2c73cd"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga9fabfd2513038ae6ac475ac0ff2c73cd">List</a> (const char *PluginID, const char *param=NULL, std::ostream *os=&amp;std::cout)</td></tr>
<tr class="separator:ga9fabfd2513038ae6ac475ac0ff2c73cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba22c5352d36c7f058299af7ddffb03e"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gaba22c5352d36c7f058299af7ddffb03e">ListAsString</a> (const char *PluginID, const char *param=NULL)</td></tr>
<tr class="separator:gaba22c5352d36c7f058299af7ddffb03e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84fc973fdf4bba5a6b0e2d402077991c"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga84fc973fdf4bba5a6b0e2d402077991c">FirstLine</a> (const char *txt)</td></tr>
<tr class="separator:ga84fc973fdf4bba5a6b0e2d402077991c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d4d73999ab0518ee471c635bd0a7e87"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__plugins.shtml#ga8fac85f5497f873a2dd8734b47f0bdc0">PluginIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga1d4d73999ab0518ee471c635bd0a7e87">Begin</a> (const char *PluginID)</td></tr>
<tr class="separator:ga1d4d73999ab0518ee471c635bd0a7e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a330280c1cd2e7119dac87a6fd0b762"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__plugins.shtml#ga8fac85f5497f873a2dd8734b47f0bdc0">PluginIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga9a330280c1cd2e7119dac87a6fd0b762">End</a> (const char *PluginID)</td></tr>
<tr class="separator:ga9a330280c1cd2e7119dac87a6fd0b762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabfb658dfec57d827a9e3c6db43c2d9d1"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gabfb658dfec57d827a9e3c6db43c2d9d1">LoadAllPlugins</a> ()</td></tr>
<tr class="separator:gabfb658dfec57d827a9e3c6db43c2d9d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:gac40457336d7b12bb632b4ac4e8955a3a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__plugins.shtml#ga0fd3c807ed3341c33070c93b14739bc8">PluginMapType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gac40457336d7b12bb632b4ac4e8955a3a">PluginMap</a> ()</td></tr>
<tr class="separator:gac40457336d7b12bb632b4ac4e8955a3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadfcf9fda27cfbc4301fc94517a4250ef"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__plugins.shtml#ga0fd3c807ed3341c33070c93b14739bc8">PluginMapType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#gadfcf9fda27cfbc4301fc94517a4250ef">GetTypeMap</a> (const char *PluginID)</td></tr>
<tr class="separator:gadfcf9fda27cfbc4301fc94517a4250ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e58b1811ec8c1b88254ee46ccef0b78"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga1e58b1811ec8c1b88254ee46ccef0b78">BaseFindType</a> (<a class="el" href="group__plugins.shtml#ga0fd3c807ed3341c33070c93b14739bc8">PluginMapType</a> &amp;Map, const char *ID)</td></tr>
<tr class="separator:ga1e58b1811ec8c1b88254ee46ccef0b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ga1f8d25dafb0bc13814ca451035f67955"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga1f8d25dafb0bc13814ca451035f67955">_id</a></td></tr>
<tr class="separator:ga1f8d25dafb0bc13814ca451035f67955"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-attribs"></a>
Static Protected Attributes</h2></td></tr>
<tr class="memitem:ga9d7dd3bbc482a65e28ca887b3faa2535"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__plugins.shtml#ga9d7dd3bbc482a65e28ca887b3faa2535">AllPluginsLoaded</a> = 0</td></tr>
<tr class="separator:ga9d7dd3bbc482a65e28ca887b3faa2535"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Applies molecular reactions/transforms (<a class="el" href="classOpenBabel_1_1OBChemTsfm.shtml" title="SMARTS based structural modification (chemical transformation) ">OBChemTsfm</a> class) read from a datafile. </p>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a4e98002937e35472f2b829eaf98913d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e98002937e35472f2b829eaf98913d3">&sect;&nbsp;</a></span>OpMap</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">typedef const std::map&lt;std::string, std::string&gt; <a class="el" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a89c92f4e29130fbff3f9385dc4166368"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89c92f4e29130fbff3f9385dc4166368">&sect;&nbsp;</a></span>OpTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>ID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>descr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>constructor. Each instance provides an ID, a datafile and a description. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OpTransform.shtml#aed21db4d9fb23cb30d0440e844a69f57">OpTransform::MakeInstance()</a>.</p>

</div>
</div>
<a id="a9d38cff6f979c8de63755d5171047f6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d38cff6f979c8de63755d5171047f6a">&sect;&nbsp;</a></span>~OpTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4a6b8d1611d5d963fc29982cc1ebcbf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a6b8d1611d5d963fc29982cc1ebcbf7">&sect;&nbsp;</a></span>Description()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Description </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Required description of a sub-type. </p>

<p>Reimplemented from <a class="el" href="group__plugins.shtml#ga4a6b8d1611d5d963fc29982cc1ebcbf7">OBPlugin</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OpTransform.shtml#a9d38cff6f979c8de63755d5171047f6a">OpTransform::~OpTransform()</a>.</p>

</div>
</div>
<a id="a606f36504fd752a959c86c61e44d5b58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a606f36504fd752a959c86c61e44d5b58">&sect;&nbsp;</a></span>WorksWith()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool WorksWith </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"><em>pOb</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks that this op is being applied to the right kind of object(OBMol) </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBOp.shtml#a841238ff5ff03c1c9341dea0105469c6">OBOp</a>.</p>

</div>
</div>
<a id="a6d16b63b2ed4cf1fe9c8038388d3b4db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d16b63b2ed4cf1fe9c8038388d3b4db">&sect;&nbsp;</a></span>Do()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Do </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"><em>pOb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>OptionText</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a> *&#160;</td>
          <td class="paramname"><em>pOptions</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *&#160;</td>
          <td class="paramname"><em>pConv</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Carries out the transform. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBOp.shtml#ad1f068b2923689e4c4c48a76a3e885e4">OBOp</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OpTransform.shtml#a606f36504fd752a959c86c61e44d5b58">OpTransform::WorksWith()</a>.</p>

</div>
</div>
<a id="aed21db4d9fb23cb30d0440e844a69f57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed21db4d9fb23cb30d0440e844a69f57">&sect;&nbsp;</a></span>MakeInstance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a>* MakeInstance </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Make a new instance of the class. See <a class="el" href="classOpenBabel_1_1OpTransform.shtml" title="Applies molecular reactions/transforms (OBChemTsfm class) read from a datafile. ">OpTransform</a>, <a class="el" href="classOpenBabel_1_1OBGroupContrib.shtml" title="Handle group contribution algorithms. ">OBGroupContrib</a>, SmartsDescriptor classes for derived versions. Usually, the first parameter is the classname, the next three are parameters(ID, filename, description) for a constructor, and the rest data. </p>

<p>Reimplemented from <a class="el" href="group__plugins.shtml#ga9399e9568ab809d714385f1b237a9335">OBPlugin</a>.</p>

</div>
</div>
<a id="a45dfda1fb13d3c26ab7f8f7631e3351c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45dfda1fb13d3c26ab7f8f7631e3351c">&sect;&nbsp;</a></span>TypeID()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* TypeID </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Provides the name of this kind of plugin. Use -L "ops" to list from commandline. </p>

<p>Reimplemented from <a class="el" href="group__plugins.shtml#ga45dfda1fb13d3c26ab7f8f7631e3351c">OBPlugin</a>.</p>

</div>
</div>
<a id="a72b971e7aaf24917543e55e65e4f9898"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72b971e7aaf24917543e55e65e4f9898">&sect;&nbsp;</a></span>ProcessVec()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ProcessVec </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Do something with an array of objects. Used a a callback routine in OpSort, etc. </p>

</div>
</div>
<a id="a64e598f68f30107a74319b9fc6d26cd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64e598f68f30107a74319b9fc6d26cd0">&sect;&nbsp;</a></span>OpOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::string OpOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"><em>pOb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>string describing options, for display with -H and to make checkboxes in GUI </dd></dl>

</div>
</div>
<a id="a139b43c8cee15687f02550c031e558d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a139b43c8cee15687f02550c031e558d7">&sect;&nbsp;</a></span>DoOps()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool DoOps </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"><em>pOb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a> *&#160;</td>
          <td class="paramname"><em>pOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *&#160;</td>
          <td class="paramname"><em>pConv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Call <a class="el" href="classOpenBabel_1_1OpTransform.shtml#a6d16b63b2ed4cf1fe9c8038388d3b4db" title="Carries out the transform. ">Do()</a> of all the OBOps whose ID is a key in the map. Called from DoTransformations(). The map has general options like -x or &ndash;multicharoption The key is the option name and the value, if any, is text which follows the option name. In some cases, there may be several parameters, space separated) </p><dl class="section return"><dt>Returns</dt><dd>false indicating object should not be output, if any <a class="el" href="classOpenBabel_1_1OpTransform.shtml#a6d16b63b2ed4cf1fe9c8038388d3b4db" title="Carries out the transform. ">Do()</a> returns false </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="optransform_8h_source.shtml">optransform.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
