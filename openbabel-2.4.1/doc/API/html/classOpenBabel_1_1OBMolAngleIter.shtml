<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBMolAngleIter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classOpenBabel_1_1OBMolAngleIter-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBMolAngleIter Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="obiter_8h_source.shtml">openbabel/obiter.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a482e4131f901dd1ec3c1d6305b1df9b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a482e4131f901dd1ec3c1d6305b1df9b4">OBMolAngleIter</a> ()</td></tr>
<tr class="separator:a482e4131f901dd1ec3c1d6305b1df9b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48b73b591ecad6e541b5ceedb6618715"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a48b73b591ecad6e541b5ceedb6618715">OBMolAngleIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *mol)</td></tr>
<tr class="separator:a48b73b591ecad6e541b5ceedb6618715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca2fc700c6c1c60ea2632839b5cae687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#aca2fc700c6c1c60ea2632839b5cae687">OBMolAngleIter</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr class="separator:aca2fc700c6c1c60ea2632839b5cae687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0de0326290e35dd6eeaada3eebed60c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a0de0326290e35dd6eeaada3eebed60c0">OBMolAngleIter</a> (const <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp;ai)</td></tr>
<tr class="separator:a0de0326290e35dd6eeaada3eebed60c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917fefa24816b0e6bca7497496cdb918"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a917fefa24816b0e6bca7497496cdb918">~OBMolAngleIter</a> ()</td></tr>
<tr class="separator:a917fefa24816b0e6bca7497496cdb918"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac632e9d1015ae2999d77a0d3cc7ed373"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#ac632e9d1015ae2999d77a0d3cc7ed373">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp;ai)</td></tr>
<tr class="separator:ac632e9d1015ae2999d77a0d3cc7ed373"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b76affb3b5d35fa419ac234144038b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a67b76affb3b5d35fa419ac234144038b">operator bool</a> () const</td></tr>
<tr class="separator:a67b76affb3b5d35fa419ac234144038b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb764746ed97bde2d79184c4ddcd3f63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#aeb764746ed97bde2d79184c4ddcd3f63">operator++</a> ()</td></tr>
<tr class="separator:aeb764746ed97bde2d79184c4ddcd3f63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad62a63eed1c42c4600a69c850b5bd9bd"><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#ad62a63eed1c42c4600a69c850b5bd9bd">operator*</a> () const</td></tr>
<tr class="separator:ad62a63eed1c42c4600a69c850b5bd9bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Iterate over all angles in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>. </p>
<dl class="section since"><dt>Since</dt><dd>version 2.1</dd></dl>
<p>To facilitate iteration through all angles in a molecule, without resorting to atom indexes (which <b>will</b> change in the future), a variety of iterator methods are provided.</p>
<p>This has been made significantly easier by a series of macros in the <a class="el" href="obiter_8h.shtml" title="STL-style iterators for Open Babel. ">obiter.h</a> header file:</p>
<div class="fragment"><div class="line">\#define <a class="code" href="obiter_8h.shtml#a1fc0ae63791285f6155fa53658c2e4ae">FOR_ANGLES_OF_MOL</a>(a,m)     for( <a class="code" href="classOpenBabel_1_1OBMolAngleIter.shtml#a482e4131f901dd1ec3c1d6305b1df9b4">OBMolAngleIter</a>     a(m); a; a++ )</div></div><!-- fragment --><p>Here is an example: </p><div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="obiter_8h.shtml">openbabel/obiter.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"></div><div class="line"><a class="code" href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a> mol;</div><div class="line"><a class="code" href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a> *a, *b, *c;</div><div class="line"><span class="keywordtype">double</span> ang;</div><div class="line"></div><div class="line"><a class="code" href="obiter_8h.shtml#a1fc0ae63791285f6155fa53658c2e4ae">FOR_ANGLES_OF_MOL</a>(angle, mol)</div><div class="line">{</div><div class="line">   <span class="comment">// The variable a behaves like OBAngle* when used with -&gt; and * but</span></div><div class="line">   <span class="comment">// but needs to be explicitly converted when appearing as a parameter</span></div><div class="line">   <span class="comment">// in a function call - use &amp;*a</span></div><div class="line"></div><div class="line">   b = _mol.GetAtom((*angle)[0] + 1);</div><div class="line">   a = _mol.GetAtom((*angle)[1] + 1);</div><div class="line">   c = _mol.GetAtom((*angle)[2] + 1);</div><div class="line">   ang = a-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a02dada3ad01505b2d4ddcbe7b9f006c8">GetAngle</a>(b-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>(), c-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>());</div><div class="line">}</div></div><!-- fragment --> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a482e4131f901dd1ec3c1d6305b1df9b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a482e4131f901dd1ec3c1d6305b1df9b4">&sect;&nbsp;</a></span>OBMolAngleIter() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a48b73b591ecad6e541b5ceedb6618715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48b73b591ecad6e541b5ceedb6618715">&sect;&nbsp;</a></span>OBMolAngleIter() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aca2fc700c6c1c60ea2632839b5cae687"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca2fc700c6c1c60ea2632839b5cae687">&sect;&nbsp;</a></span>OBMolAngleIter() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0de0326290e35dd6eeaada3eebed60c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0de0326290e35dd6eeaada3eebed60c0">&sect;&nbsp;</a></span>OBMolAngleIter() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp;&#160;</td>
          <td class="paramname"><em>ai</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a917fefa24816b0e6bca7497496cdb918"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a917fefa24816b0e6bca7497496cdb918">&sect;&nbsp;</a></span>~OBMolAngleIter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac632e9d1015ae2999d77a0d3cc7ed373"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac632e9d1015ae2999d77a0d3cc7ed373">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp;&#160;</td>
          <td class="paramname"><em>ai</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a67b76affb3b5d35fa419ac234144038b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67b76affb3b5d35fa419ac234144038b">&sect;&nbsp;</a></span>operator bool()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether the iterator can still advance (i.e., visit more angles) </dd></dl>

</div>
</div>
<a id="aeb764746ed97bde2d79184c4ddcd3f63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb764746ed97bde2d79184c4ddcd3f63">&sect;&nbsp;</a></span>operator++()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml">OBMolAngleIter</a> &amp; operator++ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Preincrement &ndash; advance to the next angle and return. </p>

</div>
</div>
<a id="ad62a63eed1c42c4600a69c850b5bd9bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad62a63eed1c42c4600a69c850b5bd9bd">&sect;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned int&gt; operator* </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A vector of three atom indexes specifying the angle </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">OBAtom::GetIdx()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="obiter_8h_source.shtml">obiter.h</a></li>
<li><a class="el" href="obiter_8cpp.shtml">obiter.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
