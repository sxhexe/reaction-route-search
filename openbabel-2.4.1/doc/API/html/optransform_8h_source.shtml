<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>optransform.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">optransform.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="optransform_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">optransform.h: makes option to transform molecule as specified in a datafile</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">Copyright (C) 2008 Chris Morley</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="phmodel_8h.shtml">openbabel/phmodel.h</a>&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="op_8h.shtml">openbabel/op.h</a>&gt;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OpTransform.shtml">   31</a></span>&#160;<span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBOp.shtml">OBOp</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OpTransform.shtml#a89c92f4e29130fbff3f9385dc4166368">   35</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OpTransform.shtml#a89c92f4e29130fbff3f9385dc4166368">OpTransform</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* ID, <span class="keyword">const</span> <span class="keywordtype">char</span>* filename, <span class="keyword">const</span> <span class="keywordtype">char</span>* descr)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    : <a class="code" href="classOpenBabel_1_1OBOp.shtml">OBOp</a>(ID, false), _filename(filename), _descr(descr), _dataLoaded(false){}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OpTransform.shtml#a9d38cff6f979c8de63755d5171047f6a">   38</a></span>&#160;  <a class="code" href="classOpenBabel_1_1OpTransform.shtml#a9d38cff6f979c8de63755d5171047f6a">~OpTransform</a>(){}</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classOpenBabel_1_1OpTransform.shtml#a4a6b8d1611d5d963fc29982cc1ebcbf7">Description</a>();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OpTransform.shtml#a606f36504fd752a959c86c61e44d5b58">   43</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OpTransform.shtml#a606f36504fd752a959c86c61e44d5b58">WorksWith</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* pOb)<span class="keyword">const</span>{ <span class="keywordflow">return</span> <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>*<span class="keyword">&gt;</span>(pOb)!=NULL; }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OpTransform.shtml#a6d16b63b2ed4cf1fe9c8038388d3b4db">Do</a>(<a class="code" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* pOb, <span class="keyword">const</span> <span class="keywordtype">char</span>* OptionText=NULL, <a class="code" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a>* pOptions=NULL, <a class="code" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a>* pConv=NULL);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OpTransform.shtml#aed21db4d9fb23cb30d0440e844a69f57">   48</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a>* <a class="code" href="classOpenBabel_1_1OpTransform.shtml#aed21db4d9fb23cb30d0440e844a69f57">MakeInstance</a>(<span class="keyword">const</span> std::vector&lt;std::string&gt;&amp; textlines)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <a class="code" href="classOpenBabel_1_1OpTransform.shtml">OpTransform</a>* pTransform = <span class="keyword">new</span> <a class="code" href="classOpenBabel_1_1OpTransform.shtml#a89c92f4e29130fbff3f9385dc4166368">OpTransform</a>(</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    textlines[1].c_str(),textlines[2].c_str(),textlines[3].c_str());</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  pTransform-&gt;_textlines = textlines;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordflow">return</span> pTransform;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">bool</span> Initialize();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span> *buffer);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* _filename;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* _descr;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  std::vector&lt;std::string&gt; _textlines;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">bool</span> _dataLoaded;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  std::vector&lt;OBChemTsfm&gt; _transforms;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;};</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}<span class="comment">//namespace</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="ttc" id="classOpenBabel_1_1OpTransform_shtml_a89c92f4e29130fbff3f9385dc4166368"><div class="ttname"><a href="classOpenBabel_1_1OpTransform.shtml#a89c92f4e29130fbff3f9385dc4166368">OpenBabel::OpTransform::OpTransform</a></div><div class="ttdeci">OpTransform(const char *ID, const char *filename, const char *descr)</div><div class="ttdoc">constructor. Each instance provides an ID, a datafile and a description. </div><div class="ttdef"><b>Definition:</b> optransform.h:35</div></div>
<div class="ttc" id="classOpenBabel_1_1OBOp_shtml_a4e98002937e35472f2b829eaf98913d3"><div class="ttname"><a href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpenBabel::OBOp::OpMap</a></div><div class="ttdeci">const std::map&lt; std::string, std::string &gt; OpMap</div><div class="ttdef"><b>Definition:</b> op.h:38</div></div>
<div class="ttc" id="classOpenBabel_1_1OBConversion_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBConversion.shtml">OpenBabel::OBConversion</a></div><div class="ttdoc">Class to convert from one format to another. </div><div class="ttdef"><b>Definition:</b> obconversion.h:60</div></div>
<div class="ttc" id="classOpenBabel_1_1OpTransform_shtml_a6d16b63b2ed4cf1fe9c8038388d3b4db"><div class="ttname"><a href="classOpenBabel_1_1OpTransform.shtml#a6d16b63b2ed4cf1fe9c8038388d3b4db">OpenBabel::OpTransform::Do</a></div><div class="ttdeci">virtual bool Do(OBBase *pOb, const char *OptionText=NULL, OpMap *pOptions=NULL, OBConversion *pConv=NULL)</div><div class="ttdoc">Carries out the transform. </div></div>
<div class="ttc" id="classOpenBabel_1_1OpTransform_shtml_a606f36504fd752a959c86c61e44d5b58"><div class="ttname"><a href="classOpenBabel_1_1OpTransform.shtml#a606f36504fd752a959c86c61e44d5b58">OpenBabel::OpTransform::WorksWith</a></div><div class="ttdeci">virtual bool WorksWith(OBBase *pOb) const</div><div class="ttdoc">Checks that this op is being applied to the right kind of object(OBMol) </div><div class="ttdef"><b>Definition:</b> optransform.h:43</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:113</div></div>
<div class="ttc" id="mol_8h_shtml"><div class="ttname"><a href="mol_8h.shtml">mol.h</a></div><div class="ttdoc">Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel) ...</div></div>
<div class="ttc" id="classOpenBabel_1_1OpTransform_shtml"><div class="ttname"><a href="classOpenBabel_1_1OpTransform.shtml">OpenBabel::OpTransform</a></div><div class="ttdoc">Applies molecular reactions/transforms (OBChemTsfm class) read from a datafile. </div><div class="ttdef"><b>Definition:</b> optransform.h:31</div></div>
<div class="ttc" id="classOpenBabel_1_1OpTransform_shtml_aed21db4d9fb23cb30d0440e844a69f57"><div class="ttname"><a href="classOpenBabel_1_1OpTransform.shtml#aed21db4d9fb23cb30d0440e844a69f57">OpenBabel::OpTransform::MakeInstance</a></div><div class="ttdeci">virtual OpTransform * MakeInstance(const std::vector&lt; std::string &gt; &amp;textlines)</div><div class="ttdef"><b>Definition:</b> optransform.h:48</div></div>
<div class="ttc" id="phmodel_8h_shtml"><div class="ttname"><a href="phmodel_8h.shtml">phmodel.h</a></div><div class="ttdoc">Read pH rules and assign charges. </div></div>
<div class="ttc" id="op_8h_shtml"><div class="ttname"><a href="op_8h.shtml">op.h</a></div><div class="ttdoc">Base plugin class for operations on molecules. </div></div>
<div class="ttc" id="classOpenBabel_1_1OpTransform_shtml_a4a6b8d1611d5d963fc29982cc1ebcbf7"><div class="ttname"><a href="classOpenBabel_1_1OpTransform.shtml#a4a6b8d1611d5d963fc29982cc1ebcbf7">OpenBabel::OpTransform::Description</a></div><div class="ttdeci">virtual const char * Description()</div><div class="ttdoc">Required description of a sub-type. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBOp_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBOp.shtml">OpenBabel::OBOp</a></div><div class="ttdoc">Operations to modify molecules before output. </div><div class="ttdef"><b>Definition:</b> op.h:33</div></div>
<div class="ttc" id="classOpenBabel_1_1OpTransform_shtml_a9d38cff6f979c8de63755d5171047f6a"><div class="ttname"><a href="classOpenBabel_1_1OpTransform.shtml#a9d38cff6f979c8de63755d5171047f6a">OpenBabel::OpTransform::~OpTransform</a></div><div class="ttdeci">~OpTransform()</div><div class="ttdef"><b>Definition:</b> optransform.h:38</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBase_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBase.shtml">OpenBabel::OBBase</a></div><div class="ttdoc">Base Class. </div><div class="ttdef"><b>Definition:</b> base.h:240</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:29 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
