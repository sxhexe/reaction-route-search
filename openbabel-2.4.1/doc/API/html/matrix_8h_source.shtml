<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>matrix.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">matrix.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="matrix_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">matrix.h - Operations on arbitrary-sized matrix.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Some portions Copyright (C) 2001-2005 by Geoffrey R. Hutchison</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef OB_MATRIX_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#define OB_MATRIX_H</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;math.h&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> * vector&lt;vector&lt;double&gt; &gt; m : m[row][col] gives appropriate row/col entry</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> * double **m                : m[row][col] gives appropriate row/col entry</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> * double *m                 : m[(row * numCols) + col] gives appropriate row/col entry</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#ab5741f7ec581130f899f17f4d9477aea">print_matrix</a>(std::vector&lt;std::vector&lt;double&gt; &gt; &amp;m);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#ab323a3745c477d9eb4c796786db39075">print_matrix_f</a> (<span class="keywordtype">double</span>  *m, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceOpenBabel.shtml#ac09eff5e59b6a7dd424dc71f4a37e464">print_matrix_ff</a>(<span class="keywordtype">double</span> **m, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a3b2b9be34ace132aa9506d9ee043824f">mult_matrix</a>(std::vector&lt;std::vector&lt;double&gt; &gt; &amp;c, std::vector&lt;std::vector&lt;double&gt; &gt; &amp;a, std::vector&lt;std::vector&lt;double&gt; &gt; &amp;b);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a067494738d0f55b9df745866cdc3fe56">mult_matrix_f</a> (<span class="keywordtype">double</span>  *c, <span class="keywordtype">double</span>  *a, <span class="keywordtype">double</span>  *b, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a37830c949ab96aad9b5041a82895ba8e">mult_matrix_ff</a>(<span class="keywordtype">double</span> **c, <span class="keywordtype">double</span> **a, <span class="keywordtype">double</span> **b, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a6e5ee2fd1515457cb4a6e9394a5a14ff">invert_matrix</a>(std::vector&lt;std::vector&lt;double&gt; &gt; &amp;m, <span class="keywordtype">double</span> &amp;det);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#afb96cdaafd5073c2e806d36ec4e7eef4">invert_matrix_f</a> (<span class="keywordtype">double</span>  *m, <span class="keywordtype">double</span> &amp;det, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#afa4aad5bde182eebe57cedcf1727b2fc">invert_matrix_ff</a>(<span class="keywordtype">double</span> **m, <span class="keywordtype">double</span> &amp;det, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a8580b3fa2a0435b2d073c22097d1d35e">convert_matrix_f</a> (std::vector&lt;std::vector&lt;double&gt; &gt; &amp;src, <span class="keywordtype">double</span>  *dst);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#ab06c9b9e02affa91406755a0b9fb28e1">convert_matrix_ff</a>(std::vector&lt;std::vector&lt;double&gt; &gt; &amp;src, <span class="keywordtype">double</span> **dst);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a8580b3fa2a0435b2d073c22097d1d35e">convert_matrix_f</a> (<span class="keywordtype">double</span>  *src, std::vector&lt;std::vector&lt;double&gt; &gt; &amp;dst, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#ab06c9b9e02affa91406755a0b9fb28e1">convert_matrix_ff</a>(<span class="keywordtype">double</span> **src, std::vector&lt;std::vector&lt;double&gt; &gt; &amp;dst, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#a8a3508df81e444f875d5f493a1bcbe28">convert_matrix_ff_f</a>(<span class="keywordtype">double</span> **src, <span class="keywordtype">double</span>  *dst, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#acbf2348ce7eae39aca355a630f06484c">convert_matrix_f_ff</a>(<span class="keywordtype">double</span>  *src, <span class="keywordtype">double</span> **dst, <span class="keywordtype">int</span> rows, <span class="keywordtype">int</span> cols);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#endif // OB_MATRIX_H</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="ttc" id="namespaceOpenBabel_shtml_ac09eff5e59b6a7dd424dc71f4a37e464"><div class="ttname"><a href="namespaceOpenBabel.shtml#ac09eff5e59b6a7dd424dc71f4a37e464">OpenBabel::print_matrix_ff</a></div><div class="ttdeci">void print_matrix_ff(double **m, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:53</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ab5741f7ec581130f899f17f4d9477aea"><div class="ttname"><a href="namespaceOpenBabel.shtml#ab5741f7ec581130f899f17f4d9477aea">OpenBabel::print_matrix</a></div><div class="ttdeci">void print_matrix(std::vector&lt; std::vector&lt; double &gt; &gt; &amp;m)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:28</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a6e5ee2fd1515457cb4a6e9394a5a14ff"><div class="ttname"><a href="namespaceOpenBabel.shtml#a6e5ee2fd1515457cb4a6e9394a5a14ff">OpenBabel::invert_matrix</a></div><div class="ttdeci">bool invert_matrix(std::vector&lt; std::vector&lt; double &gt; &gt; &amp;m, double &amp;det)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:123</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_afa4aad5bde182eebe57cedcf1727b2fc"><div class="ttname"><a href="namespaceOpenBabel.shtml#afa4aad5bde182eebe57cedcf1727b2fc">OpenBabel::invert_matrix_ff</a></div><div class="ttdeci">bool invert_matrix_ff(double **m, double &amp;det, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:331</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ab323a3745c477d9eb4c796786db39075"><div class="ttname"><a href="namespaceOpenBabel.shtml#ab323a3745c477d9eb4c796786db39075">OpenBabel::print_matrix_f</a></div><div class="ttdeci">void print_matrix_f(double *m, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:40</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a8580b3fa2a0435b2d073c22097d1d35e"><div class="ttname"><a href="namespaceOpenBabel.shtml#a8580b3fa2a0435b2d073c22097d1d35e">OpenBabel::convert_matrix_f</a></div><div class="ttdeci">bool convert_matrix_f(std::vector&lt; std::vector&lt; double &gt; &gt; &amp;src, double *dst)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:426</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_ab06c9b9e02affa91406755a0b9fb28e1"><div class="ttname"><a href="namespaceOpenBabel.shtml#ab06c9b9e02affa91406755a0b9fb28e1">OpenBabel::convert_matrix_ff</a></div><div class="ttdeci">bool convert_matrix_ff(std::vector&lt; std::vector&lt; double &gt; &gt; &amp;src, double **dst)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:437</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a37830c949ab96aad9b5041a82895ba8e"><div class="ttname"><a href="namespaceOpenBabel.shtml#a37830c949ab96aad9b5041a82895ba8e">OpenBabel::mult_matrix_ff</a></div><div class="ttdeci">bool mult_matrix_ff(double **c, double **a, double **b, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:108</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_acbf2348ce7eae39aca355a630f06484c"><div class="ttname"><a href="namespaceOpenBabel.shtml#acbf2348ce7eae39aca355a630f06484c">OpenBabel::convert_matrix_f_ff</a></div><div class="ttdeci">bool convert_matrix_f_ff(double *src, double **dst, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:481</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a067494738d0f55b9df745866cdc3fe56"><div class="ttname"><a href="namespaceOpenBabel.shtml#a067494738d0f55b9df745866cdc3fe56">OpenBabel::mult_matrix_f</a></div><div class="ttdeci">bool mult_matrix_f(double *c, double *a, double *b, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:90</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a8a3508df81e444f875d5f493a1bcbe28"><div class="ttname"><a href="namespaceOpenBabel.shtml#a8a3508df81e444f875d5f493a1bcbe28">OpenBabel::convert_matrix_ff_f</a></div><div class="ttdeci">bool convert_matrix_ff_f(double **src, double *dst, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:495</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_a3b2b9be34ace132aa9506d9ee043824f"><div class="ttname"><a href="namespaceOpenBabel.shtml#a3b2b9be34ace132aa9506d9ee043824f">OpenBabel::mult_matrix</a></div><div class="ttdeci">bool mult_matrix(std::vector&lt; std::vector&lt; double &gt; &gt; &amp;c, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;a, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;b)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:65</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml_afb96cdaafd5073c2e806d36ec4e7eef4"><div class="ttname"><a href="namespaceOpenBabel.shtml#afb96cdaafd5073c2e806d36ec4e7eef4">OpenBabel::invert_matrix_f</a></div><div class="ttdeci">bool invert_matrix_f(double *m, double &amp;det, int rows, int cols)</div><div class="ttdef"><b>Definition:</b> matrix.cpp:221</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:29 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
