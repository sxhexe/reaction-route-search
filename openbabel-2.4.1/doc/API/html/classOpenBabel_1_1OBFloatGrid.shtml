<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBFloatGrid Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classOpenBabel_1_1OBFloatGrid-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBFloatGrid Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="grid_8h_source.shtml">openbabel/grid.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBFloatGrid:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBFloatGrid.png" usemap="#OBFloatGrid_map" alt=""/>
  <map id="OBFloatGrid_map" name="OBFloatGrid_map">
<area href="classOpenBabel_1_1OBGrid.shtml" title="A base grid class. " alt="OBGrid" shape="rect" coords="0,56,82,80"/>
<area href="classOpenBabel_1_1OBBase.shtml" title="Base Class. " alt="OBBase" shape="rect" coords="0,0,82,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7ddbf2110b572079e0dee5def5b97cf9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a7ddbf2110b572079e0dee5def5b97cf9">OBFloatGrid</a> ()</td></tr>
<tr class="separator:a7ddbf2110b572079e0dee5def5b97cf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad84f091329edc731ab0fb4c53640923b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ad84f091329edc731ab0fb4c53640923b">~OBFloatGrid</a> ()</td></tr>
<tr class="separator:ad84f091329edc731ab0fb4c53640923b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80c4eee6725703a22dcce7990eb37552"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a80c4eee6725703a22dcce7990eb37552">Init</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;box, double spacing, double pad=0.0)</td></tr>
<tr class="separator:a80c4eee6725703a22dcce7990eb37552"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8121470b4aa37e344630ffb3c8104cc0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a8121470b4aa37e344630ffb3c8104cc0">GetMin</a> ()</td></tr>
<tr class="separator:a8121470b4aa37e344630ffb3c8104cc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3d065904c33ecf6eaae0199fe6d0592"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ab3d065904c33ecf6eaae0199fe6d0592">GetMin</a> (double *a)</td></tr>
<tr class="separator:ab3d065904c33ecf6eaae0199fe6d0592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfbe5b67160cd2a39b96b48ef6a5ce20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#adfbe5b67160cd2a39b96b48ef6a5ce20">GetMax</a> ()</td></tr>
<tr class="separator:adfbe5b67160cd2a39b96b48ef6a5ce20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1aa43bea8911cf7665f6e2fd151b609c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a1aa43bea8911cf7665f6e2fd151b609c">GetMax</a> (double *a)</td></tr>
<tr class="separator:a1aa43bea8911cf7665f6e2fd151b609c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a242bb524b66c483b2eb2e2f625be2d3b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a242bb524b66c483b2eb2e2f625be2d3b">GetSpacing</a> () const</td></tr>
<tr class="separator:a242bb524b66c483b2eb2e2f625be2d3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78f75c8108f8539c255711029b37cedc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a78f75c8108f8539c255711029b37cedc">GetSpacing</a> (double &amp;s)</td></tr>
<tr class="separator:a78f75c8108f8539c255711029b37cedc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a073500c7bf85d4fed293f6e787a47c74"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a073500c7bf85d4fed293f6e787a47c74">GetScale</a> () const</td></tr>
<tr class="separator:a073500c7bf85d4fed293f6e787a47c74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aaf6a660eaea40e1fdcefb551b6bd34"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a9aaf6a660eaea40e1fdcefb551b6bd34">GetHalfSpace</a> () const</td></tr>
<tr class="separator:a9aaf6a660eaea40e1fdcefb551b6bd34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76dd008ad044b4949752cef1d6c79762"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a76dd008ad044b4949752cef1d6c79762">GetXdim</a> () const</td></tr>
<tr class="separator:a76dd008ad044b4949752cef1d6c79762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6fa0902563ad245871c7de6b6ac2fed"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ac6fa0902563ad245871c7de6b6ac2fed">GetYdim</a> () const</td></tr>
<tr class="separator:ac6fa0902563ad245871c7de6b6ac2fed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e66afdee43c90d94197c4f246e3b7ea"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a2e66afdee43c90d94197c4f246e3b7ea">GetZdim</a> () const</td></tr>
<tr class="separator:a2e66afdee43c90d94197c4f246e3b7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e6665768ad3b8fc18276c6517c0b03d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a6e6665768ad3b8fc18276c6517c0b03d">GetDim</a> (int *a)</td></tr>
<tr class="separator:a6e6665768ad3b8fc18276c6517c0b03d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accffd942b323dd88aebc6fb6c20e1e18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#accffd942b323dd88aebc6fb6c20e1e18">GetMidpointVector</a> ()</td></tr>
<tr class="separator:accffd942b323dd88aebc6fb6c20e1e18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2660623f2838d9b15c4791894840a86"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#af2660623f2838d9b15c4791894840a86">GetXAxis</a> () const</td></tr>
<tr class="separator:af2660623f2838d9b15c4791894840a86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e75c477573adb43c6f52a500ebed42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#aa6e75c477573adb43c6f52a500ebed42">GetYAxis</a> () const</td></tr>
<tr class="separator:aa6e75c477573adb43c6f52a500ebed42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99e8dcac1e888ef4b6094f960aa2f1b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a99e8dcac1e888ef4b6094f960aa2f1b6">GetZAxis</a> () const</td></tr>
<tr class="separator:a99e8dcac1e888ef4b6094f960aa2f1b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e057288f32449cbd79175447a8eec49"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a8e057288f32449cbd79175447a8eec49">SetNumberOfPoints</a> (int nx, int ny, int nz)</td></tr>
<tr class="separator:a8e057288f32449cbd79175447a8eec49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89ab18f2833d6df6028f5570c1c46e22"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a89ab18f2833d6df6028f5570c1c46e22">SetXAxis</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>)</td></tr>
<tr class="separator:a89ab18f2833d6df6028f5570c1c46e22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f5749ad1c1b06bcb3c938e78c75f8f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a2f5749ad1c1b06bcb3c938e78c75f8f9">SetYAxis</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>)</td></tr>
<tr class="separator:a2f5749ad1c1b06bcb3c938e78c75f8f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcbcb0e0537b5fa2c834ffa962f37b2c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#adcbcb0e0537b5fa2c834ffa962f37b2c">SetZAxis</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>)</td></tr>
<tr class="separator:adcbcb0e0537b5fa2c834ffa962f37b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b9fb0de3277dd55625e632bc4f0ab5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;origin, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;x, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;y, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;z)</td></tr>
<tr class="separator:a0b9fb0de3277dd55625e632bc4f0ab5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a009627e179cde33c9c0150d6a06214fd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a009627e179cde33c9c0150d6a06214fd">SetLimits</a> (const double origin[3], const double x[3], const double y[3], const double z[3])</td></tr>
<tr class="separator:a009627e179cde33c9c0150d6a06214fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6501513ff0a2a1cf7960b172d5022926"><td class="memItemLeft" align="right" valign="top">std::vector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a6501513ff0a2a1cf7960b172d5022926">GetDataVector</a> ()</td></tr>
<tr class="separator:a6501513ff0a2a1cf7960b172d5022926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a958a1ed547047fb833c200c96686d4a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a958a1ed547047fb833c200c96686d4a7">SetVals</a> (const std::vector&lt; double &gt; &amp;vals)</td></tr>
<tr class="separator:a958a1ed547047fb833c200c96686d4a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eb7667a7f7ac9876e632c35231fc44a"><td class="memItemLeft" align="right" valign="top">double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a5eb7667a7f7ac9876e632c35231fc44a">GetVals</a> ()</td></tr>
<tr class="separator:a5eb7667a7f7ac9876e632c35231fc44a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac52efdf630f7f15198bf57bff1520113"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ac52efdf630f7f15198bf57bff1520113">GetValue</a> (int i, int j, int k)</td></tr>
<tr class="separator:ac52efdf630f7f15198bf57bff1520113"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b7ebc269d7a65e00d8eae51a5f01f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a70b7ebc269d7a65e00d8eae51a5f01f4">SetVals</a> (double *ptr)</td></tr>
<tr class="separator:a70b7ebc269d7a65e00d8eae51a5f01f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e87e5ca8491e61def25764da4fdb46d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a8e87e5ca8491e61def25764da4fdb46d">SetValue</a> (int i, int j, int k, double val)</td></tr>
<tr class="separator:a8e87e5ca8491e61def25764da4fdb46d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a6903cb1be80ac1055925f1074b75a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a2a6903cb1be80ac1055925f1074b75a7">Center</a> ()</td></tr>
<tr class="separator:a2a6903cb1be80ac1055925f1074b75a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c91177f625939fc2607de9003b1c728"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a0c91177f625939fc2607de9003b1c728">Inject</a> (double x, double y, double z)</td></tr>
<tr class="separator:a0c91177f625939fc2607de9003b1c728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3b10d37b8b9c5e049a43b7f481c3062"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ab3b10d37b8b9c5e049a43b7f481c3062">IndexToCoords</a> (int idx, double &amp;x, double &amp;y, double &amp;z)</td></tr>
<tr class="separator:ab3b10d37b8b9c5e049a43b7f481c3062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab508ca499d4968d05e172c2682a0138c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ab508ca499d4968d05e172c2682a0138c">CoordsToIndex</a> (int *, double *)</td></tr>
<tr class="separator:ab508ca499d4968d05e172c2682a0138c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36e846af36e72a94ea8f316667b8a2e4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a36e846af36e72a94ea8f316667b8a2e4">CoordsToIndex</a> (double x, double y, double z)</td></tr>
<tr class="separator:a36e846af36e72a94ea8f316667b8a2e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cc972540451ceedb7215b3bc291c9d7"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a7cc972540451ceedb7215b3bc291c9d7">Interpolate</a> (double, double, double)</td></tr>
<tr class="separator:a7cc972540451ceedb7215b3bc291c9d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b04b4e2c0917adc5863f867b6b8c6b4"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a3b04b4e2c0917adc5863f867b6b8c6b4">InterpolateDerivatives</a> (double, double, double, double *derivatives)</td></tr>
<tr class="separator:a3b04b4e2c0917adc5863f867b6b8c6b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac64ef48829b8b0825d823194065a813e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">Init</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;box)</td></tr>
<tr class="separator:ac64ef48829b8b0825d823194065a813e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78a7421f0b86f78f1e71d5f7dde5d888"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a78a7421f0b86f78f1e71d5f7dde5d888">GetXmin</a> () const</td></tr>
<tr class="separator:a78a7421f0b86f78f1e71d5f7dde5d888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483c002bee156c03432dd5c21b72ebfb"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a483c002bee156c03432dd5c21b72ebfb">GetYmin</a> () const</td></tr>
<tr class="separator:a483c002bee156c03432dd5c21b72ebfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5912d4a44bca1102e5ef4f8bdacbd567"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a5912d4a44bca1102e5ef4f8bdacbd567">GetZmin</a> () const</td></tr>
<tr class="separator:a5912d4a44bca1102e5ef4f8bdacbd567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90db322584c8fb78b834a9c4795eb76b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a90db322584c8fb78b834a9c4795eb76b">GetXmax</a> () const</td></tr>
<tr class="separator:a90db322584c8fb78b834a9c4795eb76b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bb464c60f78a58fe15143ec8aeff03d"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a9bb464c60f78a58fe15143ec8aeff03d">GetYmax</a> () const</td></tr>
<tr class="separator:a9bb464c60f78a58fe15143ec8aeff03d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca980d893a90a00e425dbb83a97b20c8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#aca980d893a90a00e425dbb83a97b20c8">GetZmax</a> () const</td></tr>
<tr class="separator:aca980d893a90a00e425dbb83a97b20c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a499643ad2be70afaa1607b4affb310"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a2a499643ad2be70afaa1607b4affb310">PointIsInBox</a> (double x, double y, double z)</td></tr>
<tr class="separator:a2a499643ad2be70afaa1607b4affb310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad557d62926d0bc4cea092baba4466906"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#ad557d62926d0bc4cea092baba4466906">PointIsInBox</a> (double *c)</td></tr>
<tr class="separator:ad557d62926d0bc4cea092baba4466906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f56880aa1ad845fbc6c0c7a4ce45d3b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a4f56880aa1ad845fbc6c0c7a4ce45d3b">PointIsInBox</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v)</td></tr>
<tr class="separator:a4f56880aa1ad845fbc6c0c7a4ce45d3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad12fd937da5f4b0c4562888252fe214b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b">Clear</a> ()</td></tr>
<tr class="separator:ad12fd937da5f4b0c4562888252fe214b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdc8ffeb0749b563e1108a9ceaa0b394"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *, <a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *)</td></tr>
<tr class="separator:abdc8ffeb0749b563e1108a9ceaa0b394"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">CastAndClear</a> (bool clear=true)</td></tr>
<tr class="separator:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a6c35f6a88ad291ed821c856e4d887f"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a0a6c35f6a88ad291ed821c856e4d887f">GetTitle</a> (bool replaceNewlines=true) const</td></tr>
<tr class="separator:a0a6c35f6a88ad291ed821c856e4d887f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a366c8a142b8c16554597e82320dfd0e0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">SetTitle</a> (const char *)</td></tr>
<tr class="separator:a366c8a142b8c16554597e82320dfd0e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Generic data handling methods (via OBGenericData)</div></td></tr>
<tr class="memitem:a86dd58fc1da5652d70e823fa77cc1637"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a86dd58fc1da5652d70e823fa77cc1637">HasData</a> (const std::string &amp;)</td></tr>
<tr class="separator:a86dd58fc1da5652d70e823fa77cc1637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01b429ffcaf47cf265acd439ed2faca0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>
<tr class="separator:a01b429ffcaf47cf265acd439ed2faca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cb103f12f49d86132ece200000da830"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6cb103f12f49d86132ece200000da830">HasData</a> (const unsigned int type)</td></tr>
<tr class="separator:a6cb103f12f49d86132ece200000da830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a797e5b4d20b6233062d2fdba78a08e06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>
<tr class="separator:a797e5b4d20b6233062d2fdba78a08e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab586df65e3f115b69510820b34098ce9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>
<tr class="separator:ab586df65e3f115b69510820b34098ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a030adad5b052ff3d390f13e1f981201e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a030adad5b052ff3d390f13e1f981201e">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&gt; &amp;)</td></tr>
<tr class="separator:a030adad5b052ff3d390f13e1f981201e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa068a2a7b64d2ee73aedb8c6e3cf0c4c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">DeleteData</a> (const std::string &amp;s)</td></tr>
<tr class="separator:aa068a2a7b64d2ee73aedb8c6e3cf0c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6b0ec89bfea783825b3b466e4dbc00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr class="separator:adb6b0ec89bfea783825b3b466e4dbc00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6f692332837387535e337413d0100de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa6f692332837387535e337413d0100de">CloneData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr class="separator:aa6f692332837387535e337413d0100de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de970fc10391cb7f06c77e3b492f582"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a2de970fc10391cb7f06c77e3b492f582">DataSize</a> () const</td></tr>
<tr class="separator:a2de970fc10391cb7f06c77e3b492f582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee672d91b694547fb072fdaa8e03cfe9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aee672d91b694547fb072fdaa8e03cfe9">GetData</a> (const unsigned int type)</td></tr>
<tr class="separator:aee672d91b694547fb072fdaa8e03cfe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f0eade8b5924eec28ad50f0ce2031f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a22f0eade8b5924eec28ad50f0ce2031f">GetData</a> (const std::string &amp;)</td></tr>
<tr class="separator:a22f0eade8b5924eec28ad50f0ce2031f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483b277678a8ca48998742c80985fd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>
<tr class="separator:a483b277678a8ca48998742c80985fd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a551ff0a0ed3fa58745dff0ecacdaa"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>
<tr class="separator:a90a551ff0a0ed3fa58745dff0ecacdaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa959146c3f7b458009dc04f61b5a2e7f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa959146c3f7b458009dc04f61b5a2e7f">GetData</a> (<a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source)</td></tr>
<tr class="separator:aa959146c3f7b458009dc04f61b5a2e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb56decc1b824c9fad980fc22e1d778c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#afb56decc1b824c9fad980fc22e1d778c">GetAllData</a> (const unsigned int type)</td></tr>
<tr class="separator:afb56decc1b824c9fad980fc22e1d778c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15b47c65393d46fde62d1f0a19bcf9fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a> ()</td></tr>
<tr class="separator:a15b47c65393d46fde62d1f0a19bcf9fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a117c836710dd3aaa8748509262a5c280"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">EndData</a> ()</td></tr>
<tr class="separator:a117c836710dd3aaa8748509262a5c280"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6bb6ed5c064e3957d8dd03aba51e61f7"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>
<tr class="separator:a6bb6ed5c064e3957d8dd03aba51e61f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a7d7a76b9f2cf24040d65d2387f01ebd1"><td class="memItemLeft" align="right" valign="top">std::vector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a7d7a76b9f2cf24040d65d2387f01ebd1">_values</a></td></tr>
<tr class="separator:a7d7a76b9f2cf24040d65d2387f01ebd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d1e1b6b09eecaec2670dd0f8caa6a1"><td class="memItemLeft" align="right" valign="top">int *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a87d1e1b6b09eecaec2670dd0f8caa6a1">_ival</a></td></tr>
<tr class="separator:a87d1e1b6b09eecaec2670dd0f8caa6a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63f7b06cde4a057a2c76f8af0ff28e91"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a63f7b06cde4a057a2c76f8af0ff28e91">_midz</a></td></tr>
<tr class="separator:a63f7b06cde4a057a2c76f8af0ff28e91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae65bd2fad82143233d356b5767f7a37f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ae65bd2fad82143233d356b5767f7a37f">_midx</a></td></tr>
<tr class="separator:ae65bd2fad82143233d356b5767f7a37f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2de17d8c54e293efbddc7b1eefa0c05"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ae2de17d8c54e293efbddc7b1eefa0c05">_midy</a></td></tr>
<tr class="separator:ae2de17d8c54e293efbddc7b1eefa0c05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c3c42170d23cae468eb5885aa913ca2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a7c3c42170d23cae468eb5885aa913ca2">_ydim</a></td></tr>
<tr class="separator:a7c3c42170d23cae468eb5885aa913ca2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaec2f9d77f4de3a82e0149113b6416a2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#aaec2f9d77f4de3a82e0149113b6416a2">_xdim</a></td></tr>
<tr class="separator:aaec2f9d77f4de3a82e0149113b6416a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4d2282bc8cc51ffa66eb6c17aae17ee"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#aa4d2282bc8cc51ffa66eb6c17aae17ee">_zdim</a></td></tr>
<tr class="separator:aa4d2282bc8cc51ffa66eb6c17aae17ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a382cc46cd19ec2a1e726d9c8191cedea"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a382cc46cd19ec2a1e726d9c8191cedea">_spacing</a></td></tr>
<tr class="separator:a382cc46cd19ec2a1e726d9c8191cedea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86660f38a65032dffc210cb116735e95"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a86660f38a65032dffc210cb116735e95">_inv_spa</a></td></tr>
<tr class="separator:a86660f38a65032dffc210cb116735e95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a314a0d1d51e74f040278d0de06f075b5"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a314a0d1d51e74f040278d0de06f075b5">_halfSpace</a></td></tr>
<tr class="separator:a314a0d1d51e74f040278d0de06f075b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a774e5b3910ccdafb41ac680e319085d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a774e5b3910ccdafb41ac680e319085d1">_xAxis</a></td></tr>
<tr class="separator:a774e5b3910ccdafb41ac680e319085d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a526e1a071db304e1970afc1bdf1769f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a526e1a071db304e1970afc1bdf1769f0">_yAxis</a></td></tr>
<tr class="separator:a526e1a071db304e1970afc1bdf1769f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d3a8c489526216952d17734085e7287"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a0d3a8c489526216952d17734085e7287">_zAxis</a></td></tr>
<tr class="separator:a0d3a8c489526216952d17734085e7287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b91634c838cfa025070df146452d4d9"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a7b91634c838cfa025070df146452d4d9">_xmin</a></td></tr>
<tr class="separator:a7b91634c838cfa025070df146452d4d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3a779f1daff2a7dbe79fa4e0b9def75"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#aa3a779f1daff2a7dbe79fa4e0b9def75">_xmax</a></td></tr>
<tr class="separator:aa3a779f1daff2a7dbe79fa4e0b9def75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775215217e5f88eabb13d886d3f28e6a"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a775215217e5f88eabb13d886d3f28e6a">_ymin</a></td></tr>
<tr class="separator:a775215217e5f88eabb13d886d3f28e6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89dce702ed281c7c1ca2e88f6a3a00b0"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#a89dce702ed281c7c1ca2e88f6a3a00b0">_ymax</a></td></tr>
<tr class="separator:a89dce702ed281c7c1ca2e88f6a3a00b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2367ec6a3d166e433fec916c5826aa1"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#ad2367ec6a3d166e433fec916c5826aa1">_zmin</a></td></tr>
<tr class="separator:ad2367ec6a3d166e433fec916c5826aa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe522732504118f0d41304e111c94e38"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGrid.shtml#abe522732504118f0d41304e111c94e38">_zmax</a></td></tr>
<tr class="separator:abe522732504118f0d41304e111c94e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7811cf8aadbf3b3477c560b0ef2f797"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>
<tr class="separator:af7811cf8aadbf3b3477c560b0ef2f797"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a0d83407c5f3e5136e849127939db3a70"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a0d83407c5f3e5136e849127939db3a70">operator&lt;&lt;</a> (std::ostream &amp;, const <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;)</td></tr>
<tr class="separator:a0d83407c5f3e5136e849127939db3a70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad47b6c9bc3a81f0b8ae7047ee8132488"><td class="memItemLeft" align="right" valign="top">std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ad47b6c9bc3a81f0b8ae7047ee8132488">operator&gt;&gt;</a> (std::istream &amp;, <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;)</td></tr>
<tr class="separator:ad47b6c9bc3a81f0b8ae7047ee8132488"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Handle double precision floating point 3D grids (e.g., charge density around an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>) </p>
<p>Supports input/output and base functionality for simple 3D discrete grids of some function &ndash; typically around a molecule. Typically you will want to use <a class="el" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential. ">OBGridData</a> which uses <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol) ...">OBFloatGrid</a> to store its data. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential. ">OBGridData</a> </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7ddbf2110b572079e0dee5def5b97cf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ddbf2110b572079e0dee5def5b97cf9">&sect;&nbsp;</a></span>OBFloatGrid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad84f091329edc731ab0fb4c53640923b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad84f091329edc731ab0fb4c53640923b">&sect;&nbsp;</a></span>~OBFloatGrid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a80c4eee6725703a22dcce7990eb37552"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80c4eee6725703a22dcce7990eb37552">&sect;&nbsp;</a></span>Init() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>spacing</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>pad</em> = <code>0.0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initialize the grid using this molecule as a box (plus a padding) with the supplied spacing between points. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="a8121470b4aa37e344630ffb3c8104cc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8121470b4aa37e344630ffb3c8104cc0">&sect;&nbsp;</a></span>GetMin() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the minimum point in the grid. </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="ab3d065904c33ecf6eaae0199fe6d0592"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3d065904c33ecf6eaae0199fe6d0592">&sect;&nbsp;</a></span>GetMin() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void GetMin </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the minimum point in the grid. </p><dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000049">Deprecated:</a></b></dt><dd>Will be removed. Use</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a8121470b4aa37e344630ffb3c8104cc0">GetMin()</a> </dd></dl>

</div>
</div>
<a id="adfbe5b67160cd2a39b96b48ef6a5ce20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfbe5b67160cd2a39b96b48ef6a5ce20">&sect;&nbsp;</a></span>GetMax() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMax </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the minimum point in the grid. </dd></dl>

</div>
</div>
<a id="a1aa43bea8911cf7665f6e2fd151b609c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1aa43bea8911cf7665f6e2fd151b609c">&sect;&nbsp;</a></span>GetMax() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void GetMax </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the maximum point in the grid. </p><dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000050">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#adfbe5b67160cd2a39b96b48ef6a5ce20">GetMax()</a> </dd></dl>

</div>
</div>
<a id="a242bb524b66c483b2eb2e2f625be2d3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a242bb524b66c483b2eb2e2f625be2d3b">&sect;&nbsp;</a></span>GetSpacing() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetSpacing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The grid spacing. </dd></dl>

</div>
</div>
<a id="a78f75c8108f8539c255711029b37cedc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78f75c8108f8539c255711029b37cedc">&sect;&nbsp;</a></span>GetSpacing() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void GetSpacing </td>
          <td>(</td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the grid spacing. </p><dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000051">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a242bb524b66c483b2eb2e2f625be2d3b">GetSpacing()</a> </dd></dl>

</div>
</div>
<a id="a073500c7bf85d4fed293f6e787a47c74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a073500c7bf85d4fed293f6e787a47c74">&sect;&nbsp;</a></span>GetScale()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetScale </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Inverse of the grid spacing. </dd></dl>

</div>
</div>
<a id="a9aaf6a660eaea40e1fdcefb551b6bd34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aaf6a660eaea40e1fdcefb551b6bd34">&sect;&nbsp;</a></span>GetHalfSpace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetHalfSpace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Half of the spacing between grid points. </dd></dl>

</div>
</div>
<a id="a76dd008ad044b4949752cef1d6c79762"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76dd008ad044b4949752cef1d6c79762">&sect;&nbsp;</a></span>GetXdim()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetXdim </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Size of the grid in the x dimension. </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="ac6fa0902563ad245871c7de6b6ac2fed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6fa0902563ad245871c7de6b6ac2fed">&sect;&nbsp;</a></span>GetYdim()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetYdim </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Size of the grid in the y dimension. </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="a2e66afdee43c90d94197c4f246e3b7ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e66afdee43c90d94197c4f246e3b7ea">&sect;&nbsp;</a></span>GetZdim()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int GetZdim </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Size of the grid in the z dimension. </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>.</p>

</div>
</div>
<a id="a6e6665768ad3b8fc18276c6517c0b03d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e6665768ad3b8fc18276c6517c0b03d">&sect;&nbsp;</a></span>GetDim()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void GetDim </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the x, y and z dimensions (must pass an double[3] at least). </p><dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000052">Deprecated:</a></b></dt><dd>May be removed in future. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a76dd008ad044b4949752cef1d6c79762">GetXdim()</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#ac6fa0902563ad245871c7de6b6ac2fed">GetYdim()</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a2e66afdee43c90d94197c4f246e3b7ea">GetZdim()</a> </dd></dl>

</div>
</div>
<a id="accffd942b323dd88aebc6fb6c20e1e18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accffd942b323dd88aebc6fb6c20e1e18">&sect;&nbsp;</a></span>GetMidpointVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetMidpointVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Position of the center of the grid. </dd></dl>

</div>
</div>
<a id="af2660623f2838d9b15c4791894840a86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2660623f2838d9b15c4791894840a86">&sect;&nbsp;</a></span>GetXAxis()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetXAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>X axis direction. </dd></dl>

</div>
</div>
<a id="aa6e75c477573adb43c6f52a500ebed42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6e75c477573adb43c6f52a500ebed42">&sect;&nbsp;</a></span>GetYAxis()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetYAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Y axis direction. </dd></dl>

</div>
</div>
<a id="a99e8dcac1e888ef4b6094f960aa2f1b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99e8dcac1e888ef4b6094f960aa2f1b6">&sect;&nbsp;</a></span>GetZAxis()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetZAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Z axis direction. </dd></dl>

</div>
</div>
<a id="a8e057288f32449cbd79175447a8eec49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e057288f32449cbd79175447a8eec49">&sect;&nbsp;</a></span>SetNumberOfPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumberOfPoints </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nz</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the number of points in the x, y and z directions. </p>

</div>
</div>
<a id="a89ab18f2833d6df6028f5570c1c46e22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89ab18f2833d6df6028f5570c1c46e22">&sect;&nbsp;</a></span>SetXAxis()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetXAxis </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the direction of the x axis. </p>

</div>
</div>
<a id="a2f5749ad1c1b06bcb3c938e78c75f8f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f5749ad1c1b06bcb3c938e78c75f8f9">&sect;&nbsp;</a></span>SetYAxis()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetYAxis </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the direction of the y axis. </p>

</div>
</div>
<a id="adcbcb0e0537b5fa2c834ffa962f37b2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcbcb0e0537b5fa2c834ffa962f37b2c">&sect;&nbsp;</a></span>SetZAxis()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetZAxis </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the direction of the z axis. </p>

</div>
</div>
<a id="a0b9fb0de3277dd55625e632bc4f0ab5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b9fb0de3277dd55625e632bc4f0ab5b">&sect;&nbsp;</a></span>SetLimits() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>origin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the limits (i.e., the origin point and the axes) NOTE: You must set the number of points first, with SetNumberOfPoints so the grid spacing can be calculated </p>

</div>
</div>
<a id="a009627e179cde33c9c0150d6a06214fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a009627e179cde33c9c0150d6a06214fd">&sect;&nbsp;</a></span>SetLimits() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLimits </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>origin</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>x</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>y</em>[3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>z</em>[3]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000053">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a0b9fb0de3277dd55625e632bc4f0ab5b">SetLimits(const vector3&amp; origin, const vector3&amp; x, const vector3&amp; y, const vector3&amp; z)</a> </dd></dl>

</div>
</div>
<a id="a6501513ff0a2a1cf7960b172d5022926"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6501513ff0a2a1cf7960b172d5022926">&sect;&nbsp;</a></span>GetDataVector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; double &gt; GetDataVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a copy of the vector that stores the points in the grid. </p>

</div>
</div>
<a id="a958a1ed547047fb833c200c96686d4a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a958a1ed547047fb833c200c96686d4a7">&sect;&nbsp;</a></span>SetVals() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVals </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>vals</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values in the grid to those in the vector passed. Note that the vector must be of the same dimensions as the grid based on the values given in <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a8e057288f32449cbd79175447a8eec49" title="Sets the number of points in the x, y and z directions. ">SetNumberOfPoints(int nx, int ny, int nz)</a>. </p>

</div>
</div>
<a id="a5eb7667a7f7ac9876e632c35231fc44a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5eb7667a7f7ac9876e632c35231fc44a">&sect;&nbsp;</a></span>GetVals()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double* GetVals </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Pointer to the first element of the grid point data stored as a one dimensional array. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000054">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a6501513ff0a2a1cf7960b172d5022926" title="Get a copy of the vector that stores the points in the grid. ">GetDataVector()</a> </dd></dl>

</div>
</div>
<a id="ac52efdf630f7f15198bf57bff1520113"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac52efdf630f7f15198bf57bff1520113">&sect;&nbsp;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>k</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Value at the point in the grid specified by i, j and k. </dd></dl>

</div>
</div>
<a id="a70b7ebc269d7a65e00d8eae51a5f01f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70b7ebc269d7a65e00d8eae51a5f01f4">&sect;&nbsp;</a></span>SetVals() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetVals </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000055">Deprecated:</a></b></dt><dd>Will be removed. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml#a958a1ed547047fb833c200c96686d4a7">SetVals(const std::vector&lt;double&gt; &amp; vals)</a> </dd></dl>

</div>
</div>
<a id="a8e87e5ca8491e61def25764da4fdb46d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e87e5ca8491e61def25764da4fdb46d">&sect;&nbsp;</a></span>SetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SetValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the value at the grid point specified by i, j and k to val. </p>

</div>
</div>
<a id="a2a6903cb1be80ac1055925f1074b75a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a6903cb1be80ac1055925f1074b75a7">&sect;&nbsp;</a></span>Center()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> Center </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Position of the center of the grid. </dd></dl>

</div>
</div>
<a id="a0c91177f625939fc2607de9003b1c728"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c91177f625939fc2607de9003b1c728">&sect;&nbsp;</a></span>Inject()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Inject </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the value at the given point (rounding as needed) </dd></dl>

</div>
</div>
<a id="ab3b10d37b8b9c5e049a43b7f481c3062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3b10d37b8b9c5e049a43b7f481c3062">&sect;&nbsp;</a></span>IndexToCoords()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IndexToCoords </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab508ca499d4968d05e172c2682a0138c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab508ca499d4968d05e172c2682a0138c">&sect;&nbsp;</a></span>CoordsToIndex() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CoordsToIndex </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a36e846af36e72a94ea8f316667b8a2e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36e846af36e72a94ea8f316667b8a2e4">&sect;&nbsp;</a></span>CoordsToIndex() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CoordsToIndex </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7cc972540451ceedb7215b3bc291c9d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cc972540451ceedb7215b3bc291c9d7">&sect;&nbsp;</a></span>Interpolate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Interpolate </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the interpolated value for the given point </dd></dl>

</div>
</div>
<a id="a3b04b4e2c0917adc5863f867b6b8c6b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b04b4e2c0917adc5863f867b6b8c6b4">&sect;&nbsp;</a></span>InterpolateDerivatives()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double InterpolateDerivatives </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>derivatives</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the interpolated value for the given point and set the dx, dy, dz derivatives </dd></dl>

</div>
</div>
<a id="ac64ef48829b8b0825d823194065a813e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac64ef48829b8b0825d823194065a813e">&sect;&nbsp;</a></span>Init() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>box</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the grid based on a box around the molecule <code>box</code> Subclasses should overload this method &ndash; this only tracks the dimension of the box itself. </p>

</div>
</div>
<a id="a78a7421f0b86f78f1e71d5f7dde5d888"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78a7421f0b86f78f1e71d5f7dde5d888">&sect;&nbsp;</a></span>GetXmin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetXmin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the minimum x point of the grid </dd></dl>

</div>
</div>
<a id="a483c002bee156c03432dd5c21b72ebfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483c002bee156c03432dd5c21b72ebfb">&sect;&nbsp;</a></span>GetYmin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetYmin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the minimum y point of the grid </dd></dl>

</div>
</div>
<a id="a5912d4a44bca1102e5ef4f8bdacbd567"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5912d4a44bca1102e5ef4f8bdacbd567">&sect;&nbsp;</a></span>GetZmin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetZmin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the minimum z point of the grid </dd></dl>

</div>
</div>
<a id="a90db322584c8fb78b834a9c4795eb76b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90db322584c8fb78b834a9c4795eb76b">&sect;&nbsp;</a></span>GetXmax()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetXmax </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum x point of the grid </dd></dl>

</div>
</div>
<a id="a9bb464c60f78a58fe15143ec8aeff03d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bb464c60f78a58fe15143ec8aeff03d">&sect;&nbsp;</a></span>GetYmax()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetYmax </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum y point of the grid </dd></dl>

</div>
</div>
<a id="aca980d893a90a00e425dbb83a97b20c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca980d893a90a00e425dbb83a97b20c8">&sect;&nbsp;</a></span>GetZmax()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetZmax </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum z point of the grid </dd></dl>

</div>
</div>
<a id="a2a499643ad2be70afaa1607b4affb310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a499643ad2be70afaa1607b4affb310">&sect;&nbsp;</a></span>PointIsInBox() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool PointIsInBox </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the supplied XYZ coordinates fall within the box </dd></dl>

</div>
</div>
<a id="ad557d62926d0bc4cea092baba4466906"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad557d62926d0bc4cea092baba4466906">&sect;&nbsp;</a></span>PointIsInBox() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool PointIsInBox </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the point falls within the box </dd></dl>

</div>
</div>
<a id="a4f56880aa1ad845fbc6c0c7a4ce45d3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f56880aa1ad845fbc6c0c7a4ce45d3b">&sect;&nbsp;</a></span>PointIsInBox() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool PointIsInBox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the point falls within the box </dd></dl>

</div>
</div>
<a id="ad12fd937da5f4b0c4562888252fe214b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad12fd937da5f4b0c4562888252fe214b">&sect;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear any and all data associated with this object. </p>
<p>This method can be called by <a class="el" href="classOpenBabel_1_1OBConversion.shtml#a1204f9b613067a04ebfe881a58775918" title="Reads an object of a class derived from OBBase into pOb. ">OBConversion::Read()</a> before reading data. Derived classes should be sure to call <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object. ">OBBase::Clear()</a> to remove inherited generic data.</p>
<dl class="section return"><dt>Returns</dt><dd>Whether the call was successful. </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.1. </dd></dl>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad12fd937da5f4b0c4562888252fe214b">OBMol</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad12fd937da5f4b0c4562888252fe214b">OBAtom</a>, <a class="el" href="classOpenBabel_1_1OBReaction.shtml#ad12fd937da5f4b0c4562888252fe214b">OBReaction</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>.</p>

</div>
</div>
<a id="abdc8ffeb0749b563e1108a9ceaa0b394"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdc8ffeb0749b563e1108a9ceaa0b394">&sect;&nbsp;</a></span>DoTransformations()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Perform a set of transformations specified by the user</p>
<p>Typically these are program options to filter or modify an object For example, see <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab72bba66cc9e40fb3b657a30d87bbe6d">OBMol::ClassDescription()</a> Base type does nothing </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol</a>.</p>

</div>
</div>
<a id="a6bb6ed5c064e3957d8dd03aba51e61f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bb6ed5c064e3957d8dd03aba51e61f7">&sect;&nbsp;</a></span>ClassDescription()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A list of descriptions of command-line options for <a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations()</a> </dd></dl>

</div>
</div>
<a id="ab2f0cea1c162bbe8dd603528a3da5c87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2f0cea1c162bbe8dd603528a3da5c87">&sect;&nbsp;</a></span>CastAndClear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T* CastAndClear </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clear</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>By default clears the object. Called from ReadMolecule of most format classes. </p>

</div>
</div>
<a id="a0a6c35f6a88ad291ed821c856e4d887f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a6c35f6a88ad291ed821c856e4d887f">&sect;&nbsp;</a></span>GetTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* GetTitle </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>replaceNewlines</em> = <code>true</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base type does nothing Made virtual around r3535 to simplify code which passes around OBBase*. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a2ac1fac8a7d7ad373c39710b62b3e0a7">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a id="a366c8a142b8c16554597e82320dfd0e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a366c8a142b8c16554597e82320dfd0e0">&sect;&nbsp;</a></span>SetTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetTitle </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#acfe3b729dc90c4c5e21684e3a60653af">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a id="a86dd58fc1da5652d70e823fa77cc1637"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86dd58fc1da5652d70e823fa77cc1637">&sect;&nbsp;</a></span>HasData() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a4e794d96851deaad479e17b30928a3cd">OBDescriptor::MatchPairData()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a2a5208bfd803385534526eea570bf6b0">OBMoleculeFormat::ReadChemObjectImpl()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="a01b429ffcaf47cf265acd439ed2faca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01b429ffcaf47cf265acd439ed2faca0">&sect;&nbsp;</a></span>HasData() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists </dd></dl>

</div>
</div>
<a id="a6cb103f12f49d86132ece200000da830"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cb103f12f49d86132ece200000da830">&sect;&nbsp;</a></span>HasData() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists, for a given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a id="a797e5b4d20b6233062d2fdba78a08e06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a797e5b4d20b6233062d2fdba78a08e06">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete any data matching the given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1a089d9c827830b5a9a2e644b267e510">OBDescriptor::DeleteProperties()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a2d560c7f2e4a9fdd1814ed8e09bd02">OBMol::RenumberAtoms()</a>.</p>

</div>
</div>
<a id="ab586df65e3f115b69510820b34098ce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab586df65e3f115b69510820b34098ce9">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>gd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete the given generic data from this object. </p>

</div>
</div>
<a id="a030adad5b052ff3d390f13e1f981201e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a030adad5b052ff3d390f13e1f981201e">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>vg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete all of the given generic data from this object. </p>

</div>
</div>
<a id="aa068a2a7b64d2ee73aedb8c6e3cf0c4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes the generic data with the specified attribute, returning false if not found. </p>

</div>
</div>
<a id="adb6b0ec89bfea783825b3b466e4dbc00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb6b0ec89bfea783825b3b466e4dbc00">&sect;&nbsp;</a></span>SetData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a data object; does nothing if d==NULL. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ac14285658929bd5af45a1560cb1ec15b">AliasData::RevertToAliasForm()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="aa6f692332837387535e337413d0100de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6f692332837387535e337413d0100de">&sect;&nbsp;</a></span>CloneData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CloneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a copy of a data object; does nothing if d == NULL </p><dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>.</p>

</div>
</div>
<a id="a2de970fc10391cb7f06c77e3b492f582"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2de970fc10391cb7f06c77e3b492f582">&sect;&nbsp;</a></span>DataSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t DataSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data. ">OBGenericData</a> items attached to this molecule. </dd></dl>

</div>
</div>
<a id="aee672d91b694547fb072fdaa8e03cfe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee672d91b694547fb072fdaa8e03cfe9">&sect;&nbsp;</a></span>GetData() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the first matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> or NULL if nothing matches </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#a632be87a51811b515f7e9a5fc18e4476">OpenBabel::extract_thermochemistry()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a48b73b591ecad6e541b5ceedb6618715">OBMolAngleIter::OBMolAngleIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a15547553c4072355819acbcf350dde77">OBMolRingIter::OBMolRingIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml#a7746689f376b4b9f2fc6a103dc101d38">OBMolTorsionIter::OBMolTorsionIter()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>.</p>

</div>
</div>
<a id="a22f0eade8b5924eec28ad50f0ce2031f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f0eade8b5924eec28ad50f0ce2031f">&sect;&nbsp;</a></span>GetData() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a id="a483b277678a8ca48998742c80985fd0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483b277678a8ca48998742c80985fd0b">&sect;&nbsp;</a></span>GetData() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a id="a90a551ff0a0ed3fa58745dff0ecacdaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a551ff0a0ed3fa58745dff0ecacdaa">&sect;&nbsp;</a></span>GetData() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all data, suitable for iterating </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="aa959146c3f7b458009dc04f61b5a2e7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa959146c3f7b458009dc04f61b5a2e7f">&sect;&nbsp;</a></span>GetData() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all data with a specific origin, suitable for iterating </dd></dl>

</div>
</div>
<a id="afb56decc1b824c9fad980fc22e1d778c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb56decc1b824c9fad980fc22e1d778c">&sect;&nbsp;</a></span>GetAllData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetAllData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the all matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> or an empty vector if nothing matches </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3280c4291f365e26ad615eb38c877b25">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="a15b47c65393d46fde62d1f0a19bcf9fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15b47c65393d46fde62d1f0a19bcf9fa">&sect;&nbsp;</a></span>BeginData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> BeginData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator pointing to the beginning of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a117c836710dd3aaa8748509262a5c280"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a117c836710dd3aaa8748509262a5c280">&sect;&nbsp;</a></span>EndData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> EndData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator pointing to the end of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a0d83407c5f3e5136e849127939db3a70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d83407c5f3e5136e849127939db3a70">&sect;&nbsp;</a></span>operator<<</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;&#160;</td>
          <td class="paramname"><em>fg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad47b6c9bc3a81f0b8ae7047ee8132488"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad47b6c9bc3a81f0b8ae7047ee8132488">&sect;&nbsp;</a></span>operator>></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::istream&amp; operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">std::istream &amp;&#160;</td>
          <td class="paramname"><em>is</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBFloatGrid.shtml">OBFloatGrid</a> &amp;&#160;</td>
          <td class="paramname"><em>fg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a7d7a76b9f2cf24040d65d2387f01ebd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d7a76b9f2cf24040d65d2387f01ebd1">&sect;&nbsp;</a></span>_values</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;double&gt; _values</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>floating point values </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a87d1e1b6b09eecaec2670dd0f8caa6a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87d1e1b6b09eecaec2670dd0f8caa6a1">&sect;&nbsp;</a></span>_ival</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int* _ival</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>for integer values (deprecated) </p>

</div>
</div>
<a id="a63f7b06cde4a057a2c76f8af0ff28e91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63f7b06cde4a057a2c76f8af0ff28e91">&sect;&nbsp;</a></span>_midz</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _midz</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="ae65bd2fad82143233d356b5767f7a37f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae65bd2fad82143233d356b5767f7a37f">&sect;&nbsp;</a></span>_midx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _midx</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="ae2de17d8c54e293efbddc7b1eefa0c05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2de17d8c54e293efbddc7b1eefa0c05">&sect;&nbsp;</a></span>_midy</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _midy</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>center of grid in world coordinates </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a7c3c42170d23cae468eb5885aa913ca2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c3c42170d23cae468eb5885aa913ca2">&sect;&nbsp;</a></span>_ydim</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int _ydim</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="aaec2f9d77f4de3a82e0149113b6416a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaec2f9d77f4de3a82e0149113b6416a2">&sect;&nbsp;</a></span>_xdim</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int _xdim</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="aa4d2282bc8cc51ffa66eb6c17aae17ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4d2282bc8cc51ffa66eb6c17aae17ee">&sect;&nbsp;</a></span>_zdim</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int _zdim</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>grid dimensions </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a382cc46cd19ec2a1e726d9c8191cedea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a382cc46cd19ec2a1e726d9c8191cedea">&sect;&nbsp;</a></span>_spacing</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _spacing</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a86660f38a65032dffc210cb116735e95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86660f38a65032dffc210cb116735e95">&sect;&nbsp;</a></span>_inv_spa</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _inv_spa</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>spacing between grid points and its inverse </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a314a0d1d51e74f040278d0de06f075b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a314a0d1d51e74f040278d0de06f075b5">&sect;&nbsp;</a></span>_halfSpace</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _halfSpace</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>half of the grid spacing </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a774e5b3910ccdafb41ac680e319085d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a774e5b3910ccdafb41ac680e319085d1">&sect;&nbsp;</a></span>_xAxis</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> _xAxis</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Three axes (i.e., translation vectors like a unit cell) </p>

</div>
</div>
<a id="a526e1a071db304e1970afc1bdf1769f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a526e1a071db304e1970afc1bdf1769f0">&sect;&nbsp;</a></span>_yAxis</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> _yAxis</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d3a8c489526216952d17734085e7287"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d3a8c489526216952d17734085e7287">&sect;&nbsp;</a></span>_zAxis</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> _zAxis</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b91634c838cfa025070df146452d4d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b91634c838cfa025070df146452d4d9">&sect;&nbsp;</a></span>_xmin</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _xmin</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="aa3a779f1daff2a7dbe79fa4e0b9def75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3a779f1daff2a7dbe79fa4e0b9def75">&sect;&nbsp;</a></span>_xmax</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _xmax</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a775215217e5f88eabb13d886d3f28e6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a775215217e5f88eabb13d886d3f28e6a">&sect;&nbsp;</a></span>_ymin</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _ymin</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="a89dce702ed281c7c1ca2e88f6a3a00b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89dce702ed281c7c1ca2e88f6a3a00b0">&sect;&nbsp;</a></span>_ymax</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _ymax</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="ad2367ec6a3d166e433fec916c5826aa1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2367ec6a3d166e433fec916c5826aa1">&sect;&nbsp;</a></span>_zmin</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _zmin</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="abe522732504118f0d41304e111c94e38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe522732504118f0d41304e111c94e38">&sect;&nbsp;</a></span>_zmax</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double _zmax</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>the min/max axes in XYZ axes (i.e., the box) </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adfcd0e581453354d7c779541ec58c491">OpenBabel::operator&lt;&lt;()</a>, and <a class="el" href="namespaceOpenBabel.shtml#adc71eb19ad3b4c729264738f6d69d1d3">OpenBabel::operator&gt;&gt;()</a>.</p>

</div>
</div>
<a id="af7811cf8aadbf3b3477c560b0ef2f797"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7811cf8aadbf3b3477c560b0ef2f797">&sect;&nbsp;</a></span>_vdata</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; _vdata</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Custom data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aafa7e4623d4c3c0305b5523ca8a77e14">OBMol::OBMol()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="grid_8h_source.shtml">grid.h</a></li>
<li><a class="el" href="grid_8cpp.shtml">grid.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
