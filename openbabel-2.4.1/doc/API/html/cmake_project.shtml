<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Creating your own projects using CMake</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Creating your own projects using CMake </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>CMake provides modules to find a large number of modules to find common dependencies. A module to find openbabel is included in the release or can be copied below. The filename of modules to find packages must start with Find. For example, the default filename for the openbabel module is FindOpenBabel2.cmake. This file is usually placed in the cmake/modules directory of your project. This path must be specified by setting the CMAKE_MODULE_PATH variable. Next, calling find_package will execute the module to find openbabel and set 3 variables.</p>
<ul>
<li>OPENBABEL2_FOUND </li>
<li>OPENBABEL2_INCLUDE_DIR </li>
<li>OPENBABEL2_LIBRARIES</li>
</ul>
<p>The find_package command allows you to specify the package is required and cmake will handle this further. If openbabel is optional, the first variable can be used in your cmake logic to optionally build the additional code. Since find_package only sets variables, you still need to call include_directories with OPENBABEL2_INCLUDE_DIR in the argument list. The OPENBABEL2_LIBRARIES variable can be used directly in your target_link_libraries command.</p>
<p>Below is a minimal but working example of a project. For simplicity, only one CMakeLists.txt file and one source file is used. This can be used as a template to get started. The <a href="http://www.cmake.org/cmake/help/documentation.html">cmake documentation</a> can be consultated as your project becomes more complex.</p>
<p><b>CMakeLists.txt</b> </p><div class="fragment"><div class="line"><span class="preprocessor"># this line is required for cmake backwards compatibility</span></div><div class="line">cmake_minimum_required(VERSION 2.6)</div><div class="line"></div><div class="line"><span class="preprocessor"># name of your project</span></div><div class="line">project(myproject)</div><div class="line"></div><div class="line"><span class="preprocessor"># set the module path</span></div><div class="line"><span class="keyword">set</span>(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/modules)</div><div class="line"></div><div class="line"># find and setup openbabel</div><div class="line">find_package(OpenBabel2 REQUIRED)</div><div class="line">include_directories(${OPENBABEL2_INCLUDE_DIR})</div><div class="line"></div><div class="line"># create a list of source files (easier to maintain)</div><div class="line"><span class="keyword">set</span>(sources main.cpp)</div><div class="line"></div><div class="line"># the executable</div><div class="line">add_executable(myexe ${sources})</div><div class="line">target_link_libraries(myexe ${OPENBABEL2_LIBRARIES})</div><div class="line">install(TARGETS myexe DESTINATION bin)</div></div><!-- fragment --><p> <b>main.cpp</b> </p><div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">using namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a>;</div><div class="line"></div><div class="line"><span class="keywordtype">int</span> main()</div><div class="line">{</div><div class="line">  <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> mol;</div><div class="line"></div><div class="line">  <span class="comment">// ... see examples for code ...</span></div><div class="line"></div><div class="line"> <span class="keywordflow">return</span> 0;</div><div class="line">}</div></div><!-- fragment --><p><b>cmake/modules/FindOpenBabel2.cmake</b> </p><div class="fragment"><div class="line"><span class="preprocessor"># - Try to find OpenBabel2</span></div><div class="line"><span class="preprocessor"># Once done this will define</span></div><div class="line"><span class="preprocessor">#</span></div><div class="line"><span class="preprocessor">#  OPENBABEL2_FOUND - system has OpenBabel2</span></div><div class="line"><span class="preprocessor">#  OPENBABEL2_INCLUDE_DIR - the OpenBabel2 include directory</span></div><div class="line"><span class="preprocessor">#  OPENBABEL2_LIBRARIES - Link these to use OpenBabel2</span></div><div class="line"><span class="preprocessor">#</span></div><div class="line"><span class="preprocessor"># Copyright (c) 2006, 2007 Carsten Niehaus, &lt;cniehaus@gmx.de&gt;</span></div><div class="line"><span class="preprocessor"># Copyright (C) 2008 Marcus D. Hanwell &lt;marcus@cryos.org&gt;</span></div><div class="line"><span class="preprocessor"># Redistribution and use is allowed according to the terms of the BSD license.</span></div><div class="line"><span class="preprocessor"># For details see the accompanying COPYING-CMAKE-SCRIPTS file.</span></div><div class="line"></div><div class="line"><span class="keywordflow">if</span> (OPENBABEL2_INCLUDE_DIR AND OPENBABEL2_LIBRARIES AND OPENBABEL2_VERSION_MET)</div><div class="line"><span class="preprocessor">  # in cache already</span></div><div class="line">  <span class="keyword">set</span>(OPENBABEL2_FOUND TRUE)</div><div class="line"></div><div class="line"><span class="keywordflow">else</span> (OPENBABEL2_INCLUDE_DIR AND OPENBABEL2_LIBRARIES AND OPENBABEL2_VERSION_MET)</div><div class="line">  <span class="keywordflow">if</span>(NOT WIN32)</div><div class="line"></div><div class="line"><span class="preprocessor">    # Use the newer PkgConfig stuff</span></div><div class="line">    find_package(PkgConfig REQUIRED)</div><div class="line">    pkg_check_modules(OPENBABEL2 openbabel-2.0&gt;=2.2.0)</div><div class="line"></div><div class="line">    <span class="preprocessor"># Maintain backwards compatibility with previous version of module</span></div><div class="line">    <span class="keywordflow">if</span>(OPENBABEL2_FOUND STREQUAL <span class="stringliteral">&quot;1&quot;</span>)</div><div class="line">      <span class="keyword">set</span>(OPENBABEL2_VERSION_MET TRUE)</div><div class="line">      <span class="keyword">set</span>(OPENBABEL2_INCLUDE_DIR ${OPENBABEL2_INCLUDE_DIRS})</div><div class="line">    endif(OPENBABEL2_FOUND STREQUAL <span class="stringliteral">&quot;1&quot;</span>)</div><div class="line"></div><div class="line">  <span class="keywordflow">else</span>(NOT WIN32)</div><div class="line">    <span class="keyword">set</span>(OPENBABEL2_VERSION_MET TRUE)</div><div class="line">  endif(NOT WIN32)</div><div class="line"></div><div class="line">  <span class="keywordflow">if</span>(OPENBABEL2_VERSION_MET)</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span>(WIN32)</div><div class="line">      <span class="keywordflow">if</span>(NOT OPENBABEL2_INCLUDE_DIR)</div><div class="line">        find_path(OPENBABEL2_INCLUDE_DIR openbabel-2.0/openbabel/obconversion.h</div><div class="line">          PATHS</div><div class="line">          ${_obIncDir}</div><div class="line">          ${GNUWIN32_DIR}/include</div><div class="line">          $ENV{OPENBABEL2_INCLUDE_DIR}</div><div class="line">        )</div><div class="line">        <span class="keywordflow">if</span>(OPENBABEL2_INCLUDE_DIR)</div><div class="line">          <span class="keyword">set</span>(OPENBABEL2_INCLUDE_DIR ${OPENBABEL2_INCLUDE_DIR}/openbabel-2.0)</div><div class="line">        endif(OPENBABEL2_INCLUDE_DIR)</div><div class="line">      endif(NOT OPENBABEL2_INCLUDE_DIR)</div><div class="line">    endif(WIN32)</div><div class="line"></div><div class="line">    find_library(OPENBABEL2_LIBRARIES NAMES openbabel openbabel-2</div><div class="line">      PATHS</div><div class="line">      ${_obLinkDir}</div><div class="line">      ${GNUWIN32_DIR}/lib</div><div class="line">      $ENV{OPENBABEL2_LIBRARIES}</div><div class="line">    )</div><div class="line">  endif(OPENBABEL2_VERSION_MET)</div><div class="line"></div><div class="line">  if(OPENBABEL2_INCLUDE_DIR AND OPENBABEL2_LIBRARIES AND OPENBABEL2_VERSION_MET)</div><div class="line">    set(OPENBABEL2_FOUND TRUE)</div><div class="line">  endif(OPENBABEL2_INCLUDE_DIR AND OPENBABEL2_LIBRARIES AND OPENBABEL2_VERSION_MET)</div><div class="line"></div><div class="line">  if (OPENBABEL2_FOUND)</div><div class="line">    if (NOT OpenBabel2_FIND_QUIETLY)</div><div class="line">      message(STATUS &quot;Found <a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a> 2.2 or later: ${OPENBABEL2_LIBRARIES}<span class="stringliteral">&quot;)</span></div><div class="line"><span class="stringliteral">    endif (NOT OpenBabel2_FIND_QUIETLY)</span></div><div class="line"><span class="stringliteral">  else (OPENBABEL2_FOUND)</span></div><div class="line"><span class="stringliteral">    if (OpenBabel2_FIND_REQUIRED)</span></div><div class="line"><span class="stringliteral">      message(FATAL_ERROR &quot;</span>Could NOT find <a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a> 2.2 or later <span class="stringliteral">&quot;)</span></div><div class="line"><span class="stringliteral">    endif (OpenBabel2_FIND_REQUIRED)</span></div><div class="line"><span class="stringliteral">  endif (OPENBABEL2_FOUND)</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral">  mark_as_advanced(OPENBABEL2_INCLUDE_DIR OPENBABEL2_LIBRARIES)</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral">endif (OPENBABEL2_INCLUDE_DIR AND OPENBABEL2_LIBRARIES AND OPENBABEL2_VERSION_MET)</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral"># Search for Open Babel2 executable</span></div><div class="line"><span class="stringliteral">if(OPENBABEL2_EXECUTABLE)</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral">  # in cache already</span></div><div class="line"><span class="stringliteral">  set(OPENBABEL2_EXECUTABLE_FOUND TRUE)</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral">else(OPENBABEL2_EXECUTABLE)</span></div><div class="line"><span class="stringliteral">  find_program(OPENBABEL2_EXECUTABLE NAMES babel</span></div><div class="line"><span class="stringliteral">    PATHS</span></div><div class="line"><span class="stringliteral">    [HKEY_CURRENT_USER\\SOFTWARE\\OpenBabel\ 2.2.0]</span></div><div class="line"><span class="stringliteral">    $ENV{OPENBABEL2_EXECUTABLE}</span></div><div class="line"><span class="stringliteral">  )</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral">  if(OPENBABEL2_EXECUTABLE)</span></div><div class="line"><span class="stringliteral">    set(OPENBABEL2_EXECUTABLE_FOUND TRUE)</span></div><div class="line"><span class="stringliteral">  endif(OPENBABEL2_EXECUTABLE)</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral">  if(OPENBABEL2_EXECUTABLE_FOUND)</span></div><div class="line"><span class="stringliteral">    message(STATUS &quot;</span>Found OpenBabel2 executable: ${OPENBABEL2_EXECUTABLE}<span class="stringliteral">&quot;)</span></div><div class="line"><span class="stringliteral">  endif(OPENBABEL2_EXECUTABLE_FOUND)</span></div><div class="line"><span class="stringliteral"></span></div><div class="line"><span class="stringliteral">endif(OPENBABEL2_EXECUTABLE)</span></div></div><!-- fragment --> </div></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
