<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">OBBitVec Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aebaf27b65d09f6f54c4d059e5ea6fbcb">BitIsOn</a>(int bit_offset) const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#acd22841cc20ecbc46453494ebe2e1151">BitIsSet</a>(unsigned bit_offset) const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a>()</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a5c197326e4a4309f53db4dc1f5b8bab4">CountBits</a>() const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#abcfbdba215d3b15fbb4b682969943a6e">Empty</a>() const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a2f09c673396856ae954abe2d02011f08">EndBit</a>() const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#acfdc1251f35ecb2e2d16e236f033911b">FirstBit</a>(unsigned bit_offset=0) const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a47b489f96fb83fb92444dc4fc69d052e">Fold</a>(unsigned new_bit_size)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a0e38205f69ea775ac85766e8fa84aa09">FromString</a>(const std::string &amp;line, int bits)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a6919c04c8f2a7a600d926dfb69a2ccff">FromVecInt</a>(const std::vector&lt; int &gt; &amp;bit_offsets)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a0af4f3bf511770f64efd9b03197fe05d">GetSize</a>() const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a56df5cb29ee1da7ea5626ab4c0f35882">GetWords</a>(word_vector &amp;vec)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a8e12342fc420701fbffd97025421575a">IsEmpty</a>() const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a00e05e1bb6f3185b1a40728679be5274">Negate</a>()</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a3ff4b38808fc377c9a716d525a912f52">NextBit</a>(int last_bit_offset) const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#af0100bd07b2642e38b29dc8e74ff765b">OBBitVec</a>()</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ac5a4c3682c88b8d666b5d7d33183fb55">OBBitVec</a>(unsigned size_in_bits)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1a1bd9c96031c99d3209b04ef50b4d6c">OBBitVec</a>(const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ad651eb7f68121df9105d811525c3f968">operator &amp;</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ab11151ef6b7a87f479cb15c3c6a9cc9b">operator &amp;=</a>(const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aa7711d3edd25794568784a430fd7b062">operator+=</a>(const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a9afe9bbf2fcb9441afbb636aad51e27e">operator-</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a321d8efee0bf7ca07bbffe94bda40b87">operator-=</a>(const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aff92f9cf4ab168373dd84cb3f50714b2">operator&lt;</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a7b0a6021022c32f1e21ea411427a1d00">operator&lt;&lt;</a>(std::ostream &amp;os, const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a24793888dd45beaff49d652ce07bd823">operator=</a>(const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1ebdca3306fde1d1553fb6f796121a34">operator==</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a159591a12e5958414000352f4fb32f85">operator&gt;&gt;</a>(std::istream &amp;is, OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a38128ecf826666f61c341cb0a17acb3d">operator[]</a>(int bit_offset) const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a60e304c03f383f60b6bdddc2b989e77b">operator^</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#afb212210bd7dffef43eaca0db7e3a499">operator^=</a>(const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1c09da3d5e947c68ef25c4fa7a72fbc3">operator|</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ad34fbd2840a8afd87d69f4f71174407d">operator|=</a>(const OBBitVec &amp;bv)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a3f7949c8ca082670fa93310be6576854">operator|=</a>(int bit_offset)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a7bc2d3a9e8b18736d47932ba327afd38">Resize</a>(unsigned size_in_bits)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a6b57d4f315f27f863dfaba863f9d6c4c">ResizeWords</a>(unsigned size_in_words)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a5ca76b0cbbf2dd86395b0af704c8cdfb">SetBitOff</a>(unsigned bit_offset)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a0920b57e131b9eab47d6939e890cd521">SetBitOn</a>(unsigned bit_offset)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#af248c931e7d8abdcb0ca18ba0a3e8533">SetRangeOff</a>(unsigned lo_bit_offset, unsigned hi_bit_offset)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1a5ff904f4dbba5c3d92bb1d98fa23c2">SetRangeOn</a>(unsigned lo_bit_offset, unsigned hi_bit_offset)</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a496f42d59f5411f86fb9c47330d9adf7">ToVecInt</a>(std::vector&lt; int &gt; &amp;bit_offsets) const</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1484c05faf3c871ececf8e62ebfee262">word_vector</a> typedef</td><td class="entry"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
