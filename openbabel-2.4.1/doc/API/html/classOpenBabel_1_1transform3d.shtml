<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>transform3d Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="classOpenBabel_1_1transform3d-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">transform3d Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="transform3d_8h_source.shtml">openbabel/math/transform3d.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for transform3d:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1transform3d.png" usemap="#transform3d_map" alt=""/>
  <map id="transform3d_map" name="transform3d_map">
<area href="classOpenBabel_1_1matrix3x3.shtml" title="Represents a real 3x3 matrix. " alt="matrix3x3" shape="rect" coords="0,0,79,24"/>
<area href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space. " alt="vector3" shape="rect" coords="89,0,168,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0a78f8c2d77f9ca68c328cff6d46c610"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#a0a78f8c2d77f9ca68c328cff6d46c610">transform3d</a> (void)</td></tr>
<tr class="separator:a0a78f8c2d77f9ca68c328cff6d46c610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5c44a104265517860c9d695f03c3d7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#a5d5c44a104265517860c9d695f03c3d7">transform3d</a> (const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;m, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>
<tr class="separator:a5d5c44a104265517860c9d695f03c3d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ec90e69b3b2684b37773c15907b1fe0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#a1ec90e69b3b2684b37773c15907b1fe0">transform3d</a> (double s)</td></tr>
<tr class="separator:a1ec90e69b3b2684b37773c15907b1fe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a272c7ae3e0b8547a31f5c68ec2a43710"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#a272c7ae3e0b8547a31f5c68ec2a43710">transform3d</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> row1, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> row2, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> row3, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> translation)</td></tr>
<tr class="separator:a272c7ae3e0b8547a31f5c68ec2a43710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4748a71890565072e61ed711ad218a38"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#a4748a71890565072e61ed711ad218a38">transform3d</a> (double d[3][3], double t[3])</td></tr>
<tr class="separator:a4748a71890565072e61ed711ad218a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefda1bb3de677ab7f059575d76fef1d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#aefda1bb3de677ab7f059575d76fef1d6">operator*</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;) const</td></tr>
<tr class="separator:aefda1bb3de677ab7f059575d76fef1d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9df7e1b37786e86a323c57aef8c81a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#aea9df7e1b37786e86a323c57aef8c81a">operator*</a> (const <a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> &amp;) const</td></tr>
<tr class="separator:aea9df7e1b37786e86a323c57aef8c81a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04885c522fadb4292791065d98062be1"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#a04885c522fadb4292791065d98062be1">DescribeAsString</a> () const</td></tr>
<tr class="separator:a04885c522fadb4292791065d98062be1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f354c14e03130a064d34ec9e0c48203"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#a7f354c14e03130a064d34ec9e0c48203">DescribeAsValues</a> () const</td></tr>
<tr class="separator:a7f354c14e03130a064d34ec9e0c48203"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af279e0f0ff720ee54d6733674dfda50a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1transform3d.shtml#af279e0f0ff720ee54d6733674dfda50a">Normalize</a> ()</td></tr>
<tr class="separator:af279e0f0ff720ee54d6733674dfda50a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:a3c0e5d79c07393e51572c2594f762b27"><td class="memItemLeft" align="right" valign="top">typedef double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a3c0e5d79c07393e51572c2594f762b27">iterator</a></td></tr>
<tr class="separator:a3c0e5d79c07393e51572c2594f762b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cd067fe0c3e483dd5377aede39556e1"><td class="memItemLeft" align="right" valign="top">typedef const double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a6cd067fe0c3e483dd5377aede39556e1">const_iterator</a></td></tr>
<tr class="separator:a6cd067fe0c3e483dd5377aede39556e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad319fc54a93a2c7058c70e40428ed2e2"><td class="memItemLeft" align="right" valign="top">typedef std::ptrdiff_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ad319fc54a93a2c7058c70e40428ed2e2">difference_type</a></td></tr>
<tr class="separator:ad319fc54a93a2c7058c70e40428ed2e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a3f648014bbd17f8090159d2d93cbe30c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a3f648014bbd17f8090159d2d93cbe30c">GetArray</a> (double *m)</td></tr>
<tr class="separator:a3f648014bbd17f8090159d2d93cbe30c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0db01a8386bdbdff8e3fb8fa62a313c"><td class="memItemLeft" align="right" valign="top">const double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ab0db01a8386bdbdff8e3fb8fa62a313c">operator()</a> (int row, int column) const</td></tr>
<tr class="separator:ab0db01a8386bdbdff8e3fb8fa62a313c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59c4092616c1d0ffc2c3e022350ee02d"><td class="memItemLeft" align="right" valign="top">double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a59c4092616c1d0ffc2c3e022350ee02d">operator()</a> (int row, int column)</td></tr>
<tr class="separator:a59c4092616c1d0ffc2c3e022350ee02d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00d250995fdd1e9782350ffe79d9abab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a00d250995fdd1e9782350ffe79d9abab">inverse</a> (void) const</td></tr>
<tr class="separator:a00d250995fdd1e9782350ffe79d9abab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa198c38170ceca2dfa52508dd3ce2f15"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aa198c38170ceca2dfa52508dd3ce2f15">transpose</a> (void) const</td></tr>
<tr class="separator:aa198c38170ceca2dfa52508dd3ce2f15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff25b8b63c0aec5f2c83d0cb70ae55cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aff25b8b63c0aec5f2c83d0cb70ae55cb">randomRotation</a> (<a class="el" href="classOpenBabel_1_1OBRandom.shtml">OBRandom</a> &amp;rnd)</td></tr>
<tr class="separator:aff25b8b63c0aec5f2c83d0cb70ae55cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a567226bdd8fe4db0026d42aae75540ec"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a567226bdd8fe4db0026d42aae75540ec">determinant</a> () const</td></tr>
<tr class="separator:a567226bdd8fe4db0026d42aae75540ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7f567b85d822b28a4578e974758b2ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ac7f567b85d822b28a4578e974758b2ce">isSymmetric</a> (void) const</td></tr>
<tr class="separator:ac7f567b85d822b28a4578e974758b2ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dc6490cdda5b1a70b3b0a9361264838"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a4dc6490cdda5b1a70b3b0a9361264838">isOrthogonal</a> (void) const</td></tr>
<tr class="separator:a4dc6490cdda5b1a70b3b0a9361264838"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7738d934d2d55c2cd52e21a8f695e4cf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a7738d934d2d55c2cd52e21a8f695e4cf">isDiagonal</a> (void) const</td></tr>
<tr class="separator:a7738d934d2d55c2cd52e21a8f695e4cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdd6a101107d0d44f6a53dcb4479f43f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#afdd6a101107d0d44f6a53dcb4479f43f">isUnitMatrix</a> (void) const</td></tr>
<tr class="separator:afdd6a101107d0d44f6a53dcb4479f43f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeecc5be8dfe990b9e9a751f789429f4f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aeecc5be8dfe990b9e9a751f789429f4f">Get</a> (int row, int column) const</td></tr>
<tr class="separator:aeecc5be8dfe990b9e9a751f789429f4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae7e56afba0365c34add2d93288995ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aae7e56afba0365c34add2d93288995ca">Set</a> (int row, int column, double v)</td></tr>
<tr class="separator:aae7e56afba0365c34add2d93288995ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39efd7a5999c653b840ac4445b9f86c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a39efd7a5999c653b840ac4445b9f86c2">SetColumn</a> (int column, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>
<tr class="separator:a39efd7a5999c653b840ac4445b9f86c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab20b033e3e502ab19ae92f55a9ef2fe2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ab20b033e3e502ab19ae92f55a9ef2fe2">SetRow</a> (int row, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>
<tr class="separator:ab20b033e3e502ab19ae92f55a9ef2fe2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9adfe5f674bfd8ab7648ec8b2db787b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a9adfe5f674bfd8ab7648ec8b2db787b9">GetColumn</a> (unsigned int col) const</td></tr>
<tr class="separator:a9adfe5f674bfd8ab7648ec8b2db787b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abecfe73c4c97ace728d878dc3566e6fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#abecfe73c4c97ace728d878dc3566e6fa">GetRow</a> (unsigned int row) const</td></tr>
<tr class="separator:abecfe73c4c97ace728d878dc3566e6fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4623ee2f3c5b2b7cc4c2efb081273f62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a4623ee2f3c5b2b7cc4c2efb081273f62">operator*=</a> (const double &amp;c)</td></tr>
<tr class="separator:a4623ee2f3c5b2b7cc4c2efb081273f62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56c27ea39208380495f812df6b865289"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a56c27ea39208380495f812df6b865289">operator/=</a> (const double &amp;c)</td></tr>
<tr class="separator:a56c27ea39208380495f812df6b865289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99b052f9d6eaea593f20a032679bcc55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a99b052f9d6eaea593f20a032679bcc55">SetupRotMat</a> (double <a class="el" href="classOpenBabel_1_1vector3.shtml#a7b1e56edcce2dfec1f65354c4f55703e">x</a>, double <a class="el" href="classOpenBabel_1_1vector3.shtml#a9085cf790064f107bc57185b11ab2eee">y</a>, double <a class="el" href="classOpenBabel_1_1vector3.shtml#a89f6c6d834e9fec20840d1754c06016e">z</a>)</td></tr>
<tr class="separator:a99b052f9d6eaea593f20a032679bcc55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a031b9641f48f7639949cad29a6a99109"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a031b9641f48f7639949cad29a6a99109">PlaneReflection</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;norm)</td></tr>
<tr class="separator:a031b9641f48f7639949cad29a6a99109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2b83cb7b73473405cd57594c88f541c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ae2b83cb7b73473405cd57594c88f541c">RotAboutAxisByAngle</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;axis, const double angle)</td></tr>
<tr class="separator:ae2b83cb7b73473405cd57594c88f541c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeae6ec0ae0d036137c03275be0010878"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aeae6ec0ae0d036137c03275be0010878">FillOrth</a> (double alpha, double beta, double gamma, double a, double b, double c)</td></tr>
<tr class="separator:aeae6ec0ae0d036137c03275be0010878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad07e6961b44f8ce4512b2b30caf45abf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ad07e6961b44f8ce4512b2b30caf45abf">findEigenvectorsIfSymmetric</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;eigenvals) const</td></tr>
<tr class="separator:ad07e6961b44f8ce4512b2b30caf45abf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad69bd11391be1a1dba5c8202259664f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml#a3c0e5d79c07393e51572c2594f762b27">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ad69bd11391be1a1dba5c8202259664f8">begin</a> ()</td></tr>
<tr class="separator:ad69bd11391be1a1dba5c8202259664f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29305669b60ca1680752e2fc3592ba99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml#a6cd067fe0c3e483dd5377aede39556e1">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a29305669b60ca1680752e2fc3592ba99">begin</a> () const</td></tr>
<tr class="separator:a29305669b60ca1680752e2fc3592ba99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acad38d52497a975bfb6f2f6acd76631f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml#a3c0e5d79c07393e51572c2594f762b27">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#acad38d52497a975bfb6f2f6acd76631f">end</a> ()</td></tr>
<tr class="separator:acad38d52497a975bfb6f2f6acd76631f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accf9a4bd0c34d4a5f6a7dab66ea10cdc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml#a6cd067fe0c3e483dd5377aede39556e1">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#accf9a4bd0c34d4a5f6a7dab66ea10cdc">end</a> () const</td></tr>
<tr class="separator:accf9a4bd0c34d4a5f6a7dab66ea10cdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a685349dbc9e2d99a19616763811cbfba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a685349dbc9e2d99a19616763811cbfba">Set</a> (const double inX, const double inY, const double inZ)</td></tr>
<tr class="separator:a685349dbc9e2d99a19616763811cbfba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfcb3c965a12bd0385f1fe1db3f7d3ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#abfcb3c965a12bd0385f1fe1db3f7d3ac">Set</a> (const double *c)</td></tr>
<tr class="separator:abfcb3c965a12bd0385f1fe1db3f7d3ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7cbeb9d9ec3d0d2714733d8bb4596eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ab7cbeb9d9ec3d0d2714733d8bb4596eb">SetX</a> (const double inX)</td></tr>
<tr class="separator:ab7cbeb9d9ec3d0d2714733d8bb4596eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a385f2320a91b6c182ecb45d16ffc6332"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a385f2320a91b6c182ecb45d16ffc6332">SetY</a> (const double inY)</td></tr>
<tr class="separator:a385f2320a91b6c182ecb45d16ffc6332"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1ac74f918d5ac48cb47426ca9ba2c09"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ad1ac74f918d5ac48cb47426ca9ba2c09">SetZ</a> (const double inZ)</td></tr>
<tr class="separator:ad1ac74f918d5ac48cb47426ca9ba2c09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac302cda48a4a650a3f8cf1dfe9a0cb1e"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ac302cda48a4a650a3f8cf1dfe9a0cb1e">GetX</a> () const</td></tr>
<tr class="separator:ac302cda48a4a650a3f8cf1dfe9a0cb1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c302e1e24ca25bc362746dc51c22510"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a2c302e1e24ca25bc362746dc51c22510">GetY</a> () const</td></tr>
<tr class="separator:a2c302e1e24ca25bc362746dc51c22510"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e4abcd59d8d2c945e851ed92593826"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ad5e4abcd59d8d2c945e851ed92593826">GetZ</a> () const</td></tr>
<tr class="separator:ad5e4abcd59d8d2c945e851ed92593826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9345053a16ce83e130dc098fddf9af7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a9345053a16ce83e130dc098fddf9af7a">Get</a> (double *c)</td></tr>
<tr class="separator:a9345053a16ce83e130dc098fddf9af7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a680fe1fcfb21fa1bdc08927677b024a8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a680fe1fcfb21fa1bdc08927677b024a8">operator[]</a> (unsigned int i) const</td></tr>
<tr class="separator:a680fe1fcfb21fa1bdc08927677b024a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eaa5b3b24423c15c8deb71a0c079707"><td class="memItemLeft" align="right" valign="top">const double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a1eaa5b3b24423c15c8deb71a0c079707">AsArray</a> () const</td></tr>
<tr class="separator:a1eaa5b3b24423c15c8deb71a0c079707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0541be714a6305dd3295655eea746d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ae0541be714a6305dd3295655eea746d9">operator+=</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>
<tr class="separator:ae0541be714a6305dd3295655eea746d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a506884b50b92a33e92029b43f9b75bc9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a506884b50b92a33e92029b43f9b75bc9">operator+=</a> (const double *f)</td></tr>
<tr class="separator:a506884b50b92a33e92029b43f9b75bc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4b4980ccea5aa5184928ce40cf1acee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ac4b4980ccea5aa5184928ce40cf1acee">operator-=</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>
<tr class="separator:ac4b4980ccea5aa5184928ce40cf1acee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a322635480250ba0c08aa47a125eda3dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a322635480250ba0c08aa47a125eda3dd">operator-=</a> (const double *f)</td></tr>
<tr class="separator:a322635480250ba0c08aa47a125eda3dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a849fa346bb458a37710cdb8a4f5c085f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a849fa346bb458a37710cdb8a4f5c085f">operator*=</a> (const double &amp;c)</td></tr>
<tr class="separator:a849fa346bb458a37710cdb8a4f5c085f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab879d8d94111c53fd9b9013fb9345734"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ab879d8d94111c53fd9b9013fb9345734">operator*=</a> (const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;)</td></tr>
<tr class="separator:ab879d8d94111c53fd9b9013fb9345734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5a7b18eeff279e5d850a9075d09f8a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ab5a7b18eeff279e5d850a9075d09f8a5">operator/=</a> (const double &amp;c)</td></tr>
<tr class="separator:ab5a7b18eeff279e5d850a9075d09f8a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f4c0b08630beda575c1c8697b8fece"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#af2f4c0b08630beda575c1c8697b8fece">randomUnitVector</a> (<a class="el" href="classOpenBabel_1_1OBRandom.shtml">OBRandom</a> *oeRand=NULL)</td></tr>
<tr class="separator:af2f4c0b08630beda575c1c8697b8fece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d0a82a515f8373ee3f174a22f775397"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a8d0a82a515f8373ee3f174a22f775397">normalize</a> ()</td></tr>
<tr class="separator:a8d0a82a515f8373ee3f174a22f775397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b2fe218819d898082c29c21cf962572"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a5b2fe218819d898082c29c21cf962572">CanBeNormalized</a> () const</td></tr>
<tr class="separator:a5b2fe218819d898082c29c21cf962572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47f7e7ecf0a38bc7ef50f21d90ba349b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a47f7e7ecf0a38bc7ef50f21d90ba349b">length_2</a> () const</td></tr>
<tr class="separator:a47f7e7ecf0a38bc7ef50f21d90ba349b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80401d480f15e1418a3274a2b2b51649"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a80401d480f15e1418a3274a2b2b51649">length</a> () const</td></tr>
<tr class="separator:a80401d480f15e1418a3274a2b2b51649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b1e56edcce2dfec1f65354c4f55703e"><td class="memItemLeft" align="right" valign="top">const double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a7b1e56edcce2dfec1f65354c4f55703e">x</a> () const</td></tr>
<tr class="separator:a7b1e56edcce2dfec1f65354c4f55703e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b195b867437acf8de45f48c83e81932"><td class="memItemLeft" align="right" valign="top">double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a3b195b867437acf8de45f48c83e81932">x</a> ()</td></tr>
<tr class="separator:a3b195b867437acf8de45f48c83e81932"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9085cf790064f107bc57185b11ab2eee"><td class="memItemLeft" align="right" valign="top">const double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a9085cf790064f107bc57185b11ab2eee">y</a> () const</td></tr>
<tr class="separator:a9085cf790064f107bc57185b11ab2eee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad927d9808ded1fc49c05ae9e1a3ed2a6"><td class="memItemLeft" align="right" valign="top">double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ad927d9808ded1fc49c05ae9e1a3ed2a6">y</a> ()</td></tr>
<tr class="separator:ad927d9808ded1fc49c05ae9e1a3ed2a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89f6c6d834e9fec20840d1754c06016e"><td class="memItemLeft" align="right" valign="top">const double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a89f6c6d834e9fec20840d1754c06016e">z</a> () const</td></tr>
<tr class="separator:a89f6c6d834e9fec20840d1754c06016e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2134ad02d68f29e9c7cd87e4cd4c75b8"><td class="memItemLeft" align="right" valign="top">double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a2134ad02d68f29e9c7cd87e4cd4c75b8">z</a> ()</td></tr>
<tr class="separator:a2134ad02d68f29e9c7cd87e4cd4c75b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:afc691b83e01d075402e13b5d05646564"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#afc691b83e01d075402e13b5d05646564">operator==</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;) const</td></tr>
<tr class="separator:afc691b83e01d075402e13b5d05646564"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7c3fdae52a4c4bc27354cb2411028e4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ab7c3fdae52a4c4bc27354cb2411028e4">operator!=</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;other) const</td></tr>
<tr class="separator:ab7c3fdae52a4c4bc27354cb2411028e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafb6c144d5be85832af8cf4346751c2d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#aafb6c144d5be85832af8cf4346751c2d">IsApprox</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;other, const double &amp;precision) const</td></tr>
<tr class="separator:aafb6c144d5be85832af8cf4346751c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae15b186e4ec6527dbba56dbabba7b06b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#ae15b186e4ec6527dbba56dbabba7b06b">distSq</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;vv) const</td></tr>
<tr class="separator:ae15b186e4ec6527dbba56dbabba7b06b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7da2d388ded31320b18e7bb51fa4cf76"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1vector3.shtml#a7da2d388ded31320b18e7bb51fa4cf76">createOrthoVector</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v) const</td></tr>
<tr class="separator:a7da2d388ded31320b18e7bb51fa4cf76"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:aeb205a916fa467164e6bdebc62d22e7a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aeb205a916fa467164e6bdebc62d22e7a">jacobi</a> (unsigned int n, double *a, double *d, double *v)</td></tr>
<tr class="separator:aeb205a916fa467164e6bdebc62d22e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Handle 3D transformations, such as space group definitions. </p>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classOpenBabel_1_1SpaceGroup.shtml" title="Handle crystallographic space group symmetry. ">SpaceGroup</a> </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0a78f8c2d77f9ca68c328cff6d46c610"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a78f8c2d77f9ca68c328cff6d46c610">&sect;&nbsp;</a></span>transform3d() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d5c44a104265517860c9d695f03c3d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d5c44a104265517860c9d695f03c3d7">&sect;&nbsp;</a></span>transform3d() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> &amp;&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ec90e69b3b2684b37773c15907b1fe0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ec90e69b3b2684b37773c15907b1fe0">&sect;&nbsp;</a></span>transform3d() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a272c7ae3e0b8547a31f5c68ec2a43710"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a272c7ae3e0b8547a31f5c68ec2a43710">&sect;&nbsp;</a></span>transform3d() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>row1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>row2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>row3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>translation</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a matrix from row vectors. </p>

</div>
</div>
<a id="a4748a71890565072e61ed711ad218a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4748a71890565072e61ed711ad218a38">&sect;&nbsp;</a></span>transform3d() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>d</em>[3][3], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>t</em>[3]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a matrix from a 3x3-array of doubles. </p>
<p>The first index represents the row, the second index the column </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aefda1bb3de677ab7f059575d76fef1d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefda1bb3de677ab7f059575d76fef1d6">&sect;&nbsp;</a></span>operator*() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aea9df7e1b37786e86a323c57aef8c81a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea9df7e1b37786e86a323c57aef8c81a">&sect;&nbsp;</a></span>operator*() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a> &amp;&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a04885c522fadb4292791065d98062be1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04885c522fadb4292791065d98062be1">&sect;&nbsp;</a></span>DescribeAsString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string DescribeAsString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml#ac6957eacc9ea85e6e67a9d964c6d4ced">SpaceGroup::AddTransform()</a>.</p>

</div>
</div>
<a id="a7f354c14e03130a064d34ec9e0c48203"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f354c14e03130a064d34ec9e0c48203">&sect;&nbsp;</a></span>DescribeAsValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string DescribeAsValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af279e0f0ff720ee54d6733674dfda50a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af279e0f0ff720ee54d6733674dfda50a">&sect;&nbsp;</a></span>Normalize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Normalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="transform3d_8h_source.shtml">transform3d.h</a></li>
<li><a class="el" href="transform3d_8cpp.shtml">transform3d.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
