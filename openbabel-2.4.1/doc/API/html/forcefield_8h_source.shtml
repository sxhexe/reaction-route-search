<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>forcefield.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.shtml">include</a></li><li class="navelem"><a class="el" href="dir_aabfc5907fabda9e6b87df21134395b8.shtml">openbabel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">forcefield.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="forcefield_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**********************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">forcefield.h - Handle OBForceField class.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">Copyright (C) 2006-2007 by Tim Vandermeersch &lt;tim.vandermeersch@gmail.com&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">This file is part of the Open Babel project.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">the Free Software Foundation version 2 of the License.</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">GNU General Public License for more details.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">***********************************************************************/</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#ifndef OB_FORCEFIELD_H</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#define OB_FORCEFIELD_H</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml">openbabel/base.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml">openbabel/mol.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="plugin_8h.shtml">openbabel/plugin.h</a>&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="grid_8h.shtml">openbabel/grid.h</a>&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="griddata_8h.shtml">openbabel/griddata.h</a>&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;float.h&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">// log levels</span></div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#ae0c831fc1fdad7188e79f0d94ffb0c87">   39</a></span>&#160;<span class="preprocessor">#define OBFF_LOGLVL_NONE        0   </span></div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#aaf7ca13d2b94e79693c47c10ea3c1def">   40</a></span>&#160;<span class="preprocessor">#define OBFF_LOGLVL_LOW         1   </span></div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#aefda3ec45e427a38ac62a99a50cf93af">   41</a></span>&#160;<span class="preprocessor">#define OBFF_LOGLVL_MEDIUM      2   </span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a09f7b02a472bb953e5b2e0641ba45e3e">   42</a></span>&#160;<span class="preprocessor">#define OBFF_LOGLVL_HIGH        3   </span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="comment">// terms</span></div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a586a185b0aed9265f6812ed4338cd8bd">   45</a></span>&#160;<span class="preprocessor">#define OBFF_ENERGY             (1 &lt;&lt; 0)   </span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a326285b39a02acf24b5b73d340129086">   46</a></span>&#160;<span class="preprocessor">#define OBFF_EBOND              (1 &lt;&lt; 1)   </span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#af9110b0ba91b61dfb6d4a01263b22b02">   47</a></span>&#160;<span class="preprocessor">#define OBFF_EANGLE             (1 &lt;&lt; 2)   </span></div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a005da6f6cb4c5568b1c203cc702f5ce7">   48</a></span>&#160;<span class="preprocessor">#define OBFF_ESTRBND            (1 &lt;&lt; 3)   </span></div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a0f54562816bbf69d6bf037a0adc8bb39">   49</a></span>&#160;<span class="preprocessor">#define OBFF_ETORSION           (1 &lt;&lt; 4)   </span></div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a4b88f20fe0968d703e3c08d0b66bf056">   50</a></span>&#160;<span class="preprocessor">#define OBFF_EOOP               (1 &lt;&lt; 5)   </span></div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#ae95a975f8a0274950f0f89b3f7bf9a64">   51</a></span>&#160;<span class="preprocessor">#define OBFF_EVDW               (1 &lt;&lt; 6)   </span></div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a3dd361374bf490af6c1f35d60a05949e">   52</a></span>&#160;<span class="preprocessor">#define OBFF_EELECTROSTATIC     (1 &lt;&lt; 7)   </span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="comment">// constraint types</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a03569dcf56c412db6be9df64438ee5dc">   55</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_IGNORE       (1 &lt;&lt; 0)   </span></div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a13a0a0dd0787deeea38b9868a8c2146a">   56</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_ATOM         (1 &lt;&lt; 1)   </span></div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a4e16c27a931fcb46dba17dc074bf51cd">   57</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_ATOM_X       (1 &lt;&lt; 2)   </span></div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#abd1cd31afc9ddb108d4cb07911d3926d">   58</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_ATOM_Y       (1 &lt;&lt; 3)   </span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a1399f6dcc2aec4237ded22e3c87e2d5a">   59</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_ATOM_Z       (1 &lt;&lt; 4)   </span></div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#ac27b2fddf951a53d68fc05c49fb98f13">   60</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_DISTANCE     (1 &lt;&lt; 5)   </span></div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#afc7b8c9d75d67d0bdff47947f8e75512">   61</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_ANGLE        (1 &lt;&lt; 6)   </span></div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a3d65dc3fe55820d8270c1215394a57be">   62</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_TORSION      (1 &lt;&lt; 7)   </span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a5d6180c08a450f3b9278fb782c3aedba">   63</a></span>&#160;<span class="preprocessor">#define OBFF_CONST_CHIRAL       (1 &lt;&lt; 8)   </span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="comment">// mode arguments for SteepestDescent, ConjugateGradients, ...</span></div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a76a7ae4b96bf74f5d6f690b908e57bb6">   66</a></span>&#160;<span class="preprocessor">#define OBFF_NUMERICAL_GRADIENT         (1 &lt;&lt; 0)  </span></div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#aa79097c99a0f44c20585623da1f5098e">   67</a></span>&#160;<span class="preprocessor">#define OBFF_ANALYTICAL_GRADIENT        (1 &lt;&lt; 1)  </span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a26434409c375f3b38709afdcccec596c">   69</a></span>&#160;<span class="preprocessor">#define KCAL_TO_KJ      4.1868</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="comment">// inline if statements for logging.</span></div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a62a639c8c4176b63a2697aff40f4338a">   72</a></span>&#160;<span class="preprocessor">#define IF_OBFF_LOGLVL_LOW    if(_loglvl &gt;= OBFF_LOGLVL_LOW)</span></div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#a6f31cf89cddb30bac3d187474f8defed">   73</a></span>&#160;<span class="preprocessor">#define IF_OBFF_LOGLVL_MEDIUM if(_loglvl &gt;= OBFF_LOGLVL_MEDIUM)</span></div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="forcefield_8h.shtml#af9a87deee4328f76736a05bf6e6709ea">   74</a></span>&#160;<span class="preprocessor">#define IF_OBFF_LOGLVL_HIGH   if(_loglvl &gt;= OBFF_LOGLVL_HIGH)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1LineSearchType.shtml">   77</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="structOpenBabel_1_1LineSearchType.shtml">LineSearchType</a></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">enum</span> {</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="structOpenBabel_1_1LineSearchType.shtml#adf764cbdea00d65edcd07bb9953ad2b7aebfbf7dc5cde0772efb1aa49712bd76b">   80</a></span>&#160;      <a class="code" href="structOpenBabel_1_1LineSearchType.shtml#adf764cbdea00d65edcd07bb9953ad2b7aebfbf7dc5cde0772efb1aa49712bd76b">Simple</a>, <a class="code" href="structOpenBabel_1_1LineSearchType.shtml#adf764cbdea00d65edcd07bb9953ad2b7a38e70ed84d1b5d7404464b69c8e5093a">Newton2Num</a></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    };</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  };</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">  struct ConstraintType</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">  {</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    enum {</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">      Ignore, Atom, AtomX, AtomY, AtomZ, Distance, Angle, Torsion, Chiral</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    };</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">  };</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">  */</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFParameter.shtml">   94</a></span>&#160;  <span class="keyword">class </span>OBFPRT <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml">OBFFParameter</a> {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFParameter.shtml#a6f364afbe132c4ecfea48bde1b0618ba">   97</a></span>&#160;    <span class="keywordtype">int</span>         a, b, c, <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a6f364afbe132c4ecfea48bde1b0618ba">d</a>;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFParameter.shtml#a436665a0d94c49fd61354af10a56e33d">   99</a></span>&#160;    std::string _a, _b, _c, <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a436665a0d94c49fd61354af10a56e33d">_d</a>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFParameter.shtml#a34493373e0f4d6c8c596512041153e69">  102</a></span>&#160;    std::vector&lt;int&gt;    <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a34493373e0f4d6c8c596512041153e69">_ipar</a>;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFParameter.shtml#a1c0d7fbb96a8e7c4dd0fec6ced77c5b0">  104</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a1c0d7fbb96a8e7c4dd0fec6ced77c5b0">_dpar</a>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFParameter.shtml#a31c588c926e46d76ea0b6ea45e6f98a8">  107</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml">OBFFParameter</a>&amp; <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a31c588c926e46d76ea0b6ea45e6f98a8">operator=</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml">OBFFParameter</a> &amp;ai)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;ai) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;          a = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#aa4c2a5552e9bc49b1816ff532f558c74">a</a>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;          b = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a148e3876077787926724625411d6e7a9">b</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;          c = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a4e1e0e72dd773439e333c84dd762a9c3">c</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;          d = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a6f364afbe132c4ecfea48bde1b0618ba">d</a>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;          _a = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a86e4c325d35090aeb11ec1be9d2c4b92">_a</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;          _b = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#aef54f9555eb83d9adc8bfe4c51a41048">_b</a>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;          _c = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a612751a856867453e2cf240a13b1c69a">_c</a>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          _d = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a436665a0d94c49fd61354af10a56e33d">_d</a>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;          _ipar = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a34493373e0f4d6c8c596512041153e69">_ipar</a>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          _dpar = ai.<a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#a1c0d7fbb96a8e7c4dd0fec6ced77c5b0">_dpar</a>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFParameter.shtml#ac8bb3912a3ce86b15842e79d0b421204">  126</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml#ac8bb3912a3ce86b15842e79d0b421204">clear</a> ()</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      a = b = c = d = 0;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      _ipar.clear();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      _dpar.clear();</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  }; <span class="comment">// class OBFFParameter</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="comment">// specific class introductions in forcefieldYYYY.cpp (for YYYY calculations)</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml">  138</a></span>&#160;  <span class="keyword">class </span>OBFPRT <a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml">OBFFCalculation2</a></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml#a1d26cc49e49afe96406210d6beaf418a">  142</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml#a1d26cc49e49afe96406210d6beaf418a">energy</a>;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml#a3b7f67e0c88d3405346c2aa592d75faf">  144</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, *<a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml#a3b7f67e0c88d3405346c2aa592d75faf">b</a>;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml#a086acc8d6f926ab15c5c385455810445">  146</a></span>&#160;    <span class="keywordtype">int</span> idx_a, <a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml#a086acc8d6f926ab15c5c385455810445">idx_b</a>;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml#aadfcce040172c26d6082c4834a1c1469">  148</a></span>&#160;    <span class="keywordtype">double</span> *pos_a, *<a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml#aadfcce040172c26d6082c4834a1c1469">pos_b</a>;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml#a8185562751b948f890ffc0d869341fae">  150</a></span>&#160;    <span class="keywordtype">double</span> force_a[3], force_b[3];</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml#a04b016790fa35bca53ad7e92809e5c76">  152</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml#a04b016790fa35bca53ad7e92809e5c76">~OBFFCalculation2</a>()</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation2.shtml#aa063f21c51ee71ca470bce2e7042b815">  157</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml#aa063f21c51ee71ca470bce2e7042b815">SetupPointers</a>()</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordflow">if</span> (!a || !b) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      pos_a = a-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a>();</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      idx_a = a-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>();</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      pos_b = b-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a>();</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      idx_b = b-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  };</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation3.shtml">  169</a></span>&#160;  <span class="keyword">class </span>OBFPRT <a class="code" href="classOpenBabel_1_1OBFFCalculation3.shtml">OBFFCalculation3</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation2.shtml">OBFFCalculation2</a></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation3.shtml#af305879d7db682f069904a4532e57ff2">  173</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBFFCalculation3.shtml#af305879d7db682f069904a4532e57ff2">c</a>;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation3.shtml#a9face146941b40a8f35a2d459a06f41a">  175</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation3.shtml#a9face146941b40a8f35a2d459a06f41a">idx_c</a>;</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation3.shtml#a6ddb04505fbda255d73c3e5d09571b04">  177</a></span>&#160;    <span class="keywordtype">double</span> *<a class="code" href="classOpenBabel_1_1OBFFCalculation3.shtml#a6ddb04505fbda255d73c3e5d09571b04">pos_c</a>;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation3.shtml#a8c8a61abf052a7ad6ce5f0f074ac351d">  179</a></span>&#160;    <span class="keywordtype">double</span> force_c[3];</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation3.shtml#a1adda0196551047b1256f060572007a5">  181</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation3.shtml#a1adda0196551047b1256f060572007a5">~OBFFCalculation3</a>()</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation3.shtml#aa063f21c51ee71ca470bce2e7042b815">  186</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation3.shtml#aa063f21c51ee71ca470bce2e7042b815">SetupPointers</a>()</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <span class="keywordflow">if</span> (!a || !b || !c) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      pos_a = a-&gt;GetCoordinate();</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      idx_a = a-&gt;GetIdx();</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      pos_b = b-&gt;GetCoordinate();</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      idx_b = b-&gt;GetIdx();</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      pos_c = c-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a>();</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      idx_c = c-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>();</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  };</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation4.shtml">  200</a></span>&#160;  <span class="keyword">class </span>OBFPRT <a class="code" href="classOpenBabel_1_1OBFFCalculation4.shtml">OBFFCalculation4</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation3.shtml">OBFFCalculation3</a></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation4.shtml#a457c0f77c032f8f7de69fabdd1a669a4">  204</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *<a class="code" href="classOpenBabel_1_1OBFFCalculation4.shtml#a457c0f77c032f8f7de69fabdd1a669a4">d</a>;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation4.shtml#a815ecadb16b028e5ca95121791128c4f">  206</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation4.shtml#a815ecadb16b028e5ca95121791128c4f">idx_d</a>;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation4.shtml#ae06bd6c1d1e4d2b8e2fe5ddb797b2164">  208</a></span>&#160;    <span class="keywordtype">double</span> *<a class="code" href="classOpenBabel_1_1OBFFCalculation4.shtml#ae06bd6c1d1e4d2b8e2fe5ddb797b2164">pos_d</a>;</div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation4.shtml#a20a8d079b2a45b324c0b8c142510ee00">  210</a></span>&#160;    <span class="keywordtype">double</span> force_d[3];</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation4.shtml#acbada7180292de7f7c8cafc3c65ba802">  212</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation4.shtml#acbada7180292de7f7c8cafc3c65ba802">~OBFFCalculation4</a>()</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFCalculation4.shtml#a23b6e1e5e28cdcd7afc3113b7a3bdbea">  217</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBFFCalculation4.shtml#a23b6e1e5e28cdcd7afc3113b7a3bdbea">SetupPointers</a>()</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <span class="keywordflow">if</span> (!a || !b || !c || !d) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      pos_a = a-&gt;GetCoordinate();</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      idx_a = a-&gt;GetIdx();</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      pos_b = b-&gt;GetCoordinate();</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      idx_b = b-&gt;GetIdx();</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      pos_c = c-&gt;GetCoordinate();</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      idx_c = c-&gt;GetIdx();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      pos_d = d-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a>();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      idx_d = d-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>();</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  };</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml">  234</a></span>&#160;  <span class="keyword">class </span>OBFPRT <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml">OBFFConstraint</a></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#a2d7e5dd7a479c4c7aef6e6133a1441c5">  238</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#a2d7e5dd7a479c4c7aef6e6133a1441c5">factor</a>, constraint_value;</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#a30de1b49893da89052152acbac377988">  239</a></span>&#160;    <span class="keywordtype">double</span> rab0, <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#a30de1b49893da89052152acbac377988">rbc0</a>;</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#ac765329451135abec74c45e1897abf26">  241</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#ac765329451135abec74c45e1897abf26">type</a>, ia, ib, ic, id;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#abc62ecd7a79c7d1cd07ef8aee2ec0bb6">  243</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, *b, *c, *<a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#abc62ecd7a79c7d1cd07ef8aee2ec0bb6">d</a>;</div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#a360127e447a0f25cfd633cba0c784db7">  245</a></span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> grada, gradb, gradc, <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#a360127e447a0f25cfd633cba0c784db7">gradd</a>;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#aaec19a6806233001c0fb9173903e5372">  248</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#aaec19a6806233001c0fb9173903e5372">OBFFConstraint</a>()</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;      {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        a = b = c = d = NULL;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        ia = ib = ic = <span class="keywordtype">id</span> = 0;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        constraint_value = 0.0;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        factor = 0.0;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      }</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#a42a5eb0558a3777f22ab404b02a5fd1b">  256</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#a42a5eb0558a3777f22ab404b02a5fd1b">~OBFFConstraint</a>()</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraint.shtml#aa72374f7ad0c140529a3b010e7daf8af">  260</a></span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="code" href="classOpenBabel_1_1OBFFConstraint.shtml#aa72374f7ad0c140529a3b010e7daf8af">GetGradient</a>(<span class="keywordtype">int</span> a)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keywordflow">if</span> (a == ia)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">return</span> grada;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (a == ib)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">return</span> gradb;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (a == ic)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">return</span> gradc;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (a == <span class="keywordtype">id</span>)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">return</span> gradd;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      <span class="keywordflow">else</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">return</span>  <a class="code" href="namespaceOpenBabel.shtml#ace51dfd98be07acf3a9c75c21e8d8af2">VZero</a>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  };</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraints.shtml">  278</a></span>&#160;  <span class="keyword">class </span>OBFPRT <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a>();</div><div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraints.shtml#aabbe8ba0bb89a9324a43f54468bd6f11">  284</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml#aabbe8ba0bb89a9324a43f54468bd6f11">~OBFFConstraints</a>()</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;      {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        _constraints.clear();</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        _ignored.Clear();</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        _fixed.Clear();</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        _Xfixed.Clear();</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        _Yfixed.Clear();</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        _Zfixed.Clear();</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordtype">void</span> Clear();</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordtype">double</span> GetConstraintEnergy();</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetGradient(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraints.shtml#a23c4410bafb1dd9a449e8710e290fc64">  300</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a>&amp; <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml#a23c4410bafb1dd9a449e8710e290fc64">operator=</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> &amp;ai)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      {</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;ai) {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;          _constraints = ai._constraints;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;          _ignored = ai._ignored;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;          _fixed = ai._fixed;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;          _Xfixed = ai._Xfixed;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;          _Yfixed = ai._Yfixed;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;          _Zfixed = ai._Zfixed;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        }</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;      }</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordtype">void</span> Setup(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="comment">// Set Constraints                                                     //</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordtype">void</span> SetFactor(<span class="keywordtype">double</span> factor);</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordtype">void</span> AddIgnore(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordtype">void</span> AddAtomConstraint(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordtype">void</span> AddAtomXConstraint(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordtype">void</span> AddAtomYConstraint(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordtype">void</span> AddAtomZConstraint(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordtype">void</span> AddDistanceConstraint(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">double</span> length);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordtype">void</span> AddAngleConstraint(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keywordtype">double</span> angle);</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordtype">void</span> AddTorsionConstraint(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keywordtype">int</span> d, <span class="keywordtype">double</span> torsion);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordtype">void</span> DeleteConstraint(<span class="keywordtype">int</span> index);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="comment">// Get Constraints                                                     //</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordtype">double</span> GetFactor();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordtype">int</span> Size() <span class="keyword">const</span>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordtype">int</span> GetConstraintType(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordtype">double</span> GetConstraintValue(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordtype">int</span> GetConstraintAtomA(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordtype">int</span> GetConstraintAtomB(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordtype">int</span> GetConstraintAtomC(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordtype">int</span> GetConstraintAtomD(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keywordtype">bool</span> IsIgnored(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordtype">bool</span> IsFixed(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keywordtype">bool</span> IsXFixed(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordtype">bool</span> IsYFixed(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordtype">bool</span> IsZFixed(<span class="keywordtype">int</span> a);</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraints.shtml#aa32799d67f2aeece7ee1a0d0ce78d488">  398</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml#aa32799d67f2aeece7ee1a0d0ce78d488">GetIgnoredBitVec</a>() { <span class="keywordflow">return</span> _ignored; }</div><div class="line"><a name="l00401"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBFFConstraints.shtml#a770eb922e5625b67a4e40b83b8fdc8cc">  401</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml#a770eb922e5625b67a4e40b83b8fdc8cc">GetFixedBitVec</a>() { <span class="keywordflow">return</span> _fixed; }</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="keyword">private</span>:</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    std::vector&lt;OBFFConstraint&gt; _constraints;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>    _ignored;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>    _fixed;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>    _Xfixed;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>    _Yfixed;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>    _Zfixed;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keywordtype">double</span> _factor;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  };</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  <span class="comment">// Class OBForceField</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;  <span class="comment">// class introduction in forcefield.cpp</span></div><div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml">  416</a></span>&#160;  <span class="keyword">class </span>OBFPRT <a class="code" href="classOpenBabel_1_1OBForceField.shtml">OBForceField</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBPlugin.shtml">OBPlugin</a></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  {</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <a class="code" href="group__plugins.shtml#gadd740e2a386b7db3e1f0e271cbe8a3f1">MAKE_PLUGIN</a>(<a class="code" href="classOpenBabel_1_1OBForceField.shtml">OBForceField</a>)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keyword">protected</span>:</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml">OBFFParameter</a>* GetParameter(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keywordtype">int</span> d, std::vector&lt;OBFFParameter&gt; &amp;parameter);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFParameter.shtml">OBFFParameter</a>* GetParameter(<span class="keyword">const</span> <span class="keywordtype">char</span>* a, <span class="keyword">const</span> <span class="keywordtype">char</span>* b, <span class="keyword">const</span> <span class="keywordtype">char</span>* c, <span class="keyword">const</span> <span class="keywordtype">char</span>* d,</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        std::vector&lt;OBFFParameter&gt; &amp;parameter);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <span class="keywordtype">int</span> GetParameterIdx(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keywordtype">int</span> d, std::vector&lt;OBFFParameter&gt; &amp;parameter);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> NumericalDerivative(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, <span class="keywordtype">int</span> terms = <a class="code" href="forcefield_8h.shtml#a586a185b0aed9265f6812ed4338cd8bd">OBFF_ENERGY</a>);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> NumericalSecondDerivative(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, <span class="keywordtype">int</span> terms = <a class="code" href="forcefield_8h.shtml#a586a185b0aed9265f6812ed4338cd8bd">OBFF_ENERGY</a>);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">     *   NEW gradients functions</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab2ac199e3ef0f47fbdc0365ededfeced">  488</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab2ac199e3ef0f47fbdc0365ededfeced">SetGradient</a>(<span class="keywordtype">double</span> *grad, <span class="keywordtype">int</span> idx)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> coordIdx = (idx - 1) * 3;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; 3; ++i) {</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        _gradientPtr[coordIdx + i] = grad[i];</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;      }</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    }</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab0b5fe1f004e97857de0cf641b5e3789">  498</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab0b5fe1f004e97857de0cf641b5e3789">AddGradient</a>(<span class="keywordtype">double</span> *grad, <span class="keywordtype">int</span> idx)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    {</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> coordIdx = (idx - 1) * 3;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; 3; ++i) {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        _gradientPtr[coordIdx + i] += grad[i];</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      }</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    }</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ad0da17ffd83c1041f1d0657404b4724d">  508</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ad0da17ffd83c1041f1d0657404b4724d">GetGradient</a>(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, <span class="keywordtype">int</span> <span class="comment">/*terms*/</span> = <a class="code" href="forcefield_8h.shtml#a586a185b0aed9265f6812ed4338cd8bd">OBFF_ENERGY</a>)</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    {</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> coordIdx = (a-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">GetIdx</a>() - 1) * 3;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      <span class="keywordflow">return</span> _gradientPtr + coordIdx;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    }</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab1736c0602ea4313ff7602aa948ece82">  516</a></span>&#160;    <span class="keywordtype">double</span>* <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab1736c0602ea4313ff7602aa948ece82">GetGradientPtr</a>()</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    {</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      <span class="keywordflow">return</span> _gradientPtr;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    }</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#afeabf5a9fd6207144ed24a80c39714a2">  523</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#afeabf5a9fd6207144ed24a80c39714a2">ClearGradients</a>()</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    {</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      <span class="comment">// We cannot use memset because IEEE floating point representations</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;      <span class="comment">// are not guaranteed by C/C++ standard, but this loop can be</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;      <span class="comment">// unrolled or vectorized by compilers</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; _ncoords; ++i)</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        _gradientPtr[i] = 0.0;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;      <span class="comment">//      memset(_gradientPtr, &#39;\0&#39;, sizeof(double)*_ncoords);</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    }</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="keywordtype">bool</span> IsInSameRing(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* a, <a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>* b);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="comment">// general variables</span></div><div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a5ae66d31df78d115efc8282c8c695c1a">  543</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>       <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a5ae66d31df78d115efc8282c8c695c1a">_mol</a>; </div><div class="line"><a name="l00544"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a40756214f69d1c40ad70b64ae9fdc08d">  544</a></span>&#160;    <span class="keywordtype">bool</span>        <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a40756214f69d1c40ad70b64ae9fdc08d">_init</a>; </div><div class="line"><a name="l00545"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a0ad96c121eb2ab3291c9f348f3e66eb4">  545</a></span>&#160;    std::string <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a0ad96c121eb2ab3291c9f348f3e66eb4">_parFile</a>; </div><div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a2d0a817f871831bed3e700ff65bd32ab">  546</a></span>&#160;    <span class="keywordtype">bool</span>        <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a2d0a817f871831bed3e700ff65bd32ab">_validSetup</a>; </div><div class="line"><a name="l00547"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#aa1d49201f58bfcceb6d47593bf360bcd">  547</a></span>&#160;    <span class="keywordtype">double</span>      *<a class="code" href="classOpenBabel_1_1OBForceField.shtml#aa1d49201f58bfcceb6d47593bf360bcd">_gradientPtr</a>; </div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="comment">// logging variables</span></div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#aa5950d373df53720595c030d3db04397">  549</a></span>&#160;    std::ostream* <a class="code" href="classOpenBabel_1_1OBForceField.shtml#aa5950d373df53720595c030d3db04397">_logos</a>; </div><div class="line"><a name="l00550"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a158daac1f91a0b0efd242be1bd7c30e4">  550</a></span>&#160;    <span class="keywordtype">char</span>        _logbuf[<a class="code" href="mol_8h.shtml#a6c7cd32e1bac137f05e4a752b4ad10af">BUFF_SIZE</a>+1]; </div><div class="line"><a name="l00551"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a4e929e2f2b2aeb818341fff4bc1d73d0">  551</a></span>&#160;    <span class="keywordtype">int</span>         <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a4e929e2f2b2aeb818341fff4bc1d73d0">_loglvl</a>; </div><div class="line"><a name="l00552"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a122d15094b107a94e4359e67e0e1f539">  552</a></span>&#160;    <span class="keywordtype">int</span>         <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a122d15094b107a94e4359e67e0e1f539">_origLogLevel</a>;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="comment">// conformer genereation (rotor search) variables</span></div><div class="line"><a name="l00554"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab95ae5a13edb24f5d32b01e2098f26df">  554</a></span>&#160;    <span class="keywordtype">int</span>         <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab95ae5a13edb24f5d32b01e2098f26df">_current_conformer</a>; </div><div class="line"><a name="l00555"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a7b2ba72f54b74909a53a0548cdf44ce2">  555</a></span>&#160;    std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a7b2ba72f54b74909a53a0548cdf44ce2">_energies</a>; </div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <span class="comment">// minimization variables</span></div><div class="line"><a name="l00557"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a6bbbb4fe9908eb55a3e1bd222e50e469">  557</a></span>&#160;    <span class="keywordtype">double</span>      _econv, <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a6bbbb4fe9908eb55a3e1bd222e50e469">_gconv</a>, _e_n1; </div><div class="line"><a name="l00558"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#afe138e40e061c04494421e5513829b37">  558</a></span>&#160;    <span class="keywordtype">int</span>         _cstep, <a class="code" href="classOpenBabel_1_1OBForceField.shtml#afe138e40e061c04494421e5513829b37">_nsteps</a>; </div><div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a1c24fef8a19cd43ec17f25b026570ad4">  559</a></span>&#160;    <span class="keywordtype">double</span>      *<a class="code" href="classOpenBabel_1_1OBForceField.shtml#a1c24fef8a19cd43ec17f25b026570ad4">_grad1</a>; </div><div class="line"><a name="l00560"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab39c453046b3d76a24615c0f4ddb5dc4">  560</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab39c453046b3d76a24615c0f4ddb5dc4">_ncoords</a>; </div><div class="line"><a name="l00561"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#afb076d7d251019d009f919e41161d004">  561</a></span>&#160;    <span class="keywordtype">int</span>         <a class="code" href="classOpenBabel_1_1OBForceField.shtml#afb076d7d251019d009f919e41161d004">_linesearch</a>; </div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="comment">// molecular dynamics variables</span></div><div class="line"><a name="l00563"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a74c5643406e1d2fc9a8ec5a64a746d6f">  563</a></span>&#160;    <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a74c5643406e1d2fc9a8ec5a64a746d6f">_timestep</a>; </div><div class="line"><a name="l00564"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a21c5ecf3204a9907236f7596268a76a1">  564</a></span>&#160;    <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a21c5ecf3204a9907236f7596268a76a1">_temp</a>; </div><div class="line"><a name="l00565"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a60c161177d9d80020f3a42d8f5ad2a97">  565</a></span>&#160;    <span class="keywordtype">double</span>      *<a class="code" href="classOpenBabel_1_1OBForceField.shtml#a60c161177d9d80020f3a42d8f5ad2a97">_velocityPtr</a>; </div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <span class="comment">// contraint varibles</span></div><div class="line"><a name="l00567"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a22f844c60684776be9d47109855e16de">  567</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a22f844c60684776be9d47109855e16de">_constraints</a>; </div><div class="line"><a name="l00568"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a6bac7b2361f7762b3d322a069283449f">  568</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a6bac7b2361f7762b3d322a069283449f">_fixAtom</a>; </div><div class="line"><a name="l00569"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a717a6bb152adbc83a9492350d7ddde71">  569</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a717a6bb152adbc83a9492350d7ddde71">_ignoreAtom</a>; </div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="comment">// cut-off variables</span></div><div class="line"><a name="l00571"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a6664339ecef04e70cd97a0a5738b99c3">  571</a></span>&#160;    <span class="keywordtype">bool</span>        <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a6664339ecef04e70cd97a0a5738b99c3">_cutoff</a>; </div><div class="line"><a name="l00572"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a1eab6cf4abedfa50bd898b5d8394586a">  572</a></span>&#160;    <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a1eab6cf4abedfa50bd898b5d8394586a">_rvdw</a>; </div><div class="line"><a name="l00573"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a1cb4961672fc9fdbbcc6f77f10328124">  573</a></span>&#160;    <span class="keywordtype">double</span>      <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a1cb4961672fc9fdbbcc6f77f10328124">_rele</a>; </div><div class="line"><a name="l00574"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#acf019f5fea50c00abe4a8eceb1ebefd0">  574</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>    <a class="code" href="classOpenBabel_1_1OBForceField.shtml#acf019f5fea50c00abe4a8eceb1ebefd0">_vdwpairs</a>; </div><div class="line"><a name="l00575"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a304e7d6e8b9b55195148d8ce241c4231">  575</a></span>&#160;    <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>    <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a304e7d6e8b9b55195148d8ce241c4231">_elepairs</a>; </div><div class="line"><a name="l00576"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a6daefdab547529f4ddee1b729085df82">  576</a></span>&#160;    <span class="keywordtype">int</span>         <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a6daefdab547529f4ddee1b729085df82">_pairfreq</a>; </div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="comment">// group variables</span></div><div class="line"><a name="l00578"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ad73a3ddc8c65a31256666ba5cd10fcf3">  578</a></span>&#160;    std::vector&lt;OBBitVec&gt; <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ad73a3ddc8c65a31256666ba5cd10fcf3">_intraGroup</a>; </div><div class="line"><a name="l00579"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a6212b1ca8ff39273ec120c20524deba4">  579</a></span>&#160;    std::vector&lt;OBBitVec&gt; <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a6212b1ca8ff39273ec120c20524deba4">_interGroup</a>; </div><div class="line"><a name="l00580"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab3487cbb18bbd78d58a4afa84d65beb4">  580</a></span>&#160;    std::vector&lt;std::pair&lt;OBBitVec, OBBitVec&gt; &gt; <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab3487cbb18bbd78d58a4afa84d65beb4">_interGroups</a>; </div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml">OBForceField</a>* MakeNewInstance()=0;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab49558e469015d76e7c27ee0cfdf4a75">  589</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab49558e469015d76e7c27ee0cfdf4a75">~OBForceField</a>()</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    {</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      <span class="keywordflow">if</span> (_grad1 != NULL) {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        <span class="keyword">delete</span> [] _grad1;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        _grad1 = NULL;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;      }</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;      <span class="keywordflow">if</span> (_gradientPtr != NULL) {</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="keyword">delete</span> [] _gradientPtr;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        _gradientPtr = NULL;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;      }</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    }</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a45db88b29eb37e9dd105bf4032e421d2">  602</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a45db88b29eb37e9dd105bf4032e421d2">TypeID</a>()</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    {</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;      <span class="keywordflow">return</span> <span class="stringliteral">&quot;forcefields&quot;</span>;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    }</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a4d625c122a1c2ed931851331b0243950">  610</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml">OBForceField</a>* <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a4d625c122a1c2ed931851331b0243950">FindForceField</a>(<span class="keyword">const</span> std::string&amp; ID)</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    {</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;      <span class="keywordflow">return</span> FindType(ID.c_str());</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    }</div><div class="line"><a name="l00617"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a8af11ddb5650f7733164c81da3aacbd8">  617</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml">OBForceField</a>* <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a8af11ddb5650f7733164c81da3aacbd8">FindForceField</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *ID)</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    {</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      <span class="keywordflow">return</span> FindType(ID);</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    }</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00624"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#af264a32549daf4185196ac9d9c074833">  624</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#af264a32549daf4185196ac9d9c074833">SetParameterFile</a>(<span class="keyword">const</span> std::string &amp;filename)</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    {</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;      _parFile = filename;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;      _init = <span class="keyword">false</span>;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    }</div><div class="line"><a name="l00631"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a1107abae4af40cd96faa7385b4de79c2">  631</a></span>&#160;    <span class="keyword">virtual</span> std::string <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a1107abae4af40cd96faa7385b4de79c2">GetUnit</a>() { <span class="keywordflow">return</span> std::string(<span class="stringliteral">&quot;au&quot;</span>); }</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <span class="comment">/* Does this force field have analytical gradients defined for all</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment">     * calculation components (bonds, angles, non-bonded, etc.)</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="comment">     * If this is true, code should default to using OBFF_ANALYTICAL_GRADIENT</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="comment">     * for SteepestDescent() or ConjugateGradients().</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">     * \return True if all analytical gradients are implemented.</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00638"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a6bdadd446f41751086aff8c6a4fde5cf">  638</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a6bdadd446f41751086aff8c6a4fde5cf">HasAnalyticalGradients</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <span class="keywordtype">bool</span> Setup(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keywordtype">bool</span> Setup(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a> &amp;constraints);</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="comment">// move to protected in future version</span></div><div class="line"><a name="l00654"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a4832732ca896c32a5c7cab59513f2190">  654</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a4832732ca896c32a5c7cab59513f2190">ParseParamFile</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <span class="comment">// move to protected in future version</span></div><div class="line"><a name="l00659"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a5e025d2eb5240ce5776e5cd4ad54f557">  659</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a5e025d2eb5240ce5776e5cd4ad54f557">SetTypes</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="comment">// move to protected in future version</span></div><div class="line"><a name="l00664"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a0d8cc6c6af6a74b49c13ef35750910c0">  664</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a0d8cc6c6af6a74b49c13ef35750910c0">SetFormalCharges</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    <span class="comment">// move to protected in future version</span></div><div class="line"><a name="l00669"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab6922ea591809c44c1c0d89be3f8b691">  669</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab6922ea591809c44c1c0d89be3f8b691">SetPartialCharges</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    <span class="comment">// move to protected in future version</span></div><div class="line"><a name="l00674"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#af2662d702c1eb43cc58c30d274712e3f">  674</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#af2662d702c1eb43cc58c30d274712e3f">SetupCalculations</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="comment">// move to protected in future version</span></div><div class="line"><a name="l00680"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a7cf46e58ec76819b7ae31983cfdee9f2">  680</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a7cf46e58ec76819b7ae31983cfdee9f2">SetupPointers</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <span class="keywordtype">bool</span> IsSetupNeeded(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    <span class="keywordtype">bool</span> GetAtomTypes(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <span class="keywordtype">bool</span> GetPartialCharges(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="keywordtype">bool</span> GetCoordinates(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00728"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab9bff2ca9aad359da6491fa4c3f46577">  728</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab9bff2ca9aad359da6491fa4c3f46577">UpdateCoordinates</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol) {<span class="keywordflow">return</span> GetCoordinates(mol); }</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="keywordtype">bool</span> GetConformers(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00735"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a5c29065ad6e1322ade9087657bc576ec">  735</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a5c29065ad6e1322ade9087657bc576ec">UpdateConformers</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol) { <span class="keywordflow">return</span> GetConformers(mol); }</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordtype">bool</span> SetCoordinates(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <span class="keywordtype">bool</span> SetConformers(<a class="code" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol);</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <a class="code" href="classOpenBabel_1_1OBGridData.shtml">OBGridData</a> *GetGrid(<span class="keywordtype">double</span> step, <span class="keywordtype">double</span> padding, <span class="keyword">const</span> <span class="keywordtype">char</span> *type, <span class="keywordtype">double</span> pchg);</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    <span class="comment">// Interacting groups                                                  //</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <span class="keywordtype">void</span> AddIntraGroup(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;group);</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <span class="keywordtype">void</span> AddInterGroup(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;group);</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keywordtype">void</span> AddInterGroups(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;group1, <a class="code" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;group2);</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keywordtype">void</span> ClearGroups();</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    <span class="keywordtype">bool</span> HasGroups();</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    <span class="comment">// Cut-off                                                             //</span></div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#acfbc43a75be62083cb454b62fb7c24fc">  798</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#acfbc43a75be62083cb454b62fb7c24fc">EnableCutOff</a>(<span class="keywordtype">bool</span> enable)</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    {</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;      _cutoff = enable;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    }</div><div class="line"><a name="l00804"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a395ba2797e3bc2f4ad4a401b074d0b48">  804</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a395ba2797e3bc2f4ad4a401b074d0b48">IsCutOffEnabled</a>()</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    {</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      <span class="keywordflow">return</span> _cutoff;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    }</div><div class="line"><a name="l00811"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a82b6dd2103b4751237474bb3671a4d24">  811</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a82b6dd2103b4751237474bb3671a4d24">SetVDWCutOff</a>(<span class="keywordtype">double</span> r)</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    {</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;      _rvdw = r;</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    }</div><div class="line"><a name="l00818"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a4109e7005a5eb4c91f10bd68958bfbf7">  818</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a4109e7005a5eb4c91f10bd68958bfbf7">GetVDWCutOff</a>()</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    {</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;      <span class="keywordflow">return</span> _rvdw;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    }</div><div class="line"><a name="l00826"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a8cd8ec1bf4c4405aa94f3b6b3a86e45e">  826</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a8cd8ec1bf4c4405aa94f3b6b3a86e45e">SetElectrostaticCutOff</a>(<span class="keywordtype">double</span> r)</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    {</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;      _rele = r;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    }</div><div class="line"><a name="l00833"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a15a2329a93fec0c5864c6229daf4254f">  833</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a15a2329a93fec0c5864c6229daf4254f">GetElectrostaticCutOff</a>()</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    {</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;      <span class="keywordflow">return</span> _rele;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    }</div><div class="line"><a name="l00842"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#af02e18f8a525f1e682b58654656f5d12">  842</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#af02e18f8a525f1e682b58654656f5d12">SetUpdateFrequency</a>(<span class="keywordtype">int</span> f)</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    {</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;      _pairfreq = f;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;    }</div><div class="line"><a name="l00849"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a80a6e534a8f9a7ba20d4fc25b75c6891">  849</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a80a6e534a8f9a7ba20d4fc25b75c6891">GetUpdateFrequency</a>()</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    {</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;      <span class="keywordflow">return</span> _pairfreq;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    }</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    <span class="keywordtype">void</span> UpdatePairsSimple();</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    <span class="comment">//void UpdatePairsGroup(); TODO</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetNumPairs();</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetNumElectrostaticPairs();</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetNumVDWPairs();</div><div class="line"><a name="l00876"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a3545e8d4699a3cd7beba90de2fa7bedc">  876</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a3545e8d4699a3cd7beba90de2fa7bedc">EnableAllPairs</a>()</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    {</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;      <span class="comment">// TODO: OBBitVec doesn&#39;t seem to be allocating it&#39;s memory correctly</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;      <span class="comment">//_vdwpairs.SetRangeOn(0, _numpairs-1);</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;      <span class="comment">//_elepairs.SetRangeOn(0, _numpairs-1);</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    }</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    <span class="comment">// Energy Evaluation                                                   //</span></div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;</div><div class="line"><a name="l00899"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ad9242de2f838fb94efcd85f7182a6f83">  899</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ad9242de2f838fb94efcd85f7182a6f83">Energy</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00906"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ada5914c7c0927cc9157d404ac175bcce">  906</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ada5914c7c0927cc9157d404ac175bcce">E_Bond</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00913"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ab071cd3395d95bfa4c90cbdc3426c95a">  913</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ab071cd3395d95bfa4c90cbdc3426c95a">E_Angle</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00920"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a180eb032b11995b3140d54b1fd1ec991">  920</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a180eb032b11995b3140d54b1fd1ec991">E_StrBnd</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00927"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#abcf664aaa0bbb807a4f6e3d441d3147a">  927</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#abcf664aaa0bbb807a4f6e3d441d3147a">E_Torsion</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00934"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a83d00f6965c92799d4d4a6e488a737e3">  934</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a83d00f6965c92799d4d4a6e488a737e3">E_OOP</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00941"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a9a27f6899e6a57b234cfe79022ca0d1c">  941</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a9a27f6899e6a57b234cfe79022ca0d1c">E_VDW</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00948"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a7ed5b3a5502abbe3a9931165475905e0">  948</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a7ed5b3a5502abbe3a9931165475905e0">E_Electrostatic</a>(<span class="keywordtype">bool</span> UNUSED(gradients) = <span class="keyword">true</span>) { <span class="keywordflow">return</span> 0.0f; }</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    <span class="comment">// Logging                                                             //</span></div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;    <span class="keywordtype">void</span> PrintTypes();</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    <span class="keywordtype">void</span> PrintFormalCharges();</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="keywordtype">void</span> PrintPartialCharges();</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    <span class="keywordtype">void</span> PrintVelocities();</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;    <span class="keywordtype">bool</span> SetLogFile(std::ostream *pos);</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keywordtype">bool</span> SetLogLevel(<span class="keywordtype">int</span> level);</div><div class="line"><a name="l01002"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#aa9927fd2efb61460c8e879f83c0d387e"> 1002</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#aa9927fd2efb61460c8e879f83c0d387e">GetLogLevel</a>() { <span class="keywordflow">return</span> _loglvl; }</div><div class="line"><a name="l01006"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a06249fabc93686f6fa389173bcd2e300"> 1006</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a06249fabc93686f6fa389173bcd2e300">OBFFLog</a>(std::string msg)</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    {</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;      <span class="keywordflow">if</span> (!_logos)</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;      *_logos &lt;&lt; msg;</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    }</div><div class="line"><a name="l01016"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a232f01774986e74179b56eb961728a54"> 1016</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a232f01774986e74179b56eb961728a54">OBFFLog</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *msg)</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    {</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;      <span class="keywordflow">if</span> (!_logos)</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;      *_logos &lt;&lt; msg;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    }</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;    <span class="comment">// Structure Generation                                                //</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    <span class="keywordtype">void</span> DistanceGeometry();</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <span class="keywordtype">void</span> SystematicRotorSearch(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> geomSteps = 2500, <span class="keywordtype">bool</span> sampleRingBonds = <span class="keyword">false</span>);</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;    <span class="keywordtype">int</span> SystematicRotorSearchInitialize(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> geomSteps = 2500, <span class="keywordtype">bool</span> sampleRingBonds = <span class="keyword">false</span>);</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;    <span class="keywordtype">bool</span> SystematicRotorSearchNextConformer(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> geomSteps = 2500);</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;    <span class="keywordtype">void</span> RandomRotorSearch(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> conformers, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> geomSteps = 2500,</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;                           <span class="keywordtype">bool</span> sampleRingBonds = <span class="keyword">false</span>);</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    <span class="keywordtype">void</span> RandomRotorSearchInitialize(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> conformers, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> geomSteps = 2500,</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;                                     <span class="keywordtype">bool</span> sampleRingBonds = <span class="keyword">false</span>);</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;    <span class="keywordtype">bool</span> RandomRotorSearchNextConformer(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> geomSteps = 2500);</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;    <span class="keywordtype">void</span> WeightedRotorSearch(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> conformers, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> geomSteps,</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;                             <span class="keywordtype">bool</span> sampleRingBonds = <span class="keyword">false</span>);</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    <span class="keywordtype">int</span> FastRotorSearch(<span class="keywordtype">bool</span> permute = <span class="keyword">true</span>);</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;<span class="preprocessor">#ifdef HAVE_EIGEN</span></div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    <span class="keywordtype">int</span> DiverseConfGen(<span class="keywordtype">double</span> rmsd, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nconfs = 0, <span class="keywordtype">double</span> energy_gap = 50, <span class="keywordtype">bool</span> verbose = <span class="keyword">false</span>);</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    <span class="comment">// Energy Minimization                                                 //</span></div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;</div><div class="line"><a name="l01191"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a303afe5059c4c70d029d160d6369fca7"> 1191</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a303afe5059c4c70d029d160d6369fca7">SetLineSearchType</a>(<span class="keywordtype">int</span> type)</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;    {</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;      _linesearch = type;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    }</div><div class="line"><a name="l01198"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#aa0635968faae8eae39c1157f34f1f186"> 1198</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#aa0635968faae8eae39c1157f34f1f186">GetLineSearchType</a>()</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    {</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;      <span class="keywordflow">return</span> _linesearch;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    }</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> LineSearch(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;direction);</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;    <span class="keywordtype">double</span> LineSearch(<span class="keywordtype">double</span> *currentCoords, <span class="keywordtype">double</span> *direction);</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;    <span class="keywordtype">double</span> Newton2NumLineSearch(<span class="keywordtype">double</span> *direction);</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    <span class="keywordtype">void</span>   LineSearchTakeStep(<span class="keywordtype">double</span> *origCoords, <span class="keywordtype">double</span> *direction, <span class="keywordtype">double</span> step);</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    <span class="keywordtype">void</span> SteepestDescent(<span class="keywordtype">int</span> steps, <span class="keywordtype">double</span> econv = 1e-6f, <span class="keywordtype">int</span> method = <a class="code" href="forcefield_8h.shtml#aa79097c99a0f44c20585623da1f5098e">OBFF_ANALYTICAL_GRADIENT</a>);</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;    <span class="keywordtype">void</span> SteepestDescentInitialize(<span class="keywordtype">int</span> steps = 1000, <span class="keywordtype">double</span> econv = 1e-6f, <span class="keywordtype">int</span> method = <a class="code" href="forcefield_8h.shtml#aa79097c99a0f44c20585623da1f5098e">OBFF_ANALYTICAL_GRADIENT</a>);</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;    <span class="keywordtype">bool</span> SteepestDescentTakeNSteps(<span class="keywordtype">int</span> n);</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;    <span class="keywordtype">void</span> ConjugateGradients(<span class="keywordtype">int</span> steps, <span class="keywordtype">double</span> econv = 1e-6f, <span class="keywordtype">int</span> method = <a class="code" href="forcefield_8h.shtml#aa79097c99a0f44c20585623da1f5098e">OBFF_ANALYTICAL_GRADIENT</a>);</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;    <span class="keywordtype">void</span> ConjugateGradientsInitialize(<span class="keywordtype">int</span> steps = 1000, <span class="keywordtype">double</span> econv = 1e-6f, <span class="keywordtype">int</span> method = <a class="code" href="forcefield_8h.shtml#aa79097c99a0f44c20585623da1f5098e">OBFF_ANALYTICAL_GRADIENT</a>);</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;    <span class="keywordtype">bool</span> ConjugateGradientsTakeNSteps(<span class="keywordtype">int</span> n);</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    <span class="comment">// Molecular Dynamics                                                  //</span></div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;    <span class="keywordtype">void</span> GenerateVelocities();</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    <span class="keywordtype">void</span> CorrectVelocities();</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;    <span class="keywordtype">void</span> MolecularDynamicsTakeNSteps(<span class="keywordtype">int</span> n, <span class="keywordtype">double</span> <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">T</a>, <span class="keywordtype">double</span> timestep = 0.001, <span class="keywordtype">int</span> method = <a class="code" href="forcefield_8h.shtml#aa79097c99a0f44c20585623da1f5098e">OBFF_ANALYTICAL_GRADIENT</a>);</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;    <span class="comment">// Constraints                                                         //</span></div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;</div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;</div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;    <a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a>&amp; GetConstraints();</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;    <span class="keywordtype">void</span> SetConstraints(<a class="code" href="classOpenBabel_1_1OBFFConstraints.shtml">OBFFConstraints</a>&amp; constraints);</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;    <span class="keywordtype">void</span> SetFixAtom(<span class="keywordtype">int</span> index);</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;    <span class="keywordtype">void</span> UnsetFixAtom();</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;    <span class="keywordtype">void</span> SetIgnoreAtom(<span class="keywordtype">int</span> index);</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;    <span class="keywordtype">void</span> UnsetIgnoreAtom();</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IgnoreCalculation(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b);</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IgnoreCalculation(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c);</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IgnoreCalculation(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keywordtype">int</span> d);</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;    <span class="comment">// Validation                                                          //</span></div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;    <span class="keywordtype">bool</span> DetectExplosion();</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> ValidateLineSearch(<a class="code" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;direction);</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;    <span class="keywordtype">void</span> ValidateSteepestDescent(<span class="keywordtype">int</span> steps);</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;    <span class="keywordtype">void</span> ValidateConjugateGradients(<span class="keywordtype">int</span> steps);</div><div class="line"><a name="l01470"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a591a6c018926edaa3f398ca7134e26c9"> 1470</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a591a6c018926edaa3f398ca7134e26c9">Validate</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l01475"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a5bd73ca104b0fd34659d77a7f9d3a0a4"> 1475</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a5bd73ca104b0fd34659d77a7f9d3a0a4">ValidateGradients</a>() { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;    <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> ValidateGradientError(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;numgrad, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;anagrad);</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;</div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;    <span class="comment">// Vector Analysis                                                     //</span></div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;<span class="comment"></span></div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorBondDerivative(<span class="keywordtype">double</span> *pos_a, <span class="keywordtype">double</span> *pos_b,</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;                                       <span class="keywordtype">double</span> *force_a, <span class="keywordtype">double</span> *force_b);</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorDistanceDerivative(<span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> pos_i, <span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> pos_j,</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;                                           <span class="keywordtype">double</span> *force_i, <span class="keywordtype">double</span> *force_j);</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorLengthDerivative(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;a, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;b);</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorAngleDerivative(<span class="keywordtype">double</span> *pos_a, <span class="keywordtype">double</span> *pos_b, <span class="keywordtype">double</span> *pos_c,</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;                                        <span class="keywordtype">double</span> *force_a, <span class="keywordtype">double</span> *force_b, <span class="keywordtype">double</span> *force_c);</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorAngleDerivative(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;a, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;b, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;c);</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorOOPDerivative(<span class="keywordtype">double</span> *pos_a, <span class="keywordtype">double</span> *pos_b, <span class="keywordtype">double</span> *pos_c, <span class="keywordtype">double</span> *pos_d,</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;                                      <span class="keywordtype">double</span> *force_a, <span class="keywordtype">double</span> *force_b, <span class="keywordtype">double</span> *force_c, <span class="keywordtype">double</span> *force_d);</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorOOPDerivative(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;a, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;b, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;c, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;d);</div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorTorsionDerivative(<span class="keywordtype">double</span> *pos_a, <span class="keywordtype">double</span> *pos_b, <span class="keywordtype">double</span> *pos_c, <span class="keywordtype">double</span> *pos_d,</div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;                                          <span class="keywordtype">double</span> *force_a, <span class="keywordtype">double</span> *force_b, <span class="keywordtype">double</span> *force_c, <span class="keywordtype">double</span> *force_d);</div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorTorsionDerivative(<a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;a, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;b, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;c, <a class="code" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;d);</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;</div><div class="line"><a name="l01558"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ad88b7a26afc5f8b478e299a96d555f14"> 1558</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ad88b7a26afc5f8b478e299a96d555f14">VectorSubtract</a>(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> *j, <span class="keywordtype">double</span> *result)</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;    {</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;        result[c] = i[c] - j[c];</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;    }</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;</div><div class="line"><a name="l01564"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a19395cf2512e5b3af33f4ea603c18436"> 1564</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a19395cf2512e5b3af33f4ea603c18436">VectorSubtract</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> i, <span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> j, <span class="keywordtype">double</span> *result)</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;    {</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;        result[c] = i[c] - j[c];</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;    }</div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;</div><div class="line"><a name="l01575"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a34e901932f48c16a06929d7da9308b98"> 1575</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a34e901932f48c16a06929d7da9308b98">VectorAdd</a>(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> *j, <span class="keywordtype">double</span> *result)</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;    {</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;        result[c] = i[c] + j[c];</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;    }</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;</div><div class="line"><a name="l01586"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ac9d079c742232c33bc668f09135ab1a5"> 1586</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ac9d079c742232c33bc668f09135ab1a5">VectorDivide</a>(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> n, <span class="keywordtype">double</span> *result)</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;    {</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;        result[c] = i[c] / n;</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;    }</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;</div><div class="line"><a name="l01597"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ad3db6d00549c9448579509d878735ec0"> 1597</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ad3db6d00549c9448579509d878735ec0">VectorMultiply</a>(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> n, <span class="keywordtype">double</span> *result)</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;    {</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;        result[c] = i[c] * n;</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;    }</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;</div><div class="line"><a name="l01603"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a33ebd98d01af8308d5b4f0cf0ef3b151"> 1603</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a33ebd98d01af8308d5b4f0cf0ef3b151">VectorMultiply</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> i, <span class="keyword">const</span> <span class="keywordtype">double</span> n, <span class="keywordtype">double</span> *result)</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;    {</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;        result[c] = i[c] * n;</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;    }</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;</div><div class="line"><a name="l01613"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a2bd8889c439dd81f3492d409f27e80d4"> 1613</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a2bd8889c439dd81f3492d409f27e80d4">VectorSelfMultiply</a>(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> n)</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;    {</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;        i[c] *= n;</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;    }</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;</div><div class="line"><a name="l01622"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a09521bcec46ef53d75215305755a911d"> 1622</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a09521bcec46ef53d75215305755a911d">VectorNormalize</a>(<span class="keywordtype">double</span> *i)</div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;    {</div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;      <span class="keywordtype">double</span> length = VectorLength(i);</div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;        i[c] /= length;</div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;    }</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;</div><div class="line"><a name="l01633"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a12db497d1100ca5a0620ba2076581a63"> 1633</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a12db497d1100ca5a0620ba2076581a63">VectorCopy</a>(<span class="keywordtype">double</span> *from, <span class="keywordtype">double</span> *to)</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;    {</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;        to[c] = from[c];</div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;    }</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;</div><div class="line"><a name="l01643"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#afa91d516c7ab5c44d0443c15deb62910"> 1643</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#afa91d516c7ab5c44d0443c15deb62910">VectorLength</a>(<span class="keywordtype">double</span> *i)</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;    {</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;      <span class="keywordflow">return</span> sqrt( i[0]*i[0] + i[1]*i[1] + i[2]*i[2] );</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;    }</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;</div><div class="line"><a name="l01648"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a655c6950fb947600a4ffcbbf5f53fc18"> 1648</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a655c6950fb947600a4ffcbbf5f53fc18">VectorDistance</a>(<span class="keywordtype">double</span> *pos_i, <span class="keywordtype">double</span> *pos_j)</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;    {</div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;      <span class="keywordtype">double</span> ij[3];</div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;      VectorSubtract(pos_i, pos_j, ij);</div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">double</span> rij = VectorLength(ij);</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;      <span class="keywordflow">return</span> rij;</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;    }</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorAngle(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> *j, <span class="keywordtype">double</span> *k);</div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorTorsion(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> *j, <span class="keywordtype">double</span> *k, <span class="keywordtype">double</span> *l);</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> VectorOOP(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> *j, <span class="keywordtype">double</span> *k, <span class="keywordtype">double</span> *l);</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;</div><div class="line"><a name="l01685"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#ae9651eef486a9afd00ef38c972df90f8"> 1685</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#ae9651eef486a9afd00ef38c972df90f8">VectorClear</a>(<span class="keywordtype">double</span> *i)</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;    {</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;        i[c] = 0.0;</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;    }</div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;</div><div class="line"><a name="l01696"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a847a262329a92da08c099830a8431a48"> 1696</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a847a262329a92da08c099830a8431a48">VectorDot</a>(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> *j)</div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;    {</div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;      <span class="keywordtype">double</span> result = 0.0;</div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;      <span class="comment">// Written as a loop for vectorization</span></div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;      <span class="comment">// Loop will be unrolled by compiler otherwise</span></div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; 3; ++c)</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;        result += i[c]*j[c];</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;      <span class="keywordflow">return</span> result;</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;    }</div><div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;</div><div class="line"><a name="l01711"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a814fd94395b7e2dfe95d78c11eb2a004"> 1711</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a814fd94395b7e2dfe95d78c11eb2a004">VectorCross</a>(<span class="keywordtype">double</span> *i, <span class="keywordtype">double</span> *j, <span class="keywordtype">double</span> *result)</div><div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;    {</div><div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;      result[0] =   i[1]*j[2] - i[2]*j[1];</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;      result[1] = - i[0]*j[2] + i[2]*j[0];</div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;      result[2] =   i[0]*j[1] - i[1]*j[0];</div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;    }</div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;</div><div class="line"><a name="l01718"></a><span class="lineno"><a class="line" href="classOpenBabel_1_1OBForceField.shtml#a336e29059a710e30d98a0d9898a10c63"> 1718</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBForceField.shtml#a336e29059a710e30d98a0d9898a10c63">PrintVector</a>(<span class="keywordtype">double</span> *i)</div><div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;    {</div><div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;      std::cout &lt;&lt; <span class="stringliteral">&quot;&lt;&quot;</span> &lt;&lt; i[0] &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; i[1] &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; i[2] &lt;&lt; <span class="stringliteral">&quot;&gt;&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;    }</div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;  }; <span class="comment">// class OBForceField</span></div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;</div><div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;}<span class="comment">// namespace OpenBabel</span></div><div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;</div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;<span class="preprocessor">#endif   // OB_FORCEFIELD_H</span></div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;</div><div class="ttc" id="namespaceOpenBabel_shtml_ace51dfd98be07acf3a9c75c21e8d8af2"><div class="ttname"><a href="namespaceOpenBabel.shtml#ace51dfd98be07acf3a9c75c21e8d8af2">OpenBabel::VZero</a></div><div class="ttdeci">const vector3 VZero</div><div class="ttdoc">The zero vector: &lt;0.0, 0.0, 0.0&gt; </div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a7ed5b3a5502abbe3a9931165475905e0"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a7ed5b3a5502abbe3a9931165475905e0">OpenBabel::OBForceField::E_Electrostatic</a></div><div class="ttdeci">virtual double E_Electrostatic(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:948</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_ac8bb3912a3ce86b15842e79d0b421204"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#ac8bb3912a3ce86b15842e79d0b421204">OpenBabel::OBFFParameter::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">Reset the atom types and set all parameters to zero. </div><div class="ttdef"><b>Definition:</b> forcefield.h:126</div></div>
<div class="ttc" id="griddata_8h_shtml"><div class="ttname"><a href="griddata_8h.shtml">griddata.h</a></div><div class="ttdoc">OBGenericData class to connect numeric grids (e.g., orbitals, electrostatic potential) to molecules...</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation4_shtml_acbada7180292de7f7c8cafc3c65ba802"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation4.shtml#acbada7180292de7f7c8cafc3c65ba802">OpenBabel::OBFFCalculation4::~OBFFCalculation4</a></div><div class="ttdeci">virtual ~OBFFCalculation4()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> forcefield.h:212</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a5ae66d31df78d115efc8282c8c695c1a"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a5ae66d31df78d115efc8282c8c695c1a">OpenBabel::OBForceField::_mol</a></div><div class="ttdeci">OBMol _mol</div><div class="ttdoc">Molecule to be evaluated or minimized. </div><div class="ttdef"><b>Definition:</b> forcefield.h:543</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a83d00f6965c92799d4d4a6e488a737e3"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a83d00f6965c92799d4d4a6e488a737e3">OpenBabel::OBForceField::E_OOP</a></div><div class="ttdeci">virtual double E_OOP(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:934</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml">OpenBabel::OBFFParameter</a></div><div class="ttdoc">Internal class for OBForceField to hold forcefield parameters. </div><div class="ttdef"><b>Definition:</b> forcefield.h:94</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_a360127e447a0f25cfd633cba0c784db7"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#a360127e447a0f25cfd633cba0c784db7">OpenBabel::OBFFConstraint::gradd</a></div><div class="ttdeci">vector3 gradd</div><div class="ttdef"><b>Definition:</b> forcefield.h:245</div></div>
<div class="ttc" id="namespaceOpenBabel_1_1OBResidueIndex_shtml_a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce"><div class="ttname"><a href="namespaceOpenBabel_1_1OBResidueIndex.shtml#a385c44f6fb256e5716a2302a5b940388a21f40778b7db9343a6ca75ec2c41ccce">OpenBabel::OBResidueIndex::T</a></div><div class="ttdef"><b>Definition:</b> residue.h:340</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation3_shtml_a1adda0196551047b1256f060572007a5"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation3.shtml#a1adda0196551047b1256f060572007a5">OpenBabel::OBFFCalculation3::~OBFFCalculation3</a></div><div class="ttdeci">virtual ~OBFFCalculation3()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> forcefield.h:181</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab0b5fe1f004e97857de0cf641b5e3789"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab0b5fe1f004e97857de0cf641b5e3789">OpenBabel::OBForceField::AddGradient</a></div><div class="ttdeci">void AddGradient(double *grad, int idx)</div><div class="ttdef"><b>Definition:</b> forcefield.h:498</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_af02e18f8a525f1e682b58654656f5d12"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#af02e18f8a525f1e682b58654656f5d12">OpenBabel::OBForceField::SetUpdateFrequency</a></div><div class="ttdeci">void SetUpdateFrequency(int f)</div><div class="ttdef"><b>Definition:</b> forcefield.h:842</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ac9d079c742232c33bc668f09135ab1a5"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ac9d079c742232c33bc668f09135ab1a5">OpenBabel::OBForceField::VectorDivide</a></div><div class="ttdeci">static void VectorDivide(double *i, double n, double *result)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1586</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a5bd73ca104b0fd34659d77a7f9d3a0a4"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a5bd73ca104b0fd34659d77a7f9d3a0a4">OpenBabel::OBForceField::ValidateGradients</a></div><div class="ttdeci">virtual bool ValidateGradients()</div><div class="ttdef"><b>Definition:</b> forcefield.h:1475</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a4e929e2f2b2aeb818341fff4bc1d73d0"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a4e929e2f2b2aeb818341fff4bc1d73d0">OpenBabel::OBForceField::_loglvl</a></div><div class="ttdeci">int _loglvl</div><div class="ttdoc">Log level for output. </div><div class="ttdef"><b>Definition:</b> forcefield.h:551</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a655c6950fb947600a4ffcbbf5f53fc18"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a655c6950fb947600a4ffcbbf5f53fc18">OpenBabel::OBForceField::VectorDistance</a></div><div class="ttdeci">static double VectorDistance(double *pos_i, double *pos_j)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1648</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a4d625c122a1c2ed931851331b0243950"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a4d625c122a1c2ed931851331b0243950">OpenBabel::OBForceField::FindForceField</a></div><div class="ttdeci">static OBForceField * FindForceField(const std::string &amp;ID)</div><div class="ttdef"><b>Definition:</b> forcefield.h:610</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a74c5643406e1d2fc9a8ec5a64a746d6f"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a74c5643406e1d2fc9a8ec5a64a746d6f">OpenBabel::OBForceField::_timestep</a></div><div class="ttdeci">double _timestep</div><div class="ttdoc">Molecular dynamics time step in picoseconds. </div><div class="ttdef"><b>Definition:</b> forcefield.h:563</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a6bbbb4fe9908eb55a3e1bd222e50e469"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a6bbbb4fe9908eb55a3e1bd222e50e469">OpenBabel::OBForceField::_gconv</a></div><div class="ttdeci">double _gconv</div><div class="ttdef"><b>Definition:</b> forcefield.h:557</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_af264a32549daf4185196ac9d9c074833"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#af264a32549daf4185196ac9d9c074833">OpenBabel::OBForceField::SetParameterFile</a></div><div class="ttdeci">void SetParameterFile(const std::string &amp;filename)</div><div class="ttdef"><b>Definition:</b> forcefield.h:624</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ad0da17ffd83c1041f1d0657404b4724d"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ad0da17ffd83c1041f1d0657404b4724d">OpenBabel::OBForceField::GetGradient</a></div><div class="ttdeci">virtual vector3 GetGradient(OBAtom *a, int=OBFF_ENERGY)</div><div class="ttdef"><b>Definition:</b> forcefield.h:508</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation4_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation4.shtml">OpenBabel::OBFFCalculation4</a></div><div class="ttdoc">Internal class for OBForceField to hold energy and gradient calculations on specific force fields...</div><div class="ttdef"><b>Definition:</b> forcefield.h:200</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_afb076d7d251019d009f919e41161d004"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#afb076d7d251019d009f919e41161d004">OpenBabel::OBForceField::_linesearch</a></div><div class="ttdeci">int _linesearch</div><div class="ttdoc">LineSearch type. </div><div class="ttdef"><b>Definition:</b> forcefield.h:561</div></div>
<div class="ttc" id="base_8h_shtml"><div class="ttname"><a href="base_8h.shtml">base.h</a></div><div class="ttdoc">Base classes to build a graph. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraints_shtml_a770eb922e5625b67a4e40b83b8fdc8cc"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraints.shtml#a770eb922e5625b67a4e40b83b8fdc8cc">OpenBabel::OBFFConstraints::GetFixedBitVec</a></div><div class="ttdeci">OBBitVec GetFixedBitVec()</div><div class="ttdef"><b>Definition:</b> forcefield.h:401</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a1c24fef8a19cd43ec17f25b026570ad4"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a1c24fef8a19cd43ec17f25b026570ad4">OpenBabel::OBForceField::_grad1</a></div><div class="ttdeci">double * _grad1</div><div class="ttdoc">Used for conjugate gradients and steepest descent(Initialize and TakeNSteps) </div><div class="ttdef"><b>Definition:</b> forcefield.h:559</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a303afe5059c4c70d029d160d6369fca7"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a303afe5059c4c70d029d160d6369fca7">OpenBabel::OBForceField::SetLineSearchType</a></div><div class="ttdeci">void SetLineSearchType(int type)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1191</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation2_shtml_a086acc8d6f926ab15c5c385455810445"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation2.shtml#a086acc8d6f926ab15c5c385455810445">OpenBabel::OBFFCalculation2::idx_b</a></div><div class="ttdeci">int idx_b</div><div class="ttdef"><b>Definition:</b> forcefield.h:146</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraints_shtml_aa32799d67f2aeece7ee1a0d0ce78d488"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraints.shtml#aa32799d67f2aeece7ee1a0d0ce78d488">OpenBabel::OBFFConstraints::GetIgnoredBitVec</a></div><div class="ttdeci">OBBitVec GetIgnoredBitVec()</div><div class="ttdef"><b>Definition:</b> forcefield.h:398</div></div>
<div class="ttc" id="classOpenBabel_1_1OBPlugin_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBPlugin.shtml">OpenBabel::OBPlugin</a></div><div class="ttdoc">Base class for all types of dynamic classes discovered at runtime. </div><div class="ttdef"><b>Definition:</b> plugin.h:52</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ad88b7a26afc5f8b478e299a96d555f14"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ad88b7a26afc5f8b478e299a96d555f14">OpenBabel::OBForceField::VectorSubtract</a></div><div class="ttdeci">static void VectorSubtract(double *i, double *j, double *result)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1558</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation3_shtml_aa063f21c51ee71ca470bce2e7042b815"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation3.shtml#aa063f21c51ee71ca470bce2e7042b815">OpenBabel::OBFFCalculation3::SetupPointers</a></div><div class="ttdeci">virtual void SetupPointers()</div><div class="ttdef"><b>Definition:</b> forcefield.h:186</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a6bac7b2361f7762b3d322a069283449f"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a6bac7b2361f7762b3d322a069283449f">OpenBabel::OBForceField::_fixAtom</a></div><div class="ttdeci">static unsigned int _fixAtom</div><div class="ttdoc">SetFixAtom()/UnsetFixAtom() </div><div class="ttdef"><b>Definition:</b> forcefield.h:568</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a6212b1ca8ff39273ec120c20524deba4"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a6212b1ca8ff39273ec120c20524deba4">OpenBabel::OBForceField::_interGroup</a></div><div class="ttdeci">std::vector&lt; OBBitVec &gt; _interGroup</div><div class="ttdoc">groups for which intra-molecular interactions should be calculated </div><div class="ttdef"><b>Definition:</b> forcefield.h:579</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ada5914c7c0927cc9157d404ac175bcce"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ada5914c7c0927cc9157d404ac175bcce">OpenBabel::OBForceField::E_Bond</a></div><div class="ttdeci">virtual double E_Bond(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:906</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a45db88b29eb37e9dd105bf4032e421d2"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a45db88b29eb37e9dd105bf4032e421d2">OpenBabel::OBForceField::TypeID</a></div><div class="ttdeci">const char * TypeID()</div><div class="ttdef"><b>Definition:</b> forcefield.h:602</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_aa1d49201f58bfcceb6d47593bf360bcd"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#aa1d49201f58bfcceb6d47593bf360bcd">OpenBabel::OBForceField::_gradientPtr</a></div><div class="ttdeci">double * _gradientPtr</div><div class="ttdoc">pointer to the gradients (used by AddGradient(), minimization functions, ...) </div><div class="ttdef"><b>Definition:</b> forcefield.h:547</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a31c588c926e46d76ea0b6ea45e6f98a8"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a31c588c926e46d76ea0b6ea45e6f98a8">OpenBabel::OBFFParameter::operator=</a></div><div class="ttdeci">OBFFParameter &amp; operator=(const OBFFParameter &amp;ai)</div><div class="ttdoc">Assignment. </div><div class="ttdef"><b>Definition:</b> forcefield.h:107</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a395ba2797e3bc2f4ad4a401b074d0b48"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a395ba2797e3bc2f4ad4a401b074d0b48">OpenBabel::OBForceField::IsCutOffEnabled</a></div><div class="ttdeci">bool IsCutOffEnabled()</div><div class="ttdef"><b>Definition:</b> forcefield.h:804</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a86e4c325d35090aeb11ec1be9d2c4b92"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a86e4c325d35090aeb11ec1be9d2c4b92">OpenBabel::OBFFParameter::_a</a></div><div class="ttdeci">std::string _a</div><div class="ttdoc">used to store string atom types </div><div class="ttdef"><b>Definition:</b> forcefield.h:99</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a717a6bb152adbc83a9492350d7ddde71"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a717a6bb152adbc83a9492350d7ddde71">OpenBabel::OBForceField::_ignoreAtom</a></div><div class="ttdeci">static unsigned int _ignoreAtom</div><div class="ttdoc">SetIgnoreAtom()/UnsetIgnoreAtom() </div><div class="ttdef"><b>Definition:</b> forcefield.h:569</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_af9dd6c6924f23479933e0b8779a4bec2"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">OpenBabel::OBAtom::GetCoordinate</a></div><div class="ttdeci">double * GetCoordinate()</div><div class="ttdef"><b>Definition:</b> atom.h:271</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a436665a0d94c49fd61354af10a56e33d"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a436665a0d94c49fd61354af10a56e33d">OpenBabel::OBFFParameter::_d</a></div><div class="ttdeci">std::string _d</div><div class="ttdef"><b>Definition:</b> forcefield.h:99</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a19395cf2512e5b3af33f4ea603c18436"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a19395cf2512e5b3af33f4ea603c18436">OpenBabel::OBForceField::VectorSubtract</a></div><div class="ttdeci">static void VectorSubtract(const double *const i, const double *const j, double *result)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1564</div></div>
<div class="ttc" id="classOpenBabel_1_1OBMol_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBMol.shtml">OpenBabel::OBMol</a></div><div class="ttdoc">Molecule Class. </div><div class="ttdef"><b>Definition:</b> mol.h:113</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ad3db6d00549c9448579509d878735ec0"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ad3db6d00549c9448579509d878735ec0">OpenBabel::OBForceField::VectorMultiply</a></div><div class="ttdeci">static void VectorMultiply(double *i, double n, double *result)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1597</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation3_shtml_af305879d7db682f069904a4532e57ff2"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation3.shtml#af305879d7db682f069904a4532e57ff2">OpenBabel::OBFFCalculation3::c</a></div><div class="ttdeci">OBAtom * c</div><div class="ttdoc">Used to store the atoms for this OBFFCalculation. </div><div class="ttdef"><b>Definition:</b> forcefield.h:173</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_afa91d516c7ab5c44d0443c15deb62910"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#afa91d516c7ab5c44d0443c15deb62910">OpenBabel::OBForceField::VectorLength</a></div><div class="ttdeci">static double VectorLength(double *i)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1643</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation4_shtml_a457c0f77c032f8f7de69fabdd1a669a4"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation4.shtml#a457c0f77c032f8f7de69fabdd1a669a4">OpenBabel::OBFFCalculation4::d</a></div><div class="ttdeci">OBAtom * d</div><div class="ttdoc">Used to store the atoms for this OBFFCalculation. </div><div class="ttdef"><b>Definition:</b> forcefield.h:204</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a5e025d2eb5240ce5776e5cd4ad54f557"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a5e025d2eb5240ce5776e5cd4ad54f557">OpenBabel::OBForceField::SetTypes</a></div><div class="ttdeci">virtual bool SetTypes()</div><div class="ttdef"><b>Definition:</b> forcefield.h:659</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_acfbc43a75be62083cb454b62fb7c24fc"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#acfbc43a75be62083cb454b62fb7c24fc">OpenBabel::OBForceField::EnableCutOff</a></div><div class="ttdeci">void EnableCutOff(bool enable)</div><div class="ttdef"><b>Definition:</b> forcefield.h:798</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a8cd8ec1bf4c4405aa94f3b6b3a86e45e"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a8cd8ec1bf4c4405aa94f3b6b3a86e45e">OpenBabel::OBForceField::SetElectrostaticCutOff</a></div><div class="ttdeci">void SetElectrostaticCutOff(double r)</div><div class="ttdef"><b>Definition:</b> forcefield.h:826</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a82b6dd2103b4751237474bb3671a4d24"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a82b6dd2103b4751237474bb3671a4d24">OpenBabel::OBForceField::SetVDWCutOff</a></div><div class="ttdeci">void SetVDWCutOff(double r)</div><div class="ttdef"><b>Definition:</b> forcefield.h:811</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_a30de1b49893da89052152acbac377988"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#a30de1b49893da89052152acbac377988">OpenBabel::OBFFConstraint::rbc0</a></div><div class="ttdeci">double rbc0</div><div class="ttdef"><b>Definition:</b> forcefield.h:239</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab3487cbb18bbd78d58a4afa84d65beb4"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab3487cbb18bbd78d58a4afa84d65beb4">OpenBabel::OBForceField::_interGroups</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; OBBitVec, OBBitVec &gt; &gt; _interGroups</div><div class="ttdef"><b>Definition:</b> forcefield.h:580</div></div>
<div class="ttc" id="structOpenBabel_1_1LineSearchType_shtml"><div class="ttname"><a href="structOpenBabel_1_1LineSearchType.shtml">OpenBabel::LineSearchType</a></div><div class="ttdoc">The type of line search to be used for optimization – simple or Newton numeric. </div><div class="ttdef"><b>Definition:</b> forcefield.h:77</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a6bdadd446f41751086aff8c6a4fde5cf"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a6bdadd446f41751086aff8c6a4fde5cf">OpenBabel::OBForceField::HasAnalyticalGradients</a></div><div class="ttdeci">virtual bool HasAnalyticalGradients()</div><div class="ttdef"><b>Definition:</b> forcefield.h:638</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a122d15094b107a94e4359e67e0e1f539"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a122d15094b107a94e4359e67e0e1f539">OpenBabel::OBForceField::_origLogLevel</a></div><div class="ttdeci">int _origLogLevel</div><div class="ttdef"><b>Definition:</b> forcefield.h:552</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a7cf46e58ec76819b7ae31983cfdee9f2"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a7cf46e58ec76819b7ae31983cfdee9f2">OpenBabel::OBForceField::SetupPointers</a></div><div class="ttdeci">virtual bool SetupPointers()</div><div class="ttdef"><b>Definition:</b> forcefield.h:680</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a9a27f6899e6a57b234cfe79022ca0d1c"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a9a27f6899e6a57b234cfe79022ca0d1c">OpenBabel::OBForceField::E_VDW</a></div><div class="ttdeci">virtual double E_VDW(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:941</div></div>
<div class="ttc" id="mol_8h_shtml"><div class="ttname"><a href="mol_8h.shtml">mol.h</a></div><div class="ttdoc">Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel) ...</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ad9242de2f838fb94efcd85f7182a6f83"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ad9242de2f838fb94efcd85f7182a6f83">OpenBabel::OBForceField::Energy</a></div><div class="ttdeci">virtual double Energy(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:899</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a15a2329a93fec0c5864c6229daf4254f"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a15a2329a93fec0c5864c6229daf4254f">OpenBabel::OBForceField::GetElectrostaticCutOff</a></div><div class="ttdeci">double GetElectrostaticCutOff()</div><div class="ttdef"><b>Definition:</b> forcefield.h:833</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation2_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation2.shtml">OpenBabel::OBFFCalculation2</a></div><div class="ttdoc">Internal class for OBForceField to hold energy and gradient calculations on specific force fields...</div><div class="ttdef"><b>Definition:</b> forcefield.h:138</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab6922ea591809c44c1c0d89be3f8b691"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab6922ea591809c44c1c0d89be3f8b691">OpenBabel::OBForceField::SetPartialCharges</a></div><div class="ttdeci">virtual bool SetPartialCharges()</div><div class="ttdef"><b>Definition:</b> forcefield.h:669</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a3545e8d4699a3cd7beba90de2fa7bedc"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a3545e8d4699a3cd7beba90de2fa7bedc">OpenBabel::OBForceField::EnableAllPairs</a></div><div class="ttdeci">void EnableAllPairs()</div><div class="ttdef"><b>Definition:</b> forcefield.h:876</div></div>
<div class="ttc" id="classOpenBabel_1_1OBBitVec_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBBitVec.shtml">OpenBabel::OBBitVec</a></div><div class="ttdoc">A speed-optimized vector of bits. </div><div class="ttdef"><b>Definition:</b> bitvec.h:57</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_aa9927fd2efb61460c8e879f83c0d387e"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#aa9927fd2efb61460c8e879f83c0d387e">OpenBabel::OBForceField::GetLogLevel</a></div><div class="ttdeci">int GetLogLevel()</div><div class="ttdef"><b>Definition:</b> forcefield.h:1002</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a80a6e534a8f9a7ba20d4fc25b75c6891"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a80a6e534a8f9a7ba20d4fc25b75c6891">OpenBabel::OBForceField::GetUpdateFrequency</a></div><div class="ttdeci">int GetUpdateFrequency()</div><div class="ttdef"><b>Definition:</b> forcefield.h:849</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a6664339ecef04e70cd97a0a5738b99c3"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a6664339ecef04e70cd97a0a5738b99c3">OpenBabel::OBForceField::_cutoff</a></div><div class="ttdeci">bool _cutoff</div><div class="ttdoc">true = cut-off enabled </div><div class="ttdef"><b>Definition:</b> forcefield.h:571</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab071cd3395d95bfa4c90cbdc3426c95a"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab071cd3395d95bfa4c90cbdc3426c95a">OpenBabel::OBForceField::E_Angle</a></div><div class="ttdeci">virtual double E_Angle(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:913</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_abc62ecd7a79c7d1cd07ef8aee2ec0bb6"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#abc62ecd7a79c7d1cd07ef8aee2ec0bb6">OpenBabel::OBFFConstraint::d</a></div><div class="ttdeci">OBAtom * d</div><div class="ttdef"><b>Definition:</b> forcefield.h:243</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation4_shtml_ae06bd6c1d1e4d2b8e2fe5ddb797b2164"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation4.shtml#ae06bd6c1d1e4d2b8e2fe5ddb797b2164">OpenBabel::OBFFCalculation4::pos_d</a></div><div class="ttdeci">double * pos_d</div><div class="ttdoc">Pointer to atom coordinates as double[3]. </div><div class="ttdef"><b>Definition:</b> forcefield.h:208</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a34e901932f48c16a06929d7da9308b98"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a34e901932f48c16a06929d7da9308b98">OpenBabel::OBForceField::VectorAdd</a></div><div class="ttdeci">static void VectorAdd(double *i, double *j, double *result)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1575</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a09521bcec46ef53d75215305755a911d"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a09521bcec46ef53d75215305755a911d">OpenBabel::OBForceField::VectorNormalize</a></div><div class="ttdeci">static void VectorNormalize(double *i)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1622</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraints_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraints.shtml">OpenBabel::OBFFConstraints</a></div><div class="ttdoc">Internal class for OBForceField to handle constraints. </div><div class="ttdef"><b>Definition:</b> forcefield.h:278</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation2_shtml_a1d26cc49e49afe96406210d6beaf418a"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation2.shtml#a1d26cc49e49afe96406210d6beaf418a">OpenBabel::OBFFCalculation2::energy</a></div><div class="ttdeci">double energy</div><div class="ttdoc">Used to store the energy for this OBFFCalculation. </div><div class="ttdef"><b>Definition:</b> forcefield.h:142</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraints_shtml_aabbe8ba0bb89a9324a43f54468bd6f11"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraints.shtml#aabbe8ba0bb89a9324a43f54468bd6f11">OpenBabel::OBFFConstraints::~OBFFConstraints</a></div><div class="ttdeci">~OBFFConstraints()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> forcefield.h:284</div></div>
<div class="ttc" id="structOpenBabel_1_1LineSearchType_shtml_adf764cbdea00d65edcd07bb9953ad2b7a38e70ed84d1b5d7404464b69c8e5093a"><div class="ttname"><a href="structOpenBabel_1_1LineSearchType.shtml#adf764cbdea00d65edcd07bb9953ad2b7a38e70ed84d1b5d7404464b69c8e5093a">OpenBabel::LineSearchType::Newton2Num</a></div><div class="ttdef"><b>Definition:</b> forcefield.h:80</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a1eab6cf4abedfa50bd898b5d8394586a"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a1eab6cf4abedfa50bd898b5d8394586a">OpenBabel::OBForceField::_rvdw</a></div><div class="ttdeci">double _rvdw</div><div class="ttdoc">VDW cut-off distance. </div><div class="ttdef"><b>Definition:</b> forcefield.h:572</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation3_shtml_a9face146941b40a8f35a2d459a06f41a"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation3.shtml#a9face146941b40a8f35a2d459a06f41a">OpenBabel::OBFFCalculation3::idx_c</a></div><div class="ttdeci">int idx_c</div><div class="ttdoc">Used to store the index of atoms for this OBFFCalculation. </div><div class="ttdef"><b>Definition:</b> forcefield.h:175</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_aa5950d373df53720595c030d3db04397"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#aa5950d373df53720595c030d3db04397">OpenBabel::OBForceField::_logos</a></div><div class="ttdeci">std::ostream * _logos</div><div class="ttdoc">Output for logfile. </div><div class="ttdef"><b>Definition:</b> forcefield.h:549</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a6daefdab547529f4ddee1b729085df82"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a6daefdab547529f4ddee1b729085df82">OpenBabel::OBForceField::_pairfreq</a></div><div class="ttdeci">int _pairfreq</div><div class="ttdoc">The frequence to update non-bonded pairs. </div><div class="ttdef"><b>Definition:</b> forcefield.h:576</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab1736c0602ea4313ff7602aa948ece82"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab1736c0602ea4313ff7602aa948ece82">OpenBabel::OBForceField::GetGradientPtr</a></div><div class="ttdeci">double * GetGradientPtr()</div><div class="ttdef"><b>Definition:</b> forcefield.h:516</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a336e29059a710e30d98a0d9898a10c63"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a336e29059a710e30d98a0d9898a10c63">OpenBabel::OBForceField::PrintVector</a></div><div class="ttdeci">static void PrintVector(double *i)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1718</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation3_shtml_a6ddb04505fbda255d73c3e5d09571b04"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation3.shtml#a6ddb04505fbda255d73c3e5d09571b04">OpenBabel::OBFFCalculation3::pos_c</a></div><div class="ttdeci">double * pos_c</div><div class="ttdoc">Pointer to atom coordinates as double[3]. </div><div class="ttdef"><b>Definition:</b> forcefield.h:177</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ae9651eef486a9afd00ef38c972df90f8"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ae9651eef486a9afd00ef38c972df90f8">OpenBabel::OBForceField::VectorClear</a></div><div class="ttdeci">static void VectorClear(double *i)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1685</div></div>
<div class="ttc" id="group__plugins_shtml_gadd740e2a386b7db3e1f0e271cbe8a3f1"><div class="ttname"><a href="group__plugins.shtml#gadd740e2a386b7db3e1f0e271cbe8a3f1">MAKE_PLUGIN</a></div><div class="ttdeci">#define MAKE_PLUGIN(BaseClass)</div><div class="ttdef"><b>Definition:</b> plugin.h:195</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a22f844c60684776be9d47109855e16de"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a22f844c60684776be9d47109855e16de">OpenBabel::OBForceField::_constraints</a></div><div class="ttdeci">static OBFFConstraints _constraints</div><div class="ttdoc">Constraints. </div><div class="ttdef"><b>Definition:</b> forcefield.h:567</div></div>
<div class="ttc" id="plugin_8h_shtml"><div class="ttname"><a href="plugin_8h.shtml">plugin.h</a></div><div class="ttdoc">Simplify &amp;#39;plugin&amp;#39; classes to be discovered and/or loaded at runtime. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a1c0d7fbb96a8e7c4dd0fec6ced77c5b0"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a1c0d7fbb96a8e7c4dd0fec6ced77c5b0">OpenBabel::OBFFParameter::_dpar</a></div><div class="ttdeci">std::vector&lt; double &gt; _dpar</div><div class="ttdoc">Used to store double type parameters (force constants, bond lengths, angles, ...) ...</div><div class="ttdef"><b>Definition:</b> forcefield.h:104</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a5c29065ad6e1322ade9087657bc576ec"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a5c29065ad6e1322ade9087657bc576ec">OpenBabel::OBForceField::UpdateConformers</a></div><div class="ttdeci">bool UpdateConformers(OBMol &amp;mol)</div><div class="ttdef"><b>Definition:</b> forcefield.h:735</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a40756214f69d1c40ad70b64ae9fdc08d"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a40756214f69d1c40ad70b64ae9fdc08d">OpenBabel::OBForceField::_init</a></div><div class="ttdeci">bool _init</div><div class="ttdoc">Used to make sure we only parse the parameter file once, when needed. </div><div class="ttdef"><b>Definition:</b> forcefield.h:544</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_abcf664aaa0bbb807a4f6e3d441d3147a"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#abcf664aaa0bbb807a4f6e3d441d3147a">OpenBabel::OBForceField::E_Torsion</a></div><div class="ttdeci">virtual double E_Torsion(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:927</div></div>
<div class="ttc" id="classOpenBabel_1_1vector3_shtml"><div class="ttname"><a href="classOpenBabel_1_1vector3.shtml">OpenBabel::vector3</a></div><div class="ttdoc">Represents a vector in 3-dimensional real space. </div><div class="ttdef"><b>Definition:</b> vector3.h:45</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a1cb4961672fc9fdbbcc6f77f10328124"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a1cb4961672fc9fdbbcc6f77f10328124">OpenBabel::OBForceField::_rele</a></div><div class="ttdeci">double _rele</div><div class="ttdoc">Electrostatic cut-off distance. </div><div class="ttdef"><b>Definition:</b> forcefield.h:573</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation4_shtml_a815ecadb16b028e5ca95121791128c4f"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation4.shtml#a815ecadb16b028e5ca95121791128c4f">OpenBabel::OBFFCalculation4::idx_d</a></div><div class="ttdeci">int idx_d</div><div class="ttdoc">Used to store the index of atoms for this OBFFCalculation. </div><div class="ttdef"><b>Definition:</b> forcefield.h:206</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_aa4c2a5552e9bc49b1816ff532f558c74"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#aa4c2a5552e9bc49b1816ff532f558c74">OpenBabel::OBFFParameter::a</a></div><div class="ttdeci">int a</div><div class="ttdoc">Used to store integer atom types. </div><div class="ttdef"><b>Definition:</b> forcefield.h:97</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a814fd94395b7e2dfe95d78c11eb2a004"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a814fd94395b7e2dfe95d78c11eb2a004">OpenBabel::OBForceField::VectorCross</a></div><div class="ttdeci">static void VectorCross(double *i, double *j, double *result)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1711</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a21c5ecf3204a9907236f7596268a76a1"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a21c5ecf3204a9907236f7596268a76a1">OpenBabel::OBForceField::_temp</a></div><div class="ttdeci">double _temp</div><div class="ttdoc">Molecular dynamics temperature in Kelvin. </div><div class="ttdef"><b>Definition:</b> forcefield.h:564</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation2_shtml_aa063f21c51ee71ca470bce2e7042b815"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation2.shtml#aa063f21c51ee71ca470bce2e7042b815">OpenBabel::OBFFCalculation2::SetupPointers</a></div><div class="ttdeci">virtual void SetupPointers()</div><div class="ttdef"><b>Definition:</b> forcefield.h:157</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_aef54f9555eb83d9adc8bfe4c51a41048"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#aef54f9555eb83d9adc8bfe4c51a41048">OpenBabel::OBFFParameter::_b</a></div><div class="ttdeci">std::string _b</div><div class="ttdef"><b>Definition:</b> forcefield.h:99</div></div>
<div class="ttc" id="forcefield_8h_shtml_aa79097c99a0f44c20585623da1f5098e"><div class="ttname"><a href="forcefield_8h.shtml#aa79097c99a0f44c20585623da1f5098e">OBFF_ANALYTICAL_GRADIENT</a></div><div class="ttdeci">#define OBFF_ANALYTICAL_GRADIENT</div><div class="ttdoc">use analytical gradients </div><div class="ttdef"><b>Definition:</b> forcefield.h:67</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml">OpenBabel::OBFFConstraint</a></div><div class="ttdoc">Internal class for OBForceField to hold constraints. </div><div class="ttdef"><b>Definition:</b> forcefield.h:234</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a4832732ca896c32a5c7cab59513f2190"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a4832732ca896c32a5c7cab59513f2190">OpenBabel::OBForceField::ParseParamFile</a></div><div class="ttdeci">virtual bool ParseParamFile()</div><div class="ttdef"><b>Definition:</b> forcefield.h:654</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_aa0635968faae8eae39c1157f34f1f186"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#aa0635968faae8eae39c1157f34f1f186">OpenBabel::OBForceField::GetLineSearchType</a></div><div class="ttdeci">int GetLineSearchType()</div><div class="ttdef"><b>Definition:</b> forcefield.h:1198</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a2bd8889c439dd81f3492d409f27e80d4"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a2bd8889c439dd81f3492d409f27e80d4">OpenBabel::OBForceField::VectorSelfMultiply</a></div><div class="ttdeci">static void VectorSelfMultiply(double *i, double n)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1613</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab39c453046b3d76a24615c0f4ddb5dc4"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab39c453046b3d76a24615c0f4ddb5dc4">OpenBabel::OBForceField::_ncoords</a></div><div class="ttdeci">unsigned int _ncoords</div><div class="ttdoc">Number of coordinates for conjugate gradients. </div><div class="ttdef"><b>Definition:</b> forcefield.h:560</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a232f01774986e74179b56eb961728a54"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a232f01774986e74179b56eb961728a54">OpenBabel::OBForceField::OBFFLog</a></div><div class="ttdeci">void OBFFLog(const char *msg)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1016</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml_a44b77545e83209582e42f375c8f40474"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml#a44b77545e83209582e42f375c8f40474">OpenBabel::OBAtom::GetIdx</a></div><div class="ttdeci">unsigned int GetIdx() const</div><div class="ttdef"><b>Definition:</b> atom.h:222</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation3_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation3.shtml">OpenBabel::OBFFCalculation3</a></div><div class="ttdoc">Internal class for OBForceField to hold energy and gradient calculations on specific force fields...</div><div class="ttdef"><b>Definition:</b> forcefield.h:169</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_acf019f5fea50c00abe4a8eceb1ebefd0"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#acf019f5fea50c00abe4a8eceb1ebefd0">OpenBabel::OBForceField::_vdwpairs</a></div><div class="ttdeci">OBBitVec _vdwpairs</div><div class="ttdoc">VDW pairs that should be calculated. </div><div class="ttdef"><b>Definition:</b> forcefield.h:574</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation4_shtml_a23b6e1e5e28cdcd7afc3113b7a3bdbea"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation4.shtml#a23b6e1e5e28cdcd7afc3113b7a3bdbea">OpenBabel::OBFFCalculation4::SetupPointers</a></div><div class="ttdeci">void SetupPointers()</div><div class="ttdef"><b>Definition:</b> forcefield.h:217</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a60c161177d9d80020f3a42d8f5ad2a97"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a60c161177d9d80020f3a42d8f5ad2a97">OpenBabel::OBForceField::_velocityPtr</a></div><div class="ttdeci">double * _velocityPtr</div><div class="ttdoc">pointer to the velocities </div><div class="ttdef"><b>Definition:</b> forcefield.h:565</div></div>
<div class="ttc" id="mol_8h_shtml_a6c7cd32e1bac137f05e4a752b4ad10af"><div class="ttname"><a href="mol_8h.shtml#a6c7cd32e1bac137f05e4a752b4ad10af">BUFF_SIZE</a></div><div class="ttdeci">#define BUFF_SIZE</div><div class="ttdef"><b>Definition:</b> mol.h:790</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_afe138e40e061c04494421e5513829b37"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#afe138e40e061c04494421e5513829b37">OpenBabel::OBForceField::_nsteps</a></div><div class="ttdeci">int _nsteps</div><div class="ttdoc">Used for conjugate gradients and steepest descent(Initialize and TakeNSteps) </div><div class="ttdef"><b>Definition:</b> forcefield.h:558</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a0ad96c121eb2ab3291c9f348f3e66eb4"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a0ad96c121eb2ab3291c9f348f3e66eb4">OpenBabel::OBForceField::_parFile</a></div><div class="ttdeci">std::string _parFile</div><div class="ttdef"><b>Definition:</b> forcefield.h:545</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ad73a3ddc8c65a31256666ba5cd10fcf3"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ad73a3ddc8c65a31256666ba5cd10fcf3">OpenBabel::OBForceField::_intraGroup</a></div><div class="ttdeci">std::vector&lt; OBBitVec &gt; _intraGroup</div><div class="ttdoc">groups for which intra-molecular interactions should be calculated </div><div class="ttdef"><b>Definition:</b> forcefield.h:578</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml">OpenBabel::OBForceField</a></div><div class="ttdoc">Base class for molecular mechanics force fields. </div><div class="ttdef"><b>Definition:</b> forcefield.h:416</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraints_shtml_a23c4410bafb1dd9a449e8710e290fc64"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraints.shtml#a23c4410bafb1dd9a449e8710e290fc64">OpenBabel::OBFFConstraints::operator=</a></div><div class="ttdeci">OBFFConstraints &amp; operator=(const OBFFConstraints &amp;ai)</div><div class="ttdoc">Get the constrain gradient for the atom. </div><div class="ttdef"><b>Definition:</b> forcefield.h:300</div></div>
<div class="ttc" id="grid_8h_shtml"><div class="ttname"><a href="grid_8h.shtml">grid.h</a></div><div class="ttdoc">Handle grids of values. </div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab49558e469015d76e7c27ee0cfdf4a75"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab49558e469015d76e7c27ee0cfdf4a75">OpenBabel::OBForceField::~OBForceField</a></div><div class="ttdeci">virtual ~OBForceField()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> forcefield.h:589</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a12db497d1100ca5a0620ba2076581a63"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a12db497d1100ca5a0620ba2076581a63">OpenBabel::OBForceField::VectorCopy</a></div><div class="ttdeci">static void VectorCopy(double *from, double *to)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1633</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a2d0a817f871831bed3e700ff65bd32ab"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a2d0a817f871831bed3e700ff65bd32ab">OpenBabel::OBForceField::_validSetup</a></div><div class="ttdeci">bool _validSetup</div><div class="ttdoc">&lt; parameter file name </div><div class="ttdef"><b>Definition:</b> forcefield.h:546</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab95ae5a13edb24f5d32b01e2098f26df"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab95ae5a13edb24f5d32b01e2098f26df">OpenBabel::OBForceField::_current_conformer</a></div><div class="ttdeci">int _current_conformer</div><div class="ttdoc">used to hold i for current conformer (needed by UpdateConformers) </div><div class="ttdef"><b>Definition:</b> forcefield.h:554</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab2ac199e3ef0f47fbdc0365ededfeced"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab2ac199e3ef0f47fbdc0365ededfeced">OpenBabel::OBForceField::SetGradient</a></div><div class="ttdeci">void SetGradient(double *grad, int idx)</div><div class="ttdef"><b>Definition:</b> forcefield.h:488</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_aaec19a6806233001c0fb9173903e5372"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#aaec19a6806233001c0fb9173903e5372">OpenBabel::OBFFConstraint::OBFFConstraint</a></div><div class="ttdeci">OBFFConstraint()</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> forcefield.h:248</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a1107abae4af40cd96faa7385b4de79c2"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a1107abae4af40cd96faa7385b4de79c2">OpenBabel::OBForceField::GetUnit</a></div><div class="ttdeci">virtual std::string GetUnit()</div><div class="ttdef"><b>Definition:</b> forcefield.h:631</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a7b2ba72f54b74909a53a0548cdf44ce2"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a7b2ba72f54b74909a53a0548cdf44ce2">OpenBabel::OBForceField::_energies</a></div><div class="ttdeci">std::vector&lt; double &gt; _energies</div><div class="ttdoc">used to hold the energies for all conformers </div><div class="ttdef"><b>Definition:</b> forcefield.h:555</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a612751a856867453e2cf240a13b1c69a"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a612751a856867453e2cf240a13b1c69a">OpenBabel::OBFFParameter::_c</a></div><div class="ttdeci">std::string _c</div><div class="ttdef"><b>Definition:</b> forcefield.h:99</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a847a262329a92da08c099830a8431a48"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a847a262329a92da08c099830a8431a48">OpenBabel::OBForceField::VectorDot</a></div><div class="ttdeci">static double VectorDot(double *i, double *j)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1696</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation2_shtml_a04b016790fa35bca53ad7e92809e5c76"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation2.shtml#a04b016790fa35bca53ad7e92809e5c76">OpenBabel::OBFFCalculation2::~OBFFCalculation2</a></div><div class="ttdeci">virtual ~OBFFCalculation2()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> forcefield.h:152</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a8af11ddb5650f7733164c81da3aacbd8"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a8af11ddb5650f7733164c81da3aacbd8">OpenBabel::OBForceField::FindForceField</a></div><div class="ttdeci">static OBForceField * FindForceField(const char *ID)</div><div class="ttdef"><b>Definition:</b> forcefield.h:617</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a0d8cc6c6af6a74b49c13ef35750910c0"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a0d8cc6c6af6a74b49c13ef35750910c0">OpenBabel::OBForceField::SetFormalCharges</a></div><div class="ttdeci">virtual bool SetFormalCharges()</div><div class="ttdef"><b>Definition:</b> forcefield.h:664</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_aa72374f7ad0c140529a3b010e7daf8af"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#aa72374f7ad0c140529a3b010e7daf8af">OpenBabel::OBFFConstraint::GetGradient</a></div><div class="ttdeci">vector3 GetGradient(int a)</div><div class="ttdef"><b>Definition:</b> forcefield.h:260</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a4e1e0e72dd773439e333c84dd762a9c3"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a4e1e0e72dd773439e333c84dd762a9c3">OpenBabel::OBFFParameter::c</a></div><div class="ttdeci">int c</div><div class="ttdef"><b>Definition:</b> forcefield.h:97</div></div>
<div class="ttc" id="forcefield_8h_shtml_a586a185b0aed9265f6812ed4338cd8bd"><div class="ttname"><a href="forcefield_8h.shtml#a586a185b0aed9265f6812ed4338cd8bd">OBFF_ENERGY</a></div><div class="ttdeci">#define OBFF_ENERGY</div><div class="ttdoc">all terms </div><div class="ttdef"><b>Definition:</b> forcefield.h:45</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a591a6c018926edaa3f398ca7134e26c9"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a591a6c018926edaa3f398ca7134e26c9">OpenBabel::OBForceField::Validate</a></div><div class="ttdeci">virtual bool Validate()</div><div class="ttdoc">Validate the force field implementation (debugging) </div><div class="ttdef"><b>Definition:</b> forcefield.h:1470</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a4109e7005a5eb4c91f10bd68958bfbf7"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a4109e7005a5eb4c91f10bd68958bfbf7">OpenBabel::OBForceField::GetVDWCutOff</a></div><div class="ttdeci">double GetVDWCutOff()</div><div class="ttdef"><b>Definition:</b> forcefield.h:818</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a6f364afbe132c4ecfea48bde1b0618ba"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a6f364afbe132c4ecfea48bde1b0618ba">OpenBabel::OBFFParameter::d</a></div><div class="ttdeci">int d</div><div class="ttdef"><b>Definition:</b> forcefield.h:97</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a34493373e0f4d6c8c596512041153e69"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a34493373e0f4d6c8c596512041153e69">OpenBabel::OBFFParameter::_ipar</a></div><div class="ttdeci">std::vector&lt; int &gt; _ipar</div><div class="ttdoc">Used to store integer type parameters (bondtypes, multiplicity, ...) </div><div class="ttdef"><b>Definition:</b> forcefield.h:102</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a180eb032b11995b3140d54b1fd1ec991"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a180eb032b11995b3140d54b1fd1ec991">OpenBabel::OBForceField::E_StrBnd</a></div><div class="ttdeci">virtual double E_StrBnd(bool gradients=true)</div><div class="ttdef"><b>Definition:</b> forcefield.h:920</div></div>
<div class="ttc" id="structOpenBabel_1_1LineSearchType_shtml_adf764cbdea00d65edcd07bb9953ad2b7aebfbf7dc5cde0772efb1aa49712bd76b"><div class="ttname"><a href="structOpenBabel_1_1LineSearchType.shtml#adf764cbdea00d65edcd07bb9953ad2b7aebfbf7dc5cde0772efb1aa49712bd76b">OpenBabel::LineSearchType::Simple</a></div><div class="ttdef"><b>Definition:</b> forcefield.h:80</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation2_shtml_a3b7f67e0c88d3405346c2aa592d75faf"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation2.shtml#a3b7f67e0c88d3405346c2aa592d75faf">OpenBabel::OBFFCalculation2::b</a></div><div class="ttdeci">OBAtom * b</div><div class="ttdef"><b>Definition:</b> forcefield.h:144</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_af2662d702c1eb43cc58c30d274712e3f"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#af2662d702c1eb43cc58c30d274712e3f">OpenBabel::OBForceField::SetupCalculations</a></div><div class="ttdeci">virtual bool SetupCalculations()</div><div class="ttdef"><b>Definition:</b> forcefield.h:674</div></div>
<div class="ttc" id="classOpenBabel_1_1OBGridData_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBGridData.shtml">OpenBabel::OBGridData</a></div><div class="ttdoc">Store values for numeric grids such as orbitals or electrostatic potential. </div><div class="ttdef"><b>Definition:</b> griddata.h:39</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_a42a5eb0558a3777f22ab404b02a5fd1b"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#a42a5eb0558a3777f22ab404b02a5fd1b">OpenBabel::OBFFConstraint::~OBFFConstraint</a></div><div class="ttdeci">~OBFFConstraint()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> forcefield.h:256</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a304e7d6e8b9b55195148d8ce241c4231"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a304e7d6e8b9b55195148d8ce241c4231">OpenBabel::OBForceField::_elepairs</a></div><div class="ttdeci">OBBitVec _elepairs</div><div class="ttdoc">Electrostatic pairs that should be calculated. </div><div class="ttdef"><b>Definition:</b> forcefield.h:575</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_a2d7e5dd7a479c4c7aef6e6133a1441c5"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#a2d7e5dd7a479c4c7aef6e6133a1441c5">OpenBabel::OBFFConstraint::factor</a></div><div class="ttdeci">double factor</div><div class="ttdoc">Used to store the contraint energy for this OBFFConstraint. </div><div class="ttdef"><b>Definition:</b> forcefield.h:238</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a06249fabc93686f6fa389173bcd2e300"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a06249fabc93686f6fa389173bcd2e300">OpenBabel::OBForceField::OBFFLog</a></div><div class="ttdeci">void OBFFLog(std::string msg)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1006</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFCalculation2_shtml_aadfcce040172c26d6082c4834a1c1469"><div class="ttname"><a href="classOpenBabel_1_1OBFFCalculation2.shtml#aadfcce040172c26d6082c4834a1c1469">OpenBabel::OBFFCalculation2::pos_b</a></div><div class="ttdeci">double * pos_b</div><div class="ttdef"><b>Definition:</b> forcefield.h:148</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_ab9bff2ca9aad359da6491fa4c3f46577"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#ab9bff2ca9aad359da6491fa4c3f46577">OpenBabel::OBForceField::UpdateCoordinates</a></div><div class="ttdeci">bool UpdateCoordinates(OBMol &amp;mol)</div><div class="ttdef"><b>Definition:</b> forcefield.h:728</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_afeabf5a9fd6207144ed24a80c39714a2"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#afeabf5a9fd6207144ed24a80c39714a2">OpenBabel::OBForceField::ClearGradients</a></div><div class="ttdeci">virtual void ClearGradients()</div><div class="ttdef"><b>Definition:</b> forcefield.h:523</div></div>
<div class="ttc" id="classOpenBabel_1_1OBForceField_shtml_a33ebd98d01af8308d5b4f0cf0ef3b151"><div class="ttname"><a href="classOpenBabel_1_1OBForceField.shtml#a33ebd98d01af8308d5b4f0cf0ef3b151">OpenBabel::OBForceField::VectorMultiply</a></div><div class="ttdeci">static void VectorMultiply(const double *const i, const double n, double *result)</div><div class="ttdef"><b>Definition:</b> forcefield.h:1603</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFParameter_shtml_a148e3876077787926724625411d6e7a9"><div class="ttname"><a href="classOpenBabel_1_1OBFFParameter.shtml#a148e3876077787926724625411d6e7a9">OpenBabel::OBFFParameter::b</a></div><div class="ttdeci">int b</div><div class="ttdef"><b>Definition:</b> forcefield.h:97</div></div>
<div class="ttc" id="classOpenBabel_1_1OBFFConstraint_shtml_ac765329451135abec74c45e1897abf26"><div class="ttname"><a href="classOpenBabel_1_1OBFFConstraint.shtml#ac765329451135abec74c45e1897abf26">OpenBabel::OBFFConstraint::type</a></div><div class="ttdeci">int type</div><div class="ttdoc">Used to store the contraint type for this OBFFConstraint. </div><div class="ttdef"><b>Definition:</b> forcefield.h:241</div></div>
<div class="ttc" id="namespaceOpenBabel_shtml"><div class="ttname"><a href="namespaceOpenBabel.shtml">OpenBabel</a></div><div class="ttdoc">Global namespace for all Open Babel code. </div><div class="ttdef"><b>Definition:</b> alias.h:22</div></div>
<div class="ttc" id="classOpenBabel_1_1OBAtom_shtml"><div class="ttname"><a href="classOpenBabel_1_1OBAtom.shtml">OpenBabel::OBAtom</a></div><div class="ttdoc">Atom class. </div><div class="ttdef"><b>Definition:</b> atom.h:81</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:28 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
