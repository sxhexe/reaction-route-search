<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBRateData Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBRateData.shtml">OBRateData</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBRateData-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBRateData Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="kinetics_8h_source.shtml">openbabel/kinetics.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBRateData:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBRateData.png" usemap="#OBRateData_map" alt=""/>
  <map id="OBRateData_map" name="OBRateData_map">
<area href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data. " alt="OBGenericData" shape="rect" coords="0,0,101,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a3a2d440e7729afe454180909de5cee32"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a> { <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32a42a4ade1acd55a49164099104990e09f">A</a>, 
<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887">n</a>, 
<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32ab199e021998d49b1f09338d8b9b18ecb">E</a>
 }</td></tr>
<tr class="separator:a3a2d440e7729afe454180909de5cee32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c0cce1d70923935e204facefcea5c56"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56">reaction_type</a> { <br />
&#160;&#160;<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56af9d5bff6fde5459959e67f676da0b461">ARRHENIUS</a> =55555, 
<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56a08d04641b486c366ba9b193790dedf67">LINDERMANN</a>, 
<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56aad6da7a4573a5259e41d94c5b228953b">TROE</a>, 
<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56aa5781b80abc39c88c7970370a3e1f966">SRI</a>, 
<br />
&#160;&#160;<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56a47450c21a6a94cd26f3c43b8681f7711">THREEBODY</a>
<br />
 }</td></tr>
<tr class="separator:a0c0cce1d70923935e204facefcea5c56"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a340df9e4f2c1c91ca091a91ed451da5e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a340df9e4f2c1c91ca091a91ed451da5e">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *parent) const</td></tr>
<tr class="separator:a340df9e4f2c1c91ca091a91ed451da5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55fefb58b910f8c3fdfee7fabbb23920"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a55fefb58b910f8c3fdfee7fabbb23920">OBRateData</a> ()</td></tr>
<tr class="separator:a55fefb58b910f8c3fdfee7fabbb23920"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a073aef0c12f212661c3cef09b30bd89a"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a073aef0c12f212661c3cef09b30bd89a">GetRate</a> (<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a> <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887">n</a>) const</td></tr>
<tr class="separator:a073aef0c12f212661c3cef09b30bd89a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76771390c047fee43872969766e83c98"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a76771390c047fee43872969766e83c98">SetRate</a> (<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a> <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887">n</a>, const double val)</td></tr>
<tr class="separator:a76771390c047fee43872969766e83c98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf4edef53a3f61c2f1703a7960aaccee"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#aaf4edef53a3f61c2f1703a7960aaccee">GetLoRate</a> (<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a> <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887">n</a>) const</td></tr>
<tr class="separator:aaf4edef53a3f61c2f1703a7960aaccee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c63509e94ea135195a1354c4c06d52"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a72c63509e94ea135195a1354c4c06d52">SetLoRate</a> (<a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a> <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887">n</a>, const double val)</td></tr>
<tr class="separator:a72c63509e94ea135195a1354c4c06d52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5332860a675b5c4e87a7708bdbf92165"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a5332860a675b5c4e87a7708bdbf92165">GetTroeParam</a> (int <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887">n</a>) const</td></tr>
<tr class="separator:a5332860a675b5c4e87a7708bdbf92165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc279b50e40cf2382890306420a4be39"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#acc279b50e40cf2382890306420a4be39">SetTroeParams</a> (int <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887">n</a>, const double val)</td></tr>
<tr class="separator:acc279b50e40cf2382890306420a4be39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a633fe6294341707865329edbf018cf15"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a633fe6294341707865329edbf018cf15">SetEfficiency</a> (std::string id, double Eff)</td></tr>
<tr class="separator:a633fe6294341707865329edbf018cf15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab65164866116b9c563b3c8c4719351aa"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#ab65164866116b9c563b3c8c4719351aa">GetEfficiency</a> (std::string id)</td></tr>
<tr class="separator:ab65164866116b9c563b3c8c4719351aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6ae986be83dcfe54cd18e004b6d9828"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#ad6ae986be83dcfe54cd18e004b6d9828">GetNextEff</a> (std::string &amp;id, double &amp;Eff)</td></tr>
<tr class="separator:ad6ae986be83dcfe54cd18e004b6d9828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae3d15983201a2a115701b2c538fef77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>
<tr class="separator:aae3d15983201a2a115701b2c538fef77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45613e34598a9584fb0120ef3fdab9e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>
<tr class="separator:a45613e34598a9584fb0120ef3fdab9e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac61fc66ef692e79290d6eaf7231db92c"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac61fc66ef692e79290d6eaf7231db92c">GetAttribute</a> () const</td></tr>
<tr class="separator:ac61fc66ef692e79290d6eaf7231db92c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91834e24b299c63cdf2cb77795298446"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a91834e24b299c63cdf2cb77795298446">GetDataType</a> () const</td></tr>
<tr class="separator:a91834e24b299c63cdf2cb77795298446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6145f0df06364b6d58c728368db8f992"><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a6145f0df06364b6d58c728368db8f992">GetValue</a> () const</td></tr>
<tr class="separator:a6145f0df06364b6d58c728368db8f992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf131b210114ba636246ffc8dcb2ea13"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adf131b210114ba636246ffc8dcb2ea13">GetOrigin</a> () const</td></tr>
<tr class="separator:adf131b210114ba636246ffc8dcb2ea13"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a2408b8dee598f5d056e4852f61f3a7fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56">reaction_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a2408b8dee598f5d056e4852f61f3a7fc">ReactionType</a></td></tr>
<tr class="separator:a2408b8dee598f5d056e4852f61f3a7fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ab82756a04d7c0ab192a0251dc888d748"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#ab82756a04d7c0ab192a0251dc888d748">Rates</a> [3]</td></tr>
<tr class="separator:ab82756a04d7c0ab192a0251dc888d748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3933e62231b2769d0dc648015eac0db0"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3933e62231b2769d0dc648015eac0db0">LoRates</a> [3]</td></tr>
<tr class="separator:a3933e62231b2769d0dc648015eac0db0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad46e02413bb14f966c63168fda5b05bb"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#ad46e02413bb14f966c63168fda5b05bb">TroeParams</a> [4]</td></tr>
<tr class="separator:ad46e02413bb14f966c63168fda5b05bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa597564f2d0fa70d0e3439eeba23628e"><td class="memItemLeft" align="right" valign="top">std::map&lt; std::string, double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#aa597564f2d0fa70d0e3439eeba23628e">Efficiencies</a></td></tr>
<tr class="separator:aa597564f2d0fa70d0e3439eeba23628e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adceb77134f15418a66cf1124dcef1b51"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>
<tr class="separator:adceb77134f15418a66cf1124dcef1b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31291823d487a4a47f24aae5870505ef"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a></td></tr>
<tr class="separator:a31291823d487a4a47f24aae5870505ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a239606b62a534e4df7626ea0cfdfb856"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>
<tr class="separator:a239606b62a534e4df7626ea0cfdfb856"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Holds rate constant data for <a class="el" href="classOpenBabel_1_1OBReaction.shtml" title="Used to store chemical reactions (i.e., reactants -&gt; products) ">OBReaction</a>. </p>
<p>The data is in a form used by CHEMKIN, at least the original free versions developed by Sandia Labs. Cantera is a GPL chemical kinetics program with similar capabilities. Used by chemkin format and cml reaction format </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a3a2d440e7729afe454180909de5cee32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a2d440e7729afe454180909de5cee32">&sect;&nbsp;</a></span>rate_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a3a2d440e7729afe454180909de5cee32a42a4ade1acd55a49164099104990e09f"></a>A&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3a2d440e7729afe454180909de5cee32afe0cb765d0bfc2535a3f5b124ec8f887"></a>n&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3a2d440e7729afe454180909de5cee32ab199e021998d49b1f09338d8b9b18ecb"></a>E&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a0c0cce1d70923935e204facefcea5c56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c0cce1d70923935e204facefcea5c56">&sect;&nbsp;</a></span>reaction_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56">reaction_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a0c0cce1d70923935e204facefcea5c56af9d5bff6fde5459959e67f676da0b461"></a>ARRHENIUS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a0c0cce1d70923935e204facefcea5c56a08d04641b486c366ba9b193790dedf67"></a>LINDERMANN&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a0c0cce1d70923935e204facefcea5c56aad6da7a4573a5259e41d94c5b228953b"></a>TROE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a0c0cce1d70923935e204facefcea5c56aa5781b80abc39c88c7970370a3e1f966"></a>SRI&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a0c0cce1d70923935e204facefcea5c56a47450c21a6a94cd26f3c43b8681f7711"></a>THREEBODY&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a55fefb58b910f8c3fdfee7fabbb23920"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55fefb58b910f8c3fdfee7fabbb23920">&sect;&nbsp;</a></span>OBRateData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRateData.shtml">OBRateData</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRateData.shtml#a340df9e4f2c1c91ca091a91ed451da5e">OBRateData::Clone()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a340df9e4f2c1c91ca091a91ed451da5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a340df9e4f2c1c91ca091a91ed451da5e">&sect;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* Clone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"><em>parent</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ab00b0697ccbb41c687e4031c1f5e6761">OBGenericData</a>.</p>

</div>
</div>
<a id="a073aef0c12f212661c3cef09b30bd89a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a073aef0c12f212661c3cef09b30bd89a">&sect;&nbsp;</a></span>GetRate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetRate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a>&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a76771390c047fee43872969766e83c98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76771390c047fee43872969766e83c98">&sect;&nbsp;</a></span>SetRate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetRate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a>&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf4edef53a3f61c2f1703a7960aaccee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf4edef53a3f61c2f1703a7960aaccee">&sect;&nbsp;</a></span>GetLoRate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetLoRate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a>&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a72c63509e94ea135195a1354c4c06d52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72c63509e94ea135195a1354c4c06d52">&sect;&nbsp;</a></span>SetLoRate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLoRate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a3a2d440e7729afe454180909de5cee32">rate_type</a>&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5332860a675b5c4e87a7708bdbf92165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5332860a675b5c4e87a7708bdbf92165">&sect;&nbsp;</a></span>GetTroeParam()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetTroeParam </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acc279b50e40cf2382890306420a4be39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc279b50e40cf2382890306420a4be39">&sect;&nbsp;</a></span>SetTroeParams()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetTroeParams </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a633fe6294341707865329edbf018cf15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a633fe6294341707865329edbf018cf15">&sect;&nbsp;</a></span>SetEfficiency()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetEfficiency </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>Eff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab65164866116b9c563b3c8c4719351aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab65164866116b9c563b3c8c4719351aa">&sect;&nbsp;</a></span>GetEfficiency()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double GetEfficiency </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad6ae986be83dcfe54cd18e004b6d9828"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6ae986be83dcfe54cd18e004b6d9828">&sect;&nbsp;</a></span>GetNextEff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool GetNextEff </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>Eff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aae3d15983201a2a115701b2c538fef77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae3d15983201a2a115701b2c538fef77">&sect;&nbsp;</a></span>SetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the attribute (key), which can be used to retrieve this data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="a45613e34598a9584fb0120ef3fdab9e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45613e34598a9584fb0120ef3fdab9e0">&sect;&nbsp;</a></span>SetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the origin of this data, which can be used to filter the data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a76bfba8476b7512138a477265edc4476">OpenBabel::ComparePairSecond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a id="ac61fc66ef692e79290d6eaf7231db92c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac61fc66ef692e79290d6eaf7231db92c">&sect;&nbsp;</a></span>GetAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a632be87a51811b515f7e9a5fc18e4476">OpenBabel::extract_thermochemistry()</a>, and <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div>
<a id="a91834e24b299c63cdf2cb77795298446"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91834e24b299c63cdf2cb77795298446">&sect;&nbsp;</a></span>GetDataType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a id="a6145f0df06364b6d58c728368db8f992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6145f0df06364b6d58c728368db8f992">&sect;&nbsp;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base class returns a default value (the attribute type) but should never be called. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBPairData.shtml#a6145f0df06364b6d58c728368db8f992">OBPairData</a>, and <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#a6145f0df06364b6d58c728368db8f992">OBCommentData</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>.</p>

</div>
</div>
<a id="adf131b210114ba636246ffc8dcb2ea13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf131b210114ba636246ffc8dcb2ea13">&sect;&nbsp;</a></span>GetOrigin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab82756a04d7c0ab192a0251dc888d748"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab82756a04d7c0ab192a0251dc888d748">&sect;&nbsp;</a></span>Rates</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Rates[3]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3933e62231b2769d0dc648015eac0db0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3933e62231b2769d0dc648015eac0db0">&sect;&nbsp;</a></span>LoRates</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double LoRates[3]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad46e02413bb14f966c63168fda5b05bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad46e02413bb14f966c63168fda5b05bb">&sect;&nbsp;</a></span>TroeParams</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double TroeParams[4]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa597564f2d0fa70d0e3439eeba23628e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa597564f2d0fa70d0e3439eeba23628e">&sect;&nbsp;</a></span>Efficiencies</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;std::string,double&gt; Efficiencies</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2408b8dee598f5d056e4852f61f3a7fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2408b8dee598f5d056e4852f61f3a7fc">&sect;&nbsp;</a></span>ReactionType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRateData.shtml#a0c0cce1d70923935e204facefcea5c56">reaction_type</a> ReactionType</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adceb77134f15418a66cf1124dcef1b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adceb77134f15418a66cf1124dcef1b51">&sect;&nbsp;</a></span>_attr</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _attr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute tag (e.g., "UnitCell", "Comment" or "Author") </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a31291823d487a4a47f24aae5870505ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31291823d487a4a47f24aae5870505ef">&sect;&nbsp;</a></span>_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>attribute type &ndash; declared for each subclass </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab7b6bdffe6ade9a2965ceaae38bb9340">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a id="a239606b62a534e4df7626ea0cfdfb856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a239606b62a534e4df7626ea0cfdfb856">&sect;&nbsp;</a></span>_source</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> _source</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>source of data for accounting </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#a7c2db1828edcca7ff07c8591744ec3a4">OBConformerData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#ae1e415e9a406f4965be7352a3c66fa3a">OBSymmetryData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#ab526e7eddb908b711e19aa355d133241">OBTorsionData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#af0af03b552fac05db59787be08a443eb">OBAngleData::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#a2d8a571296610389b9427aef139b1d8d">OBChiralData::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="kinetics_8h_source.shtml">kinetics.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
