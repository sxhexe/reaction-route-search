<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBCisTransStereo::Config Struct Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBCisTransStereo.shtml">OBCisTransStereo</a></li><li class="navelem"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">Config</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="structOpenBabel_1_1OBCisTransStereo_1_1Config-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBCisTransStereo::Config Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="cistrans_8h_source.shtml">openbabel/stereo/cistrans.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a539a941e29cde8d13e413c515d9801cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a539a941e29cde8d13e413c515d9801cd">Config</a> ()</td></tr>
<tr class="separator:a539a941e29cde8d13e413c515d9801cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf25320b7c10321198305519ad78680c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#acf25320b7c10321198305519ad78680c">Config</a> (unsigned long _begin, unsigned long _end, const <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;_refs, <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> _shape=<a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>)</td></tr>
<tr class="separator:acf25320b7c10321198305519ad78680c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a853e5ab6d10ba2fadd20f7463f3323b5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a853e5ab6d10ba2fadd20f7463f3323b5">operator==</a> (const <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">Config</a> &amp;other) const</td></tr>
<tr class="separator:a853e5ab6d10ba2fadd20f7463f3323b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91ab02a035905b00f8d490818067dce7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a91ab02a035905b00f8d490818067dce7">operator!=</a> (const <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">Config</a> &amp;other) const</td></tr>
<tr class="separator:a91ab02a035905b00f8d490818067dce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Data members defining stereochemistry.</div></td></tr>
<tr class="memitem:a43ec7ce807e545cea2247cd68bc7b7e9"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a43ec7ce807e545cea2247cd68bc7b7e9">begin</a></td></tr>
<tr class="separator:a43ec7ce807e545cea2247cd68bc7b7e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac31c5196f50f192d5db1d85180b05aaf"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#ac31c5196f50f192d5db1d85180b05aaf">end</a></td></tr>
<tr class="separator:ac31c5196f50f192d5db1d85180b05aaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e3f2a8fefc9f694040bbb8685cb61e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a></td></tr>
<tr class="separator:a3e3f2a8fefc9f694040bbb8685cb61e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f6538bd30b4203bd2b2bba33c28c85"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#a77f6538bd30b4203bd2b2bba33c28c85">shape</a></td></tr>
<tr class="separator:a77f6538bd30b4203bd2b2bba33c28c85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad137707f900f599f5f403d9639e2aec3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a></td></tr>
<tr class="separator:ad137707f900f599f5f403d9639e2aec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Stereochemical configuration for double-bond cis/trans stereochemistry. </p>
<p>The config struct represents the stereochemistry in a well defined way. For cis/trans stereo bonds, the following data members define the spacial arrengement of the atoms.</p>
<ul>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> <code>begin:</code> The begin atom for the double bond.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> <code>end:</code> The end atom for the double bond.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <code>refs:</code> The 4 atoms connected to the double bond.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> <code>shape:</code> The shape formed by the <code>refs</code> by connecting them in the same order as they occur in <code>refs</code>.</li>
</ul>
<div class="image">
<img src="cistrans.png" alt="cistrans.png"/>
</div>
 <div class="image">
<img src="SPshapes.png" alt="SPshapes.png"/>
</div>
<p>Only <code>begin</code> and <code>end</code> are specific for <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">OBCisTransStereo::Config</a>. The other data members occur in all <a class="el" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml" title="Base class for handling and storing planar stereochemistry with 4 reference atoms. ">OBTetraPlanarStereo</a> derived classes. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a539a941e29cde8d13e413c515d9801cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a539a941e29cde8d13e413c515d9801cd">&sect;&nbsp;</a></span>Config() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">Config</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default constructor. Initializes <code>begin</code> and <code>end</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da7295d9aeb6e0e6f3a5b77aa0ce7ed0db" title="No Ref set (invalid Ref) ">OBStereo::NoRef</a> and <code>shape</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>. </p>

</div>
</div>
<a id="acf25320b7c10321198305519ad78680c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf25320b7c10321198305519ad78680c">&sect;&nbsp;</a></span>Config() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">Config</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>_begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>_end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;&#160;</td>
          <td class="paramname"><em>_refs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a>&#160;</td>
          <td class="paramname"><em>_shape</em> = <code><a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor with all parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">_begin</td><td>The double bond begin atom id. </td></tr>
    <tr><td class="paramname">_end</td><td>The double bond end atom id. </td></tr>
    <tr><td class="paramname">_refs</td><td>The 4 reference ids. </td></tr>
    <tr><td class="paramname">_shape</td><td>The shape for the 4 reference ids. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a853e5ab6d10ba2fadd20f7463f3323b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a853e5ab6d10ba2fadd20f7463f3323b5">&sect;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equal to operator. Comparing <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">OBCisTransStereo::Config</a> structs is done using the information stored in the struct's data members (i.e. begin, end, refs and shape).</p>
<p>There are a number of cases resuling in false being returned:</p><ul>
<li><code>begin</code> and <code>end</code> don't match (is checked using the 2 combinations)</li>
<li>One of the Refs lists does not contain 4 elements.</li>
<li>2 or more <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a> values in a single <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">Config</a> struct</li>
<li>(The two <code>refs</code> don't share a single common element)</li>
</ul>
<p>In the simplest case where both <code>refs</code> contain exactly the same elements (<a class="el" href="structOpenBabel_1_1OBStereo.shtml#abb14ec41d65b0dc4d49707a713da483f">OBStereo::ContainsSameRefs()</a>), coould include <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a>), both <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">Config</a> struct are normalized to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a> starting with the same element. After this normalization, there are two possible orientations to overlay the shape on the double bond. From the illustration below, it can be seen only <code>refs</code>[2] has to be checked in order to conclude both <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">Config</a> structs have the same stereochemistry.</p>
<pre class="fragment"> 1      4    1      4    1------4
  \    /     |      |           |
   C==C      |      |           |
  /    \     |      |           |
 2      3    2------3    2------3

             1 2 3 4     1 2 3 4
             |   |       |   |      &lt;- in any case, refs[0] &amp; refs[2] remain unchanged
             1 2 3 4     1 4 3 2
</pre><p>When comparing a <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">Config</a> struct with explicit hydrogen(s) to one with implicit hydrogen(s), both <code>refs</code> are also normalized to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a> starting with the same common element. This shared element cannot be <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a>. Depending on the position of the <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a> element(s) in the <code>refs</code>, 3 cases are possible:</p>
<pre class="fragment"> refs[2] != OBStereo::ImplicitId:

   (analog to the case above where they contained the same elements )

   1 2 3 4
   |   |      &lt;- refs[0] &amp; refs[2] remain unchanged
   1 H 3 H

 else:

   1 2 3 4
   |     |    &lt;- refs[0] &amp; refs[3] remain unchanged
   1 H H 4

   1 2 3 4
   | |        &lt;- refs[0] &amp; refs[1] remain unchanged
   1 2 H H
</pre><p>In each case, the orientation of the U shape is also defined since there can be only one <a class="el" href="structOpenBabel_1_1OBStereo.shtml#a16af7b253440dadd46a80a4b9fddba4da02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...). ">OBStereo::ImplicitRef</a> for each side of the double bond.</p>
<dl class="section return"><dt>Returns</dt><dd>True if both <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">Config</a> structs represent the stereochemistry. </dd></dl>

</div>
</div>
<a id="a91ab02a035905b00f8d490818067dce7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91ab02a035905b00f8d490818067dce7">&sect;&nbsp;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Not equal to operator. This is the inverse of the Equal to operator==.</p>
<dl class="section return"><dt>Returns</dt><dd>True if the two <a class="el" href="structOpenBabel_1_1OBCisTransStereo_1_1Config.shtml" title="Stereochemical configuration for double-bond cis/trans stereochemistry. ">Config</a> structs represent a different stereochemistry. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a43ec7ce807e545cea2247cd68bc7b7e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43ec7ce807e545cea2247cd68bc7b7e9">&sect;&nbsp;</a></span>begin</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long begin</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">OBCisTransConfig::Convert()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3280c4291f365e26ad615eb38c877b25">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="ac31c5196f50f192d5db1d85180b05aaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac31c5196f50f192d5db1d85180b05aaf">&sect;&nbsp;</a></span>end</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long end</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">OBCisTransConfig::Convert()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3280c4291f365e26ad615eb38c877b25">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="a3e3f2a8fefc9f694040bbb8685cb61e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e3f2a8fefc9f694040bbb8685cb61e1">&sect;&nbsp;</a></span>refs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> refs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The 4 reference ids. </p>

<p>Referenced by <a class="el" href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">OBCisTransConfig::Convert()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3280c4291f365e26ad615eb38c877b25">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>, and <a class="el" href="structOpenBabel_1_1OBCisTransConfig.shtml#a6402345e461821a38ee0538b3769437a">OBCisTransConfig::operator==()</a>.</p>

</div>
</div>
<a id="a77f6538bd30b4203bd2b2bba33c28c85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77f6538bd30b4203bd2b2bba33c28c85">&sect;&nbsp;</a></span>shape</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> shape</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The shape of the 4 reference ids. </p>

<p>Referenced by <a class="el" href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">OBCisTransConfig::Convert()</a>.</p>

</div>
</div>
<a id="ad137707f900f599f5f403d9639e2aec3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad137707f900f599f5f403d9639e2aec3">&sect;&nbsp;</a></span>specified</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool specified</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>True if the stereochemistry is specified. When false, the described special orientation is only accidental (i.e. unspecified). </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="structOpenBabel_1_1OBCisTransConfig.shtml#ae471f79dad3df1484c82c25aa2f645c0">OBCisTransConfig::Convert()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3280c4291f365e26ad615eb38c877b25">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="namespaceOpenBabel.shtml#a731a8591521359140c8777a1c65a1157">OpenBabel::findMetalloceneBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, and <a class="el" href="namespaceOpenBabel.shtml#ae4c78efdf4d582451d8d0c323d98f205">OpenBabel::intToStr()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="cistrans_8h_source.shtml">cistrans.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:30 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
