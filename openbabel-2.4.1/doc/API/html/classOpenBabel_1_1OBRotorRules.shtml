<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBRotorRules Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml">OBRotorRules</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBRotorRules-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBRotorRules Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rotor_8h_source.shtml">openbabel/rotor.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBRotorRules:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBRotorRules.png" usemap="#OBRotorRules_map" alt=""/>
  <map id="OBRotorRules_map" name="OBRotorRules_map">
<area href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files. " alt="OBGlobalDataBase" shape="rect" coords="0,0,120,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1ebbe90c85b0e7b9b09f3e29719ee447"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#a1ebbe90c85b0e7b9b09f3e29719ee447">OBRotorRules</a> ()</td></tr>
<tr class="separator:a1ebbe90c85b0e7b9b09f3e29719ee447"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af304ead8beb29ed38f8c15491031f122"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#af304ead8beb29ed38f8c15491031f122">~OBRotorRules</a> ()</td></tr>
<tr class="separator:af304ead8beb29ed38f8c15491031f122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae59fef8af62e52629bf2576e34a26801"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ae59fef8af62e52629bf2576e34a26801">ParseLine</a> (const char *)</td></tr>
<tr class="separator:ae59fef8af62e52629bf2576e34a26801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab7c531e5ffc5174e57a85e853931534"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a> ()</td></tr>
<tr class="separator:aab7c531e5ffc5174e57a85e853931534"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adeb3abe4bd6c3443362068379a6b665e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#adeb3abe4bd6c3443362068379a6b665e">SetFilename</a> (std::string &amp;s)</td></tr>
<tr class="separator:adeb3abe4bd6c3443362068379a6b665e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7527366ed1bf39da7123e3ad65d96ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">GetRotorIncrements</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond, int refs[4], std::vector&lt; double &gt; &amp;vals, double &amp;delta)</td></tr>
<tr class="separator:ab7527366ed1bf39da7123e3ad65d96ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf46031273468cc23720df1c59d3e85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#a3bf46031273468cc23720df1c59d3e85">Quiet</a> ()</td></tr>
<tr class="separator:a3bf46031273468cc23720df1c59d3e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e3b6d38df0786ccf7f938d60e386aae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a1e3b6d38df0786ccf7f938d60e386aae">Init</a> ()</td></tr>
<tr class="separator:a1e3b6d38df0786ccf7f938d60e386aae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49002f92ad6a1c71d7f9148271770b7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a49002f92ad6a1c71d7f9148271770b7a">SetReadDirectory</a> (char *dir)</td></tr>
<tr class="separator:a49002f92ad6a1c71d7f9148271770b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd0630d27e20f38de4c753ca68e2282"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2bd0630d27e20f38de4c753ca68e2282">SetEnvironmentVariable</a> (char *var)</td></tr>
<tr class="separator:a2bd0630d27e20f38de4c753ca68e2282"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a40756214f69d1c40ad70b64ae9fdc08d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a40756214f69d1c40ad70b64ae9fdc08d">_init</a></td></tr>
<tr class="separator:a40756214f69d1c40ad70b64ae9fdc08d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a08560f2b4885250c586c550f2d7af"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a45a08560f2b4885250c586c550f2d7af">_dataptr</a></td></tr>
<tr class="separator:a45a08560f2b4885250c586c550f2d7af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a895aefe990ffe9af66bb5cd4e37d3579"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a895aefe990ffe9af66bb5cd4e37d3579">_filename</a></td></tr>
<tr class="separator:a895aefe990ffe9af66bb5cd4e37d3579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c2f62a9907553e5feb1ecef65c6c386"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a2c2f62a9907553e5feb1ecef65c6c386">_dir</a></td></tr>
<tr class="separator:a2c2f62a9907553e5feb1ecef65c6c386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d93159b6eee0cb302451621106f61c7"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5d93159b6eee0cb302451621106f61c7">_subdir</a></td></tr>
<tr class="separator:a5d93159b6eee0cb302451621106f61c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d06c3aed77fb9e118b337bed557928"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a87d06c3aed77fb9e118b337bed557928">_envvar</a></td></tr>
<tr class="separator:a87d06c3aed77fb9e118b337bed557928"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Database of default hybridization torsional rules and SMARTS-defined <a class="el" href="classOpenBabel_1_1OBRotorRule.shtml" title="A rule for torsional conformer searching, defined by a SMARTS pattern. ">OBRotorRule</a> objects. </p>
<p>Use to automatically evaluate potentially rotatable bonds to generate lists of dihedral angles to consider. e.g., rotamer/conformer energy calculations </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1ebbe90c85b0e7b9b09f3e29719ee447"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ebbe90c85b0e7b9b09f3e29719ee447">&sect;&nbsp;</a></span>OBRotorRules()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotorRules.shtml">OBRotorRules</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af304ead8beb29ed38f8c15491031f122"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af304ead8beb29ed38f8c15491031f122">&sect;&nbsp;</a></span>~OBRotorRules()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBRotorRules.shtml">OBRotorRules</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae59fef8af62e52629bf2576e34a26801"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae59fef8af62e52629bf2576e34a26801">&sect;&nbsp;</a></span>ParseLine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParseLine </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Specified by particular table classes (parses an individual data line) </p>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a9a84dbfb089769dec48cd6f6eca1057b">OBGlobalDataBase</a>.</p>

</div>
</div>
<a id="aab7c531e5ffc5174e57a85e853931534"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab7c531e5ffc5174e57a85e853931534">&sect;&nbsp;</a></span>GetSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t GetSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of rotor rules </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a5ebfe2dd02a8ba2b7e84f1f6d55c74cd">OBGlobalDataBase</a>.</p>

</div>
</div>
<a id="adeb3abe4bd6c3443362068379a6b665e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adeb3abe4bd6c3443362068379a6b665e">&sect;&nbsp;</a></span>SetFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetFilename </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the filename to be used for the database. Default = torlib.txt. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#addb143a5ae2f64420fa692a14489288b">OBRotorList::Init()</a>.</p>

</div>
</div>
<a id="ab7527366ed1bf39da7123e3ad65d96ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7527366ed1bf39da7123e3ad65d96ad">&sect;&nbsp;</a></span>GetRotorIncrements()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetRotorIncrements </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>refs</em>[4], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>vals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>delta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determine the torsional angles to evaluate based on the database </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mol</td><td>molecule to evaluate </td></tr>
    <tr><td class="paramname">bond</td><td>rotatable bond to evaluate </td></tr>
    <tr><td class="paramname">refs</td><td>set to be the atom indexes (in mol) of the dihedral angle </td></tr>
    <tr><td class="paramname">vals</td><td>set to be the list of angles to evaluate (in radians) </td></tr>
    <tr><td class="paramname">delta</td><td>potential dihedral angle steps (in degrees) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3bf46031273468cc23720df1c59d3e85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bf46031273468cc23720df1c59d3e85">&sect;&nbsp;</a></span>Quiet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Quiet </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Turn off debugging output from <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">GetRotorIncrements()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a15266fb4e5ef334d0de47b203d420f22">OBRotorList::SetQuiet()</a>.</p>

</div>
</div>
<a id="a1e3b6d38df0786ccf7f938d60e386aae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e3b6d38df0786ccf7f938d60e386aae">&sect;&nbsp;</a></span>Init()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Init </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read in the data file, falling back as needed. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#addb143a5ae2f64420fa692a14489288b">OBRotorList::Init()</a>.</p>

</div>
</div>
<a id="a49002f92ad6a1c71d7f9148271770b7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49002f92ad6a1c71d7f9148271770b7a">&sect;&nbsp;</a></span>SetReadDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetReadDirectory </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>dir</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the directory before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed. ">Init()</a> </p>

</div>
</div>
<a id="a2bd0630d27e20f38de4c753ca68e2282"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bd0630d27e20f38de4c753ca68e2282">&sect;&nbsp;</a></span>SetEnvironmentVariable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetEnvironmentVariable </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>var</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the environment variable to use before calling <a class="el" href="classOpenBabel_1_1OBGlobalDataBase.shtml#a1e3b6d38df0786ccf7f938d60e386aae" title="Read in the data file, falling back as needed. ">Init()</a> </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a40756214f69d1c40ad70b64ae9fdc08d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40756214f69d1c40ad70b64ae9fdc08d">&sect;&nbsp;</a></span>_init</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool _init</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Whether the data been read already. </p>

</div>
</div>
<a id="a45a08560f2b4885250c586c550f2d7af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45a08560f2b4885250c586c550f2d7af">&sect;&nbsp;</a></span>_dataptr</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* _dataptr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default data table if file is unreadable. </p>

</div>
</div>
<a id="a895aefe990ffe9af66bb5cd4e37d3579"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a895aefe990ffe9af66bb5cd4e37d3579">&sect;&nbsp;</a></span>_filename</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _filename</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>File to search for. </p>

</div>
</div>
<a id="a2c2f62a9907553e5feb1ecef65c6c386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c2f62a9907553e5feb1ecef65c6c386">&sect;&nbsp;</a></span>_dir</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _dir</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Data directory for file if _envvar fails. </p>

</div>
</div>
<a id="a5d93159b6eee0cb302451621106f61c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d93159b6eee0cb302451621106f61c7">&sect;&nbsp;</a></span>_subdir</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _subdir</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subdirectory (if using environment variable) </p>

</div>
</div>
<a id="a87d06c3aed77fb9e118b337bed557928"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87d06c3aed77fb9e118b337bed557928">&sect;&nbsp;</a></span>_envvar</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _envvar</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Environment variable to check first. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="rotor_8h_source.shtml">rotor.h</a></li>
<li><a class="el" href="rotor_8cpp.shtml">rotor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
