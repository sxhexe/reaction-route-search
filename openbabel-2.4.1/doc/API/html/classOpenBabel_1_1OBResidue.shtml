<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBResidue Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBResidue-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBResidue Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="residue_8h_source.shtml">openbabel/residue.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBResidue:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classOpenBabel_1_1OBResidue.png" usemap="#OBResidue_map" alt=""/>
  <map id="OBResidue_map" name="OBResidue_map">
<area href="classOpenBabel_1_1OBBase.shtml" title="Base Class. " alt="OBBase" shape="rect" coords="0,0,75,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a209fe98baf20de8f3a9fa0e18ab1a397"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a209fe98baf20de8f3a9fa0e18ab1a397">OBResidue</a> (void)</td></tr>
<tr class="separator:a209fe98baf20de8f3a9fa0e18ab1a397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1c75d4e3f23b57af05e7da7ff2a81f1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue</a> (const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;)</td></tr>
<tr class="separator:ab1c75d4e3f23b57af05e7da7ff2a81f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef348075604c0cede393f255546b1a17"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#aef348075604c0cede393f255546b1a17">~OBResidue</a> (void)</td></tr>
<tr class="separator:aef348075604c0cede393f255546b1a17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19156f703dd34221b38ad4a787648771"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;)</td></tr>
<tr class="separator:a19156f703dd34221b38ad4a787648771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad08955a5355b302e5054fb10239d4d40"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">AddAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr class="separator:ad08955a5355b302e5054fb10239d4d40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcb2b5249a58b4d8f546c3216b86651c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#adcb2b5249a58b4d8f546c3216b86651c">InsertAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr class="separator:adcb2b5249a58b4d8f546c3216b86651c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af56cd8bd9860e5f011d802d88dc571c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">RemoveAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr class="separator:af56cd8bd9860e5f011d802d88dc571c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad12fd937da5f4b0c4562888252fe214b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">Clear</a> ()</td></tr>
<tr class="separator:ad12fd937da5f4b0c4562888252fe214b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cf274421c8b6705d6470aa7e57b41ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">SetName</a> (const std::string &amp;resname)</td></tr>
<tr class="separator:a7cf274421c8b6705d6470aa7e57b41ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85b5552b9b6d699aed667f4587b9e94b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a85b5552b9b6d699aed667f4587b9e94b">SetNum</a> (const unsigned int resnum)</td></tr>
<tr class="separator:a85b5552b9b6d699aed667f4587b9e94b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d578b82c73df3d3add2d854473e6350"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1d578b82c73df3d3add2d854473e6350">SetNum</a> (const std::string resnum)</td></tr>
<tr class="separator:a1d578b82c73df3d3add2d854473e6350"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a035ecf9b12c0d62081d0a3e5a9d3c98c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a035ecf9b12c0d62081d0a3e5a9d3c98c">SetChain</a> (const char chain)</td></tr>
<tr class="separator:a035ecf9b12c0d62081d0a3e5a9d3c98c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1cd4d44ddc8e40dad300a43d6288c53"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac1cd4d44ddc8e40dad300a43d6288c53">SetChainNum</a> (const unsigned int chainnum)</td></tr>
<tr class="separator:ac1cd4d44ddc8e40dad300a43d6288c53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a0264682b159979a57ee478b19111c8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1a0264682b159979a57ee478b19111c8">SetIdx</a> (const unsigned int idx)</td></tr>
<tr class="separator:a1a0264682b159979a57ee478b19111c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14e810666acc3e8fdbf7d1e2025532f8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a14e810666acc3e8fdbf7d1e2025532f8">SetInsertionCode</a> (const char insertioncode)</td></tr>
<tr class="separator:a14e810666acc3e8fdbf7d1e2025532f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4945233e0066b2b6fbfbe0ed73ae7bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad4945233e0066b2b6fbfbe0ed73ae7bc">SetAtomID</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, const std::string &amp;id)</td></tr>
<tr class="separator:ad4945233e0066b2b6fbfbe0ed73ae7bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52f53369a63eabccdc3ecf5f02b9d211"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a52f53369a63eabccdc3ecf5f02b9d211">SetHetAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, bool hetatm)</td></tr>
<tr class="separator:a52f53369a63eabccdc3ecf5f02b9d211"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18a42bad6c8fa5ee0a23cbd292cfe034"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a18a42bad6c8fa5ee0a23cbd292cfe034">SetSerialNum</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, unsigned int sernum)</td></tr>
<tr class="separator:a18a42bad6c8fa5ee0a23cbd292cfe034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0edfb6f7c5b68f4de45c0c90d155203c"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a0edfb6f7c5b68f4de45c0c90d155203c">GetName</a> (void) const</td></tr>
<tr class="separator:a0edfb6f7c5b68f4de45c0c90d155203c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a817edbdbe14e2d1a2df56766fbf1e86e"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a817edbdbe14e2d1a2df56766fbf1e86e">GetNum</a> (void)</td></tr>
<tr class="separator:a817edbdbe14e2d1a2df56766fbf1e86e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71456aeaa4af6240da0bc162ef15a7be"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a71456aeaa4af6240da0bc162ef15a7be">GetNumString</a> (void)</td></tr>
<tr class="separator:a71456aeaa4af6240da0bc162ef15a7be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a195ecb7e7db319e951f123b8a2097a19"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a195ecb7e7db319e951f123b8a2097a19">GetNumAtoms</a> () const</td></tr>
<tr class="separator:a195ecb7e7db319e951f123b8a2097a19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb948f24a90d8d093a8b3149cd07cdb4"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#acb948f24a90d8d093a8b3149cd07cdb4">GetChain</a> (void) const</td></tr>
<tr class="separator:acb948f24a90d8d093a8b3149cd07cdb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac842dad96ada23b1414044592c5af928"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac842dad96ada23b1414044592c5af928">GetChainNum</a> (void) const</td></tr>
<tr class="separator:ac842dad96ada23b1414044592c5af928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7233ac2529837c5d72f67975c4bc7fea"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7233ac2529837c5d72f67975c4bc7fea">GetIdx</a> (void) const</td></tr>
<tr class="separator:a7233ac2529837c5d72f67975c4bc7fea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9f3a7ae09fe06cce4b7229c2f107c33"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab9f3a7ae09fe06cce4b7229c2f107c33">GetResKey</a> (void) const</td></tr>
<tr class="separator:ab9f3a7ae09fe06cce4b7229c2f107c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d6c997608740f84f6e86d3a756525e6"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a9d6c997608740f84f6e86d3a756525e6">GetAtoms</a> (void) const</td></tr>
<tr class="separator:a9d6c997608740f84f6e86d3a756525e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22b1621d9012f2f83460a4a6ad591cdd"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a22b1621d9012f2f83460a4a6ad591cdd">GetBonds</a> (bool exterior=true) const</td></tr>
<tr class="separator:a22b1621d9012f2f83460a4a6ad591cdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae32099b1c748e14f61a01b84e39d2f09"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae32099b1c748e14f61a01b84e39d2f09">GetAtomID</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const</td></tr>
<tr class="separator:ae32099b1c748e14f61a01b84e39d2f09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0ca2290ae7126d8a38bf71741a25b1a"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab0ca2290ae7126d8a38bf71741a25b1a">GetSerialNum</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const</td></tr>
<tr class="separator:ab0ca2290ae7126d8a38bf71741a25b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa29ff230293cb482eced8f9150f01f7"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#afa29ff230293cb482eced8f9150f01f7">GetInsertionCode</a> (void) const</td></tr>
<tr class="separator:afa29ff230293cb482eced8f9150f01f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a406de87fb23ddfc5d863943174cd7b5c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a406de87fb23ddfc5d863943174cd7b5c">GetAminoAcidProperty</a> (int) const</td></tr>
<tr class="separator:a406de87fb23ddfc5d863943174cd7b5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03e155dc76ccf2017adead3ce70b55e1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a03e155dc76ccf2017adead3ce70b55e1">GetAtomProperty</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, int) const</td></tr>
<tr class="separator:a03e155dc76ccf2017adead3ce70b55e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6506f3d08a3990dbd8f295fef83182cd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a6506f3d08a3990dbd8f295fef83182cd">GetResidueProperty</a> (int) const</td></tr>
<tr class="separator:a6506f3d08a3990dbd8f295fef83182cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdd62b9f57599767a533540bf8c4517c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#afdd62b9f57599767a533540bf8c4517c">IsHetAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const</td></tr>
<tr class="separator:afdd62b9f57599767a533540bf8c4517c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac23fa87688e71a26d173520718ffe31d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac23fa87688e71a26d173520718ffe31d">IsResidueType</a> (int) const</td></tr>
<tr class="separator:ac23fa87688e71a26d173520718ffe31d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdc8ffeb0749b563e1108a9ceaa0b394"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *, <a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *)</td></tr>
<tr class="separator:abdc8ffeb0749b563e1108a9ceaa0b394"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">CastAndClear</a> (bool clear=true)</td></tr>
<tr class="separator:ab2f0cea1c162bbe8dd603528a3da5c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a6c35f6a88ad291ed821c856e4d887f"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a0a6c35f6a88ad291ed821c856e4d887f">GetTitle</a> (bool replaceNewlines=true) const</td></tr>
<tr class="separator:a0a6c35f6a88ad291ed821c856e4d887f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a366c8a142b8c16554597e82320dfd0e0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">SetTitle</a> (const char *)</td></tr>
<tr class="separator:a366c8a142b8c16554597e82320dfd0e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr class="memitem:ae3b07b388e733d5a0e9ee9654a4411a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae3b07b388e733d5a0e9ee9654a4411a1">BeginAtoms</a> ()</td></tr>
<tr class="separator:ae3b07b388e733d5a0e9ee9654a4411a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81afb84c73fe3e57e8edd5a472e175f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a81afb84c73fe3e57e8edd5a472e175f6">EndAtoms</a> ()</td></tr>
<tr class="separator:a81afb84c73fe3e57e8edd5a472e175f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12eedf98fdb8bc28d0e2a7e26fbdd4b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a12eedf98fdb8bc28d0e2a7e26fbdd4b1">BeginAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&gt;::iterator &amp;i)</td></tr>
<tr class="separator:a12eedf98fdb8bc28d0e2a7e26fbdd4b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a023e2340ed33047e1557c367c6c65f9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a023e2340ed33047e1557c367c6c65f9a">NextAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&gt;::iterator &amp;i)</td></tr>
<tr class="separator:a023e2340ed33047e1557c367c6c65f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Generic data handling methods (via OBGenericData)</div></td></tr>
<tr class="memitem:a86dd58fc1da5652d70e823fa77cc1637"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a86dd58fc1da5652d70e823fa77cc1637">HasData</a> (const std::string &amp;)</td></tr>
<tr class="separator:a86dd58fc1da5652d70e823fa77cc1637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01b429ffcaf47cf265acd439ed2faca0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>
<tr class="separator:a01b429ffcaf47cf265acd439ed2faca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cb103f12f49d86132ece200000da830"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6cb103f12f49d86132ece200000da830">HasData</a> (const unsigned int type)</td></tr>
<tr class="separator:a6cb103f12f49d86132ece200000da830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a797e5b4d20b6233062d2fdba78a08e06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>
<tr class="separator:a797e5b4d20b6233062d2fdba78a08e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab586df65e3f115b69510820b34098ce9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>
<tr class="separator:ab586df65e3f115b69510820b34098ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a030adad5b052ff3d390f13e1f981201e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a030adad5b052ff3d390f13e1f981201e">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&gt; &amp;)</td></tr>
<tr class="separator:a030adad5b052ff3d390f13e1f981201e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa068a2a7b64d2ee73aedb8c6e3cf0c4c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">DeleteData</a> (const std::string &amp;s)</td></tr>
<tr class="separator:aa068a2a7b64d2ee73aedb8c6e3cf0c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6b0ec89bfea783825b3b466e4dbc00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr class="separator:adb6b0ec89bfea783825b3b466e4dbc00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6f692332837387535e337413d0100de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa6f692332837387535e337413d0100de">CloneData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr class="separator:aa6f692332837387535e337413d0100de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de970fc10391cb7f06c77e3b492f582"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a2de970fc10391cb7f06c77e3b492f582">DataSize</a> () const</td></tr>
<tr class="separator:a2de970fc10391cb7f06c77e3b492f582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee672d91b694547fb072fdaa8e03cfe9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aee672d91b694547fb072fdaa8e03cfe9">GetData</a> (const unsigned int type)</td></tr>
<tr class="separator:aee672d91b694547fb072fdaa8e03cfe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f0eade8b5924eec28ad50f0ce2031f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a22f0eade8b5924eec28ad50f0ce2031f">GetData</a> (const std::string &amp;)</td></tr>
<tr class="separator:a22f0eade8b5924eec28ad50f0ce2031f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483b277678a8ca48998742c80985fd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>
<tr class="separator:a483b277678a8ca48998742c80985fd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a551ff0a0ed3fa58745dff0ecacdaa"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>
<tr class="separator:a90a551ff0a0ed3fa58745dff0ecacdaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa959146c3f7b458009dc04f61b5a2e7f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa959146c3f7b458009dc04f61b5a2e7f">GetData</a> (<a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source)</td></tr>
<tr class="separator:aa959146c3f7b458009dc04f61b5a2e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb56decc1b824c9fad980fc22e1d778c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#afb56decc1b824c9fad980fc22e1d778c">GetAllData</a> (const unsigned int type)</td></tr>
<tr class="separator:afb56decc1b824c9fad980fc22e1d778c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15b47c65393d46fde62d1f0a19bcf9fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a> ()</td></tr>
<tr class="separator:a15b47c65393d46fde62d1f0a19bcf9fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a117c836710dd3aaa8748509262a5c280"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">EndData</a> ()</td></tr>
<tr class="separator:a117c836710dd3aaa8748509262a5c280"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6bb6ed5c064e3957d8dd03aba51e61f7"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>
<tr class="separator:a6bb6ed5c064e3957d8dd03aba51e61f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a1219a011a5e0ec59c67a5a873d81986c"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a></td></tr>
<tr class="separator:a1219a011a5e0ec59c67a5a873d81986c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdc35302d8b2ddbbd0cb48de079527eb"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#abdc35302d8b2ddbbd0cb48de079527eb">_chain</a></td></tr>
<tr class="separator:abdc35302d8b2ddbbd0cb48de079527eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad719c79a18fbf14911233bb6e6119370"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad719c79a18fbf14911233bb6e6119370">_aakey</a></td></tr>
<tr class="separator:ad719c79a18fbf14911233bb6e6119370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa09358b69ef09f768b7316011e53af22"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#aa09358b69ef09f768b7316011e53af22">_reskey</a></td></tr>
<tr class="separator:aa09358b69ef09f768b7316011e53af22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8397c5248306c4a2ea1aa0b79539cbb"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad8397c5248306c4a2ea1aa0b79539cbb">_resnum</a></td></tr>
<tr class="separator:ad8397c5248306c4a2ea1aa0b79539cbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5b2a83968919b021e1189020fe3492a"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae5b2a83968919b021e1189020fe3492a">_resname</a></td></tr>
<tr class="separator:ae5b2a83968919b021e1189020fe3492a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69e7f9f0b8907d0c326452d789e934da"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a69e7f9f0b8907d0c326452d789e934da">_insertioncode</a></td></tr>
<tr class="separator:a69e7f9f0b8907d0c326452d789e934da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af48bc2090137ce8be5ab8b86125734b7"><td class="memItemLeft" align="right" valign="top">std::vector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#af48bc2090137ce8be5ab8b86125734b7">_hetatm</a></td></tr>
<tr class="separator:af48bc2090137ce8be5ab8b86125734b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a520b293262a31a65c78c69b6177f871c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a520b293262a31a65c78c69b6177f871c">_atomid</a></td></tr>
<tr class="separator:a520b293262a31a65c78c69b6177f871c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfa0f02c4ad4146e7250fb38a89b9387"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#abfa0f02c4ad4146e7250fb38a89b9387">_atoms</a></td></tr>
<tr class="separator:abfa0f02c4ad4146e7250fb38a89b9387"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51fea0daea9bfeed01133d1a7376523a"><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a51fea0daea9bfeed01133d1a7376523a">_sernum</a></td></tr>
<tr class="separator:a51fea0daea9bfeed01133d1a7376523a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7811cf8aadbf3b3477c560b0ef2f797"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>
<tr class="separator:af7811cf8aadbf3b3477c560b0ef2f797"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Residue information. </p>
<p>The residue information is drawn from PDB or MOL2 files (or similar), which track biomolecule information, and are stored in the <a class="el" href="classOpenBabel_1_1OBResidue.shtml" title="Residue information. ">OBResidue</a> class. OBResidues are stored inside the <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> class and <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> classes. The residue information for an atom can be requested in the following way: </p><div class="fragment"><div class="line">OBAtom *atom;</div><div class="line"><a class="code" href="classOpenBabel_1_1OBResidue.shtml#a209fe98baf20de8f3a9fa0e18ab1a397">OBResidue</a> *r;</div><div class="line">atom = mol.<a class="code" href="classOpenBabel_1_1OBMol.shtml#a5595d8755d9ec6f539143f7d059124d0">GetAtom</a>(1);</div><div class="line">r = atom-&gt;<a class="code" href="classOpenBabel_1_1OBAtom.shtml#ae8533afa0177a165ca51941872f85aee">GetResidue</a>();</div></div><!-- fragment --><p> The residue information for a molecule can be manipulated too: </p><div class="fragment"><div class="line">cout &lt;&lt; <span class="stringliteral">&quot;This molecule has &quot;</span> &lt;&lt; mol.<a class="code" href="classOpenBabel_1_1OBMol.shtml#af641753d0dbc017405280791048f0d88">NumResidues</a>() &lt;&lt; <span class="stringliteral">&quot; residues.&quot;</span> &lt;&lt; endl;</div><div class="line"><a class="code" href="classOpenBabel_1_1OBResidue.shtml#a209fe98baf20de8f3a9fa0e18ab1a397">OBResidue</a> *r;</div><div class="line">r = mol.<a class="code" href="classOpenBabel_1_1OBMol.shtml#a8e992bd318407a72c7e745653716ae2c">GetResidue</a>(1);</div></div><!-- fragment --> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a209fe98baf20de8f3a9fa0e18ab1a397"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a209fe98baf20de8f3a9fa0e18ab1a397">&sect;&nbsp;</a></span>OBResidue() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a id="ab1c75d4e3f23b57af05e7da7ff2a81f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1c75d4e3f23b57af05e7da7ff2a81f1">&sect;&nbsp;</a></span>OBResidue() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>

</div>
</div>
<a id="aef348075604c0cede393f255546b1a17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef348075604c0cede393f255546b1a17">&sect;&nbsp;</a></span>~OBResidue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a19156f703dd34221b38ad4a787648771"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19156f703dd34221b38ad4a787648771">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad08955a5355b302e5054fb10239d4d40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad08955a5355b302e5054fb10239d4d40">&sect;&nbsp;</a></span>AddAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add <code>atom</code> to this residue. Updates the atom via <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184" title="Attach an OBResidue res as containing this atom. ">OBAtom::SetResidue()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#adcb2b5249a58b4d8f546c3216b86651c">OBResidue::InsertAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="adcb2b5249a58b4d8f546c3216b86651c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcb2b5249a58b4d8f546c3216b86651c">&sect;&nbsp;</a></span>InsertAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void InsertAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add <code>atom</code> to this residue. Updates the atom via <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184" title="Attach an OBResidue res as containing this atom. ">OBAtom::SetResidue()</a> </p>

</div>
</div>
<a id="af56cd8bd9860e5f011d802d88dc571c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af56cd8bd9860e5f011d802d88dc571c7">&sect;&nbsp;</a></span>RemoveAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RemoveAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove <code>atom</code> from this residue and update the atom. </p>

</div>
</div>
<a id="ad12fd937da5f4b0c4562888252fe214b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad12fd937da5f4b0c4562888252fe214b">&sect;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Clear any and all data associated with this residue. Updates all atoms included in the residue, as well as calling <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object. ">OBBase::Clear()</a> for any generic data. </p><dl class="section return"><dt>Returns</dt><dd>Whether the call was successful. </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b">OBBase</a>.</p>

</div>
</div>
<a id="a7cf274421c8b6705d6470aa7e57b41ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cf274421c8b6705d6470aa7e57b41ab">&sect;&nbsp;</a></span>SetName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetName </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>resname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the name of this residue (e.g., "ALA"). Use 3-char PDB standard names. <a href="http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_79.html">http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_79.html</a> MODRES records for modified residues: <a href="http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_36.html">http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_36.html</a>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="a85b5552b9b6d699aed667f4587b9e94b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85b5552b9b6d699aed667f4587b9e94b">&sect;&nbsp;</a></span>SetNum() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNum </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>resnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the residue number (in the sequence) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="a1d578b82c73df3d3add2d854473e6350"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d578b82c73df3d3add2d854473e6350">&sect;&nbsp;</a></span>SetNum() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNum </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>resnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a035ecf9b12c0d62081d0a3e5a9d3c98c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a035ecf9b12c0d62081d0a3e5a9d3c98c">&sect;&nbsp;</a></span>SetChain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChain </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>chain</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the chain ID for this residue. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="ac1cd4d44ddc8e40dad300a43d6288c53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1cd4d44ddc8e40dad300a43d6288c53">&sect;&nbsp;</a></span>SetChainNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChainNum </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>chainnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the chain number for this residue. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a1a0264682b159979a57ee478b19111c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a0264682b159979a57ee478b19111c8">&sect;&nbsp;</a></span>SetIdx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the internal index of this residue in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>. Intended mostly for internal use </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad656115fdd6749ef7ad8394ee687f375">OBMol::AddResidue()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7662758d1fe46ab3a3392b1970c6a656">OBMol::NewResidue()</a>.</p>

</div>
</div>
<a id="a14e810666acc3e8fdbf7d1e2025532f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14e810666acc3e8fdbf7d1e2025532f8">&sect;&nbsp;</a></span>SetInsertionCode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetInsertionCode </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>insertioncode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set PDB insertion code information for this residue. This allows consecutive residues to have the same number. Some communities that work in a well-conserved structural world use this, e.g. for immunoglobulins. </p>

</div>
</div>
<a id="ad4945233e0066b2b6fbfbe0ed73ae7bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4945233e0066b2b6fbfbe0ed73ae7bc">&sect;&nbsp;</a></span>SetAtomID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAtomID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the character code ID for an ATOM record for the supplied atom This does nothing if the supplied atom is not found in the residue </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7acd1c4965f682ab6f25f7cfa30f34dd">OBMol::AddNewHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="a52f53369a63eabccdc3ecf5f02b9d211"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52f53369a63eabccdc3ecf5f02b9d211">&sect;&nbsp;</a></span>SetHetAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHetAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>hetatm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="a18a42bad6c8fa5ee0a23cbd292cfe034"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18a42bad6c8fa5ee0a23cbd292cfe034">&sect;&nbsp;</a></span>SetSerialNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSerialNum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>sernum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the atomic serial number for a given atom (see <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml" title="Defines a map between serial numbers (e.g., in a PDB file) and OBAtom objects inside a molecule...">OBSerialNums</a>) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChainsParser.shtml#ac717b59426373eedc1ebb4442b3d7b3e">OBChainsParser::~OBChainsParser()</a>.</p>

</div>
</div>
<a id="a0edfb6f7c5b68f4de45c0c90d155203c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0edfb6f7c5b68f4de45c0c90d155203c">&sect;&nbsp;</a></span>GetName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string GetName </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The residue name </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a817edbdbe14e2d1a2df56766fbf1e86e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a817edbdbe14e2d1a2df56766fbf1e86e">&sect;&nbsp;</a></span>GetNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The residue number (in the sequence) </dd></dl>

</div>
</div>
<a id="a71456aeaa4af6240da0bc162ef15a7be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71456aeaa4af6240da0bc162ef15a7be">&sect;&nbsp;</a></span>GetNumString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string GetNumString </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a195ecb7e7db319e951f123b8a2097a19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a195ecb7e7db319e951f123b8a2097a19">&sect;&nbsp;</a></span>GetNumAtoms()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumAtoms </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of atoms in this residue </dd></dl>

</div>
</div>
<a id="acb948f24a90d8d093a8b3149cd07cdb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb948f24a90d8d093a8b3149cd07cdb4">&sect;&nbsp;</a></span>GetChain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char GetChain </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The ID of the chain which includes this residue </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="ac842dad96ada23b1414044592c5af928"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac842dad96ada23b1414044592c5af928">&sect;&nbsp;</a></span>GetChainNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetChainNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of the chain which includes this residue </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a7233ac2529837c5d72f67975c4bc7fea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7233ac2529837c5d72f67975c4bc7fea">&sect;&nbsp;</a></span>GetIdx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIdx </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The internal index of this residue in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a202a80d2d05f526fa5186dfb797558d6">OBMol::DeleteResidue()</a>.</p>

</div>
</div>
<a id="ab9f3a7ae09fe06cce4b7229c2f107c33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9f3a7ae09fe06cce4b7229c2f107c33">&sect;&nbsp;</a></span>GetResKey()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetResKey </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The residue key (i.e., an entry in the <a class="el" href="namespaceOpenBabel_1_1OBResidueIndex.shtml" title="Residue names (index into Residue[] array) ">OBResidueIndex</a> namespace) </dd></dl>

</div>
</div>
<a id="a9d6c997608740f84f6e86d3a756525e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d6c997608740f84f6e86d3a756525e6">&sect;&nbsp;</a></span>GetAtoms()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt; GetAtoms </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a vector of all atoms in this residue </dd></dl>

</div>
</div>
<a id="a22b1621d9012f2f83460a4a6ad591cdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22b1621d9012f2f83460a4a6ad591cdd">&sect;&nbsp;</a></span>GetBonds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt; GetBonds </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>exterior</em> = <code>true</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all bonds in this residue. <code>exterior</code> includes bonds to atoms outside this residue (default is true) </dd></dl>

</div>
</div>
<a id="ae32099b1c748e14f61a01b84e39d2f09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae32099b1c748e14f61a01b84e39d2f09">&sect;&nbsp;</a></span>GetAtomID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string GetAtomID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the atom ID (character code) for the supplied atom or "" if the atom is not found in this residue </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a03e155dc76ccf2017adead3ce70b55e1">OBResidue::GetAtomProperty()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="ab0ca2290ae7126d8a38bf71741a25b1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0ca2290ae7126d8a38bf71741a25b1a">&sect;&nbsp;</a></span>GetSerialNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetSerialNum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the serial number of the supplied atom (uses <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml" title="Defines a map between serial numbers (e.g., in a PDB file) and OBAtom objects inside a molecule...">OBSerialNums</a>) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="afa29ff230293cb482eced8f9150f01f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa29ff230293cb482eced8f9150f01f7">&sect;&nbsp;</a></span>GetInsertionCode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char GetInsertionCode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The Insertion Code (i.e., an extra position motivated by a multiple sequence alignment against a template with defined numbers) </dd></dl>

</div>
</div>
<a id="a406de87fb23ddfc5d863943174cd7b5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a406de87fb23ddfc5d863943174cd7b5c">&sect;&nbsp;</a></span>GetAminoAcidProperty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetAminoAcidProperty </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>property</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether this residue has the supplied amino acid property defined from the <a class="el" href="namespaceOpenBabel_1_1OBAminoAcidProperty.shtml" title="Residue property definitions. ">OBAminoAcidProperty</a> namespace </dd></dl>

</div>
</div>
<a id="a03e155dc76ccf2017adead3ce70b55e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03e155dc76ccf2017adead3ce70b55e1">&sect;&nbsp;</a></span>GetAtomProperty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetAtomProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>property</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether atom <code>a</code> has the supplied residue atom property defined from the <a class="el" href="namespaceOpenBabel_1_1OBResidueAtomProperty.shtml" title="Residue atom properties. ">OBResidueAtomProperty</a> namespace </dd></dl>

</div>
</div>
<a id="a6506f3d08a3990dbd8f295fef83182cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6506f3d08a3990dbd8f295fef83182cd">&sect;&nbsp;</a></span>GetResidueProperty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetResidueProperty </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>property</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Whether this residue has the supplied property defined from the <a class="el" href="namespaceOpenBabel_1_1OBResidueProperty.shtml" title="Residue types. ">OBResidueProperty</a> namespace </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a03e155dc76ccf2017adead3ce70b55e1">OBResidue::GetAtomProperty()</a>.</p>

</div>
</div>
<a id="afdd62b9f57599767a533540bf8c4517c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdd62b9f57599767a533540bf8c4517c">&sect;&nbsp;</a></span>IsHetAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHetAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>If the given atom is a HETATM record </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a03e155dc76ccf2017adead3ce70b55e1">OBResidue::GetAtomProperty()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#acf8e48cf13e5ccecd7eaf64bf4393081">OBAtom::IsHetAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="ac23fa87688e71a26d173520718ffe31d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac23fa87688e71a26d173520718ffe31d">&sect;&nbsp;</a></span>IsResidueType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsResidueType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>restype</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>If this residue matches the supplied <code>restype</code> Set by <a class="el" href="namespaceOpenBabel.shtml#a91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a> </dd></dl>

</div>
</div>
<a id="ae3b07b388e733d5a0e9ee9654a4411a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3b07b388e733d5a0e9ee9654a4411a1">&sect;&nbsp;</a></span>BeginAtoms()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a> BeginAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator to the beginning of the atom list in this residue </dd></dl>

</div>
</div>
<a id="a81afb84c73fe3e57e8edd5a472e175f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81afb84c73fe3e57e8edd5a472e175f6">&sect;&nbsp;</a></span>EndAtoms()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a> EndAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator to the end of the atom list in this residue </dd></dl>

</div>
</div>
<a id="a12eedf98fdb8bc28d0e2a7e26fbdd4b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12eedf98fdb8bc28d0e2a7e26fbdd4b1">&sect;&nbsp;</a></span>BeginAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * BeginAtom </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&gt;::iterator &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the iterator <code>i</code> to the beginning of the atom list in this residue </p><dl class="section return"><dt>Returns</dt><dd>The first atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a023e2340ed33047e1557c367c6c65f9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a023e2340ed33047e1557c367c6c65f9a">&sect;&nbsp;</a></span>NextAtom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * NextAtom </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&gt;::iterator &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Increment the iterator <code>i</code> </p><dl class="section return"><dt>Returns</dt><dd>The next atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueAtomIter.shtml#add4575e56919bdb15840087bc98b74d5">OBResidueAtomIter::operator++()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="abdc8ffeb0749b563e1108a9ceaa0b394"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdc8ffeb0749b563e1108a9ceaa0b394">&sect;&nbsp;</a></span>DoTransformations()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Perform a set of transformations specified by the user</p>
<p>Typically these are program options to filter or modify an object For example, see <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab72bba66cc9e40fb3b657a30d87bbe6d">OBMol::ClassDescription()</a> Base type does nothing </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol</a>.</p>

</div>
</div>
<a id="a6bb6ed5c064e3957d8dd03aba51e61f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bb6ed5c064e3957d8dd03aba51e61f7">&sect;&nbsp;</a></span>ClassDescription()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A list of descriptions of command-line options for <a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations()</a> </dd></dl>

</div>
</div>
<a id="ab2f0cea1c162bbe8dd603528a3da5c87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2f0cea1c162bbe8dd603528a3da5c87">&sect;&nbsp;</a></span>CastAndClear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T* CastAndClear </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clear</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>By default clears the object. Called from ReadMolecule of most format classes. </p>

</div>
</div>
<a id="a0a6c35f6a88ad291ed821c856e4d887f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a6c35f6a88ad291ed821c856e4d887f">&sect;&nbsp;</a></span>GetTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* GetTitle </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>replaceNewlines</em> = <code>true</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base type does nothing Made virtual around r3535 to simplify code which passes around OBBase*. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a2ac1fac8a7d7ad373c39710b62b3e0a7">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a id="a366c8a142b8c16554597e82320dfd0e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a366c8a142b8c16554597e82320dfd0e0">&sect;&nbsp;</a></span>SetTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetTitle </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#acfe3b729dc90c4c5e21684e3a60653af">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a id="a86dd58fc1da5652d70e823fa77cc1637"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86dd58fc1da5652d70e823fa77cc1637">&sect;&nbsp;</a></span>HasData() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a4e794d96851deaad479e17b30928a3cd">OBDescriptor::MatchPairData()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a2a5208bfd803385534526eea570bf6b0">OBMoleculeFormat::ReadChemObjectImpl()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="a01b429ffcaf47cf265acd439ed2faca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01b429ffcaf47cf265acd439ed2faca0">&sect;&nbsp;</a></span>HasData() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists </dd></dl>

</div>
</div>
<a id="a6cb103f12f49d86132ece200000da830"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cb103f12f49d86132ece200000da830">&sect;&nbsp;</a></span>HasData() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether the generic attribute/value pair exists, for a given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a id="a797e5b4d20b6233062d2fdba78a08e06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a797e5b4d20b6233062d2fdba78a08e06">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete any data matching the given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1a089d9c827830b5a9a2e644b267e510">OBDescriptor::DeleteProperties()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a2d560c7f2e4a9fdd1814ed8e09bd02">OBMol::RenumberAtoms()</a>.</p>

</div>
</div>
<a id="ab586df65e3f115b69510820b34098ce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab586df65e3f115b69510820b34098ce9">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>gd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete the given generic data from this object. </p>

</div>
</div>
<a id="a030adad5b052ff3d390f13e1f981201e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a030adad5b052ff3d390f13e1f981201e">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>vg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete all of the given generic data from this object. </p>

</div>
</div>
<a id="aa068a2a7b64d2ee73aedb8c6e3cf0c4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">&sect;&nbsp;</a></span>DeleteData() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes the generic data with the specified attribute, returning false if not found. </p>

</div>
</div>
<a id="adb6b0ec89bfea783825b3b466e4dbc00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb6b0ec89bfea783825b3b466e4dbc00">&sect;&nbsp;</a></span>SetData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a data object; does nothing if d==NULL. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ac14285658929bd5af45a1560cb1ec15b">AliasData::RevertToAliasForm()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="aa6f692332837387535e337413d0100de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6f692332837387535e337413d0100de">&sect;&nbsp;</a></span>CloneData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CloneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a copy of a data object; does nothing if d == NULL </p><dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>.</p>

</div>
</div>
<a id="a2de970fc10391cb7f06c77e3b492f582"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2de970fc10391cb7f06c77e3b492f582">&sect;&nbsp;</a></span>DataSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t DataSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data. ">OBGenericData</a> items attached to this molecule. </dd></dl>

</div>
</div>
<a id="aee672d91b694547fb072fdaa8e03cfe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee672d91b694547fb072fdaa8e03cfe9">&sect;&nbsp;</a></span>GetData() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the first matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> or NULL if nothing matches </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#ab88f0bdd58be5fe56020b4502bbfb837">OBDepict::AddAtomLabels()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="namespaceOpenBabel.shtml#a632be87a51811b515f7e9a5fc18e4476">OpenBabel::extract_thermochemistry()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a48b73b591ecad6e541b5ceedb6618715">OBMolAngleIter::OBMolAngleIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a15547553c4072355819acbcf350dde77">OBMolRingIter::OBMolRingIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml#a7746689f376b4b9f2fc6a103dc101d38">OBMolTorsionIter::OBMolTorsionIter()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>.</p>

</div>
</div>
<a id="a22f0eade8b5924eec28ad50f0ce2031f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f0eade8b5924eec28ad50f0ce2031f">&sect;&nbsp;</a></span>GetData() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a id="a483b277678a8ca48998742c80985fd0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483b277678a8ca48998742c80985fd0b">&sect;&nbsp;</a></span>GetData() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a id="a90a551ff0a0ed3fa58745dff0ecacdaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a551ff0a0ed3fa58745dff0ecacdaa">&sect;&nbsp;</a></span>GetData() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all data, suitable for iterating </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a id="aa959146c3f7b458009dc04f61b5a2e7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa959146c3f7b458009dc04f61b5a2e7f">&sect;&nbsp;</a></span>GetData() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>all data with a specific origin, suitable for iterating </dd></dl>

</div>
</div>
<a id="afb56decc1b824c9fad980fc22e1d778c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb56decc1b824c9fad980fc22e1d778c">&sect;&nbsp;</a></span>GetAllData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetAllData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the all matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses. ">OBGenericDataType</a> or an empty vector if nothing matches </dd></dl>
<dl class="section since"><dt>Since</dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3258f54a86ddc9ebb8968ebdb2aeab37">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3280c4291f365e26ad615eb38c877b25">OBBuilder::CorrectStereoBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5531433a3edb03cf74aecd1ffadfe3a7">OpenBabel::DeleteStereoOnAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a id="a15b47c65393d46fde62d1f0a19bcf9fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15b47c65393d46fde62d1f0a19bcf9fa">&sect;&nbsp;</a></span>BeginData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> BeginData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator pointing to the beginning of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a id="a117c836710dd3aaa8748509262a5c280"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a117c836710dd3aaa8748509262a5c280">&sect;&nbsp;</a></span>EndData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> EndData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An iterator pointing to the end of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a1219a011a5e0ec59c67a5a873d81986c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1219a011a5e0ec59c67a5a873d81986c">&sect;&nbsp;</a></span>_idx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _idx</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Residue index (i.e., internal index in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class. ">OBMol</a>) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7233ac2529837c5d72f67975c4bc7fea">OBResidue::GetIdx()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1a0264682b159979a57ee478b19111c8">OBResidue::SetIdx()</a>.</p>

</div>
</div>
<a id="abdc35302d8b2ddbbd0cb48de079527eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdc35302d8b2ddbbd0cb48de079527eb">&sect;&nbsp;</a></span>_chain</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char _chain</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Chain ID. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#acb948f24a90d8d093a8b3149cd07cdb4">OBResidue::GetChain()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac842dad96ada23b1414044592c5af928">OBResidue::GetChainNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a035ecf9b12c0d62081d0a3e5a9d3c98c">OBResidue::SetChain()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac1cd4d44ddc8e40dad300a43d6288c53">OBResidue::SetChainNum()</a>.</p>

</div>
</div>
<a id="ad719c79a18fbf14911233bb6e6119370"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad719c79a18fbf14911233bb6e6119370">&sect;&nbsp;</a></span>_aakey</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _aakey</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Amino Acid key ID &ndash; see <a class="el" href="namespaceOpenBabel.shtml#a91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a406de87fb23ddfc5d863943174cd7b5c">OBResidue::GetAminoAcidProperty()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">OBResidue::SetName()</a>.</p>

</div>
</div>
<a id="aa09358b69ef09f768b7316011e53af22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa09358b69ef09f768b7316011e53af22">&sect;&nbsp;</a></span>_reskey</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int _reskey</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Residue key ID &ndash; see <a class="el" href="namespaceOpenBabel.shtml#a91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a6506f3d08a3990dbd8f295fef83182cd">OBResidue::GetResidueProperty()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab9f3a7ae09fe06cce4b7229c2f107c33">OBResidue::GetResKey()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac23fa87688e71a26d173520718ffe31d">OBResidue::IsResidueType()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">OBResidue::SetName()</a>.</p>

</div>
</div>
<a id="ad8397c5248306c4a2ea1aa0b79539cbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8397c5248306c4a2ea1aa0b79539cbb">&sect;&nbsp;</a></span>_resnum</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _resnum</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Residue number (i.e., in file) 23, 1B, etc. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a817edbdbe14e2d1a2df56766fbf1e86e">OBResidue::GetNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a71456aeaa4af6240da0bc162ef15a7be">OBResidue::GetNumString()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a85b5552b9b6d699aed667f4587b9e94b">OBResidue::SetNum()</a>.</p>

</div>
</div>
<a id="ae5b2a83968919b021e1189020fe3492a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5b2a83968919b021e1189020fe3492a">&sect;&nbsp;</a></span>_resname</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string _resname</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Residue text name. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a0edfb6f7c5b68f4de45c0c90d155203c">OBResidue::GetName()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">OBResidue::SetName()</a>.</p>

</div>
</div>
<a id="a69e7f9f0b8907d0c326452d789e934da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69e7f9f0b8907d0c326452d789e934da">&sect;&nbsp;</a></span>_insertioncode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char _insertioncode</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>PBB insertion code. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#afa29ff230293cb482eced8f9150f01f7">OBResidue::GetInsertionCode()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>.</p>

</div>
</div>
<a id="af48bc2090137ce8be5ab8b86125734b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af48bc2090137ce8be5ab8b86125734b7">&sect;&nbsp;</a></span>_hetatm</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;bool&gt; _hetatm</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Is a given atom a HETAM. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#afdd62b9f57599767a533540bf8c4517c">OBResidue::IsHetAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a52f53369a63eabccdc3ecf5f02b9d211">OBResidue::SetHetAtom()</a>.</p>

</div>
</div>
<a id="a520b293262a31a65c78c69b6177f871c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a520b293262a31a65c78c69b6177f871c">&sect;&nbsp;</a></span>_atomid</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; _atomid</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Residue atom text IDs. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae32099b1c748e14f61a01b84e39d2f09">OBResidue::GetAtomID()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad4945233e0066b2b6fbfbe0ed73ae7bc">OBResidue::SetAtomID()</a>.</p>

</div>
</div>
<a id="abfa0f02c4ad4146e7250fb38a89b9387"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfa0f02c4ad4146e7250fb38a89b9387">&sect;&nbsp;</a></span>_atoms</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*&gt; _atoms</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List of <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class. ">OBAtom</a> in this residue. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a12eedf98fdb8bc28d0e2a7e26fbdd4b1">OBResidue::BeginAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae32099b1c748e14f61a01b84e39d2f09">OBResidue::GetAtomID()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a9d6c997608740f84f6e86d3a756525e6">OBResidue::GetAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a22b1621d9012f2f83460a4a6ad591cdd">OBResidue::GetBonds()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a195ecb7e7db319e951f123b8a2097a19">OBResidue::GetNumAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab0ca2290ae7126d8a38bf71741a25b1a">OBResidue::GetSerialNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#afdd62b9f57599767a533540bf8c4517c">OBResidue::IsHetAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a023e2340ed33047e1557c367c6c65f9a">OBResidue::NextAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad4945233e0066b2b6fbfbe0ed73ae7bc">OBResidue::SetAtomID()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a52f53369a63eabccdc3ecf5f02b9d211">OBResidue::SetHetAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a18a42bad6c8fa5ee0a23cbd292cfe034">OBResidue::SetSerialNum()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#aef348075604c0cede393f255546b1a17">OBResidue::~OBResidue()</a>.</p>

</div>
</div>
<a id="a51fea0daea9bfeed01133d1a7376523a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51fea0daea9bfeed01133d1a7376523a">&sect;&nbsp;</a></span>_sernum</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned int&gt; _sernum</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List of serial numbers. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab0ca2290ae7126d8a38bf71741a25b1a">OBResidue::GetSerialNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a18a42bad6c8fa5ee0a23cbd292cfe034">OBResidue::SetSerialNum()</a>.</p>

</div>
</div>
<a id="af7811cf8aadbf3b3477c560b0ef2f797"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7811cf8aadbf3b3477c560b0ef2f797">&sect;&nbsp;</a></span>_vdata</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; _vdata</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Custom data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aafa7e4623d4c3c0305b5523ca8a77e14">OBMol::OBMol()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="residue_8h_source.shtml">residue.h</a></li>
<li><a class="el" href="residue_8cpp.shtml">residue.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
