<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBQuery Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a></li><li class="navelem"><a class="el" href="classOpenBabel_1_1OBQuery.shtml">OBQuery</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classOpenBabel_1_1OBQuery-members.shtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OBQuery Class Reference<div class="ingroups"><a class="el" href="group__substructure.shtml">Substructure Searching</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="query_8h_source.shtml">openbabel/query.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a389be5417270db13420cb84e47e0ee18"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#a389be5417270db13420cb84e47e0ee18">~OBQuery</a> ()</td></tr>
<tr class="separator:a389be5417270db13420cb84e47e0ee18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f0695eb7d6ff6321032d88655ae8d25"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#a2f0695eb7d6ff6321032d88655ae8d25">NumAtoms</a> () const</td></tr>
<tr class="separator:a2f0695eb7d6ff6321032d88655ae8d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7358c2c15c4c0d88ae2489f586bc8e0b"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#a7358c2c15c4c0d88ae2489f586bc8e0b">NumBonds</a> () const</td></tr>
<tr class="separator:a7358c2c15c4c0d88ae2489f586bc8e0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8891603983f0543447f82d9d14db2a19"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#a8891603983f0543447f82d9d14db2a19">GetAtoms</a> () const</td></tr>
<tr class="separator:a8891603983f0543447f82d9d14db2a19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d409144ba9c3b93a75d360bfddb0a8"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#a47d409144ba9c3b93a75d360bfddb0a8">GetBonds</a> () const</td></tr>
<tr class="separator:a47d409144ba9c3b93a75d360bfddb0a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12a48456430ba1b7add013f33486c30a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#a12a48456430ba1b7add013f33486c30a">GetBond</a> (<a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> *begin, <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> *end) const</td></tr>
<tr class="separator:a12a48456430ba1b7add013f33486c30a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b2e350f82ce51a8ba52af162907529e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#a3b2e350f82ce51a8ba52af162907529e">AddAtom</a> (<a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> *atom)</td></tr>
<tr class="separator:a3b2e350f82ce51a8ba52af162907529e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac617b0afd430d9674c41faa179ee375c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#ac617b0afd430d9674c41faa179ee375c">AddBond</a> (<a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a> *bond)</td></tr>
<tr class="separator:ac617b0afd430d9674c41faa179ee375c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ad60d0800edfffd66821572b5ffcb5448"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#ad60d0800edfffd66821572b5ffcb5448">m_atoms</a></td></tr>
<tr class="separator:ad60d0800edfffd66821572b5ffcb5448"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedc99f93df4bc475dec73bc04192eedc"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBQuery.shtml#aedc99f93df4bc475dec73bc04192eedc">m_bonds</a></td></tr>
<tr class="separator:aedc99f93df4bc475dec73bc04192eedc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A substructure query. </p>
<p>See <a class="el" href="group__substructure.shtml">Substructure Search</a> for more information. </p><dl class="section since"><dt>Since</dt><dd>version 2.3 </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a389be5417270db13420cb84e47e0ee18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a389be5417270db13420cb84e47e0ee18">&sect;&nbsp;</a></span>~OBQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBQuery.shtml">OBQuery</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2f0695eb7d6ff6321032d88655ae8d25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f0695eb7d6ff6321032d88655ae8d25">&sect;&nbsp;</a></span>NumAtoms()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of atoms in the query. </dd></dl>

</div>
</div>
<a id="a7358c2c15c4c0d88ae2489f586bc8e0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7358c2c15c4c0d88ae2489f586bc8e0b">&sect;&nbsp;</a></span>NumBonds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of bonds in the query. </dd></dl>

</div>
</div>
<a id="a8891603983f0543447f82d9d14db2a19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8891603983f0543447f82d9d14db2a19">&sect;&nbsp;</a></span>GetAtoms()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a>*&gt;&amp; GetAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>std::vector with pointers to the query atoms. </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abfb2d29563ee1a81f2e70a51d55c83cf">OpenBabel::CompileAutomorphismQuery()</a>, and <a class="el" href="group__substructure.shtml#ga9307ec0c55a4d2b7ee933b53a3a84ce5">OpenBabel::CompileMoleculeQuery()</a>.</p>

</div>
</div>
<a id="a47d409144ba9c3b93a75d360bfddb0a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47d409144ba9c3b93a75d360bfddb0a8">&sect;&nbsp;</a></span>GetBonds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a>*&gt;&amp; GetBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>std::vector with pointers to the query bonds. </dd></dl>

</div>
</div>
<a id="a12a48456430ba1b7add013f33486c30a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12a48456430ba1b7add013f33486c30a">&sect;&nbsp;</a></span>GetBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a>* GetBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> *&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> *&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The query bond between <code>begin</code> and <code>end</code>. If there is no bond between <code>begin</code> and <code>end</code>, this function returns 0. </dd></dl>

</div>
</div>
<a id="a3b2e350f82ce51a8ba52af162907529e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b2e350f82ce51a8ba52af162907529e">&sect;&nbsp;</a></span>AddAtom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Add a query atom to the query. This function steals the pointer. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abfb2d29563ee1a81f2e70a51d55c83cf">OpenBabel::CompileAutomorphismQuery()</a>, and <a class="el" href="group__substructure.shtml#ga9307ec0c55a4d2b7ee933b53a3a84ce5">OpenBabel::CompileMoleculeQuery()</a>.</p>

</div>
</div>
<a id="ac617b0afd430d9674c41faa179ee375c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac617b0afd430d9674c41faa179ee375c">&sect;&nbsp;</a></span>AddBond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AddBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Add a query atom to the query. This function steals the pointer. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abfb2d29563ee1a81f2e70a51d55c83cf">OpenBabel::CompileAutomorphismQuery()</a>, and <a class="el" href="group__substructure.shtml#ga9307ec0c55a4d2b7ee933b53a3a84ce5">OpenBabel::CompileMoleculeQuery()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ad60d0800edfffd66821572b5ffcb5448"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad60d0800edfffd66821572b5ffcb5448">&sect;&nbsp;</a></span>m_atoms</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml">OBQueryAtom</a>*&gt; m_atoms</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aedc99f93df4bc475dec73bc04192eedc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedc99f93df4bc475dec73bc04192eedc">&sect;&nbsp;</a></span>m_bonds</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBQueryBond.shtml">OBQueryBond</a>*&gt; m_bonds</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="query_8h_source.shtml">query.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- end content -->
<!--#include file="footer.html" -->
<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.4.1.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Mon Oct 10 2016 12:39:31 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.8.12.
</div>
</body>
</html>
